

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Sun Aug 21 12:59:27 2022

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	text225,global,reloc=2,class=CODE,delta=1
   250                           	psect	text226,global,reloc=2,class=CODE,delta=1
   251                           	psect	text227,global,reloc=2,class=CODE,delta=1
   252                           	psect	text228,global,reloc=2,class=CODE,delta=1
   253                           	psect	text229,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258  0000                     
   259 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   260  0000                     
   261 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   262  0000                     
   263 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   264 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   265 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   266 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   267 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   268 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   269 ;;_LORAWAN_LinkCheckCallback$3516	offset	0
   270 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   271 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   272 ;;_DutyCycleCallback$2268	offset	0
   273 ;;DutyCycleCallback@minim	offset	4
   274 ;;DutyCycleCallback@i	offset	8
   275 ;;DutyCycleCallback@found	offset	9
   276 ;;DutyCycleCallback@param	offset=-1 (param)
   277 ;;AutomaticReplyCallback@param	offset=-1 (param)
   278 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   279 ;;AckRetransmissionCallback@param	offset=-1 (param)
   280 ;;_param	offset=-1 (param)
   281 ;;_UpdateJoinSuccessState$3533	offset	0
   282 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   283                           
   284                           	psect	idataCOMRAM
   285  0078AE                     __pidataCOMRAM:
   286                           	opt stack 0
   287                           
   288                           ;initializer for _randx
   289  0078AE  0001               	dw	1
   290  0078B0  0000               	dw	0
   291                           
   292                           ;initializer for _ticksToScheduledInterrupt
   293  0078B2  FFFF               	dw	65535
   294  0078B4  FFFF               	dw	65535
   295                           
   296                           ;initializer for _ONE_HOUR_TIMEOUT_COUNTS
   297  0078B6  04                 	db	4
   298                           
   299                           	psect	idataBANK1
   300  0070DE                     __pidataBANK1:
   301                           	opt stack 0
   302                           
   303                           ;initializer for GenerateSubkey@F7870
   304  0070DE  00                 	db	0
   305  0070DF  00                 	db	0
   306  0070E0  00                 	db	0
   307  0070E1  00                 	db	0
   308  0070E2  00                 	db	0
   309  0070E3  00                 	db	0
   310  0070E4  00                 	db	0
   311  0070E5  00                 	db	0
   312  0070E6  00                 	db	0
   313  0070E7  00                 	db	0
   314  0070E8  00                 	db	0
   315  0070E9  00                 	db	0
   316  0070EA  00                 	db	0
   317  0070EB  00                 	db	0
   318  0070EC  00                 	db	0
   319  0070ED  87                 	db	135
   320                           
   321                           ;initializer for _TimeToSend
   322  0070EE  01                 	db	1
   323                           
   324                           ;initializer for _appSKey
   325  0070EF  DD                 	db	221
   326  0070F0  32                 	db	50
   327  0070F1  54                 	db	84
   328  0070F2  F0                 	db	240
   329  0070F3  8D                 	db	141
   330  0070F4  55                 	db	85
   331  0070F5  D6                 	db	214
   332  0070F6  52                 	db	82
   333  0070F7  E7                 	db	231
   334  0070F8  73                 	db	115
   335  0070F9  0B                 	db	11
   336  0070FA  BC                 	db	188
   337  0070FB  26                 	db	38
   338  0070FC  3E                 	db	62
   339  0070FD  0A                 	db	10
   340  0070FE  DA                 	db	218
   341                           
   342                           ;initializer for _nwkSKey
   343  0070FF  75                 	db	117
   344  007100  E0                 	db	224
   345  007101  66                 	db	102
   346  007102  1A                 	db	26
   347  007103  A0                 	db	160
   348  007104  BC                 	db	188
   349  007105  21                 	db	33
   350  007106  E4                 	db	228
   351  007107  4B                 	db	75
   352  007108  57                 	db	87
   353  007109  21                 	db	33
   354  00710A  B0                 	db	176
   355  00710B  D6                 	db	214
   356  00710C  30                 	db	48
   357  00710D  F7                 	db	247
   358  00710E  B2                 	db	178
   359                           
   360                           	psect	mediumconst
   361  00FE6C                     __pmediumconst:
   362                           	opt stack 0
   363  00FE6C  00                 	db	0
   364  00FE6D                     _STable:
   365                           	opt stack 0
   366  00FE6D  63                 	db	99
   367  00FE6E  7C                 	db	124
   368  00FE6F  77                 	db	119
   369  00FE70  7B                 	db	123
   370  00FE71  F2                 	db	242
   371  00FE72  6B                 	db	107
   372  00FE73  6F                 	db	111
   373  00FE74  C5                 	db	197
   374  00FE75  30                 	db	48
   375  00FE76  01                 	db	1
   376  00FE77  67                 	db	103
   377  00FE78  2B                 	db	43
   378  00FE79  FE                 	db	254
   379  00FE7A  D7                 	db	215
   380  00FE7B  AB                 	db	171
   381  00FE7C  76                 	db	118
   382  00FE7D  CA                 	db	202
   383  00FE7E  82                 	db	130
   384  00FE7F  C9                 	db	201
   385  00FE80  7D                 	db	125
   386  00FE81  FA                 	db	250
   387  00FE82  59                 	db	89
   388  00FE83  47                 	db	71
   389  00FE84  F0                 	db	240
   390  00FE85  AD                 	db	173
   391  00FE86  D4                 	db	212
   392  00FE87  A2                 	db	162
   393  00FE88  AF                 	db	175
   394  00FE89  9C                 	db	156
   395  00FE8A  A4                 	db	164
   396  00FE8B  72                 	db	114
   397  00FE8C  C0                 	db	192
   398  00FE8D  B7                 	db	183
   399  00FE8E  FD                 	db	253
   400  00FE8F  93                 	db	147
   401  00FE90  26                 	db	38
   402  00FE91  36                 	db	54
   403  00FE92  3F                 	db	63
   404  00FE93  F7                 	db	247
   405  00FE94  CC                 	db	204
   406  00FE95  34                 	db	52
   407  00FE96  A5                 	db	165
   408  00FE97  E5                 	db	229
   409  00FE98  F1                 	db	241
   410  00FE99  71                 	db	113
   411  00FE9A  D8                 	db	216
   412  00FE9B  31                 	db	49
   413  00FE9C  15                 	db	21
   414  00FE9D  04                 	db	4
   415  00FE9E  C7                 	db	199
   416  00FE9F  23                 	db	35
   417  00FEA0  C3                 	db	195
   418  00FEA1  18                 	db	24
   419  00FEA2  96                 	db	150
   420  00FEA3  05                 	db	5
   421  00FEA4  9A                 	db	154
   422  00FEA5  07                 	db	7
   423  00FEA6  12                 	db	18
   424  00FEA7  80                 	db	128
   425  00FEA8  E2                 	db	226
   426  00FEA9  EB                 	db	235
   427  00FEAA  27                 	db	39
   428  00FEAB  B2                 	db	178
   429  00FEAC  75                 	db	117
   430  00FEAD  09                 	db	9
   431  00FEAE  83                 	db	131
   432  00FEAF  2C                 	db	44
   433  00FEB0  1A                 	db	26
   434  00FEB1  1B                 	db	27
   435  00FEB2  6E                 	db	110
   436  00FEB3  5A                 	db	90
   437  00FEB4  A0                 	db	160
   438  00FEB5  52                 	db	82
   439  00FEB6  3B                 	db	59
   440  00FEB7  D6                 	db	214
   441  00FEB8  B3                 	db	179
   442  00FEB9  29                 	db	41
   443  00FEBA  E3                 	db	227
   444  00FEBB  2F                 	db	47
   445  00FEBC  84                 	db	132
   446  00FEBD  53                 	db	83
   447  00FEBE  D1                 	db	209
   448  00FEBF  00                 	db	0
   449  00FEC0  ED                 	db	237
   450  00FEC1  20                 	db	32
   451  00FEC2  FC                 	db	252
   452  00FEC3  B1                 	db	177
   453  00FEC4  5B                 	db	91
   454  00FEC5  6A                 	db	106
   455  00FEC6  CB                 	db	203
   456  00FEC7  BE                 	db	190
   457  00FEC8  39                 	db	57
   458  00FEC9  4A                 	db	74
   459  00FECA  4C                 	db	76
   460  00FECB  58                 	db	88
   461  00FECC  CF                 	db	207
   462  00FECD  D0                 	db	208
   463  00FECE  EF                 	db	239
   464  00FECF  AA                 	db	170
   465  00FED0  FB                 	db	251
   466  00FED1  43                 	db	67
   467  00FED2  4D                 	db	77
   468  00FED3  33                 	db	51
   469  00FED4  85                 	db	133
   470  00FED5  45                 	db	69
   471  00FED6  F9                 	db	249
   472  00FED7  02                 	db	2
   473  00FED8  7F                 	db	127
   474  00FED9  50                 	db	80
   475  00FEDA  3C                 	db	60
   476  00FEDB  9F                 	db	159
   477  00FEDC  A8                 	db	168
   478  00FEDD  51                 	db	81
   479  00FEDE  A3                 	db	163
   480  00FEDF  40                 	db	64
   481  00FEE0  8F                 	db	143
   482  00FEE1  92                 	db	146
   483  00FEE2  9D                 	db	157
   484  00FEE3  38                 	db	56
   485  00FEE4  F5                 	db	245
   486  00FEE5  BC                 	db	188
   487  00FEE6  B6                 	db	182
   488  00FEE7  DA                 	db	218
   489  00FEE8  21                 	db	33
   490  00FEE9  10                 	db	16
   491  00FEEA  FF                 	db	255
   492  00FEEB  F3                 	db	243
   493  00FEEC  D2                 	db	210
   494  00FEED  CD                 	db	205
   495  00FEEE  0C                 	db	12
   496  00FEEF  13                 	db	19
   497  00FEF0  EC                 	db	236
   498  00FEF1  5F                 	db	95
   499  00FEF2  97                 	db	151
   500  00FEF3  44                 	db	68
   501  00FEF4  17                 	db	23
   502  00FEF5  C4                 	db	196
   503  00FEF6  A7                 	db	167
   504  00FEF7  7E                 	db	126
   505  00FEF8  3D                 	db	61
   506  00FEF9  64                 	db	100
   507  00FEFA  5D                 	db	93
   508  00FEFB  19                 	db	25
   509  00FEFC  73                 	db	115
   510  00FEFD  60                 	db	96
   511  00FEFE  81                 	db	129
   512  00FEFF  4F                 	db	79
   513  00FF00  DC                 	db	220
   514  00FF01  22                 	db	34
   515  00FF02  2A                 	db	42
   516  00FF03  90                 	db	144
   517  00FF04  88                 	db	136
   518  00FF05  46                 	db	70
   519  00FF06  EE                 	db	238
   520  00FF07  B8                 	db	184
   521  00FF08  14                 	db	20
   522  00FF09  DE                 	db	222
   523  00FF0A  5E                 	db	94
   524  00FF0B  0B                 	db	11
   525  00FF0C  DB                 	db	219
   526  00FF0D  E0                 	db	224
   527  00FF0E  32                 	db	50
   528  00FF0F  3A                 	db	58
   529  00FF10  0A                 	db	10
   530  00FF11  49                 	db	73
   531  00FF12  06                 	db	6
   532  00FF13  24                 	db	36
   533  00FF14  5C                 	db	92
   534  00FF15  C2                 	db	194
   535  00FF16  D3                 	db	211
   536  00FF17  AC                 	db	172
   537  00FF18  62                 	db	98
   538  00FF19  91                 	db	145
   539  00FF1A  95                 	db	149
   540  00FF1B  E4                 	db	228
   541  00FF1C  79                 	db	121
   542  00FF1D  E7                 	db	231
   543  00FF1E  C8                 	db	200
   544  00FF1F  37                 	db	55
   545  00FF20  6D                 	db	109
   546  00FF21  8D                 	db	141
   547  00FF22  D5                 	db	213
   548  00FF23  4E                 	db	78
   549  00FF24  A9                 	db	169
   550  00FF25  6C                 	db	108
   551  00FF26  56                 	db	86
   552  00FF27  F4                 	db	244
   553  00FF28  EA                 	db	234
   554  00FF29  65                 	db	101
   555  00FF2A  7A                 	db	122
   556  00FF2B  AE                 	db	174
   557  00FF2C  08                 	db	8
   558  00FF2D  BA                 	db	186
   559  00FF2E  78                 	db	120
   560  00FF2F  25                 	db	37
   561  00FF30  2E                 	db	46
   562  00FF31  1C                 	db	28
   563  00FF32  A6                 	db	166
   564  00FF33  B4                 	db	180
   565  00FF34  C6                 	db	198
   566  00FF35  E8                 	db	232
   567  00FF36  DD                 	db	221
   568  00FF37  74                 	db	116
   569  00FF38  1F                 	db	31
   570  00FF39  4B                 	db	75
   571  00FF3A  BD                 	db	189
   572  00FF3B  8B                 	db	139
   573  00FF3C  8A                 	db	138
   574  00FF3D  70                 	db	112
   575  00FF3E  3E                 	db	62
   576  00FF3F  B5                 	db	181
   577  00FF40  66                 	db	102
   578  00FF41  48                 	db	72
   579  00FF42  03                 	db	3
   580  00FF43  F6                 	db	246
   581  00FF44  0E                 	db	14
   582  00FF45  61                 	db	97
   583  00FF46  35                 	db	53
   584  00FF47  57                 	db	87
   585  00FF48  B9                 	db	185
   586  00FF49  86                 	db	134
   587  00FF4A  C1                 	db	193
   588  00FF4B  1D                 	db	29
   589  00FF4C  9E                 	db	158
   590  00FF4D  E1                 	db	225
   591  00FF4E  F8                 	db	248
   592  00FF4F  98                 	db	152
   593  00FF50  11                 	db	17
   594  00FF51  69                 	db	105
   595  00FF52  D9                 	db	217
   596  00FF53  8E                 	db	142
   597  00FF54  94                 	db	148
   598  00FF55  9B                 	db	155
   599  00FF56  1E                 	db	30
   600  00FF57  87                 	db	135
   601  00FF58  E9                 	db	233
   602  00FF59  CE                 	db	206
   603  00FF5A  55                 	db	85
   604  00FF5B  28                 	db	40
   605  00FF5C  DF                 	db	223
   606  00FF5D  8C                 	db	140
   607  00FF5E  A1                 	db	161
   608  00FF5F  89                 	db	137
   609  00FF60  0D                 	db	13
   610  00FF61  BF                 	db	191
   611  00FF62  E6                 	db	230
   612  00FF63  42                 	db	66
   613  00FF64  68                 	db	104
   614  00FF65  41                 	db	65
   615  00FF66  99                 	db	153
   616  00FF67  2D                 	db	45
   617  00FF68  0F                 	db	15
   618  00FF69  B0                 	db	176
   619  00FF6A  54                 	db	84
   620  00FF6B  BB                 	db	187
   621  00FF6C  16                 	db	22
   622  00FF6D                     __end_of_STable:
   623                           	opt stack 0
   624  00FF6D                     _maxPayloadSize:
   625                           	opt stack 0
   626  00FF6D  33                 	db	51
   627  00FF6E  33                 	db	51
   628  00FF6F  33                 	db	51
   629  00FF70  73                 	db	115
   630  00FF71  F2                 	db	242
   631  00FF72  F2                 	db	242
   632  00FF73  F2                 	db	242
   633  00FF74  38                 	db	56
   634  00FF75                     __end_of_maxPayloadSize:
   635                           	opt stack 0
   636  00FF75                     _modulation:
   637                           	opt stack 0
   638  00FF75  01                 	db	1
   639  00FF76  01                 	db	1
   640  00FF77  01                 	db	1
   641  00FF78  01                 	db	1
   642  00FF79  01                 	db	1
   643  00FF7A  01                 	db	1
   644  00FF7B  01                 	db	1
   645  00FF7C  00                 	db	0
   646  00FF7D                     __end_of_modulation:
   647                           	opt stack 0
   648  00FF7D                     _rxWindowOffset:
   649                           	opt stack 0
   650  00FF7D  DF                 	db	223
   651  00FF7E  CE                 	db	206
   652  00FF7F  C6                 	db	198
   653  00FF80  C2                 	db	194
   654  00FF81  BE                 	db	190
   655  00FF82  BC                 	db	188
   656  00FF83  F1                 	db	241
   657  00FF84  FE                 	db	254
   658  00FF85                     __end_of_rxWindowOffset:
   659                           	opt stack 0
   660  00FF85                     _rxWindowSize:
   661                           	opt stack 0
   662  00FF85  08                 	db	8
   663  00FF86  0A                 	db	10
   664  00FF87  0E                 	db	14
   665  00FF88  1A                 	db	26
   666  00FF89  31                 	db	49
   667  00FF8A  58                 	db	88
   668  00FF8B  3C                 	db	60
   669  00FF8C  08                 	db	8
   670  00FF8D                     __end_of_rxWindowSize:
   671                           	opt stack 0
   672  00FF8D                     _bandwidth:
   673                           	opt stack 0
   674  00FF8D  07                 	db	7
   675  00FF8E  07                 	db	7
   676  00FF8F  07                 	db	7
   677  00FF90  07                 	db	7
   678  00FF91  07                 	db	7
   679  00FF92  07                 	db	7
   680  00FF93  08                 	db	8
   681  00FF94                     __end_of_bandwidth:
   682                           	opt stack 0
   683  00FF94                     _macEndDevCmdReplyLen:
   684                           	opt stack 0
   685  00FF94  01                 	db	1
   686  00FF95  02                 	db	2
   687  00FF96  01                 	db	1
   688  00FF97  02                 	db	2
   689  00FF98  03                 	db	3
   690  00FF99  02                 	db	2
   691  00FF9A  01                 	db	1
   692  00FF9B                     __end_of_macEndDevCmdReplyLen:
   693                           	opt stack 0
   694  00FF9B                     _spreadingFactor:
   695                           	opt stack 0
   696  00FF9B  0C                 	db	12
   697  00FF9C  0B                 	db	11
   698  00FF9D  0A                 	db	10
   699  00FF9E  09                 	db	9
   700  00FF9F  08                 	db	8
   701  00FFA0  07                 	db	7
   702  00FFA1  07                 	db	7
   703  00FFA2                     __end_of_spreadingFactor:
   704                           	opt stack 0
   705  00FFA2                     _txPower868:
   706                           	opt stack 0
   707  00FFA2  14                 	db	20
   708  00FFA3  0E                 	db	14
   709  00FFA4  0B                 	db	11
   710  00FFA5  08                 	db	8
   711  00FFA6  05                 	db	5
   712  00FFA7  02                 	db	2
   713  00FFA8                     __end_of_txPower868:
   714                           	opt stack 0
   715  00FFA8                     _DefaultChannels433:
   716                           	opt stack 0
   717  00FFA8  B9D8               	dw	47576
   718  00FFAA  19D1               	dw	6609
   719  00FFAC  01                 	db	1
   720  00FFAD  50                 	db	80
   721  00FFAE  012E               	dw	302
   722  00FFB0  0000               	dw	0
   723  00FFB2  0000               	dw	0
   724  00FFB4  01                 	db	1
   725  00FFB5  FF                 	db	255
   726  00FFB6  C718               	dw	50968
   727  00FFB8  19D4               	dw	6612
   728  00FFBA  01                 	db	1
   729  00FFBB  50                 	db	80
   730  00FFBC  012E               	dw	302
   731  00FFBE  0000               	dw	0
   732  00FFC0  0000               	dw	0
   733  00FFC2  01                 	db	1
   734  00FFC3  FF                 	db	255
   735  00FFC4  D458               	dw	54360
   736  00FFC6  19D7               	dw	6615
   737  00FFC8  01                 	db	1
   738  00FFC9  50                 	db	80
   739  00FFCA  012E               	dw	302
   740  00FFCC  0000               	dw	0
   741  00FFCE  0000               	dw	0
   742  00FFD0  01                 	db	1
   743  00FFD1  FF                 	db	255
   744  00FFD2                     __end_of_DefaultChannels433:
   745                           	opt stack 0
   746  00FFD2                     _DefaultChannels868:
   747                           	opt stack 0
   748  00FFD2  27A0               	dw	10144
   749  00FFD4  33BE               	dw	13246
   750  00FFD6  01                 	db	1
   751  00FFD7  50                 	db	80
   752  00FFD8  012E               	dw	302
   753  00FFDA  0000               	dw	0
   754  00FFDC  0000               	dw	0
   755  00FFDE  01                 	db	1
   756  00FFDF  FF                 	db	255
   757  00FFE0  34E0               	dw	13536
   758  00FFE2  33C1               	dw	13249
   759  00FFE4  01                 	db	1
   760  00FFE5  50                 	db	80
   761  00FFE6  012E               	dw	302
   762  00FFE8  0000               	dw	0
   763  00FFEA  0000               	dw	0
   764  00FFEC  01                 	db	1
   765  00FFED  FF                 	db	255
   766  00FFEE  4220               	dw	16928
   767  00FFF0  33C4               	dw	13252
   768  00FFF2  01                 	db	1
   769  00FFF3  50                 	db	80
   770  00FFF4  012E               	dw	302
   771  00FFF6  0000               	dw	0
   772  00FFF8  0000               	dw	0
   773  00FFFA  01                 	db	1
   774  00FFFB  FF                 	db	255
   775  00FFFC                     __end_of_DefaultChannels868:
   776                           	opt stack 0
   777  00FFFC                     _FskSyncWordBuff:
   778                           	opt stack 0
   779  00FFFC  C1                 	db	193
   780  00FFFD  94                 	db	148
   781  00FFFE  C1                 	db	193
   782  00FFFF                     __end_of_FskSyncWordBuff:
   783                           	opt stack 0
   784  00FFFF  00                 	db	0	; dummy byte at the end
   785  0000                     
   786                           	psect	nvCOMRAM
   787  00005B                     __pnvCOMRAM:
   788                           	opt stack 0
   789  00005B                     _timer1ReloadVal:
   790                           	opt stack 0
   791  00005B                     	ds	2
   792  00005D                     _timer3ReloadVal:
   793                           	opt stack 0
   794  00005D                     	ds	2
   795                           
   796                           	psect	nvBANK1
   797  0001E4                     __pnvBANK1:
   798                           	opt stack 0
   799  0001E4                     _INT1_InterruptHandler:
   800                           	opt stack 0
   801  0001E4                     	ds	2
   802  0001E6                     _INT2_InterruptHandler:
   803                           	opt stack 0
   804  0001E6                     	ds	2
   805  0001E8                     _IOCB4_InterruptHandler:
   806                           	opt stack 0
   807  0001E8                     	ds	2
   808  0001EA                     _TMR1_InterruptHandler:
   809                           	opt stack 0
   810  0001EA                     	ds	2
   811  0001EC                     _TMR3_InterruptHandler:
   812                           	opt stack 0
   813  0001EC                     	ds	2
   814  0000                     _ANSELA	set	3896
   815  0000                     _ANSELB	set	3897
   816  0000                     _ANSELC	set	3898
   817  0000                     _ANSELCbits	set	3898
   818  0000                     _ANSELD	set	3899
   819  0000                     _ANSELDbits	set	3899
   820  0000                     _ANSELE	set	3900
   821  0000                     _ANSD0	set	31192
   822  0000                     _ANSD1	set	31193
   823  0000                     _ANSD3	set	31195
   824  0000                     _ANSD4	set	31196
   825  0000                     _CCP1MD	set	31216
   826  0000                     _CCP2MD	set	31217
   827  0000                     _CCP3MD	set	31218
   828  0000                     _CCP4MD	set	31219
   829  0000                     _CCP5MD	set	31220
   830  0000                     _CMP1MD	set	31209
   831  0000                     _CMP2MD	set	31210
   832  0000                     _CTMUMD	set	31211
   833  0000                     _MSSP1MD	set	31222
   834  0000                     _MSSP2MD	set	31223
   835  0000                     _TMR2MD	set	31225
   836  0000                     _TMR4MD	set	31227
   837  0000                     _TMR5MD	set	31228
   838  0000                     _TMR6MD	set	31229
   839  0000                     _UART1MD	set	31230
   840  0000                     _UART2MD	set	31231
   841  0000                     _TMR1	set	4046
   842  0000                     _TMR3	set	4018
   843  0000                     _ADCON0bits	set	4034
   844  0000                     _ADCON2bits	set	4032
   845  0000                     _ADRESH	set	4036
   846  0000                     _ADRESL	set	4035
   847  0000                     _INTCON2bits	set	4081
   848  0000                     _INTCON3bits	set	4080
   849  0000                     _INTCONbits	set	4082
   850  0000                     _IOCBbits	set	3938
   851  0000                     _LATA	set	3977
   852  0000                     _LATB	set	3978
   853  0000                     _LATBbits	set	3978
   854  0000                     _LATC	set	3979
   855  0000                     _LATCbits	set	3979
   856  0000                     _LATD	set	3980
   857  0000                     _LATDbits	set	3980
   858  0000                     _LATE	set	3981
   859  0000                     _LATEbits	set	3981
   860  0000                     _OSCCON	set	4051
   861  0000                     _OSCCON2	set	4050
   862  0000                     _OSCTUNE	set	3995
   863  0000                     _PIE1bits	set	3997
   864  0000                     _PIE2bits	set	4000
   865  0000                     _PIR1bits	set	3998
   866  0000                     _PIR2bits	set	4001
   867  0000                     _PORTBbits	set	3969
   868  0000                     _PORTCbits	set	3970
   869  0000                     _PORTDbits	set	3971
   870  0000                     _RCONbits	set	4048
   871  0000                     _SSP2ADD	set	3950
   872  0000                     _SSP2BUF	set	3951
   873  0000                     _SSP2CON1	set	3948
   874  0000                     _SSP2CON1bits	set	3948
   875  0000                     _SSP2STAT	set	3949
   876  0000                     _SSP2STATbits	set	3949
   877  0000                     _T1CON	set	4045
   878  0000                     _T1CONbits	set	4045
   879  0000                     _T1GCON	set	4044
   880  0000                     _T3CON	set	4017
   881  0000                     _T3CONbits	set	4017
   882  0000                     _T3GCON	set	4020
   883  0000                     _TMR1H	set	4047
   884  0000                     _TMR1L	set	4046
   885  0000                     _TMR3H	set	4019
   886  0000                     _TMR3L	set	4018
   887  0000                     _TRISA	set	3986
   888  0000                     _TRISB	set	3987
   889  0000                     _TRISBbits	set	3987
   890  0000                     _TRISC	set	3988
   891  0000                     _TRISCbits	set	3988
   892  0000                     _TRISD	set	3989
   893  0000                     _TRISDbits	set	3989
   894  0000                     _TRISE	set	3990
   895  0000                     _TRISEbits	set	3990
   896  0000                     _WPUB	set	3937
   897  0000                     _IDLEN	set	32415
   898  0000                     _LATC2	set	31834
   899  0000                     _LATD0	set	31840
   900  0000                     _LATD1	set	31841
   901  0000                     _LATD3	set	31843
   902  0000                     _LATD4	set	31844
   903  0000                     _TRISC2	set	31906
   904  0000                     _TRISD0	set	31912
   905  0000                     _TRISD1	set	31913
   906  0000                     _TRISD3	set	31915
   907  0000                     _TRISD4	set	31916
   908                           
   909                           ; #config settings
   910  0000                     
   911                           	psect	cinit
   912  0059BA                     __pcinit:
   913                           	opt stack 0
   914  0059BA                     start_initialization:
   915                           	opt stack 0
   916  0059BA                     __initialization:
   917                           	opt stack 0
   918                           
   919                           ; Initialize objects allocated to BANK1 (49 bytes)
   920                           ; load TBLPTR registers with __pidataBANK1
   921  0059BA  0EDE               	movlw	low __pidataBANK1
   922  0059BC  6EF6               	movwf	tblptrl,c
   923  0059BE  0E70               	movlw	high __pidataBANK1
   924  0059C0  6EF7               	movwf	tblptrh,c
   925  0059C2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   926  0059C4  6EF8               	movwf	tblptru,c
   927  0059C6  EE01  F0B3         	lfsr	0,__pdataBANK1
   928  0059CA  EE20 F031          	lfsr	2,49
   929  0059CE                     copy_data0:
   930  0059CE  0009               	tblrd		*+
   931  0059D0  CFF5 FFEE          	movff	tablat,postinc0
   932  0059D4  50DD               	movf	postdec2,w,c
   933  0059D6  50D9               	movf	fsr2l,w,c
   934  0059D8  E1FA               	bnz	copy_data0
   935                           
   936                           ; Initialize objects allocated to COMRAM (9 bytes)
   937                           ; load TBLPTR registers with __pidataCOMRAM
   938  0059DA  0EAE               	movlw	low __pidataCOMRAM
   939  0059DC  6EF6               	movwf	tblptrl,c
   940  0059DE  0E78               	movlw	high __pidataCOMRAM
   941  0059E0  6EF7               	movwf	tblptrh,c
   942  0059E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   943  0059E4  6EF8               	movwf	tblptru,c
   944  0059E6  EE00  F052         	lfsr	0,__pdataCOMRAM
   945  0059EA  EE20 F009          	lfsr	2,9
   946  0059EE                     copy_data1:
   947  0059EE  0009               	tblrd		*+
   948  0059F0  CFF5 FFEE          	movff	tablat,postinc0
   949  0059F4  50DD               	movf	postdec2,w,c
   950  0059F6  50D9               	movf	fsr2l,w,c
   951  0059F8  E1FA               	bnz	copy_data1
   952                           
   953                           ; Clear objects allocated to BIGRAM (542 bytes)
   954  0059FA  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   955  0059FE  EE22 F01E          	lfsr	2,542
   956  005A02                     clear_0:
   957  005A02  6AEE               	clrf	postinc0,c
   958  005A04  50DD               	movf	postdec2,w,c
   959  005A06  50D9               	movf	fsr2l,w,c
   960  005A08  E1FC               	bnz	clear_0
   961  005A0A  50DA               	movf	fsr2h,w,c
   962  005A0C  E1FA               	bnz	clear_0
   963                           
   964                           ; Clear objects allocated to BANK4 (224 bytes)
   965  005A0E  EE04  F000         	lfsr	0,__pbssBANK4
   966  005A12  0EE0               	movlw	224
   967  005A14                     clear_1:
   968  005A14  6AEE               	clrf	postinc0,c
   969  005A16  06E8               	decf	wreg,f,c
   970  005A18  E1FD               	bnz	clear_1
   971                           
   972                           ; Clear objects allocated to BANK3 (160 bytes)
   973  005A1A  EE03  F000         	lfsr	0,__pbssBANK3
   974  005A1E  0EA0               	movlw	160
   975  005A20                     clear_2:
   976  005A20  6AEE               	clrf	postinc0,c
   977  005A22  06E8               	decf	wreg,f,c
   978  005A24  E1FD               	bnz	clear_2
   979                           
   980                           ; Clear objects allocated to BANK2 (245 bytes)
   981  005A26  EE02  F000         	lfsr	0,__pbssBANK2
   982  005A2A  0EF5               	movlw	245
   983  005A2C                     clear_3:
   984  005A2C  6AEE               	clrf	postinc0,c
   985  005A2E  06E8               	decf	wreg,f,c
   986  005A30  E1FD               	bnz	clear_3
   987                           
   988                           ; Clear objects allocated to BANK1 (74 bytes)
   989  005A32  EE01  F069         	lfsr	0,__pbssBANK1
   990  005A36  0E4A               	movlw	74
   991  005A38                     clear_4:
   992  005A38  6AEE               	clrf	postinc0,c
   993  005A3A  06E8               	decf	wreg,f,c
   994  005A3C  E1FD               	bnz	clear_4
   995                           
   996                           ; Clear objects allocated to BANK0 (11 bytes)
   997  005A3E  EE00  F0E8         	lfsr	0,__pbssBANK0
   998  005A42  0E0B               	movlw	11
   999  005A44                     clear_5:
  1000  005A44  6AEE               	clrf	postinc0,c
  1001  005A46  06E8               	decf	wreg,f,c
  1002  005A48  E1FD               	bnz	clear_5
  1003                           
  1004                           ; Clear objects allocated to COMRAM (20 bytes)
  1005  005A4A  EE00  F032         	lfsr	0,__pbssCOMRAM
  1006  005A4E  0E14               	movlw	20
  1007  005A50                     clear_6:
  1008  005A50  6AEE               	clrf	postinc0,c
  1009  005A52  06E8               	decf	wreg,f,c
  1010  005A54  E1FD               	bnz	clear_6
  1011  005A56                     end_of_initialization:
  1012                           	opt stack 0
  1013  005A56                     __end_of__initialization:
  1014                           	opt stack 0
  1015  005A56  0100               	movlb	0
  1016  005A58  EF7D  F02D         	goto	_main	;jump to C main() function
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           postdec2	equ	0xFDD
  1024                           fsr2h	equ	0xFDA
  1025                           fsr2l	equ	0xFD9
  1026                           
  1027                           	psect	bssCOMRAM
  1028  000032                     __pbssCOMRAM:
  1029                           	opt stack 0
  1030  000032                     TMR_GetDeltaTime@retVal:
  1031                           	opt stack 0
  1032  000032                     	ds	4
  1033  000036                     _ticksAccounted:
  1034                           	opt stack 0
  1035  000036                     	ds	4
  1036  00003A                     _ticksAdded:
  1037                           	opt stack 0
  1038  00003A                     	ds	4
  1039  00003E                     TMR_GetDeltaTime@tmrVal:
  1040                           	opt stack 0
  1041  00003E                     	ds	2
  1042  000040                     TMR_SwapTimer@oldVal:
  1043                           	opt stack 0
  1044  000040                     	ds	2
  1045  000042                     TMR_SwapTimer@retVal:
  1046                           	opt stack 0
  1047  000042                     	ds	2
  1048  000044                     __roundCounter:
  1049                           	opt stack 0
  1050  000044                     	ds	1
  1051  000045                     handle16sInterrupt@counterSleepTimeout:
  1052                           	opt stack 0
  1053  000045                     	ds	1
  1054                           tblptru	equ	0xFF8
  1055                           tblptrh	equ	0xFF7
  1056                           tblptrl	equ	0xFF6
  1057                           tablat	equ	0xFF5
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           postdec2	equ	0xFDD
  1061                           fsr2h	equ	0xFDA
  1062                           fsr2l	equ	0xFD9
  1063                           
  1064                           	psect	dataCOMRAM
  1065  000052                     __pdataCOMRAM:
  1066                           	opt stack 0
  1067  000052                     _randx:
  1068                           	opt stack 0
  1069  000052                     	ds	4
  1070  000056                     _ticksToScheduledInterrupt:
  1071                           	opt stack 0
  1072  000056                     	ds	4
  1073  00005A                     _ONE_HOUR_TIMEOUT_COUNTS:
  1074                           	opt stack 0
  1075  00005A                     	ds	1
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           postdec2	equ	0xFDD
  1083                           fsr2h	equ	0xFDA
  1084                           fsr2l	equ	0xFD9
  1085                           
  1086                           	psect	bssBANK0
  1087  0000E8                     __pbssBANK0:
  1088                           	opt stack 0
  1089  0000E8                     _rxPayload:
  1090                           	opt stack 0
  1091  0000E8                     	ds	4
  1092  0000EC                     _reloadVal:
  1093                           	opt stack 0
  1094  0000EC                     	ds	2
  1095  0000EE                     __rcon:
  1096                           	opt stack 0
  1097  0000EE                     	ds	1
  1098  0000EF                     _allocatedTimers:
  1099                           	opt stack 0
  1100  0000EF                     	ds	1
  1101  0000F0                     _dioStatus:
  1102                           	opt stack 0
  1103  0000F0                     	ds	1
  1104  0000F1                     _localDioStatus:
  1105                           	opt stack 0
  1106  0000F1                     	ds	1
  1107  0000F2                     _timerOverflow:
  1108                           	opt stack 0
  1109  0000F2                     	ds	1
  1110                           tblptru	equ	0xFF8
  1111                           tblptrh	equ	0xFF7
  1112                           tblptrl	equ	0xFF6
  1113                           tablat	equ	0xFF5
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           postdec2	equ	0xFDD
  1117                           fsr2h	equ	0xFDA
  1118                           fsr2l	equ	0xFD9
  1119                           
  1120                           	psect	bssBANK1
  1121  000169                     __pbssBANK1:
  1122                           	opt stack 0
  1123  000169                     _RadioConfiguration:
  1124                           	opt stack 0
  1125  000169                     	ds	54
  1126  00019F                     _aesBuffer:
  1127                           	opt stack 0
  1128  00019F                     	ds	16
  1129  0001AF                     _payload:
  1130                           	opt stack 0
  1131  0001AF                     	ds	4
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec2	equ	0xFDD
  1139                           fsr2h	equ	0xFDA
  1140                           fsr2l	equ	0xFD9
  1141                           
  1142                           	psect	dataBANK1
  1143  0001B3                     __pdataBANK1:
  1144                           	opt stack 0
  1145  0001B3                     GenerateSubkey@F7870:
  1146                           	opt stack 0
  1147  0001B3                     	ds	16
  1148  0001C3                     _TimeToSend:
  1149                           	opt stack 0
  1150  0001C3                     	ds	1
  1151  0001C4                     _appSKey:
  1152                           	opt stack 0
  1153  0001C4                     	ds	16
  1154  0001D4                     _nwkSKey:
  1155                           	opt stack 0
  1156  0001D4                     	ds	16
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec2	equ	0xFDD
  1164                           fsr2h	equ	0xFDA
  1165                           fsr2l	equ	0xFD9
  1166                           
  1167                           	psect	bssBANK2
  1168  000200                     __pbssBANK2:
  1169                           	opt stack 0
  1170  000200                     _loRa:
  1171                           	opt stack 0
  1172  000200                     	ds	245
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postdec2	equ	0xFDD
  1180                           fsr2h	equ	0xFDA
  1181                           fsr2l	equ	0xFD9
  1182                           
  1183                           	psect	bssBANK3
  1184  000300                     __pbssBANK3:
  1185                           	opt stack 0
  1186  000300                     _swTimers:
  1187                           	opt stack 0
  1188  000300                     	ds	160
  1189                           tblptru	equ	0xFF8
  1190                           tblptrh	equ	0xFF7
  1191                           tblptrl	equ	0xFF6
  1192                           tablat	equ	0xFF5
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           postdec2	equ	0xFDD
  1196                           fsr2h	equ	0xFDA
  1197                           fsr2l	equ	0xFD9
  1198                           
  1199                           	psect	bssBANK4
  1200  000400                     __pbssBANK4:
  1201                           	opt stack 0
  1202  000400                     _Channels:
  1203                           	opt stack 0
  1204  000400                     	ds	224
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           postinc0	equ	0xFEE
  1210                           wreg	equ	0xFE8
  1211                           postdec2	equ	0xFDD
  1212                           fsr2h	equ	0xFDA
  1213                           fsr2l	equ	0xFD9
  1214                           
  1215                           	psect	bssBIGRAM
  1216  0004E0                     __pbssBIGRAM:
  1217                           	opt stack 0
  1218  0004E0                     _macBuffer:
  1219                           	opt stack 0
  1220  0004E0                     	ds	271
  1221  0005EF                     _radioBuffer:
  1222                           	opt stack 0
  1223  0005EF                     	ds	271
  1224                           tblptru	equ	0xFF8
  1225                           tblptrh	equ	0xFF7
  1226                           tblptrl	equ	0xFF6
  1227                           tablat	equ	0xFF5
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec2	equ	0xFDD
  1231                           fsr2h	equ	0xFDA
  1232                           fsr2l	equ	0xFD9
  1233                           
  1234                           	psect	cstackBANK3
  1235  0003A0                     __pcstackBANK3:
  1236                           	opt stack 0
  1237  0003A0                     LORAWAN_RxDone@fPort:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x0
  1241  0003A0                     	ds	1
  1242  0003A1                     LORAWAN_RxDone@channelIndex:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0x1
  1246  0003A1                     	ds	1
  1247  0003A2                     LORAWAN_RxDone@mhdr:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0x2
  1251  0003A2                     	ds	1
  1252  0003A3                     LORAWAN_RxDone@extractedMic:
  1253                           	opt stack 0
  1254                           
  1255                           ; 4 bytes @ 0x3
  1256  0003A3                     	ds	4
  1257  0003A7                     LORAWAN_RxDone@bufferIndex:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x7
  1261  0003A7                     	ds	1
  1262  0003A8                     LORAWAN_RxDone@temp:
  1263                           	opt stack 0
  1264                           
  1265                           ; 1 bytes @ 0x8
  1266  0003A8                     	ds	1
  1267  0003A9                     LORAWAN_RxDone@packet:
  1268                           	opt stack 0
  1269                           
  1270                           ; 2 bytes @ 0x9
  1271  0003A9                     	ds	2
  1272  0003AB                     LORAWAN_RxDone@computedMic:
  1273                           	opt stack 0
  1274                           
  1275                           ; 4 bytes @ 0xB
  1276  0003AB                     	ds	4
  1277  0003AF                     LORAWAN_RxDone@joinAccept:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0xF
  1281  0003AF                     	ds	2
  1282  0003B1                     LORAWAN_RxDone@frmPayloadLength:
  1283                           	opt stack 0
  1284                           
  1285                           ; 1 bytes @ 0x11
  1286  0003B1                     	ds	1
  1287  0003B2                     LORAWAN_RxDone@hdr:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x12
  1291  0003B2                     	ds	2
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postdec2	equ	0xFDD
  1299                           fsr2h	equ	0xFDA
  1300                           fsr2l	equ	0xFD9
  1301                           
  1302                           	psect	cstackBANK1
  1303  000100                     __pcstackBANK1:
  1304                           	opt stack 0
  1305  000100                     AESCmac@k2:
  1306                           	opt stack 0
  1307                           
  1308                           ; 16 bytes @ 0x0
  1309  000100                     	ds	16
  1310  000110                     AESCmac@k1:
  1311                           	opt stack 0
  1312                           
  1313                           ; 16 bytes @ 0x10
  1314  000110                     	ds	16
  1315  000120                     AESCmac@mLast:
  1316                           	opt stack 0
  1317                           
  1318                           ; 16 bytes @ 0x20
  1319  000120                     	ds	16
  1320  000130                     AESCmac@padded:
  1321                           	opt stack 0
  1322                           
  1323                           ; 16 bytes @ 0x30
  1324  000130                     	ds	16
  1325  000140                     AESCmac@y:
  1326                           	opt stack 0
  1327                           
  1328                           ; 16 bytes @ 0x40
  1329  000140                     	ds	16
  1330  000150                     AESCmac@x:
  1331                           	opt stack 0
  1332                           
  1333                           ; 16 bytes @ 0x50
  1334  000150                     	ds	16
  1335  000160                     AESCmac@ptr:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x60
  1339  000160                     	ds	2
  1340  000162                     AESCmac@flag:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x62
  1344  000162                     	ds	1
  1345  000163                     AESCmac@n:
  1346                           	opt stack 0
  1347                           
  1348                           ; 1 bytes @ 0x63
  1349  000163                     	ds	1
  1350  000164                     AESCmac@j:
  1351                           	opt stack 0
  1352                           
  1353                           ; 1 bytes @ 0x64
  1354  000164                     	ds	1
  1355  000165                     AESCmac@i:
  1356                           	opt stack 0
  1357                           
  1358                           ; 1 bytes @ 0x65
  1359  000165                     	ds	1
  1360  000166                     LORAWAN_RxDone@buffer:
  1361                           	opt stack 0
  1362                           
  1363                           ; 2 bytes @ 0x66
  1364  000166                     	ds	2
  1365  000168                     LORAWAN_RxDone@bufferLength:
  1366                           	opt stack 0
  1367                           
  1368                           ; 1 bytes @ 0x68
  1369  000168                     	ds	1
  1370                           tblptru	equ	0xFF8
  1371                           tblptrh	equ	0xFF7
  1372                           tblptrl	equ	0xFF6
  1373                           tablat	equ	0xFF5
  1374                           postinc0	equ	0xFEE
  1375                           wreg	equ	0xFE8
  1376                           postdec2	equ	0xFDD
  1377                           fsr2h	equ	0xFDA
  1378                           fsr2l	equ	0xFD9
  1379                           
  1380                           	psect	cstackBANK0
  1381  000060                     __pcstackBANK0:
  1382                           	opt stack 0
  1383  000060                     	ds	4
  1384  000064                     ??_UpdateMinMaxChDataRate:
  1385  000064                     ??_FindSmallestDataRate:
  1386  000064                     ??_UpdateReceiveDelays:
  1387  000064                     ??_CountfOptsLength:
  1388  000064                     ??_ADC_SelChannel:
  1389  000064                     ?_TMR1_ReadTimer:
  1390                           	opt stack 0
  1391  000064                     ?_ExecuteLinkCheck:
  1392                           	opt stack 0
  1393  000064                     ?_ExecuteDutyCycle:
  1394                           	opt stack 0
  1395  000064                     ?_ExecuteDevStatus:
  1396                           	opt stack 0
  1397  000064                     ?_GetRx1Freq:
  1398                           	opt stack 0
  1399  000064                     ?___lmul:
  1400                           	opt stack 0
  1401  000064                     ?___lldiv:
  1402                           	opt stack 0
  1403  000064                     ?___llmod:
  1404                           	opt stack 0
  1405  000064                     SwTimerCreate@retVal:
  1406                           	opt stack 0
  1407  000064                     SwTimerIsRunning@timerId:
  1408                           	opt stack 0
  1409  000064                     SwTimerStop@timerId:
  1410                           	opt stack 0
  1411  000064                     SPI2_Exchange8bit@data:
  1412                           	opt stack 0
  1413  000064                     HALResetPinOutputValue@value:
  1414                           	opt stack 0
  1415  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1416                           	opt stack 0
  1417  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1418                           	opt stack 0
  1419  000064                     RADIO_SetOutputPower@power:
  1420                           	opt stack 0
  1421  000064                     RADIO_SetCRC@crc:
  1422                           	opt stack 0
  1423  000064                     RADIO_SetIQInverted@iqInverted:
  1424                           	opt stack 0
  1425  000064                     RADIO_SetBandwidth@bandwidth:
  1426                           	opt stack 0
  1427  000064                     RADIO_SetModulation@modulation:
  1428                           	opt stack 0
  1429  000064                     ValidateDataRate@dataRate:
  1430                           	opt stack 0
  1431  000064                     ValidateTxPower@result:
  1432                           	opt stack 0
  1433  000064                     UpdateDLSettings@dlRx1DrOffset:
  1434                           	opt stack 0
  1435  000064                     UpdateDataRange@dataRangeNew:
  1436                           	opt stack 0
  1437  000064                     UpdateChannelIdStatus@statusNew:
  1438                           	opt stack 0
  1439  000064                     ValidateRxOffset@rxOffset:
  1440                           	opt stack 0
  1441  000064                     ValidateChannelId@allowedForDefaultChannels:
  1442                           	opt stack 0
  1443  000064                     ValidateChannelMaskCntl@result:
  1444                           	opt stack 0
  1445  000064                     UpdateCurrentDataRate@valueNew:
  1446                           	opt stack 0
  1447  000064                     UpdateTxPower@txPowerNew:
  1448                           	opt stack 0
  1449  000064                     UpdateJoinInProgress@state:
  1450                           	opt stack 0
  1451  000064                     INTERRUPT_GetDioStatus@a:
  1452                           	opt stack 0
  1453  000064                     EncKeySchedule@key:
  1454                           	opt stack 0
  1455  000064                     ___abdiv@divisor:
  1456                           	opt stack 0
  1457  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1458                           	opt stack 0
  1459  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1460                           	opt stack 0
  1461  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1462                           	opt stack 0
  1463  000064                     SwTimerSetCallback@callback:
  1464                           	opt stack 0
  1465  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1466                           	opt stack 0
  1467  000064                     ExecuteDutyCycle@ptr:
  1468                           	opt stack 0
  1469  000064                     ExecuteDevStatus@ptr:
  1470                           	opt stack 0
  1471  000064                     UpdateDutyCycle@dutyCycleNew:
  1472                           	opt stack 0
  1473  000064                     ValidateChannelMask@channelMask:
  1474                           	opt stack 0
  1475  000064                     TMR1_WriteTimer@timerVal:
  1476                           	opt stack 0
  1477  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1478                           	opt stack 0
  1479  000064                     TMR3_SetInterruptHandler@InterruptHandler:
  1480                           	opt stack 0
  1481  000064                     FillSubKey@source:
  1482                           	opt stack 0
  1483  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1484                           	opt stack 0
  1485  000064                     ExecuteLinkCheck@ptr:
  1486                           	opt stack 0
  1487  000064                     IncludeMacCommandsResponse@macBuffer:
  1488                           	opt stack 0
  1489  000064                     CheckFlags@hdr:
  1490                           	opt stack 0
  1491  000064                     CheckMcastFlags@hdr:
  1492                           	opt stack 0
  1493  000064                     EncodeShiftRow@stateTable:
  1494                           	opt stack 0
  1495  000064                     memcpy@d1:
  1496                           	opt stack 0
  1497  000064                     memset@p1:
  1498                           	opt stack 0
  1499  000064                     SystemBlockingWaitMs@ms:
  1500                           	opt stack 0
  1501  000064                     RADIO_SetChannelFrequency@frequency:
  1502                           	opt stack 0
  1503  000064                     ValidateFrequency@frequencyNew:
  1504                           	opt stack 0
  1505  000064                     UpdateFrequency@frequencyNew:
  1506                           	opt stack 0
  1507  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1508                           	opt stack 0
  1509  000064                     UpdateReceiveWindow2Parameters@frequency:
  1510                           	opt stack 0
  1511  000064                     ___lmul@multiplier:
  1512                           	opt stack 0
  1513  000064                     ___lldiv@dividend:
  1514                           	opt stack 0
  1515  000064                     ___llmod@dividend:
  1516                           	opt stack 0
  1517                           
  1518                           ; 4 bytes @ 0x4
  1519  000064                     	ds	1
  1520  000065                     ??_UpdateDataRange:
  1521  000065                     ??_UpdateChannelIdStatus:
  1522  000065                     ??_EncKeySchedule:
  1523  000065                     SwTimerIsRunning@isRunning:
  1524                           	opt stack 0
  1525  000065                     HALSPISend@data:
  1526                           	opt stack 0
  1527  000065                     ValidateDataRate@result:
  1528                           	opt stack 0
  1529  000065                     ValidateTxPower@txPowerNew:
  1530                           	opt stack 0
  1531  000065                     UpdateDLSettings@dlRx2Dr:
  1532                           	opt stack 0
  1533  000065                     ValidateRxOffset@result:
  1534                           	opt stack 0
  1535  000065                     ValidateChannelId@result:
  1536                           	opt stack 0
  1537  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1538                           	opt stack 0
  1539  000065                     UpdateMinMaxChDataRate@i:
  1540                           	opt stack 0
  1541  000065                     FindSmallestDataRate@found:
  1542                           	opt stack 0
  1543  000065                     ADC_SelChannel@c:
  1544                           	opt stack 0
  1545  000065                     ___abdiv@counter:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0x5
  1549  000065                     	ds	1
  1550  000066                     ??_TMR1_ReadTimer:
  1551  000066                     ??_ExecuteDutyCycle:
  1552  000066                     ?_ADC_Read:
  1553                           	opt stack 0
  1554  000066                     SwTimerSetCallback@callbackParameter:
  1555                           	opt stack 0
  1556  000066                     RADIO_RegisterWrite@value:
  1557                           	opt stack 0
  1558  000066                     RADIO_RegisterRead@reg:
  1559                           	opt stack 0
  1560  000066                     UpdateDataRange@channelId:
  1561                           	opt stack 0
  1562  000066                     UpdateChannelIdStatus@channelId:
  1563                           	opt stack 0
  1564  000066                     ValidateDataRange@result:
  1565                           	opt stack 0
  1566  000066                     ValidateChannelId@channelId:
  1567                           	opt stack 0
  1568  000066                     UpdateDutyCycle@channelId:
  1569                           	opt stack 0
  1570  000066                     ValidateChannelMask@i:
  1571                           	opt stack 0
  1572  000066                     LORAWAN_SetCurrentDataRate@valueNew:
  1573                           	opt stack 0
  1574  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1575                           	opt stack 0
  1576  000066                     FindSmallestDataRate@i:
  1577                           	opt stack 0
  1578  000066                     EncodeShiftRow@temp:
  1579                           	opt stack 0
  1580  000066                     ___abdiv@sign:
  1581                           	opt stack 0
  1582  000066                     FillSubKey@key:
  1583                           	opt stack 0
  1584  000066                     memcpy@s1:
  1585                           	opt stack 0
  1586  000066                     memset@c:
  1587                           	opt stack 0
  1588                           
  1589                           ; 2 bytes @ 0x6
  1590  000066                     	ds	1
  1591  000067                     SwTimerSetCallback@timerId:
  1592                           	opt stack 0
  1593  000067                     RADIO_RegisterWrite@reg:
  1594                           	opt stack 0
  1595  000067                     RADIO_RegisterRead@readValue:
  1596                           	opt stack 0
  1597  000067                     UpdateDataRange@i:
  1598                           	opt stack 0
  1599  000067                     UpdateChannelIdStatus@i:
  1600                           	opt stack 0
  1601  000067                     ValidateDataRange@dataRangeNew:
  1602                           	opt stack 0
  1603  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  1604                           	opt stack 0
  1605  000067                     FindSmallestDataRate@dataRate:
  1606                           	opt stack 0
  1607  000067                     ___abdiv@quotient:
  1608                           	opt stack 0
  1609  000067                     RxDataDone@pData:
  1610                           	opt stack 0
  1611                           
  1612                           ; 2 bytes @ 0x7
  1613  000067                     	ds	1
  1614  000068                     ??_IncludeMacCommandsResponse:
  1615  000068                     ??_ADC_Read:
  1616  000068                     ??_SystemBlockingWaitMs:
  1617  000068                     RADIO_WritePower@ocp:
  1618                           	opt stack 0
  1619  000068                     RADIO_UnhandledInterrupt@modulation:
  1620                           	opt stack 0
  1621  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1622                           	opt stack 0
  1623  000068                     ValidateFrequency@result:
  1624                           	opt stack 0
  1625  000068                     ValidateDataRange@dataRateMax:
  1626                           	opt stack 0
  1627  000068                     UpdateFrequency@channelId:
  1628                           	opt stack 0
  1629  000068                     FillSubKey@size:
  1630                           	opt stack 0
  1631  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1632                           	opt stack 0
  1633  000068                     UpdateReceiveDelays@delay:
  1634                           	opt stack 0
  1635  000068                     ___abdiv@dividend:
  1636                           	opt stack 0
  1637  000068                     EnableChannels1@channelMask:
  1638                           	opt stack 0
  1639  000068                     TMR1_ReadTimer@readVal:
  1640                           	opt stack 0
  1641  000068                     _EncKeySchedule$4148:
  1642                           	opt stack 0
  1643  000068                     memcpy@n:
  1644                           	opt stack 0
  1645  000068                     memset@n:
  1646                           	opt stack 0
  1647  000068                     ___lmul@multiplicand:
  1648                           	opt stack 0
  1649  000068                     ___lldiv@divisor:
  1650                           	opt stack 0
  1651  000068                     ___llmod@divisor:
  1652                           	opt stack 0
  1653                           
  1654                           ; 4 bytes @ 0x8
  1655  000068                     	ds	1
  1656  000069                     ??_FillSubKey:
  1657  000069                     ??_RADIO_DIO3:
  1658  000069                     ??_RADIO_DIO4:
  1659  000069                     ??_RADIO_DIO5:
  1660  000069                     ?_ExecuteRxTimingSetup:
  1661                           	opt stack 0
  1662  000069                     RADIO_WriteMode@newModulation:
  1663                           	opt stack 0
  1664  000069                     RADIO_WritePower@paDac:
  1665                           	opt stack 0
  1666  000069                     ExecuteDutyCycle@maxDCycle:
  1667                           	opt stack 0
  1668  000069                     ValidateDataRange@dataRateMin:
  1669                           	opt stack 0
  1670  000069                     RxDataDone@dataLength:
  1671                           	opt stack 0
  1672  000069                     ExecuteRxTimingSetup@ptr:
  1673                           	opt stack 0
  1674                           
  1675                           ; 2 bytes @ 0x9
  1676  000069                     	ds	1
  1677  00006A                     RADIO_WriteMode@blocking:
  1678                           	opt stack 0
  1679  00006A                     RADIO_WritePower@power:
  1680                           	opt stack 0
  1681  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1682                           	opt stack 0
  1683  00006A                     EnableChannels1@channelMaskCntl:
  1684                           	opt stack 0
  1685  00006A                     TMR1_ReadTimer@readValHigh:
  1686                           	opt stack 0
  1687  00006A                     FillSubKey@carry:
  1688                           	opt stack 0
  1689  00006A                     CountfOptsLength@macCommandLength:
  1690                           	opt stack 0
  1691  00006A                     RxDataDone@status:
  1692                           	opt stack 0
  1693  00006A                     ADC_Read@channel:
  1694                           	opt stack 0
  1695  00006A                     AESEncode@block:
  1696                           	opt stack 0
  1697  00006A                     memcpy@d:
  1698                           	opt stack 0
  1699  00006A                     memset@p:
  1700                           	opt stack 0
  1701                           
  1702                           ; 2 bytes @ 0xA
  1703  00006A                     	ds	1
  1704  00006B                     ??_RxDataDone:
  1705  00006B                     RADIO_WriteMode@currentModulation:
  1706                           	opt stack 0
  1707  00006B                     EnableChannels1@channelIndexMin:
  1708                           	opt stack 0
  1709  00006B                     TMR1_ReadTimer@readValLow:
  1710                           	opt stack 0
  1711  00006B                     FillSubKey@i:
  1712                           	opt stack 0
  1713  00006B                     ExecuteRxTimingSetup@delay:
  1714                           	opt stack 0
  1715  00006B                     CountfOptsLength@i:
  1716                           	opt stack 0
  1717  00006B                     ADC_Read@result:
  1718                           	opt stack 0
  1719                           
  1720                           ; 2 bytes @ 0xB
  1721  00006B                     	ds	1
  1722  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1723  00006C                     ?_TMR_SwapTimer:
  1724                           	opt stack 0
  1725  00006C                     ?_TMR_GetDeltaTime:
  1726                           	opt stack 0
  1727  00006C                     RADIO_WriteMode@dioMapping:
  1728                           	opt stack 0
  1729  00006C                     EnableChannels1@channelIndexMax:
  1730                           	opt stack 0
  1731  00006C                     AESEncode@key:
  1732                           	opt stack 0
  1733  00006C                     ___llmod@counter:
  1734                           	opt stack 0
  1735  00006C                     TMR_SwapTimer@timerVal:
  1736                           	opt stack 0
  1737  00006C                     memcpy@s:
  1738                           	opt stack 0
  1739  00006C                     ___lmul@product:
  1740                           	opt stack 0
  1741  00006C                     ___lldiv@quotient:
  1742                           	opt stack 0
  1743                           
  1744                           ; 4 bytes @ 0xC
  1745  00006C                     	ds	1
  1746  00006D                     ??_AESEncode:
  1747  00006D                     RADIO_WriteMode@currentMode:
  1748                           	opt stack 0
  1749  00006D                     EnableChannels1@i:
  1750                           	opt stack 0
  1751  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1752                           	opt stack 0
  1753                           
  1754                           ; 1 bytes @ 0xD
  1755  00006D                     	ds	1
  1756  00006E                     ?_ExtractMic:
  1757                           	opt stack 0
  1758  00006E                     RADIO_WriteMode@newMode:
  1759                           	opt stack 0
  1760  00006E                     InitDefault868Channels@i:
  1761                           	opt stack 0
  1762  00006E                     InitDefault433Channels@i:
  1763                           	opt stack 0
  1764  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1765                           	opt stack 0
  1766  00006E                     IncludeMacCommandsResponse@i:
  1767                           	opt stack 0
  1768  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1769                           	opt stack 0
  1770  00006E                     EnableChannels@channelMask:
  1771                           	opt stack 0
  1772  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1773                           	opt stack 0
  1774  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1775                           	opt stack 0
  1776  00006E                     PrepareSessionKeys@sessionKey:
  1777                           	opt stack 0
  1778  00006E                     ExtractMic@buffer:
  1779                           	opt stack 0
  1780  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1781                           	opt stack 0
  1782  00006E                     AssembleEncryptionBlock@frameCounter:
  1783                           	opt stack 0
  1784                           
  1785                           ; 4 bytes @ 0xE
  1786  00006E                     	ds	1
  1787  00006F                     RADIO_WriteMode@opMode:
  1788                           	opt stack 0
  1789  00006F                     IncludeMacCommandsResponse@bufferIndex:
  1790                           	opt stack 0
  1791                           
  1792                           ; 1 bytes @ 0xF
  1793  00006F                     	ds	1
  1794  000070                     ??_TMR_GetDeltaTime:
  1795  000070                     ?_rand:
  1796                           	opt stack 0
  1797  000070                     ?_RADIO_ReadRandom:
  1798                           	opt stack 0
  1799  000070                     ?_ExecuteNewChannel:
  1800                           	opt stack 0
  1801  000070                     ?_ExecuteRxParamSetupReq:
  1802                           	opt stack 0
  1803  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1804                           	opt stack 0
  1805  000070                     EnableChannels@channelMaskCntl:
  1806                           	opt stack 0
  1807  000070                     ExtractMic@bufferLength:
  1808                           	opt stack 0
  1809  000070                     ___lldiv@counter:
  1810                           	opt stack 0
  1811  000070                     ExecuteNewChannel@ptr:
  1812                           	opt stack 0
  1813  000070                     ExecuteRxParamSetupReq@ptr:
  1814                           	opt stack 0
  1815  000070                     UpdateCfList@joinAccept:
  1816                           	opt stack 0
  1817  000070                     PrepareSessionKeys@appNonce:
  1818                           	opt stack 0
  1819                           
  1820                           ; 2 bytes @ 0x10
  1821  000070                     	ds	1
  1822  000071                     ?_ExecuteLinkAdr:
  1823                           	opt stack 0
  1824  000071                     ExecuteLinkAdr@ptr:
  1825                           	opt stack 0
  1826  000071                     SwTimerSetTimeout@timeout:
  1827                           	opt stack 0
  1828  000071                     RADIO_WriteFrequency@frequency:
  1829                           	opt stack 0
  1830  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1831                           	opt stack 0
  1832  000071                     RADIO_WriteFSKBitRate@bitRate:
  1833                           	opt stack 0
  1834  000071                     ConfigureRadio@freq:
  1835                           	opt stack 0
  1836                           
  1837                           ; 4 bytes @ 0x11
  1838  000071                     	ds	1
  1839  000072                     ??_ExtractMic:
  1840  000072                     ??_TMR_OverrideRemaining:
  1841  000072                     ??_UpdateCfList:
  1842  000072                     ?___lwmod:
  1843                           	opt stack 0
  1844  000072                     ExecuteNewChannel@drRange:
  1845                           	opt stack 0
  1846  000072                     AssembleEncryptionBlock@blockId:
  1847                           	opt stack 0
  1848  000072                     RADIO_ReadRandom@retVal:
  1849                           	opt stack 0
  1850  000072                     PrepareSessionKeys@networkId:
  1851                           	opt stack 0
  1852  000072                     ___lwmod@dividend:
  1853                           	opt stack 0
  1854  000072                     ExecuteRxParamSetupReq@frequency:
  1855                           	opt stack 0
  1856                           
  1857                           ; 4 bytes @ 0x12
  1858  000072                     	ds	1
  1859  000073                     ??_ExecuteLinkAdr:
  1860  000073                     AssembleEncryptionBlock@firstByte:
  1861                           	opt stack 0
  1862  000073                     ExecuteNewChannel@frequency:
  1863                           	opt stack 0
  1864                           
  1865                           ; 4 bytes @ 0x13
  1866  000073                     	ds	1
  1867  000074                     RADIO_ReadRandom@i:
  1868                           	opt stack 0
  1869  000074                     UpdateCfList@bufferLength:
  1870                           	opt stack 0
  1871  000074                     PrepareSessionKeys@index:
  1872                           	opt stack 0
  1873  000074                     AssembleEncryptionBlock@multicastStatus:
  1874                           	opt stack 0
  1875  000074                     TMR_OverrideRemaining@tmrVal:
  1876                           	opt stack 0
  1877  000074                     ExecuteLinkAdr@channelMask:
  1878                           	opt stack 0
  1879  000074                     ___lwmod@divisor:
  1880                           	opt stack 0
  1881  000074                     ExtractMic@mic:
  1882                           	opt stack 0
  1883                           
  1884                           ; 4 bytes @ 0x14
  1885  000074                     	ds	1
  1886  000075                     ??_SwTimerSetTimeout:
  1887  000075                     ConfigureRadio@dataRate:
  1888                           	opt stack 0
  1889  000075                     AssembleEncryptionBlock@dir:
  1890                           	opt stack 0
  1891  000075                     _AESEncode$4143:
  1892                           	opt stack 0
  1893  000075                     srand@x:
  1894                           	opt stack 0
  1895  000075                     RADIO_WriteFrequency@num_mod:
  1896                           	opt stack 0
  1897  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1898                           	opt stack 0
  1899  000075                     RADIO_WriteFSKBitRate@num:
  1900                           	opt stack 0
  1901  000075                     UpdateCfList@frequency:
  1902                           	opt stack 0
  1903                           
  1904                           ; 4 bytes @ 0x15
  1905  000075                     	ds	1
  1906  000076                     ExecuteLinkAdr@txPower:
  1907                           	opt stack 0
  1908  000076                     ExecuteRxParamSetupReq@dlSettings:
  1909                           	opt stack 0
  1910  000076                     AssembleEncryptionBlock@bufferIndex:
  1911                           	opt stack 0
  1912  000076                     ___lwmod@counter:
  1913                           	opt stack 0
  1914  000076                     TMR_OverrideRemaining@oldReloadVal:
  1915                           	opt stack 0
  1916  000076                     ConfigureRadioTx@freq:
  1917                           	opt stack 0
  1918  000076                     ConfigureRadioRx@freq:
  1919                           	opt stack 0
  1920                           
  1921                           ; 4 bytes @ 0x16
  1922  000076                     	ds	1
  1923  000077                     ?_Random:
  1924                           	opt stack 0
  1925  000077                     ExecuteNewChannel@channelIndex:
  1926                           	opt stack 0
  1927  000077                     ExecuteLinkAdr@redundancy:
  1928                           	opt stack 0
  1929  000077                     Random@max:
  1930                           	opt stack 0
  1931  000077                     _AESEncode$4144:
  1932                           	opt stack 0
  1933                           
  1934                           ; 2 bytes @ 0x17
  1935  000077                     	ds	2
  1936  000079                     SwTimerSetTimeout@timerId:
  1937                           	opt stack 0
  1938  000079                     ExecuteLinkAdr@dataRate:
  1939                           	opt stack 0
  1940  000079                     SearchAvailableChannel@transmissionType:
  1941                           	opt stack 0
  1942  000079                     UpdateCfList@channelIndex:
  1943                           	opt stack 0
  1944  000079                     _AESEncode$4145:
  1945                           	opt stack 0
  1946  000079                     RADIO_WriteFrequency@num:
  1947                           	opt stack 0
  1948                           
  1949                           ; 4 bytes @ 0x19
  1950  000079                     	ds	1
  1951  00007A                     ?_MacExecuteCommands:
  1952                           	opt stack 0
  1953  00007A                     UpdateCfList@i:
  1954                           	opt stack 0
  1955  00007A                     ConfigureRadioTx@dataRate:
  1956                           	opt stack 0
  1957  00007A                     ConfigureRadioRx@dataRate:
  1958                           	opt stack 0
  1959  00007A                     SearchAvailableChannel@channelIndex:
  1960                           	opt stack 0
  1961  00007A                     MacExecuteCommands@buffer:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x1A
  1965  00007A                     	ds	1
  1966  00007B                     ConfigureRadioTx@txPower:
  1967                           	opt stack 0
  1968  00007B                     AESEncode@aux:
  1969                           	opt stack 0
  1970                           
  1971                           ; 1 bytes @ 0x1B
  1972  00007B                     	ds	1
  1973  00007C                     ??_SearchAvailableChannel:
  1974  00007C                     ?_SwTimersInterrupt:
  1975                           	opt stack 0
  1976  00007C                     MacExecuteCommands@fOptsLen:
  1977                           	opt stack 0
  1978  00007C                     AESEncode@aux2:
  1979                           	opt stack 0
  1980                           
  1981                           ; 1 bytes @ 0x1C
  1982  00007C                     	ds	1
  1983  00007D                     ??_MacExecuteCommands:
  1984  00007D                     ??_RADIO_DIO2:
  1985  00007D                     AESEncode@aux1:
  1986                           	opt stack 0
  1987  00007D                     RADIO_Init@radioBuffer:
  1988                           	opt stack 0
  1989  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  1990                           	opt stack 0
  1991                           
  1992                           ; 2 bytes @ 0x1D
  1993  00007D                     	ds	1
  1994  00007E                     RADIO_DIO2@dioMapping:
  1995                           	opt stack 0
  1996  00007E                     AESEncode@aux3:
  1997                           	opt stack 0
  1998                           
  1999                           ; 1 bytes @ 0x1E
  2000  00007E                     	ds	1
  2001  00007F                     ??_RADIO_WriteConfiguration:
  2002  00007F                     MacExecuteCommands@done:
  2003                           	opt stack 0
  2004  00007F                     AESEncode@i:
  2005                           	opt stack 0
  2006  00007F                     RADIO_Init@frequency:
  2007                           	opt stack 0
  2008                           
  2009                           ; 4 bytes @ 0x1F
  2010  00007F                     	ds	1
  2011  000080                     SearchAvailableChannel@randomNumberCopy:
  2012                           	opt stack 0
  2013  000080                     MacExecuteCommands@ptr:
  2014                           	opt stack 0
  2015  000080                     AESEncodeLoRa@block:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0x20
  2019  000080                     	ds	1
  2020  000081                     RADIO_WriteConfiguration@i:
  2021                           	opt stack 0
  2022  000081                     SearchAvailableChannel@result:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0x21
  2026  000081                     	ds	1
  2027  000082                     SearchAvailableChannel@maxChannels:
  2028                           	opt stack 0
  2029  000082                     AESEncodeLoRa@key:
  2030                           	opt stack 0
  2031  000082                     RADIO_WriteConfiguration@tempValue:
  2032                           	opt stack 0
  2033                           
  2034                           ; 4 bytes @ 0x22
  2035  000082                     	ds	1
  2036  000083                     ??_RADIO_Init:
  2037  000083                     SearchAvailableChannel@randomNumber:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x23
  2041  000083                     	ds	1
  2042  000084                     SearchAvailableChannel@i:
  2043                           	opt stack 0
  2044  000084                     SwTimersInterrupt@timeElapsed:
  2045                           	opt stack 0
  2046  000084                     AESEncodeLoRa@useKey:
  2047                           	opt stack 0
  2048                           
  2049                           ; 16 bytes @ 0x24
  2050  000084                     	ds	1
  2051  000085                     SelectChannelForTransmission@transmissionType:
  2052                           	opt stack 0
  2053                           
  2054                           ; 1 bytes @ 0x25
  2055  000085                     	ds	1
  2056  000086                     RADIO_WriteConfiguration@regValue:
  2057                           	opt stack 0
  2058  000086                     SelectChannelForTransmission@result:
  2059                           	opt stack 0
  2060                           
  2061                           ; 1 bytes @ 0x26
  2062  000086                     	ds	1
  2063  000087                     SelectChannelForTransmission@channelIndex:
  2064                           	opt stack 0
  2065                           
  2066                           ; 1 bytes @ 0x27
  2067  000087                     	ds	1
  2068  000088                     SwTimersInterrupt@ticksToNextTimerEvent:
  2069                           	opt stack 0
  2070                           
  2071                           ; 4 bytes @ 0x28
  2072  000088                     	ds	4
  2073  00008C                     SwTimersInterrupt@i:
  2074                           	opt stack 0
  2075                           
  2076                           ; 1 bytes @ 0x2C
  2077  00008C                     	ds	1
  2078  00008D                     ?_SwTimerReadValue:
  2079                           	opt stack 0
  2080                           
  2081                           ; 4 bytes @ 0x2D
  2082  00008D                     	ds	4
  2083  000091                     SwTimerReadValue@ticksCount:
  2084                           	opt stack 0
  2085  000091                     SwTimerStart@ticksRemaining:
  2086                           	opt stack 0
  2087                           
  2088                           ; 4 bytes @ 0x31
  2089  000091                     	ds	3
  2090  000094                     GenerateSubkey@key:
  2091                           	opt stack 0
  2092  000094                     ComputeSessionKeys@joinAcceptBuffer:
  2093                           	opt stack 0
  2094  000094                     EncryptFRMPayload@buffer:
  2095                           	opt stack 0
  2096                           
  2097                           ; 2 bytes @ 0x34
  2098  000094                     	ds	1
  2099  000095                     SwTimerReadValue@timerId:
  2100                           	opt stack 0
  2101  000095                     SwTimerStart@timerId:
  2102                           	opt stack 0
  2103                           
  2104                           ; 1 bytes @ 0x35
  2105  000095                     	ds	1
  2106  000096                     ??_UpdateRetransmissionAckTimeoutState:
  2107  000096                     ??_StartReTxTimer:
  2108  000096                     ?_RADIO_Transmit:
  2109                           	opt stack 0
  2110  000096                     ?_RADIO_ReceiveStart:
  2111                           	opt stack 0
  2112  000096                     EncryptFRMPayload@bufferLength:
  2113                           	opt stack 0
  2114  000096                     RADIO_Transmit@buffer:
  2115                           	opt stack 0
  2116  000096                     RADIO_ReceiveStart@rxWindowSize:
  2117                           	opt stack 0
  2118  000096                     GenerateSubkey@k1:
  2119                           	opt stack 0
  2120  000096                     LORAWAN_LinkCheckConfigure@period:
  2121                           	opt stack 0
  2122                           
  2123                           ; 2 bytes @ 0x36
  2124  000096                     	ds	1
  2125  000097                     EncryptFRMPayload@dir:
  2126                           	opt stack 0
  2127                           
  2128                           ; 1 bytes @ 0x37
  2129  000097                     	ds	1
  2130  000098                     ??_LORAWAN_LinkCheckConfigure:
  2131  000098                     ??_RADIO_ReceiveStart:
  2132  000098                     RADIO_Transmit@bufferLen:
  2133                           	opt stack 0
  2134  000098                     GenerateSubkey@k2:
  2135                           	opt stack 0
  2136  000098                     EncryptFRMPayload@frameCounter:
  2137                           	opt stack 0
  2138                           
  2139                           ; 4 bytes @ 0x38
  2140  000098                     	ds	1
  2141  000099                     ??_RADIO_Transmit:
  2142                           
  2143                           ; 1 bytes @ 0x39
  2144  000099                     	ds	1
  2145  00009A                     ??_GenerateSubkey:
  2146  00009A                     StartReTxTimer@minim:
  2147                           	opt stack 0
  2148                           
  2149                           ; 4 bytes @ 0x3A
  2150  00009A                     	ds	1
  2151  00009B                     GenerateSubkey@const_Rb:
  2152                           	opt stack 0
  2153                           
  2154                           ; 16 bytes @ 0x3B
  2155  00009B                     	ds	1
  2156  00009C                     EncryptFRMPayload@key:
  2157                           	opt stack 0
  2158  00009C                     _RADIO_ReceiveStart$1199:
  2159                           	opt stack 0
  2160                           
  2161                           ; 4 bytes @ 0x3C
  2162  00009C                     	ds	2
  2163  00009E                     StartReTxTimer@i:
  2164                           	opt stack 0
  2165  00009E                     EncryptFRMPayload@macBufferIndex:
  2166                           	opt stack 0
  2167                           
  2168                           ; 1 bytes @ 0x3E
  2169  00009E                     	ds	1
  2170  00009F                     EncryptFRMPayload@bufferToBeEncrypted:
  2171                           	opt stack 0
  2172                           
  2173                           ; 2 bytes @ 0x3F
  2174  00009F                     	ds	1
  2175  0000A0                     LORAWAN_TxDone@timeOnAir:
  2176                           	opt stack 0
  2177  0000A0                     _LORAWAN_LinkCheckConfigure$3502:
  2178                           	opt stack 0
  2179                           
  2180                           ; 4 bytes @ 0x40
  2181  0000A0                     	ds	1
  2182  0000A1                     EncryptFRMPayload@multicastStatus:
  2183                           	opt stack 0
  2184  0000A1                     _RADIO_Transmit$1196:
  2185                           	opt stack 0
  2186                           
  2187                           ; 4 bytes @ 0x41
  2188  0000A1                     	ds	1
  2189  0000A2                     ??_LORAWAN_TxDone:
  2190  0000A2                     ??_EncryptFRMPayload:
  2191                           
  2192                           ; 1 bytes @ 0x42
  2193  0000A2                     	ds	2
  2194  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  2195                           	opt stack 0
  2196                           
  2197                           ; 1 bytes @ 0x44
  2198  0000A4                     	ds	1
  2199  0000A5                     RADIO_Transmit@regValue:
  2200                           	opt stack 0
  2201  0000A5                     LORAWAN_Reset@ismBandNew:
  2202                           	opt stack 0
  2203                           
  2204                           ; 1 bytes @ 0x45
  2205  0000A5                     	ds	1
  2206  0000A6                     RADIO_Transmit@i:
  2207                           	opt stack 0
  2208  0000A6                     LORAWAN_Init@RxPayload:
  2209                           	opt stack 0
  2210                           
  2211                           ; 2 bytes @ 0x46
  2212  0000A6                     	ds	1
  2213  0000A7                     ??_LORAWAN_RxTimeout:
  2214  0000A7                     EncryptFRMPayload@k:
  2215                           	opt stack 0
  2216                           
  2217                           ; 1 bytes @ 0x47
  2218  0000A7                     	ds	1
  2219  0000A8                     EncryptFRMPayload@i:
  2220                           	opt stack 0
  2221  0000A8                     LORAWAN_Init@RxJoinResponse:
  2222                           	opt stack 0
  2223                           
  2224                           ; 2 bytes @ 0x48
  2225  0000A8                     	ds	1
  2226  0000A9                     EncryptFRMPayload@j:
  2227                           	opt stack 0
  2228                           
  2229                           ; 1 bytes @ 0x49
  2230  0000A9                     	ds	1
  2231  0000AA                     
  2232                           ; 1 bytes @ 0x4A
  2233  0000AA                     	ds	1
  2234  0000AB                     LORAWAN_RxTimeout@minim:
  2235                           	opt stack 0
  2236  0000AB                     GenerateSubkey@l:
  2237                           	opt stack 0
  2238                           
  2239                           ; 16 bytes @ 0x4B
  2240  0000AB                     	ds	4
  2241  0000AF                     LORAWAN_RxTimeout@i:
  2242                           	opt stack 0
  2243                           
  2244                           ; 1 bytes @ 0x4F
  2245  0000AF                     	ds	1
  2246  0000B0                     ??_RADIO_DIO1:
  2247                           
  2248                           ; 1 bytes @ 0x50
  2249  0000B0                     	ds	1
  2250  0000B1                     RADIO_DIO1@dioMapping:
  2251                           	opt stack 0
  2252                           
  2253                           ; 1 bytes @ 0x51
  2254  0000B1                     	ds	10
  2255  0000BB                     GenerateSubkey@i:
  2256                           	opt stack 0
  2257                           
  2258                           ; 1 bytes @ 0x5B
  2259  0000BB                     	ds	1
  2260  0000BC                     AESCmac@key:
  2261                           	opt stack 0
  2262  0000BC                     _LORAWAN_TxDone$2092:
  2263                           	opt stack 0
  2264                           
  2265                           ; 4 bytes @ 0x5C
  2266  0000BC                     	ds	2
  2267  0000BE                     AESCmac@output:
  2268                           	opt stack 0
  2269                           
  2270                           ; 2 bytes @ 0x5E
  2271  0000BE                     	ds	2
  2272  0000C0                     AESCmac@input:
  2273                           	opt stack 0
  2274  0000C0                     _LORAWAN_TxDone$2093:
  2275                           	opt stack 0
  2276                           
  2277                           ; 4 bytes @ 0x60
  2278  0000C0                     	ds	2
  2279  0000C2                     AESCmac@size:
  2280                           	opt stack 0
  2281                           
  2282                           ; 1 bytes @ 0x62
  2283  0000C2                     	ds	1
  2284  0000C3                     ??_AESCmac:
  2285                           
  2286                           ; 1 bytes @ 0x63
  2287  0000C3                     	ds	1
  2288  0000C4                     LORAWAN_TxDone@found:
  2289                           	opt stack 0
  2290                           
  2291                           ; 1 bytes @ 0x64
  2292  0000C4                     	ds	1
  2293  0000C5                     LORAWAN_TxDone@delta:
  2294                           	opt stack 0
  2295                           
  2296                           ; 4 bytes @ 0x65
  2297  0000C5                     	ds	4
  2298  0000C9                     LORAWAN_TxDone@ticks:
  2299                           	opt stack 0
  2300                           
  2301                           ; 4 bytes @ 0x69
  2302  0000C9                     	ds	1
  2303  0000CA                     ?_ComputeMic:
  2304                           	opt stack 0
  2305  0000CA                     AssemblePacket@port:
  2306                           	opt stack 0
  2307  0000CA                     ComputeMic@key:
  2308                           	opt stack 0
  2309                           
  2310                           ; 2 bytes @ 0x6A
  2311  0000CA                     	ds	1
  2312  0000CB                     AssemblePacket@buffer:
  2313                           	opt stack 0
  2314                           
  2315                           ; 2 bytes @ 0x6B
  2316  0000CB                     	ds	1
  2317  0000CC                     ComputeMic@buffer:
  2318                           	opt stack 0
  2319                           
  2320                           ; 2 bytes @ 0x6C
  2321  0000CC                     	ds	1
  2322  0000CD                     AssemblePacket@bufferLength:
  2323                           	opt stack 0
  2324  0000CD                     LORAWAN_TxDone@minim:
  2325                           	opt stack 0
  2326                           
  2327                           ; 4 bytes @ 0x6D
  2328  0000CD                     	ds	1
  2329  0000CE                     ComputeMic@bufferLength:
  2330                           	opt stack 0
  2331                           
  2332                           ; 1 bytes @ 0x6E
  2333  0000CE                     	ds	1
  2334  0000CF                     ??_AssemblePacket:
  2335  0000CF                     ComputeMic@mic:
  2336                           	opt stack 0
  2337                           
  2338                           ; 4 bytes @ 0x6F
  2339  0000CF                     	ds	2
  2340  0000D1                     LORAWAN_TxDone@i:
  2341                           	opt stack 0
  2342  0000D1                     AssemblePacket@confirmed:
  2343                           	opt stack 0
  2344                           
  2345                           ; 1 bytes @ 0x71
  2346  0000D1                     	ds	1
  2347  0000D2                     ??_RADIO_TxDone:
  2348  0000D2                     ??_RADIO_FSKPacketSent:
  2349  0000D2                     AssemblePacket@mhdr:
  2350                           	opt stack 0
  2351                           
  2352                           ; 1 bytes @ 0x72
  2353  0000D2                     	ds	1
  2354  0000D3                     ??_PrepareJoinRequestFrame:
  2355  0000D3                     AssemblePacket@fCtrl:
  2356                           	opt stack 0
  2357                           
  2358                           ; 1 bytes @ 0x73
  2359  0000D3                     	ds	1
  2360  0000D4                     AssemblePacket@macCmdIdx:
  2361                           	opt stack 0
  2362                           
  2363                           ; 1 bytes @ 0x74
  2364  0000D4                     	ds	1
  2365  0000D5                     AssemblePacket@bufferIndex:
  2366                           	opt stack 0
  2367  0000D5                     PrepareJoinRequestFrame@mic:
  2368                           	opt stack 0
  2369                           
  2370                           ; 4 bytes @ 0x75
  2371  0000D5                     	ds	1
  2372  0000D6                     LORAWAN_Send@port:
  2373                           	opt stack 0
  2374  0000D6                     RADIO_TxDone@timeOnAir:
  2375                           	opt stack 0
  2376  0000D6                     RADIO_FSKPacketSent@timeOnAir:
  2377                           	opt stack 0
  2378                           
  2379                           ; 4 bytes @ 0x76
  2380  0000D6                     	ds	1
  2381  0000D7                     LORAWAN_Send@buffer:
  2382                           	opt stack 0
  2383                           
  2384                           ; 2 bytes @ 0x77
  2385  0000D7                     	ds	2
  2386  0000D9                     LORAWAN_Send@bufferLength:
  2387                           	opt stack 0
  2388  0000D9                     PrepareJoinRequestFrame@mhdr:
  2389                           	opt stack 0
  2390                           
  2391                           ; 1 bytes @ 0x79
  2392  0000D9                     	ds	1
  2393  0000DA                     ??_LORAWAN_Send:
  2394  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2395                           	opt stack 0
  2396  0000DA                     _RADIO_TxDone$1211:
  2397                           	opt stack 0
  2398  0000DA                     _RADIO_FSKPacketSent$1215:
  2399                           	opt stack 0
  2400                           
  2401                           ; 4 bytes @ 0x7A
  2402  0000DA                     	ds	1
  2403  0000DB                     LORAWAN_Send@result:
  2404                           	opt stack 0
  2405  0000DB                     PrepareJoinRequestFrame@iCtr:
  2406                           	opt stack 0
  2407                           
  2408                           ; 1 bytes @ 0x7B
  2409  0000DB                     	ds	1
  2410  0000DC                     LORAWAN_Join@bufferIndex:
  2411                           	opt stack 0
  2412  0000DC                     LORAWAN_Send@confirmed:
  2413                           	opt stack 0
  2414                           
  2415                           ; 1 bytes @ 0x7C
  2416  0000DC                     	ds	1
  2417  0000DD                     ??_LORAWAN_RxDone:
  2418  0000DD                     ??_SwTimersExecute:
  2419  0000DD                     LORAWAN_Join@result:
  2420                           	opt stack 0
  2421                           
  2422                           ; 1 bytes @ 0x7D
  2423  0000DD                     	ds	1
  2424  0000DE                     RADIO_FSKPacketSent@irqFlags:
  2425                           	opt stack 0
  2426  0000DE                     LORAWAN_Join@activationTypeNew:
  2427                           	opt stack 0
  2428                           
  2429                           ; 1 bytes @ 0x7E
  2430  0000DE                     	ds	3
  2431  0000E1                     SwTimersExecute@i:
  2432                           	opt stack 0
  2433                           
  2434                           ; 1 bytes @ 0x81
  2435  0000E1                     	ds	1
  2436  0000E2                     RADIO_RxDone@irqFlags:
  2437                           	opt stack 0
  2438  0000E2                     RADIO_FSKPayloadReady@irqFlags:
  2439                           	opt stack 0
  2440                           
  2441                           ; 1 bytes @ 0x82
  2442  0000E2                     	ds	1
  2443  0000E3                     RADIO_RxDone@i:
  2444                           	opt stack 0
  2445  0000E3                     RADIO_FSKPayloadReady@i:
  2446                           	opt stack 0
  2447                           
  2448                           ; 1 bytes @ 0x83
  2449  0000E3                     	ds	1
  2450  0000E4                     ??_RADIO_DIO0:
  2451                           
  2452                           ; 1 bytes @ 0x84
  2453  0000E4                     	ds	2
  2454  0000E6                     RADIO_DIO0@dioMapping:
  2455                           	opt stack 0
  2456                           
  2457                           ; 1 bytes @ 0x86
  2458  0000E6                     	ds	1
  2459  0000E7                     RADIO_DIO0@opMode:
  2460                           	opt stack 0
  2461                           
  2462                           ; 1 bytes @ 0x87
  2463  0000E7                     	ds	1
  2464  0000E8                     tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           postdec2	equ	0xFDD
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           
  2474                           ; 1 bytes @ 0x88
  2475                           
  2476                           	psect	cstackCOMRAM
  2477  000001                     __pcstackCOMRAM:
  2478                           	opt stack 0
  2479  000001                     ?i2_TMR1_ReadTimer:
  2480                           	opt stack 0
  2481  000001                     i2TMR1_WriteTimer@timerVal:
  2482                           	opt stack 0
  2483                           
  2484                           ; 2 bytes @ 0x0
  2485  000001                     	ds	2
  2486  000003                     ??i2_TMR1_ReadTimer:
  2487  000003                     
  2488                           ; 1 bytes @ 0x2
  2489  000003                     	ds	2
  2490  000005                     i2TMR1_ReadTimer@readVal:
  2491                           	opt stack 0
  2492                           
  2493                           ; 2 bytes @ 0x4
  2494  000005                     	ds	2
  2495  000007                     i2TMR1_ReadTimer@readValHigh:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0x6
  2499  000007                     	ds	1
  2500  000008                     i2TMR1_ReadTimer@readValLow:
  2501                           	opt stack 0
  2502                           
  2503                           ; 1 bytes @ 0x7
  2504  000008                     	ds	1
  2505  000009                     ?i2_TMR_SwapTimer:
  2506                           	opt stack 0
  2507  000009                     ?i2_TMR_GetDeltaTime:
  2508                           	opt stack 0
  2509  000009                     i2TMR_SwapTimer@timerVal:
  2510                           	opt stack 0
  2511                           
  2512                           ; 2 bytes @ 0x8
  2513  000009                     	ds	2
  2514  00000B                     
  2515                           ; 1 bytes @ 0xA
  2516  00000B                     	ds	2
  2517  00000D                     ??i2_TMR_GetDeltaTime:
  2518                           
  2519                           ; 1 bytes @ 0xC
  2520  00000D                     	ds	12
  2521  000019                     ?i2_SwTimersInterrupt:
  2522                           	opt stack 0
  2523                           
  2524                           ; 4 bytes @ 0x18
  2525  000019                     	ds	4
  2526  00001D                     
  2527                           ; 1 bytes @ 0x1C
  2528  00001D                     	ds	4
  2529  000021                     i2SwTimersInterrupt@timeElapsed:
  2530                           	opt stack 0
  2531                           
  2532                           ; 4 bytes @ 0x20
  2533  000021                     	ds	4
  2534  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x24
  2538  000025                     	ds	4
  2539  000029                     i2SwTimersInterrupt@i:
  2540                           	opt stack 0
  2541                           
  2542                           ; 1 bytes @ 0x28
  2543  000029                     	ds	1
  2544  00002A                     ??_INTERRUPT_InterruptManager:
  2545                           
  2546                           ; 1 bytes @ 0x29
  2547  00002A                     	ds	8
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec2	equ	0xFDD
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           
  2558 ;;
  2559 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2560 ;;
  2561 ;; *************** function _main *****************
  2562 ;; Defined at:
  2563 ;;		line 50 in file "main.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels required when called:   19
  2583 ;; This function calls:
  2584 ;;		_ADC_Init
  2585 ;;		_IO_pins_init
  2586 ;;		_LORAWAN_GetState
  2587 ;;		_LORAWAN_Init
  2588 ;;		_LORAWAN_Join
  2589 ;;		_LORAWAN_Mainloop
  2590 ;;		_LORAWAN_SetApplicationSessionKey
  2591 ;;		_LORAWAN_SetDeviceAddress
  2592 ;;		_LORAWAN_SetNetworkSessionKey
  2593 ;;		_LoRaSleep
  2594 ;;		_LoRaWakeUp
  2595 ;;		_SYSTEM_Initialize
  2596 ;;		_SysConfigSleep
  2597 ;;		_TMR3_SetInterruptHandler
  2598 ;;		_readAndSend
  2599 ;; This function is called by:
  2600 ;;		Startup code after reset
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text0
  2605  005AFA                     __ptext0:
  2606                           	opt stack 0
  2607  005AFA                     _main:
  2608                           	opt stack 12
  2609                           
  2610                           ;main.c: 52: SYSTEM_Initialize();
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;incstack = 0
  2614  005AFA  EC02  F03A         	call	_SYSTEM_Initialize	;wreg free
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 53: PORTCbits.RC5 = 1;
  2618  005AFE  8A82               	bsf	3970,5,c	;volatile
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;main.c: 56: (INTCONbits.GIE = 1);
  2622  005B00  8EF2               	bsf	intcon,7,c	;volatile
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;main.c: 57: (INTCONbits.PEIE = 1);
  2626  005B02  8CF2               	bsf	intcon,6,c	;volatile
  2627                           
  2628                           ;main.c: 58: TMR3_SetInterruptHandler(handle16sInterrupt);
  2629  005B04  0E44               	movlw	low _handle16sInterrupt
  2630  005B06  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  2631  005B08  0E77               	movlw	high _handle16sInterrupt
  2632  005B0A  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2633  005B0C  EC1B  F03C         	call	_TMR3_SetInterruptHandler	;wreg free
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;main.c: 59: SysConfigSleep();
  2637  005B10  ECC7  F030         	call	_SysConfigSleep	;wreg free
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;main.c: 60: ADC_Init();
  2641  005B14  ECE2  F03B         	call	_ADC_Init	;wreg free
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;main.c: 61: IO_pins_init();
  2645  005B18  ECB5  F03B         	call	_IO_pins_init	;wreg free
  2646                           
  2647                           ; BSR set to: 15
  2648                           ;main.c: 63: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2649  005B1C  0E1C               	movlw	low _RxDataDone
  2650  005B1E  0100               	movlb	0	; () banked
  2651  005B20  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2652  005B22  0E61               	movlw	high _RxDataDone
  2653  005B24  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2654  005B26  0E44               	movlw	low _RxJoinResponse
  2655  005B28  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2656  005B2A  0E79               	movlw	high _RxJoinResponse
  2657  005B2C  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2658  005B2E  EC8B  F033         	call	_LORAWAN_Init	;wreg free
  2659                           
  2660                           ;main.c: 64: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2661  005B32  0ED4               	movlw	low _nwkSKey
  2662  005B34  0100               	movlb	0	; () banked
  2663  005B36  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2664  005B38  0E01               	movlw	high _nwkSKey
  2665  005B3A  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2666  005B3C  ECE2  F038         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2667                           
  2668                           ;main.c: 65: LORAWAN_SetApplicationSessionKey(appSKey);
  2669  005B40  0EC4               	movlw	low _appSKey
  2670  005B42  0100               	movlb	0	; () banked
  2671  005B44  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2672  005B46  0E01               	movlw	high _appSKey
  2673  005B48  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2674  005B4A  ECF7  F038         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2675                           
  2676                           ;main.c: 66: LORAWAN_SetDeviceAddress(devAddr);
  2677  005B4E  0E78               	movlw	120
  2678  005B50  0100               	movlb	0	; () banked
  2679  005B52  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  2680  005B54  0E56               	movlw	86
  2681  005B56  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  2682  005B58  0E34               	movlw	52
  2683  005B5A  6F66               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  2684  005B5C  0E12               	movlw	18
  2685  005B5E  6F67               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  2686  005B60  EC32  F03B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2687                           
  2688                           ; BSR set to: 2
  2689                           ;main.c: 67: LORAWAN_Join(ABP);
  2690  005B64  0E01               	movlw	1
  2691  005B66  EC12  F02E         	call	_LORAWAN_Join
  2692                           
  2693                           ;main.c: 70: TimeToSend = 1;
  2694  005B6A  0E01               	movlw	1
  2695  005B6C  0101               	movlb	1	; () banked
  2696  005B6E  6FC3               	movwf	_TimeToSend& (0+255),b
  2697  005B70                     l16150:
  2698                           
  2699                           ;main.c: 73: {
  2700                           ;main.c: 74: LORAWAN_Mainloop();
  2701  005B70  EC12  F037         	call	_LORAWAN_Mainloop	;wreg free
  2702                           
  2703                           ;main.c: 76: if(TimeToSend){
  2704  005B74  0101               	movlb	1	; () banked
  2705  005B76  51C3               	movf	_TimeToSend& (0+255),w,b
  2706  005B78  E006               	bz	l16160
  2707                           
  2708                           ; BSR set to: 1
  2709                           ;main.c: 77: LoRaWakeUp();
  2710  005B7A  EC5C  F03C         	call	_LoRaWakeUp	;wreg free
  2711                           
  2712                           ;main.c: 78: readAndSend();
  2713  005B7E  EC0B  F038         	call	_readAndSend	;wreg free
  2714                           
  2715                           ;main.c: 79: TimeToSend = 0;
  2716  005B82  0101               	movlb	1	; () banked
  2717  005B84  6BC3               	clrf	_TimeToSend& (0+255),b
  2718  005B86                     l16160:
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;main.c: 81: }
  2722                           ;main.c: 83: if(LORAWAN_GetState() == IDLE){
  2723  005B86  EC78  F03C         	call	_LORAWAN_GetState	;wreg free
  2724  005B8A  0900               	iorlw	0
  2725  005B8C  E1F1               	bnz	l16150
  2726                           
  2727                           ; BSR set to: 2
  2728                           ;main.c: 84: LoRaSleep();
  2729  005B8E  EC22  F03A         	call	_LoRaSleep	;wreg free
  2730  005B92  0003               	sleep		;# 
  2731  005B94  D7ED               	goto	l16150
  2732  005B96                     __end_of_main:
  2733                           	opt stack 0
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           intcon	equ	0xFF2
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec2	equ	0xFDD
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           
  2745 ;; *************** function _readAndSend *****************
  2746 ;; Defined at:
  2747 ;;		line 124 in file "main.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/1
  2758 ;;		On exit  : D/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;Total ram usage:        0 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:   14
  2768 ;; This function calls:
  2769 ;;		_ADC_Read
  2770 ;;		_LORAWAN_Send
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text1
  2777  007016                     __ptext1:
  2778                           	opt stack 0
  2779  007016                     _readAndSend:
  2780                           	opt stack 16
  2781                           
  2782                           ;main.c: 125: payload[0] = ADC_Read(27);
  2783                           
  2784                           ;incstack = 0
  2785  007016  0E1B               	movlw	27
  2786  007018  ECA1  F037         	call	_ADC_Read
  2787  00701C  C066  F1AF         	movff	?_ADC_Read,_payload
  2788  007020  C067  F1B0         	movff	?_ADC_Read+1,_payload+1
  2789                           
  2790                           ;main.c: 126: payload[1] = ADC_Read(26);
  2791  007024  0E1A               	movlw	26
  2792  007026  ECA1  F037         	call	_ADC_Read
  2793  00702A  C066  F1B1         	movff	?_ADC_Read,_payload+2
  2794  00702E  C067  F1B2         	movff	?_ADC_Read+1,_payload+3
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;main.c: 127: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  2798  007032  0E02               	movlw	2
  2799  007034  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  2800  007036  0EAF               	movlw	low _payload
  2801  007038  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  2802  00703A  0E01               	movlw	high _payload
  2803  00703C  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2804  00703E  0E04               	movlw	4
  2805  007040  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2806  007042  0E00               	movlw	0
  2807  007044  EF0D  F02A         	goto	_LORAWAN_Send
  2808  007048                     __end_of_readAndSend:
  2809                           	opt stack 0
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           intcon	equ	0xFF2
  2815                           postinc0	equ	0xFEE
  2816                           wreg	equ	0xFE8
  2817                           postdec2	equ	0xFDD
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           
  2821 ;; *************** function _ADC_Read *****************
  2822 ;; Defined at:
  2823 ;;		line 148 in file "main.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  channel         1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  channel         1   10[BANK0 ] unsigned char 
  2828 ;;  result          2   11[BANK0 ] unsigned int 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2    6[BANK0 ] unsigned int 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/1
  2835 ;;		On exit  : F/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2838 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;Total ram usage:        7 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    8
  2845 ;; This function calls:
  2846 ;;		_ADC_SelChannel
  2847 ;; This function is called by:
  2848 ;;		_readAndSend
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text2
  2853  006F42                     __ptext2:
  2854                           	opt stack 0
  2855  006F42                     _ADC_Read:
  2856                           	opt stack 21
  2857                           
  2858                           ;incstack = 0
  2859                           ;ADC_Read@channel stored from wreg
  2860  006F42  0100               	movlb	0	; () banked
  2861  006F44  6F6A               	movwf	ADC_Read@channel& (0+255),b
  2862                           
  2863                           ;main.c: 150: ADCON0bits.ADON = 1;
  2864  006F46  80C2               	bsf	4034,0,c	;volatile
  2865                           
  2866                           ;main.c: 151: ADC_SelChannel(channel);
  2867  006F48  516A               	movf	ADC_Read@channel& (0+255),w,b
  2868  006F4A  EC26  F03B         	call	_ADC_SelChannel
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;main.c: 152: ADCON0bits.GO = 1;
  2872  006F4E  82C2               	bsf	4034,1,c	;volatile
  2873  006F50                     l2745:
  2874  006F50  B2C2               	btfsc	4034,1,c	;volatile
  2875  006F52  D7FE               	goto	l2745
  2876                           
  2877                           ;main.c: 154: result = (ADRESH<<8) | ADRESL;
  2878  006F54  50C3               	movf	4035,w,c	;volatile
  2879  006F56  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  2880  006F5A  0100               	movlb	0	; () banked
  2881  006F5C  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  2882  006F5E  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  2883  006F62  6B68               	clrf	??_ADC_Read& (0+255),b
  2884  006F64  1168               	iorwf	??_ADC_Read& (0+255),w,b
  2885  006F66  6F6B               	movwf	ADC_Read@result& (0+255),b
  2886  006F68  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  2887  006F6A  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;main.c: 155: ADCON0bits.ADON = 0;
  2891  006F6C  90C2               	bcf	4034,0,c	;volatile
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;main.c: 156: return result;
  2895  006F6E  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  2896  006F72  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  2897                           
  2898                           ; BSR set to: 0
  2899  006F76  0012               	return		;funcret
  2900  006F78                     __end_of_ADC_Read:
  2901                           	opt stack 0
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           intcon	equ	0xFF2
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postdec2	equ	0xFDD
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           
  2913 ;; *************** function _ADC_SelChannel *****************
  2914 ;; Defined at:
  2915 ;;		line 143 in file "main.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  c               1    wreg     unsigned char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  c               1    5[BANK0 ] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : F/0
  2926 ;;		On exit  : F/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;Total ram usage:        2 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    7
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_ADC_Read
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text3
  2944  00764C                     __ptext3:
  2945                           	opt stack 0
  2946  00764C                     _ADC_SelChannel:
  2947                           	opt stack 21
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;incstack = 0
  2951                           ;ADC_SelChannel@c stored from wreg
  2952  00764C  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  2953                           
  2954                           ;main.c: 144: ADCON0bits.CHS = c;
  2955  00764E  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  2956  007652  0100               	movlb	0	; () banked
  2957  007654  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2958  007656  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2959  007658  50C2               	movf	4034,w,c	;volatile
  2960  00765A  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2961  00765C  0B83               	andlw	-125
  2962  00765E  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2963  007660  6EC2               	movwf	4034,c	;volatile
  2964                           
  2965                           ; BSR set to: 0
  2966  007662  0012               	return		;funcret
  2967  007664                     __end_of_ADC_SelChannel:
  2968                           	opt stack 0
  2969                           tblptru	equ	0xFF8
  2970                           tblptrh	equ	0xFF7
  2971                           tblptrl	equ	0xFF6
  2972                           tablat	equ	0xFF5
  2973                           intcon	equ	0xFF2
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postdec2	equ	0xFDD
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           
  2980 ;; *************** function _SysConfigSleep *****************
  2981 ;; Defined at:
  2982 ;;		line 166 in file "main.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		None
  2991 ;; Tracked objects:
  2992 ;;		On entry : F/0
  2993 ;;		On exit  : F/F
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    7
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_main
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text4
  3011  00618E                     __ptext4:
  3012                           	opt stack 0
  3013  00618E                     _SysConfigSleep:
  3014                           	opt stack 23
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 169: UART2MD = 1;
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;incstack = 0
  3021  00618E  010F               	movlb	15	; () banked
  3022  006190  8F3F               	bsf	63,7,b	;volatile
  3023                           
  3024                           ;main.c: 170: UART1MD = 1;
  3025  006192  8D3F               	bsf	63,6,b	;volatile
  3026                           
  3027                           ;main.c: 171: TMR6MD = 1;
  3028  006194  8B3F               	bsf	63,5,b	;volatile
  3029                           
  3030                           ;main.c: 172: TMR5MD = 1;
  3031  006196  893F               	bsf	63,4,b	;volatile
  3032                           
  3033                           ;main.c: 173: TMR4MD = 1;
  3034  006198  873F               	bsf	63,3,b	;volatile
  3035                           
  3036                           ;main.c: 174: TMR2MD = 1;
  3037  00619A  833F               	bsf	63,1,b	;volatile
  3038                           
  3039                           ;main.c: 175: MSSP1MD = 1;
  3040  00619C  8D3E               	bsf	62,6,b	;volatile
  3041                           
  3042                           ;main.c: 176: CCP5MD = 1;
  3043  00619E  893E               	bsf	62,4,b	;volatile
  3044                           
  3045                           ;main.c: 177: CCP4MD = 1;
  3046  0061A0  873E               	bsf	62,3,b	;volatile
  3047                           
  3048                           ;main.c: 178: CCP3MD = 1;
  3049  0061A2  853E               	bsf	62,2,b	;volatile
  3050                           
  3051                           ;main.c: 179: CCP2MD = 1;
  3052  0061A4  833E               	bsf	62,1,b	;volatile
  3053                           
  3054                           ;main.c: 180: CCP1MD = 1;
  3055  0061A6  813E               	bsf	62,0,b	;volatile
  3056                           
  3057                           ;main.c: 181: CTMUMD = 1;
  3058  0061A8  873D               	bsf	61,3,b	;volatile
  3059                           
  3060                           ;main.c: 182: CMP2MD = 1;
  3061  0061AA  853D               	bsf	61,2,b	;volatile
  3062                           
  3063                           ;main.c: 183: CMP1MD = 1;
  3064  0061AC  833D               	bsf	61,1,b	;volatile
  3065                           
  3066                           ;main.c: 186: IDLEN = 0;
  3067  0061AE  9ED3               	bcf	4051,7,c	;volatile
  3068                           
  3069                           ;main.c: 190: TRISA = 0x00;
  3070  0061B0  6A92               	clrf	3986,c	;volatile
  3071                           
  3072                           ;main.c: 191: LATA = 0x00;
  3073  0061B2  6A89               	clrf	3977,c	;volatile
  3074                           
  3075                           ;main.c: 194: TRISBbits.RB4 = 0;
  3076  0061B4  9893               	bcf	3987,4,c	;volatile
  3077                           
  3078                           ;main.c: 195: TRISBbits.RB5 = 0;
  3079  0061B6  9A93               	bcf	3987,5,c	;volatile
  3080                           
  3081                           ;main.c: 196: TRISBbits.RB6 = 0;
  3082  0061B8  9C93               	bcf	3987,6,c	;volatile
  3083                           
  3084                           ;main.c: 197: TRISBbits.RB7 = 0;
  3085  0061BA  9E93               	bcf	3987,7,c	;volatile
  3086                           
  3087                           ;main.c: 198: LATBbits.LATB4 = 0;
  3088  0061BC  988A               	bcf	3978,4,c	;volatile
  3089                           
  3090                           ;main.c: 199: LATBbits.LATB5 = 0;
  3091  0061BE  9A8A               	bcf	3978,5,c	;volatile
  3092                           
  3093                           ;main.c: 200: LATBbits.LATB6 = 0;
  3094  0061C0  9C8A               	bcf	3978,6,c	;volatile
  3095                           
  3096                           ;main.c: 201: LATBbits.LATB7 = 0;
  3097  0061C2  9E8A               	bcf	3978,7,c	;volatile
  3098                           
  3099                           ;main.c: 204: TRISCbits.RC0 = 0;
  3100  0061C4  9094               	bcf	3988,0,c	;volatile
  3101                           
  3102                           ;main.c: 205: TRISCbits.RC1 = 0;
  3103  0061C6  9294               	bcf	3988,1,c	;volatile
  3104                           
  3105                           ;main.c: 206: TRISCbits.RC3 = 0;
  3106  0061C8  9694               	bcf	3988,3,c	;volatile
  3107                           
  3108                           ;main.c: 207: TRISCbits.RC4 = 0;
  3109  0061CA  9894               	bcf	3988,4,c	;volatile
  3110                           
  3111                           ;main.c: 209: TRISCbits.RC6 = 0;
  3112  0061CC  9C94               	bcf	3988,6,c	;volatile
  3113                           
  3114                           ;main.c: 210: TRISCbits.RC7 = 0;
  3115  0061CE  9E94               	bcf	3988,7,c	;volatile
  3116                           
  3117                           ;main.c: 211: LATCbits.LATC0 = 0;
  3118  0061D0  908B               	bcf	3979,0,c	;volatile
  3119                           
  3120                           ;main.c: 212: LATCbits.LATC1 = 0;
  3121  0061D2  928B               	bcf	3979,1,c	;volatile
  3122                           
  3123                           ;main.c: 213: LATCbits.LATC3 = 0;
  3124  0061D4  968B               	bcf	3979,3,c	;volatile
  3125                           
  3126                           ;main.c: 214: LATCbits.LATC4 = 0;
  3127  0061D6  988B               	bcf	3979,4,c	;volatile
  3128                           
  3129                           ;main.c: 216: LATCbits.LATC6 = 0;
  3130  0061D8  9C8B               	bcf	3979,6,c	;volatile
  3131                           
  3132                           ;main.c: 217: LATCbits.LATC7 = 0;
  3133  0061DA  9E8B               	bcf	3979,7,c	;volatile
  3134                           
  3135                           ;main.c: 220: TRISDbits.RD0 = 0;
  3136  0061DC  9095               	bcf	3989,0,c	;volatile
  3137                           
  3138                           ;main.c: 221: TRISDbits.RD1 = 0;
  3139  0061DE  9295               	bcf	3989,1,c	;volatile
  3140                           
  3141                           ;main.c: 222: TRISDbits.RD2 = 0;
  3142  0061E0  9495               	bcf	3989,2,c	;volatile
  3143                           
  3144                           ;main.c: 223: TRISDbits.RD4 = 0;
  3145  0061E2  9895               	bcf	3989,4,c	;volatile
  3146                           
  3147                           ;main.c: 224: TRISDbits.RD5 = 0;
  3148  0061E4  9A95               	bcf	3989,5,c	;volatile
  3149                           
  3150                           ;main.c: 225: TRISDbits.RD7 = 0;
  3151  0061E6  9E95               	bcf	3989,7,c	;volatile
  3152                           
  3153                           ;main.c: 226: LATDbits.LATD0 = 0;
  3154  0061E8  908C               	bcf	3980,0,c	;volatile
  3155                           
  3156                           ;main.c: 227: LATDbits.LATD1 = 0;
  3157  0061EA  928C               	bcf	3980,1,c	;volatile
  3158                           
  3159                           ;main.c: 228: LATDbits.LATD2 = 0;
  3160  0061EC  948C               	bcf	3980,2,c	;volatile
  3161                           
  3162                           ;main.c: 229: LATDbits.LATD4 = 0;
  3163  0061EE  988C               	bcf	3980,4,c	;volatile
  3164                           
  3165                           ;main.c: 234: TRISEbits.RE0 = 0;
  3166  0061F0  9096               	bcf	3990,0,c	;volatile
  3167                           
  3168                           ;main.c: 235: TRISEbits.RE1 = 0;
  3169  0061F2  9296               	bcf	3990,1,c	;volatile
  3170                           
  3171                           ;main.c: 236: TRISEbits.RE2 = 0;
  3172  0061F4  9496               	bcf	3990,2,c	;volatile
  3173                           
  3174                           ;main.c: 237: LATEbits.LATE0 = 0;
  3175  0061F6  908D               	bcf	3981,0,c	;volatile
  3176                           
  3177                           ;main.c: 238: LATEbits.LATE1 = 0;
  3178  0061F8  928D               	bcf	3981,1,c	;volatile
  3179                           
  3180                           ;main.c: 239: LATEbits.LATE2 = 0;
  3181  0061FA  948D               	bcf	3981,2,c	;volatile
  3182                           
  3183                           ; BSR set to: 15
  3184  0061FC  0012               	return		;funcret
  3185  0061FE                     __end_of_SysConfigSleep:
  3186                           	opt stack 0
  3187                           tblptru	equ	0xFF8
  3188                           tblptrh	equ	0xFF7
  3189                           tblptrl	equ	0xFF6
  3190                           tablat	equ	0xFF5
  3191                           intcon	equ	0xFF2
  3192                           postinc0	equ	0xFEE
  3193                           wreg	equ	0xFE8
  3194                           postdec2	equ	0xFDD
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           
  3198 ;; *************** function _SYSTEM_Initialize *****************
  3199 ;; Defined at:
  3200 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : F/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;Total ram usage:        0 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:   10
  3221 ;; This function calls:
  3222 ;;		_EXT_INT_Initialize
  3223 ;;		_INTERRUPT_Initialize
  3224 ;;		_LORAWAN_PlatformInit
  3225 ;;		_OSCILLATOR_Initialize
  3226 ;;		_PIN_MANAGER_Initialize
  3227 ;;		_SPI2_Initialize
  3228 ;;		_TMR1_Initialize
  3229 ;;		_TMR3_Initialize
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text5
  3236  007404                     __ptext5:
  3237                           	opt stack 0
  3238  007404                     _SYSTEM_Initialize:
  3239                           	opt stack 20
  3240                           
  3241                           ;mcc.c: 114: INTERRUPT_Initialize();
  3242                           
  3243                           ; BSR set to: 15
  3244                           ;incstack = 0
  3245  007404  ECA0  F03C         	call	_INTERRUPT_Initialize	;wreg free
  3246                           
  3247                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3248  007408  ECC7  F035         	call	_PIN_MANAGER_Initialize	;wreg free
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3252  00740C  ECF7  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;mcc.c: 117: SPI2_Initialize();
  3256  007410  EC15  F03C         	call	_SPI2_Initialize	;wreg free
  3257                           
  3258                           ;mcc.c: 118: TMR3_Initialize();
  3259  007414  EC36  F039         	call	_TMR3_Initialize	;wreg free
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;mcc.c: 119: EXT_INT_Initialize();
  3263  007418  EC88  F038         	call	_EXT_INT_Initialize	;wreg free
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;mcc.c: 120: TMR1_Initialize();
  3267  00741C  EC72  F039         	call	_TMR1_Initialize	;wreg free
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;mcc.c: 121: LORAWAN_PlatformInit();
  3271  007420  EF12  F03A         	goto	_LORAWAN_PlatformInit	;wreg free
  3272  007424                     __end_of_SYSTEM_Initialize:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           intcon	equ	0xFF2
  3279                           postinc0	equ	0xFEE
  3280                           wreg	equ	0xFE8
  3281                           postdec2	equ	0xFDD
  3282                           fsr2h	equ	0xFDA
  3283                           fsr2l	equ	0xFD9
  3284                           
  3285 ;; *************** function _TMR3_Initialize *****************
  3286 ;; Defined at:
  3287 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : F/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    8
  3308 ;; This function calls:
  3309 ;;		_TMR3_SetInterruptHandler
  3310 ;;		_TMR3_StartTimer
  3311 ;; This function is called by:
  3312 ;;		_SYSTEM_Initialize
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text6
  3317  00726C                     __ptext6:
  3318                           	opt stack 0
  3319  00726C                     _TMR3_Initialize:
  3320                           	opt stack 21
  3321                           
  3322                           ;tmr3.c: 67: T3CON = 0xBC;
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;incstack = 0
  3326  00726C  0EBC               	movlw	188
  3327  00726E  6EB1               	movwf	4017,c	;volatile
  3328                           
  3329                           ;tmr3.c: 70: T3GCON = 0x00;
  3330  007270  6AB4               	clrf	4020,c	;volatile
  3331                           
  3332                           ;tmr3.c: 73: TMR3H = 0x00;
  3333  007272  6AB3               	clrf	4019,c	;volatile
  3334                           
  3335                           ;tmr3.c: 76: TMR3L = 0x00;
  3336  007274  6AB2               	clrf	4018,c	;volatile
  3337                           
  3338                           ;tmr3.c: 79: timer3ReloadVal=TMR3;
  3339  007276  CFB2 F05D          	movff	4018,_timer3ReloadVal	;volatile
  3340  00727A  CFB3 F05E          	movff	4019,_timer3ReloadVal+1	;volatile
  3341                           
  3342                           ;tmr3.c: 82: PIR2bits.TMR3IF = 0;
  3343  00727E  92A1               	bcf	4001,1,c	;volatile
  3344                           
  3345                           ;tmr3.c: 85: PIE2bits.TMR3IE = 1;
  3346  007280  82A0               	bsf	4000,1,c	;volatile
  3347                           
  3348                           ;tmr3.c: 88: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  3349  007282  0E5E               	movlw	low _TMR3_DefaultInterruptHandler
  3350  007284  0100               	movlb	0	; () banked
  3351  007286  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3352  007288  0E79               	movlw	high _TMR3_DefaultInterruptHandler
  3353  00728A  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3354  00728C  EC1B  F03C         	call	_TMR3_SetInterruptHandler	;wreg free
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;tmr3.c: 91: TMR3_StartTimer();
  3358  007290  EF9A  F03C         	goto	_TMR3_StartTimer	;wreg free
  3359  007294                     __end_of_TMR3_Initialize:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           intcon	equ	0xFF2
  3366                           postinc0	equ	0xFEE
  3367                           wreg	equ	0xFE8
  3368                           postdec2	equ	0xFDD
  3369                           fsr2h	equ	0xFDA
  3370                           fsr2l	equ	0xFD9
  3371                           
  3372 ;; *************** function _TMR3_StartTimer *****************
  3373 ;; Defined at:
  3374 ;;		line 94 in file "mcc_generated_files/tmr3.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		None
  3383 ;; Tracked objects:
  3384 ;;		On entry : F/0
  3385 ;;		On exit  : F/0
  3386 ;;		Unchanged: F/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    7
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_TMR3_Initialize
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text7
  3403  007934                     __ptext7:
  3404                           	opt stack 0
  3405  007934                     _TMR3_StartTimer:
  3406                           	opt stack 21
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;tmr3.c: 97: T3CONbits.TMR3ON = 1;
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;incstack = 0
  3413  007934  80B1               	bsf	4017,0,c	;volatile
  3414                           
  3415                           ; BSR set to: 0
  3416  007936  0012               	return		;funcret
  3417  007938                     __end_of_TMR3_StartTimer:
  3418                           	opt stack 0
  3419                           tblptru	equ	0xFF8
  3420                           tblptrh	equ	0xFF7
  3421                           tblptrl	equ	0xFF6
  3422                           tablat	equ	0xFF5
  3423                           intcon	equ	0xFF2
  3424                           postinc0	equ	0xFEE
  3425                           wreg	equ	0xFE8
  3426                           postdec2	equ	0xFDD
  3427                           fsr2h	equ	0xFDA
  3428                           fsr2l	equ	0xFD9
  3429                           
  3430 ;; *************** function _TMR3_SetInterruptHandler *****************
  3431 ;; Defined at:
  3432 ;;		line 183 in file "mcc_generated_files/tmr3.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3435 ;;		 -> handle16sInterrupt(1), TMR3_DefaultInterruptHandler(1), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : F/0
  3444 ;;		On exit  : F/0
  3445 ;;		Unchanged: F/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;Total ram usage:        2 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    7
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_TMR3_Initialize
  3458 ;;		_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text8
  3463  007836                     __ptext8:
  3464                           	opt stack 0
  3465  007836                     _TMR3_SetInterruptHandler:
  3466                           	opt stack 23
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;tmr3.c: 184: TMR3_InterruptHandler = InterruptHandler;
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;incstack = 0
  3473  007836  C064  F1EC         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3474  00783A  C065  F1ED         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3475                           
  3476                           ; BSR set to: 0
  3477  00783E  0012               	return		;funcret
  3478  007840                     __end_of_TMR3_SetInterruptHandler:
  3479                           	opt stack 0
  3480                           tblptru	equ	0xFF8
  3481                           tblptrh	equ	0xFF7
  3482                           tblptrl	equ	0xFF6
  3483                           tablat	equ	0xFF5
  3484                           intcon	equ	0xFF2
  3485                           postinc0	equ	0xFEE
  3486                           wreg	equ	0xFE8
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           
  3491 ;; *************** function _TMR1_Initialize *****************
  3492 ;; Defined at:
  3493 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  1    wreg      void 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : F/0
  3504 ;;		On exit  : F/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    8
  3514 ;; This function calls:
  3515 ;;		_TMR1_SetInterruptHandler
  3516 ;;		_TMR1_StartTimer
  3517 ;; This function is called by:
  3518 ;;		_SYSTEM_Initialize
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text9
  3523  0072E4                     __ptext9:
  3524                           	opt stack 0
  3525  0072E4                     _TMR1_Initialize:
  3526                           	opt stack 21
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;tmr1.c: 67: T1CON = 0x8C;
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;incstack = 0
  3533  0072E4  0E8C               	movlw	140
  3534  0072E6  6ECD               	movwf	4045,c	;volatile
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;tmr1.c: 70: T1GCON = 0x00;
  3538  0072E8  6ACC               	clrf	4044,c	;volatile
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;tmr1.c: 73: TMR1H = 0x00;
  3542  0072EA  6ACF               	clrf	4047,c	;volatile
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;tmr1.c: 76: TMR1L = 0x00;
  3546  0072EC  6ACE               	clrf	4046,c	;volatile
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3550  0072EE  CFCE F05B          	movff	4046,_timer1ReloadVal	;volatile
  3551  0072F2  CFCF F05C          	movff	4047,_timer1ReloadVal+1	;volatile
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3555  0072F6  909E               	bcf	3998,0,c	;volatile
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3559  0072F8  809D               	bsf	3997,0,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3563  0072FA  0E60               	movlw	low _TMR1_DefaultInterruptHandler
  3564  0072FC  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3565  0072FE  0E79               	movlw	high _TMR1_DefaultInterruptHandler
  3566  007300  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3567  007302  EC20  F03C         	call	_TMR1_SetInterruptHandler	;wreg free
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;tmr1.c: 91: TMR1_StartTimer();
  3571  007306  EF9C  F03C         	goto	_TMR1_StartTimer	;wreg free
  3572  00730A                     __end_of_TMR1_Initialize:
  3573                           	opt stack 0
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           intcon	equ	0xFF2
  3579                           postinc0	equ	0xFEE
  3580                           wreg	equ	0xFE8
  3581                           postdec2	equ	0xFDD
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           
  3585 ;; *************** function _TMR1_StartTimer *****************
  3586 ;; Defined at:
  3587 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		None
  3596 ;; Tracked objects:
  3597 ;;		On entry : F/0
  3598 ;;		On exit  : F/0
  3599 ;;		Unchanged: F/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    7
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		_TMR1_Initialize
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text10
  3616  007938                     __ptext10:
  3617                           	opt stack 0
  3618  007938                     _TMR1_StartTimer:
  3619                           	opt stack 21
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;incstack = 0
  3626  007938  80CD               	bsf	4045,0,c	;volatile
  3627                           
  3628                           ; BSR set to: 0
  3629  00793A  0012               	return		;funcret
  3630  00793C                     __end_of_TMR1_StartTimer:
  3631                           	opt stack 0
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           intcon	equ	0xFF2
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           postdec2	equ	0xFDD
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           
  3643 ;; *************** function _PIN_MANAGER_Initialize *****************
  3644 ;; Defined at:
  3645 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : F/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    8
  3666 ;; This function calls:
  3667 ;;		_IOCB4_SetInterruptHandler
  3668 ;; This function is called by:
  3669 ;;		_SYSTEM_Initialize
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text11
  3674  006B8E                     __ptext11:
  3675                           	opt stack 0
  3676  006B8E                     _PIN_MANAGER_Initialize:
  3677                           	opt stack 21
  3678                           
  3679                           ;pin_manager.c: 57: LATE = 0x00;
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;incstack = 0
  3683  006B8E  6A8D               	clrf	3981,c	;volatile
  3684                           
  3685                           ;pin_manager.c: 58: LATD = 0x00;
  3686  006B90  6A8C               	clrf	3980,c	;volatile
  3687                           
  3688                           ;pin_manager.c: 59: LATA = 0x00;
  3689  006B92  6A89               	clrf	3977,c	;volatile
  3690                           
  3691                           ;pin_manager.c: 60: LATB = 0x00;
  3692  006B94  6A8A               	clrf	3978,c	;volatile
  3693                           
  3694                           ;pin_manager.c: 61: LATC = 0x00;
  3695  006B96  6A8B               	clrf	3979,c	;volatile
  3696                           
  3697                           ;pin_manager.c: 66: TRISE = 0x07;
  3698  006B98  0E07               	movlw	7
  3699  006B9A  6E96               	movwf	3990,c	;volatile
  3700                           
  3701                           ;pin_manager.c: 67: TRISA = 0xFF;
  3702  006B9C  6892               	setf	3986,c	;volatile
  3703                           
  3704                           ;pin_manager.c: 68: TRISB = 0xFF;
  3705  006B9E  6893               	setf	3987,c	;volatile
  3706                           
  3707                           ;pin_manager.c: 69: TRISC = 0xFE;
  3708  006BA0  0EFE               	movlw	254
  3709  006BA2  6E94               	movwf	3988,c	;volatile
  3710                           
  3711                           ;pin_manager.c: 70: TRISD = 0xE6;
  3712  006BA4  0EE6               	movlw	230
  3713  006BA6  6E95               	movwf	3989,c	;volatile
  3714                           
  3715                           ;pin_manager.c: 75: ANSELC = 0xF8;
  3716  006BA8  0EF8               	movlw	248
  3717  006BAA  010F               	movlb	15	; () banked
  3718  006BAC  6F3A               	movwf	58,b	;volatile
  3719                           
  3720                           ;pin_manager.c: 76: ANSELB = 0x28;
  3721  006BAE  0E28               	movlw	40
  3722  006BB0  6F39               	movwf	57,b	;volatile
  3723                           
  3724                           ;pin_manager.c: 77: ANSELD = 0xE4;
  3725  006BB2  0EE4               	movlw	228
  3726  006BB4  6F3B               	movwf	59,b	;volatile
  3727                           
  3728                           ;pin_manager.c: 78: ANSELE = 0x07;
  3729  006BB6  0E07               	movlw	7
  3730  006BB8  6F3C               	movwf	60,b	;volatile
  3731                           
  3732                           ;pin_manager.c: 79: ANSELA = 0x2F;
  3733  006BBA  0E2F               	movlw	47
  3734  006BBC  6F38               	movwf	56,b	;volatile
  3735                           
  3736                           ; BSR set to: 15
  3737                           ;pin_manager.c: 84: WPUB = 0xFF;
  3738  006BBE  6861               	setf	3937,c	;volatile
  3739                           
  3740                           ; BSR set to: 15
  3741                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  3742  006BC0  9EF1               	bcf	intcon2,7,c	;volatile
  3743                           
  3744                           ; BSR set to: 15
  3745                           ;pin_manager.c: 93: IOCBbits.IOCB4 = 1;
  3746  006BC2  8862               	bsf	3938,4,c	;volatile
  3747                           
  3748                           ; BSR set to: 15
  3749                           ;pin_manager.c: 96: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3750  006BC4  0E62               	movlw	low _IOCB4_DefaultInterruptHandler
  3751  006BC6  0100               	movlb	0	; () banked
  3752  006BC8  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3753  006BCA  0E79               	movlw	high _IOCB4_DefaultInterruptHandler
  3754  006BCC  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3755  006BCE  EC25  F03C         	call	_IOCB4_SetInterruptHandler	;wreg free
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;pin_manager.c: 99: INTCONbits.RBIE = 1;
  3759  006BD2  86F2               	bsf	intcon,3,c	;volatile
  3760                           
  3761                           ; BSR set to: 0
  3762  006BD4  0012               	return		;funcret
  3763  006BD6                     __end_of_PIN_MANAGER_Initialize:
  3764                           	opt stack 0
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           intcon	equ	0xFF2
  3770                           intcon2	equ	0xFF1
  3771                           postinc0	equ	0xFEE
  3772                           wreg	equ	0xFE8
  3773                           postdec2	equ	0xFDD
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           
  3777 ;; *************** function _OSCILLATOR_Initialize *****************
  3778 ;; Defined at:
  3779 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2
  3788 ;; Tracked objects:
  3789 ;;		On entry : F/0
  3790 ;;		On exit  : F/0
  3791 ;;		Unchanged: F/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    7
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_SYSTEM_Initialize
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text12
  3808  0077EE                     __ptext12:
  3809                           	opt stack 0
  3810  0077EE                     _OSCILLATOR_Initialize:
  3811                           	opt stack 22
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;mcc.c: 127: OSCCON = 0x70;
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;incstack = 0
  3818  0077EE  0E70               	movlw	112
  3819  0077F0  6ED3               	movwf	4051,c	;volatile
  3820                           
  3821                           ;mcc.c: 129: OSCCON2 = 0x04;
  3822  0077F2  0E04               	movlw	4
  3823  0077F4  6ED2               	movwf	4050,c	;volatile
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;mcc.c: 131: OSCTUNE = 0x00;
  3827  0077F6  6A9B               	clrf	3995,c	;volatile
  3828                           
  3829                           ; BSR set to: 0
  3830  0077F8  0012               	return		;funcret
  3831  0077FA                     __end_of_OSCILLATOR_Initialize:
  3832                           	opt stack 0
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           intcon	equ	0xFF2
  3838                           intcon2	equ	0xFF1
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           postdec2	equ	0xFDD
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           
  3845 ;; *************** function _LORAWAN_PlatformInit *****************
  3846 ;; Defined at:
  3847 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : F/0
  3858 ;;		On exit  : F/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    9
  3868 ;; This function calls:
  3869 ;;		_DIO0_ISR_Lora_Init
  3870 ;;		_DIO1_ISR_Lora_Init
  3871 ;;		_DIO2_ISR_Lora_Init
  3872 ;;		_DIO3_ISR_Lora_Init
  3873 ;;		_DIO4_ISR_Lora_Init
  3874 ;;		_DIO5_ISR_Lora_Init
  3875 ;;		_SystemTimerInit
  3876 ;;		_TMR_ISR_Lora_Init
  3877 ;; This function is called by:
  3878 ;;		_SYSTEM_Initialize
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text13
  3883  007424                     __ptext13:
  3884                           	opt stack 0
  3885  007424                     _LORAWAN_PlatformInit:
  3886                           	opt stack 20
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;incstack = 0
  3893  007424  ECFD  F03B         	call	_TMR_ISR_Lora_Init	;wreg free
  3894                           
  3895                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3896  007428  EC0F  F03C         	call	_DIO0_ISR_Lora_Init	;wreg free
  3897                           
  3898                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3899  00742C  EC09  F03C         	call	_DIO1_ISR_Lora_Init	;wreg free
  3900                           
  3901                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3902  007430  EC03  F03C         	call	_DIO2_ISR_Lora_Init	;wreg free
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3906  007434  ECAD  F03C         	call	_DIO3_ISR_Lora_Init	;wreg free
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3910  007438  ECAC  F03C         	call	_DIO4_ISR_Lora_Init	;wreg free
  3911                           
  3912                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3913  00743C  EC7C  F03C         	call	_DIO5_ISR_Lora_Init	;wreg free
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;lorawan_init.c: 81: SystemTimerInit();
  3917  007440  EF9E  F03C         	goto	_SystemTimerInit	;wreg free
  3918  007444                     __end_of_LORAWAN_PlatformInit:
  3919                           	opt stack 0
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           intcon	equ	0xFF2
  3925                           intcon2	equ	0xFF1
  3926                           postinc0	equ	0xFEE
  3927                           wreg	equ	0xFE8
  3928                           postdec2	equ	0xFDD
  3929                           fsr2h	equ	0xFDA
  3930                           fsr2l	equ	0xFD9
  3931                           
  3932 ;; *************** function _TMR_ISR_Lora_Init *****************
  3933 ;; Defined at:
  3934 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : F/0
  3945 ;;		On exit  : F/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    8
  3955 ;; This function calls:
  3956 ;;		_TMR1_SetInterruptHandler
  3957 ;; This function is called by:
  3958 ;;		_LORAWAN_PlatformInit
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text14
  3963  0077FA                     __ptext14:
  3964                           	opt stack 0
  3965  0077FA                     _TMR_ISR_Lora_Init:
  3966                           	opt stack 20
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;incstack = 0
  3973  0077FA  0E60               	movlw	low _TMR_ISR_lora
  3974  0077FC  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3975  0077FE  0E6A               	movlw	high _TMR_ISR_lora
  3976  007800  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3977  007802  EF20  F03C         	goto	_TMR1_SetInterruptHandler	;wreg free
  3978  007806                     __end_of_TMR_ISR_Lora_Init:
  3979                           	opt stack 0
  3980                           tblptru	equ	0xFF8
  3981                           tblptrh	equ	0xFF7
  3982                           tblptrl	equ	0xFF6
  3983                           tablat	equ	0xFF5
  3984                           intcon	equ	0xFF2
  3985                           intcon2	equ	0xFF1
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           postdec2	equ	0xFDD
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           
  3992 ;; *************** function _TMR1_SetInterruptHandler *****************
  3993 ;; Defined at:
  3994 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3997 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : F/0
  4006 ;;		On exit  : F/0
  4007 ;;		Unchanged: F/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    7
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_TMR_ISR_Lora_Init
  4020 ;;		_TMR1_Initialize
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text15
  4025  007840                     __ptext15:
  4026                           	opt stack 0
  4027  007840                     _TMR1_SetInterruptHandler:
  4028                           	opt stack 21
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;incstack = 0
  4035  007840  C064  F1EA         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4036  007844  C065  F1EB         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4037                           
  4038                           ; BSR set to: 0
  4039  007848  0012               	return		;funcret
  4040  00784A                     __end_of_TMR1_SetInterruptHandler:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           intcon	equ	0xFF2
  4047                           intcon2	equ	0xFF1
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           postdec2	equ	0xFDD
  4051                           fsr2h	equ	0xFDA
  4052                           fsr2l	equ	0xFD9
  4053                           
  4054 ;; *************** function _SystemTimerInit *****************
  4055 ;; Defined at:
  4056 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		None
  4065 ;; Tracked objects:
  4066 ;;		On entry : F/0
  4067 ;;		On exit  : F/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    7
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_LORAWAN_PlatformInit
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text16
  4085  00793C                     __ptext16:
  4086                           	opt stack 0
  4087  00793C                     _SystemTimerInit:
  4088                           	opt stack 21
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;sw_timer.c: 137: allocatedTimers = 0;
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;incstack = 0
  4095  00793C  6BEF               	clrf	_allocatedTimers& (0+255),b	;volatile
  4096                           
  4097                           ; BSR set to: 0
  4098  00793E  0012               	return		;funcret
  4099  007940                     __end_of_SystemTimerInit:
  4100                           	opt stack 0
  4101                           tblptru	equ	0xFF8
  4102                           tblptrh	equ	0xFF7
  4103                           tblptrl	equ	0xFF6
  4104                           tablat	equ	0xFF5
  4105                           intcon	equ	0xFF2
  4106                           intcon2	equ	0xFF1
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           postdec2	equ	0xFDD
  4110                           fsr2h	equ	0xFDA
  4111                           fsr2l	equ	0xFD9
  4112                           
  4113 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4114 ;; Defined at:
  4115 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : F/0
  4126 ;;		On exit  : F/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    8
  4136 ;; This function calls:
  4137 ;;		_INT0_SetInterruptHandler
  4138 ;; This function is called by:
  4139 ;;		_LORAWAN_PlatformInit
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text17
  4144  0078F8                     __ptext17:
  4145                           	opt stack 0
  4146  0078F8                     _DIO5_ISR_Lora_Init:
  4147                           	opt stack 20
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;incstack = 0
  4154  0078F8  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4155  0078FA  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4156  0078FC  0C00               	retlw	0	;wreg free
  4157  0078FE                     __end_of_DIO5_ISR_Lora_Init:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           intcon	equ	0xFF2
  4164                           intcon2	equ	0xFF1
  4165                           postinc0	equ	0xFEE
  4166                           wreg	equ	0xFE8
  4167                           postdec2	equ	0xFDD
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           
  4171 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4172 ;; Defined at:
  4173 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		None
  4182 ;; Tracked objects:
  4183 ;;		On entry : F/0
  4184 ;;		On exit  : F/0
  4185 ;;		Unchanged: F/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    7
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_LORAWAN_PlatformInit
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text18
  4202  007958                     __ptext18:
  4203                           	opt stack 0
  4204  007958                     _DIO4_ISR_Lora_Init:
  4205                           	opt stack 21
  4206                           
  4207                           ; BSR set to: 0
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;incstack = 0
  4211  007958  0012               	return		;funcret
  4212  00795A                     __end_of_DIO4_ISR_Lora_Init:
  4213                           	opt stack 0
  4214                           tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           intcon	equ	0xFF2
  4219                           intcon2	equ	0xFF1
  4220                           postinc0	equ	0xFEE
  4221                           wreg	equ	0xFE8
  4222                           postdec2	equ	0xFDD
  4223                           fsr2h	equ	0xFDA
  4224                           fsr2l	equ	0xFD9
  4225                           
  4226 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4227 ;; Defined at:
  4228 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		None
  4237 ;; Tracked objects:
  4238 ;;		On entry : F/0
  4239 ;;		On exit  : F/0
  4240 ;;		Unchanged: F/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;Total ram usage:        0 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    7
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_LORAWAN_PlatformInit
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text19
  4257  00795A                     __ptext19:
  4258                           	opt stack 0
  4259  00795A                     _DIO3_ISR_Lora_Init:
  4260                           	opt stack 21
  4261                           
  4262                           ; BSR set to: 0
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;incstack = 0
  4266  00795A  0012               	return		;funcret
  4267  00795C                     __end_of_DIO3_ISR_Lora_Init:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           intcon	equ	0xFF2
  4274                           intcon2	equ	0xFF1
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           postdec2	equ	0xFDD
  4278                           fsr2h	equ	0xFDA
  4279                           fsr2l	equ	0xFD9
  4280                           
  4281 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4282 ;; Defined at:
  4283 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;		None
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0, cstack
  4292 ;; Tracked objects:
  4293 ;;		On entry : F/0
  4294 ;;		On exit  : F/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4301 ;;Total ram usage:        0 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    8
  4304 ;; This function calls:
  4305 ;;		_IOCB4_SetInterruptHandler
  4306 ;; This function is called by:
  4307 ;;		_LORAWAN_PlatformInit
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text20
  4312  007806                     __ptext20:
  4313                           	opt stack 0
  4314  007806                     _DIO2_ISR_Lora_Init:
  4315                           	opt stack 20
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;incstack = 0
  4322  007806  0E16               	movlw	low _DIO2_ISR_Lora
  4323  007808  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4324  00780A  0E79               	movlw	high _DIO2_ISR_Lora
  4325  00780C  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4326  00780E  EF25  F03C         	goto	_IOCB4_SetInterruptHandler	;wreg free
  4327  007812                     __end_of_DIO2_ISR_Lora_Init:
  4328                           	opt stack 0
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           intcon	equ	0xFF2
  4334                           intcon2	equ	0xFF1
  4335                           postinc0	equ	0xFEE
  4336                           wreg	equ	0xFE8
  4337                           postdec2	equ	0xFDD
  4338                           fsr2h	equ	0xFDA
  4339                           fsr2l	equ	0xFD9
  4340                           
  4341 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4342 ;; Defined at:
  4343 ;;		line 133 in file "mcc_generated_files/pin_manager.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4346 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : F/0
  4355 ;;		On exit  : F/0
  4356 ;;		Unchanged: F/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;Total ram usage:        2 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    7
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_PIN_MANAGER_Initialize
  4369 ;;		_DIO2_ISR_Lora_Init
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text21
  4374  00784A                     __ptext21:
  4375                           	opt stack 0
  4376  00784A                     _IOCB4_SetInterruptHandler:
  4377                           	opt stack 21
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;pin_manager.c: 134: IOCB4_InterruptHandler = InterruptHandler;
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;incstack = 0
  4384  00784A  C064  F1E8         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4385  00784E  C065  F1E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4386                           
  4387                           ; BSR set to: 0
  4388  007852  0012               	return		;funcret
  4389  007854                     __end_of_IOCB4_SetInterruptHandler:
  4390                           	opt stack 0
  4391                           tblptru	equ	0xFF8
  4392                           tblptrh	equ	0xFF7
  4393                           tblptrl	equ	0xFF6
  4394                           tablat	equ	0xFF5
  4395                           intcon	equ	0xFF2
  4396                           intcon2	equ	0xFF1
  4397                           postinc0	equ	0xFEE
  4398                           wreg	equ	0xFE8
  4399                           postdec2	equ	0xFDD
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           
  4403 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4404 ;; Defined at:
  4405 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : F/0
  4416 ;;		On exit  : F/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    8
  4426 ;; This function calls:
  4427 ;;		_INT2_SetInterruptHandler
  4428 ;; This function is called by:
  4429 ;;		_LORAWAN_PlatformInit
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text22
  4434  007812                     __ptext22:
  4435                           	opt stack 0
  4436  007812                     _DIO1_ISR_Lora_Init:
  4437                           	opt stack 20
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;incstack = 0
  4444  007812  0E22               	movlw	low _DIO1_ISR_Lora
  4445  007814  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4446  007816  0E79               	movlw	high _DIO1_ISR_Lora
  4447  007818  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4448  00781A  EF2A  F03C         	goto	_INT2_SetInterruptHandler	;wreg free
  4449  00781E                     __end_of_DIO1_ISR_Lora_Init:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           intcon	equ	0xFF2
  4456                           intcon2	equ	0xFF1
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           postdec2	equ	0xFDD
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           
  4463 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4464 ;; Defined at:
  4465 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : F/0
  4476 ;;		On exit  : F/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    8
  4486 ;; This function calls:
  4487 ;;		_INT1_SetInterruptHandler
  4488 ;; This function is called by:
  4489 ;;		_LORAWAN_PlatformInit
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text23
  4494  00781E                     __ptext23:
  4495                           	opt stack 0
  4496  00781E                     _DIO0_ISR_Lora_Init:
  4497                           	opt stack 20
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;incstack = 0
  4504  00781E  0E2E               	movlw	low _DIO0_ISR_Lora
  4505  007820  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4506  007822  0E79               	movlw	high _DIO0_ISR_Lora
  4507  007824  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4508  007826  EF2F  F03C         	goto	_INT1_SetInterruptHandler	;wreg free
  4509  00782A                     __end_of_DIO0_ISR_Lora_Init:
  4510                           	opt stack 0
  4511                           tblptru	equ	0xFF8
  4512                           tblptrh	equ	0xFF7
  4513                           tblptrl	equ	0xFF6
  4514                           tablat	equ	0xFF5
  4515                           intcon	equ	0xFF2
  4516                           intcon2	equ	0xFF1
  4517                           postinc0	equ	0xFEE
  4518                           wreg	equ	0xFE8
  4519                           postdec2	equ	0xFDD
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           
  4523 ;; *************** function _INTERRUPT_Initialize *****************
  4524 ;; Defined at:
  4525 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		None
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;Total ram usage:        0 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    7
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_SYSTEM_Initialize
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text24
  4554  007940                     __ptext24:
  4555                           	opt stack 0
  4556  007940                     _INTERRUPT_Initialize:
  4557                           	opt stack 22
  4558                           
  4559                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;incstack = 0
  4563  007940  9ED0               	bcf	4048,7,c	;volatile
  4564  007942  0012               	return		;funcret
  4565  007944                     __end_of_INTERRUPT_Initialize:
  4566                           	opt stack 0
  4567                           tblptru	equ	0xFF8
  4568                           tblptrh	equ	0xFF7
  4569                           tblptrl	equ	0xFF6
  4570                           tablat	equ	0xFF5
  4571                           intcon	equ	0xFF2
  4572                           intcon2	equ	0xFF1
  4573                           postinc0	equ	0xFEE
  4574                           wreg	equ	0xFE8
  4575                           postdec2	equ	0xFDD
  4576                           fsr2h	equ	0xFDA
  4577                           fsr2l	equ	0xFD9
  4578                           
  4579 ;; *************** function _EXT_INT_Initialize *****************
  4580 ;; Defined at:
  4581 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : F/0
  4592 ;;		On exit  : F/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    8
  4602 ;; This function calls:
  4603 ;;		_INT0_SetInterruptHandler
  4604 ;;		_INT1_SetInterruptHandler
  4605 ;;		_INT2_SetInterruptHandler
  4606 ;; This function is called by:
  4607 ;;		_SYSTEM_Initialize
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text25
  4612  007110                     __ptext25:
  4613                           	opt stack 0
  4614  007110                     _EXT_INT_Initialize:
  4615                           	opt stack 21
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4619                           
  4620                           ;incstack = 0
  4621  007110  90F0               	bcf	intcon3,0,c	;volatile
  4622                           
  4623                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4624  007112  8AF1               	bsf	intcon2,5,c	;volatile
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4628  007114  0E66               	movlw	low _INT1_DefaultInterruptHandler
  4629  007116  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4630  007118  0E79               	movlw	high _INT1_DefaultInterruptHandler
  4631  00711A  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4632  00711C  EC2F  F03C         	call	_INT1_SetInterruptHandler	;wreg free
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4636  007120  86F0               	bsf	intcon3,3,c	;volatile
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4640  007122  92F0               	bcf	intcon3,1,c	;volatile
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4644  007124  88F1               	bsf	intcon2,4,c	;volatile
  4645                           
  4646                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4647  007126  0E64               	movlw	low _INT2_DefaultInterruptHandler
  4648  007128  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4649  00712A  0E79               	movlw	high _INT2_DefaultInterruptHandler
  4650  00712C  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4651  00712E  EC2A  F03C         	call	_INT2_SetInterruptHandler	;wreg free
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4655  007132  88F0               	bsf	intcon3,4,c	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4659  007134  92F2               	bcf	intcon,1,c	;volatile
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4663  007136  8CF1               	bsf	intcon2,6,c	;volatile
  4664                           
  4665                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4666  007138  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4667  00713A  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4668  00713C  0C00               	retlw	0	;wreg free
  4669  00713E                     __end_of_EXT_INT_Initialize:
  4670                           	opt stack 0
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           intcon	equ	0xFF2
  4676                           intcon2	equ	0xFF1
  4677                           intcon3	equ	0xFF0
  4678                           postinc0	equ	0xFEE
  4679                           wreg	equ	0xFE8
  4680                           postdec2	equ	0xFDD
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           
  4684 ;; *************** function _INT2_SetInterruptHandler *****************
  4685 ;; Defined at:
  4686 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4689 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0
  4696 ;; Tracked objects:
  4697 ;;		On entry : F/0
  4698 ;;		On exit  : F/0
  4699 ;;		Unchanged: F/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;Total ram usage:        2 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    7
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_EXT_INT_Initialize
  4712 ;;		_DIO1_ISR_Lora_Init
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text26
  4717  007854                     __ptext26:
  4718                           	opt stack 0
  4719  007854                     _INT2_SetInterruptHandler:
  4720                           	opt stack 20
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;incstack = 0
  4727  007854  C064  F1E6         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4728  007858  C065  F1E7         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4729                           
  4730                           ; BSR set to: 0
  4731  00785C  0012               	return		;funcret
  4732  00785E                     __end_of_INT2_SetInterruptHandler:
  4733                           	opt stack 0
  4734                           tblptru	equ	0xFF8
  4735                           tblptrh	equ	0xFF7
  4736                           tblptrl	equ	0xFF6
  4737                           tablat	equ	0xFF5
  4738                           intcon	equ	0xFF2
  4739                           intcon2	equ	0xFF1
  4740                           intcon3	equ	0xFF0
  4741                           postinc0	equ	0xFEE
  4742                           wreg	equ	0xFE8
  4743                           postdec2	equ	0xFDD
  4744                           fsr2h	equ	0xFDA
  4745                           fsr2l	equ	0xFD9
  4746                           
  4747 ;; *************** function _INT1_SetInterruptHandler *****************
  4748 ;; Defined at:
  4749 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4752 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : F/0
  4761 ;;		On exit  : F/0
  4762 ;;		Unchanged: F/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;Total ram usage:        2 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    7
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_EXT_INT_Initialize
  4775 ;;		_DIO0_ISR_Lora_Init
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text27
  4780  00785E                     __ptext27:
  4781                           	opt stack 0
  4782  00785E                     _INT1_SetInterruptHandler:
  4783                           	opt stack 20
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;incstack = 0
  4790  00785E  C064  F1E4         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4791  007862  C065  F1E5         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4792                           
  4793                           ; BSR set to: 0
  4794  007866  0012               	return		;funcret
  4795  007868                     __end_of_INT1_SetInterruptHandler:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           intcon	equ	0xFF2
  4802                           intcon2	equ	0xFF1
  4803                           intcon3	equ	0xFF0
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           postdec2	equ	0xFDD
  4807                           fsr2h	equ	0xFDA
  4808                           fsr2l	equ	0xFD9
  4809                           
  4810 ;; *************** function _INT0_SetInterruptHandler *****************
  4811 ;; Defined at:
  4812 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4815 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		None
  4822 ;; Tracked objects:
  4823 ;;		On entry : F/0
  4824 ;;		On exit  : F/0
  4825 ;;		Unchanged: F/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4827 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;Total ram usage:        2 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    7
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_EXT_INT_Initialize
  4838 ;;		_DIO5_ISR_Lora_Init
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text28
  4843  00795C                     __ptext28:
  4844                           	opt stack 0
  4845  00795C                     _INT0_SetInterruptHandler:
  4846                           	opt stack 20
  4847                           
  4848                           ; BSR set to: 0
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;incstack = 0
  4852  00795C  0012               	return		;funcret
  4853  00795E                     __end_of_INT0_SetInterruptHandler:
  4854                           	opt stack 0
  4855                           tblptru	equ	0xFF8
  4856                           tblptrh	equ	0xFF7
  4857                           tblptrl	equ	0xFF6
  4858                           tablat	equ	0xFF5
  4859                           intcon	equ	0xFF2
  4860                           intcon2	equ	0xFF1
  4861                           intcon3	equ	0xFF0
  4862                           postinc0	equ	0xFEE
  4863                           wreg	equ	0xFE8
  4864                           postdec2	equ	0xFDD
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           
  4868 ;; *************** function _LoRaWakeUp *****************
  4869 ;; Defined at:
  4870 ;;		line 273 in file "main.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : F/1
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    8
  4891 ;; This function calls:
  4892 ;;		_SPI2_Initialize
  4893 ;; This function is called by:
  4894 ;;		_main
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text29
  4899  0078B8                     __ptext29:
  4900                           	opt stack 0
  4901  0078B8                     _LoRaWakeUp:
  4902                           	opt stack 22
  4903                           
  4904                           ; BSR set to: 1
  4905                           ;main.c: 275: MSSP2MD = 0;
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;incstack = 0
  4909  0078B8  010F               	movlb	15	; () banked
  4910  0078BA  9F3E               	bcf	62,7,b	;volatile
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;main.c: 276: SPI2_Initialize();
  4914  0078BC  EF15  F03C         	goto	_SPI2_Initialize	;wreg free
  4915  0078C0                     __end_of_LoRaWakeUp:
  4916                           	opt stack 0
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           intcon	equ	0xFF2
  4922                           intcon2	equ	0xFF1
  4923                           intcon3	equ	0xFF0
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           postdec2	equ	0xFDD
  4927                           fsr2h	equ	0xFDA
  4928                           fsr2l	equ	0xFD9
  4929                           
  4930 ;; *************** function _SPI2_Initialize *****************
  4931 ;; Defined at:
  4932 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;Total ram usage:        0 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    7
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_SYSTEM_Initialize
  4957 ;;		_LoRaWakeUp
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text30
  4962  00782A                     __ptext30:
  4963                           	opt stack 0
  4964  00782A                     _SPI2_Initialize:
  4965                           	opt stack 22
  4966                           
  4967                           ;spi2.c: 68: SSP2STAT = 0x40;
  4968                           
  4969                           ;incstack = 0
  4970  00782A  0E40               	movlw	64
  4971  00782C  6E6D               	movwf	3949,c	;volatile
  4972                           
  4973                           ;spi2.c: 71: SSP2CON1 = 0x20;
  4974  00782E  0E20               	movlw	32
  4975  007830  6E6C               	movwf	3948,c	;volatile
  4976                           
  4977                           ;spi2.c: 74: SSP2ADD = 0x00;
  4978  007832  6A6E               	clrf	3950,c	;volatile
  4979  007834  0012               	return		;funcret
  4980  007836                     __end_of_SPI2_Initialize:
  4981                           	opt stack 0
  4982                           tblptru	equ	0xFF8
  4983                           tblptrh	equ	0xFF7
  4984                           tblptrl	equ	0xFF6
  4985                           tablat	equ	0xFF5
  4986                           intcon	equ	0xFF2
  4987                           intcon2	equ	0xFF1
  4988                           intcon3	equ	0xFF0
  4989                           postinc0	equ	0xFEE
  4990                           wreg	equ	0xFE8
  4991                           postdec2	equ	0xFDD
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           
  4995 ;; *************** function _LoRaSleep *****************
  4996 ;; Defined at:
  4997 ;;		line 243 in file "main.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		None
  5006 ;; Tracked objects:
  5007 ;;		On entry : F/2
  5008 ;;		On exit  : F/F
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    7
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_main
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text31
  5026  007444                     __ptext31:
  5027                           	opt stack 0
  5028  007444                     _LoRaSleep:
  5029                           	opt stack 23
  5030                           
  5031                           ; BSR set to: 2
  5032                           ;main.c: 246: SSP2CON1 = 0x00;
  5033                           
  5034                           ;incstack = 0
  5035  007444  6A6C               	clrf	3948,c	;volatile
  5036                           
  5037                           ;main.c: 249: MSSP2MD = 1;
  5038  007446  010F               	movlb	15	; () banked
  5039  007448  8F3E               	bsf	62,7,b	;volatile
  5040                           
  5041                           ;main.c: 253: ANSD3 = 0;
  5042  00744A  973B               	bcf	59,3,b	;volatile
  5043                           
  5044                           ;main.c: 254: TRISD3 = 0;
  5045  00744C  9695               	bcf	3989,3,c	;volatile
  5046                           
  5047                           ;main.c: 255: LATD3 = 1;
  5048  00744E  868C               	bsf	3980,3,c	;volatile
  5049                           
  5050                           ;main.c: 258: ANSD1 = 0;
  5051  007450  933B               	bcf	59,1,b	;volatile
  5052                           
  5053                           ;main.c: 259: TRISD1 = 0;
  5054  007452  9295               	bcf	3989,1,c	;volatile
  5055                           
  5056                           ;main.c: 260: LATD1 = 0;
  5057  007454  928C               	bcf	3980,1,c	;volatile
  5058                           
  5059                           ;main.c: 263: ANSD4 = 0;
  5060  007456  993B               	bcf	59,4,b	;volatile
  5061                           
  5062                           ;main.c: 264: TRISD4 = 0;
  5063  007458  9895               	bcf	3989,4,c	;volatile
  5064                           
  5065                           ;main.c: 265: LATD4 = 0;
  5066  00745A  988C               	bcf	3980,4,c	;volatile
  5067                           
  5068                           ;main.c: 268: ANSD0 = 0;
  5069  00745C  913B               	bcf	59,0,b	;volatile
  5070                           
  5071                           ;main.c: 269: TRISD0 = 0;
  5072  00745E  9095               	bcf	3989,0,c	;volatile
  5073                           
  5074                           ;main.c: 270: LATD0 = 0;
  5075  007460  908C               	bcf	3980,0,c	;volatile
  5076                           
  5077                           ; BSR set to: 15
  5078  007462  0012               	return		;funcret
  5079  007464                     __end_of_LoRaSleep:
  5080                           	opt stack 0
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           intcon	equ	0xFF2
  5086                           intcon2	equ	0xFF1
  5087                           intcon3	equ	0xFF0
  5088                           postinc0	equ	0xFEE
  5089                           wreg	equ	0xFE8
  5090                           postdec2	equ	0xFDD
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           
  5094 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5095 ;; Defined at:
  5096 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5099 ;;		 -> nwkSKey(16), 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : F/0
  5108 ;;		On exit  : D/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;Total ram usage:        2 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:    8
  5118 ;; This function calls:
  5119 ;;		_memcpy
  5120 ;; This function is called by:
  5121 ;;		_main
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text32
  5126  0071C4                     __ptext32:
  5127                           	opt stack 0
  5128  0071C4                     _LORAWAN_SetNetworkSessionKey:
  5129                           	opt stack 22
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5133                           
  5134                           ; BSR set to: 15
  5135                           ;incstack = 0
  5136  0071C4  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5137  0071C6  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5138  0071C8  B4D8               	btfsc	status,2,c
  5139  0071CA  0012               	return	
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;lorawan.c: 382: {
  5143                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5144  0071CC  0E22               	movlw	low (_loRa+34)
  5145  0071CE  6F64               	movwf	memcpy@d1& (0+255),b
  5146  0071D0  0E02               	movlw	high (_loRa+34)
  5147  0071D2  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5148  0071D4  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5149  0071D8  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5150  0071DC  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5151  0071DE  0E10               	movlw	16
  5152  0071E0  6F68               	movwf	memcpy@n& (0+255),b
  5153  0071E2  EC14  F034         	call	_memcpy	;wreg free
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5157  0071E6  0102               	movlb	2	; () banked
  5158  0071E8  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5159                           
  5160                           ; BSR set to: 2
  5161                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5162  0071EA  9902               	bcf	(_loRa+2)& (0+255),4,b
  5163  0071EC  0012               	return		;funcret
  5164  0071EE                     __end_of_LORAWAN_SetNetworkSessionKey:
  5165                           	opt stack 0
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           intcon	equ	0xFF2
  5171                           intcon2	equ	0xFF1
  5172                           intcon3	equ	0xFF0
  5173                           postinc0	equ	0xFEE
  5174                           wreg	equ	0xFE8
  5175                           postdec2	equ	0xFDD
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5181 ;; Defined at:
  5182 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		None
  5191 ;; Tracked objects:
  5192 ;;		On entry : F/0
  5193 ;;		On exit  : F/2
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;Total ram usage:        4 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    7
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_main
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text33
  5211  007664                     __ptext33:
  5212                           	opt stack 0
  5213  007664                     _LORAWAN_SetDeviceAddress:
  5214                           	opt stack 23
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5218                           
  5219                           ;incstack = 0
  5220  007664  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5221  007668  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5222  00766C  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5223  007670  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5224                           
  5225                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5226  007674  0102               	movlb	2	; () banked
  5227  007676  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5228                           
  5229                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5230  007678  9902               	bcf	(_loRa+2)& (0+255),4,b
  5231                           
  5232                           ; BSR set to: 2
  5233  00767A  0012               	return		;funcret
  5234  00767C                     __end_of_LORAWAN_SetDeviceAddress:
  5235                           	opt stack 0
  5236                           tblptru	equ	0xFF8
  5237                           tblptrh	equ	0xFF7
  5238                           tblptrl	equ	0xFF6
  5239                           tablat	equ	0xFF5
  5240                           intcon	equ	0xFF2
  5241                           intcon2	equ	0xFF1
  5242                           intcon3	equ	0xFF0
  5243                           postinc0	equ	0xFEE
  5244                           wreg	equ	0xFE8
  5245                           postdec2	equ	0xFDD
  5246                           fsr2h	equ	0xFDA
  5247                           fsr2l	equ	0xFD9
  5248                           status	equ	0xFD8
  5249                           
  5250 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5251 ;; Defined at:
  5252 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5255 ;;		 -> appSKey(16), 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : F/0
  5264 ;;		On exit  : D/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;Total ram usage:        2 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    8
  5274 ;; This function calls:
  5275 ;;		_memcpy
  5276 ;; This function is called by:
  5277 ;;		_main
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text34
  5282  0071EE                     __ptext34:
  5283                           	opt stack 0
  5284  0071EE                     _LORAWAN_SetApplicationSessionKey:
  5285                           	opt stack 22
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5289                           
  5290                           ; BSR set to: 2
  5291                           ;incstack = 0
  5292  0071EE  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5293  0071F0  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5294  0071F2  B4D8               	btfsc	status,2,c
  5295  0071F4  0012               	return	
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;lorawan.c: 397: {
  5299                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5300  0071F6  0E32               	movlw	low (_loRa+50)
  5301  0071F8  6F64               	movwf	memcpy@d1& (0+255),b
  5302  0071FA  0E02               	movlw	high (_loRa+50)
  5303  0071FC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5304  0071FE  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5305  007202  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5306  007206  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5307  007208  0E10               	movlw	16
  5308  00720A  6F68               	movwf	memcpy@n& (0+255),b
  5309  00720C  EC14  F034         	call	_memcpy	;wreg free
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5313  007210  0102               	movlb	2	; () banked
  5314  007212  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5315                           
  5316                           ; BSR set to: 2
  5317                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5318  007214  9902               	bcf	(_loRa+2)& (0+255),4,b
  5319  007216  0012               	return		;funcret
  5320  007218                     __end_of_LORAWAN_SetApplicationSessionKey:
  5321                           	opt stack 0
  5322                           tblptru	equ	0xFF8
  5323                           tblptrh	equ	0xFF7
  5324                           tblptrl	equ	0xFF6
  5325                           tablat	equ	0xFF5
  5326                           intcon	equ	0xFF2
  5327                           intcon2	equ	0xFF1
  5328                           intcon3	equ	0xFF0
  5329                           postinc0	equ	0xFEE
  5330                           wreg	equ	0xFE8
  5331                           postdec2	equ	0xFDD
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function _LORAWAN_Mainloop *****************
  5337 ;; Defined at:
  5338 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/1
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:   18
  5359 ;; This function calls:
  5360 ;;		_INTERRUPT_GetDioStatus
  5361 ;;		_RADIO_DIO0
  5362 ;;		_RADIO_DIO1
  5363 ;;		_RADIO_DIO2
  5364 ;;		_RADIO_DIO3
  5365 ;;		_RADIO_DIO4
  5366 ;;		_RADIO_DIO5
  5367 ;;		_SwTimersExecute
  5368 ;; This function is called by:
  5369 ;;		_main
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text35
  5374  006E24                     __ptext35:
  5375                           	opt stack 0
  5376  006E24                     _LORAWAN_Mainloop:
  5377                           	opt stack 12
  5378                           
  5379                           ;lorawan.c: 2240: SwTimersExecute();
  5380                           
  5381                           ;incstack = 0
  5382  006E24  ECD8  F02B         	call	_SwTimersExecute	;wreg free
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5386  006E28  ECD4  F03B         	call	_INTERRUPT_GetDioStatus	;wreg free
  5387  006E2C  6FF1               	movwf	_localDioStatus& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5391  006E2E  B1F1               	btfsc	_localDioStatus& (0+255),0,b
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;lorawan.c: 2246: {
  5395                           ;lorawan.c: 2247: RADIO_DIO0();
  5396  006E30  EC35  F032         	call	_RADIO_DIO0	;wreg free
  5397                           
  5398                           ;lorawan.c: 2248: }
  5399                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5400  006E34  0100               	movlb	0	; () banked
  5401  006E36  B3F1               	btfsc	_localDioStatus& (0+255),1,b
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;lorawan.c: 2250: {
  5405                           ;lorawan.c: 2251: RADIO_DIO1();
  5406  006E38  EC2F  F037         	call	_RADIO_DIO1	;wreg free
  5407                           
  5408                           ;lorawan.c: 2252: }
  5409                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5410  006E3C  0100               	movlb	0	; () banked
  5411  006E3E  B5F1               	btfsc	_localDioStatus& (0+255),2,b
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;lorawan.c: 2254: {
  5415                           ;lorawan.c: 2255: RADIO_DIO2();
  5416  006E40  ECEB  F035         	call	_RADIO_DIO2	;wreg free
  5417                           
  5418                           ;lorawan.c: 2256: }
  5419                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5420  006E44  0100               	movlb	0	; () banked
  5421  006E46  B7F1               	btfsc	_localDioStatus& (0+255),3,b
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;lorawan.c: 2258: {
  5425                           ;lorawan.c: 2259: RADIO_DIO3();
  5426  006E48  EC56  F03B         	call	_RADIO_DIO3	;wreg free
  5427                           
  5428                           ;lorawan.c: 2260: }
  5429                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5430  006E4C  0100               	movlb	0	; () banked
  5431  006E4E  B9F1               	btfsc	_localDioStatus& (0+255),4,b
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;lorawan.c: 2262: {
  5435                           ;lorawan.c: 2263: RADIO_DIO4();
  5436  006E50  EC4A  F03B         	call	_RADIO_DIO4	;wreg free
  5437                           
  5438                           ;lorawan.c: 2264: }
  5439                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5440  006E54  0100               	movlb	0	; () banked
  5441  006E56  BBF1               	btfsc	_localDioStatus& (0+255),5,b
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;lorawan.c: 2266: {
  5445                           ;lorawan.c: 2267: RADIO_DIO5();
  5446  006E58  EC3E  F03B         	call	_RADIO_DIO5	;wreg free
  5447  006E5C  0012               	return		;funcret
  5448  006E5E                     __end_of_LORAWAN_Mainloop:
  5449                           	opt stack 0
  5450                           tblptru	equ	0xFF8
  5451                           tblptrh	equ	0xFF7
  5452                           tblptrl	equ	0xFF6
  5453                           tablat	equ	0xFF5
  5454                           intcon	equ	0xFF2
  5455                           intcon2	equ	0xFF1
  5456                           intcon3	equ	0xFF0
  5457                           postinc0	equ	0xFEE
  5458                           wreg	equ	0xFE8
  5459                           postdec2	equ	0xFDD
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8
  5463                           
  5464 ;; *************** function _SwTimersExecute *****************
  5465 ;; Defined at:
  5466 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  i               1  129[BANK0 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/1
  5477 ;;		On exit  : F/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;Total ram usage:        5 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:   17
  5487 ;; This function calls:
  5488 ;;		Absolute function
  5489 ;;		_AckRetransmissionCallback
  5490 ;;		_AutomaticReplyCallback
  5491 ;;		_DutyCycleCallback
  5492 ;;		_LORAWAN_LinkCheckCallback
  5493 ;;		_LORAWAN_ReceiveWindow1Callback
  5494 ;;		_LORAWAN_ReceiveWindow2Callback
  5495 ;;		_RADIO_RxFSKTimeout
  5496 ;;		_RADIO_WatchdogTimeout
  5497 ;;		_UnconfirmedTransmissionCallback
  5498 ;;		_UpdateJoinSuccessState
  5499 ;; This function is called by:
  5500 ;;		_LORAWAN_Mainloop
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text36
  5505  0057B0                     __ptext36:
  5506                           	opt stack 0
  5507  0057B0                     _SwTimersExecute:
  5508                           	opt stack 12
  5509                           
  5510                           ;sw_timer.c: 262: uint8_t i;
  5511                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5512                           
  5513                           ;incstack = 0
  5514  0057B0  9EF2               	bcf	intcon,7,c	;volatile
  5515                           
  5516                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5517  0057B2  0100               	movlb	0	; () banked
  5518  0057B4  6BE1               	clrf	SwTimersExecute@i& (0+255),b
  5519  0057B6  D050               	goto	l16034
  5520  0057B8                     l16020:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;sw_timer.c: 266: {
  5524                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5525  0057B8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5526  0057BA  0D08               	mullw	8
  5527  0057BC  0E04               	movlw	low (_swTimers+4)
  5528  0057BE  24F3               	addwf	prodl,w,c
  5529  0057C0  6ED9               	movwf	fsr2l,c
  5530  0057C2  0E03               	movlw	high (_swTimers+4)
  5531  0057C4  20F4               	addwfc	prodh,w,c
  5532  0057C6  6EDA               	movwf	fsr2h,c
  5533  0057C8  04DE               	decf	postinc2,w,c
  5534  0057CA  E144               	bnz	l16032
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;sw_timer.c: 270: {
  5538                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5539  0057CC  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5540  0057CE  0D08               	mullw	8
  5541  0057D0  0E00               	movlw	low _swTimers
  5542  0057D2  24F3               	addwf	prodl,w,c
  5543  0057D4  6ED9               	movwf	fsr2l,c
  5544  0057D6  0E03               	movlw	high _swTimers
  5545  0057D8  20F4               	addwfc	prodh,w,c
  5546  0057DA  6EDA               	movwf	fsr2h,c
  5547  0057DC  50DE               	movf	postinc2,w,c
  5548  0057DE  10DE               	iorwf	postinc2,w,c
  5549  0057E0  10DE               	iorwf	postinc2,w,c
  5550  0057E2  10DE               	iorwf	postinc2,w,c
  5551  0057E4  E137               	bnz	l16032
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;sw_timer.c: 272: {
  5555                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5556  0057E6  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5557  0057E8  0D08               	mullw	8
  5558  0057EA  0E04               	movlw	low (_swTimers+4)
  5559  0057EC  24F3               	addwf	prodl,w,c
  5560  0057EE  6ED9               	movwf	fsr2l,c
  5561  0057F0  0E03               	movlw	high (_swTimers+4)
  5562  0057F2  20F4               	addwfc	prodh,w,c
  5563  0057F4  6EDA               	movwf	fsr2h,c
  5564  0057F6  6ADF               	clrf	indf2,c
  5565                           
  5566                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5567  0057F8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5568  0057FA  0D08               	mullw	8
  5569  0057FC  0E06               	movlw	low (_swTimers+6)
  5570  0057FE  24F3               	addwf	prodl,w,c
  5571  005800  6ED9               	movwf	fsr2l,c
  5572  005802  0E03               	movlw	high (_swTimers+6)
  5573  005804  20F4               	addwfc	prodh,w,c
  5574  005806  6EDA               	movwf	fsr2h,c
  5575  005808  50DE               	movf	postinc2,w,c
  5576  00580A  10DE               	iorwf	postinc2,w,c
  5577  00580C  E023               	bz	l16032
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;sw_timer.c: 275: {
  5581                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5582  00580E  8EF2               	bsf	intcon,7,c	;volatile
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5586  005810  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5587  005812  0D08               	mullw	8
  5588  005814  0E05               	movlw	low (_swTimers+5)
  5589  005816  24F3               	addwf	prodl,w,c
  5590  005818  6ED9               	movwf	fsr2l,c
  5591  00581A  0E03               	movlw	high (_swTimers+5)
  5592  00581C  20F4               	addwfc	prodh,w,c
  5593  00581E  6EDA               	movwf	fsr2h,c
  5594  005820  50DF               	movf	indf2,w,c
  5595  005822  6EE6               	movwf	postinc1,c
  5596  005824  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5597  005826  0D08               	mullw	8
  5598  005828  0E06               	movlw	low (_swTimers+6)
  5599  00582A  24F3               	addwf	prodl,w,c
  5600  00582C  6ED9               	movwf	fsr2l,c
  5601  00582E  0E03               	movlw	high (_swTimers+6)
  5602  005830  20F4               	addwfc	prodh,w,c
  5603  005832  6EDA               	movwf	fsr2h,c
  5604  005834  CFDE F0DD          	movff	postinc2,??_SwTimersExecute
  5605  005838  CFDD F0DE          	movff	postdec2,??_SwTimersExecute+1
  5606  00583C  D801               	call	u19378
  5607  00583E  D009               	goto	l16030
  5608  005840                     u19378:
  5609  005840  0005               	push	
  5610  005842  6EFA               	movwf	pclath,c
  5611  005844  51DD               	movf	??_SwTimersExecute& (0+255),w,b
  5612  005846  6EFD               	movwf	tosl,c
  5613  005848  51DE               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5614  00584A  6EFE               	movwf	tosh,c
  5615  00584C  6AFF               	clrf	tosu,c
  5616  00584E  50FA               	movf	pclath,w,c
  5617  005850  0012               	return		;indir
  5618  005852                     l16030:
  5619                           
  5620                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5621  005852  9EF2               	bcf	intcon,7,c	;volatile
  5622  005854                     l16032:
  5623  005854  0100               	movlb	0	; () banked
  5624  005856  2BE1               	incf	SwTimersExecute@i& (0+255),f,b
  5625  005858                     l16034:
  5626                           
  5627                           ; BSR set to: 0
  5628  005858  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5629  00585A  5DE1               	subwf	SwTimersExecute@i& (0+255),w,b
  5630  00585C  E3AD               	bnc	l16020
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;sw_timer.c: 279: }
  5634                           ;sw_timer.c: 280: }
  5635                           ;sw_timer.c: 281: }
  5636                           ;sw_timer.c: 282: }
  5637                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5638  00585E  8EF2               	bsf	intcon,7,c	;volatile
  5639                           
  5640                           ; BSR set to: 0
  5641  005860  0012               	return		;funcret
  5642  005862                     __end_of_SwTimersExecute:
  5643                           	opt stack 0
  5644                           tosu	equ	0xFFF
  5645                           tosh	equ	0xFFE
  5646                           tosl	equ	0xFFD
  5647                           pclath	equ	0xFFA
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           prodh	equ	0xFF4
  5653                           prodl	equ	0xFF3
  5654                           intcon	equ	0xFF2
  5655                           intcon2	equ	0xFF1
  5656                           intcon3	equ	0xFF0
  5657                           postinc0	equ	0xFEE
  5658                           wreg	equ	0xFE8
  5659                           postinc1	equ	0xFE6
  5660                           indf2	equ	0xFDF
  5661                           postinc2	equ	0xFDE
  5662                           postdec2	equ	0xFDD
  5663                           fsr2h	equ	0xFDA
  5664                           fsr2l	equ	0xFD9
  5665                           status	equ	0xFD8
  5666                           
  5667 ;; *************** function _DutyCycleCallback *****************
  5668 ;; Defined at:
  5669 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  param           1  [STACK] unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  minim           4  [STACK] unsigned long 
  5674 ;;  i               1  [STACK] unsigned char 
  5675 ;;  found           1  [STACK] unsigned char 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1  [STACK] void 
  5678 ;; Registers used:
  5679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : F/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;Total ram usage:        0 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:   11
  5692 ;; This function calls:
  5693 ;;		_SwTimerSetTimeout
  5694 ;;		_SwTimerStart
  5695 ;;		___lldiv
  5696 ;; This function is called by:
  5697 ;;		_SetCallbackSoftwareTimers
  5698 ;;		_SwTimersExecute
  5699 ;; This function uses a reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text37
  5703  002120                     __ptext37:
  5704                           	opt stack 0
  5705  002120                     _DutyCycleCallback:
  5706                           	opt stack 0
  5707                           
  5708                           ; BSR set to: 0
  5709                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5710  002120  0E0A               	movlw	10
  5711  002122  26E1               	addwf	fsr1l,f,c
  5712  002124  0E00               	movlw	0
  5713  002126  22E2               	addwfc	fsr1h,f,c
  5714                           
  5715                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5716                           
  5717                           ;incstack = 0
  5718  002128  684E               	setf	btemp+8,c
  5719  00212A  684F               	setf	btemp+9,c
  5720  00212C  6850               	setf	btemp+10,c
  5721  00212E  6851               	setf	btemp+11,c
  5722                           
  5723                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5724  002130  0EFA               	movlw	-6
  5725  002132  C04E  FFE3         	movff	btemp+8,plusw1
  5726  002136  0EFB               	movlw	-5
  5727  002138  C04F  FFE3         	movff	btemp+9,plusw1
  5728  00213C  0EFC               	movlw	-4
  5729  00213E  C050  FFE3         	movff	btemp+10,plusw1
  5730  002142  0EFD               	movlw	-3
  5731  002144  C051  FFE3         	movff	btemp+11,plusw1
  5732                           
  5733                           ;lorawan_eu.c: 1224: bool found = 0;
  5734                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5735  002148  0EFF               	movlw	-1
  5736  00214A  6AE3               	clrf	plusw1,c
  5737                           
  5738                           ;lorawan_eu.c: 1225: uint8_t i;
  5739                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5740                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5741  00214C  0EFE               	movlw	-2
  5742  00214E  6AE3               	clrf	plusw1,c
  5743  002150                     l15036:
  5744                           
  5745                           ;lorawan_eu.c: 1228: {
  5746                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5747                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5748  002150  0EFE               	movlw	-2
  5749  002152  50E3               	movf	plusw1,w,c
  5750  002154  0D0E               	mullw	14
  5751  002156  0E04               	movlw	low (_Channels+4)
  5752  002158  24F3               	addwf	prodl,w,c
  5753  00215A  6ED9               	movwf	fsr2l,c
  5754  00215C  0E04               	movlw	high (_Channels+4)
  5755  00215E  20F4               	addwfc	prodh,w,c
  5756  002160  6EDA               	movwf	fsr2h,c
  5757  002162  04DE               	decf	postinc2,w,c
  5758  002164  E001 D0AA          	bnz	l15054
  5759                           
  5760                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5761  002168  0EFE               	movlw	-2
  5762  00216A  50E3               	movf	plusw1,w,c
  5763  00216C  0D0E               	mullw	14
  5764  00216E  0E08               	movlw	low (_Channels+8)
  5765  002170  24F3               	addwf	prodl,w,c
  5766  002172  6ED9               	movwf	fsr2l,c
  5767  002174  0E04               	movlw	high (_Channels+8)
  5768  002176  20F4               	addwfc	prodh,w,c
  5769  002178  6EDA               	movwf	fsr2h,c
  5770  00217A  50DE               	movf	postinc2,w,c
  5771  00217C  10DE               	iorwf	postinc2,w,c
  5772  00217E  10DE               	iorwf	postinc2,w,c
  5773  002180  10DE               	iorwf	postinc2,w,c
  5774  002182  E101 D09B          	bz	l15054
  5775                           
  5776                           ;lorawan_eu.c: 1231: {
  5777                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5778                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5779  002186  0EFE               	movlw	-2
  5780  002188  50E3               	movf	plusw1,w,c
  5781  00218A  0D0E               	mullw	14
  5782  00218C  0E08               	movlw	low (_Channels+8)
  5783  00218E  24F3               	addwf	prodl,w,c
  5784  002190  6ED9               	movwf	fsr2l,c
  5785  002192  0E04               	movlw	high (_Channels+8)
  5786  002194  20F4               	addwfc	prodh,w,c
  5787  002196  6EDA               	movwf	fsr2h,c
  5788  002198  50DE               	movf	postinc2,w,c
  5789  00219A  0102               	movlb	2	; () banked
  5790  00219C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5791  00219E  50DE               	movf	postinc2,w,c
  5792  0021A0  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5793  0021A2  50DE               	movf	postinc2,w,c
  5794  0021A4  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5795  0021A6  50DE               	movf	postinc2,w,c
  5796  0021A8  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5797  0021AA  E22F               	bc	l15044
  5798                           
  5799                           ; BSR set to: 2
  5800                           ;lorawan_eu.c: 1233: {
  5801                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5802                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5803  0021AC  0EFE               	movlw	-2
  5804  0021AE  50E3               	movf	plusw1,w,c
  5805  0021B0  0D0E               	mullw	14
  5806  0021B2  0E08               	movlw	low (_Channels+8)
  5807  0021B4  24F3               	addwf	prodl,w,c
  5808  0021B6  6ED9               	movwf	fsr2l,c
  5809  0021B8  0E04               	movlw	high (_Channels+8)
  5810  0021BA  20F4               	addwfc	prodh,w,c
  5811  0021BC  6EDA               	movwf	fsr2h,c
  5812  0021BE  CFDE F04E          	movff	postinc2,btemp+8
  5813  0021C2  CFDE F04F          	movff	postinc2,btemp+9
  5814  0021C6  CFDE F050          	movff	postinc2,btemp+10
  5815  0021CA  CFDE F051          	movff	postinc2,btemp+11
  5816  0021CE  51C8               	movf	(_loRa+200)& (0+255),w,b
  5817  0021D0  5C4E               	subwf	btemp+8,w,c
  5818  0021D2  6E4A               	movwf	btemp+4,c
  5819  0021D4  51C9               	movf	(_loRa+201)& (0+255),w,b
  5820  0021D6  584F               	subwfb	btemp+9,w,c
  5821  0021D8  6E4B               	movwf	btemp+5,c
  5822  0021DA  51CA               	movf	(_loRa+202)& (0+255),w,b
  5823  0021DC  5850               	subwfb	btemp+10,w,c
  5824  0021DE  6E4C               	movwf	btemp+6,c
  5825  0021E0  51CB               	movf	(_loRa+203)& (0+255),w,b
  5826  0021E2  5851               	subwfb	btemp+11,w,c
  5827  0021E4  6E4D               	movwf	btemp+7,c
  5828                           
  5829                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5830  0021E6  0EFE               	movlw	-2
  5831  0021E8  50E3               	movf	plusw1,w,c
  5832  0021EA  0D0E               	mullw	14
  5833  0021EC  0E08               	movlw	low (_Channels+8)
  5834  0021EE  24F3               	addwf	prodl,w,c
  5835  0021F0  6ED9               	movwf	fsr2l,c
  5836  0021F2  0E04               	movlw	high (_Channels+8)
  5837  0021F4  20F4               	addwfc	prodh,w,c
  5838  0021F6  6EDA               	movwf	fsr2h,c
  5839  0021F8  C04A  FFDE         	movff	btemp+4,postinc2
  5840  0021FC  C04B  FFDE         	movff	btemp+5,postinc2
  5841  002200  C04C  FFDE         	movff	btemp+6,postinc2
  5842  002204  C04D  FFDE         	movff	btemp+7,postinc2
  5843                           
  5844                           ;lorawan_eu.c: 1235: }
  5845  002208  D00D               	goto	l15046
  5846  00220A                     l15044:
  5847                           
  5848                           ; BSR set to: 2
  5849                           ;lorawan_eu.c: 1236: else
  5850                           ;lorawan_eu.c: 1237: {
  5851                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5852                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5853  00220A  0EFE               	movlw	-2
  5854  00220C  50E3               	movf	plusw1,w,c
  5855  00220E  0D0E               	mullw	14
  5856  002210  0E08               	movlw	low (_Channels+8)
  5857  002212  24F3               	addwf	prodl,w,c
  5858  002214  6ED9               	movwf	fsr2l,c
  5859  002216  0E04               	movlw	high (_Channels+8)
  5860  002218  20F4               	addwfc	prodh,w,c
  5861  00221A  6EDA               	movwf	fsr2h,c
  5862  00221C  6ADE               	clrf	postinc2,c
  5863  00221E  6ADE               	clrf	postinc2,c
  5864  002220  6ADE               	clrf	postinc2,c
  5865  002222  6ADD               	clrf	postdec2,c
  5866  002224                     l15046:
  5867                           
  5868                           ; BSR set to: 2
  5869                           ;lorawan_eu.c: 1239: }
  5870                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5871                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5872  002224  0EFE               	movlw	-2
  5873  002226  50E3               	movf	plusw1,w,c
  5874  002228  0D0E               	mullw	14
  5875  00222A  0E08               	movlw	low (_Channels+8)
  5876  00222C  24F3               	addwf	prodl,w,c
  5877  00222E  6ED9               	movwf	fsr2l,c
  5878  002230  0E04               	movlw	high (_Channels+8)
  5879  002232  20F4               	addwfc	prodh,w,c
  5880  002234  6EDA               	movwf	fsr2h,c
  5881                           
  5882                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5883  002236  0EFA               	movlw	-6
  5884  002238  CFE3 F047          	movff	plusw1,btemp+1
  5885  00223C  50DE               	movf	postinc2,w,c
  5886  00223E  5C47               	subwf	btemp+1,w,c
  5887  002240  0EFB               	movlw	-5
  5888  002242  CFE3 F047          	movff	plusw1,btemp+1
  5889  002246  50DE               	movf	postinc2,w,c
  5890  002248  5847               	subwfb	btemp+1,w,c
  5891  00224A  0EFC               	movlw	-4
  5892  00224C  CFE3 F047          	movff	plusw1,btemp+1
  5893  002250  50DE               	movf	postinc2,w,c
  5894  002252  5847               	subwfb	btemp+1,w,c
  5895  002254  0EFD               	movlw	-3
  5896  002256  CFE3 F047          	movff	plusw1,btemp+1
  5897  00225A  50DE               	movf	postinc2,w,c
  5898  00225C  5847               	subwfb	btemp+1,w,c
  5899  00225E  E32E               	bnc	l15054
  5900                           
  5901                           ; BSR set to: 2
  5902                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5903  002260  0EFE               	movlw	-2
  5904  002262  50E3               	movf	plusw1,w,c
  5905  002264  0D0E               	mullw	14
  5906  002266  0E08               	movlw	low (_Channels+8)
  5907  002268  24F3               	addwf	prodl,w,c
  5908  00226A  6ED9               	movwf	fsr2l,c
  5909  00226C  0E04               	movlw	high (_Channels+8)
  5910  00226E  20F4               	addwfc	prodh,w,c
  5911  002270  6EDA               	movwf	fsr2h,c
  5912  002272  50DE               	movf	postinc2,w,c
  5913  002274  10DE               	iorwf	postinc2,w,c
  5914  002276  10DE               	iorwf	postinc2,w,c
  5915  002278  10DE               	iorwf	postinc2,w,c
  5916  00227A  E020               	bz	l15054
  5917                           
  5918                           ; BSR set to: 2
  5919                           ;lorawan_eu.c: 1241: {
  5920                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5921                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5922  00227C  0EFE               	movlw	-2
  5923  00227E  50E3               	movf	plusw1,w,c
  5924  002280  0D0E               	mullw	14
  5925  002282  0E08               	movlw	low (_Channels+8)
  5926  002284  24F3               	addwf	prodl,w,c
  5927  002286  6ED9               	movwf	fsr2l,c
  5928  002288  0E04               	movlw	high (_Channels+8)
  5929  00228A  20F4               	addwfc	prodh,w,c
  5930  00228C  6EDA               	movwf	fsr2h,c
  5931  00228E  CFDE F04E          	movff	postinc2,btemp+8
  5932  002292  CFDE F04F          	movff	postinc2,btemp+9
  5933  002296  CFDE F050          	movff	postinc2,btemp+10
  5934  00229A  CFDE F051          	movff	postinc2,btemp+11
  5935                           
  5936                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5937  00229E  0EFA               	movlw	-6
  5938  0022A0  C04E  FFE3         	movff	btemp+8,plusw1
  5939  0022A4  0EFB               	movlw	-5
  5940  0022A6  C04F  FFE3         	movff	btemp+9,plusw1
  5941  0022AA  0EFC               	movlw	-4
  5942  0022AC  C050  FFE3         	movff	btemp+10,plusw1
  5943  0022B0  0EFD               	movlw	-3
  5944  0022B2  C051  FFE3         	movff	btemp+11,plusw1
  5945                           
  5946                           ; BSR set to: 2
  5947                           ;lorawan_eu.c: 1243: found = 1;
  5948                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5949  0022B6  0EFF               	movlw	-1
  5950  0022B8  6AE3               	clrf	plusw1,c
  5951  0022BA  2AE3               	incf	plusw1,f,c
  5952  0022BC                     l15054:
  5953                           
  5954                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5955  0022BC  0EFE               	movlw	-2
  5956  0022BE  2AE3               	incf	plusw1,f,c
  5957                           
  5958                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5959  0022C0  CFE3 F047          	movff	plusw1,btemp+1
  5960  0022C4  0E0F               	movlw	15
  5961  0022C6  6447               	cpfsgt	btemp+1,c
  5962  0022C8  D743               	goto	l15036
  5963                           
  5964                           ;lorawan_eu.c: 1244: }
  5965                           ;lorawan_eu.c: 1245: }
  5966                           ;lorawan_eu.c: 1246: }
  5967                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5968                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5969  0022CA  0EFF               	movlw	-1
  5970  0022CC  04E3               	decf	plusw1,w,c
  5971  0022CE  E001 D096          	bnz	l1297
  5972                           
  5973                           ;lorawan_eu.c: 1248: {
  5974                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5975                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5976  0022D2  50E1               	movf	fsr1l,w,c
  5977  0022D4  0FFA               	addlw	-6
  5978  0022D6  6ED9               	movwf	fsr2l,c
  5979  0022D8  50E2               	movf	fsr1h,w,c
  5980  0022DA  6EDA               	movwf	fsr2h,c
  5981  0022DC  0EFF               	movlw	255
  5982  0022DE  22DA               	addwfc	fsr2h,f,c
  5983  0022E0  CFDE F2C8          	movff	postinc2,_loRa+200
  5984  0022E4  CFDE F2C9          	movff	postinc2,_loRa+201
  5985  0022E8  CFDE F2CA          	movff	postinc2,_loRa+202
  5986  0022EC  CFDE F2CB          	movff	postinc2,_loRa+203
  5987                           
  5988                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  5989                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5990  0022F0  0EFD               	movlw	-3
  5991  0022F2  50E3               	movf	plusw1,w,c
  5992  0022F4  E10D               	bnz	u17590
  5993  0022F6  0EFA               	movlw	-6
  5994  0022F8  28E3               	incf	plusw1,w,c
  5995  0022FA  0EFB               	movlw	-5
  5996  0022FC  CFE3 F047          	movff	plusw1,btemp+1
  5997  002300  0EFF               	movlw	255
  5998  002302  5A47               	subwfb	btemp+1,f,c
  5999  002304  0EFC               	movlw	-4
  6000  002306  CFE3 F047          	movff	plusw1,btemp+1
  6001  00230A  0E0F               	movlw	15
  6002  00230C  5A47               	subwfb	btemp+1,f,c
  6003  00230E  E328               	bnc	l15066
  6004  002310                     u17590:
  6005                           
  6006                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6007  002310  50E1               	movf	fsr1l,w,c
  6008  002312  0FFA               	addlw	-6
  6009  002314  6ED9               	movwf	fsr2l,c
  6010  002316  50E2               	movf	fsr1h,w,c
  6011  002318  6EDA               	movwf	fsr2h,c
  6012  00231A  0EFF               	movlw	255
  6013  00231C  22DA               	addwfc	fsr2h,f,c
  6014  00231E  CFDE F064          	movff	postinc2,___lldiv@dividend
  6015  002322  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6016  002326  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6017  00232A  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6018  00232E  0E7D               	movlw	125
  6019  002330  0100               	movlb	0	; () banked
  6020  002332  6F68               	movwf	___lldiv@divisor& (0+255),b
  6021  002334  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6022  002336  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6023  002338  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6024  00233A  EC1A  F030         	call	___lldiv	;wreg free
  6025  00233E  C064  F04E         	movff	?___lldiv,btemp+8
  6026  002342  C065  F04F         	movff	?___lldiv+1,btemp+9
  6027  002346  C066  F050         	movff	?___lldiv+2,btemp+10
  6028  00234A  C067  F051         	movff	?___lldiv+3,btemp+11
  6029  00234E  0E0C               	movlw	12
  6030  002350                     u17605:
  6031  002350  90D8               	bcf	status,0,c
  6032  002352  364E               	rlcf	btemp+8,f,c
  6033  002354  364F               	rlcf	btemp+9,f,c
  6034  002356  3650               	rlcf	btemp+10,f,c
  6035  002358  3651               	rlcf	btemp+11,f,c
  6036  00235A  2EE8               	decfsz	wreg,f,c
  6037  00235C  D7F9               	goto	u17605
  6038  00235E  D02C               	goto	L1
  6039  002360                     l15066:
  6040                           
  6041                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6042  002360  0EFA               	movlw	-6
  6043  002362  CFE3 F04E          	movff	plusw1,btemp+8
  6044  002366  0EFB               	movlw	-5
  6045  002368  CFE3 F04F          	movff	plusw1,btemp+9
  6046  00236C  0EFC               	movlw	-4
  6047  00236E  CFE3 F050          	movff	plusw1,btemp+10
  6048  002372  0EFD               	movlw	-3
  6049  002374  CFE3 F051          	movff	plusw1,btemp+11
  6050  002378  0E0C               	movlw	12
  6051  00237A                     u17615:
  6052  00237A  90D8               	bcf	status,0,c
  6053  00237C  364E               	rlcf	btemp+8,f,c
  6054  00237E  364F               	rlcf	btemp+9,f,c
  6055  002380  3650               	rlcf	btemp+10,f,c
  6056  002382  3651               	rlcf	btemp+11,f,c
  6057  002384  2EE8               	decfsz	wreg,f,c
  6058  002386  D7F9               	goto	u17615
  6059  002388  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6060  00238C  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6061  002390  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6062  002394  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6063  002398  0E7D               	movlw	125
  6064  00239A  0100               	movlb	0	; () banked
  6065  00239C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6066  00239E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6067  0023A0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6068  0023A2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6069  0023A4  EC1A  F030         	call	___lldiv	;wreg free
  6070  0023A8  C064  F04E         	movff	?___lldiv,btemp+8
  6071  0023AC  C065  F04F         	movff	?___lldiv+1,btemp+9
  6072  0023B0  C066  F050         	movff	?___lldiv+2,btemp+10
  6073  0023B4  C067  F051         	movff	?___lldiv+3,btemp+11
  6074  0023B8                     L1:
  6075                           
  6076                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6077  0023B8  0EF6               	movlw	-10
  6078  0023BA  C04E  FFE3         	movff	btemp+8,plusw1
  6079  0023BE  0EF7               	movlw	-9
  6080  0023C0  C04F  FFE3         	movff	btemp+9,plusw1
  6081  0023C4  0EF8               	movlw	-8
  6082  0023C6  C050  FFE3         	movff	btemp+10,plusw1
  6083  0023CA  0EF9               	movlw	-7
  6084  0023CC  C051  FFE3         	movff	btemp+11,plusw1
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6088  0023D0  50E1               	movf	fsr1l,w,c
  6089  0023D2  0FF6               	addlw	-10
  6090  0023D4  6ED9               	movwf	fsr2l,c
  6091  0023D6  50E2               	movf	fsr1h,w,c
  6092  0023D8  6EDA               	movwf	fsr2h,c
  6093  0023DA  0EFF               	movlw	255
  6094  0023DC  22DA               	addwfc	fsr2h,f,c
  6095  0023DE  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6096  0023E2  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6097  0023E6  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6098  0023EA  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6099  0023EE  0102               	movlb	2	; () banked
  6100  0023F0  51E9               	movf	(_loRa+233)& (0+255),w,b
  6101  0023F2  EC75  F036         	call	_SwTimerSetTimeout
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6105  0023F6  0102               	movlb	2	; () banked
  6106  0023F8  51E9               	movf	(_loRa+233)& (0+255),w,b
  6107  0023FA  EC58  F02E         	call	_SwTimerStart
  6108  0023FE                     l1297:
  6109                           
  6110                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6111  0023FE  0EF5               	movlw	245
  6112  002400  26E1               	addwf	fsr1l,f,c
  6113  002402  0EFF               	movlw	255
  6114  002404  22E2               	addwfc	fsr1h,f,c
  6115  002406  0CFF               	retlw	255	;funcret
  6116  002408                     __end_of_DutyCycleCallback:
  6117                           	opt stack 0
  6118                           tosu	equ	0xFFF
  6119                           tosh	equ	0xFFE
  6120                           tosl	equ	0xFFD
  6121                           pclath	equ	0xFFA
  6122                           tblptru	equ	0xFF8
  6123                           tblptrh	equ	0xFF7
  6124                           tblptrl	equ	0xFF6
  6125                           tablat	equ	0xFF5
  6126                           prodh	equ	0xFF4
  6127                           prodl	equ	0xFF3
  6128                           intcon	equ	0xFF2
  6129                           intcon2	equ	0xFF1
  6130                           intcon3	equ	0xFF0
  6131                           postinc0	equ	0xFEE
  6132                           wreg	equ	0xFE8
  6133                           postinc1	equ	0xFE6
  6134                           plusw1	equ	0xFE3
  6135                           fsr1h	equ	0xFE2
  6136                           fsr1l	equ	0xFE1
  6137                           indf2	equ	0xFDF
  6138                           postinc2	equ	0xFDE
  6139                           postdec2	equ	0xFDD
  6140                           fsr2h	equ	0xFDA
  6141                           fsr2l	equ	0xFD9
  6142                           status	equ	0xFD8
  6143                           
  6144 ;; *************** function _UpdateJoinSuccessState *****************
  6145 ;; Defined at:
  6146 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  param           1  [STACK] unsigned char 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  1  [STACK] void 
  6153 ;; Registers used:
  6154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : F/0
  6157 ;;		On exit  : F/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;Total ram usage:        0 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:   11
  6167 ;; This function calls:
  6168 ;;		_RxJoinResponse
  6169 ;;		_SwTimerSetTimeout
  6170 ;;		_SwTimerStart
  6171 ;;		___lldiv
  6172 ;; This function is called by:
  6173 ;;		_SetCallbackSoftwareTimers
  6174 ;;		_LORAWAN_RxDone
  6175 ;;		_SwTimersExecute
  6176 ;; This function uses a reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text38
  6180  004524                     __ptext38:
  6181                           	opt stack 0
  6182  004524                     _UpdateJoinSuccessState:
  6183                           	opt stack 0
  6184                           
  6185                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6186  004524  52E6               	movf	postinc1,f,c
  6187  004526  52E6               	movf	postinc1,f,c
  6188  004528  52E6               	movf	postinc1,f,c
  6189  00452A  52E6               	movf	postinc1,f,c
  6190                           
  6191                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6192                           
  6193                           ;incstack = 0
  6194  00452C  0102               	movlb	2	; () banked
  6195  00452E  9500               	bcf	_loRa& (0+255),2,b
  6196                           
  6197                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6198  004530  8902               	bsf	(_loRa+2)& (0+255),4,b
  6199                           
  6200                           ; BSR set to: 2
  6201                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6202  004532  0EF0               	movlw	-16
  6203  004534  1702               	andwf	(_loRa+2)& (0+255),f,b
  6204                           
  6205                           ; BSR set to: 2
  6206                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6207  004536  6BD0               	clrf	(_loRa+208)& (0+255),b
  6208  004538  6BD1               	clrf	(_loRa+209)& (0+255),b
  6209                           
  6210                           ; BSR set to: 2
  6211                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6212  00453A  6BEE               	clrf	(_loRa+238)& (0+255),b
  6213                           
  6214                           ; BSR set to: 2
  6215                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6216  00453C  A503               	btfss	(_loRa+3)& (0+255),2,b
  6217  00453E  D074               	goto	l13998
  6218                           
  6219                           ; BSR set to: 2
  6220                           ;lorawan.c: 1052: {
  6221                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6222  004540  51CF               	movf	(_loRa+207)& (0+255),w,b
  6223  004542  E106               	bnz	u15660
  6224  004544  29CC               	incf	(_loRa+204)& (0+255),w,b
  6225  004546  0EFF               	movlw	255
  6226  004548  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6227  00454A  0E0F               	movlw	15
  6228  00454C  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6229  00454E  E321               	bnc	l13992
  6230  004550                     u15660:
  6231                           
  6232                           ; BSR set to: 2
  6233  004550  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6234  004554  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6235  004558  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6236  00455C  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6237  004560  0E7D               	movlw	125
  6238  004562  0100               	movlb	0	; () banked
  6239  004564  6F68               	movwf	___lldiv@divisor& (0+255),b
  6240  004566  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6241  004568  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6242  00456A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6243  00456C  EC1A  F030         	call	___lldiv	;wreg free
  6244  004570  C064  F04E         	movff	?___lldiv,btemp+8
  6245  004574  C065  F04F         	movff	?___lldiv+1,btemp+9
  6246  004578  C066  F050         	movff	?___lldiv+2,btemp+10
  6247  00457C  C067  F051         	movff	?___lldiv+3,btemp+11
  6248  004580  0E0C               	movlw	12
  6249  004582                     u15675:
  6250  004582  90D8               	bcf	status,0,c
  6251  004584  364E               	rlcf	btemp+8,f,c
  6252  004586  364F               	rlcf	btemp+9,f,c
  6253  004588  3650               	rlcf	btemp+10,f,c
  6254  00458A  3651               	rlcf	btemp+11,f,c
  6255  00458C  2EE8               	decfsz	wreg,f,c
  6256  00458E  D7F9               	goto	u15675
  6257  004590  D028               	goto	L2
  6258  004592                     l13992:
  6259                           
  6260                           ; BSR set to: 2
  6261  004592  C2CC  F04E         	movff	_loRa+204,btemp+8
  6262  004596  C2CD  F04F         	movff	_loRa+205,btemp+9
  6263  00459A  C2CE  F050         	movff	_loRa+206,btemp+10
  6264  00459E  C2CF  F051         	movff	_loRa+207,btemp+11
  6265  0045A2  0E0C               	movlw	12
  6266  0045A4                     u15685:
  6267  0045A4  90D8               	bcf	status,0,c
  6268  0045A6  364E               	rlcf	btemp+8,f,c
  6269  0045A8  364F               	rlcf	btemp+9,f,c
  6270  0045AA  3650               	rlcf	btemp+10,f,c
  6271  0045AC  3651               	rlcf	btemp+11,f,c
  6272  0045AE  2EE8               	decfsz	wreg,f,c
  6273  0045B0  D7F9               	goto	u15685
  6274  0045B2  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6275  0045B6  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6276  0045BA  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6277  0045BE  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6278  0045C2  0E7D               	movlw	125
  6279  0045C4  0100               	movlb	0	; () banked
  6280  0045C6  6F68               	movwf	___lldiv@divisor& (0+255),b
  6281  0045C8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6282  0045CA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6283  0045CC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6284  0045CE  EC1A  F030         	call	___lldiv	;wreg free
  6285  0045D2  C064  F04E         	movff	?___lldiv,btemp+8
  6286  0045D6  C065  F04F         	movff	?___lldiv+1,btemp+9
  6287  0045DA  C066  F050         	movff	?___lldiv+2,btemp+10
  6288  0045DE  C067  F051         	movff	?___lldiv+3,btemp+11
  6289  0045E2                     L2:
  6290                           
  6291                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6292  0045E2  0EFC               	movlw	-4
  6293  0045E4  C04E  FFE3         	movff	btemp+8,plusw1
  6294  0045E8  0EFD               	movlw	-3
  6295  0045EA  C04F  FFE3         	movff	btemp+9,plusw1
  6296  0045EE  0EFE               	movlw	-2
  6297  0045F0  C050  FFE3         	movff	btemp+10,plusw1
  6298  0045F4  0EFF               	movlw	-1
  6299  0045F6  C051  FFE3         	movff	btemp+11,plusw1
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6303  0045FA  50E1               	movf	fsr1l,w,c
  6304  0045FC  0FFC               	addlw	-4
  6305  0045FE  6ED9               	movwf	fsr2l,c
  6306  004600  50E2               	movf	fsr1h,w,c
  6307  004602  6EDA               	movwf	fsr2h,c
  6308  004604  0EFF               	movlw	255
  6309  004606  22DA               	addwfc	fsr2h,f,c
  6310  004608  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6311  00460C  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6312  004610  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6313  004614  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6314  004618  0102               	movlb	2	; () banked
  6315  00461A  51E7               	movf	(_loRa+231)& (0+255),w,b
  6316  00461C  EC75  F036         	call	_SwTimerSetTimeout
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6320  004620  0102               	movlb	2	; () banked
  6321  004622  51E7               	movf	(_loRa+231)& (0+255),w,b
  6322  004624  EC58  F02E         	call	_SwTimerStart
  6323  004628                     l13998:
  6324                           
  6325                           ;lorawan.c: 1055: }
  6326                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6327  004628  0100               	movlb	0	; () banked
  6328  00462A  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6329  00462C  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
  6330  00462E  E00B               	bz	l2090
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;lorawan.c: 1058: {
  6334                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6335  004630  D801               	call	u15708
  6336  004632  D009               	goto	l2090
  6337  004634                     u15708:
  6338  004634  0005               	push	
  6339  004636  6EFA               	movwf	pclath,c
  6340  004638  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6341  00463A  6EFD               	movwf	tosl,c
  6342  00463C  51EB               	movf	(_rxPayload+3)& (0+255),w,b
  6343  00463E  6EFE               	movwf	tosh,c
  6344  004640  6AFF               	clrf	tosu,c
  6345  004642  50FA               	movf	pclath,w,c
  6346  004644  0C01               	retlw	1	;indir
  6347  004646                     l2090:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6351  004646  0EFB               	movlw	251
  6352  004648  26E1               	addwf	fsr1l,f,c
  6353  00464A  0EFF               	movlw	255
  6354  00464C  22E2               	addwfc	fsr1h,f,c
  6355  00464E  0CFF               	retlw	255	;funcret
  6356  004650                     __end_of_UpdateJoinSuccessState:
  6357                           	opt stack 0
  6358                           tosu	equ	0xFFF
  6359                           tosh	equ	0xFFE
  6360                           tosl	equ	0xFFD
  6361                           pclath	equ	0xFFA
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           intcon2	equ	0xFF1
  6370                           intcon3	equ	0xFF0
  6371                           postinc0	equ	0xFEE
  6372                           wreg	equ	0xFE8
  6373                           postinc1	equ	0xFE6
  6374                           plusw1	equ	0xFE3
  6375                           fsr1h	equ	0xFE2
  6376                           fsr1l	equ	0xFE1
  6377                           indf2	equ	0xFDF
  6378                           postinc2	equ	0xFDE
  6379                           postdec2	equ	0xFDD
  6380                           fsr2h	equ	0xFDA
  6381                           fsr2l	equ	0xFD9
  6382                           status	equ	0xFD8
  6383                           
  6384 ;; *************** function _AutomaticReplyCallback *****************
  6385 ;; Defined at:
  6386 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  param           1  [STACK] unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1  [STACK] void 
  6393 ;; Registers used:
  6394 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : F/0
  6397 ;;		On exit  : F/2
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;Total ram usage:        0 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:   14
  6407 ;; This function calls:
  6408 ;;		_LORAWAN_Send
  6409 ;; This function is called by:
  6410 ;;		_SetCallbackSoftwareTimers
  6411 ;;		_SwTimersExecute
  6412 ;; This function uses a reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text39
  6416  007484                     __ptext39:
  6417                           	opt stack 0
  6418  007484                     _AutomaticReplyCallback:
  6419                           	opt stack 14
  6420                           
  6421                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6422                           
  6423                           ; BSR set to: 0
  6424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6425                           ;incstack = 0
  6426  007484  0EF0               	movlw	-16
  6427  007486  0102               	movlb	2	; () banked
  6428  007488  1702               	andwf	(_loRa+2)& (0+255),f,b
  6429                           
  6430                           ; BSR set to: 2
  6431                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6432  00748A  0E00               	movlw	0
  6433  00748C  0100               	movlb	0	; () banked
  6434  00748E  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  6435  007490  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  6436  007492  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6437  007494  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6438  007496  EC0D  F02A         	call	_LORAWAN_Send
  6439                           
  6440                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6441  00749A  0102               	movlb	2	; () banked
  6442  00749C  9700               	bcf	_loRa& (0+255),3,b
  6443                           
  6444                           ; BSR set to: 2
  6445                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6446  00749E  52E5               	movf	postdec1,f,c
  6447  0074A0  0012               	return		;funcret
  6448  0074A2                     __end_of_AutomaticReplyCallback:
  6449                           	opt stack 0
  6450                           tosu	equ	0xFFF
  6451                           tosh	equ	0xFFE
  6452                           tosl	equ	0xFFD
  6453                           pclath	equ	0xFFA
  6454                           tblptru	equ	0xFF8
  6455                           tblptrh	equ	0xFF7
  6456                           tblptrl	equ	0xFF6
  6457                           tablat	equ	0xFF5
  6458                           prodh	equ	0xFF4
  6459                           prodl	equ	0xFF3
  6460                           intcon	equ	0xFF2
  6461                           intcon2	equ	0xFF1
  6462                           intcon3	equ	0xFF0
  6463                           postinc0	equ	0xFEE
  6464                           wreg	equ	0xFE8
  6465                           postinc1	equ	0xFE6
  6466                           postdec1	equ	0xFE5
  6467                           plusw1	equ	0xFE3
  6468                           fsr1h	equ	0xFE2
  6469                           fsr1l	equ	0xFE1
  6470                           indf2	equ	0xFDF
  6471                           postinc2	equ	0xFDE
  6472                           postdec2	equ	0xFDD
  6473                           fsr2h	equ	0xFDA
  6474                           fsr2l	equ	0xFD9
  6475                           status	equ	0xFD8
  6476                           
  6477 ;; *************** function _AckRetransmissionCallback *****************
  6478 ;; Defined at:
  6479 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  param           1  [STACK] unsigned char 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;  maximumPacke    1  [STACK] unsigned char 
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1  [STACK] void 
  6486 ;; Registers used:
  6487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6488 ;; Tracked objects:
  6489 ;;		On entry : F/0
  6490 ;;		On exit  : D/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:   13
  6500 ;; This function calls:
  6501 ;;		_FindSmallestDataRate
  6502 ;;		_LORAWAN_GetMaxPayloadSize
  6503 ;;		_RADIO_Transmit
  6504 ;;		_ResetParametersForConfirmedTransmission
  6505 ;;		_RxDataDone
  6506 ;;		_SelectChannelForTransmission
  6507 ;;		_UpdateRetransmissionAckTimeoutState
  6508 ;; This function is called by:
  6509 ;;		_SetCallbackSoftwareTimers
  6510 ;;		_SwTimersExecute
  6511 ;; This function uses a reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text40
  6515  004A7A                     __ptext40:
  6516                           	opt stack 0
  6517  004A7A                     _AckRetransmissionCallback:
  6518                           	opt stack 0
  6519                           
  6520                           ; BSR set to: 2
  6521                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6522  004A7A  52E6               	movf	postinc1,f,c
  6523                           
  6524                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6525                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6526                           
  6527                           ;incstack = 0
  6528  004A7C  0102               	movlb	2	; () banked
  6529  004A7E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6530  004A80  D070               	goto	l15172
  6531                           
  6532                           ; BSR set to: 2
  6533                           ;lorawan.c: 939: {
  6534                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6535  004A82  51D9               	movf	(_loRa+217)& (0+255),w,b
  6536  004A84  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6537  004A86  E352               	bnc	l15162
  6538                           
  6539                           ; BSR set to: 2
  6540                           ;lorawan.c: 941: {
  6541                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6542  004A88  EC57  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6543  004A8C  6E51               	movwf	btemp+11,c
  6544  004A8E  0E0D               	movlw	13
  6545  004A90  2651               	addwf	btemp+11,f,c
  6546                           
  6547                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6548  004A92  0EFF               	movlw	-1
  6549  004A94  C051  FFE3         	movff	btemp+11,plusw1
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6553                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6554  004A98  50E3               	movf	plusw1,w,c
  6555  004A9A  6E47               	movwf	btemp+1,c
  6556  004A9C  6A48               	clrf	btemp+2,c
  6557  004A9E  0102               	movlb	2	; () banked
  6558  004AA0  51D4               	movf	(_loRa+212)& (0+255),w,b
  6559  004AA2  5C47               	subwf	btemp+1,w,c
  6560  004AA4  51D5               	movf	(_loRa+213)& (0+255),w,b
  6561  004AA6  5848               	subwfb	btemp+2,w,c
  6562  004AA8  E333               	bnc	l15156
  6563                           
  6564                           ; BSR set to: 2
  6565                           ;lorawan.c: 946: {
  6566                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6567  004AAA  0E01               	movlw	1
  6568  004AAC  EC2C  F033         	call	_SelectChannelForTransmission
  6569  004AB0  0900               	iorlw	0
  6570  004AB2  E12B               	bnz	l15152
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;lorawan.c: 948: {
  6574                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6575  004AB4  0EF0               	movlw	low (_macBuffer+16)
  6576  004AB6  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  6577  004AB8  0E04               	movlw	high (_macBuffer+16)
  6578  004ABA  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6579  004ABC  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6580  004AC0  ECE2  F017         	call	_RADIO_Transmit	;wreg free
  6581  004AC4  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  6582  004AC8  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  6583  004ACC  5047               	movf	btemp+1,w,c
  6584  004ACE  1048               	iorwf	btemp+2,w,c
  6585  004AD0  E11C               	bnz	l15152
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;lorawan.c: 951: {
  6589                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6590  004AD2  0102               	movlb	2	; () banked
  6591  004AD4  5102               	movf	(_loRa+2)& (0+255),w,b
  6592  004AD6  0BF0               	andlw	-16
  6593  004AD8  0901               	iorlw	1
  6594  004ADA  6F02               	movwf	(_loRa+2)& (0+255),b
  6595                           
  6596                           ; BSR set to: 2
  6597                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6598  004ADC  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6599                           
  6600                           ; BSR set to: 2
  6601                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6602  004ADE  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6603  004AE0  D042               	goto	l2063
  6604                           
  6605                           ; BSR set to: 2
  6606  004AE2  51DF               	movf	(_loRa+223)& (0+255),w,b
  6607  004AE4  E040               	bz	l2063
  6608                           
  6609                           ; BSR set to: 2
  6610  004AE6  51D9               	movf	(_loRa+217)& (0+255),w,b
  6611  004AE8  6E47               	movwf	btemp+1,c
  6612  004AEA  6A48               	clrf	btemp+2,c
  6613  004AEC  51D7               	movf	(_loRa+215)& (0+255),w,b
  6614  004AEE  6E50               	movwf	btemp+10,c
  6615  004AF0  6A51               	clrf	btemp+11,c
  6616  004AF2  2A50               	incf	btemp+10,f,c
  6617  004AF4  0E00               	movlw	0
  6618  004AF6  2251               	addwfc	btemp+11,f,c
  6619  004AF8  5047               	movf	btemp+1,w,c
  6620  004AFA  1850               	xorwf	btemp+10,w,c
  6621  004AFC  E103               	bnz	u17820
  6622  004AFE  5048               	movf	btemp+2,w,c
  6623  004B00  1851               	xorwf	btemp+11,w,c
  6624  004B02  E031               	bz	l2063
  6625  004B04                     u17820:
  6626                           
  6627                           ; BSR set to: 2
  6628                           ;lorawan.c: 957: {
  6629                           ;lorawan.c: 958: FindSmallestDataRate();
  6630  004B04  EC8A  F02C         	call	_FindSmallestDataRate	;wreg free
  6631  004B08  D02E               	goto	l2063
  6632  004B0A                     l15152:
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;lorawan.c: 961: else
  6636                           ;lorawan.c: 962: {
  6637                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6638  004B0A  ECFF  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6639  004B0E  D02B               	goto	l2063
  6640  004B10                     l15156:
  6641                           
  6642                           ; BSR set to: 2
  6643                           ;lorawan.c: 973: else
  6644                           ;lorawan.c: 974: {
  6645                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6646  004B10  ECCD  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6647                           
  6648                           ; BSR set to: 2
  6649                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6650  004B14  0100               	movlb	0	; () banked
  6651  004B16  51E8               	movf	_rxPayload& (0+255),w,b
  6652  004B18  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6653  004B1A  E025               	bz	l2063
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;lorawan.c: 977: {
  6657                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6658  004B1C  6B67               	clrf	RxDataDone@pData& (0+255),b
  6659  004B1E  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  6660  004B20  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  6661  004B22  0E04               	movlw	4
  6662  004B24  6F6A               	movwf	RxDataDone@status& (0+255),b
  6663  004B26  D801               	call	u17848
  6664  004B28  D01E               	goto	l2063
  6665  004B2A                     u17848:
  6666  004B2A  D012               	goto	u17888
  6667  004B2C                     l15162:
  6668                           
  6669                           ; BSR set to: 2
  6670                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6671  004B2C  51D9               	movf	(_loRa+217)& (0+255),w,b
  6672  004B2E  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6673  004B30  E21A               	bc	l2063
  6674                           
  6675                           ; BSR set to: 2
  6676  004B32  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6677  004B34  D018               	goto	l2063
  6678                           
  6679                           ; BSR set to: 2
  6680                           ;lorawan.c: 983: {
  6681                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6682  004B36  ECCD  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6683                           
  6684                           ; BSR set to: 2
  6685                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6686  004B3A  0100               	movlb	0	; () banked
  6687  004B3C  51E8               	movf	_rxPayload& (0+255),w,b
  6688  004B3E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6689  004B40  E012               	bz	l2063
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;lorawan.c: 986: {
  6693                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6694  004B42  0E00               	movlw	0
  6695  004B44  6B67               	clrf	RxDataDone@pData& (0+255),b
  6696  004B46  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  6697  004B48  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  6698  004B4A  6B6A               	clrf	RxDataDone@status& (0+255),b
  6699  004B4C  D801               	call	u17888
  6700  004B4E  D00B               	goto	l2063
  6701  004B50                     u17888:
  6702  004B50  0005               	push	
  6703  004B52  6EFA               	movwf	pclath,c
  6704  004B54  51E8               	movf	_rxPayload& (0+255),w,b
  6705  004B56  6EFD               	movwf	tosl,c
  6706  004B58  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  6707  004B5A  6EFE               	movwf	tosh,c
  6708  004B5C  6AFF               	clrf	tosu,c
  6709  004B5E  50FA               	movf	pclath,w,c
  6710  004B60  0012               	return		;indir
  6711  004B62                     l15172:
  6712                           
  6713                           ; BSR set to: 2
  6714                           ;lorawan.c: 991: else
  6715                           ;lorawan.c: 992: {
  6716                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6717  004B62  ECCD  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6718  004B66                     l2063:
  6719                           
  6720                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6721  004B66  52E5               	movf	postdec1,f,c
  6722  004B68  52E5               	movf	postdec1,f,c
  6723  004B6A  0012               	return		;funcret
  6724  004B6C                     __end_of_AckRetransmissionCallback:
  6725                           	opt stack 0
  6726                           tosu	equ	0xFFF
  6727                           tosh	equ	0xFFE
  6728                           tosl	equ	0xFFD
  6729                           pclath	equ	0xFFA
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           prodh	equ	0xFF4
  6735                           prodl	equ	0xFF3
  6736                           intcon	equ	0xFF2
  6737                           intcon2	equ	0xFF1
  6738                           intcon3	equ	0xFF0
  6739                           postinc0	equ	0xFEE
  6740                           wreg	equ	0xFE8
  6741                           postinc1	equ	0xFE6
  6742                           postdec1	equ	0xFE5
  6743                           plusw1	equ	0xFE3
  6744                           fsr1h	equ	0xFE2
  6745                           fsr1l	equ	0xFE1
  6746                           indf2	equ	0xFDF
  6747                           postinc2	equ	0xFDE
  6748                           postdec2	equ	0xFDD
  6749                           fsr2h	equ	0xFDA
  6750                           fsr2l	equ	0xFD9
  6751                           status	equ	0xFD8
  6752                           
  6753 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6754 ;; Defined at:
  6755 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  param           1  [STACK] unsigned char 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  iCtr            1  [STACK] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1  [STACK] void 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  6764 ;; Tracked objects:
  6765 ;;		On entry : F/0
  6766 ;;		On exit  : D/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6773 ;;Total ram usage:        0 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:   11
  6776 ;; This function calls:
  6777 ;;		_SwTimerSetTimeout
  6778 ;;		_SwTimerStart
  6779 ;;		___lldiv
  6780 ;; This function is called by:
  6781 ;;		_SetCallbackSoftwareTimers
  6782 ;;		_SwTimersExecute
  6783 ;; This function uses a reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text41
  6787  003FFC                     __ptext41:
  6788                           	opt stack 0
  6789  003FFC                     _LORAWAN_LinkCheckCallback:
  6790                           	opt stack 0
  6791                           
  6792                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6793  003FFC  0E05               	movlw	5
  6794  003FFE  26E1               	addwf	fsr1l,f,c
  6795  004000  0E00               	movlw	0
  6796  004002  22E2               	addwfc	fsr1h,f,c
  6797                           
  6798                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6799                           
  6800                           ;incstack = 0
  6801  004004  0102               	movlb	2	; () banked
  6802  004006  A103               	btfss	(_loRa+3)& (0+255),0,b
  6803                           
  6804                           ; BSR set to: 2
  6805  004008  A503               	btfss	(_loRa+3)& (0+255),2,b
  6806  00400A  D029               	goto	l15116
  6807                           
  6808                           ; BSR set to: 2
  6809                           ;lorawan.c: 886: {
  6810                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6811                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6812  00400C  0EFF               	movlw	-1
  6813  00400E  6AE3               	clrf	plusw1,c
  6814  004010  D00E               	goto	l15106
  6815  004012                     l15100:
  6816                           
  6817                           ; BSR set to: 2
  6818                           ;lorawan.c: 889: {
  6819                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6820                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6821  004012  0EFF               	movlw	-1
  6822  004014  50E3               	movf	plusw1,w,c
  6823  004016  0D02               	mullw	2
  6824  004018  0EA8               	movlw	low (_loRa+168)
  6825  00401A  24F3               	addwf	prodl,w,c
  6826  00401C  6ED9               	movwf	fsr2l,c
  6827  00401E  0E02               	movlw	high (_loRa+168)
  6828  004020  20F4               	addwfc	prodh,w,c
  6829  004022  6EDA               	movwf	fsr2h,c
  6830  004024  0E02               	movlw	2
  6831  004026  18DE               	xorwf	postinc2,w,c
  6832  004028  E008               	bz	l15108
  6833                           
  6834                           ; BSR set to: 2
  6835                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6836  00402A  0EFF               	movlw	-1
  6837  00402C  2AE3               	incf	plusw1,f,c
  6838  00402E                     l15106:
  6839                           
  6840                           ; BSR set to: 2
  6841                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6842  00402E  0EFF               	movlw	-1
  6843  004030  CFE3 F047          	movff	plusw1,btemp+1
  6844  004034  51A7               	movf	(_loRa+167)& (0+255),w,b
  6845  004036  5C47               	subwf	btemp+1,w,c
  6846  004038  E3EC               	bnc	l15100
  6847  00403A                     l15108:
  6848                           
  6849                           ; BSR set to: 2
  6850                           ;lorawan.c: 893: }
  6851                           ;lorawan.c: 894: }
  6852                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6853                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6854  00403A  0EFF               	movlw	-1
  6855  00403C  50E3               	movf	plusw1,w,c
  6856  00403E  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6857  004040  E10E               	bnz	l15116
  6858                           
  6859                           ; BSR set to: 2
  6860                           ;lorawan.c: 897: {
  6861                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6862  004042  51A7               	movf	(_loRa+167)& (0+255),w,b
  6863  004044  0D02               	mullw	2
  6864  004046  0EA8               	movlw	low (_loRa+168)
  6865  004048  24F3               	addwf	prodl,w,c
  6866  00404A  6ED9               	movwf	fsr2l,c
  6867  00404C  0E02               	movlw	high (_loRa+168)
  6868  00404E  20F4               	addwfc	prodh,w,c
  6869  004050  6EDA               	movwf	fsr2h,c
  6870  004052  0E02               	movlw	2
  6871  004054  6EDF               	movwf	indf2,c
  6872                           
  6873                           ; BSR set to: 2
  6874                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6875  004056  0E10               	movlw	16
  6876  004058  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6877  00405A  D001               	goto	l15116
  6878                           
  6879                           ; BSR set to: 2
  6880                           ;lorawan.c: 901: {
  6881                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6882  00405C  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6883  00405E                     l15116:
  6884                           
  6885                           ; BSR set to: 2
  6886                           ;lorawan.c: 903: }
  6887                           ;lorawan.c: 904: }
  6888                           ;lorawan.c: 905: }
  6889                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6890  00405E  A503               	btfss	(_loRa+3)& (0+255),2,b
  6891  004060  D074               	goto	l2041
  6892                           
  6893                           ; BSR set to: 2
  6894                           ;lorawan.c: 909: {
  6895                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6896  004062  51CF               	movf	(_loRa+207)& (0+255),w,b
  6897  004064  E106               	bnz	u17720
  6898  004066  29CC               	incf	(_loRa+204)& (0+255),w,b
  6899  004068  0EFF               	movlw	255
  6900  00406A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6901  00406C  0E0F               	movlw	15
  6902  00406E  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6903  004070  E321               	bnc	l15122
  6904  004072                     u17720:
  6905                           
  6906                           ; BSR set to: 2
  6907  004072  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6908  004076  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6909  00407A  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6910  00407E  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6911  004082  0E7D               	movlw	125
  6912  004084  0100               	movlb	0	; () banked
  6913  004086  6F68               	movwf	___lldiv@divisor& (0+255),b
  6914  004088  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6915  00408A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6916  00408C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6917  00408E  EC1A  F030         	call	___lldiv	;wreg free
  6918  004092  C064  F04E         	movff	?___lldiv,btemp+8
  6919  004096  C065  F04F         	movff	?___lldiv+1,btemp+9
  6920  00409A  C066  F050         	movff	?___lldiv+2,btemp+10
  6921  00409E  C067  F051         	movff	?___lldiv+3,btemp+11
  6922  0040A2  0E0C               	movlw	12
  6923  0040A4                     u17735:
  6924  0040A4  90D8               	bcf	status,0,c
  6925  0040A6  364E               	rlcf	btemp+8,f,c
  6926  0040A8  364F               	rlcf	btemp+9,f,c
  6927  0040AA  3650               	rlcf	btemp+10,f,c
  6928  0040AC  3651               	rlcf	btemp+11,f,c
  6929  0040AE  2EE8               	decfsz	wreg,f,c
  6930  0040B0  D7F9               	goto	u17735
  6931  0040B2  D028               	goto	L3
  6932  0040B4                     l15122:
  6933                           
  6934                           ; BSR set to: 2
  6935  0040B4  C2CC  F04E         	movff	_loRa+204,btemp+8
  6936  0040B8  C2CD  F04F         	movff	_loRa+205,btemp+9
  6937  0040BC  C2CE  F050         	movff	_loRa+206,btemp+10
  6938  0040C0  C2CF  F051         	movff	_loRa+207,btemp+11
  6939  0040C4  0E0C               	movlw	12
  6940  0040C6                     u17745:
  6941  0040C6  90D8               	bcf	status,0,c
  6942  0040C8  364E               	rlcf	btemp+8,f,c
  6943  0040CA  364F               	rlcf	btemp+9,f,c
  6944  0040CC  3650               	rlcf	btemp+10,f,c
  6945  0040CE  3651               	rlcf	btemp+11,f,c
  6946  0040D0  2EE8               	decfsz	wreg,f,c
  6947  0040D2  D7F9               	goto	u17745
  6948  0040D4  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6949  0040D8  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6950  0040DC  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6951  0040E0  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6952  0040E4  0E7D               	movlw	125
  6953  0040E6  0100               	movlb	0	; () banked
  6954  0040E8  6F68               	movwf	___lldiv@divisor& (0+255),b
  6955  0040EA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6956  0040EC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6957  0040EE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6958  0040F0  EC1A  F030         	call	___lldiv	;wreg free
  6959  0040F4  C064  F04E         	movff	?___lldiv,btemp+8
  6960  0040F8  C065  F04F         	movff	?___lldiv+1,btemp+9
  6961  0040FC  C066  F050         	movff	?___lldiv+2,btemp+10
  6962  004100  C067  F051         	movff	?___lldiv+3,btemp+11
  6963  004104                     L3:
  6964                           
  6965                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6966  004104  0EFB               	movlw	-5
  6967  004106  C04E  FFE3         	movff	btemp+8,plusw1
  6968  00410A  0EFC               	movlw	-4
  6969  00410C  C04F  FFE3         	movff	btemp+9,plusw1
  6970  004110  0EFD               	movlw	-3
  6971  004112  C050  FFE3         	movff	btemp+10,plusw1
  6972  004116  0EFE               	movlw	-2
  6973  004118  C051  FFE3         	movff	btemp+11,plusw1
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6977  00411C  50E1               	movf	fsr1l,w,c
  6978  00411E  0FFB               	addlw	-5
  6979  004120  6ED9               	movwf	fsr2l,c
  6980  004122  50E2               	movf	fsr1h,w,c
  6981  004124  6EDA               	movwf	fsr2h,c
  6982  004126  0EFF               	movlw	255
  6983  004128  22DA               	addwfc	fsr2h,f,c
  6984  00412A  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6985  00412E  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6986  004132  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6987  004136  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6988  00413A  0102               	movlb	2	; () banked
  6989  00413C  51E7               	movf	(_loRa+231)& (0+255),w,b
  6990  00413E  EC75  F036         	call	_SwTimerSetTimeout
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  6994  004142  0102               	movlb	2	; () banked
  6995  004144  51E7               	movf	(_loRa+231)& (0+255),w,b
  6996  004146  EC58  F02E         	call	_SwTimerStart
  6997  00414A                     l2041:
  6998                           
  6999                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7000  00414A  0EFA               	movlw	250
  7001  00414C  26E1               	addwf	fsr1l,f,c
  7002  00414E  0EFF               	movlw	255
  7003  004150  22E2               	addwfc	fsr1h,f,c
  7004  004152  0CFF               	retlw	255	;funcret
  7005  004154                     __end_of_LORAWAN_LinkCheckCallback:
  7006                           	opt stack 0
  7007                           tosu	equ	0xFFF
  7008                           tosh	equ	0xFFE
  7009                           tosl	equ	0xFFD
  7010                           pclath	equ	0xFFA
  7011                           tblptru	equ	0xFF8
  7012                           tblptrh	equ	0xFF7
  7013                           tblptrl	equ	0xFF6
  7014                           tablat	equ	0xFF5
  7015                           prodh	equ	0xFF4
  7016                           prodl	equ	0xFF3
  7017                           intcon	equ	0xFF2
  7018                           intcon2	equ	0xFF1
  7019                           intcon3	equ	0xFF0
  7020                           postinc0	equ	0xFEE
  7021                           wreg	equ	0xFE8
  7022                           postinc1	equ	0xFE6
  7023                           postdec1	equ	0xFE5
  7024                           plusw1	equ	0xFE3
  7025                           fsr1h	equ	0xFE2
  7026                           fsr1l	equ	0xFE1
  7027                           indf2	equ	0xFDF
  7028                           postinc2	equ	0xFDE
  7029                           postdec2	equ	0xFDD
  7030                           fsr2h	equ	0xFDA
  7031                           fsr2l	equ	0xFD9
  7032                           status	equ	0xFD8
  7033                           
  7034 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7035 ;; Defined at:
  7036 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  param           1  [STACK] unsigned char 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  freq            4  [STACK] unsigned long 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1  [STACK] void 
  7043 ;; Registers used:
  7044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : F/0
  7047 ;;		On exit  : D/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;Total ram usage:        0 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:   13
  7057 ;; This function calls:
  7058 ;;		_ConfigureRadioRx
  7059 ;;		_GetRx1Freq
  7060 ;;		_RADIO_ReceiveStart
  7061 ;;		_RADIO_ReceiveStop
  7062 ;;		_RADIO_ReleaseData
  7063 ;; This function is called by:
  7064 ;;		_SetCallbackSoftwareTimers
  7065 ;;		_SwTimersExecute
  7066 ;; This function uses a reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text42
  7070  005648                     __ptext42:
  7071                           	opt stack 0
  7072  005648                     _LORAWAN_ReceiveWindow1Callback:
  7073                           	opt stack 0
  7074                           
  7075                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7076  005648  52E6               	movf	postinc1,f,c
  7077  00564A  52E6               	movf	postinc1,f,c
  7078  00564C  52E6               	movf	postinc1,f,c
  7079  00564E  52E6               	movf	postinc1,f,c
  7080                           
  7081                           ;lorawan.c: 798: uint32_t freq;
  7082                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7083                           
  7084                           ;incstack = 0
  7085  005650  0102               	movlb	2	; () banked
  7086  005652  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7087  005654  D04E               	goto	l2014
  7088                           
  7089                           ; BSR set to: 2
  7090                           ;lorawan.c: 801: {
  7091                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7092  005656  0E02               	movlw	2
  7093  005658  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7094  00565A  E102               	bnz	l15078
  7095                           
  7096                           ; BSR set to: 2
  7097                           ;lorawan.c: 803: {
  7098                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7099  00565C  EC60  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7100  005660                     l15078:
  7101                           
  7102                           ;lorawan.c: 805: }
  7103                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7104  005660  0102               	movlb	2	; () banked
  7105  005662  51EF               	movf	(_loRa+239)& (0+255),w,b
  7106  005664  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7107  005666  E304               	bnc	l2012
  7108                           
  7109                           ; BSR set to: 2
  7110                           ;lorawan.c: 807: {
  7111                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7112  005668  51EF               	movf	(_loRa+239)& (0+255),w,b
  7113  00566A  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7114  00566C  6F17               	movwf	(_loRa+23)& (0+255),b
  7115                           
  7116                           ;lorawan.c: 809: }
  7117  00566E  D001               	goto	l15082
  7118  005670                     l2012:
  7119                           
  7120                           ; BSR set to: 2
  7121                           ;lorawan.c: 810: else
  7122                           ;lorawan.c: 811: {
  7123                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7124  005670  6B17               	clrf	(_loRa+23)& (0+255),b
  7125  005672                     l15082:
  7126                           
  7127                           ; BSR set to: 2
  7128                           ;lorawan.c: 813: }
  7129                           ;lorawan.c: 815: freq = GetRx1Freq();
  7130  005672  ECAC  F03B         	call	_GetRx1Freq	;wreg free
  7131  005676  C064  F04E         	movff	?_GetRx1Freq,btemp+8
  7132  00567A  C065  F04F         	movff	?_GetRx1Freq+1,btemp+9
  7133  00567E  C066  F050         	movff	?_GetRx1Freq+2,btemp+10
  7134  005682  C067  F051         	movff	?_GetRx1Freq+3,btemp+11
  7135                           
  7136                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7137  005686  0EFC               	movlw	-4
  7138  005688  C04E  FFE3         	movff	btemp+8,plusw1
  7139  00568C  0EFD               	movlw	-3
  7140  00568E  C04F  FFE3         	movff	btemp+9,plusw1
  7141  005692  0EFE               	movlw	-2
  7142  005694  C050  FFE3         	movff	btemp+10,plusw1
  7143  005698  0EFF               	movlw	-1
  7144  00569A  C051  FFE3         	movff	btemp+11,plusw1
  7145                           
  7146                           ; BSR set to: 2
  7147                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7148  00569E  5102               	movf	(_loRa+2)& (0+255),w,b
  7149  0056A0  0BF0               	andlw	-16
  7150  0056A2  0903               	iorlw	3
  7151  0056A4  6F02               	movwf	(_loRa+2)& (0+255),b
  7152                           
  7153                           ; BSR set to: 2
  7154                           ;lorawan.c: 819: RADIO_ReleaseData();
  7155  0056A6  EC85  F03C         	call	_RADIO_ReleaseData	;wreg free
  7156                           
  7157                           ; BSR set to: 1
  7158                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7159                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7160  0056AA  50E1               	movf	fsr1l,w,c
  7161  0056AC  0FFC               	addlw	-4
  7162  0056AE  6ED9               	movwf	fsr2l,c
  7163  0056B0  50E2               	movf	fsr1h,w,c
  7164  0056B2  6EDA               	movwf	fsr2h,c
  7165  0056B4  0EFF               	movlw	255
  7166  0056B6  22DA               	addwfc	fsr2h,f,c
  7167  0056B8  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7168  0056BC  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7169  0056C0  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7170  0056C4  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7171  0056C8  0102               	movlb	2	; () banked
  7172  0056CA  5117               	movf	(_loRa+23)& (0+255),w,b
  7173  0056CC  EC85  F039         	call	_ConfigureRadioRx
  7174                           
  7175                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7176  0056D0  0E85               	movlw	low _rxWindowSize
  7177  0056D2  0102               	movlb	2	; () banked
  7178  0056D4  2517               	addwf	(_loRa+23)& (0+255),w,b
  7179  0056D6  6EF6               	movwf	tblptrl,c
  7180  0056D8  6AF7               	clrf	tblptrh,c
  7181  0056DA  0EFF               	movlw	high _rxWindowSize
  7182  0056DC  22F7               	addwfc	tblptrh,f,c
  7183  0056DE                     	if	1	;There are 3 active tblptr bytes
  7184  0056DE  6AF8               	clrf	tblptru,c
  7185  0056E0  0E00               	movlw	low (__mediumconst shr (0+16))
  7186  0056E2  22F8               	addwfc	tblptru,f,c
  7187  0056E4                     	endif
  7188  0056E4  0008               	tblrd		*
  7189  0056E6  50F5               	movf	tablat,w,c
  7190  0056E8  0100               	movlb	0	; () banked
  7191  0056EA  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7192  0056EC  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7193  0056EE  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
  7194  0056F2                     l2014:
  7195                           
  7196                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7197  0056F2  0EFB               	movlw	251
  7198  0056F4  26E1               	addwf	fsr1l,f,c
  7199  0056F6  0EFF               	movlw	255
  7200  0056F8  22E2               	addwfc	fsr1h,f,c
  7201  0056FA  0CFF               	retlw	255	;funcret
  7202  0056FC                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7203                           	opt stack 0
  7204                           tosu	equ	0xFFF
  7205                           tosh	equ	0xFFE
  7206                           tosl	equ	0xFFD
  7207                           pclath	equ	0xFFA
  7208                           tblptru	equ	0xFF8
  7209                           tblptrh	equ	0xFF7
  7210                           tblptrl	equ	0xFF6
  7211                           tablat	equ	0xFF5
  7212                           prodh	equ	0xFF4
  7213                           prodl	equ	0xFF3
  7214                           intcon	equ	0xFF2
  7215                           intcon2	equ	0xFF1
  7216                           intcon3	equ	0xFF0
  7217                           postinc0	equ	0xFEE
  7218                           wreg	equ	0xFE8
  7219                           postinc1	equ	0xFE6
  7220                           postdec1	equ	0xFE5
  7221                           plusw1	equ	0xFE3
  7222                           fsr1h	equ	0xFE2
  7223                           fsr1l	equ	0xFE1
  7224                           indf2	equ	0xFDF
  7225                           postinc2	equ	0xFDE
  7226                           postdec2	equ	0xFDD
  7227                           fsr2h	equ	0xFDA
  7228                           fsr2l	equ	0xFD9
  7229                           status	equ	0xFD8
  7230                           
  7231 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7232 ;; Defined at:
  7233 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  param           1  [STACK] unsigned char 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1  [STACK] void 
  7240 ;; Registers used:
  7241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7242 ;; Tracked objects:
  7243 ;;		On entry : D/0
  7244 ;;		On exit  : D/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;Total ram usage:        0 bytes
  7252 ;; Hardware stack levels used:    1
  7253 ;; Hardware stack levels required when called:   14
  7254 ;; This function calls:
  7255 ;;		_ConfigureRadioRx
  7256 ;;		_LORAWAN_EnterContinuousReceive
  7257 ;;		_RADIO_GetStatus
  7258 ;;		_RADIO_ReceiveStart
  7259 ;;		_RADIO_ReceiveStop
  7260 ;;		_RADIO_ReleaseData
  7261 ;;		_ResetParametersForConfirmedTransmission
  7262 ;;		_ResetParametersForUnconfirmedTransmission
  7263 ;;		_RxDataDone
  7264 ;; This function is called by:
  7265 ;;		_LORAWAN_RxTimeout
  7266 ;;		_SetCallbackSoftwareTimers
  7267 ;;		_SwTimersExecute
  7268 ;; This function uses a reentrant model
  7269 ;;
  7270                           
  7271                           	psect	text43
  7272  005352                     __ptext43:
  7273                           	opt stack 0
  7274  005352                     _LORAWAN_ReceiveWindow2Callback:
  7275                           	opt stack 12
  7276                           
  7277                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7278                           
  7279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7280                           ;incstack = 0
  7281  005352  0102               	movlb	2	; () banked
  7282  005354  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7283  005356  D057               	goto	l2017
  7284                           
  7285                           ; BSR set to: 2
  7286                           ;lorawan.c: 831: {
  7287                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7288  005358  EC82  F03C         	call	_RADIO_GetStatus	;wreg free
  7289  00535C  6E51               	movwf	btemp+11,c
  7290  00535E  B251               	btfsc	btemp+11,1,c
  7291  005360  D04E               	goto	l13846
  7292                           
  7293                           ; BSR set to: 1
  7294                           ;lorawan.c: 833: {
  7295                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7296  005362  0102               	movlb	2	; () banked
  7297  005364  5102               	movf	(_loRa+2)& (0+255),w,b
  7298  005366  0BF0               	andlw	-16
  7299  005368  0905               	iorlw	5
  7300  00536A  6F02               	movwf	(_loRa+2)& (0+255),b
  7301                           
  7302                           ; BSR set to: 2
  7303                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7304  00536C  EC60  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7305                           
  7306                           ; BSR set to: 1
  7307                           ;lorawan.c: 837: RADIO_ReleaseData();
  7308  005370  EC85  F03C         	call	_RADIO_ReleaseData	;wreg free
  7309                           
  7310                           ; BSR set to: 1
  7311                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7312  005374  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7313  005378  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7314  00537C  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7315  005380  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7316  005384  0102               	movlb	2	; () banked
  7317  005386  511C               	movf	(_loRa+28)& (0+255),w,b
  7318  005388  EC85  F039         	call	_ConfigureRadioRx
  7319                           
  7320                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7321  00538C  0102               	movlb	2	; () banked
  7322  00538E  5112               	movf	(_loRa+18)& (0+255),w,b
  7323  005390  E12F               	bnz	l13842
  7324                           
  7325                           ; BSR set to: 2
  7326                           ;lorawan.c: 842: {
  7327                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7328  005392  0E85               	movlw	low _rxWindowSize
  7329  005394  251C               	addwf	(_loRa+28)& (0+255),w,b
  7330  005396  6EF6               	movwf	tblptrl,c
  7331  005398  6AF7               	clrf	tblptrh,c
  7332  00539A  0EFF               	movlw	high _rxWindowSize
  7333  00539C  22F7               	addwfc	tblptrh,f,c
  7334  00539E                     	if	1	;There are 3 active tblptr bytes
  7335  00539E  6AF8               	clrf	tblptru,c
  7336  0053A0  0E00               	movlw	low (__mediumconst shr (0+16))
  7337  0053A2  22F8               	addwfc	tblptru,f,c
  7338  0053A4                     	endif
  7339  0053A4  0008               	tblrd		*
  7340  0053A6  50F5               	movf	tablat,w,c
  7341  0053A8  0100               	movlb	0	; () banked
  7342  0053AA  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7343  0053AC  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7344  0053AE  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
  7345  0053B2  C096  F047         	movff	?_RADIO_ReceiveStart,btemp+1
  7346  0053B6  C097  F048         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7347  0053BA  5047               	movf	btemp+1,w,c
  7348  0053BC  1048               	iorwf	btemp+2,w,c
  7349  0053BE  E02B               	bz	l2026
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;lorawan.c: 844: {
  7353                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7354  0053C0  ECCD  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7355                           
  7356                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7357  0053C4  ECC6  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7358                           
  7359                           ; BSR set to: 2
  7360                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7361  0053C8  0100               	movlb	0	; () banked
  7362  0053CA  51E8               	movf	_rxPayload& (0+255),w,b
  7363  0053CC  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7364  0053CE  E023               	bz	l2026
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;lorawan.c: 848: {
  7368                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7369  0053D0  0E00               	movlw	0
  7370  0053D2  6B67               	clrf	RxDataDone@pData& (0+255),b
  7371  0053D4  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  7372  0053D6  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  7373  0053D8  6B6A               	clrf	RxDataDone@status& (0+255),b
  7374  0053DA  D801               	call	u15348
  7375  0053DC  D01C               	goto	l2026
  7376  0053DE                     u15348:
  7377  0053DE  0005               	push	
  7378  0053E0  6EFA               	movwf	pclath,c
  7379  0053E2  51E8               	movf	_rxPayload& (0+255),w,b
  7380  0053E4  6EFD               	movwf	tosl,c
  7381  0053E6  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7382  0053E8  6EFE               	movwf	tosh,c
  7383  0053EA  6AFF               	clrf	tosu,c
  7384  0053EC  50FA               	movf	pclath,w,c
  7385  0053EE  0012               	return		;indir
  7386  0053F0                     l13842:
  7387                           
  7388                           ; BSR set to: 2
  7389                           ;lorawan.c: 853: else
  7390                           ;lorawan.c: 854: {
  7391                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7392  0053F0  5102               	movf	(_loRa+2)& (0+255),w,b
  7393  0053F2  0BF0               	andlw	-16
  7394  0053F4  0909               	iorlw	9
  7395  0053F6  6F02               	movwf	(_loRa+2)& (0+255),b
  7396                           
  7397                           ; BSR set to: 2
  7398                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7399  0053F8  EC99  F032         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7400  0053FC  D00C               	goto	l2026
  7401  0053FE                     l13846:
  7402                           
  7403                           ; BSR set to: 1
  7404                           ;lorawan.c: 859: else
  7405                           ;lorawan.c: 860: {
  7406                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7407  0053FE  0E01               	movlw	1
  7408  005400  0102               	movlb	2	; () banked
  7409  005402  6FF1               	movwf	(_loRa+241)& (0+255),b
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;lorawan.c: 864: }
  7413                           ;lorawan.c: 865: }
  7414  005404  D008               	goto	l2026
  7415  005406                     l2017:
  7416                           
  7417                           ; BSR set to: 2
  7418                           ;lorawan.c: 866: else
  7419                           ;lorawan.c: 867: {
  7420                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7421  005406  A500               	btfss	_loRa& (0+255),2,b
  7422  005408  D002               	goto	l13850
  7423                           
  7424                           ; BSR set to: 2
  7425                           ;lorawan.c: 871: {
  7426                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7427  00540A  9500               	bcf	_loRa& (0+255),2,b
  7428                           
  7429                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7430  00540C  9902               	bcf	(_loRa+2)& (0+255),4,b
  7431  00540E                     l13850:
  7432                           
  7433                           ; BSR set to: 2
  7434                           ;lorawan.c: 874: }
  7435                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7436  00540E  ECC6  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7437                           
  7438                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7439  005412  ECCD  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7440  005416                     l2026:
  7441                           
  7442                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7443  005416  52E5               	movf	postdec1,f,c
  7444  005418  0012               	return		;funcret
  7445  00541A                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7446                           	opt stack 0
  7447                           tosu	equ	0xFFF
  7448                           tosh	equ	0xFFE
  7449                           tosl	equ	0xFFD
  7450                           pclath	equ	0xFFA
  7451                           tblptru	equ	0xFF8
  7452                           tblptrh	equ	0xFF7
  7453                           tblptrl	equ	0xFF6
  7454                           tablat	equ	0xFF5
  7455                           prodh	equ	0xFF4
  7456                           prodl	equ	0xFF3
  7457                           intcon	equ	0xFF2
  7458                           intcon2	equ	0xFF1
  7459                           intcon3	equ	0xFF0
  7460                           postinc0	equ	0xFEE
  7461                           wreg	equ	0xFE8
  7462                           postinc1	equ	0xFE6
  7463                           postdec1	equ	0xFE5
  7464                           plusw1	equ	0xFE3
  7465                           fsr1h	equ	0xFE2
  7466                           fsr1l	equ	0xFE1
  7467                           indf2	equ	0xFDF
  7468                           postinc2	equ	0xFDE
  7469                           postdec2	equ	0xFDD
  7470                           fsr2h	equ	0xFDA
  7471                           fsr2l	equ	0xFD9
  7472                           status	equ	0xFD8
  7473                           
  7474 ;; *************** function _RADIO_WatchdogTimeout *****************
  7475 ;; Defined at:
  7476 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  param           1  [STACK] unsigned char 
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1  [STACK] void 
  7483 ;; Registers used:
  7484 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : F/0
  7487 ;;		On exit  : C/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:   16
  7497 ;; This function calls:
  7498 ;;		_LORAWAN_RxTimeout
  7499 ;;		_LORAWAN_TxDone
  7500 ;;		_RADIO_WriteMode
  7501 ;; This function is called by:
  7502 ;;		_RADIO_Init
  7503 ;;		_SwTimersExecute
  7504 ;; This function uses a reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text44
  7508  006C66                     __ptext44:
  7509                           	opt stack 0
  7510  006C66                     _RADIO_WatchdogTimeout:
  7511                           	opt stack 12
  7512                           
  7513                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7514                           
  7515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7516                           ;incstack = 0
  7517  006C66  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7518  006C6A  0E01               	movlw	1
  7519  006C6C  0100               	movlb	0	; () banked
  7520  006C6E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7521  006C70  EC6E  F028         	call	_RADIO_WriteMode
  7522                           
  7523                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7524  006C74  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7525  006C78  0E00               	movlw	0
  7526  006C7A  0100               	movlb	0	; () banked
  7527  006C7C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7528  006C7E  EC6E  F028         	call	_RADIO_WriteMode
  7529                           
  7530                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7531  006C82  0101               	movlb	1	; () banked
  7532  006C84  898C               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7536  006C86  A38C               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7537  006C88  D004               	goto	l673
  7538                           
  7539                           ; BSR set to: 1
  7540                           ;radio_driver_SX1276.c: 1414: {
  7541                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7542  006C8A  938C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7543                           
  7544                           ; BSR set to: 1
  7545                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7546  006C8C  EC71  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7547                           
  7548                           ;radio_driver_SX1276.c: 1417: }
  7549  006C90  D009               	goto	l676
  7550  006C92                     l673:
  7551                           
  7552                           ; BSR set to: 1
  7553                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7554  006C92  A18C               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7555  006C94  D007               	goto	l676
  7556                           
  7557                           ; BSR set to: 1
  7558                           ;radio_driver_SX1276.c: 1419: {
  7559                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7560  006C96  918C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7561                           
  7562                           ; BSR set to: 1
  7563                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7564  006C98  C193  F0A0         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7565  006C9C  C194  F0A1         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7566  006CA0  EC8C  F005         	call	_LORAWAN_TxDone	;wreg free
  7567  006CA4                     l676:
  7568                           
  7569                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7570  006CA4  52E5               	movf	postdec1,f,c
  7571  006CA6  0012               	return		;funcret
  7572  006CA8                     __end_of_RADIO_WatchdogTimeout:
  7573                           	opt stack 0
  7574                           tosu	equ	0xFFF
  7575                           tosh	equ	0xFFE
  7576                           tosl	equ	0xFFD
  7577                           pclath	equ	0xFFA
  7578                           tblptru	equ	0xFF8
  7579                           tblptrh	equ	0xFF7
  7580                           tblptrl	equ	0xFF6
  7581                           tablat	equ	0xFF5
  7582                           prodh	equ	0xFF4
  7583                           prodl	equ	0xFF3
  7584                           intcon	equ	0xFF2
  7585                           intcon2	equ	0xFF1
  7586                           intcon3	equ	0xFF0
  7587                           postinc0	equ	0xFEE
  7588                           wreg	equ	0xFE8
  7589                           postinc1	equ	0xFE6
  7590                           postdec1	equ	0xFE5
  7591                           plusw1	equ	0xFE3
  7592                           fsr1h	equ	0xFE2
  7593                           fsr1l	equ	0xFE1
  7594                           indf2	equ	0xFDF
  7595                           postinc2	equ	0xFDE
  7596                           postdec2	equ	0xFDD
  7597                           fsr2h	equ	0xFDA
  7598                           fsr2l	equ	0xFD9
  7599                           status	equ	0xFD8
  7600                           
  7601 ;; *************** function _RADIO_RxFSKTimeout *****************
  7602 ;; Defined at:
  7603 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  param           1  [STACK] unsigned char 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  irqFlags        1  [STACK] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1  [STACK] void 
  7610 ;; Registers used:
  7611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : F/0
  7614 ;;		On exit  : D/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;Total ram usage:        0 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:   16
  7624 ;; This function calls:
  7625 ;;		_LORAWAN_RxTimeout
  7626 ;;		_RADIO_RegisterRead
  7627 ;;		_RADIO_WriteMode
  7628 ;;		_SwTimerStop
  7629 ;; This function is called by:
  7630 ;;		_RADIO_Init
  7631 ;;		_SwTimersExecute
  7632 ;; This function uses a reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text45
  7636  006F78                     __ptext45:
  7637                           	opt stack 0
  7638  006F78                     _RADIO_RxFSKTimeout:
  7639                           	opt stack 0
  7640                           
  7641                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7642  006F78  52E6               	movf	postinc1,f,c
  7643                           
  7644                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7645                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7646                           
  7647                           ;incstack = 0
  7648  006F7A  0E3E               	movlw	62
  7649  006F7C  EC98  F039         	call	_RADIO_RegisterRead
  7650  006F80  6E51               	movwf	btemp+11,c
  7651                           
  7652                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7653  006F82  0EFF               	movlw	-1
  7654  006F84  C051  FFE3         	movff	btemp+11,plusw1
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7658                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7659  006F88  B0E3               	btfsc	plusw1,0,c
  7660  006F8A  D00E               	goto	l670
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;radio_driver_SX1276.c: 1397: {
  7664                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7665  006F8C  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7666  006F90  0E00               	movlw	0
  7667  006F92  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7668  006F94  EC6E  F028         	call	_RADIO_WriteMode
  7669                           
  7670                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7671  006F98  0101               	movlb	1	; () banked
  7672  006F9A  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7673  006F9C  EC9C  F03A         	call	_SwTimerStop
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7677  006FA0  0101               	movlb	1	; () banked
  7678  006FA2  938C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7679                           
  7680                           ; BSR set to: 1
  7681                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7682  006FA4  EC71  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7683  006FA8                     l670:
  7684                           
  7685                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7686  006FA8  52E5               	movf	postdec1,f,c
  7687  006FAA  52E5               	movf	postdec1,f,c
  7688  006FAC  0012               	return		;funcret
  7689  006FAE                     __end_of_RADIO_RxFSKTimeout:
  7690                           	opt stack 0
  7691                           tosu	equ	0xFFF
  7692                           tosh	equ	0xFFE
  7693                           tosl	equ	0xFFD
  7694                           pclath	equ	0xFFA
  7695                           tblptru	equ	0xFF8
  7696                           tblptrh	equ	0xFF7
  7697                           tblptrl	equ	0xFF6
  7698                           tablat	equ	0xFF5
  7699                           prodh	equ	0xFF4
  7700                           prodl	equ	0xFF3
  7701                           intcon	equ	0xFF2
  7702                           intcon2	equ	0xFF1
  7703                           intcon3	equ	0xFF0
  7704                           postinc0	equ	0xFEE
  7705                           wreg	equ	0xFE8
  7706                           postinc1	equ	0xFE6
  7707                           postdec1	equ	0xFE5
  7708                           plusw1	equ	0xFE3
  7709                           fsr1h	equ	0xFE2
  7710                           fsr1l	equ	0xFE1
  7711                           indf2	equ	0xFDF
  7712                           postinc2	equ	0xFDE
  7713                           postdec2	equ	0xFDD
  7714                           fsr2h	equ	0xFDA
  7715                           fsr2l	equ	0xFD9
  7716                           status	equ	0xFD8
  7717                           
  7718 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7719 ;; Defined at:
  7720 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  param           1  [STACK] unsigned char 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1  [STACK] void 
  7727 ;; Registers used:
  7728 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : F/0
  7731 ;;		On exit  : D/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;Total ram usage:        0 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:   13
  7741 ;; This function calls:
  7742 ;;		_RADIO_Transmit
  7743 ;;		_ResetParametersForUnconfirmedTransmission
  7744 ;;		_RxDataDone
  7745 ;;		_SelectChannelForTransmission
  7746 ;; This function is called by:
  7747 ;;		_SetCallbackSoftwareTimers
  7748 ;;		_SwTimersExecute
  7749 ;; This function uses a reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text46
  7753  0062D2                     __ptext46:
  7754                           	opt stack 0
  7755  0062D2                     _UnconfirmedTransmissionCallback:
  7756                           	opt stack 15
  7757                           
  7758                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7759                           
  7760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7761                           ;incstack = 0
  7762  0062D2  0E01               	movlw	1
  7763  0062D4  EC2C  F033         	call	_SelectChannelForTransmission
  7764  0062D8  0900               	iorlw	0
  7765  0062DA  E116               	bnz	l15182
  7766                           
  7767                           ; BSR set to: 0
  7768  0062DC  0EF0               	movlw	low (_macBuffer+16)
  7769  0062DE  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  7770  0062E0  0E04               	movlw	high (_macBuffer+16)
  7771  0062E2  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7772  0062E4  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7773  0062E8  ECE2  F017         	call	_RADIO_Transmit	;wreg free
  7774  0062EC  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  7775  0062F0  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  7776  0062F4  5047               	movf	btemp+1,w,c
  7777  0062F6  1048               	iorwf	btemp+2,w,c
  7778  0062F8  E107               	bnz	l15182
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;lorawan.c: 1001: {
  7782                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7783  0062FA  0102               	movlb	2	; () banked
  7784  0062FC  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7785                           
  7786                           ; BSR set to: 2
  7787                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7788  0062FE  5102               	movf	(_loRa+2)& (0+255),w,b
  7789  006300  0BF0               	andlw	-16
  7790  006302  0901               	iorlw	1
  7791  006304  6F02               	movwf	(_loRa+2)& (0+255),b
  7792                           
  7793                           ;lorawan.c: 1005: }
  7794  006306  D016               	goto	l2069
  7795  006308                     l15182:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;lorawan.c: 1006: else
  7799                           ;lorawan.c: 1008: {
  7800                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7801  006308  ECC6  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7802                           
  7803                           ; BSR set to: 2
  7804                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7805  00630C  0100               	movlb	0	; () banked
  7806  00630E  51E8               	movf	_rxPayload& (0+255),w,b
  7807  006310  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7808  006312  E010               	bz	l2069
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;lorawan.c: 1011: {
  7812                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7813  006314  0E00               	movlw	0
  7814  006316  6B67               	clrf	RxDataDone@pData& (0+255),b
  7815  006318  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  7816  00631A  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  7817  00631C  6B6A               	clrf	RxDataDone@status& (0+255),b
  7818  00631E  D801               	call	u17928
  7819  006320  D009               	goto	l2069
  7820  006322                     u17928:
  7821  006322  0005               	push	
  7822  006324  6EFA               	movwf	pclath,c
  7823  006326  51E8               	movf	_rxPayload& (0+255),w,b
  7824  006328  6EFD               	movwf	tosl,c
  7825  00632A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7826  00632C  6EFE               	movwf	tosh,c
  7827  00632E  6AFF               	clrf	tosu,c
  7828  006330  50FA               	movf	pclath,w,c
  7829  006332  0012               	return		;indir
  7830  006334                     l2069:
  7831                           
  7832                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7833  006334  52E5               	movf	postdec1,f,c
  7834  006336  0012               	return		;funcret
  7835  006338                     __end_of_UnconfirmedTransmissionCallback:
  7836                           	opt stack 0
  7837                           tosu	equ	0xFFF
  7838                           tosh	equ	0xFFE
  7839                           tosl	equ	0xFFD
  7840                           pclath	equ	0xFFA
  7841                           tblptru	equ	0xFF8
  7842                           tblptrh	equ	0xFF7
  7843                           tblptrl	equ	0xFF6
  7844                           tablat	equ	0xFF5
  7845                           prodh	equ	0xFF4
  7846                           prodl	equ	0xFF3
  7847                           intcon	equ	0xFF2
  7848                           intcon2	equ	0xFF1
  7849                           intcon3	equ	0xFF0
  7850                           postinc0	equ	0xFEE
  7851                           wreg	equ	0xFE8
  7852                           postinc1	equ	0xFE6
  7853                           postdec1	equ	0xFE5
  7854                           plusw1	equ	0xFE3
  7855                           fsr1h	equ	0xFE2
  7856                           fsr1l	equ	0xFE1
  7857                           indf2	equ	0xFDF
  7858                           postinc2	equ	0xFDE
  7859                           postdec2	equ	0xFDD
  7860                           fsr2h	equ	0xFDA
  7861                           fsr2l	equ	0xFD9
  7862                           status	equ	0xFD8
  7863                           
  7864 ;; *************** function _GetRx1Freq *****************
  7865 ;; Defined at:
  7866 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;		None
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  4    4[BANK0 ] unsigned long 
  7873 ;; Registers used:
  7874 ;;		None
  7875 ;; Tracked objects:
  7876 ;;		On entry : F/2
  7877 ;;		On exit  : F/2
  7878 ;;		Unchanged: F/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;Total ram usage:        4 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    7
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_LORAWAN_ReceiveWindow1Callback
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text47
  7895  007758                     __ptext47:
  7896                           	opt stack 0
  7897  007758                     _GetRx1Freq:
  7898                           	opt stack 20
  7899                           
  7900                           ; BSR set to: 2
  7901                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7902                           
  7903                           ;incstack = 0
  7904  007758  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  7905  00775C  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  7906  007760  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  7907  007764  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  7908                           
  7909                           ; BSR set to: 2
  7910  007768  0012               	return		;funcret
  7911  00776A                     __end_of_GetRx1Freq:
  7912                           	opt stack 0
  7913                           tosu	equ	0xFFF
  7914                           tosh	equ	0xFFE
  7915                           tosl	equ	0xFFD
  7916                           pclath	equ	0xFFA
  7917                           tblptru	equ	0xFF8
  7918                           tblptrh	equ	0xFF7
  7919                           tblptrl	equ	0xFF6
  7920                           tablat	equ	0xFF5
  7921                           prodh	equ	0xFF4
  7922                           prodl	equ	0xFF3
  7923                           intcon	equ	0xFF2
  7924                           intcon2	equ	0xFF1
  7925                           intcon3	equ	0xFF0
  7926                           postinc0	equ	0xFEE
  7927                           wreg	equ	0xFE8
  7928                           postinc1	equ	0xFE6
  7929                           postdec1	equ	0xFE5
  7930                           plusw1	equ	0xFE3
  7931                           fsr1h	equ	0xFE2
  7932                           fsr1l	equ	0xFE1
  7933                           indf2	equ	0xFDF
  7934                           postinc2	equ	0xFDE
  7935                           postdec2	equ	0xFDD
  7936                           fsr2h	equ	0xFDA
  7937                           fsr2l	equ	0xFD9
  7938                           status	equ	0xFD8
  7939                           
  7940 ;; *************** function _RADIO_DIO5 *****************
  7941 ;; Defined at:
  7942 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;		None
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  dioMapping      1    0        unsigned char 
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      void 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0, cstack
  7951 ;; Tracked objects:
  7952 ;;		On entry : F/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;Total ram usage:        1 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; Hardware stack levels required when called:   11
  7963 ;; This function calls:
  7964 ;;		_RADIO_RegisterRead
  7965 ;;		_RADIO_UnhandledInterrupt
  7966 ;; This function is called by:
  7967 ;;		_LORAWAN_Mainloop
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text48
  7972  00767C                     __ptext48:
  7973                           	opt stack 0
  7974  00767C                     _RADIO_DIO5:
  7975                           	opt stack 18
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  7979                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  7980                           
  7981                           ; BSR set to: 2
  7982                           ;incstack = 0
  7983  00767C  0E41               	movlw	65
  7984  00767E  EC98  F039         	call	_RADIO_RegisterRead
  7985                           
  7986                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7987  007682  0E01               	movlw	1
  7988  007684  EC98  F039         	call	_RADIO_RegisterRead
  7989  007688  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  7990  00768A  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  7991  00768C  0012               	return	
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7995  00768E  0E01               	movlw	1
  7996  007690  EFCF  F039         	goto	_RADIO_UnhandledInterrupt
  7997  007694                     __end_of_RADIO_DIO5:
  7998                           	opt stack 0
  7999                           tosu	equ	0xFFF
  8000                           tosh	equ	0xFFE
  8001                           tosl	equ	0xFFD
  8002                           pclath	equ	0xFFA
  8003                           tblptru	equ	0xFF8
  8004                           tblptrh	equ	0xFF7
  8005                           tblptrl	equ	0xFF6
  8006                           tablat	equ	0xFF5
  8007                           prodh	equ	0xFF4
  8008                           prodl	equ	0xFF3
  8009                           intcon	equ	0xFF2
  8010                           intcon2	equ	0xFF1
  8011                           intcon3	equ	0xFF0
  8012                           postinc0	equ	0xFEE
  8013                           wreg	equ	0xFE8
  8014                           postinc1	equ	0xFE6
  8015                           postdec1	equ	0xFE5
  8016                           plusw1	equ	0xFE3
  8017                           fsr1h	equ	0xFE2
  8018                           fsr1l	equ	0xFE1
  8019                           indf2	equ	0xFDF
  8020                           postinc2	equ	0xFDE
  8021                           postdec2	equ	0xFDD
  8022                           fsr2h	equ	0xFDA
  8023                           fsr2l	equ	0xFD9
  8024                           status	equ	0xFD8
  8025                           
  8026 ;; *************** function _RADIO_DIO4 *****************
  8027 ;; Defined at:
  8028 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;  dioMapping      1    0        unsigned char 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : F/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8045 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;Total ram usage:        1 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:   11
  8049 ;; This function calls:
  8050 ;;		_RADIO_RegisterRead
  8051 ;;		_RADIO_UnhandledInterrupt
  8052 ;; This function is called by:
  8053 ;;		_LORAWAN_Mainloop
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text49
  8058  007694                     __ptext49:
  8059                           	opt stack 0
  8060  007694                     _RADIO_DIO4:
  8061                           	opt stack 18
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8065                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8066                           
  8067                           ;incstack = 0
  8068  007694  0E41               	movlw	65
  8069  007696  EC98  F039         	call	_RADIO_RegisterRead
  8070                           
  8071                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8072  00769A  0E01               	movlw	1
  8073  00769C  EC98  F039         	call	_RADIO_RegisterRead
  8074  0076A0  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8075  0076A2  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8076  0076A4  0012               	return	
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8080  0076A6  0E01               	movlw	1
  8081  0076A8  EFCF  F039         	goto	_RADIO_UnhandledInterrupt
  8082  0076AC                     __end_of_RADIO_DIO4:
  8083                           	opt stack 0
  8084                           tosu	equ	0xFFF
  8085                           tosh	equ	0xFFE
  8086                           tosl	equ	0xFFD
  8087                           pclath	equ	0xFFA
  8088                           tblptru	equ	0xFF8
  8089                           tblptrh	equ	0xFF7
  8090                           tblptrl	equ	0xFF6
  8091                           tablat	equ	0xFF5
  8092                           prodh	equ	0xFF4
  8093                           prodl	equ	0xFF3
  8094                           intcon	equ	0xFF2
  8095                           intcon2	equ	0xFF1
  8096                           intcon3	equ	0xFF0
  8097                           postinc0	equ	0xFEE
  8098                           wreg	equ	0xFE8
  8099                           postinc1	equ	0xFE6
  8100                           postdec1	equ	0xFE5
  8101                           plusw1	equ	0xFE3
  8102                           fsr1h	equ	0xFE2
  8103                           fsr1l	equ	0xFE1
  8104                           indf2	equ	0xFDF
  8105                           postinc2	equ	0xFDE
  8106                           postdec2	equ	0xFDD
  8107                           fsr2h	equ	0xFDA
  8108                           fsr2l	equ	0xFD9
  8109                           status	equ	0xFD8
  8110                           
  8111 ;; *************** function _RADIO_DIO3 *****************
  8112 ;; Defined at:
  8113 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;		None
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;  dioMapping      1    0        unsigned char 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      void 
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : F/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;Total ram usage:        1 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:   11
  8134 ;; This function calls:
  8135 ;;		_RADIO_RegisterRead
  8136 ;;		_RADIO_UnhandledInterrupt
  8137 ;; This function is called by:
  8138 ;;		_LORAWAN_Mainloop
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text50
  8143  0076AC                     __ptext50:
  8144                           	opt stack 0
  8145  0076AC                     _RADIO_DIO3:
  8146                           	opt stack 18
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8150                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8151                           
  8152                           ;incstack = 0
  8153  0076AC  0E40               	movlw	64
  8154  0076AE  EC98  F039         	call	_RADIO_RegisterRead
  8155                           
  8156                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8157  0076B2  0E01               	movlw	1
  8158  0076B4  EC98  F039         	call	_RADIO_RegisterRead
  8159  0076B8  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8160  0076BA  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8161  0076BC  0012               	return	
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8165  0076BE  0E01               	movlw	1
  8166  0076C0  EFCF  F039         	goto	_RADIO_UnhandledInterrupt
  8167  0076C4                     __end_of_RADIO_DIO3:
  8168                           	opt stack 0
  8169                           tosu	equ	0xFFF
  8170                           tosh	equ	0xFFE
  8171                           tosl	equ	0xFFD
  8172                           pclath	equ	0xFFA
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           intcon2	equ	0xFF1
  8181                           intcon3	equ	0xFF0
  8182                           postinc0	equ	0xFEE
  8183                           wreg	equ	0xFE8
  8184                           postinc1	equ	0xFE6
  8185                           postdec1	equ	0xFE5
  8186                           plusw1	equ	0xFE3
  8187                           fsr1h	equ	0xFE2
  8188                           fsr1l	equ	0xFE1
  8189                           indf2	equ	0xFDF
  8190                           postinc2	equ	0xFDE
  8191                           postdec2	equ	0xFDD
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8
  8195                           
  8196 ;; *************** function _RADIO_DIO2 *****************
  8197 ;; Defined at:
  8198 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8203 ;;  opMode          1    0        unsigned char 
  8204 ;; Return value:  Size  Location     Type
  8205 ;;                  1    wreg      void 
  8206 ;; Registers used:
  8207 ;;		wreg, status,2, status,0, cstack
  8208 ;; Tracked objects:
  8209 ;;		On entry : F/0
  8210 ;;		On exit  : 0/0
  8211 ;;		Unchanged: 0/0
  8212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8217 ;;Total ram usage:        2 bytes
  8218 ;; Hardware stack levels used:    1
  8219 ;; Hardware stack levels required when called:   12
  8220 ;; This function calls:
  8221 ;;		_RADIO_FHSSChangeChannel
  8222 ;;		_RADIO_RegisterRead
  8223 ;;		_RADIO_UnhandledInterrupt
  8224 ;; This function is called by:
  8225 ;;		_LORAWAN_Mainloop
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           	psect	text51
  8230  006BD6                     __ptext51:
  8231                           	opt stack 0
  8232  006BD6                     _RADIO_DIO2:
  8233                           	opt stack 17
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8237                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8238                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8239                           
  8240                           ;incstack = 0
  8241  006BD6  0E40               	movlw	64
  8242  006BD8  EC98  F039         	call	_RADIO_RegisterRead
  8243  006BDC  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8244  006BDE  90D8               	bcf	status,0,c
  8245  006BE0  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8246  006BE2  90D8               	bcf	status,0,c
  8247  006BE4  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8248  006BE6  0B03               	andlw	3
  8249  006BE8  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8250                           
  8251                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8252  006BEA  0E01               	movlw	1
  8253  006BEC  EC98  F039         	call	_RADIO_RegisterRead
  8254                           
  8255                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8256  006BF0  0E01               	movlw	1
  8257  006BF2  EC98  F039         	call	_RADIO_RegisterRead
  8258  006BF6  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8259  006BF8  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8260  006BFA  0012               	return	
  8261  006BFC  D003               	goto	l15280
  8262  006BFE                     l15276:
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8266  006BFE  0E01               	movlw	1
  8267  006C00  EFCF  F039         	goto	_RADIO_UnhandledInterrupt
  8268  006C04                     l15280:
  8269                           
  8270                           ; BSR set to: 0
  8271  006C04  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8272                           
  8273                           ; Switch size 1, requested type "speed"
  8274                           ; Number of cases is 3, Range of values is 0 to 2
  8275                           ; switch strategies available:
  8276                           ; Name         Instructions Cycles
  8277                           ; simple_byte           10     6 (average)
  8278                           ;	Chosen strategy is simple_byte
  8279  006C06  E102 EF9F  F038    	bz	_RADIO_FHSSChangeChannel
  8280  006C0C  0A01               	xorlw	1	; case 1
  8281  006C0E  E102 EF9F  F038    	bz	_RADIO_FHSSChangeChannel
  8282  006C14  0A03               	xorlw	3	; case 2
  8283  006C16  E102 EF9F  F038    	bz	_RADIO_FHSSChangeChannel
  8284  006C1C  D7F0               	goto	l15276
  8285  006C1E                     __end_of_RADIO_DIO2:
  8286                           	opt stack 0
  8287                           tosu	equ	0xFFF
  8288                           tosh	equ	0xFFE
  8289                           tosl	equ	0xFFD
  8290                           pclath	equ	0xFFA
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           intcon2	equ	0xFF1
  8299                           intcon3	equ	0xFF0
  8300                           postinc0	equ	0xFEE
  8301                           wreg	equ	0xFE8
  8302                           postinc1	equ	0xFE6
  8303                           postdec1	equ	0xFE5
  8304                           plusw1	equ	0xFE3
  8305                           fsr1h	equ	0xFE2
  8306                           fsr1l	equ	0xFE1
  8307                           indf2	equ	0xFDF
  8308                           postinc2	equ	0xFDE
  8309                           postdec2	equ	0xFDD
  8310                           fsr2h	equ	0xFDA
  8311                           fsr2l	equ	0xFD9
  8312                           status	equ	0xFD8
  8313                           
  8314 ;; *************** function _RADIO_DIO1 *****************
  8315 ;; Defined at:
  8316 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  dioMapping      1   81[BANK0 ] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8325 ;; Tracked objects:
  8326 ;;		On entry : F/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;Total ram usage:        2 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:   17
  8337 ;; This function calls:
  8338 ;;		_RADIO_FHSSChangeChannel
  8339 ;;		_RADIO_RegisterRead
  8340 ;;		_RADIO_RxTimeout
  8341 ;;		_RADIO_UnhandledInterrupt
  8342 ;; This function is called by:
  8343 ;;		_LORAWAN_Mainloop
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text52
  8348  006E5E                     __ptext52:
  8349                           	opt stack 0
  8350  006E5E                     _RADIO_DIO1:
  8351                           	opt stack 12
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8355                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8356                           
  8357                           ;incstack = 0
  8358  006E5E  0E40               	movlw	64
  8359  006E60  EC98  F039         	call	_RADIO_RegisterRead
  8360  006E64  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8361  006E66  39B0               	swapf	??_RADIO_DIO1& (0+255),w,b
  8362  006E68  0B0F               	andlw	15
  8363  006E6A  0B03               	andlw	3
  8364  006E6C  6FB1               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8365                           
  8366                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8367  006E6E  0E01               	movlw	1
  8368  006E70  EC98  F039         	call	_RADIO_RegisterRead
  8369  006E74  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8370  006E76  AFB0               	btfss	??_RADIO_DIO1& (0+255),7,b
  8371  006E78  D00D               	goto	l15268
  8372  006E7A  D003               	goto	l15264
  8373  006E7C                     l15260:
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8377  006E7C  0E01               	movlw	1
  8378  006E7E  EFCF  F039         	goto	_RADIO_UnhandledInterrupt
  8379  006E82                     l15264:
  8380                           
  8381                           ; BSR set to: 0
  8382  006E82  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8383                           
  8384                           ; Switch size 1, requested type "speed"
  8385                           ; Number of cases is 2, Range of values is 0 to 1
  8386                           ; switch strategies available:
  8387                           ; Name         Instructions Cycles
  8388                           ; simple_byte            7     4 (average)
  8389                           ;	Chosen strategy is simple_byte
  8390  006E84  E102 EF4A  F039    	bz	_RADIO_RxTimeout
  8391  006E8A  0A01               	xorlw	1	; case 1
  8392  006E8C  E102 EF9F  F038    	bz	_RADIO_FHSSChangeChannel
  8393  006E92  D7F4               	goto	l15260
  8394  006E94                     l15268:
  8395                           
  8396                           ; BSR set to: 0
  8397  006E94  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8398                           
  8399                           ; Switch size 1, requested type "speed"
  8400                           ; Number of cases is 1, Range of values is 0 to 0
  8401                           ; switch strategies available:
  8402                           ; Name         Instructions Cycles
  8403                           ; simple_byte            4     3 (average)
  8404                           ;	Chosen strategy is simple_byte
  8405  006E96  0012               	return	
  8406  006E98                     __end_of_RADIO_DIO1:
  8407                           	opt stack 0
  8408                           tosu	equ	0xFFF
  8409                           tosh	equ	0xFFE
  8410                           tosl	equ	0xFFD
  8411                           pclath	equ	0xFFA
  8412                           tblptru	equ	0xFF8
  8413                           tblptrh	equ	0xFF7
  8414                           tblptrl	equ	0xFF6
  8415                           tablat	equ	0xFF5
  8416                           prodh	equ	0xFF4
  8417                           prodl	equ	0xFF3
  8418                           intcon	equ	0xFF2
  8419                           intcon2	equ	0xFF1
  8420                           intcon3	equ	0xFF0
  8421                           postinc0	equ	0xFEE
  8422                           wreg	equ	0xFE8
  8423                           postinc1	equ	0xFE6
  8424                           postdec1	equ	0xFE5
  8425                           plusw1	equ	0xFE3
  8426                           fsr1h	equ	0xFE2
  8427                           fsr1l	equ	0xFE1
  8428                           indf2	equ	0xFDF
  8429                           postinc2	equ	0xFDE
  8430                           postdec2	equ	0xFDD
  8431                           fsr2h	equ	0xFDA
  8432                           fsr2l	equ	0xFD9
  8433                           status	equ	0xFD8
  8434                           
  8435 ;; *************** function _RADIO_RxTimeout *****************
  8436 ;; Defined at:
  8437 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : F/0
  8448 ;;		On exit  : D/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;Total ram usage:        0 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:   16
  8458 ;; This function calls:
  8459 ;;		_LORAWAN_RxTimeout
  8460 ;;		_RADIO_RegisterWrite
  8461 ;;		_RADIO_WriteMode
  8462 ;;		_SwTimerStop
  8463 ;; This function is called by:
  8464 ;;		_RADIO_DIO1
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text53
  8469  007294                     __ptext53:
  8470                           	opt stack 0
  8471  007294                     _RADIO_RxTimeout:
  8472                           	opt stack 12
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8476                           
  8477                           ;incstack = 0
  8478  007294  0101               	movlb	1	; () banked
  8479  007296  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8480  007298  EC9C  F03A         	call	_SwTimerStop
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8484  00729C  0E80               	movlw	128
  8485  00729E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8486  0072A0  0E12               	movlw	18
  8487  0072A2  EC6F  F03A         	call	_RADIO_RegisterWrite
  8488                           
  8489                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8490  0072A6  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8491  0072AA  0E00               	movlw	0
  8492  0072AC  0100               	movlb	0	; () banked
  8493  0072AE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8494  0072B0  EC6E  F028         	call	_RADIO_WriteMode
  8495                           
  8496                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8497  0072B4  0101               	movlb	1	; () banked
  8498  0072B6  938C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8499                           
  8500                           ; BSR set to: 1
  8501                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8502  0072B8  EF71  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8503  0072BC                     __end_of_RADIO_RxTimeout:
  8504                           	opt stack 0
  8505                           tosu	equ	0xFFF
  8506                           tosh	equ	0xFFE
  8507                           tosl	equ	0xFFD
  8508                           pclath	equ	0xFFA
  8509                           tblptru	equ	0xFF8
  8510                           tblptrh	equ	0xFF7
  8511                           tblptrl	equ	0xFF6
  8512                           tablat	equ	0xFF5
  8513                           prodh	equ	0xFF4
  8514                           prodl	equ	0xFF3
  8515                           intcon	equ	0xFF2
  8516                           intcon2	equ	0xFF1
  8517                           intcon3	equ	0xFF0
  8518                           postinc0	equ	0xFEE
  8519                           wreg	equ	0xFE8
  8520                           postinc1	equ	0xFE6
  8521                           postdec1	equ	0xFE5
  8522                           plusw1	equ	0xFE3
  8523                           fsr1h	equ	0xFE2
  8524                           fsr1l	equ	0xFE1
  8525                           indf2	equ	0xFDF
  8526                           postinc2	equ	0xFDE
  8527                           postdec2	equ	0xFDD
  8528                           fsr2h	equ	0xFDA
  8529                           fsr2l	equ	0xFD9
  8530                           status	equ	0xFD8
  8531                           
  8532 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8533 ;; Defined at:
  8534 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;  irqFlags        1    0        unsigned char 
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, status,2, status,0, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : F/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:   11
  8555 ;; This function calls:
  8556 ;;		_RADIO_RegisterRead
  8557 ;;		_RADIO_RegisterWrite
  8558 ;;		_RADIO_WriteFrequency
  8559 ;; This function is called by:
  8560 ;;		_RADIO_DIO1
  8561 ;;		_RADIO_DIO2
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text54
  8566  00713E                     __ptext54:
  8567                           	opt stack 0
  8568  00713E                     _RADIO_FHSSChangeChannel:
  8569                           	opt stack 17
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8573                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8574                           
  8575                           ;incstack = 0
  8576  00713E  0E12               	movlw	18
  8577  007140  EC98  F039         	call	_RADIO_RegisterRead
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8581  007144  0101               	movlb	1	; () banked
  8582  007146  5187               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8583  007148  1188               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8584  00714A  E00A               	bz	l592
  8585                           
  8586                           ; BSR set to: 1
  8587                           ;radio_driver_SX1276.c: 1164: {
  8588                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8589  00714C  5198               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8590  00714E  1199               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8591  007150  E007               	bz	l592
  8592                           
  8593                           ; BSR set to: 1
  8594                           ;radio_driver_SX1276.c: 1166: {
  8595                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8596  007152  0100               	movlb	0	; () banked
  8597  007154  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8598  007156  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8599  007158  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8600  00715A  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8601  00715C  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
  8602  007160                     l592:
  8603                           
  8604                           ;radio_driver_SX1276.c: 1168: }
  8605                           ;radio_driver_SX1276.c: 1169: }
  8606                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8607  007160  0E02               	movlw	2
  8608  007162  0100               	movlb	0	; () banked
  8609  007164  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8610  007166  0E12               	movlw	18
  8611  007168  EF6F  F03A         	goto	_RADIO_RegisterWrite
  8612  00716C                     __end_of_RADIO_FHSSChangeChannel:
  8613                           	opt stack 0
  8614                           tosu	equ	0xFFF
  8615                           tosh	equ	0xFFE
  8616                           tosl	equ	0xFFD
  8617                           pclath	equ	0xFFA
  8618                           tblptru	equ	0xFF8
  8619                           tblptrh	equ	0xFF7
  8620                           tblptrl	equ	0xFF6
  8621                           tablat	equ	0xFF5
  8622                           prodh	equ	0xFF4
  8623                           prodl	equ	0xFF3
  8624                           intcon	equ	0xFF2
  8625                           intcon2	equ	0xFF1
  8626                           intcon3	equ	0xFF0
  8627                           postinc0	equ	0xFEE
  8628                           wreg	equ	0xFE8
  8629                           postinc1	equ	0xFE6
  8630                           postdec1	equ	0xFE5
  8631                           plusw1	equ	0xFE3
  8632                           fsr1h	equ	0xFE2
  8633                           fsr1l	equ	0xFE1
  8634                           indf2	equ	0xFDF
  8635                           postinc2	equ	0xFDE
  8636                           postdec2	equ	0xFDD
  8637                           fsr2h	equ	0xFDA
  8638                           fsr2l	equ	0xFD9
  8639                           status	equ	0xFD8
  8640                           
  8641 ;; *************** function _RADIO_DIO0 *****************
  8642 ;; Defined at:
  8643 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  opMode          1  135[BANK0 ] unsigned char 
  8648 ;;  dioMapping      1  134[BANK0 ] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : F/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8659 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;Total ram usage:        4 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:   17
  8665 ;; This function calls:
  8666 ;;		_RADIO_FSKPacketSent
  8667 ;;		_RADIO_FSKPayloadReady
  8668 ;;		_RADIO_RegisterRead
  8669 ;;		_RADIO_RxDone
  8670 ;;		_RADIO_TxDone
  8671 ;;		_RADIO_UnhandledInterrupt
  8672 ;; This function is called by:
  8673 ;;		_LORAWAN_Mainloop
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text55
  8678  00646A                     __ptext55:
  8679                           	opt stack 0
  8680  00646A                     _RADIO_DIO0:
  8681                           	opt stack 12
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8685                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8686                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8687                           
  8688                           ;incstack = 0
  8689  00646A  0E40               	movlw	64
  8690  00646C  EC98  F039         	call	_RADIO_RegisterRead
  8691  006470  6FE4               	movwf	??_RADIO_DIO0& (0+255),b
  8692  006472  0E06               	movlw	6
  8693  006474  6FE5               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8694  006476                     u18025:
  8695  006476  90D8               	bcf	status,0,c
  8696  006478  33E4               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8697  00647A  2FE5               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8698  00647C  D7FC               	goto	u18025
  8699  00647E  51E4               	movf	??_RADIO_DIO0& (0+255),w,b
  8700  006480  0B03               	andlw	3
  8701  006482  6FE6               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8702                           
  8703                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8704  006484  0E01               	movlw	1
  8705  006486  EC98  F039         	call	_RADIO_RegisterRead
  8706  00648A  6FE7               	movwf	RADIO_DIO0@opMode& (0+255),b
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8710  00648C  AFE7               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  8711  00648E  D01C               	goto	l15250
  8712  006490  D003               	goto	l15234
  8713  006492                     l15230:
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8717  006492  0E01               	movlw	1
  8718  006494  EFCF  F039         	goto	_RADIO_UnhandledInterrupt
  8719  006498                     l15234:
  8720                           
  8721                           ; BSR set to: 0
  8722  006498  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8723                           
  8724                           ; Switch size 1, requested type "speed"
  8725                           ; Number of cases is 2, Range of values is 0 to 1
  8726                           ; switch strategies available:
  8727                           ; Name         Instructions Cycles
  8728                           ; simple_byte            7     4 (average)
  8729                           ;	Chosen strategy is simple_byte
  8730  00649A  E102 EFDA  F028    	bz	_RADIO_RxDone
  8731  0064A0  0A01               	xorlw	1	; case 1
  8732  0064A2  E102 EFD9  F01D    	bz	_RADIO_TxDone
  8733  0064A8  D7F4               	goto	l15230
  8734  0064AA                     l15236:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8738  0064AA  0E07               	movlw	7
  8739  0064AC  17E7               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8740                           
  8741                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8742  0064AE  0E03               	movlw	3
  8743  0064B0  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8744  0064B2  E102               	bnz	l15240
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;radio_driver_SX1276.c: 1209: {
  8748                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8749  0064B4  EF10  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  8750  0064B8                     l15240:
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8754  0064B8  0E05               	movlw	5
  8755  0064BA  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8756  0064BC  E102               	bnz	l15246
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;radio_driver_SX1276.c: 1214: {
  8760                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8761  0064BE  EF2E  F02D         	goto	_RADIO_FSKPayloadReady	;wreg free
  8762  0064C2                     l15246:
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8766  0064C2  0E00               	movlw	0
  8767  0064C4  EFCF  F039         	goto	_RADIO_UnhandledInterrupt
  8768  0064C8                     l15250:
  8769                           
  8770                           ; BSR set to: 0
  8771  0064C8  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8772                           
  8773                           ; Switch size 1, requested type "speed"
  8774                           ; Number of cases is 1, Range of values is 0 to 0
  8775                           ; switch strategies available:
  8776                           ; Name         Instructions Cycles
  8777                           ; simple_byte            4     3 (average)
  8778                           ;	Chosen strategy is simple_byte
  8779  0064CA  E0EF               	bz	l15236
  8780  0064CC  D7FA               	goto	l15246
  8781  0064CE                     __end_of_RADIO_DIO0:
  8782                           	opt stack 0
  8783                           tosu	equ	0xFFF
  8784                           tosh	equ	0xFFE
  8785                           tosl	equ	0xFFD
  8786                           pclath	equ	0xFFA
  8787                           tblptru	equ	0xFF8
  8788                           tblptrh	equ	0xFF7
  8789                           tblptrl	equ	0xFF6
  8790                           tablat	equ	0xFF5
  8791                           prodh	equ	0xFF4
  8792                           prodl	equ	0xFF3
  8793                           intcon	equ	0xFF2
  8794                           intcon2	equ	0xFF1
  8795                           intcon3	equ	0xFF0
  8796                           postinc0	equ	0xFEE
  8797                           wreg	equ	0xFE8
  8798                           postinc1	equ	0xFE6
  8799                           postdec1	equ	0xFE5
  8800                           plusw1	equ	0xFE3
  8801                           fsr1h	equ	0xFE2
  8802                           fsr1l	equ	0xFE1
  8803                           indf2	equ	0xFDF
  8804                           postinc2	equ	0xFDE
  8805                           postdec2	equ	0xFDD
  8806                           fsr2h	equ	0xFDA
  8807                           fsr2l	equ	0xFD9
  8808                           status	equ	0xFD8
  8809                           
  8810 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8811 ;; Defined at:
  8812 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;  modulation      1    wreg     enum E7751
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;  modulation      1    8[BANK0 ] enum E7751
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, status,2, status,0, cstack
  8821 ;; Tracked objects:
  8822 ;;		On entry : F/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8829 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;Total ram usage:        1 bytes
  8831 ;; Hardware stack levels used:    1
  8832 ;; Hardware stack levels required when called:   10
  8833 ;; This function calls:
  8834 ;;		_RADIO_RegisterWrite
  8835 ;; This function is called by:
  8836 ;;		_RADIO_DIO0
  8837 ;;		_RADIO_DIO1
  8838 ;;		_RADIO_DIO2
  8839 ;;		_RADIO_DIO3
  8840 ;;		_RADIO_DIO4
  8841 ;;		_RADIO_DIO5
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text56
  8846  00739E                     __ptext56:
  8847                           	opt stack 0
  8848  00739E                     _RADIO_UnhandledInterrupt:
  8849                           	opt stack 18
  8850                           
  8851                           ;incstack = 0
  8852                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8853  00739E  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8854                           
  8855                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8856  0073A0  0100               	movlb	0	; () banked
  8857  0073A2  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8858  0073A4  E104               	bnz	l14926
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;radio_driver_SX1276.c: 1145: {
  8862                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8863  0073A6  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8864  0073A8  0E12               	movlw	18
  8865  0073AA  EF6F  F03A         	goto	_RADIO_RegisterWrite
  8866  0073AE                     l14926:
  8867                           
  8868                           ; BSR set to: 0
  8869                           ;radio_driver_SX1276.c: 1148: else
  8870                           ;radio_driver_SX1276.c: 1149: {
  8871                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8872  0073AE  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8873  0073B0  0E3E               	movlw	62
  8874  0073B2  EC6F  F03A         	call	_RADIO_RegisterWrite
  8875                           
  8876                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8877  0073B6  0100               	movlb	0	; () banked
  8878  0073B8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8879  0073BA  0E3F               	movlw	63
  8880  0073BC  EF6F  F03A         	goto	_RADIO_RegisterWrite
  8881  0073C0                     __end_of_RADIO_UnhandledInterrupt:
  8882                           	opt stack 0
  8883                           tosu	equ	0xFFF
  8884                           tosh	equ	0xFFE
  8885                           tosl	equ	0xFFD
  8886                           pclath	equ	0xFFA
  8887                           tblptru	equ	0xFF8
  8888                           tblptrh	equ	0xFF7
  8889                           tblptrl	equ	0xFF6
  8890                           tablat	equ	0xFF5
  8891                           prodh	equ	0xFF4
  8892                           prodl	equ	0xFF3
  8893                           intcon	equ	0xFF2
  8894                           intcon2	equ	0xFF1
  8895                           intcon3	equ	0xFF0
  8896                           postinc0	equ	0xFEE
  8897                           wreg	equ	0xFE8
  8898                           postinc1	equ	0xFE6
  8899                           postdec1	equ	0xFE5
  8900                           plusw1	equ	0xFE3
  8901                           fsr1h	equ	0xFE2
  8902                           fsr1l	equ	0xFE1
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8
  8909                           
  8910 ;; *************** function _RADIO_TxDone *****************
  8911 ;; Defined at:
  8912 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : F/0
  8923 ;;		On exit  : C/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;Total ram usage:       12 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:   15
  8933 ;; This function calls:
  8934 ;;		_LORAWAN_TxDone
  8935 ;;		_RADIO_RegisterWrite
  8936 ;;		_RADIO_WriteMode
  8937 ;;		_SwTimerReadValue
  8938 ;;		_SwTimerStop
  8939 ;; This function is called by:
  8940 ;;		_RADIO_DIO0
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text57
  8945  003BB2                     __ptext57:
  8946                           	opt stack 0
  8947  003BB2                     _RADIO_TxDone:
  8948                           	opt stack 13
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8952                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8953                           
  8954                           ;incstack = 0
  8955  003BB2  0101               	movlb	1	; () banked
  8956  003BB4  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8957  003BB6  EC9C  F03A         	call	_SwTimerStop
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8961  003BBA  0E08               	movlw	8
  8962  003BBC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8963  003BBE  0E12               	movlw	18
  8964  003BC0  EC6F  F03A         	call	_RADIO_RegisterWrite
  8965                           
  8966                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8967  003BC4  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8968  003BC8  0E00               	movlw	0
  8969  003BCA  0100               	movlb	0	; () banked
  8970  003BCC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8971  003BCE  EC6E  F028         	call	_RADIO_WriteMode
  8972                           
  8973                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8974  003BD2  0101               	movlb	1	; () banked
  8975  003BD4  918C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8976                           
  8977                           ; BSR set to: 1
  8978                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8979  003BD6  B98C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8980  003BD8  0012               	return	
  8981                           
  8982                           ; BSR set to: 1
  8983                           ;radio_driver_SX1276.c: 1087: {
  8984                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8985  003BDA  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8986  003BDC  EC96  F036         	call	_SwTimerReadValue
  8987  003BE0  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  8988  003BE2  E107               	bnz	u17290
  8989  003BE4  0E1F               	movlw	31
  8990  003BE6  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
  8991  003BE8  0EAC               	movlw	172
  8992  003BEA  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  8993  003BEC  0EDF               	movlw	223
  8994  003BEE  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  8995  003BF0  E346               	bnc	l14892
  8996  003BF2                     u17290:
  8997                           
  8998                           ; BSR set to: 0
  8999  003BF2  0101               	movlb	1	; () banked
  9000  003BF4  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9001  003BF6  EC96  F036         	call	_SwTimerReadValue
  9002  003BFA  0E0D               	movlw	13
  9003  003BFC  D005               	goto	u17300
  9004  003BFE                     u17305:
  9005  003BFE  90D8               	bcf	status,0,c
  9006  003C00  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9007  003C02  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9008  003C04  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9009  003C06  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9010  003C08                     u17300:
  9011  003C08  2EE8               	decfsz	wreg,f,c
  9012  003C0A  D7F9               	goto	u17305
  9013  003C0C  0E7D               	movlw	125
  9014  003C0E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9015  003C10  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9016  003C14  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9017  003C18  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9018  003C1A  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9019  003C1C  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9020  003C1E  50F3               	movf	prodl,w,c
  9021  003C20  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9022  003C22  50F4               	movf	prodh,w,c
  9023  003C24  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9024  003C26  0E00               	movlw	0
  9025  003C28  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9026  003C2A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9027  003C2C  50F3               	movf	prodl,w,c
  9028  003C2E  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9029  003C30  50F4               	movf	prodh,w,c
  9030  003C32  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9031  003C34  0E00               	movlw	0
  9032  003C36  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9033  003C38  0E7D               	movlw	125
  9034  003C3A  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9035  003C3C  50F3               	movf	prodl,w,c
  9036  003C3E  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9037  003C40  50F4               	movf	prodh,w,c
  9038  003C42  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9039  003C44  0E00               	movlw	0
  9040  003C46  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9041  003C48  50F3               	movf	prodl,w,c
  9042  003C4A  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9043  003C4C  50F4               	movf	prodh,w,c
  9044  003C4E  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9045  003C50  0E00               	movlw	0
  9046  003C52  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9047  003C54  50F3               	movf	prodl,w,c
  9048  003C56  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9049  003C58  50F4               	movf	prodh,w,c
  9050  003C5A  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9051  003C5C  0E7D               	movlw	125
  9052  003C5E  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9053  003C60  50F3               	movf	prodl,w,c
  9054  003C62  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9055  003C64  0E00               	movlw	0
  9056  003C66  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9057  003C68  50F3               	movf	prodl,w,c
  9058  003C6A  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9059  003C6C  0E00               	movlw	0
  9060  003C6E  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9061  003C70  50F3               	movf	prodl,w,c
  9062  003C72  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9063  003C74  0E00               	movlw	0
  9064  003C76  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9065  003C78  50F3               	movf	prodl,w,c
  9066  003C7A  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9067  003C7C  D045               	goto	L4
  9068  003C7E                     l14892:
  9069                           
  9070                           ; BSR set to: 0
  9071  003C7E  0101               	movlb	1	; () banked
  9072  003C80  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9073  003C82  EC96  F036         	call	_SwTimerReadValue
  9074  003C86  0E7D               	movlw	125
  9075  003C88  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9076  003C8A  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9077  003C8E  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9078  003C92  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9079  003C94  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9080  003C96  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9081  003C98  50F3               	movf	prodl,w,c
  9082  003C9A  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9083  003C9C  50F4               	movf	prodh,w,c
  9084  003C9E  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9085  003CA0  0E00               	movlw	0
  9086  003CA2  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9087  003CA4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9088  003CA6  50F3               	movf	prodl,w,c
  9089  003CA8  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9090  003CAA  50F4               	movf	prodh,w,c
  9091  003CAC  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9092  003CAE  0E00               	movlw	0
  9093  003CB0  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9094  003CB2  0E7D               	movlw	125
  9095  003CB4  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9096  003CB6  50F3               	movf	prodl,w,c
  9097  003CB8  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9098  003CBA  50F4               	movf	prodh,w,c
  9099  003CBC  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9100  003CBE  0E00               	movlw	0
  9101  003CC0  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9102  003CC2  50F3               	movf	prodl,w,c
  9103  003CC4  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9104  003CC6  50F4               	movf	prodh,w,c
  9105  003CC8  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9106  003CCA  0E00               	movlw	0
  9107  003CCC  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9108  003CCE  50F3               	movf	prodl,w,c
  9109  003CD0  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9110  003CD2  50F4               	movf	prodh,w,c
  9111  003CD4  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9112  003CD6  0E7D               	movlw	125
  9113  003CD8  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9114  003CDA  50F3               	movf	prodl,w,c
  9115  003CDC  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9116  003CDE  0E00               	movlw	0
  9117  003CE0  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9118  003CE2  50F3               	movf	prodl,w,c
  9119  003CE4  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9120  003CE6  0E00               	movlw	0
  9121  003CE8  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9122  003CEA  50F3               	movf	prodl,w,c
  9123  003CEC  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9124  003CEE  0E00               	movlw	0
  9125  003CF0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9126  003CF2  50F3               	movf	prodl,w,c
  9127  003CF4  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9128  003CF6  0E0D               	movlw	13
  9129  003CF8  D005               	goto	u17310
  9130  003CFA                     u17315:
  9131  003CFA  90D8               	bcf	status,0,c
  9132  003CFC  33D5               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9133  003CFE  33D4               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9134  003D00  33D3               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9135  003D02  33D2               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9136  003D04                     u17310:
  9137  003D04  2EE8               	decfsz	wreg,f,c
  9138  003D06  D7F9               	goto	u17315
  9139  003D08                     L4:
  9140  003D08  C0D2  F0DA         	movff	??_RADIO_TxDone,_RADIO_TxDone$1211
  9141  003D0C  C0D3  F0DB         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1211+1
  9142  003D10  C0D4  F0DC         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1211+2
  9143  003D14  C0D5  F0DD         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1211+3
  9144                           
  9145                           ; BSR set to: 0
  9146  003D18  51DA               	movf	_RADIO_TxDone$1211& (0+255),w,b
  9147  003D1A  0820               	sublw	32
  9148  003D1C  6FD6               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9149  003D1E  0E4E               	movlw	78
  9150  003D20  55DB               	subfwb	(_RADIO_TxDone$1211+1)& (0+255),w,b
  9151  003D22  6FD7               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9152  003D24  0E00               	movlw	0
  9153  003D26  55DC               	subfwb	(_RADIO_TxDone$1211+2)& (0+255),w,b
  9154  003D28  6FD8               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9155  003D2A  0E00               	movlw	0
  9156  003D2C  55DD               	subfwb	(_RADIO_TxDone$1211+3)& (0+255),w,b
  9157  003D2E  6FD9               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9161  003D30  C0D6  F0A0         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9162  003D34  C0D7  F0A1         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9163  003D38  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
  9164  003D3C                     __end_of_RADIO_TxDone:
  9165                           	opt stack 0
  9166                           tosu	equ	0xFFF
  9167                           tosh	equ	0xFFE
  9168                           tosl	equ	0xFFD
  9169                           pclath	equ	0xFFA
  9170                           tblptru	equ	0xFF8
  9171                           tblptrh	equ	0xFF7
  9172                           tblptrl	equ	0xFF6
  9173                           tablat	equ	0xFF5
  9174                           prodh	equ	0xFF4
  9175                           prodl	equ	0xFF3
  9176                           intcon	equ	0xFF2
  9177                           intcon2	equ	0xFF1
  9178                           intcon3	equ	0xFF0
  9179                           postinc0	equ	0xFEE
  9180                           wreg	equ	0xFE8
  9181                           postinc1	equ	0xFE6
  9182                           postdec1	equ	0xFE5
  9183                           plusw1	equ	0xFE3
  9184                           fsr1h	equ	0xFE2
  9185                           fsr1l	equ	0xFE1
  9186                           indf2	equ	0xFDF
  9187                           postinc2	equ	0xFDE
  9188                           postdec2	equ	0xFDD
  9189                           fsr2h	equ	0xFDA
  9190                           fsr2l	equ	0xFD9
  9191                           status	equ	0xFD8
  9192                           
  9193 ;; *************** function _RADIO_RxDone *****************
  9194 ;; Defined at:
  9195 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  i               1  131[BANK0 ] unsigned char 
  9200 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : F/0
  9207 ;;		On exit  : D/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;Total ram usage:        2 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:   16
  9217 ;; This function calls:
  9218 ;;		_HALSPICSAssert
  9219 ;;		_HALSPICSDeassert
  9220 ;;		_HALSPISend
  9221 ;;		_LORAWAN_RxDone
  9222 ;;		_RADIO_RegisterRead
  9223 ;;		_RADIO_RegisterWrite
  9224 ;;		_RADIO_WriteMode
  9225 ;;		_SwTimerStop
  9226 ;;		___abdiv
  9227 ;; This function is called by:
  9228 ;;		_RADIO_DIO0
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text58
  9233  0051B4                     __ptext58:
  9234                           	opt stack 0
  9235  0051B4                     _RADIO_RxDone:
  9236                           	opt stack 12
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9240                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9241                           
  9242                           ;incstack = 0
  9243  0051B4  0E12               	movlw	18
  9244  0051B6  EC98  F039         	call	_RADIO_RegisterRead
  9245  0051BA  6FE2               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9246                           
  9247                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9248  0051BC  0E70               	movlw	112
  9249  0051BE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9250  0051C0  0E12               	movlw	18
  9251  0051C2  EC6F  F03A         	call	_RADIO_RegisterWrite
  9252                           
  9253                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9254  0051C6  0100               	movlb	0	; () banked
  9255  0051C8  51E2               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9256  0051CA  0B50               	andlw	80
  9257  0051CC  0A50               	xorlw	80
  9258  0051CE  A4D8               	btfss	status,2,c
  9259  0051D0  0012               	return	
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;radio_driver_SX1276.c: 969: {
  9263                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9264  0051D2  0101               	movlb	1	; () banked
  9265  0051D4  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9266  0051D6  EC9C  F03A         	call	_SwTimerStop
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9270  0051DA  0E1C               	movlw	28
  9271  0051DC  EC98  F039         	call	_RADIO_RegisterRead
  9272  0051E0  6FE3               	movwf	RADIO_RxDone@i& (0+255),b
  9273                           
  9274                           ; BSR set to: 0
  9275                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9276  0051E2  0101               	movlb	1	; () banked
  9277  0051E4  5185               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9278  0051E6  E004               	bz	l14794
  9279                           
  9280                           ; BSR set to: 1
  9281  0051E8  0100               	movlb	0	; () banked
  9282  0051EA  ABE2               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9283                           
  9284                           ; BSR set to: 0
  9285  0051EC  ADE3               	btfss	RADIO_RxDone@i& (0+255),6,b
  9286  0051EE  D037               	goto	l14816
  9287  0051F0                     l14794:
  9288                           
  9289                           ;radio_driver_SX1276.c: 976: {
  9290                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9291  0051F0  0E13               	movlw	19
  9292  0051F2  EC98  F039         	call	_RADIO_RegisterRead
  9293  0051F6  0101               	movlb	1	; () banked
  9294  0051F8  6F8D               	movwf	(_RadioConfiguration+36)& (0+255),b
  9295                           
  9296                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9297  0051FA  0100               	movlb	0	; () banked
  9298  0051FC  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9299  0051FE  0E0D               	movlw	13
  9300  005200  EC6F  F03A         	call	_RADIO_RegisterWrite
  9301                           
  9302                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9303  005204  ECA6  F03C         	call	_HALSPICSAssert	;wreg free
  9304                           
  9305                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9306  005208  0E00               	movlw	0
  9307  00520A  EC4D  F03C         	call	_HALSPISend
  9308                           
  9309                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9310  00520E  0100               	movlb	0	; () banked
  9311  005210  6BE3               	clrf	RADIO_RxDone@i& (0+255),b
  9312  005212  D00D               	goto	l14806
  9313  005214                     l14802:
  9314                           
  9315                           ; BSR set to: 0
  9316                           ;radio_driver_SX1276.c: 990: {
  9317                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9318  005214  51E3               	movf	RADIO_RxDone@i& (0+255),w,b
  9319  005216  0101               	movlb	1	; () banked
  9320  005218  258E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9321  00521A  6ED9               	movwf	fsr2l,c
  9322  00521C  0E00               	movlw	0
  9323  00521E  218F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9324  005220  6EDA               	movwf	fsr2h,c
  9325  005222  0EFF               	movlw	255
  9326  005224  EC4D  F03C         	call	_HALSPISend
  9327  005228  6EDF               	movwf	indf2,c
  9328  00522A  0100               	movlb	0	; () banked
  9329  00522C  2BE3               	incf	RADIO_RxDone@i& (0+255),f,b
  9330  00522E                     l14806:
  9331                           
  9332                           ; BSR set to: 0
  9333  00522E  0101               	movlb	1	; () banked
  9334  005230  518D               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9335  005232  0100               	movlb	0	; () banked
  9336  005234  5DE3               	subwf	RADIO_RxDone@i& (0+255),w,b
  9337  005236  E3EE               	bnc	l14802
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;radio_driver_SX1276.c: 992: }
  9341                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9342  005238  ECA4  F03C         	call	_HALSPICSDeassert	;wreg free
  9343                           
  9344                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9345  00523C  0101               	movlb	1	; () banked
  9346  00523E  858C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9347                           
  9348                           ; BSR set to: 1
  9349                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9350  005240  0E19               	movlw	25
  9351  005242  EC98  F039         	call	_RADIO_RegisterRead
  9352  005246  0101               	movlb	1	; () banked
  9353  005248  6F9B               	movwf	(_RadioConfiguration+50)& (0+255),b
  9354                           
  9355                           ; BSR set to: 1
  9356                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9357  00524A  0E04               	movlw	4
  9358  00524C  0100               	movlb	0	; () banked
  9359  00524E  6F64               	movwf	___abdiv@divisor& (0+255),b
  9360  005250  0101               	movlb	1	; () banked
  9361  005252  519B               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9362  005254  EC40  F034         	call	___abdiv
  9363  005258  0101               	movlb	1	; () banked
  9364  00525A  6F9B               	movwf	(_RadioConfiguration+50)& (0+255),b
  9365                           
  9366                           ;radio_driver_SX1276.c: 998: }
  9367  00525C  D002               	goto	l14818
  9368  00525E                     l14816:
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;radio_driver_SX1276.c: 999: else
  9372                           ;radio_driver_SX1276.c: 1000: {
  9373                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9374  00525E  0101               	movlb	1	; () banked
  9375  005260  878C               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9376  005262                     l14818:
  9377                           
  9378                           ; BSR set to: 1
  9379                           ;radio_driver_SX1276.c: 1003: }
  9380                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9381  005262  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9382  005266  0E00               	movlw	0
  9383  005268  0100               	movlb	0	; () banked
  9384  00526A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9385  00526C  EC6E  F028         	call	_RADIO_WriteMode
  9386                           
  9387                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9388  005270  0101               	movlb	1	; () banked
  9389  005272  938C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9390                           
  9391                           ; BSR set to: 1
  9392                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9393  005274  C18E  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9394  005278  C18F  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9395  00527C  C18D  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9396  005280  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9397  005284                     __end_of_RADIO_RxDone:
  9398                           	opt stack 0
  9399                           tosu	equ	0xFFF
  9400                           tosh	equ	0xFFE
  9401                           tosl	equ	0xFFD
  9402                           pclath	equ	0xFFA
  9403                           tblptru	equ	0xFF8
  9404                           tblptrh	equ	0xFF7
  9405                           tblptrl	equ	0xFF6
  9406                           tablat	equ	0xFF5
  9407                           prodh	equ	0xFF4
  9408                           prodl	equ	0xFF3
  9409                           intcon	equ	0xFF2
  9410                           intcon2	equ	0xFF1
  9411                           intcon3	equ	0xFF0
  9412                           postinc0	equ	0xFEE
  9413                           wreg	equ	0xFE8
  9414                           postinc1	equ	0xFE6
  9415                           postdec1	equ	0xFE5
  9416                           plusw1	equ	0xFE3
  9417                           fsr1h	equ	0xFE2
  9418                           fsr1l	equ	0xFE1
  9419                           indf2	equ	0xFDF
  9420                           postinc2	equ	0xFDE
  9421                           postdec2	equ	0xFDD
  9422                           fsr2h	equ	0xFDA
  9423                           fsr2l	equ	0xFD9
  9424                           status	equ	0xFD8
  9425                           
  9426 ;; *************** function ___abdiv *****************
  9427 ;; Defined at:
  9428 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  dividend        1    wreg     char 
  9431 ;;  divisor         1    4[BANK0 ] char 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  dividend        1    8[BANK0 ] char 
  9434 ;;  quotient        1    7[BANK0 ] char 
  9435 ;;  sign            1    6[BANK0 ] unsigned char 
  9436 ;;  counter         1    5[BANK0 ] unsigned char 
  9437 ;; Return value:  Size  Location     Type
  9438 ;;                  1    wreg      char 
  9439 ;; Registers used:
  9440 ;;		wreg, status,2, status,0
  9441 ;; Tracked objects:
  9442 ;;		On entry : F/1
  9443 ;;		On exit  : F/0
  9444 ;;		Unchanged: 0/0
  9445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9446 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;Total ram usage:        5 bytes
  9451 ;; Hardware stack levels used:    1
  9452 ;; Hardware stack levels required when called:    7
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		_RADIO_RxDone
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text59
  9461  006880                     __ptext59:
  9462                           	opt stack 0
  9463  006880                     ___abdiv:
  9464                           	opt stack 20
  9465                           
  9466                           ;incstack = 0
  9467                           ;___abdiv@dividend stored from wreg
  9468  006880  0100               	movlb	0	; () banked
  9469  006882  6F68               	movwf	___abdiv@dividend& (0+255),b
  9470  006884  6B66               	clrf	___abdiv@sign& (0+255),b
  9471                           
  9472                           ; BSR set to: 0
  9473  006886  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9474  006888  D003               	goto	l10588
  9475                           
  9476                           ; BSR set to: 0
  9477  00688A  6D64               	negf	___abdiv@divisor& (0+255),b
  9478                           
  9479                           ; BSR set to: 0
  9480  00688C  0E01               	movlw	1
  9481  00688E  6F66               	movwf	___abdiv@sign& (0+255),b
  9482  006890                     l10588:
  9483                           
  9484                           ; BSR set to: 0
  9485  006890  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9486  006892  D003               	goto	l10594
  9487                           
  9488                           ; BSR set to: 0
  9489  006894  6D68               	negf	___abdiv@dividend& (0+255),b
  9490                           
  9491                           ; BSR set to: 0
  9492  006896  0E01               	movlw	1
  9493  006898  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9494  00689A                     l10594:
  9495                           
  9496                           ; BSR set to: 0
  9497  00689A  6B67               	clrf	___abdiv@quotient& (0+255),b
  9498                           
  9499                           ; BSR set to: 0
  9500  00689C  5164               	movf	___abdiv@divisor& (0+255),w,b
  9501  00689E  E014               	bz	l10616
  9502                           
  9503                           ; BSR set to: 0
  9504  0068A0  0E01               	movlw	1
  9505  0068A2  6F65               	movwf	___abdiv@counter& (0+255),b
  9506  0068A4  D003               	goto	l10604
  9507  0068A6                     l10600:
  9508                           
  9509                           ; BSR set to: 0
  9510  0068A6  90D8               	bcf	status,0,c
  9511  0068A8  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9512                           
  9513                           ; BSR set to: 0
  9514  0068AA  2B65               	incf	___abdiv@counter& (0+255),f,b
  9515  0068AC                     l10604:
  9516                           
  9517                           ; BSR set to: 0
  9518  0068AC  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9519  0068AE  D7FB               	goto	l10600
  9520  0068B0                     l10606:
  9521                           
  9522                           ; BSR set to: 0
  9523  0068B0  90D8               	bcf	status,0,c
  9524  0068B2  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9525  0068B4  5164               	movf	___abdiv@divisor& (0+255),w,b
  9526  0068B6  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9527  0068B8  E303               	bnc	l10612
  9528                           
  9529                           ; BSR set to: 0
  9530  0068BA  5164               	movf	___abdiv@divisor& (0+255),w,b
  9531  0068BC  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9532                           
  9533                           ; BSR set to: 0
  9534  0068BE  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9535  0068C0                     l10612:
  9536                           
  9537                           ; BSR set to: 0
  9538  0068C0  90D8               	bcf	status,0,c
  9539  0068C2  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9540                           
  9541                           ; BSR set to: 0
  9542  0068C4  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9543  0068C6  D7F4               	goto	l10606
  9544  0068C8                     l10616:
  9545                           
  9546                           ; BSR set to: 0
  9547  0068C8  5166               	movf	___abdiv@sign& (0+255),w,b
  9548  0068CA  E001               	bz	l10620
  9549                           
  9550                           ; BSR set to: 0
  9551  0068CC  6D67               	negf	___abdiv@quotient& (0+255),b
  9552  0068CE                     l10620:
  9553                           
  9554                           ; BSR set to: 0
  9555  0068CE  5167               	movf	___abdiv@quotient& (0+255),w,b
  9556                           
  9557                           ; BSR set to: 0
  9558  0068D0  0012               	return		;funcret
  9559  0068D2                     __end_of___abdiv:
  9560                           	opt stack 0
  9561                           tosu	equ	0xFFF
  9562                           tosh	equ	0xFFE
  9563                           tosl	equ	0xFFD
  9564                           pclath	equ	0xFFA
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           intcon2	equ	0xFF1
  9573                           intcon3	equ	0xFF0
  9574                           postinc0	equ	0xFEE
  9575                           wreg	equ	0xFE8
  9576                           postinc1	equ	0xFE6
  9577                           postdec1	equ	0xFE5
  9578                           plusw1	equ	0xFE3
  9579                           fsr1h	equ	0xFE2
  9580                           fsr1l	equ	0xFE1
  9581                           indf2	equ	0xFDF
  9582                           postinc2	equ	0xFDE
  9583                           postdec2	equ	0xFDD
  9584                           fsr2h	equ	0xFDA
  9585                           fsr2l	equ	0xFD9
  9586                           status	equ	0xFD8
  9587                           
  9588 ;; *************** function _RADIO_FSKPayloadReady *****************
  9589 ;; Defined at:
  9590 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;		None
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  i               1  131[BANK0 ] unsigned char 
  9595 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  1    wreg      void 
  9598 ;; Registers used:
  9599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9600 ;; Tracked objects:
  9601 ;;		On entry : F/0
  9602 ;;		On exit  : D/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;Total ram usage:        2 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; Hardware stack levels required when called:   16
  9612 ;; This function calls:
  9613 ;;		_HALSPICSAssert
  9614 ;;		_HALSPICSDeassert
  9615 ;;		_HALSPISend
  9616 ;;		_LORAWAN_RxDone
  9617 ;;		_LORAWAN_RxTimeout
  9618 ;;		_RADIO_RegisterRead
  9619 ;;		_RADIO_WriteMode
  9620 ;;		_SwTimerStop
  9621 ;; This function is called by:
  9622 ;;		_RADIO_DIO0
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text60
  9627  005A5C                     __ptext60:
  9628                           	opt stack 0
  9629  005A5C                     _RADIO_FSKPayloadReady:
  9630                           	opt stack 12
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9634                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9635                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;incstack = 0
  9639  005A5C  0E3F               	movlw	63
  9640  005A5E  EC98  F039         	call	_RADIO_RegisterRead
  9641  005A62  6FE2               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9645  005A64  A5E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9646  005A66  0012               	return	
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;radio_driver_SX1276.c: 1017: {
  9650                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9651  005A68  0101               	movlb	1	; () banked
  9652  005A6A  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9653  005A6C  EC9C  F03A         	call	_SwTimerStop
  9654                           
  9655                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9656  005A70  0101               	movlb	1	; () banked
  9657  005A72  5191               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9658  005A74  EC9C  F03A         	call	_SwTimerStop
  9659                           
  9660                           ; BSR set to: 0
  9661                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9662  005A78  ECA6  F03C         	call	_HALSPICSAssert	;wreg free
  9663                           
  9664                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9665  005A7C  0E00               	movlw	0
  9666  005A7E  EC4D  F03C         	call	_HALSPISend
  9667                           
  9668                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9669  005A82  0EFF               	movlw	255
  9670  005A84  EC4D  F03C         	call	_HALSPISend
  9671  005A88  0101               	movlb	1	; () banked
  9672  005A8A  6F8D               	movwf	(_RadioConfiguration+36)& (0+255),b
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9676  005A8C  0100               	movlb	0	; () banked
  9677  005A8E  6BE3               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
  9678  005A90  D00D               	goto	l14842
  9679  005A92                     l14838:
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;radio_driver_SX1276.c: 1029: {
  9683                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9684  005A92  51E3               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9685  005A94  0101               	movlb	1	; () banked
  9686  005A96  258E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9687  005A98  6ED9               	movwf	fsr2l,c
  9688  005A9A  0E00               	movlw	0
  9689  005A9C  218F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9690  005A9E  6EDA               	movwf	fsr2h,c
  9691  005AA0  0EFF               	movlw	255
  9692  005AA2  EC4D  F03C         	call	_HALSPISend
  9693  005AA6  6EDF               	movwf	indf2,c
  9694  005AA8  0100               	movlb	0	; () banked
  9695  005AAA  2BE3               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9696  005AAC                     l14842:
  9697                           
  9698                           ; BSR set to: 0
  9699  005AAC  0101               	movlb	1	; () banked
  9700  005AAE  518D               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9701  005AB0  0100               	movlb	0	; () banked
  9702  005AB2  5DE3               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9703  005AB4  E3EE               	bnc	l14838
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;radio_driver_SX1276.c: 1031: }
  9707                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9708  005AB6  ECA4  F03C         	call	_HALSPICSDeassert	;wreg free
  9709                           
  9710                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9711  005ABA  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9712  005ABE  0E00               	movlw	0
  9713  005AC0  0100               	movlb	0	; () banked
  9714  005AC2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9715  005AC4  EC6E  F028         	call	_RADIO_WriteMode
  9716                           
  9717                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9718  005AC8  0101               	movlb	1	; () banked
  9719  005ACA  938C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9720                           
  9721                           ; BSR set to: 1
  9722                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9723  005ACC  0E80               	movlw	128
  9724  005ACE  6F9B               	movwf	(_RadioConfiguration+50)& (0+255),b
  9725                           
  9726                           ; BSR set to: 1
  9727                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9728  005AD0  0585               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9729  005AD2  E103               	bnz	l14856
  9730                           
  9731                           ; BSR set to: 1
  9732                           ;radio_driver_SX1276.c: 1040: {
  9733                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9734  005AD4  0100               	movlb	0	; () banked
  9735  005AD6  A3E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9736  005AD8  D003               	goto	l14858
  9737  005ADA                     l14856:
  9738                           
  9739                           ;radio_driver_SX1276.c: 1042: {
  9740                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9741  005ADA  0101               	movlb	1	; () banked
  9742  005ADC  858C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9743                           
  9744                           ;radio_driver_SX1276.c: 1044: }
  9745  005ADE  D002               	goto	l14862
  9746  005AE0                     l14858:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;radio_driver_SX1276.c: 1045: else
  9750                           ;radio_driver_SX1276.c: 1046: {
  9751                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9752  005AE0  0101               	movlb	1	; () banked
  9753  005AE2  958C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9754  005AE4                     l14862:
  9755                           
  9756                           ; BSR set to: 1
  9757                           ;radio_driver_SX1276.c: 1053: }
  9758                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9759  005AE4  A58C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9760  005AE6  EF71  F013         	goto	_LORAWAN_RxTimeout
  9761                           
  9762                           ; BSR set to: 1
  9763                           ;radio_driver_SX1276.c: 1056: {
  9764                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9765  005AEA  C18E  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9766  005AEE  C18F  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9767  005AF2  C18D  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9768  005AF6  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9769  005AFA                     __end_of_RADIO_FSKPayloadReady:
  9770                           	opt stack 0
  9771                           tosu	equ	0xFFF
  9772                           tosh	equ	0xFFE
  9773                           tosl	equ	0xFFD
  9774                           pclath	equ	0xFFA
  9775                           tblptru	equ	0xFF8
  9776                           tblptrh	equ	0xFF7
  9777                           tblptrl	equ	0xFF6
  9778                           tablat	equ	0xFF5
  9779                           prodh	equ	0xFF4
  9780                           prodl	equ	0xFF3
  9781                           intcon	equ	0xFF2
  9782                           intcon2	equ	0xFF1
  9783                           intcon3	equ	0xFF0
  9784                           postinc0	equ	0xFEE
  9785                           wreg	equ	0xFE8
  9786                           postinc1	equ	0xFE6
  9787                           postdec1	equ	0xFE5
  9788                           plusw1	equ	0xFE3
  9789                           fsr1h	equ	0xFE2
  9790                           fsr1l	equ	0xFE1
  9791                           indf2	equ	0xFDF
  9792                           postinc2	equ	0xFDE
  9793                           postdec2	equ	0xFDD
  9794                           fsr2h	equ	0xFDA
  9795                           fsr2l	equ	0xFD9
  9796                           status	equ	0xFD8
  9797                           
  9798 ;; *************** function _LORAWAN_RxTimeout *****************
  9799 ;; Defined at:
  9800 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  minim           4   75[BANK0 ] unsigned long 
  9805 ;;  i               1   79[BANK0 ] unsigned char 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : F/1
  9812 ;;		On exit  : D/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9818 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9819 ;;Total ram usage:        9 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:   15
  9822 ;; This function calls:
  9823 ;;		_LORAWAN_ReceiveWindow2Callback
  9824 ;;		_RADIO_Transmit
  9825 ;;		_ResetParametersForConfirmedTransmission
  9826 ;;		_ResetParametersForUnconfirmedTransmission
  9827 ;;		_RxDataDone
  9828 ;;		_SelectChannelForTransmission
  9829 ;;		_SetJoinFailState
  9830 ;;		_SwTimerSetTimeout
  9831 ;;		_SwTimerStart
  9832 ;;		___lldiv
  9833 ;; This function is called by:
  9834 ;;		_RADIO_FSKPayloadReady
  9835 ;;		_RADIO_RxTimeout
  9836 ;;		_RADIO_RxFSKTimeout
  9837 ;;		_RADIO_WatchdogTimeout
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text61
  9842  0026E2                     __ptext61:
  9843                           	opt stack 0
  9844  0026E2                     _LORAWAN_RxTimeout:
  9845                           	opt stack 12
  9846                           
  9847                           ; BSR set to: 1
  9848                           ;lorawan_eu.c: 466: uint8_t i;
  9849                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9850                           
  9851                           ;incstack = 0
  9852  0026E2  0100               	movlb	0	; () banked
  9853  0026E4  69AB               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9854  0026E6  69AC               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9855  0026E8  69AD               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9856  0026EA  69AE               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9857                           
  9858                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9859  0026EC  0102               	movlb	2	; () banked
  9860  0026EE  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9861  0026F0  D134               	goto	l14630
  9862                           
  9863                           ; BSR set to: 2
  9864                           ;lorawan_eu.c: 470: {
  9865                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9866  0026F2  5102               	movf	(_loRa+2)& (0+255),w,b
  9867  0026F4  0B0F               	andlw	15
  9868  0026F6  0A03               	xorlw	3
  9869  0026F8  E10E               	bnz	l1049
  9870                           
  9871                           ; BSR set to: 2
  9872                           ;lorawan_eu.c: 473: {
  9873                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9874  0026FA  5112               	movf	(_loRa+18)& (0+255),w,b
  9875  0026FC  E105               	bnz	l14566
  9876                           
  9877                           ; BSR set to: 2
  9878                           ;lorawan_eu.c: 475: {
  9879                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9880  0026FE  5102               	movf	(_loRa+2)& (0+255),w,b
  9881  002700  0BF0               	andlw	-16
  9882  002702  0904               	iorlw	4
  9883  002704  6F02               	movwf	(_loRa+2)& (0+255),b
  9884                           
  9885                           ;lorawan_eu.c: 477: }
  9886  002706  0012               	return	
  9887  002708                     l14566:
  9888                           
  9889                           ; BSR set to: 2
  9890                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9891  002708  0E02               	movlw	2
  9892  00270A  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9893  00270C  A4D8               	btfss	status,2,c
  9894  00270E  0012               	return	
  9895                           
  9896                           ; BSR set to: 2
  9897                           ;lorawan_eu.c: 479: {
  9898                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9899  002710  6AE6               	clrf	postinc1,c
  9900  002712  EFA9  F029         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9901  002716                     l1049:
  9902                           
  9903                           ; BSR set to: 2
  9904                           ;lorawan_eu.c: 483: else
  9905                           ;lorawan_eu.c: 484: {
  9906                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9907  002716  B500               	btfsc	_loRa& (0+255),2,b
  9908                           
  9909                           ; BSR set to: 2
  9910                           ;lorawan_eu.c: 487: {
  9911                           ;lorawan_eu.c: 488: SetJoinFailState();
  9912  002718  EFAB  F039         	goto	_SetJoinFailState	;wreg free
  9913                           
  9914                           ; BSR set to: 2
  9915                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9916                           
  9917                           ;lorawan_eu.c: 489: }
  9918  00271C  A902               	btfss	(_loRa+2)& (0+255),4,b
  9919  00271E  0012               	return	
  9920                           
  9921                           ; BSR set to: 2
  9922                           ;lorawan_eu.c: 492: {
  9923                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9924  002720  A100               	btfss	_loRa& (0+255),0,b
  9925  002722  D04B               	goto	l14588
  9926                           
  9927                           ; BSR set to: 2
  9928                           ;lorawan_eu.c: 494: {
  9929                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9930  002724  51D9               	movf	(_loRa+217)& (0+255),w,b
  9931  002726  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9932  002728  E334               	bnc	l14582
  9933                           
  9934                           ; BSR set to: 2
  9935                           ;lorawan_eu.c: 496: {
  9936                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9937  00272A  5102               	movf	(_loRa+2)& (0+255),w,b
  9938  00272C  0BF0               	andlw	-16
  9939  00272E  0906               	iorlw	6
  9940  002730  6F02               	movwf	(_loRa+2)& (0+255),b
  9941                           
  9942                           ; BSR set to: 2
  9943                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9944  002732  51A0               	movf	(_loRa+160)& (0+255),w,b
  9945  002734  0100               	movlb	0	; () banked
  9946  002736  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9947  002738  0102               	movlb	2	; () banked
  9948  00273A  51A1               	movf	(_loRa+161)& (0+255),w,b
  9949  00273C  0100               	movlb	0	; () banked
  9950  00273E  6FA8               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9951  002740  6BA9               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9952  002742  6BAA               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9953  002744  0E0C               	movlw	12
  9954  002746                     u16715:
  9955  002746  90D8               	bcf	status,0,c
  9956  002748  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9957  00274A  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9958  00274C  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9959  00274E  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9960  002750  2EE8               	decfsz	wreg,f,c
  9961  002752  D7F9               	goto	u16715
  9962  002754  C0A7  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9963  002758  C0A8  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9964  00275C  C0A9  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9965  002760  C0AA  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9966  002764  0E7D               	movlw	125
  9967  002766  6F68               	movwf	___lldiv@divisor& (0+255),b
  9968  002768  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  9969  00276A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  9970  00276C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  9971  00276E  EC1A  F030         	call	___lldiv	;wreg free
  9972  002772  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9973  002776  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9974  00277A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9975  00277E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9976  002782  0102               	movlb	2	; () banked
  9977  002784  51E8               	movf	(_loRa+232)& (0+255),w,b
  9978  002786  EC75  F036         	call	_SwTimerSetTimeout
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  9982  00278A  0102               	movlb	2	; () banked
  9983  00278C  51E8               	movf	(_loRa+232)& (0+255),w,b
  9984  00278E  EF58  F02E         	goto	_SwTimerStart
  9985  002792                     l14582:
  9986                           
  9987                           ; BSR set to: 2
  9988                           ;lorawan_eu.c: 501: else
  9989                           ;lorawan_eu.c: 502: {
  9990                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
  9991  002792  ECCD  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9992                           
  9993                           ; BSR set to: 2
  9994                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
  9995  002796  0100               	movlb	0	; () banked
  9996  002798  51E8               	movf	_rxPayload& (0+255),w,b
  9997  00279A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  9998  00279C  B4D8               	btfsc	status,2,c
  9999  00279E  0012               	return	
 10000  0027A0                     l14586:
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;lorawan_eu.c: 505: {
 10004                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10005  0027A0  6B67               	clrf	RxDataDone@pData& (0+255),b
 10006  0027A2  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10007  0027A4  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10008  0027A6  6B6A               	clrf	RxDataDone@status& (0+255),b
 10009  0027A8  0005               	push	
 10010  0027AA  6AFA               	clrf	pclath,c
 10011  0027AC  51E8               	movf	_rxPayload& (0+255),w,b
 10012  0027AE  6EFD               	movwf	tosl,c
 10013  0027B0  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10014  0027B2  6EFE               	movwf	tosh,c
 10015  0027B4  6AFF               	clrf	tosu,c
 10016  0027B6  50FA               	movf	pclath,w,c
 10017  0027B8  0012               	return		;indir
 10018  0027BA                     l14588:
 10019                           
 10020                           ; BSR set to: 2
 10021                           ;lorawan_eu.c: 511: else
 10022                           ;lorawan_eu.c: 512: {
 10023                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10024  0027BA  51D8               	movf	(_loRa+216)& (0+255),w,b
 10025  0027BC  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10026  0027BE  E201 D0B7          	bnc	l14624
 10027                           
 10028                           ; BSR set to: 2
 10029                           ;lorawan_eu.c: 514: {
 10030                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10031  0027C2  5102               	movf	(_loRa+2)& (0+255),w,b
 10032  0027C4  0BF0               	andlw	-16
 10033  0027C6  0906               	iorlw	6
 10034  0027C8  6F02               	movwf	(_loRa+2)& (0+255),b
 10035                           
 10036                           ; BSR set to: 2
 10037                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10038  0027CA  0E01               	movlw	1
 10039  0027CC  EC2C  F033         	call	_SelectChannelForTransmission
 10040  0027D0  0900               	iorlw	0
 10041  0027D2  E119               	bnz	l1063
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;lorawan_eu.c: 517: {
 10045                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10046  0027D4  0EF0               	movlw	low (_macBuffer+16)
 10047  0027D6  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 10048  0027D8  0E04               	movlw	high (_macBuffer+16)
 10049  0027DA  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10050  0027DC  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10051  0027E0  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 10052  0027E4  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 10053  0027E6  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10054  0027E8  E107               	bnz	l14600
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;lorawan_eu.c: 520: {
 10058                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10059  0027EA  0102               	movlb	2	; () banked
 10060  0027EC  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10061                           
 10062                           ; BSR set to: 2
 10063                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10064  0027EE  5102               	movf	(_loRa+2)& (0+255),w,b
 10065  0027F0  0BF0               	andlw	-16
 10066  0027F2  0901               	iorlw	1
 10067  0027F4  6F02               	movwf	(_loRa+2)& (0+255),b
 10068                           
 10069                           ;lorawan_eu.c: 523: }
 10070  0027F6  0012               	return	
 10071  0027F8                     l14600:
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;lorawan_eu.c: 524: else
 10075                           ;lorawan_eu.c: 526: {
 10076                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10077  0027F8  ECC6  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10078                           
 10079                           ; BSR set to: 2
 10080                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10081  0027FC  0100               	movlb	0	; () banked
 10082  0027FE  51E8               	movf	_rxPayload& (0+255),w,b
 10083  002800  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10084  002802  E1CE               	bnz	l14586
 10085  002804  0012               	return	
 10086  002806                     l1063:
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;lorawan_eu.c: 534: else
 10090                           ;lorawan_eu.c: 535: {
 10091                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10092  002806  6BAF               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10093  002808  D05B               	goto	l14620
 10094  00280A                     l14606:
 10095                           
 10096                           ; BSR set to: 2
 10097                           ;lorawan_eu.c: 538: {
 10098                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10099  00280A  0100               	movlb	0	; () banked
 10100  00280C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10101  00280E  0D0E               	mullw	14
 10102  002810  0E04               	movlw	low (_Channels+4)
 10103  002812  24F3               	addwf	prodl,w,c
 10104  002814  6ED9               	movwf	fsr2l,c
 10105  002816  0E04               	movlw	high (_Channels+4)
 10106  002818  20F4               	addwfc	prodh,w,c
 10107  00281A  6EDA               	movwf	fsr2h,c
 10108  00281C  04DE               	decf	postinc2,w,c
 10109  00281E  E14E               	bnz	l14618
 10110                           
 10111                           ; BSR set to: 0
 10112  002820  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10113  002822  0D0E               	mullw	14
 10114  002824  0E08               	movlw	low (_Channels+8)
 10115  002826  24F3               	addwf	prodl,w,c
 10116  002828  6ED9               	movwf	fsr2l,c
 10117  00282A  0E04               	movlw	high (_Channels+8)
 10118  00282C  20F4               	addwfc	prodh,w,c
 10119  00282E  6EDA               	movwf	fsr2h,c
 10120  002830  50DE               	movf	postinc2,w,c
 10121  002832  10DE               	iorwf	postinc2,w,c
 10122  002834  10DE               	iorwf	postinc2,w,c
 10123  002836  10DE               	iorwf	postinc2,w,c
 10124  002838  E041               	bz	l14618
 10125                           
 10126                           ; BSR set to: 0
 10127  00283A  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10128  00283C  0D0E               	mullw	14
 10129  00283E  0E08               	movlw	low (_Channels+8)
 10130  002840  24F3               	addwf	prodl,w,c
 10131  002842  6ED9               	movwf	fsr2l,c
 10132  002844  0E04               	movlw	high (_Channels+8)
 10133  002846  20F4               	addwfc	prodh,w,c
 10134  002848  6EDA               	movwf	fsr2h,c
 10135  00284A  50DE               	movf	postinc2,w,c
 10136  00284C  5DAB               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10137  00284E  50DE               	movf	postinc2,w,c
 10138  002850  59AC               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10139  002852  50DE               	movf	postinc2,w,c
 10140  002854  59AD               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10141  002856  50DE               	movf	postinc2,w,c
 10142  002858  59AE               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10143  00285A  E330               	bnc	l14618
 10144                           
 10145                           ; BSR set to: 0
 10146  00285C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10147  00285E  0D0E               	mullw	14
 10148  002860  0E05               	movlw	low (_Channels+5)
 10149  002862  24F3               	addwf	prodl,w,c
 10150  002864  6ED9               	movwf	fsr2l,c
 10151  002866  0E04               	movlw	high (_Channels+5)
 10152  002868  20F4               	addwfc	prodh,w,c
 10153  00286A  6EDA               	movwf	fsr2h,c
 10154  00286C  50DF               	movf	223,w,c
 10155  00286E  0B0F               	andlw	15
 10156  002870  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10157  002872  51A7               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10158  002874  0102               	movlb	2	; () banked
 10159  002876  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10160  002878  E321               	bnc	l14618
 10161                           
 10162                           ; BSR set to: 2
 10163  00287A  0100               	movlb	0	; () banked
 10164  00287C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10165  00287E  0D0E               	mullw	14
 10166  002880  0E05               	movlw	low (_Channels+5)
 10167  002882  24F3               	addwf	prodl,w,c
 10168  002884  6ED9               	movwf	fsr2l,c
 10169  002886  0E04               	movlw	high (_Channels+5)
 10170  002888  20F4               	addwfc	prodh,w,c
 10171  00288A  6EDA               	movwf	fsr2h,c
 10172  00288C  38DF               	swapf	223,w,c
 10173  00288E  0B0F               	andlw	15
 10174  002890  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10175  002892  0102               	movlb	2	; () banked
 10176  002894  51DF               	movf	(_loRa+223)& (0+255),w,b
 10177  002896  0100               	movlb	0	; () banked
 10178  002898  5DA7               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10179  00289A  E310               	bnc	l14618
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;lorawan_eu.c: 540: {
 10183                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10184  00289C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10185  00289E  0D0E               	mullw	14
 10186  0028A0  0E08               	movlw	low (_Channels+8)
 10187  0028A2  24F3               	addwf	prodl,w,c
 10188  0028A4  6ED9               	movwf	fsr2l,c
 10189  0028A6  0E04               	movlw	high (_Channels+8)
 10190  0028A8  20F4               	addwfc	prodh,w,c
 10191  0028AA  6EDA               	movwf	fsr2h,c
 10192  0028AC  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim
 10193  0028B0  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10194  0028B4  CFDE F0AD          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10195  0028B8  CFDE F0AE          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10196  0028BC                     l14618:
 10197  0028BC  0100               	movlb	0	; () banked
 10198  0028BE  2BAF               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10199  0028C0                     l14620:
 10200                           
 10201                           ; BSR set to: 0
 10202  0028C0  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10203  0028C2  0102               	movlb	2	; () banked
 10204  0028C4  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10205  0028C6  E2A1               	bc	l14606
 10206                           
 10207                           ; BSR set to: 2
 10208                           ;lorawan_eu.c: 542: }
 10209                           ;lorawan_eu.c: 543: }
 10210                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10211  0028C8  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10212  0028CC  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10213  0028D0  C0AD  F0A9         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10214  0028D4  C0AE  F0AA         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10215  0028D8  0E0C               	movlw	12
 10216  0028DA                     u16845:
 10217  0028DA  90D8               	bcf	status,0,c
 10218  0028DC  0100               	movlb	0	; () banked
 10219  0028DE  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10220  0028E0  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10221  0028E2  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10222  0028E4  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10223  0028E6  2EE8               	decfsz	wreg,f,c
 10224  0028E8  D7F8               	goto	u16845
 10225  0028EA  0E00               	movlw	0
 10226  0028EC  25A7               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10227  0028EE  6F64               	movwf	___lldiv@dividend& (0+255),b
 10228  0028F0  0E20               	movlw	32
 10229  0028F2  21A8               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10230  0028F4  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10231  0028F6  0E03               	movlw	3
 10232  0028F8  21A9               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10233  0028FA  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10234  0028FC  0E00               	movlw	0
 10235  0028FE  21AA               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10236  002900  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10237  002902  0E7D               	movlw	125
 10238  002904  6F68               	movwf	___lldiv@divisor& (0+255),b
 10239  002906  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10240  002908  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10241  00290A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10242  00290C  EC1A  F030         	call	___lldiv	;wreg free
 10243  002910  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10244  002914  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10245  002918  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10246  00291C  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10247  002920  0102               	movlb	2	; () banked
 10248  002922  51EA               	movf	(_loRa+234)& (0+255),w,b
 10249  002924  EC75  F036         	call	_SwTimerSetTimeout
 10250                           
 10251                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10252  002928  0102               	movlb	2	; () banked
 10253  00292A  51EA               	movf	(_loRa+234)& (0+255),w,b
 10254  00292C  EF58  F02E         	goto	_SwTimerStart
 10255  002930                     l14624:
 10256                           
 10257                           ; BSR set to: 2
 10258                           ;lorawan_eu.c: 548: else
 10259                           ;lorawan_eu.c: 549: {
 10260                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10261  002930  ECC6  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10262                           
 10263                           ; BSR set to: 2
 10264                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10265  002934  0100               	movlb	0	; () banked
 10266  002936  51E8               	movf	_rxPayload& (0+255),w,b
 10267  002938  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10268  00293A  B4D8               	btfsc	status,2,c
 10269  00293C  0012               	return	
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;lorawan_eu.c: 552: {
 10273                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10274  00293E  6B67               	clrf	RxDataDone@pData& (0+255),b
 10275  002940  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10276  002942  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10277  002944  0E01               	movlw	1
 10278  002946  6F6A               	movwf	RxDataDone@status& (0+255),b
 10279  002948  0005               	push	
 10280  00294A  6EFA               	movwf	pclath,c
 10281  00294C  51E8               	movf	_rxPayload& (0+255),w,b
 10282  00294E  6EFD               	movwf	tosl,c
 10283  002950  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10284  002952  6EFE               	movwf	tosh,c
 10285  002954  6AFF               	clrf	tosu,c
 10286  002956  50FA               	movf	pclath,w,c
 10287  002958  0012               	return		;indir
 10288  00295A                     l14630:
 10289                           
 10290                           ; BSR set to: 2
 10291                           ;lorawan_eu.c: 560: else
 10292                           ;lorawan_eu.c: 561: {
 10293                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10294  00295A  0100               	movlb	0	; () banked
 10295  00295C  51E8               	movf	_rxPayload& (0+255),w,b
 10296  00295E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10297  002960  B4D8               	btfsc	status,2,c
 10298  002962  0012               	return	
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;lorawan_eu.c: 564: {
 10302                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10303  002964  6B67               	clrf	RxDataDone@pData& (0+255),b
 10304  002966  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10305  002968  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10306  00296A  0E02               	movlw	2
 10307  00296C  6F6A               	movwf	RxDataDone@status& (0+255),b
 10308  00296E  0005               	push	
 10309  002970  6EFA               	movwf	pclath,c
 10310  002972  51E8               	movf	_rxPayload& (0+255),w,b
 10311  002974  6EFD               	movwf	tosl,c
 10312  002976  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10313  002978  6EFE               	movwf	tosh,c
 10314  00297A  6AFF               	clrf	tosu,c
 10315  00297C  50FA               	movf	pclath,w,c
 10316  00297E  0012               	return		;indir
 10317  002980                     __end_of_LORAWAN_RxTimeout:
 10318                           	opt stack 0
 10319                           tosu	equ	0xFFF
 10320                           tosh	equ	0xFFE
 10321                           tosl	equ	0xFFD
 10322                           pclath	equ	0xFFA
 10323                           tblptru	equ	0xFF8
 10324                           tblptrh	equ	0xFF7
 10325                           tblptrl	equ	0xFF6
 10326                           tablat	equ	0xFF5
 10327                           prodh	equ	0xFF4
 10328                           prodl	equ	0xFF3
 10329                           intcon	equ	0xFF2
 10330                           intcon2	equ	0xFF1
 10331                           intcon3	equ	0xFF0
 10332                           postinc0	equ	0xFEE
 10333                           wreg	equ	0xFE8
 10334                           postinc1	equ	0xFE6
 10335                           postdec1	equ	0xFE5
 10336                           plusw1	equ	0xFE3
 10337                           fsr1h	equ	0xFE2
 10338                           fsr1l	equ	0xFE1
 10339                           indf2	equ	0xFDF
 10340                           postinc2	equ	0xFDE
 10341                           postdec2	equ	0xFDD
 10342                           fsr2h	equ	0xFDA
 10343                           fsr2l	equ	0xFD9
 10344                           status	equ	0xFD8
 10345                           
 10346 ;; *************** function _LORAWAN_RxDone *****************
 10347 ;; Defined at:
 10348 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10351 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10352 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  hdr             2   18[BANK3 ] PTR struct .
 10355 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10356 ;;  joinAccept      2   15[BANK3 ] PTR struct .
 10357 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10358 ;;  computedMic     4   11[BANK3 ] unsigned long 
 10359 ;;  extractedMic    4    3[BANK3 ] unsigned long 
 10360 ;;  packet          2    9[BANK3 ] PTR unsigned char 
 10361 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10362 ;;  frmPayloadLe    1   17[BANK3 ] unsigned char 
 10363 ;;  temp            1    8[BANK3 ] unsigned char 
 10364 ;;  bufferIndex     1    7[BANK3 ] unsigned char 
 10365 ;;  mhdr            1    2[BANK3 ] struct .
 10366 ;;  channelIndex    1    1[BANK3 ] unsigned char 
 10367 ;;  fPort           1    0[BANK3 ] unsigned char 
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  1    wreg      enum E8191
 10370 ;; Registers used:
 10371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10372 ;; Tracked objects:
 10373 ;;		On entry : F/1
 10374 ;;		On exit  : D/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10377 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10378 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10379 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10380 ;;      Totals:         0       5       3       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;Total ram usage:       28 bytes
 10382 ;; Hardware stack levels used:    1
 10383 ;; Hardware stack levels required when called:   15
 10384 ;; This function calls:
 10385 ;;		_AESCmac
 10386 ;;		_AESEncodeLoRa
 10387 ;;		_AssembleEncryptionBlock
 10388 ;;		_CheckFlags
 10389 ;;		_CheckMcastFlags
 10390 ;;		_ComputeMic
 10391 ;;		_ComputeSessionKeys
 10392 ;;		_EncryptFRMPayload
 10393 ;;		_ExtractMic
 10394 ;;		_LORAWAN_EnterContinuousReceive
 10395 ;;		_LORAWAN_Send
 10396 ;;		_MacExecuteCommands
 10397 ;;		_RADIO_GetStatus
 10398 ;;		_RADIO_ReleaseData
 10399 ;;		_RxDataDone
 10400 ;;		_SearchAvailableChannel
 10401 ;;		_SetJoinFailState
 10402 ;;		_SetReceptionNotOkState
 10403 ;;		_StartReTxTimer
 10404 ;;		_SwTimerStop
 10405 ;;		_UpdateCfList
 10406 ;;		_UpdateDLSettings
 10407 ;;		_UpdateJoinSuccessState
 10408 ;;		_UpdateReceiveDelays
 10409 ;;		_UpdateRetransmissionAckTimeoutState
 10410 ;;		_memcpy
 10411 ;; This function is called by:
 10412 ;;		_RADIO_RxDone
 10413 ;;		_RADIO_FSKPayloadReady
 10414 ;; This function uses a non-reentrant model
 10415 ;;
 10416                           
 10417                           	psect	text62
 10418  000098                     __ptext62:
 10419                           	opt stack 0
 10420  000098                     _LORAWAN_RxDone:
 10421                           	opt stack 12
 10422                           
 10423                           ; BSR set to: 1
 10424                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10425                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10426                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10427                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10428                           ;lorawan.c: 1127: uint8_t *packet;
 10429                           ;lorawan.c: 1128: uint8_t temp;
 10430                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10431                           
 10432                           ;incstack = 0
 10433  000098  EC85  F03C         	call	_RADIO_ReleaseData	;wreg free
 10434                           
 10435                           ; BSR set to: 1
 10436                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10437  00009C  0102               	movlb	2	; () banked
 10438  00009E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10439  0000A0  EF5F  F005         	goto	l14548
 10440                           
 10441                           ; BSR set to: 2
 10442                           ;lorawan.c: 1133: {
 10443                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10444  0000A4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10445  0000A8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10446  0000AC  50DF               	movf	indf2,w,c
 10447  0000AE  0103               	movlb	3	; () banked
 10448  0000B0  6FA2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10449                           
 10450                           ; BSR set to: 3
 10451                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10452  0000B2  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10453  0000B4  32E8               	rrcf	wreg,f,c
 10454  0000B6  0B07               	andlw	7
 10455  0000B8  06E8               	decf	wreg,f,c
 10456  0000BA  E001 D0C7          	bnz	l14220
 10457                           
 10458                           ; BSR set to: 3
 10459  0000BE  0102               	movlb	2	; () banked
 10460  0000C0  511D               	movf	(_loRa+29)& (0+255),w,b
 10461  0000C2  E001 D0C3          	bnz	l14220
 10462                           
 10463                           ; BSR set to: 2
 10464                           ;lorawan.c: 1136: {
 10465                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10466  0000C6  0101               	movlb	1	; () banked
 10467  0000C8  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10468  0000CA  0103               	movlb	3	; () banked
 10469  0000CC  6FA8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10470                           
 10471                           ;lorawan.c: 1138: while (temp > 0)
 10472  0000CE  D020               	goto	l14176
 10473  0000D0                     l14170:
 10474                           
 10475                           ; BSR set to: 3
 10476                           ;lorawan.c: 1139: {
 10477                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10478  0000D0  0101               	movlb	1	; () banked
 10479  0000D2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10480  0000D4  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10481  0000D6  0100               	movlb	0	; () banked
 10482  0000D8  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 10483  0000DA  0E00               	movlw	0
 10484  0000DC  0101               	movlb	1	; () banked
 10485  0000DE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10486  0000E0  0100               	movlb	0	; () banked
 10487  0000E2  6FDE               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10488  0000E4  0103               	movlb	3	; () banked
 10489  0000E6  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10490  0000E8  0100               	movlb	0	; () banked
 10491  0000EA  5DDD               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10492  0000EC  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 10493  0000EE  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10494  0000F0  A0D8               	btfss	status,0,c
 10495  0000F2  05DE               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10496  0000F4  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10497  0000F6  0E42               	movlw	low (_loRa+66)
 10498  0000F8  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 10499  0000FA  0E02               	movlw	high (_loRa+66)
 10500  0000FC  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10501  0000FE  EC5E  F039         	call	_AESEncodeLoRa	;wreg free
 10502                           
 10503                           ; BSR set to: 0
 10504                           ;lorawan.c: 1142: if (temp > 16)
 10505  000102  0E10               	movlw	16
 10506  000104  0103               	movlb	3	; () banked
 10507  000106  65A8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10508  000108  D002               	goto	l2121
 10509                           
 10510                           ; BSR set to: 3
 10511                           ;lorawan.c: 1143: {
 10512                           ;lorawan.c: 1144: temp -= 16;
 10513  00010A  5FA8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10514                           
 10515                           ;lorawan.c: 1145: }
 10516  00010C  D001               	goto	l14176
 10517  00010E                     l2121:
 10518                           
 10519                           ; BSR set to: 3
 10520                           ;lorawan.c: 1146: else
 10521                           ;lorawan.c: 1147: {
 10522                           ;lorawan.c: 1148: temp = 0;
 10523  00010E  6BA8               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10524  000110                     l14176:
 10525                           
 10526                           ; BSR set to: 3
 10527  000110  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10528  000112  E1DE               	bnz	l14170
 10529                           
 10530                           ; BSR set to: 3
 10531                           ;lorawan.c: 1149: }
 10532                           ;lorawan.c: 1150: }
 10533                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10534  000114  0E42               	movlw	low (_loRa+66)
 10535  000116  0100               	movlb	0	; () banked
 10536  000118  6FCA               	movwf	ComputeMic@key& (0+255),b
 10537  00011A  0E02               	movlw	high (_loRa+66)
 10538  00011C  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 10539  00011E  C166  F0CC         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10540  000122  C167  F0CD         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10541  000126  0101               	movlb	1	; () banked
 10542  000128  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10543  00012A  0FFC               	addlw	252
 10544  00012C  0100               	movlb	0	; () banked
 10545  00012E  6FCE               	movwf	ComputeMic@bufferLength& (0+255),b
 10546  000130  EC69  F034         	call	_ComputeMic	;wreg free
 10547  000134  C0CA  F3AB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10548  000138  C0CB  F3AC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10549  00013C  C0CC  F3AD         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10550  000140  C0CD  F3AE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10551                           
 10552                           ; BSR set to: 0
 10553                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10554  000144  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10555  000148  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10556  00014C  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10557  000150  EC54  F036         	call	_ExtractMic	;wreg free
 10558  000154  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10559  000158  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10560  00015C  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10561  000160  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10565  000164  0103               	movlb	3	; () banked
 10566  000166  51AB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10567  000168  19A3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10568  00016A  E109               	bnz	u15970
 10569  00016C  51AC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10570  00016E  19A4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10571  000170  E106               	bnz	u15970
 10572  000172  51AD               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10573  000174  19A5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10574  000176  E103               	bnz	u15970
 10575  000178  51AE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10576  00017A  19A6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10577  00017C  E011               	bz	l14194
 10578  00017E                     u15970:
 10579                           
 10580                           ; BSR set to: 3
 10581                           ;lorawan.c: 1156: {
 10582                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10583  00017E  0102               	movlb	2	; () banked
 10584  000180  5102               	movf	(_loRa+2)& (0+255),w,b
 10585  000182  0B0F               	andlw	15
 10586  000184  0A05               	xorlw	5
 10587  000186  E102 EFAB  F039    	bz	_SetJoinFailState
 10588                           
 10589                           ; BSR set to: 2
 10590  00018C  5102               	movf	(_loRa+2)& (0+255),w,b
 10591  00018E  0B0F               	andlw	15
 10592  000190  0A03               	xorlw	3
 10593  000192  A4D8               	btfss	status,2,c
 10594  000194  0012               	return	
 10595                           
 10596                           ; BSR set to: 2
 10597  000196  51F1               	movf	(_loRa+241)& (0+255),w,b
 10598  000198  B4D8               	btfsc	status,2,c
 10599  00019A  0012               	return	
 10600                           
 10601                           ; BSR set to: 2
 10602                           ;lorawan.c: 1158: {
 10603                           ;lorawan.c: 1159: SetJoinFailState();
 10604  00019C  EFAB  F039         	goto	_SetJoinFailState	;wreg free
 10605  0001A0                     l14194:
 10606                           
 10607                           ; BSR set to: 3
 10608                           ;lorawan.c: 1163: }
 10609                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10610  0001A0  0102               	movlb	2	; () banked
 10611  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
 10612  0001A4  0B0F               	andlw	15
 10613  0001A6  0A03               	xorlw	3
 10614  0001A8  E103               	bnz	l14198
 10615                           
 10616                           ; BSR set to: 2
 10617                           ;lorawan.c: 1167: {
 10618                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10619  0001AA  51E3               	movf	(_loRa+227)& (0+255),w,b
 10620  0001AC  EC9C  F03A         	call	_SwTimerStop
 10621  0001B0                     l14198:
 10622                           
 10623                           ;lorawan.c: 1169: }
 10624                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10625                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10626  0001B0  C166  F3AF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10627  0001B4  C167  F3B0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10628                           
 10629                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10630  0001B8  0103               	movlb	3	; () banked
 10631  0001BA  EE20 F007          	lfsr	2,7
 10632  0001BE  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10633  0001C0  26D9               	addwf	fsr2l,f,c
 10634  0001C2  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10635  0001C4  22DA               	addwfc	fsr2h,f,c
 10636  0001C6  CFDE F21E          	movff	postinc2,_loRa+30
 10637  0001CA  CFDE F21F          	movff	postinc2,_loRa+31
 10638  0001CE  CFDE F220          	movff	postinc2,_loRa+32
 10639  0001D2  CFDE F221          	movff	postinc2,_loRa+33
 10640                           
 10641                           ; BSR set to: 3
 10642                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10643  0001D6  EE20 F00C          	lfsr	2,12
 10644  0001DA  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10645  0001DC  26D9               	addwf	fsr2l,f,c
 10646  0001DE  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10647  0001E0  22DA               	addwfc	fsr2h,f,c
 10648  0001E2  50DF               	movf	indf2,w,c
 10649  0001E4  0B0F               	andlw	15
 10650  0001E6  EC7D  F035         	call	_UpdateReceiveDelays
 10651                           
 10652                           ; BSR set to: 2
 10653                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10654  0001EA  0103               	movlb	3	; () banked
 10655  0001EC  EE20 F00B          	lfsr	2,11
 10656  0001F0  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10657  0001F2  26D9               	addwf	fsr2l,f,c
 10658  0001F4  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10659  0001F6  22DA               	addwfc	fsr2h,f,c
 10660  0001F8  38DF               	swapf	223,w,c
 10661  0001FA  0B07               	andlw	7
 10662  0001FC  0100               	movlb	0	; () banked
 10663  0001FE  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10664  000200  0103               	movlb	3	; () banked
 10665  000202  EE20 F00B          	lfsr	2,11
 10666  000206  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10667  000208  26D9               	addwf	fsr2l,f,c
 10668  00020A  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10669  00020C  22DA               	addwfc	fsr2h,f,c
 10670  00020E  50DF               	movf	223,w,c
 10671  000210  0B0F               	andlw	15
 10672  000212  EC0C  F03B         	call	_UpdateDLSettings
 10673                           
 10674                           ; BSR set to: 0
 10675                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10676  000216  C3AF  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10677  00021A  C3B0  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10678  00021E  0101               	movlb	1	; () banked
 10679  000220  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10680  000222  ECD9  F018         	call	_UpdateCfList
 10681                           
 10682                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10683  000226  C3AF  F094         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10684  00022A  C3B0  F095         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10685  00022E  EC20  F02F         	call	_ComputeSessionKeys	;wreg free
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10689  000232  6AE6               	clrf	postinc1,c
 10690  000234  EC92  F022         	call	_UpdateJoinSuccessState	;wreg free
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10694  000238  0102               	movlb	2	; () banked
 10695  00023A  6B06               	clrf	(_loRa+6)& (0+255),b
 10696  00023C  6B07               	clrf	(_loRa+7)& (0+255),b
 10697  00023E  6B08               	clrf	(_loRa+8)& (0+255),b
 10698  000240  6B09               	clrf	(_loRa+9)& (0+255),b
 10699                           
 10700                           ; BSR set to: 2
 10701                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10702  000242  6B0A               	clrf	(_loRa+10)& (0+255),b
 10703  000244  6B0B               	clrf	(_loRa+11)& (0+255),b
 10704  000246  6B0C               	clrf	(_loRa+12)& (0+255),b
 10705  000248  6B0D               	clrf	(_loRa+13)& (0+255),b
 10706  00024A  0012               	return	
 10707  00024C                     l14220:
 10708                           
 10709                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10710  00024C  0103               	movlb	3	; () banked
 10711  00024E  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10712  000250  32E8               	rrcf	wreg,f,c
 10713  000252  0B07               	andlw	7
 10714  000254  0A03               	xorlw	3
 10715  000256  E007               	bz	l2133
 10716                           
 10717                           ; BSR set to: 3
 10718  000258  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10719  00025A  32E8               	rrcf	wreg,f,c
 10720  00025C  0B07               	andlw	7
 10721  00025E  0A05               	xorlw	5
 10722  000260  E002 EF9C  F031    	bnz	_SetReceptionNotOkState
 10723  000266                     l2133:
 10724                           
 10725                           ; BSR set to: 3
 10726                           ;lorawan.c: 1192: {
 10727                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10728  000266  0102               	movlb	2	; () banked
 10729  000268  6BA7               	clrf	(_loRa+167)& (0+255),b
 10730                           
 10731                           ; BSR set to: 2
 10732                           ;lorawan.c: 1195: Hdr_t *hdr;
 10733                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10734  00026A  C166  F3B2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10735  00026E  C167  F3B3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10736                           
 10737                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10738  000272  0E02               	movlw	2
 10739  000274  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10740  000276  E001 D188          	bnz	l14338
 10741                           
 10742                           ; BSR set to: 2
 10743  00027A  0103               	movlb	3	; () banked
 10744  00027C  EE20 F001          	lfsr	2,1
 10745  000280  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10746  000282  26D9               	addwf	fsr2l,f,c
 10747  000284  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10748  000286  22DA               	addwfc	fsr2h,f,c
 10749  000288  0102               	movlb	2	; () banked
 10750  00028A  5162               	movf	(_loRa+98)& (0+255),w,b
 10751  00028C  18DE               	xorwf	postinc2,w,c
 10752  00028E  E109               	bnz	u16051
 10753  000290  5163               	movf	(_loRa+99)& (0+255),w,b
 10754  000292  18DE               	xorwf	postinc2,w,c
 10755  000294  E106               	bnz	u16051
 10756  000296  5164               	movf	(_loRa+100)& (0+255),w,b
 10757  000298  18DE               	xorwf	postinc2,w,c
 10758  00029A  E103               	bnz	u16051
 10759  00029C  5165               	movf	(_loRa+101)& (0+255),w,b
 10760  00029E  18DE               	xorwf	postinc2,w,c
 10761  0002A0  A4D8               	btfss	status,2,c
 10762  0002A2                     u16051:
 10763  0002A2  D173               	goto	l14338
 10764                           
 10765                           ; BSR set to: 2
 10766  0002A4  A504               	btfss	(_loRa+4)& (0+255),2,b
 10767  0002A6  D171               	goto	l14338
 10768                           
 10769                           ; BSR set to: 2
 10770                           ;lorawan.c: 1200: {
 10771                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10772  0002A8  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10773  0002AC  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10774  0002B0  EC55  F030         	call	_CheckMcastFlags	;wreg free
 10775  0002B4  0900               	iorlw	0
 10776  0002B6  E107               	bnz	l14238
 10777  0002B8                     l14232:
 10778                           
 10779                           ;lorawan.c: 1203: {
 10780                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10781  0002B8  0102               	movlb	2	; () banked
 10782  0002BA  5102               	movf	(_loRa+2)& (0+255),w,b
 10783  0002BC  0BF0               	andlw	-16
 10784  0002BE  0909               	iorlw	9
 10785  0002C0  6F02               	movwf	(_loRa+2)& (0+255),b
 10786                           
 10787                           ; BSR set to: 2
 10788                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10789  0002C2  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 10790  0002C6                     l14238:
 10791                           
 10792                           ;lorawan.c: 1207: }
 10793                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10794  0002C6  0103               	movlb	3	; () banked
 10795  0002C8  EE20 F006          	lfsr	2,6
 10796  0002CC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10797  0002CE  26D9               	addwf	fsr2l,f,c
 10798  0002D0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10799  0002D2  22DA               	addwfc	fsr2h,f,c
 10800  0002D4  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10801  0002D8  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10802  0002DC  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10803  0002E0  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10804  0002E4  0100               	movlb	0	; () banked
 10805  0002E6  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10806  0002E8  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10807  0002EA  0101               	movlb	1	; () banked
 10808  0002EC  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10809  0002EE  0FFC               	addlw	252
 10810  0002F0  0100               	movlb	0	; () banked
 10811  0002F2  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10812  0002F4  0E49               	movlw	73
 10813  0002F6  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10814  0002F8  0E01               	movlw	1
 10815  0002FA  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10816  0002FC  EC31  F02C         	call	_AssembleEncryptionBlock
 10817                           
 10818                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10819  000300  0EEF               	movlw	low _radioBuffer
 10820  000302  6F64               	movwf	memcpy@d1& (0+255),b
 10821  000304  0E05               	movlw	high _radioBuffer
 10822  000306  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10823  000308  0E9F               	movlw	low _aesBuffer
 10824  00030A  6F66               	movwf	memcpy@s1& (0+255),b
 10825  00030C  0E01               	movlw	high _aesBuffer
 10826  00030E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10827  000310  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10828  000312  0E10               	movlw	16
 10829  000314  6F68               	movwf	memcpy@n& (0+255),b
 10830  000316  EC14  F034         	call	_memcpy	;wreg free
 10831                           
 10832                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10833  00031A  0EFF               	movlw	low (_radioBuffer+16)
 10834  00031C  6F64               	movwf	memcpy@d1& (0+255),b
 10835  00031E  0E05               	movlw	high (_radioBuffer+16)
 10836  000320  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10837  000322  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10838  000326  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10839  00032A  0EFC               	movlw	252
 10840  00032C  0101               	movlb	1	; () banked
 10841  00032E  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10842  000330  0100               	movlb	0	; () banked
 10843  000332  6F68               	movwf	memcpy@n& (0+255),b
 10844  000334  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10845  000336  0EFF               	movlw	255
 10846  000338  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 10847  00033A  EC14  F034         	call	_memcpy	;wreg free
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10851  00033E  0E66               	movlw	low (_loRa+102)
 10852  000340  6FBC               	movwf	AESCmac@key& (0+255),b
 10853  000342  0E02               	movlw	high (_loRa+102)
 10854  000344  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 10855  000346  0E9F               	movlw	low _aesBuffer
 10856  000348  6FBE               	movwf	AESCmac@output& (0+255),b
 10857  00034A  0E01               	movlw	high _aesBuffer
 10858  00034C  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 10859  00034E  0EEF               	movlw	low _radioBuffer
 10860  000350  6FC0               	movwf	AESCmac@input& (0+255),b
 10861  000352  0E05               	movlw	high _radioBuffer
 10862  000354  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 10863  000356  0101               	movlb	1	; () banked
 10864  000358  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10865  00035A  0F0C               	addlw	12
 10866  00035C  0100               	movlb	0	; () banked
 10867  00035E  6FC2               	movwf	AESCmac@size& (0+255),b
 10868  000360  EC0C  F00C         	call	_AESCmac	;wreg free
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10872  000364  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 10873  000366  6F64               	movwf	memcpy@d1& (0+255),b
 10874  000368  0E03               	movlw	high LORAWAN_RxDone@computedMic
 10875  00036A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10876  00036C  0E9F               	movlw	low _aesBuffer
 10877  00036E  6F66               	movwf	memcpy@s1& (0+255),b
 10878  000370  0E01               	movlw	high _aesBuffer
 10879  000372  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10880  000374  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10881  000376  0E04               	movlw	4
 10882  000378  6F68               	movwf	memcpy@n& (0+255),b
 10883  00037A  EC14  F034         	call	_memcpy	;wreg free
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10887  00037E  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10888  000382  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10889  000386  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10890  00038A  EC54  F036         	call	_ExtractMic	;wreg free
 10891  00038E  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10892  000392  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10893  000396  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10894  00039A  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10898  00039E  0103               	movlb	3	; () banked
 10899  0003A0  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10900  0003A2  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10901  0003A4  E189               	bnz	l14232
 10902  0003A6  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10903  0003A8  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10904  0003AA  E186               	bnz	l14232
 10905  0003AC  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10906  0003AE  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10907  0003B0  E183               	bnz	l14232
 10908  0003B2  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10909  0003B4  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10910  0003B6  E180               	bnz	l14232
 10911                           
 10912                           ; BSR set to: 3
 10913                           ;lorawan.c: 1222: }
 10914                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10915  0003B8  EE20 F006          	lfsr	2,6
 10916  0003BC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10917  0003BE  26D9               	addwf	fsr2l,f,c
 10918  0003C0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10919  0003C2  22DA               	addwfc	fsr2h,f,c
 10920  0003C4  0102               	movlb	2	; () banked
 10921  0003C6  510E               	movf	(_loRa+14)& (0+255),w,b
 10922  0003C8  5CDE               	subwf	postinc2,w,c
 10923  0003CA  510F               	movf	(_loRa+15)& (0+255),w,b
 10924  0003CC  58DE               	subwfb	postinc2,w,c
 10925  0003CE  E334               	bnc	l14272
 10926                           
 10927                           ; BSR set to: 2
 10928                           ;lorawan.c: 1225: {
 10929                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10930  0003D0  0103               	movlb	3	; () banked
 10931  0003D2  EE20 F006          	lfsr	2,6
 10932  0003D6  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10933  0003D8  26D9               	addwf	fsr2l,f,c
 10934  0003DA  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10935  0003DC  22DA               	addwfc	fsr2h,f,c
 10936  0003DE  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10937  0003E2  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10938  0003E6  0102               	movlb	2	; () banked
 10939  0003E8  510E               	movf	(_loRa+14)& (0+255),w,b
 10940  0003EA  0100               	movlb	0	; () banked
 10941  0003EC  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 10942  0003EE  0102               	movlb	2	; () banked
 10943  0003F0  510F               	movf	(_loRa+15)& (0+255),w,b
 10944  0003F2  0100               	movlb	0	; () banked
 10945  0003F4  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10946  0003F6  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10947  0003F8  0102               	movlb	2	; () banked
 10948  0003FA  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10949  0003FC  0100               	movlb	0	; () banked
 10950  0003FE  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10951  000400  0102               	movlb	2	; () banked
 10952  000402  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10953  000404  E20D               	bc	l14270
 10954  000406                     l14258:
 10955                           
 10956                           ; BSR set to: 2
 10957                           ;lorawan.c: 1227: {
 10958                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10959  000406  0100               	movlb	0	; () banked
 10960  000408  51E8               	movf	_rxPayload& (0+255),w,b
 10961  00040A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10962  00040C  E101 D754          	bz	l14232
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;lorawan.c: 1229: {
 10966                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10967  000410  6B67               	clrf	RxDataDone@pData& (0+255),b
 10968  000412  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10969  000414  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10970  000416  0E05               	movlw	5
 10971  000418  6F6A               	movwf	RxDataDone@status& (0+255),b
 10972  00041A  D801               	call	u16128
 10973  00041C  D74D               	goto	l14232
 10974  00041E                     u16128:
 10975  00041E  D0AC               	goto	u16228
 10976  000420                     l14270:
 10977                           
 10978                           ; BSR set to: 2
 10979                           ;lorawan.c: 1237: else
 10980                           ;lorawan.c: 1238: {
 10981                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10982  000420  0103               	movlb	3	; () banked
 10983  000422  EE20 F006          	lfsr	2,6
 10984  000426  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10985  000428  26D9               	addwf	fsr2l,f,c
 10986  00042A  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10987  00042C  22DA               	addwfc	fsr2h,f,c
 10988  00042E  CFDE F20E          	movff	postinc2,_loRa+14
 10989  000432  CFDD F20F          	movff	postdec2,_loRa+15
 10990  000436  D013               	goto	l14290
 10991  000438                     l14272:
 10992                           
 10993                           ; BSR set to: 2
 10994                           ;lorawan.c: 1242: else
 10995                           ;lorawan.c: 1243: {
 10996                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 10997  000438  0103               	movlb	3	; () banked
 10998  00043A  EE20 F006          	lfsr	2,6
 10999  00043E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11000  000440  26D9               	addwf	fsr2l,f,c
 11001  000442  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11002  000444  22DA               	addwfc	fsr2h,f,c
 11003  000446  50DE               	movf	postinc2,w,c
 11004  000448  10DE               	iorwf	postinc2,w,c
 11005  00044A  E1DD               	bnz	l14258
 11006                           
 11007                           ; BSR set to: 3
 11008  00044C  0102               	movlb	2	; () banked
 11009  00044E  290E               	incf	(_loRa+14)& (0+255),w,b
 11010  000450  E1DA               	bnz	l14258
 11011  000452  290F               	incf	(_loRa+15)& (0+255),w,b
 11012  000454  E1D8               	bnz	l14258
 11013                           
 11014                           ; BSR set to: 2
 11015                           ;lorawan.c: 1245: {
 11016                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11017  000456  6B0E               	clrf	(_loRa+14)& (0+255),b
 11018  000458  6B0F               	clrf	(_loRa+15)& (0+255),b
 11019                           
 11020                           ; BSR set to: 2
 11021                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11022  00045A  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11023  00045C  2B11               	incf	(_loRa+17)& (0+255),f,b
 11024  00045E                     l14290:
 11025                           
 11026                           ;lorawan.c: 1259: }
 11027                           ;lorawan.c: 1260: }
 11028                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11029  00045E  0102               	movlb	2	; () banked
 11030  000460  290E               	incf	(_loRa+14)& (0+255),w,b
 11031  000462  E107               	bnz	l14302
 11032  000464  290F               	incf	(_loRa+15)& (0+255),w,b
 11033  000466  E105               	bnz	l14302
 11034  000468  2910               	incf	(_loRa+16)& (0+255),w,b
 11035  00046A  E103               	bnz	l14302
 11036  00046C  2911               	incf	(_loRa+17)& (0+255),w,b
 11037  00046E  E101               	bnz	l14302
 11038  000470  D7CA               	goto	l14258
 11039  000472                     l14302:
 11040                           
 11041                           ; BSR set to: 2
 11042                           ;lorawan.c: 1272: }
 11043                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11044  000472  5102               	movf	(_loRa+2)& (0+255),w,b
 11045  000474  0B0F               	andlw	15
 11046  000476  0A08               	xorlw	8
 11047  000478  E108               	bnz	l14306
 11048                           
 11049                           ; BSR set to: 2
 11050                           ;lorawan.c: 1275: {
 11051                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11052  00047A  51E4               	movf	(_loRa+228)& (0+255),w,b
 11053  00047C  EC9C  F03A         	call	_SwTimerStop
 11054                           
 11055                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11056  000480  0102               	movlb	2	; () banked
 11057  000482  51E5               	movf	(_loRa+229)& (0+255),w,b
 11058  000484  EC9C  F03A         	call	_SwTimerStop
 11059                           
 11060                           ;lorawan.c: 1278: }
 11061  000488  D007               	goto	l14310
 11062  00048A                     l14306:
 11063                           
 11064                           ; BSR set to: 2
 11065                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11066  00048A  5102               	movf	(_loRa+2)& (0+255),w,b
 11067  00048C  0B0F               	andlw	15
 11068  00048E  0A03               	xorlw	3
 11069  000490  E103               	bnz	l14310
 11070                           
 11071                           ; BSR set to: 2
 11072                           ;lorawan.c: 1280: {
 11073                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11074  000492  51E5               	movf	(_loRa+229)& (0+255),w,b
 11075  000494  EC9C  F03A         	call	_SwTimerStop
 11076  000498                     l14310:
 11077                           
 11078                           ;lorawan.c: 1282: }
 11079                           ;lorawan.c: 1284: buffer = buffer + 8;
 11080  000498  0E08               	movlw	8
 11081  00049A  0101               	movlb	1	; () banked
 11082  00049C  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11083  00049E  0E00               	movlw	0
 11084  0004A0  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11085                           
 11086                           ; BSR set to: 1
 11087                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11088  0004A2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11089  0004A4  0100               	movlb	0	; () banked
 11090  0004A6  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11091  0004A8  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11092  0004AA  0103               	movlb	3	; () banked
 11093  0004AC  EE20 F005          	lfsr	2,5
 11094  0004B0  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11095  0004B2  26D9               	addwf	fsr2l,f,c
 11096  0004B4  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11097  0004B6  22DA               	addwfc	fsr2h,f,c
 11098  0004B8  50DF               	movf	223,w,c
 11099  0004BA  0B0F               	andlw	15
 11100  0004BC  0100               	movlb	0	; () banked
 11101  0004BE  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11102  0004C0  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11103  0004C2  0E0C               	movlw	12
 11104  0004C4  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11105  0004C6  0E00               	movlw	0
 11106  0004C8  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11107  0004CA  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11108  0004CC  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11109  0004CE  E103               	bnz	u16200
 11110  0004D0  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11111  0004D2  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11112  0004D4  E03A               	bz	l2150
 11113  0004D6                     u16200:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;lorawan.c: 1287: {
 11117                           ;lorawan.c: 1288: fPort = *(buffer++);
 11118  0004D6  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11119  0004DA  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11120  0004DE  50DF               	movf	indf2,w,c
 11121  0004E0  0103               	movlb	3	; () banked
 11122  0004E2  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11123                           
 11124                           ; BSR set to: 3
 11125  0004E4  0101               	movlb	1	; () banked
 11126  0004E6  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11127  0004E8  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11128                           
 11129                           ; BSR set to: 1
 11130                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11131  0004EA  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11132  0004EC  0FF4               	addlw	244
 11133  0004EE  0103               	movlb	3	; () banked
 11134  0004F0  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11135                           
 11136                           ; BSR set to: 3
 11137                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11138  0004F2  0E19               	movlw	25
 11139  0004F4  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11140                           
 11141                           ; BSR set to: 3
 11142                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11143  0004F6  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11144  0004FA  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11145  0004FE  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11146  000500  0100               	movlb	0	; () banked
 11147  000502  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11148  000504  0E01               	movlw	1
 11149  000506  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11150  000508  C20E  F098         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11151  00050C  C20F  F099         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11152  000510  C210  F09A         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11153  000514  C211  F09B         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11154  000518  0E76               	movlw	low (_loRa+118)
 11155  00051A  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11156  00051C  0E02               	movlw	high (_loRa+118)
 11157  00051E  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11158  000520  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11159  000524  0EEF               	movlw	low _radioBuffer
 11160  000526  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11161  000528  0E05               	movlw	high _radioBuffer
 11162  00052A  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11163  00052C  0E01               	movlw	1
 11164  00052E  6FA1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11165  000530  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11166                           
 11167                           ; BSR set to: 0
 11168                           ;lorawan.c: 1294: packet = buffer - 1;
 11169  000534  0EFF               	movlw	255
 11170  000536  0101               	movlb	1	; () banked
 11171  000538  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11172  00053A  0103               	movlb	3	; () banked
 11173  00053C  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11174  00053E  0EFF               	movlw	255
 11175  000540  0101               	movlb	1	; () banked
 11176  000542  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11177  000544  0103               	movlb	3	; () banked
 11178  000546  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11179                           
 11180                           ;lorawan.c: 1295: }
 11181  000548  D004               	goto	l2151
 11182  00054A                     l2150:
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;lorawan.c: 1296: else
 11186                           ;lorawan.c: 1297: {
 11187                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11188  00054A  0103               	movlb	3	; () banked
 11189  00054C  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11190                           
 11191                           ;lorawan.c: 1299: packet = (0);
 11192  00054E  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11193  000550  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11194  000552                     l2151:
 11195                           
 11196                           ; BSR set to: 3
 11197                           ;lorawan.c: 1300: }
 11198                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11199  000552  0102               	movlb	2	; () banked
 11200  000554  8303               	bsf	(_loRa+3)& (0+255),1,b
 11201                           
 11202                           ; BSR set to: 2
 11203                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11204  000556  0EF0               	movlw	-16
 11205  000558  1702               	andwf	(_loRa+2)& (0+255),f,b
 11206                           
 11207                           ; BSR set to: 2
 11208                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11209  00055A  0100               	movlb	0	; () banked
 11210  00055C  51E8               	movf	_rxPayload& (0+255),w,b
 11211  00055E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11212  000560  E101 D6AA          	bz	l14232
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;lorawan.c: 1306: {
 11216                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11217  000564  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11218  000568  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11219  00056C  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11220  000570  0E01               	movlw	1
 11221  000572  6F6A               	movwf	RxDataDone@status& (0+255),b
 11222  000574  D801               	call	u16228
 11223  000576  D6A0               	goto	l14232
 11224  000578                     u16228:
 11225  000578  0005               	push	
 11226  00057A  6EFA               	movwf	pclath,c
 11227  00057C  51E8               	movf	_rxPayload& (0+255),w,b
 11228  00057E  6EFD               	movwf	tosl,c
 11229  000580  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11230  000582  6EFE               	movwf	tosh,c
 11231  000584  6AFF               	clrf	tosu,c
 11232  000586  50FA               	movf	pclath,w,c
 11233  000588  0012               	return		;indir
 11234  00058A                     l14338:
 11235                           
 11236                           ; BSR set to: 2
 11237                           ;lorawan.c: 1313: }
 11238                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11239  00058A  0103               	movlb	3	; () banked
 11240  00058C  EE20 F001          	lfsr	2,1
 11241  000590  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11242  000592  26D9               	addwf	fsr2l,f,c
 11243  000594  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11244  000596  22DA               	addwfc	fsr2h,f,c
 11245  000598  0102               	movlb	2	; () banked
 11246  00059A  511E               	movf	(_loRa+30)& (0+255),w,b
 11247  00059C  18DE               	xorwf	postinc2,w,c
 11248  00059E  E109               	bnz	u16230
 11249  0005A0  511F               	movf	(_loRa+31)& (0+255),w,b
 11250  0005A2  18DE               	xorwf	postinc2,w,c
 11251  0005A4  E106               	bnz	u16230
 11252  0005A6  5120               	movf	(_loRa+32)& (0+255),w,b
 11253  0005A8  18DE               	xorwf	postinc2,w,c
 11254  0005AA  E103               	bnz	u16230
 11255  0005AC  5121               	movf	(_loRa+33)& (0+255),w,b
 11256  0005AE  18DE               	xorwf	postinc2,w,c
 11257  0005B0  E008               	bz	l14350
 11258  0005B2                     u16230:
 11259                           
 11260                           ; BSR set to: 2
 11261                           ;lorawan.c: 1317: {
 11262                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11263  0005B2  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11264  0005B6                     l14342:
 11265                           
 11266                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11267  0005B6  0E02               	movlw	2
 11268  0005B8  0102               	movlb	2	; () banked
 11269  0005BA                     L5:
 11270  0005BA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11271  0005BC  E101 D67C          	bz	l14232
 11272  0005C0  0012               	return	
 11273  0005C2                     l14350:
 11274                           
 11275                           ; BSR set to: 2
 11276                           ;lorawan.c: 1325: }
 11277                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11278  0005C2  0103               	movlb	3	; () banked
 11279  0005C4  EE20 F006          	lfsr	2,6
 11280  0005C8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11281  0005CA  26D9               	addwf	fsr2l,f,c
 11282  0005CC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11283  0005CE  22DA               	addwfc	fsr2h,f,c
 11284  0005D0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11285  0005D4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11286  0005D8  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11287  0005DC  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11288  0005E0  0100               	movlb	0	; () banked
 11289  0005E2  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11290  0005E4  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11291  0005E6  0101               	movlb	1	; () banked
 11292  0005E8  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11293  0005EA  0FFC               	addlw	252
 11294  0005EC  0100               	movlb	0	; () banked
 11295  0005EE  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11296  0005F0  0E49               	movlw	73
 11297  0005F2  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11298  0005F4  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11299  0005F6  0E01               	movlw	1
 11300  0005F8  EC31  F02C         	call	_AssembleEncryptionBlock
 11301                           
 11302                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11303  0005FC  0EEF               	movlw	low _radioBuffer
 11304  0005FE  6F64               	movwf	memcpy@d1& (0+255),b
 11305  000600  0E05               	movlw	high _radioBuffer
 11306  000602  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11307  000604  0E9F               	movlw	low _aesBuffer
 11308  000606  6F66               	movwf	memcpy@s1& (0+255),b
 11309  000608  0E01               	movlw	high _aesBuffer
 11310  00060A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11311  00060C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11312  00060E  0E10               	movlw	16
 11313  000610  6F68               	movwf	memcpy@n& (0+255),b
 11314  000612  EC14  F034         	call	_memcpy	;wreg free
 11315                           
 11316                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11317  000616  0EFF               	movlw	low (_radioBuffer+16)
 11318  000618  6F64               	movwf	memcpy@d1& (0+255),b
 11319  00061A  0E05               	movlw	high (_radioBuffer+16)
 11320  00061C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11321  00061E  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11322  000622  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11323  000626  0EFC               	movlw	252
 11324  000628  0101               	movlb	1	; () banked
 11325  00062A  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11326  00062C  0100               	movlb	0	; () banked
 11327  00062E  6F68               	movwf	memcpy@n& (0+255),b
 11328  000630  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11329  000632  0EFF               	movlw	255
 11330  000634  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11331  000636  EC14  F034         	call	_memcpy	;wreg free
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11335  00063A  0E22               	movlw	low (_loRa+34)
 11336  00063C  6FBC               	movwf	AESCmac@key& (0+255),b
 11337  00063E  0E02               	movlw	high (_loRa+34)
 11338  000640  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 11339  000642  0E9F               	movlw	low _aesBuffer
 11340  000644  6FBE               	movwf	AESCmac@output& (0+255),b
 11341  000646  0E01               	movlw	high _aesBuffer
 11342  000648  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 11343  00064A  0EEF               	movlw	low _radioBuffer
 11344  00064C  6FC0               	movwf	AESCmac@input& (0+255),b
 11345  00064E  0E05               	movlw	high _radioBuffer
 11346  000650  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 11347  000652  0101               	movlb	1	; () banked
 11348  000654  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11349  000656  0F0C               	addlw	12
 11350  000658  0100               	movlb	0	; () banked
 11351  00065A  6FC2               	movwf	AESCmac@size& (0+255),b
 11352  00065C  EC0C  F00C         	call	_AESCmac	;wreg free
 11353                           
 11354                           ; BSR set to: 0
 11355                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11356  000660  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 11357  000662  6F64               	movwf	memcpy@d1& (0+255),b
 11358  000664  0E03               	movlw	high LORAWAN_RxDone@computedMic
 11359  000666  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11360  000668  0E9F               	movlw	low _aesBuffer
 11361  00066A  6F66               	movwf	memcpy@s1& (0+255),b
 11362  00066C  0E01               	movlw	high _aesBuffer
 11363  00066E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11364  000670  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11365  000672  0E04               	movlw	4
 11366  000674  6F68               	movwf	memcpy@n& (0+255),b
 11367  000676  EC14  F034         	call	_memcpy	;wreg free
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11371  00067A  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11372  00067E  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11373  000682  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11374  000686  EC54  F036         	call	_ExtractMic	;wreg free
 11375  00068A  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11376  00068E  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11377  000692  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11378  000696  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11382  00069A  0103               	movlb	3	; () banked
 11383  00069C  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11384  00069E  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11385  0006A0  E109               	bnz	u16250
 11386  0006A2  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11387  0006A4  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11388  0006A6  E106               	bnz	u16250
 11389  0006A8  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11390  0006AA  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11391  0006AC  E103               	bnz	u16250
 11392  0006AE  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11393  0006B0  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11394  0006B2  E003               	bz	l14370
 11395  0006B4                     u16250:
 11396                           
 11397                           ; BSR set to: 3
 11398                           ;lorawan.c: 1337: {
 11399                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11400  0006B4  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11401  0006B8  D77E               	goto	l14342
 11402  0006BA                     l14370:
 11403                           
 11404                           ; BSR set to: 3
 11405                           ;lorawan.c: 1345: }
 11406                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11407  0006BA  EE20 F006          	lfsr	2,6
 11408  0006BE  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11409  0006C0  26D9               	addwf	fsr2l,f,c
 11410  0006C2  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11411  0006C4  22DA               	addwfc	fsr2h,f,c
 11412  0006C6  0102               	movlb	2	; () banked
 11413  0006C8  510A               	movf	(_loRa+10)& (0+255),w,b
 11414  0006CA  5CDE               	subwf	postinc2,w,c
 11415  0006CC  510B               	movf	(_loRa+11)& (0+255),w,b
 11416  0006CE  58DE               	subwfb	postinc2,w,c
 11417  0006D0  E344               	bnc	l14400
 11418                           
 11419                           ; BSR set to: 2
 11420                           ;lorawan.c: 1349: {
 11421                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11422  0006D2  0103               	movlb	3	; () banked
 11423  0006D4  EE20 F006          	lfsr	2,6
 11424  0006D8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11425  0006DA  26D9               	addwf	fsr2l,f,c
 11426  0006DC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11427  0006DE  22DA               	addwfc	fsr2h,f,c
 11428  0006E0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11429  0006E4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11430  0006E8  0102               	movlb	2	; () banked
 11431  0006EA  510A               	movf	(_loRa+10)& (0+255),w,b
 11432  0006EC  0100               	movlb	0	; () banked
 11433  0006EE  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11434  0006F0  0102               	movlb	2	; () banked
 11435  0006F2  510B               	movf	(_loRa+11)& (0+255),w,b
 11436  0006F4  0100               	movlb	0	; () banked
 11437  0006F6  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11438  0006F8  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11439  0006FA  0102               	movlb	2	; () banked
 11440  0006FC  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11441  0006FE  0100               	movlb	0	; () banked
 11442  000700  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11443  000702  0102               	movlb	2	; () banked
 11444  000704  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11445  000706  E21D               	bc	l14398
 11446                           
 11447                           ; BSR set to: 2
 11448                           ;lorawan.c: 1351: {
 11449                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11450  000708  9100               	bcf	_loRa& (0+255),0,b
 11451                           
 11452                           ; BSR set to: 2
 11453                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11454  00070A  0EF0               	movlw	-16
 11455  00070C  1702               	andwf	(_loRa+2)& (0+255),f,b
 11456                           
 11457                           ; BSR set to: 2
 11458                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11459  00070E  0100               	movlb	0	; () banked
 11460  000710  51E8               	movf	_rxPayload& (0+255),w,b
 11461  000712  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11462  000714  E013               	bz	l14384
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;lorawan.c: 1355: {
 11466                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11467  000716  0102               	movlb	2	; () banked
 11468  000718  9B00               	bcf	_loRa& (0+255),5,b
 11469                           
 11470                           ; BSR set to: 2
 11471                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11472  00071A  0E00               	movlw	0
 11473  00071C  0100               	movlb	0	; () banked
 11474  00071E  6B67               	clrf	RxDataDone@pData& (0+255),b
 11475  000720  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 11476  000722  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 11477  000724  6B6A               	clrf	RxDataDone@status& (0+255),b
 11478  000726  D801               	call	u16308
 11479  000728  D009               	goto	l14384
 11480  00072A                     u16308:
 11481  00072A  0005               	push	
 11482  00072C  6EFA               	movwf	pclath,c
 11483  00072E  51E8               	movf	_rxPayload& (0+255),w,b
 11484  000730  6EFD               	movwf	tosl,c
 11485  000732  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11486  000734  6EFE               	movwf	tosh,c
 11487  000736  6AFF               	clrf	tosu,c
 11488  000738  50FA               	movf	pclath,w,c
 11489  00073A  0012               	return		;indir
 11490  00073C                     l14384:
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;lorawan.c: 1358: }
 11494                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11495  00073C  0102               	movlb	2	; () banked
 11496  00073E  9303               	bcf	(_loRa+3)& (0+255),1,b
 11497  000740  D036               	goto	l14420
 11498  000742                     l14398:
 11499                           
 11500                           ; BSR set to: 2
 11501                           ;lorawan.c: 1370: else
 11502                           ;lorawan.c: 1371: {
 11503                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11504  000742  0103               	movlb	3	; () banked
 11505  000744  EE20 F006          	lfsr	2,6
 11506  000748  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11507  00074A  26D9               	addwf	fsr2l,f,c
 11508  00074C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11509  00074E  22DA               	addwfc	fsr2h,f,c
 11510  000750  CFDE F20A          	movff	postinc2,_loRa+10
 11511  000754  CFDD F20B          	movff	postdec2,_loRa+11
 11512  000758  D021               	goto	l14418
 11513  00075A                     l14400:
 11514                           
 11515                           ; BSR set to: 2
 11516                           ;lorawan.c: 1375: else
 11517                           ;lorawan.c: 1376: {
 11518                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11519  00075A  0103               	movlb	3	; () banked
 11520  00075C  EE20 F006          	lfsr	2,6
 11521  000760  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11522  000762  26D9               	addwf	fsr2l,f,c
 11523  000764  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11524  000766  22DA               	addwfc	fsr2h,f,c
 11525  000768  50DE               	movf	postinc2,w,c
 11526  00076A  10DE               	iorwf	postinc2,w,c
 11527  00076C  E114               	bnz	l14408
 11528                           
 11529                           ; BSR set to: 3
 11530  00076E  0102               	movlb	2	; () banked
 11531  000770  290A               	incf	(_loRa+10)& (0+255),w,b
 11532  000772  E111               	bnz	l14408
 11533  000774  290B               	incf	(_loRa+11)& (0+255),w,b
 11534  000776  E10F               	bnz	l14408
 11535                           
 11536                           ; BSR set to: 2
 11537                           ;lorawan.c: 1378: {
 11538                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11539  000778  0103               	movlb	3	; () banked
 11540  00077A  EE20 F006          	lfsr	2,6
 11541  00077E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11542  000780  26D9               	addwf	fsr2l,f,c
 11543  000782  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11544  000784  22DA               	addwfc	fsr2h,f,c
 11545  000786  CFDE F20A          	movff	postinc2,_loRa+10
 11546  00078A  CFDD F20B          	movff	postdec2,_loRa+11
 11547                           
 11548                           ; BSR set to: 3
 11549                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11550  00078E  0102               	movlb	2	; () banked
 11551  000790  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11552  000792  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11553                           
 11554                           ;lorawan.c: 1382: }
 11555  000794  D003               	goto	l14418
 11556  000796                     l14408:
 11557                           
 11558                           ;lorawan.c: 1383: else
 11559                           ;lorawan.c: 1384: {
 11560                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11561  000796  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11562  00079A  D70D               	goto	l14342
 11563  00079C                     l14418:
 11564                           
 11565                           ;lorawan.c: 1393: }
 11566                           ;lorawan.c: 1394: }
 11567                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11568  00079C  0102               	movlb	2	; () banked
 11569  00079E  290A               	incf	(_loRa+10)& (0+255),w,b
 11570  0007A0  E109               	bnz	l14430
 11571  0007A2  290B               	incf	(_loRa+11)& (0+255),w,b
 11572  0007A4  E107               	bnz	l14430
 11573  0007A6  290C               	incf	(_loRa+12)& (0+255),w,b
 11574  0007A8  E105               	bnz	l14430
 11575  0007AA  290D               	incf	(_loRa+13)& (0+255),w,b
 11576  0007AC  E103               	bnz	l14430
 11577  0007AE                     l14420:
 11578                           
 11579                           ; BSR set to: 2
 11580                           ;lorawan.c: 1397: {
 11581                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11582  0007AE  8304               	bsf	(_loRa+4)& (0+255),1,b
 11583                           
 11584                           ; BSR set to: 2
 11585                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11586  0007B0  0E02               	movlw	2
 11587  0007B2  D703               	goto	L5
 11588  0007B4                     l14430:
 11589                           
 11590                           ; BSR set to: 2
 11591                           ;lorawan.c: 1407: }
 11592                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11593  0007B4  5102               	movf	(_loRa+2)& (0+255),w,b
 11594  0007B6  0B0F               	andlw	15
 11595  0007B8  0A03               	xorlw	3
 11596  0007BA  E103               	bnz	l14434
 11597                           
 11598                           ; BSR set to: 2
 11599                           ;lorawan.c: 1411: {
 11600                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11601  0007BC  51E5               	movf	(_loRa+229)& (0+255),w,b
 11602  0007BE  EC9C  F03A         	call	_SwTimerStop
 11603  0007C2                     l14434:
 11604                           
 11605                           ;lorawan.c: 1413: }
 11606                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11607  0007C2  0E01               	movlw	1
 11608  0007C4  0102               	movlb	2	; () banked
 11609  0007C6  6FD8               	movwf	(_loRa+216)& (0+255),b
 11610                           
 11611                           ; BSR set to: 2
 11612                           ;lorawan.c: 1417: CheckFlags (hdr);
 11613  0007C8  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11614  0007CC  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11615  0007D0  EC5C  F033         	call	_CheckFlags	;wreg free
 11616                           
 11617                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11618  0007D4  0103               	movlb	3	; () banked
 11619  0007D6  EE20 F005          	lfsr	2,5
 11620  0007DA  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11621  0007DC  26D9               	addwf	fsr2l,f,c
 11622  0007DE  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11623  0007E0  22DA               	addwfc	fsr2h,f,c
 11624  0007E2  50DF               	movf	223,w,c
 11625  0007E4  0B0F               	andlw	15
 11626  0007E6  E01B               	bz	l14442
 11627                           
 11628                           ; BSR set to: 3
 11629                           ;lorawan.c: 1420: {
 11630                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11631  0007E8  0E08               	movlw	8
 11632  0007EA  25B2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11633  0007EC  0100               	movlb	0	; () banked
 11634  0007EE  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 11635  0007F0  0E00               	movlw	0
 11636  0007F2  0103               	movlb	3	; () banked
 11637  0007F4  21B3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11638  0007F6  0100               	movlb	0	; () banked
 11639  0007F8  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11640  0007FA  0103               	movlb	3	; () banked
 11641  0007FC  EE20 F005          	lfsr	2,5
 11642  000800  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11643  000802  26D9               	addwf	fsr2l,f,c
 11644  000804  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11645  000806  22DA               	addwfc	fsr2h,f,c
 11646  000808  50DF               	movf	223,w,c
 11647  00080A  0B0F               	andlw	15
 11648  00080C  0100               	movlb	0	; () banked
 11649  00080E  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11650  000810  ECEA  F016         	call	_MacExecuteCommands	;wreg free
 11651  000814  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11652  000818  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11653                           
 11654                           ;lorawan.c: 1422: }
 11655  00081C  D005               	goto	l14444
 11656  00081E                     l14442:
 11657                           
 11658                           ; BSR set to: 3
 11659                           ;lorawan.c: 1423: else
 11660                           ;lorawan.c: 1424: {
 11661                           ;lorawan.c: 1425: buffer = buffer + 8;
 11662  00081E  0E08               	movlw	8
 11663  000820  0101               	movlb	1	; () banked
 11664  000822  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11665  000824  0E00               	movlw	0
 11666  000826  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11667  000828                     l14444:
 11668                           
 11669                           ;lorawan.c: 1426: }
 11670                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11671  000828  0101               	movlb	1	; () banked
 11672  00082A  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11673  00082C  0100               	movlb	0	; () banked
 11674  00082E  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11675  000830  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11676  000832  0103               	movlb	3	; () banked
 11677  000834  EE20 F005          	lfsr	2,5
 11678  000838  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11679  00083A  26D9               	addwf	fsr2l,f,c
 11680  00083C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11681  00083E  22DA               	addwfc	fsr2h,f,c
 11682  000840  50DF               	movf	223,w,c
 11683  000842  0B0F               	andlw	15
 11684  000844  0100               	movlb	0	; () banked
 11685  000846  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11686  000848  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11687  00084A  0E0C               	movlw	12
 11688  00084C  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11689  00084E  0E00               	movlw	0
 11690  000850  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11691  000852  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11692  000854  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11693  000856  E104               	bnz	u16390
 11694  000858  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11695  00085A  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11696  00085C  E101 D09B          	bz	l2171
 11697  000860                     u16390:
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;lorawan.c: 1428: {
 11701                           ;lorawan.c: 1429: fPort = *(buffer++);
 11702  000860  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11703  000864  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11704  000868  50DF               	movf	indf2,w,c
 11705  00086A  0103               	movlb	3	; () banked
 11706  00086C  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11707                           
 11708                           ; BSR set to: 3
 11709  00086E  0101               	movlb	1	; () banked
 11710  000870  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11711  000872  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11712                           
 11713                           ; BSR set to: 1
 11714                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11715  000874  0103               	movlb	3	; () banked
 11716  000876  EE20 F005          	lfsr	2,5
 11717  00087A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11718  00087C  26D9               	addwf	fsr2l,f,c
 11719  00087E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11720  000880  22DA               	addwfc	fsr2h,f,c
 11721  000882  50DF               	movf	223,w,c
 11722  000884  0B0F               	andlw	15
 11723  000886  0100               	movlb	0	; () banked
 11724  000888  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11725  00088A  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11726  00088C  0101               	movlb	1	; () banked
 11727  00088E  5D68               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11728  000890  0FF4               	addlw	244
 11729  000892  0103               	movlb	3	; () banked
 11730  000894  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11731                           
 11732                           ; BSR set to: 3
 11733                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11734  000896  EE20 F005          	lfsr	2,5
 11735  00089A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11736  00089C  26D9               	addwf	fsr2l,f,c
 11737  00089E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11738  0008A0  22DA               	addwfc	fsr2h,f,c
 11739  0008A2  50DF               	movf	223,w,c
 11740  0008A4  0B0F               	andlw	15
 11741  0008A6  0F19               	addlw	25
 11742  0008A8  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11743                           
 11744                           ; BSR set to: 3
 11745                           ;lorawan.c: 1434: if (fPort != 0)
 11746  0008AA  51A0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11747  0008AC  E029               	bz	l14460
 11748                           
 11749                           ; BSR set to: 3
 11750                           ;lorawan.c: 1435: {
 11751                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11752  0008AE  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11753  0008B2  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11754  0008B6  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11755  0008B8  0100               	movlb	0	; () banked
 11756  0008BA  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11757  0008BC  0E01               	movlw	1
 11758  0008BE  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11759  0008C0  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11760  0008C4  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11761  0008C8  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11762  0008CC  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11763  0008D0  0E32               	movlw	low (_loRa+50)
 11764  0008D2  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11765  0008D4  0E02               	movlw	high (_loRa+50)
 11766  0008D6  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11767  0008D8  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11768  0008DC  0EEF               	movlw	low _radioBuffer
 11769  0008DE  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11770  0008E0  0E05               	movlw	high _radioBuffer
 11771  0008E2  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11772  0008E4  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11773  0008E6  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;lorawan.c: 1437: packet = buffer - 1;
 11777  0008EA  0EFF               	movlw	255
 11778  0008EC  0101               	movlb	1	; () banked
 11779  0008EE  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11780  0008F0  0103               	movlb	3	; () banked
 11781  0008F2  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11782  0008F4  0EFF               	movlw	255
 11783  0008F6  0101               	movlb	1	; () banked
 11784  0008F8  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11785  0008FA  0103               	movlb	3	; () banked
 11786  0008FC  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11787                           
 11788                           ;lorawan.c: 1438: }
 11789  0008FE  D04F               	goto	l14470
 11790  000900                     l14460:
 11791                           
 11792                           ; BSR set to: 3
 11793                           ;lorawan.c: 1439: else
 11794                           ;lorawan.c: 1440: {
 11795                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11796  000900  0101               	movlb	1	; () banked
 11797  000902  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11798  000904  0100               	movlb	0	; () banked
 11799  000906  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11800  000908  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11801  00090A  0103               	movlb	3	; () banked
 11802  00090C  EE20 F005          	lfsr	2,5
 11803  000910  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11804  000912  26D9               	addwf	fsr2l,f,c
 11805  000914  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11806  000916  22DA               	addwfc	fsr2h,f,c
 11807  000918  50DF               	movf	223,w,c
 11808  00091A  0B0F               	andlw	15
 11809  00091C  0100               	movlb	0	; () banked
 11810  00091E  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11811  000920  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11812  000922  0E0D               	movlw	13
 11813  000924  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11814  000926  0E00               	movlw	0
 11815  000928  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11816  00092A  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11817  00092C  5DDF               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11818  00092E  51E0               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11819  000930  0A80               	xorlw	128
 11820  000932  6FE1               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11821  000934  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11822  000936  0A80               	xorlw	128
 11823  000938  59E1               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11824  00093A  E22D               	bc	l2171
 11825                           
 11826                           ; BSR set to: 0
 11827                           ;lorawan.c: 1443: {
 11828                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11829  00093C  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11830  000940  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11831  000944  0103               	movlb	3	; () banked
 11832  000946  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11833  000948  0100               	movlb	0	; () banked
 11834  00094A  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11835  00094C  0E01               	movlw	1
 11836  00094E  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11837  000950  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11838  000954  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11839  000958  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11840  00095C  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11841  000960  0E22               	movlw	low (_loRa+34)
 11842  000962  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11843  000964  0E02               	movlw	high (_loRa+34)
 11844  000966  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11845  000968  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11846  00096C  0EEF               	movlw	low _radioBuffer
 11847  00096E  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11848  000970  0E05               	movlw	high _radioBuffer
 11849  000972  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11850  000974  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11851  000976  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11855  00097A  C166  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11856  00097E  C167  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11857  000982  0103               	movlb	3	; () banked
 11858  000984  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11859  000986  0100               	movlb	0	; () banked
 11860  000988  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11861  00098A  ECEA  F016         	call	_MacExecuteCommands	;wreg free
 11862  00098E  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11863  000992  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11864  000996                     l2171:
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;lorawan.c: 1453: else
 11868                           ;lorawan.c: 1454: {
 11869                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11870  000996  0103               	movlb	3	; () banked
 11871  000998  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11872                           
 11873                           ;lorawan.c: 1456: packet = (0);
 11874  00099A  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11875  00099C  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11876  00099E                     l14470:
 11877                           
 11878                           ; BSR set to: 3
 11879                           ;lorawan.c: 1457: }
 11880                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11881  00099E  0E01               	movlw	1
 11882  0009A0  0102               	movlb	2	; () banked
 11883  0009A2  6FD8               	movwf	(_loRa+216)& (0+255),b
 11884                           
 11885                           ; BSR set to: 2
 11886                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11887  0009A4  6BD0               	clrf	(_loRa+208)& (0+255),b
 11888  0009A6  6BD1               	clrf	(_loRa+209)& (0+255),b
 11889                           
 11890                           ; BSR set to: 2
 11891                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11892  0009A8  6BEE               	clrf	(_loRa+238)& (0+255),b
 11893                           
 11894                           ; BSR set to: 2
 11895                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11896  0009AA  9900               	bcf	_loRa& (0+255),4,b
 11897                           
 11898                           ; BSR set to: 2
 11899                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11900  0009AC  8303               	bsf	(_loRa+3)& (0+255),1,b
 11901                           
 11902                           ; BSR set to: 2
 11903                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11904  0009AE  A100               	btfss	_loRa& (0+255),0,b
 11905  0009B0  D04D               	goto	l14514
 11906                           
 11907                           ; BSR set to: 2
 11908                           ;lorawan.c: 1468: {
 11909                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11910  0009B2  0103               	movlb	3	; () banked
 11911  0009B4  EE20 F005          	lfsr	2,5
 11912  0009B8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11913  0009BA  26D9               	addwf	fsr2l,f,c
 11914  0009BC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11915  0009BE  22DA               	addwfc	fsr2h,f,c
 11916  0009C0  AADF               	btfss	indf2,5,c
 11917  0009C2  D041               	goto	l14512
 11918                           
 11919                           ; BSR set to: 3
 11920                           ;lorawan.c: 1470: {
 11921                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11922  0009C4  0102               	movlb	2	; () banked
 11923  0009C6  9100               	bcf	_loRa& (0+255),0,b
 11924                           
 11925                           ; BSR set to: 2
 11926                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11927  0009C8  0EF0               	movlw	-16
 11928  0009CA  1702               	andwf	(_loRa+2)& (0+255),f,b
 11929                           
 11930                           ; BSR set to: 2
 11931                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11932  0009CC  0100               	movlb	0	; () banked
 11933  0009CE  51E8               	movf	_rxPayload& (0+255),w,b
 11934  0009D0  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11935  0009D2  E016               	bz	l14494
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;lorawan.c: 1474: {
 11939                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11940  0009D4  0102               	movlb	2	; () banked
 11941  0009D6  9B00               	bcf	_loRa& (0+255),5,b
 11942                           
 11943                           ; BSR set to: 2
 11944                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11945  0009D8  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11946  0009DC  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11947  0009E0  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11948  0009E4  0E01               	movlw	1
 11949  0009E6  0100               	movlb	0	; () banked
 11950  0009E8  6F6A               	movwf	RxDataDone@status& (0+255),b
 11951  0009EA  D801               	call	u16458
 11952  0009EC  D009               	goto	l14494
 11953  0009EE                     u16458:
 11954  0009EE  0005               	push	
 11955  0009F0  6EFA               	movwf	pclath,c
 11956  0009F2  51E8               	movf	_rxPayload& (0+255),w,b
 11957  0009F4  6EFD               	movwf	tosl,c
 11958  0009F6  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11959  0009F8  6EFE               	movwf	tosh,c
 11960  0009FA  6AFF               	clrf	tosu,c
 11961  0009FC  50FA               	movf	pclath,w,c
 11962  0009FE  0012               	return		;indir
 11963  000A00                     l14494:
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;lorawan.c: 1477: }
 11967                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11968  000A00  0102               	movlb	2	; () banked
 11969  000A02  9303               	bcf	(_loRa+3)& (0+255),1,b
 11970                           
 11971                           ; BSR set to: 2
 11972                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11973  000A04  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11974                           
 11975                           ; BSR set to: 2
 11976  000A06  BB00               	btfsc	_loRa& (0+255),5,b
 11977  000A08  D5D6               	goto	l14342
 11978                           
 11979                           ; BSR set to: 2
 11980  000A0A  B300               	btfsc	_loRa& (0+255),1,b
 11981  000A0C  D002               	goto	l14504
 11982                           
 11983                           ; BSR set to: 2
 11984  000A0E  A700               	btfss	_loRa& (0+255),3,b
 11985  000A10  D5D2               	goto	l14342
 11986  000A12                     l14504:
 11987                           
 11988                           ; BSR set to: 2
 11989                           ;lorawan.c: 1480: {
 11990                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11991  000A12  0E01               	movlw	1
 11992  000A14  0100               	movlb	0	; () banked
 11993  000A16  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11994  000A18  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 11995  000A1A  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11996  000A1C  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 11997  000A1E  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11998  000A20  0102               	movlb	2	; () banked
 11999  000A22  51ED               	movf	(_loRa+237)& (0+255),w,b
 12000  000A24  EC90  F027         	call	_SearchAvailableChannel
 12001  000A28  0900               	iorlw	0
 12002  000A2A  E10A               	bnz	l14510
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;lorawan.c: 1482: {
 12006                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12007  000A2C  0E00               	movlw	0
 12008  000A2E  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12009  000A30  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12010  000A32  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12011  000A34  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12012  000A36  EC0D  F02A         	call	_LORAWAN_Send
 12013  000A3A                     l14508:
 12014                           
 12015                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12016  000A3A  0102               	movlb	2	; () banked
 12017  000A3C  9700               	bcf	_loRa& (0+255),3,b
 12018                           
 12019                           ;lorawan.c: 1485: }
 12020  000A3E  D5BB               	goto	l14342
 12021  000A40                     l14510:
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;lorawan.c: 1486: else
 12025                           ;lorawan.c: 1487: {
 12026                           ;lorawan.c: 1489: StartReTxTimer();
 12027  000A40  ECF8  F021         	call	_StartReTxTimer	;wreg free
 12028  000A44  D5B8               	goto	l14342
 12029  000A46                     l14512:
 12030                           
 12031                           ; BSR set to: 3
 12032                           ;lorawan.c: 1494: else
 12033                           ;lorawan.c: 1495: {
 12034                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12035  000A46  ECFF  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12036  000A4A  D5B5               	goto	l14342
 12037  000A4C                     l14514:
 12038                           
 12039                           ; BSR set to: 2
 12040                           ;lorawan.c: 1499: else
 12041                           ;lorawan.c: 1500: {
 12042                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12043  000A4C  0EF0               	movlw	-16
 12044  000A4E  1702               	andwf	(_loRa+2)& (0+255),f,b
 12045                           
 12046                           ; BSR set to: 2
 12047                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12048  000A50  0100               	movlb	0	; () banked
 12049  000A52  51E8               	movf	_rxPayload& (0+255),w,b
 12050  000A54  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12051  000A56  E016               	bz	l14522
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;lorawan.c: 1504: {
 12055                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12056  000A58  0102               	movlb	2	; () banked
 12057  000A5A  9B00               	bcf	_loRa& (0+255),5,b
 12058                           
 12059                           ; BSR set to: 2
 12060                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12061  000A5C  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12062  000A60  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12063  000A64  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12064  000A68  0E01               	movlw	1
 12065  000A6A  0100               	movlb	0	; () banked
 12066  000A6C  6F6A               	movwf	RxDataDone@status& (0+255),b
 12067  000A6E  D801               	call	u16528
 12068  000A70  D009               	goto	l14522
 12069  000A72                     u16528:
 12070  000A72  0005               	push	
 12071  000A74  6EFA               	movwf	pclath,c
 12072  000A76  51E8               	movf	_rxPayload& (0+255),w,b
 12073  000A78  6EFD               	movwf	tosl,c
 12074  000A7A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12075  000A7C  6EFE               	movwf	tosh,c
 12076  000A7E  6AFF               	clrf	tosu,c
 12077  000A80  50FA               	movf	pclath,w,c
 12078  000A82  0012               	return		;indir
 12079  000A84                     l14522:
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;lorawan.c: 1507: }
 12083                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12084  000A84  0102               	movlb	2	; () banked
 12085  000A86  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12086                           
 12087                           ; BSR set to: 2
 12088  000A88  BB00               	btfsc	_loRa& (0+255),5,b
 12089  000A8A  D595               	goto	l14342
 12090                           
 12091                           ; BSR set to: 2
 12092  000A8C  B300               	btfsc	_loRa& (0+255),1,b
 12093  000A8E  D002               	goto	l14530
 12094                           
 12095                           ; BSR set to: 2
 12096  000A90  A700               	btfss	_loRa& (0+255),3,b
 12097  000A92  D591               	goto	l14342
 12098  000A94                     l14530:
 12099                           
 12100                           ; BSR set to: 2
 12101                           ;lorawan.c: 1510: {
 12102                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12103  000A94  0E01               	movlw	1
 12104  000A96  0100               	movlb	0	; () banked
 12105  000A98  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12106  000A9A  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 12107  000A9C  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12108  000A9E  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 12109  000AA0  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12110  000AA2  0102               	movlb	2	; () banked
 12111  000AA4  51ED               	movf	(_loRa+237)& (0+255),w,b
 12112  000AA6  EC90  F027         	call	_SearchAvailableChannel
 12113  000AAA  0900               	iorlw	0
 12114  000AAC  E1C9               	bnz	l14510
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;lorawan.c: 1512: {
 12118                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12119  000AAE  0E00               	movlw	0
 12120  000AB0  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12121  000AB2  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12122  000AB4  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12123  000AB6  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12124  000AB8  EC0D  F02A         	call	_LORAWAN_Send
 12125  000ABC  D7BE               	goto	l14508
 12126  000ABE                     l14548:
 12127                           
 12128                           ; BSR set to: 2
 12129                           ;lorawan.c: 1537: else
 12130                           ;lorawan.c: 1538: {
 12131                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12132  000ABE  0100               	movlb	0	; () banked
 12133  000AC0  51E8               	movf	_rxPayload& (0+255),w,b
 12134  000AC2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12135  000AC4  B4D8               	btfsc	status,2,c
 12136  000AC6  0012               	return	
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;lorawan.c: 1541: {
 12140                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12141  000AC8  EC82  F03C         	call	_RADIO_GetStatus	;wreg free
 12142  000ACC  0100               	movlb	0	; () banked
 12143  000ACE  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 12144  000AD0  B7DD               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12145  000AD2  D011               	goto	l14554
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;lorawan.c: 1543: {
 12149                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12150  000AD4  C166  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12151  000AD8  C167  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12152  000ADC  C168  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12153  000AE0  0E03               	movlw	3
 12154  000AE2  6F6A               	movwf	RxDataDone@status& (0+255),b
 12155  000AE4  0005               	push	
 12156  000AE6  6EFA               	movwf	pclath,c
 12157  000AE8  51E8               	movf	_rxPayload& (0+255),w,b
 12158  000AEA  6EFD               	movwf	tosl,c
 12159  000AEC  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12160  000AEE  6EFE               	movwf	tosh,c
 12161  000AF0  6AFF               	clrf	tosu,c
 12162  000AF2  50FA               	movf	pclath,w,c
 12163  000AF4  0012               	return		;indir
 12164  000AF6                     l14554:
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;lorawan.c: 1546: else
 12168                           ;lorawan.c: 1547: {
 12169                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12170  000AF6  C166  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12171  000AFA  C167  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12172  000AFE  C168  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12173  000B02  0E02               	movlw	2
 12174  000B04  6F6A               	movwf	RxDataDone@status& (0+255),b
 12175  000B06  0005               	push	
 12176  000B08  6EFA               	movwf	pclath,c
 12177  000B0A  51E8               	movf	_rxPayload& (0+255),w,b
 12178  000B0C  6EFD               	movwf	tosl,c
 12179  000B0E  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12180  000B10  6EFE               	movwf	tosh,c
 12181  000B12  6AFF               	clrf	tosu,c
 12182  000B14  50FA               	movf	pclath,w,c
 12183  000B16  0012               	return		;indir
 12184  000B18                     __end_of_LORAWAN_RxDone:
 12185                           	opt stack 0
 12186                           tosu	equ	0xFFF
 12187                           tosh	equ	0xFFE
 12188                           tosl	equ	0xFFD
 12189                           pclath	equ	0xFFA
 12190                           tblptru	equ	0xFF8
 12191                           tblptrh	equ	0xFF7
 12192                           tblptrl	equ	0xFF6
 12193                           tablat	equ	0xFF5
 12194                           prodh	equ	0xFF4
 12195                           prodl	equ	0xFF3
 12196                           intcon	equ	0xFF2
 12197                           intcon2	equ	0xFF1
 12198                           intcon3	equ	0xFF0
 12199                           postinc0	equ	0xFEE
 12200                           wreg	equ	0xFE8
 12201                           postinc1	equ	0xFE6
 12202                           postdec1	equ	0xFE5
 12203                           plusw1	equ	0xFE3
 12204                           fsr1h	equ	0xFE2
 12205                           fsr1l	equ	0xFE1
 12206                           indf2	equ	0xFDF
 12207                           postinc2	equ	0xFDE
 12208                           postdec2	equ	0xFDD
 12209                           fsr2h	equ	0xFDA
 12210                           fsr2l	equ	0xFD9
 12211                           status	equ	0xFD8
 12212                           
 12213 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12214 ;; Defined at:
 12215 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;		None
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;		None
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1    wreg      void 
 12222 ;; Registers used:
 12223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12224 ;; Tracked objects:
 12225 ;;		On entry : C/0
 12226 ;;		On exit  : F/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12232 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12233 ;;Total ram usage:        4 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:   11
 12236 ;; This function calls:
 12237 ;;		_SwTimerSetTimeout
 12238 ;;		_SwTimerStart
 12239 ;;		___lldiv
 12240 ;; This function is called by:
 12241 ;;		_AckRetransmissionCallback
 12242 ;;		_LORAWAN_RxDone
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text63
 12247  0061FE                     __ptext63:
 12248                           	opt stack 0
 12249  0061FE                     _UpdateRetransmissionAckTimeoutState:
 12250                           	opt stack 16
 12251                           
 12252                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12253                           
 12254                           ;incstack = 0
 12255  0061FE  0102               	movlb	2	; () banked
 12256  006200  5102               	movf	(_loRa+2)& (0+255),w,b
 12257  006202  0BF0               	andlw	-16
 12258  006204  0906               	iorlw	6
 12259  006206  6F02               	movwf	(_loRa+2)& (0+255),b
 12260                           
 12261                           ; BSR set to: 2
 12262                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12263  006208  51A0               	movf	(_loRa+160)& (0+255),w,b
 12264  00620A  0100               	movlb	0	; () banked
 12265  00620C  6F96               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12266  00620E  0102               	movlb	2	; () banked
 12267  006210  51A1               	movf	(_loRa+161)& (0+255),w,b
 12268  006212  0100               	movlb	0	; () banked
 12269  006214  6F97               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12270  006216  6B98               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12271  006218  6B99               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12272  00621A  0E0C               	movlw	12
 12273  00621C                     u15645:
 12274  00621C  90D8               	bcf	status,0,c
 12275  00621E  3796               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12276  006220  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12277  006222  3798               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12278  006224  3799               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12279  006226  2EE8               	decfsz	wreg,f,c
 12280  006228  D7F9               	goto	u15645
 12281  00622A  C096  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12282  00622E  C097  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12283  006232  C098  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12284  006236  C099  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12285  00623A  0E7D               	movlw	125
 12286  00623C  6F68               	movwf	___lldiv@divisor& (0+255),b
 12287  00623E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12288  006240  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12289  006242  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12290  006244  EC1A  F030         	call	___lldiv	;wreg free
 12291  006248  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12292  00624C  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12293  006250  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12294  006254  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12295  006258  0102               	movlb	2	; () banked
 12296  00625A  51E8               	movf	(_loRa+232)& (0+255),w,b
 12297  00625C  EC75  F036         	call	_SwTimerSetTimeout
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12301  006260  0102               	movlb	2	; () banked
 12302  006262  51E8               	movf	(_loRa+232)& (0+255),w,b
 12303  006264  EF58  F02E         	goto	_SwTimerStart
 12304  006268                     __end_of_UpdateRetransmissionAckTimeoutState:
 12305                           	opt stack 0
 12306                           tosu	equ	0xFFF
 12307                           tosh	equ	0xFFE
 12308                           tosl	equ	0xFFD
 12309                           pclath	equ	0xFFA
 12310                           tblptru	equ	0xFF8
 12311                           tblptrh	equ	0xFF7
 12312                           tblptrl	equ	0xFF6
 12313                           tablat	equ	0xFF5
 12314                           prodh	equ	0xFF4
 12315                           prodl	equ	0xFF3
 12316                           intcon	equ	0xFF2
 12317                           intcon2	equ	0xFF1
 12318                           intcon3	equ	0xFF0
 12319                           postinc0	equ	0xFEE
 12320                           wreg	equ	0xFE8
 12321                           postinc1	equ	0xFE6
 12322                           postdec1	equ	0xFE5
 12323                           plusw1	equ	0xFE3
 12324                           fsr1h	equ	0xFE2
 12325                           fsr1l	equ	0xFE1
 12326                           indf2	equ	0xFDF
 12327                           postinc2	equ	0xFDE
 12328                           postdec2	equ	0xFDD
 12329                           fsr2h	equ	0xFDA
 12330                           fsr2l	equ	0xFD9
 12331                           status	equ	0xFD8
 12332                           
 12333 ;; *************** function _UpdateDLSettings *****************
 12334 ;; Defined at:
 12335 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12336 ;; Parameters:    Size  Location     Type
 12337 ;;  dlRx2Dr         1    wreg     unsigned char 
 12338 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12339 ;; Auto vars:     Size  Location     Type
 12340 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12341 ;; Return value:  Size  Location     Type
 12342 ;;                  1    wreg      void 
 12343 ;; Registers used:
 12344 ;;		wreg, status,2, status,0
 12345 ;; Tracked objects:
 12346 ;;		On entry : F/3
 12347 ;;		On exit  : F/0
 12348 ;;		Unchanged: 0/0
 12349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12350 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12354 ;;Total ram usage:        2 bytes
 12355 ;; Hardware stack levels used:    1
 12356 ;; Hardware stack levels required when called:    7
 12357 ;; This function calls:
 12358 ;;		Nothing
 12359 ;; This function is called by:
 12360 ;;		_LORAWAN_RxDone
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           	psect	text64
 12365  007618                     __ptext64:
 12366                           	opt stack 0
 12367  007618                     _UpdateDLSettings:
 12368                           	opt stack 19
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;incstack = 0
 12372                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12373  007618  0100               	movlb	0	; () banked
 12374  00761A  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12375                           
 12376                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12377  00761C  0E08               	movlw	8
 12378  00761E  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12379  007620  D002               	goto	l13894
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;lorawan_eu.c: 891: {
 12383                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12384  007622  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12385  007626                     l13894:
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;lorawan_eu.c: 893: }
 12389                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12390  007626  0E06               	movlw	6
 12391  007628  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12392  00762A  0C06               	retlw	6
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;lorawan_eu.c: 896: {
 12396                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12397  00762C  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12398                           
 12399                           ; BSR set to: 0
 12400  007630  0C06               	retlw	6	;funcret
 12401  007632                     __end_of_UpdateDLSettings:
 12402                           	opt stack 0
 12403                           tosu	equ	0xFFF
 12404                           tosh	equ	0xFFE
 12405                           tosl	equ	0xFFD
 12406                           pclath	equ	0xFFA
 12407                           tblptru	equ	0xFF8
 12408                           tblptrh	equ	0xFF7
 12409                           tblptrl	equ	0xFF6
 12410                           tablat	equ	0xFF5
 12411                           prodh	equ	0xFF4
 12412                           prodl	equ	0xFF3
 12413                           intcon	equ	0xFF2
 12414                           intcon2	equ	0xFF1
 12415                           intcon3	equ	0xFF0
 12416                           postinc0	equ	0xFEE
 12417                           wreg	equ	0xFE8
 12418                           postinc1	equ	0xFE6
 12419                           postdec1	equ	0xFE5
 12420                           plusw1	equ	0xFE3
 12421                           fsr1h	equ	0xFE2
 12422                           fsr1l	equ	0xFE1
 12423                           indf2	equ	0xFDF
 12424                           postinc2	equ	0xFDE
 12425                           postdec2	equ	0xFDD
 12426                           fsr2h	equ	0xFDA
 12427                           fsr2l	equ	0xFD9
 12428                           status	equ	0xFD8
 12429                           
 12430 ;; *************** function _UpdateCfList *****************
 12431 ;; Defined at:
 12432 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;  bufferLength    1    wreg     unsigned char 
 12435 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12436 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12439 ;;  frequency       4   21[BANK0 ] unsigned long 
 12440 ;;  i               1   26[BANK0 ] unsigned char 
 12441 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12442 ;; Return value:  Size  Location     Type
 12443 ;;                  1    wreg      void 
 12444 ;; Registers used:
 12445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12446 ;; Tracked objects:
 12447 ;;		On entry : F/1
 12448 ;;		On exit  : D/0
 12449 ;;		Unchanged: 0/0
 12450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12454 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12455 ;;Total ram usage:       11 bytes
 12456 ;; Hardware stack levels used:    1
 12457 ;; Hardware stack levels required when called:    9
 12458 ;; This function calls:
 12459 ;;		_LORAWAN_SetChannelIdStatus
 12460 ;;		_ValidateFrequency
 12461 ;;		___lmul
 12462 ;;		_memcpy
 12463 ;; This function is called by:
 12464 ;;		_LORAWAN_RxDone
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           
 12468                           	psect	text65
 12469  0031B2                     __ptext65:
 12470                           	opt stack 0
 12471  0031B2                     _UpdateCfList:
 12472                           	opt stack 17
 12473                           
 12474                           ; BSR set to: 0
 12475                           ;incstack = 0
 12476                           ;UpdateCfList@bufferLength stored from wreg
 12477  0031B2  0100               	movlb	0	; () banked
 12478  0031B4  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12479                           
 12480                           ;lorawan_eu.c: 826: uint8_t i;
 12481                           ;lorawan_eu.c: 827: uint32_t frequency;
 12482                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12483                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12484  0031B6  0E21               	movlw	33
 12485  0031B8  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12486  0031BA  A4D8               	btfss	status,2,c
 12487  0031BC  0012               	return	
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;lorawan_eu.c: 831: {
 12491                           ;lorawan_eu.c: 833: channelIndex = 3;
 12492  0031BE  0E03               	movlw	3
 12493  0031C0  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12497  0031C2  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12498  0031C4                     l1151:
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;lorawan_eu.c: 836: {
 12502                           ;lorawan_eu.c: 837: frequency = 0;
 12503  0031C4  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12504  0031C6  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12505  0031C8  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12506  0031CA  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12510  0031CC  0E75               	movlw	low UpdateCfList@frequency
 12511  0031CE  6F64               	movwf	memcpy@d1& (0+255),b
 12512  0031D0  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12513  0031D2  517A               	movf	UpdateCfList@i& (0+255),w,b
 12514  0031D4  0D03               	mullw	3
 12515  0031D6  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12516  0031DA  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12517  0031DE  50F3               	movf	prodl,w,c
 12518  0031E0  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12519  0031E2  50F4               	movf	prodh,w,c
 12520  0031E4  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12521  0031E6  0E0D               	movlw	13
 12522  0031E8  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12523  0031EA  0E00               	movlw	0
 12524  0031EC  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12525  0031EE  5172               	movf	??_UpdateCfList& (0+255),w,b
 12526  0031F0  6F66               	movwf	memcpy@s1& (0+255),b
 12527  0031F2  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12528  0031F4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12529  0031F6  0E03               	movlw	3
 12530  0031F8  6F68               	movwf	memcpy@n& (0+255),b
 12531  0031FA  EC14  F034         	call	_memcpy	;wreg free
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;lorawan_eu.c: 839: frequency *= 100;
 12535  0031FE  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12536  003202  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12537  003206  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12538  00320A  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12539  00320E  0E64               	movlw	100
 12540  003210  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12541  003212  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12542  003214  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12543  003216  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12544  003218  EC9C  F02E         	call	___lmul	;wreg free
 12545  00321C  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12546  003220  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12547  003224  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12548  003228  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;lorawan_eu.c: 840: if (frequency != 0)
 12552  00322C  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12553  00322E  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12554  003230  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12555  003232  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12556  003234  E101 D094          	bz	l13884
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;lorawan_eu.c: 841: {
 12560                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12561  003238  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12562  00323C  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12563  003240  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12564  003244  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12565  003248  ECBA  F033         	call	_ValidateFrequency	;wreg free
 12566  00324C  0900               	iorlw	0
 12567  00324E  E001 D08C          	bnz	l13886
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;lorawan_eu.c: 843: {
 12571                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12572  003252  517A               	movf	UpdateCfList@i& (0+255),w,b
 12573  003254  0D0E               	mullw	14
 12574  003256  0E00               	movlw	low _Channels
 12575  003258  6F72               	movwf	??_UpdateCfList& (0+255),b
 12576  00325A  0E04               	movlw	high _Channels
 12577  00325C  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12578  00325E  50F3               	movf	prodl,w,c
 12579  003260  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12580  003262  50F4               	movf	prodh,w,c
 12581  003264  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12582  003266  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12583  003268  0D0E               	mullw	14
 12584  00326A  50F3               	movf	prodl,w,c
 12585  00326C  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12586  00326E  6ED9               	movwf	fsr2l,c
 12587  003270  50F4               	movf	prodh,w,c
 12588  003272  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12589  003274  6EDA               	movwf	fsr2h,c
 12590  003276  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 12591  00327A  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12592  00327E  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12593  003282  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12594                           
 12595                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12596  003286  517A               	movf	UpdateCfList@i& (0+255),w,b
 12597  003288  0D0E               	mullw	14
 12598  00328A  0E00               	movlw	low _Channels
 12599  00328C  6F72               	movwf	??_UpdateCfList& (0+255),b
 12600  00328E  0E04               	movlw	high _Channels
 12601  003290  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12602  003292  0E05               	movlw	5
 12603  003294  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12604  003296  0E00               	movlw	0
 12605  003298  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12606  00329A  50F3               	movf	prodl,w,c
 12607  00329C  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12608  00329E  50F4               	movf	prodh,w,c
 12609  0032A0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12610  0032A2  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12611  0032A4  0D0E               	mullw	14
 12612  0032A6  50F3               	movf	prodl,w,c
 12613  0032A8  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12614  0032AA  6ED9               	movwf	fsr2l,c
 12615  0032AC  50F4               	movf	prodh,w,c
 12616  0032AE  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12617  0032B0  6EDA               	movwf	fsr2h,c
 12618  0032B2  50DF               	movf	223,w,c
 12619  0032B4  0B0F               	andlw	-241
 12620  0032B6  0950               	iorlw	80
 12621  0032B8  6EDF               	movwf	223,c
 12622                           
 12623                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12624  0032BA  0100               	movlb	0	; () banked
 12625  0032BC  517A               	movf	UpdateCfList@i& (0+255),w,b
 12626  0032BE  0D0E               	mullw	14
 12627  0032C0  0E00               	movlw	low _Channels
 12628  0032C2  6F72               	movwf	??_UpdateCfList& (0+255),b
 12629  0032C4  0E04               	movlw	high _Channels
 12630  0032C6  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12631  0032C8  0E05               	movlw	5
 12632  0032CA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12633  0032CC  0E00               	movlw	0
 12634  0032CE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12635  0032D0  50F3               	movf	prodl,w,c
 12636  0032D2  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12637  0032D4  50F4               	movf	prodh,w,c
 12638  0032D6  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12639  0032D8  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12640  0032DA  0D0E               	mullw	14
 12641  0032DC  50F3               	movf	prodl,w,c
 12642  0032DE  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12643  0032E0  6ED9               	movwf	fsr2l,c
 12644  0032E2  50F4               	movf	prodh,w,c
 12645  0032E4  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12646  0032E6  6EDA               	movwf	fsr2h,c
 12647  0032E8  0EF0               	movlw	-16
 12648  0032EA  16DF               	andwf	223,f,c
 12649                           
 12650                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12651  0032EC  517A               	movf	UpdateCfList@i& (0+255),w,b
 12652  0032EE  0D0E               	mullw	14
 12653  0032F0  0E00               	movlw	low _Channels
 12654  0032F2  6F72               	movwf	??_UpdateCfList& (0+255),b
 12655  0032F4  0E04               	movlw	high _Channels
 12656  0032F6  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12657  0032F8  0E06               	movlw	6
 12658  0032FA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12659  0032FC  0E00               	movlw	0
 12660  0032FE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12661  003300  50F3               	movf	prodl,w,c
 12662  003302  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12663  003304  50F4               	movf	prodh,w,c
 12664  003306  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12665  003308  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12666  00330A  0D0E               	mullw	14
 12667  00330C  50F3               	movf	prodl,w,c
 12668  00330E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12669  003310  6ED9               	movwf	fsr2l,c
 12670  003312  50F4               	movf	prodh,w,c
 12671  003314  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12672  003316  6EDA               	movwf	fsr2h,c
 12673  003318  0EE7               	movlw	231
 12674  00331A  6EDE               	movwf	postinc2,c
 12675  00331C  0E03               	movlw	3
 12676  00331E  6EDD               	movwf	postdec2,c
 12677                           
 12678                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12679  003320  517A               	movf	UpdateCfList@i& (0+255),w,b
 12680  003322  0D0E               	mullw	14
 12681  003324  0E00               	movlw	low _Channels
 12682  003326  6F72               	movwf	??_UpdateCfList& (0+255),b
 12683  003328  0E04               	movlw	high _Channels
 12684  00332A  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12685  00332C  0E0D               	movlw	13
 12686  00332E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12687  003330  0E00               	movlw	0
 12688  003332  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12689  003334  50F3               	movf	prodl,w,c
 12690  003336  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12691  003338  50F4               	movf	prodh,w,c
 12692  00333A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12693  00333C  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12694  00333E  0D0E               	mullw	14
 12695  003340  50F3               	movf	prodl,w,c
 12696  003342  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12697  003344  6ED9               	movwf	fsr2l,c
 12698  003346  50F4               	movf	prodh,w,c
 12699  003348  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12700  00334A  6EDA               	movwf	fsr2h,c
 12701  00334C  68DF               	setf	indf2,c
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12705  00334E  0E01               	movlw	1
 12706  003350  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12707  003352  517A               	movf	UpdateCfList@i& (0+255),w,b
 12708  003354  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12709  003356  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 12710                           
 12711                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12712  00335A  0102               	movlb	2	; () banked
 12713  00335C  8703               	bsf	(_loRa+3)& (0+255),3,b
 12714  00335E  D005               	goto	l13886
 12715  003360                     l13884:
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;lorawan_eu.c: 853: else
 12719                           ;lorawan_eu.c: 854: {
 12720                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12721  003360  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12722  003362  517A               	movf	UpdateCfList@i& (0+255),w,b
 12723  003364  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12724  003366  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 12725  00336A                     l13886:
 12726  00336A  0100               	movlb	0	; () banked
 12727  00336C  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 12728                           
 12729                           ; BSR set to: 0
 12730  00336E  0E04               	movlw	4
 12731  003370  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 12732  003372  D728               	goto	l1151
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;lorawan_eu.c: 856: }
 12736                           ;lorawan_eu.c: 857: }
 12737                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12738  003374  0102               	movlb	2	; () banked
 12739  003376  8703               	bsf	(_loRa+3)& (0+255),3,b
 12740  003378  0C04               	retlw	4	;funcret
 12741  00337A                     __end_of_UpdateCfList:
 12742                           	opt stack 0
 12743                           tosu	equ	0xFFF
 12744                           tosh	equ	0xFFE
 12745                           tosl	equ	0xFFD
 12746                           pclath	equ	0xFFA
 12747                           tblptru	equ	0xFF8
 12748                           tblptrh	equ	0xFF7
 12749                           tblptrl	equ	0xFF6
 12750                           tablat	equ	0xFF5
 12751                           prodh	equ	0xFF4
 12752                           prodl	equ	0xFF3
 12753                           intcon	equ	0xFF2
 12754                           intcon2	equ	0xFF1
 12755                           intcon3	equ	0xFF0
 12756                           postinc0	equ	0xFEE
 12757                           wreg	equ	0xFE8
 12758                           postinc1	equ	0xFE6
 12759                           postdec1	equ	0xFE5
 12760                           plusw1	equ	0xFE3
 12761                           fsr1h	equ	0xFE2
 12762                           fsr1l	equ	0xFE1
 12763                           indf2	equ	0xFDF
 12764                           postinc2	equ	0xFDE
 12765                           postdec2	equ	0xFDD
 12766                           fsr2h	equ	0xFDA
 12767                           fsr2l	equ	0xFD9
 12768                           status	equ	0xFD8
 12769                           
 12770 ;; *************** function _StartReTxTimer *****************
 12771 ;; Defined at:
 12772 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;		None
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;  minim           4   58[BANK0 ] unsigned long 
 12777 ;;  i               1   62[BANK0 ] unsigned char 
 12778 ;; Return value:  Size  Location     Type
 12779 ;;                  1    wreg      void 
 12780 ;; Registers used:
 12781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12782 ;; Tracked objects:
 12783 ;;		On entry : E/0
 12784 ;;		On exit  : F/0
 12785 ;;		Unchanged: 0/0
 12786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12788 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12789 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12790 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12791 ;;Total ram usage:        9 bytes
 12792 ;; Hardware stack levels used:    1
 12793 ;; Hardware stack levels required when called:   11
 12794 ;; This function calls:
 12795 ;;		_SwTimerSetTimeout
 12796 ;;		_SwTimerStart
 12797 ;;		___lldiv
 12798 ;; This function is called by:
 12799 ;;		_LORAWAN_RxDone
 12800 ;; This function uses a non-reentrant model
 12801 ;;
 12802                           
 12803                           	psect	text66
 12804  0043F0                     __ptext66:
 12805                           	opt stack 0
 12806  0043F0                     _StartReTxTimer:
 12807                           	opt stack 15
 12808                           
 12809                           ;lorawan_eu.c: 904: uint8_t i;
 12810                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12811                           
 12812                           ;incstack = 0
 12813  0043F0  0100               	movlb	0	; () banked
 12814  0043F2  699A               	setf	StartReTxTimer@minim& (0+255),b
 12815  0043F4  699B               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12816  0043F6  699C               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12817  0043F8  699D               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12818                           
 12819                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12820  0043FA  6B9E               	clrf	StartReTxTimer@i& (0+255),b
 12821  0043FC  D05B               	goto	l13914
 12822  0043FE                     l13900:
 12823                           
 12824                           ; BSR set to: 2
 12825                           ;lorawan_eu.c: 908: {
 12826                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12827  0043FE  0100               	movlb	0	; () banked
 12828  004400  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12829  004402  0D0E               	mullw	14
 12830  004404  0E04               	movlw	low (_Channels+4)
 12831  004406  24F3               	addwf	prodl,w,c
 12832  004408  6ED9               	movwf	fsr2l,c
 12833  00440A  0E04               	movlw	high (_Channels+4)
 12834  00440C  20F4               	addwfc	prodh,w,c
 12835  00440E  6EDA               	movwf	fsr2h,c
 12836  004410  04DE               	decf	postinc2,w,c
 12837  004412  E14E               	bnz	l13912
 12838                           
 12839                           ; BSR set to: 0
 12840  004414  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12841  004416  0D0E               	mullw	14
 12842  004418  0E08               	movlw	low (_Channels+8)
 12843  00441A  24F3               	addwf	prodl,w,c
 12844  00441C  6ED9               	movwf	fsr2l,c
 12845  00441E  0E04               	movlw	high (_Channels+8)
 12846  004420  20F4               	addwfc	prodh,w,c
 12847  004422  6EDA               	movwf	fsr2h,c
 12848  004424  50DE               	movf	postinc2,w,c
 12849  004426  10DE               	iorwf	postinc2,w,c
 12850  004428  10DE               	iorwf	postinc2,w,c
 12851  00442A  10DE               	iorwf	postinc2,w,c
 12852  00442C  E041               	bz	l13912
 12853                           
 12854                           ; BSR set to: 0
 12855  00442E  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12856  004430  0D0E               	mullw	14
 12857  004432  0E08               	movlw	low (_Channels+8)
 12858  004434  24F3               	addwf	prodl,w,c
 12859  004436  6ED9               	movwf	fsr2l,c
 12860  004438  0E04               	movlw	high (_Channels+8)
 12861  00443A  20F4               	addwfc	prodh,w,c
 12862  00443C  6EDA               	movwf	fsr2h,c
 12863  00443E  50DE               	movf	postinc2,w,c
 12864  004440  5D9A               	subwf	StartReTxTimer@minim& (0+255),w,b
 12865  004442  50DE               	movf	postinc2,w,c
 12866  004444  599B               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12867  004446  50DE               	movf	postinc2,w,c
 12868  004448  599C               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12869  00444A  50DE               	movf	postinc2,w,c
 12870  00444C  599D               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12871  00444E  E330               	bnc	l13912
 12872                           
 12873                           ; BSR set to: 0
 12874  004450  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12875  004452  0D0E               	mullw	14
 12876  004454  0E05               	movlw	low (_Channels+5)
 12877  004456  24F3               	addwf	prodl,w,c
 12878  004458  6ED9               	movwf	fsr2l,c
 12879  00445A  0E04               	movlw	high (_Channels+5)
 12880  00445C  20F4               	addwfc	prodh,w,c
 12881  00445E  6EDA               	movwf	fsr2h,c
 12882  004460  50DF               	movf	223,w,c
 12883  004462  0B0F               	andlw	15
 12884  004464  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12885  004466  5196               	movf	??_StartReTxTimer& (0+255),w,b
 12886  004468  0102               	movlb	2	; () banked
 12887  00446A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12888  00446C  E321               	bnc	l13912
 12889                           
 12890                           ; BSR set to: 2
 12891  00446E  0100               	movlb	0	; () banked
 12892  004470  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12893  004472  0D0E               	mullw	14
 12894  004474  0E05               	movlw	low (_Channels+5)
 12895  004476  24F3               	addwf	prodl,w,c
 12896  004478  6ED9               	movwf	fsr2l,c
 12897  00447A  0E04               	movlw	high (_Channels+5)
 12898  00447C  20F4               	addwfc	prodh,w,c
 12899  00447E  6EDA               	movwf	fsr2h,c
 12900  004480  38DF               	swapf	223,w,c
 12901  004482  0B0F               	andlw	15
 12902  004484  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12903  004486  0102               	movlb	2	; () banked
 12904  004488  51DF               	movf	(_loRa+223)& (0+255),w,b
 12905  00448A  0100               	movlb	0	; () banked
 12906  00448C  5D96               	subwf	??_StartReTxTimer& (0+255),w,b
 12907  00448E  E310               	bnc	l13912
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;lorawan_eu.c: 910: {
 12911                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12912  004490  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12913  004492  0D0E               	mullw	14
 12914  004494  0E08               	movlw	low (_Channels+8)
 12915  004496  24F3               	addwf	prodl,w,c
 12916  004498  6ED9               	movwf	fsr2l,c
 12917  00449A  0E04               	movlw	high (_Channels+8)
 12918  00449C  20F4               	addwfc	prodh,w,c
 12919  00449E  6EDA               	movwf	fsr2h,c
 12920  0044A0  CFDE F09A          	movff	postinc2,StartReTxTimer@minim
 12921  0044A4  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+1
 12922  0044A8  CFDE F09C          	movff	postinc2,StartReTxTimer@minim+2
 12923  0044AC  CFDE F09D          	movff	postinc2,StartReTxTimer@minim+3
 12924  0044B0                     l13912:
 12925  0044B0  0100               	movlb	0	; () banked
 12926  0044B2  2B9E               	incf	StartReTxTimer@i& (0+255),f,b
 12927  0044B4                     l13914:
 12928                           
 12929                           ; BSR set to: 0
 12930  0044B4  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12931  0044B6  0102               	movlb	2	; () banked
 12932  0044B8  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12933  0044BA  E2A1               	bc	l13900
 12934                           
 12935                           ; BSR set to: 2
 12936                           ;lorawan_eu.c: 912: }
 12937                           ;lorawan_eu.c: 913: }
 12938                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12939  0044BC  5102               	movf	(_loRa+2)& (0+255),w,b
 12940  0044BE  0BF0               	andlw	-16
 12941  0044C0  0906               	iorlw	6
 12942  0044C2  6F02               	movwf	(_loRa+2)& (0+255),b
 12943                           
 12944                           ; BSR set to: 2
 12945                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12946  0044C4  C09A  F096         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12947  0044C8  C09B  F097         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12948  0044CC  C09C  F098         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12949  0044D0  C09D  F099         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12950  0044D4  0E0C               	movlw	12
 12951  0044D6                     u15505:
 12952  0044D6  90D8               	bcf	status,0,c
 12953  0044D8  0100               	movlb	0	; () banked
 12954  0044DA  3796               	rlcf	??_StartReTxTimer& (0+255),f,b
 12955  0044DC  3797               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12956  0044DE  3798               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12957  0044E0  3799               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12958  0044E2  2EE8               	decfsz	wreg,f,c
 12959  0044E4  D7F8               	goto	u15505
 12960  0044E6  C096  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 12961  0044EA  C097  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12962  0044EE  C098  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12963  0044F2  C099  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12964  0044F6  0E7D               	movlw	125
 12965  0044F8  6F68               	movwf	___lldiv@divisor& (0+255),b
 12966  0044FA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12967  0044FC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12968  0044FE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12969  004500  EC1A  F030         	call	___lldiv	;wreg free
 12970  004504  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12971  004508  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12972  00450C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12973  004510  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12974  004514  0102               	movlb	2	; () banked
 12975  004516  51E6               	movf	(_loRa+230)& (0+255),w,b
 12976  004518  EC75  F036         	call	_SwTimerSetTimeout
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 12980  00451C  0102               	movlb	2	; () banked
 12981  00451E  51E6               	movf	(_loRa+230)& (0+255),w,b
 12982  004520  EF58  F02E         	goto	_SwTimerStart
 12983  004524                     __end_of_StartReTxTimer:
 12984                           	opt stack 0
 12985                           tosu	equ	0xFFF
 12986                           tosh	equ	0xFFE
 12987                           tosl	equ	0xFFD
 12988                           pclath	equ	0xFFA
 12989                           tblptru	equ	0xFF8
 12990                           tblptrh	equ	0xFF7
 12991                           tblptrl	equ	0xFF6
 12992                           tablat	equ	0xFF5
 12993                           prodh	equ	0xFF4
 12994                           prodl	equ	0xFF3
 12995                           intcon	equ	0xFF2
 12996                           intcon2	equ	0xFF1
 12997                           intcon3	equ	0xFF0
 12998                           postinc0	equ	0xFEE
 12999                           wreg	equ	0xFE8
 13000                           postinc1	equ	0xFE6
 13001                           postdec1	equ	0xFE5
 13002                           plusw1	equ	0xFE3
 13003                           fsr1h	equ	0xFE2
 13004                           fsr1l	equ	0xFE1
 13005                           indf2	equ	0xFDF
 13006                           postinc2	equ	0xFDE
 13007                           postdec2	equ	0xFDD
 13008                           fsr2h	equ	0xFDA
 13009                           fsr2l	equ	0xFD9
 13010                           status	equ	0xFD8
 13011                           
 13012 ;; *************** function _SetReceptionNotOkState *****************
 13013 ;; Defined at:
 13014 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;		None
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;		None
 13019 ;; Return value:  Size  Location     Type
 13020 ;;                  1    wreg      void 
 13021 ;; Registers used:
 13022 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13023 ;; Tracked objects:
 13024 ;;		On entry : E/2
 13025 ;;		On exit  : D/0
 13026 ;;		Unchanged: 0/0
 13027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;Total ram usage:        0 bytes
 13033 ;; Hardware stack levels used:    1
 13034 ;; Hardware stack levels required when called:   14
 13035 ;; This function calls:
 13036 ;;		_LORAWAN_EnterContinuousReceive
 13037 ;;		_RxDataDone
 13038 ;; This function is called by:
 13039 ;;		_LORAWAN_RxDone
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043                           	psect	text67
 13044  006338                     __ptext67:
 13045                           	opt stack 0
 13046  006338                     _SetReceptionNotOkState:
 13047                           	opt stack 12
 13048                           
 13049                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;incstack = 0
 13053  006338  0102               	movlb	2	; () banked
 13054  00633A  5102               	movf	(_loRa+2)& (0+255),w,b
 13055  00633C  0B0F               	andlw	15
 13056  00633E  0A05               	xorlw	5
 13057  006340  E006               	bz	l2307
 13058                           
 13059                           ; BSR set to: 2
 13060  006342  5102               	movf	(_loRa+2)& (0+255),w,b
 13061  006344  0B0F               	andlw	15
 13062  006346  0A03               	xorlw	3
 13063  006348  E120               	bnz	l14078
 13064                           
 13065                           ; BSR set to: 2
 13066  00634A  51F1               	movf	(_loRa+241)& (0+255),w,b
 13067  00634C  E01E               	bz	l14078
 13068  00634E                     l2307:
 13069                           
 13070                           ; BSR set to: 2
 13071                           ;lorawan.c: 2000: {
 13072                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13073  00634E  9100               	bcf	_loRa& (0+255),0,b
 13074                           
 13075                           ; BSR set to: 2
 13076                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13077  006350  0EF0               	movlw	-16
 13078  006352  1702               	andwf	(_loRa+2)& (0+255),f,b
 13079                           
 13080                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13081  006354  5112               	movf	(_loRa+18)& (0+255),w,b
 13082  006356  E117               	bnz	l14076
 13083                           
 13084                           ; BSR set to: 2
 13085  006358  0100               	movlb	0	; () banked
 13086  00635A  51E8               	movf	_rxPayload& (0+255),w,b
 13087  00635C  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 13088  00635E  E013               	bz	l14076
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;lorawan.c: 2005: {
 13092                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13093  006360  0102               	movlb	2	; () banked
 13094  006362  9B00               	bcf	_loRa& (0+255),5,b
 13095                           
 13096                           ; BSR set to: 2
 13097                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13098  006364  0E00               	movlw	0
 13099  006366  0100               	movlb	0	; () banked
 13100  006368  6B67               	clrf	RxDataDone@pData& (0+255),b
 13101  00636A  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 13102  00636C  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 13103  00636E  6B6A               	clrf	RxDataDone@status& (0+255),b
 13104  006370  D801               	call	u15828
 13105  006372  D009               	goto	l14076
 13106  006374                     u15828:
 13107  006374  0005               	push	
 13108  006376  6EFA               	movwf	pclath,c
 13109  006378  51E8               	movf	_rxPayload& (0+255),w,b
 13110  00637A  6EFD               	movwf	tosl,c
 13111  00637C  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 13112  00637E  6EFE               	movwf	tosh,c
 13113  006380  6AFF               	clrf	tosu,c
 13114  006382  50FA               	movf	pclath,w,c
 13115  006384  0012               	return		;indir
 13116  006386                     l14076:
 13117                           
 13118                           ;lorawan.c: 2008: }
 13119                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13120  006386  0102               	movlb	2	; () banked
 13121  006388  9303               	bcf	(_loRa+3)& (0+255),1,b
 13122  00638A                     l14078:
 13123                           
 13124                           ; BSR set to: 2
 13125                           ;lorawan.c: 2010: }
 13126                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13127  00638A  0E02               	movlw	2
 13128  00638C  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13129  00638E  A4D8               	btfss	status,2,c
 13130  006390  0012               	return	
 13131                           
 13132                           ; BSR set to: 2
 13133                           ;lorawan.c: 2013: {
 13134                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13135  006392  5102               	movf	(_loRa+2)& (0+255),w,b
 13136  006394  0BF0               	andlw	-16
 13137  006396  0909               	iorlw	9
 13138  006398  6F02               	movwf	(_loRa+2)& (0+255),b
 13139                           
 13140                           ; BSR set to: 2
 13141                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13142  00639A  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13143  00639E                     __end_of_SetReceptionNotOkState:
 13144                           	opt stack 0
 13145                           tosu	equ	0xFFF
 13146                           tosh	equ	0xFFE
 13147                           tosl	equ	0xFFD
 13148                           pclath	equ	0xFFA
 13149                           tblptru	equ	0xFF8
 13150                           tblptrh	equ	0xFF7
 13151                           tblptrl	equ	0xFF6
 13152                           tablat	equ	0xFF5
 13153                           prodh	equ	0xFF4
 13154                           prodl	equ	0xFF3
 13155                           intcon	equ	0xFF2
 13156                           intcon2	equ	0xFF1
 13157                           intcon3	equ	0xFF0
 13158                           postinc0	equ	0xFEE
 13159                           wreg	equ	0xFE8
 13160                           postinc1	equ	0xFE6
 13161                           postdec1	equ	0xFE5
 13162                           plusw1	equ	0xFE3
 13163                           fsr1h	equ	0xFE2
 13164                           fsr1l	equ	0xFE1
 13165                           indf2	equ	0xFDF
 13166                           postinc2	equ	0xFDE
 13167                           postdec2	equ	0xFDD
 13168                           fsr2h	equ	0xFDA
 13169                           fsr2l	equ	0xFD9
 13170                           status	equ	0xFD8
 13171                           
 13172 ;; *************** function _SetJoinFailState *****************
 13173 ;; Defined at:
 13174 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : F/2
 13185 ;;		On exit  : F/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    8
 13195 ;; This function calls:
 13196 ;;		_RxJoinResponse
 13197 ;; This function is called by:
 13198 ;;		_LORAWAN_RxTimeout
 13199 ;;		_LORAWAN_RxDone
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	text68
 13204  007356                     __ptext68:
 13205                           	opt stack 0
 13206  007356                     _SetJoinFailState:
 13207                           	opt stack 18
 13208                           
 13209                           ; BSR set to: 2
 13210                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13211                           
 13212                           ;incstack = 0
 13213  007356  9902               	bcf	(_loRa+2)& (0+255),4,b
 13214                           
 13215                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13216  007358  9500               	bcf	_loRa& (0+255),2,b
 13217                           
 13218                           ; BSR set to: 2
 13219                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13220  00735A  0EF0               	movlw	-16
 13221  00735C  1702               	andwf	(_loRa+2)& (0+255),f,b
 13222                           
 13223                           ; BSR set to: 2
 13224                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13225  00735E  0100               	movlb	0	; () banked
 13226  007360  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13227  007362  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
 13228  007364  B4D8               	btfsc	status,2,c
 13229  007366  0012               	return	
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;lorawan.c: 1110: {
 13233                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13234  007368  0005               	push	
 13235  00736A  6EFA               	movwf	pclath,c
 13236  00736C  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13237  00736E  6EFD               	movwf	tosl,c
 13238  007370  51EB               	movf	(_rxPayload+3)& (0+255),w,b
 13239  007372  6EFE               	movwf	tosh,c
 13240  007374  6AFF               	clrf	tosu,c
 13241  007376  50FA               	movf	pclath,w,c
 13242  007378  0C00               	retlw	0	;indir
 13243  00737A                     __end_of_SetJoinFailState:
 13244                           	opt stack 0
 13245                           tosu	equ	0xFFF
 13246                           tosh	equ	0xFFE
 13247                           tosl	equ	0xFFD
 13248                           pclath	equ	0xFFA
 13249                           tblptru	equ	0xFF8
 13250                           tblptrh	equ	0xFF7
 13251                           tblptrl	equ	0xFF6
 13252                           tablat	equ	0xFF5
 13253                           prodh	equ	0xFF4
 13254                           prodl	equ	0xFF3
 13255                           intcon	equ	0xFF2
 13256                           intcon2	equ	0xFF1
 13257                           intcon3	equ	0xFF0
 13258                           postinc0	equ	0xFEE
 13259                           wreg	equ	0xFE8
 13260                           postinc1	equ	0xFE6
 13261                           postdec1	equ	0xFE5
 13262                           plusw1	equ	0xFE3
 13263                           fsr1h	equ	0xFE2
 13264                           fsr1l	equ	0xFE1
 13265                           indf2	equ	0xFDF
 13266                           postinc2	equ	0xFDE
 13267                           postdec2	equ	0xFDD
 13268                           fsr2h	equ	0xFDA
 13269                           fsr2l	equ	0xFD9
 13270                           status	equ	0xFD8
 13271                           
 13272 ;; *************** function _RxJoinResponse *****************
 13273 ;; Defined at:
 13274 ;;		line 119 in file "main.c"
 13275 ;; Parameters:    Size  Location     Type
 13276 ;;  status          1    wreg     unsigned char 
 13277 ;; Auto vars:     Size  Location     Type
 13278 ;;  status          1    0[COMRAM] unsigned char 
 13279 ;; Return value:  Size  Location     Type
 13280 ;;                  1    wreg      void 
 13281 ;; Registers used:
 13282 ;;		wreg
 13283 ;; Tracked objects:
 13284 ;;		On entry : F/0
 13285 ;;		On exit  : F/0
 13286 ;;		Unchanged: F/0
 13287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13292 ;;Total ram usage:        0 bytes
 13293 ;; Hardware stack levels used:    1
 13294 ;; Hardware stack levels required when called:    7
 13295 ;; This function calls:
 13296 ;;		Nothing
 13297 ;; This function is called by:
 13298 ;;		_main
 13299 ;;		_SetJoinFailState
 13300 ;;		_UpdateJoinSuccessState
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           	psect	text69
 13305  007944                     __ptext69:
 13306                           	opt stack 0
 13307  007944                     _RxJoinResponse:
 13308                           	opt stack 20
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;main.c: 121: PORTCbits.RC5 = 0;
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;incstack = 0
 13315  007944  9A82               	bcf	3970,5,c	;volatile
 13316                           
 13317                           ; BSR set to: 0
 13318  007946  0012               	return		;funcret
 13319  007948                     __end_of_RxJoinResponse:
 13320                           	opt stack 0
 13321                           tosu	equ	0xFFF
 13322                           tosh	equ	0xFFE
 13323                           tosl	equ	0xFFD
 13324                           pclath	equ	0xFFA
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           intcon	equ	0xFF2
 13332                           intcon2	equ	0xFF1
 13333                           intcon3	equ	0xFF0
 13334                           postinc0	equ	0xFEE
 13335                           wreg	equ	0xFE8
 13336                           postinc1	equ	0xFE6
 13337                           postdec1	equ	0xFE5
 13338                           plusw1	equ	0xFE3
 13339                           fsr1h	equ	0xFE2
 13340                           fsr1l	equ	0xFE1
 13341                           indf2	equ	0xFDF
 13342                           postinc2	equ	0xFDE
 13343                           postdec2	equ	0xFDD
 13344                           fsr2h	equ	0xFDA
 13345                           fsr2l	equ	0xFD9
 13346                           status	equ	0xFD8
 13347                           
 13348 ;; *************** function _MacExecuteCommands *****************
 13349 ;; Defined at:
 13350 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 13353 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13354 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 13355 ;; Auto vars:     Size  Location     Type
 13356 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 13357 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13358 ;;  done            1   31[BANK0 ] unsigned char 
 13359 ;; Return value:  Size  Location     Type
 13360 ;;                  2   26[BANK0 ] PTR unsigned char 
 13361 ;; Registers used:
 13362 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13363 ;; Tracked objects:
 13364 ;;		On entry : F/0
 13365 ;;		On exit  : F/0
 13366 ;;		Unchanged: 0/0
 13367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13368 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13370 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13371 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13372 ;;Total ram usage:        8 bytes
 13373 ;; Hardware stack levels used:    1
 13374 ;; Hardware stack levels required when called:   11
 13375 ;; This function calls:
 13376 ;;		_ExecuteDevStatus
 13377 ;;		_ExecuteDutyCycle
 13378 ;;		_ExecuteLinkAdr
 13379 ;;		_ExecuteLinkCheck
 13380 ;;		_ExecuteNewChannel
 13381 ;;		_ExecuteRxParamSetupReq
 13382 ;;		_ExecuteRxTimingSetup
 13383 ;; This function is called by:
 13384 ;;		_LORAWAN_RxDone
 13385 ;; This function uses a non-reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text70
 13389  002DD4                     __ptext70:
 13390                           	opt stack 0
 13391  002DD4                     _MacExecuteCommands:
 13392                           	opt stack 15
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;lorawan.c: 1577: bool done = 0;
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;incstack = 0
 13399  002DD4  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;lorawan.c: 1578: uint8_t *ptr;
 13403                           ;lorawan.c: 1579: ptr = buffer;
 13404  002DD6  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13405  002DDA  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13406                           
 13407                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13408  002DDE  D0DE               	goto	l14140
 13409  002DE0                     l14104:
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;lorawan.c: 1581: {
 13413                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13414  002DE0  0102               	movlb	2	; () banked
 13415  002DE2  51A7               	movf	(_loRa+167)& (0+255),w,b
 13416  002DE4  0D02               	mullw	2
 13417  002DE6  0EA9               	movlw	low (_loRa+169)
 13418  002DE8  24F3               	addwf	prodl,w,c
 13419  002DEA  6ED9               	movwf	fsr2l,c
 13420  002DEC  0E02               	movlw	high (_loRa+169)
 13421  002DEE  20F4               	addwfc	prodh,w,c
 13422  002DF0  6EDA               	movwf	fsr2h,c
 13423  002DF2  90DF               	bcf	indf2,0,c
 13424                           
 13425                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13426  002DF4  51A7               	movf	(_loRa+167)& (0+255),w,b
 13427  002DF6  0D02               	mullw	2
 13428  002DF8  0EA9               	movlw	low (_loRa+169)
 13429  002DFA  24F3               	addwf	prodl,w,c
 13430  002DFC  6ED9               	movwf	fsr2l,c
 13431  002DFE  0E02               	movlw	high (_loRa+169)
 13432  002E00  20F4               	addwfc	prodh,w,c
 13433  002E02  6EDA               	movwf	fsr2h,c
 13434  002E04  92DF               	bcf	indf2,1,c
 13435                           
 13436                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13437  002E06  51A7               	movf	(_loRa+167)& (0+255),w,b
 13438  002E08  0D02               	mullw	2
 13439  002E0A  0EA9               	movlw	low (_loRa+169)
 13440  002E0C  24F3               	addwf	prodl,w,c
 13441  002E0E  6ED9               	movwf	fsr2l,c
 13442  002E10  0E02               	movlw	high (_loRa+169)
 13443  002E12  20F4               	addwfc	prodh,w,c
 13444  002E14  6EDA               	movwf	fsr2h,c
 13445  002E16  94DF               	bcf	indf2,2,c
 13446                           
 13447                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13448  002E18  51A7               	movf	(_loRa+167)& (0+255),w,b
 13449  002E1A  0D02               	mullw	2
 13450  002E1C  0EA9               	movlw	low (_loRa+169)
 13451  002E1E  24F3               	addwf	prodl,w,c
 13452  002E20  6ED9               	movwf	fsr2l,c
 13453  002E22  0E02               	movlw	high (_loRa+169)
 13454  002E24  20F4               	addwfc	prodh,w,c
 13455  002E26  6EDA               	movwf	fsr2h,c
 13456  002E28  96DF               	bcf	indf2,3,c
 13457                           
 13458                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13459  002E2A  51A7               	movf	(_loRa+167)& (0+255),w,b
 13460  002E2C  0D02               	mullw	2
 13461  002E2E  0EA9               	movlw	low (_loRa+169)
 13462  002E30  24F3               	addwf	prodl,w,c
 13463  002E32  6ED9               	movwf	fsr2l,c
 13464  002E34  0E02               	movlw	high (_loRa+169)
 13465  002E36  20F4               	addwfc	prodh,w,c
 13466  002E38  6EDA               	movwf	fsr2h,c
 13467  002E3A  98DF               	bcf	indf2,4,c
 13468                           
 13469                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13470  002E3C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13471  002E3E  0D02               	mullw	2
 13472  002E40  0EA9               	movlw	low (_loRa+169)
 13473  002E42  24F3               	addwf	prodl,w,c
 13474  002E44  6ED9               	movwf	fsr2l,c
 13475  002E46  0E02               	movlw	high (_loRa+169)
 13476  002E48  20F4               	addwfc	prodh,w,c
 13477  002E4A  6EDA               	movwf	fsr2h,c
 13478  002E4C  9ADF               	bcf	indf2,5,c
 13479                           
 13480                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13481  002E4E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13482  002E50  0D02               	mullw	2
 13483  002E52  0EA9               	movlw	low (_loRa+169)
 13484  002E54  24F3               	addwf	prodl,w,c
 13485  002E56  6ED9               	movwf	fsr2l,c
 13486  002E58  0E02               	movlw	high (_loRa+169)
 13487  002E5A  20F4               	addwfc	prodh,w,c
 13488  002E5C  6EDA               	movwf	fsr2h,c
 13489  002E5E  9CDF               	bcf	indf2,6,c
 13490                           
 13491                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13492  002E60  51A7               	movf	(_loRa+167)& (0+255),w,b
 13493  002E62  0D02               	mullw	2
 13494  002E64  0EA9               	movlw	low (_loRa+169)
 13495  002E66  24F3               	addwf	prodl,w,c
 13496  002E68  6ED9               	movwf	fsr2l,c
 13497  002E6A  0E02               	movlw	high (_loRa+169)
 13498  002E6C  20F4               	addwfc	prodh,w,c
 13499  002E6E  6EDA               	movwf	fsr2h,c
 13500  002E70  9EDF               	bcf	indf2,7,c
 13501                           
 13502                           ; BSR set to: 2
 13503                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13504  002E72  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13505  002E76  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13506  002E7A  51A7               	movf	(_loRa+167)& (0+255),w,b
 13507  002E7C  0D02               	mullw	2
 13508  002E7E  0EA8               	movlw	low (_loRa+168)
 13509  002E80  24F3               	addwf	prodl,w,c
 13510  002E82  6EE9               	movwf	fsr0l,c
 13511  002E84  0E02               	movlw	high (_loRa+168)
 13512  002E86  20F4               	addwfc	prodh,w,c
 13513  002E88  6EEA               	movwf	fsr0h,c
 13514  002E8A  CFDF FFEF          	movff	indf2,indf0
 13515                           
 13516                           ;lorawan.c: 1595: switch (*ptr ++)
 13517  002E8E  D060               	goto	l14132
 13518  002E90                     l14108:
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;lorawan.c: 1598: {
 13522                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13523  002E90  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13524  002E94  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13525  002E98  EC3D  F038         	call	_ExecuteLinkCheck
 13526  002E9C  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13527  002EA0  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13528  002EA4                     l14110:
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13532  002EA4  0102               	movlb	2	; () banked
 13533  002EA6  51A7               	movf	(_loRa+167)& (0+255),w,b
 13534  002EA8  0D02               	mullw	2
 13535  002EAA  0EA8               	movlw	low (_loRa+168)
 13536  002EAC  24F3               	addwf	prodl,w,c
 13537  002EAE  6ED9               	movwf	fsr2l,c
 13538  002EB0  0E02               	movlw	high (_loRa+168)
 13539  002EB2  20F4               	addwfc	prodh,w,c
 13540  002EB4  6EDA               	movwf	fsr2h,c
 13541  002EB6  68DF               	setf	indf2,c
 13542                           
 13543                           ;lorawan.c: 1602: } break;
 13544  002EB8  D062               	goto	l14134
 13545  002EBA                     l14112:
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;lorawan.c: 1605: {
 13549                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13550  002EBA  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13551  002EBE  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13552  002EC2  EC9E  F01A         	call	_ExecuteLinkAdr	;wreg free
 13553  002EC6  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13554  002ECA  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13555                           
 13556                           ;lorawan.c: 1607: } break;
 13557  002ECE  D057               	goto	l14134
 13558  002ED0                     l14114:
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;lorawan.c: 1610: {
 13562                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13563  002ED0  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13564  002ED4  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13565  002ED8  ECBB  F034         	call	_ExecuteDutyCycle	;wreg free
 13566  002EDC  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13567  002EE0  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13568                           
 13569                           ;lorawan.c: 1612: } break;
 13570  002EE4  D04C               	goto	l14134
 13571  002EE6                     l14116:
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;lorawan.c: 1615: {
 13575                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13576  002EE6  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13577  002EEA  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13578  002EEE  EC54  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 13579  002EF2  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13580  002EF6  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13581                           
 13582                           ;lorawan.c: 1617: } break;
 13583  002EFA  D041               	goto	l14134
 13584  002EFC                     l14118:
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;lorawan.c: 1620: {
 13588                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13589  002EFC  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13590  002F00  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13591  002F04  EC34  F03C         	call	_ExecuteDevStatus	;wreg free
 13592  002F08  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13593  002F0C  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13594                           
 13595                           ;lorawan.c: 1622: } break;
 13596  002F10  D036               	goto	l14134
 13597  002F12                     l14120:
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;lorawan.c: 1625: {
 13601                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13602  002F12  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13603  002F16  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13604  002F1A  ECBD  F019         	call	_ExecuteNewChannel	;wreg free
 13605  002F1E  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13606  002F22  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13607                           
 13608                           ;lorawan.c: 1628: } break;
 13609  002F26  D02B               	goto	l14134
 13610  002F28                     l14122:
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;lorawan.c: 1631: {
 13614                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13615  002F28  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13616  002F2C  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13617  002F30  ECBD  F039         	call	_ExecuteRxTimingSetup	;wreg free
 13618  002F34  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13619  002F38  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13620                           
 13621                           ;lorawan.c: 1633: } break;
 13622  002F3C  D020               	goto	l14134
 13623  002F3E                     l14124:
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;lorawan.c: 1636: {
 13627                           ;lorawan.c: 1637: done = 1;
 13628  002F3E  0E01               	movlw	1
 13629  002F40  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13633  002F42  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13634  002F44  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13635  002F46  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 13636  002F48  0E00               	movlw	0
 13637  002F4A  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13638  002F4C  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13639  002F4E  D7AA               	goto	l14110
 13640  002F50                     l14132:
 13641                           
 13642                           ; BSR set to: 2
 13643  002F50  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13644  002F54  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13645  002F58  0100               	movlb	0	; () banked
 13646  002F5A  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13647  002F5C  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13648  002F5E  50DF               	movf	indf2,w,c
 13649                           
 13650                           ; Switch size 1, requested type "speed"
 13651                           ; Number of cases is 7, Range of values is 2 to 8
 13652                           ; switch strategies available:
 13653                           ; Name         Instructions Cycles
 13654                           ; simple_byte           22    12 (average)
 13655                           ;	Chosen strategy is simple_byte
 13656  002F60  0A02               	xorlw	2	; case 2
 13657  002F62  E096               	bz	l14108
 13658  002F64  0A01               	xorlw	1	; case 3
 13659  002F66  E0A9               	bz	l14112
 13660  002F68  0A07               	xorlw	7	; case 4
 13661  002F6A  E0B2               	bz	l14114
 13662  002F6C  0A01               	xorlw	1	; case 5
 13663  002F6E  E0BB               	bz	l14116
 13664  002F70  0A03               	xorlw	3	; case 6
 13665  002F72  E0C4               	bz	l14118
 13666  002F74  0A01               	xorlw	1	; case 7
 13667  002F76  E0CD               	bz	l14120
 13668  002F78  0A0F               	xorlw	15	; case 8
 13669  002F7A  E0D6               	bz	l14122
 13670  002F7C  D7E0               	goto	l14124
 13671  002F7E                     l14134:
 13672                           
 13673                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13674                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13675  002F7E  0102               	movlb	2	; () banked
 13676  002F80  51A7               	movf	(_loRa+167)& (0+255),w,b
 13677  002F82  0D02               	mullw	2
 13678  002F84  0EA8               	movlw	low (_loRa+168)
 13679  002F86  24F3               	addwf	prodl,w,c
 13680  002F88  6ED9               	movwf	fsr2l,c
 13681  002F8A  0E02               	movlw	high (_loRa+168)
 13682  002F8C  20F4               	addwfc	prodh,w,c
 13683  002F8E  6EDA               	movwf	fsr2h,c
 13684  002F90  28DE               	incf	postinc2,w,c
 13685  002F92  E004               	bz	l14140
 13686                           
 13687                           ; BSR set to: 2
 13688  002F94  0E10               	movlw	16
 13689  002F96  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13690  002F98  D001               	goto	l14140
 13691                           
 13692                           ; BSR set to: 2
 13693                           ;lorawan.c: 1645: {
 13694                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13695  002F9A  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13696  002F9C                     l14140:
 13697  002F9C  0100               	movlb	0	; () banked
 13698  002F9E  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13699  002FA0  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13700  002FA2  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 13701  002FA4  0E00               	movlw	0
 13702  002FA6  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13703  002FA8  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13704  002FAA  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 13705  002FAC  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13706  002FAE  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13707  002FB0  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13708  002FB2  E203               	bc	l14144
 13709                           
 13710                           ; BSR set to: 0
 13711  002FB4  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 13712  002FB6  E101 D713          	bz	l14104
 13713  002FBA                     l14144:
 13714                           
 13715                           ; BSR set to: 0
 13716                           ;lorawan.c: 1647: }
 13717                           ;lorawan.c: 1648: }
 13718                           ;lorawan.c: 1649: return ptr;
 13719  002FBA  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13720  002FBE  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13721                           
 13722                           ; BSR set to: 0
 13723  002FC2  0012               	return		;funcret
 13724  002FC4                     __end_of_MacExecuteCommands:
 13725                           	opt stack 0
 13726                           tosu	equ	0xFFF
 13727                           tosh	equ	0xFFE
 13728                           tosl	equ	0xFFD
 13729                           pclath	equ	0xFFA
 13730                           tblptru	equ	0xFF8
 13731                           tblptrh	equ	0xFF7
 13732                           tblptrl	equ	0xFF6
 13733                           tablat	equ	0xFF5
 13734                           prodh	equ	0xFF4
 13735                           prodl	equ	0xFF3
 13736                           intcon	equ	0xFF2
 13737                           intcon2	equ	0xFF1
 13738                           intcon3	equ	0xFF0
 13739                           indf0	equ	0xFEF
 13740                           postinc0	equ	0xFEE
 13741                           fsr0h	equ	0xFEA
 13742                           fsr0l	equ	0xFE9
 13743                           wreg	equ	0xFE8
 13744                           postinc1	equ	0xFE6
 13745                           postdec1	equ	0xFE5
 13746                           plusw1	equ	0xFE3
 13747                           fsr1h	equ	0xFE2
 13748                           fsr1l	equ	0xFE1
 13749                           indf2	equ	0xFDF
 13750                           postinc2	equ	0xFDE
 13751                           postdec2	equ	0xFDD
 13752                           fsr2h	equ	0xFDA
 13753                           fsr2l	equ	0xFD9
 13754                           status	equ	0xFD8
 13755                           
 13756 ;; *************** function _ExecuteRxTimingSetup *****************
 13757 ;; Defined at:
 13758 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13759 ;; Parameters:    Size  Location     Type
 13760 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 13761 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;  delay           1   11[BANK0 ] unsigned char 
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  2    9[BANK0 ] PTR unsigned char 
 13766 ;; Registers used:
 13767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13768 ;; Tracked objects:
 13769 ;;		On entry : F/0
 13770 ;;		On exit  : F/2
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13777 ;;Total ram usage:        3 bytes
 13778 ;; Hardware stack levels used:    1
 13779 ;; Hardware stack levels required when called:    8
 13780 ;; This function calls:
 13781 ;;		_UpdateReceiveDelays
 13782 ;; This function is called by:
 13783 ;;		_MacExecuteCommands
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	text71
 13788  00737A                     __ptext71:
 13789                           	opt stack 0
 13790  00737A                     _ExecuteRxTimingSetup:
 13791                           	opt stack 17
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;lorawan.c: 1661: uint8_t delay;
 13795                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;incstack = 0
 13799  00737A  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13800  00737E  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13801  007382  50DF               	movf	indf2,w,c
 13802  007384  0B0F               	andlw	15
 13803  007386  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;lorawan.c: 1664: ptr++;
 13807  007388  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13808  00738A  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13809                           
 13810                           ; BSR set to: 0
 13811                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13812  00738C  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13813  00738E  EC7D  F035         	call	_UpdateReceiveDelays
 13814                           
 13815                           ; BSR set to: 2
 13816                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13817  007392  8104               	bsf	(_loRa+4)& (0+255),0,b
 13818                           
 13819                           ; BSR set to: 2
 13820                           ;lorawan.c: 1669: return ptr;
 13821  007394  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13822  007398  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13823                           
 13824                           ; BSR set to: 2
 13825  00739C  0012               	return		;funcret
 13826  00739E                     __end_of_ExecuteRxTimingSetup:
 13827                           	opt stack 0
 13828                           tosu	equ	0xFFF
 13829                           tosh	equ	0xFFE
 13830                           tosl	equ	0xFFD
 13831                           pclath	equ	0xFFA
 13832                           tblptru	equ	0xFF8
 13833                           tblptrh	equ	0xFF7
 13834                           tblptrl	equ	0xFF6
 13835                           tablat	equ	0xFF5
 13836                           prodh	equ	0xFF4
 13837                           prodl	equ	0xFF3
 13838                           intcon	equ	0xFF2
 13839                           intcon2	equ	0xFF1
 13840                           intcon3	equ	0xFF0
 13841                           indf0	equ	0xFEF
 13842                           postinc0	equ	0xFEE
 13843                           fsr0h	equ	0xFEA
 13844                           fsr0l	equ	0xFE9
 13845                           wreg	equ	0xFE8
 13846                           postinc1	equ	0xFE6
 13847                           postdec1	equ	0xFE5
 13848                           plusw1	equ	0xFE3
 13849                           fsr1h	equ	0xFE2
 13850                           fsr1l	equ	0xFE1
 13851                           indf2	equ	0xFDF
 13852                           postinc2	equ	0xFDE
 13853                           postdec2	equ	0xFDD
 13854                           fsr2h	equ	0xFDA
 13855                           fsr2l	equ	0xFD9
 13856                           status	equ	0xFD8
 13857                           
 13858 ;; *************** function _UpdateReceiveDelays *****************
 13859 ;; Defined at:
 13860 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13861 ;; Parameters:    Size  Location     Type
 13862 ;;  delay           1    wreg     unsigned char 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  delay           1    8[BANK0 ] unsigned char 
 13865 ;; Return value:  Size  Location     Type
 13866 ;;                  1    wreg      void 
 13867 ;; Registers used:
 13868 ;;		wreg, status,2, status,0, prodl, prodh
 13869 ;; Tracked objects:
 13870 ;;		On entry : C/3
 13871 ;;		On exit  : F/2
 13872 ;;		Unchanged: 0/0
 13873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13877 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13878 ;;Total ram usage:        5 bytes
 13879 ;; Hardware stack levels used:    1
 13880 ;; Hardware stack levels required when called:    7
 13881 ;; This function calls:
 13882 ;;		Nothing
 13883 ;; This function is called by:
 13884 ;;		_LORAWAN_RxDone
 13885 ;;		_ExecuteRxTimingSetup
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           	psect	text72
 13890  006AFA                     __ptext72:
 13891                           	opt stack 0
 13892  006AFA                     _UpdateReceiveDelays:
 13893                           	opt stack 19
 13894                           
 13895                           ; BSR set to: 2
 13896                           ;incstack = 0
 13897                           ;UpdateReceiveDelays@delay stored from wreg
 13898  006AFA  0100               	movlb	0	; () banked
 13899  006AFC  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13900                           
 13901                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13902  006AFE  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13903  006B00  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 13904  006B02  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 13905  006B04  0EE8               	movlw	232
 13906  006B06  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13907  006B08  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 13908  006B0C  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 13909  006B10  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 13910  006B12  50F3               	movf	prodl,w,c
 13911  006B14  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13912  006B16  0E03               	movlw	3
 13913  006B18  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13914  006B1A  50F3               	movf	prodl,w,c
 13915  006B1C  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13916  006B1E  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 13917  006B22  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;lorawan.c: 2029: if (delay == 0)
 13921  006B26  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13922  006B28  E105               	bnz	l13180
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;lorawan.c: 2030: {
 13926                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13927  006B2A  0E03               	movlw	3
 13928  006B2C  0102               	movlb	2	; () banked
 13929  006B2E  6F95               	movwf	(_loRa+149)& (0+255),b
 13930  006B30  0EE8               	movlw	232
 13931  006B32  6F94               	movwf	(_loRa+148)& (0+255),b
 13932  006B34                     l13180:
 13933                           
 13934                           ;lorawan.c: 2032: }
 13935                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13936  006B34  0EE8               	movlw	232
 13937  006B36  0102               	movlb	2	; () banked
 13938  006B38  2594               	addwf	(_loRa+148)& (0+255),w,b
 13939  006B3A  6F96               	movwf	(_loRa+150)& (0+255),b
 13940  006B3C  0E03               	movlw	3
 13941  006B3E  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13942  006B40  6F97               	movwf	(_loRa+151)& (0+255),b
 13943                           
 13944                           ; BSR set to: 2
 13945  006B42  0012               	return		;funcret
 13946  006B44                     __end_of_UpdateReceiveDelays:
 13947                           	opt stack 0
 13948                           tosu	equ	0xFFF
 13949                           tosh	equ	0xFFE
 13950                           tosl	equ	0xFFD
 13951                           pclath	equ	0xFFA
 13952                           tblptru	equ	0xFF8
 13953                           tblptrh	equ	0xFF7
 13954                           tblptrl	equ	0xFF6
 13955                           tablat	equ	0xFF5
 13956                           prodh	equ	0xFF4
 13957                           prodl	equ	0xFF3
 13958                           intcon	equ	0xFF2
 13959                           intcon2	equ	0xFF1
 13960                           intcon3	equ	0xFF0
 13961                           indf0	equ	0xFEF
 13962                           postinc0	equ	0xFEE
 13963                           fsr0h	equ	0xFEA
 13964                           fsr0l	equ	0xFE9
 13965                           wreg	equ	0xFE8
 13966                           postinc1	equ	0xFE6
 13967                           postdec1	equ	0xFE5
 13968                           plusw1	equ	0xFE3
 13969                           fsr1h	equ	0xFE2
 13970                           fsr1l	equ	0xFE1
 13971                           indf2	equ	0xFDF
 13972                           postinc2	equ	0xFDE
 13973                           postdec2	equ	0xFDD
 13974                           fsr2h	equ	0xFDA
 13975                           fsr2l	equ	0xFD9
 13976                           status	equ	0xFD8
 13977                           
 13978 ;; *************** function _ExecuteRxParamSetupReq *****************
 13979 ;; Defined at:
 13980 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 13983 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;  frequency       4   18[BANK0 ] unsigned long 
 13986 ;;  dlSettings      1   22[BANK0 ] struct .
 13987 ;; Return value:  Size  Location     Type
 13988 ;;                  2   16[BANK0 ] PTR unsigned char 
 13989 ;; Registers used:
 13990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13991 ;; Tracked objects:
 13992 ;;		On entry : F/0
 13993 ;;		On exit  : F/2
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14000 ;;Total ram usage:        7 bytes
 14001 ;; Hardware stack levels used:    1
 14002 ;; Hardware stack levels required when called:    8
 14003 ;; This function calls:
 14004 ;;		_UpdateReceiveWindow2Parameters
 14005 ;;		_ValidateDataRate
 14006 ;;		_ValidateFrequency
 14007 ;;		_ValidateRxOffset
 14008 ;;		___lmul
 14009 ;; This function is called by:
 14010 ;;		_MacExecuteCommands
 14011 ;; This function uses a non-reentrant model
 14012 ;;
 14013                           
 14014                           	psect	text73
 14015  0042A8                     __ptext73:
 14016                           	opt stack 0
 14017  0042A8                     _ExecuteRxParamSetupReq:
 14018                           	opt stack 17
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14022                           
 14023                           ; BSR set to: 0
 14024                           
 14025                           ; BSR set to: 2
 14026                           ;incstack = 0
 14027  0042A8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14028  0042AC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14029  0042B0  50DF               	movf	indf2,w,c
 14030  0042B2  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14031                           
 14032                           ; BSR set to: 0
 14033  0042B4  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14034  0042B6  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14038  0042B8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14039  0042BC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14040  0042C0  0EFF               	movlw	255
 14041  0042C2  14DE               	andwf	postinc2,w,c
 14042  0042C4  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14043  0042C6  0EFF               	movlw	255
 14044  0042C8  14DE               	andwf	postinc2,w,c
 14045  0042CA  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14046  0042CC  0EFF               	movlw	255
 14047  0042CE  14DE               	andwf	postinc2,w,c
 14048  0042D0  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14049  0042D2  0E00               	movlw	0
 14050  0042D4  14DE               	andwf	postinc2,w,c
 14051  0042D6  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14055  0042D8  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14056  0042DC  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14057  0042E0  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14058  0042E4  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14059  0042E8  0E64               	movlw	100
 14060  0042EA  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14061  0042EC  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14062  0042EE  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14063  0042F0  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14064  0042F2  EC9C  F02E         	call	___lmul	;wreg free
 14065  0042F6  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14066  0042FA  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14067  0042FE  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14068  004302  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14072  004306  0E03               	movlw	3
 14073  004308  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14074  00430A  0E00               	movlw	0
 14075  00430C  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14079  00430E  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14080  004312  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14081  004316  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14082  00431A  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14083  00431E  ECBA  F033         	call	_ValidateFrequency	;wreg free
 14084  004322  0900               	iorlw	0
 14085  004324  E10A               	bnz	l13624
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;lorawan_eu.c: 754: {
 14089                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14090  004326  0102               	movlb	2	; () banked
 14091  004328  51A7               	movf	(_loRa+167)& (0+255),w,b
 14092  00432A  0D02               	mullw	2
 14093  00432C  0EA9               	movlw	low (_loRa+169)
 14094  00432E  24F3               	addwf	prodl,w,c
 14095  004330  6ED9               	movwf	fsr2l,c
 14096  004332  0E02               	movlw	high (_loRa+169)
 14097  004334  20F4               	addwfc	prodh,w,c
 14098  004336  6EDA               	movwf	fsr2h,c
 14099  004338  86DF               	bsf	indf2,3,c
 14100  00433A                     l13624:
 14101                           
 14102                           ;lorawan_eu.c: 756: }
 14103                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14104  00433A  0100               	movlb	0	; () banked
 14105  00433C  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14106  00433E  0B0F               	andlw	15
 14107  004340  EC8E  F03B         	call	_ValidateDataRate
 14108  004344  0900               	iorlw	0
 14109  004346  E10A               	bnz	l13628
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;lorawan_eu.c: 759: {
 14113                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14114  004348  0102               	movlb	2	; () banked
 14115  00434A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14116  00434C  0D02               	mullw	2
 14117  00434E  0EA9               	movlw	low (_loRa+169)
 14118  004350  24F3               	addwf	prodl,w,c
 14119  004352  6ED9               	movwf	fsr2l,c
 14120  004354  0E02               	movlw	high (_loRa+169)
 14121  004356  20F4               	addwfc	prodh,w,c
 14122  004358  6EDA               	movwf	fsr2h,c
 14123  00435A  88DF               	bsf	indf2,4,c
 14124  00435C                     l13628:
 14125                           
 14126                           ;lorawan_eu.c: 761: }
 14127                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14128  00435C  0100               	movlb	0	; () banked
 14129  00435E  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14130  004360  0B07               	andlw	7
 14131  004362  EC84  F03B         	call	_ValidateRxOffset
 14132  004366  0900               	iorlw	0
 14133  004368  E10A               	bnz	l1127
 14134                           
 14135                           ; BSR set to: 0
 14136                           ;lorawan_eu.c: 764: {
 14137                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14138  00436A  0102               	movlb	2	; () banked
 14139  00436C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14140  00436E  0D02               	mullw	2
 14141  004370  0EA9               	movlw	low (_loRa+169)
 14142  004372  24F3               	addwf	prodl,w,c
 14143  004374  6ED9               	movwf	fsr2l,c
 14144  004376  0E02               	movlw	high (_loRa+169)
 14145  004378  20F4               	addwfc	prodh,w,c
 14146  00437A  6EDA               	movwf	fsr2h,c
 14147  00437C  8ADF               	bsf	indf2,5,c
 14148  00437E                     l1127:
 14149                           
 14150                           ;lorawan_eu.c: 766: }
 14151                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14152  00437E  0102               	movlb	2	; () banked
 14153  004380  51A7               	movf	(_loRa+167)& (0+255),w,b
 14154  004382  0D02               	mullw	2
 14155  004384  0EA9               	movlw	low (_loRa+169)
 14156  004386  24F3               	addwf	prodl,w,c
 14157  004388  6ED9               	movwf	fsr2l,c
 14158  00438A  0E02               	movlw	high (_loRa+169)
 14159  00438C  20F4               	addwfc	prodh,w,c
 14160  00438E  6EDA               	movwf	fsr2h,c
 14161  004390  A8DF               	btfss	indf2,4,c
 14162  004392  D029               	goto	l13642
 14163                           
 14164                           ; BSR set to: 2
 14165  004394  51A7               	movf	(_loRa+167)& (0+255),w,b
 14166  004396  0D02               	mullw	2
 14167  004398  0EA9               	movlw	low (_loRa+169)
 14168  00439A  24F3               	addwf	prodl,w,c
 14169  00439C  6ED9               	movwf	fsr2l,c
 14170  00439E  0E02               	movlw	high (_loRa+169)
 14171  0043A0  20F4               	addwfc	prodh,w,c
 14172  0043A2  6EDA               	movwf	fsr2h,c
 14173  0043A4  A6DF               	btfss	indf2,3,c
 14174  0043A6  D01F               	goto	l13642
 14175                           
 14176                           ; BSR set to: 2
 14177  0043A8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14178  0043AA  0D02               	mullw	2
 14179  0043AC  0EA9               	movlw	low (_loRa+169)
 14180  0043AE  24F3               	addwf	prodl,w,c
 14181  0043B0  6ED9               	movwf	fsr2l,c
 14182  0043B2  0E02               	movlw	high (_loRa+169)
 14183  0043B4  20F4               	addwfc	prodh,w,c
 14184  0043B6  6EDA               	movwf	fsr2h,c
 14185  0043B8  AADF               	btfss	indf2,5,c
 14186  0043BA  D015               	goto	l13642
 14187                           
 14188                           ; BSR set to: 2
 14189                           ;lorawan_eu.c: 769: {
 14190                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14191  0043BC  0100               	movlb	0	; () banked
 14192  0043BE  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14193  0043C0  0B07               	andlw	7
 14194  0043C2  0102               	movlb	2	; () banked
 14195  0043C4  6FEF               	movwf	(_loRa+239)& (0+255),b
 14196                           
 14197                           ; BSR set to: 2
 14198                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14199  0043C6  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14200  0043CA  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14201  0043CE  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14202  0043D2  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14203  0043D6  0100               	movlb	0	; () banked
 14204  0043D8  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14205  0043DA  0B0F               	andlw	15
 14206  0043DC  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14207  0043DE  EC6E  F03B         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14211  0043E2  0102               	movlb	2	; () banked
 14212  0043E4  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14213  0043E6                     l13642:
 14214                           
 14215                           ; BSR set to: 2
 14216                           ;lorawan_eu.c: 773: }
 14217                           ;lorawan_eu.c: 775: return ptr;
 14218  0043E6  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14219  0043EA  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14220                           
 14221                           ; BSR set to: 2
 14222  0043EE  0012               	return		;funcret
 14223  0043F0                     __end_of_ExecuteRxParamSetupReq:
 14224                           	opt stack 0
 14225                           tosu	equ	0xFFF
 14226                           tosh	equ	0xFFE
 14227                           tosl	equ	0xFFD
 14228                           pclath	equ	0xFFA
 14229                           tblptru	equ	0xFF8
 14230                           tblptrh	equ	0xFF7
 14231                           tblptrl	equ	0xFF6
 14232                           tablat	equ	0xFF5
 14233                           prodh	equ	0xFF4
 14234                           prodl	equ	0xFF3
 14235                           intcon	equ	0xFF2
 14236                           intcon2	equ	0xFF1
 14237                           intcon3	equ	0xFF0
 14238                           indf0	equ	0xFEF
 14239                           postinc0	equ	0xFEE
 14240                           fsr0h	equ	0xFEA
 14241                           fsr0l	equ	0xFE9
 14242                           wreg	equ	0xFE8
 14243                           postinc1	equ	0xFE6
 14244                           postdec1	equ	0xFE5
 14245                           plusw1	equ	0xFE3
 14246                           fsr1h	equ	0xFE2
 14247                           fsr1l	equ	0xFE1
 14248                           indf2	equ	0xFDF
 14249                           postinc2	equ	0xFDE
 14250                           postdec2	equ	0xFDD
 14251                           fsr2h	equ	0xFDA
 14252                           fsr2l	equ	0xFD9
 14253                           status	equ	0xFD8
 14254                           
 14255 ;; *************** function _ValidateRxOffset *****************
 14256 ;; Defined at:
 14257 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;  rxOffset        1    wreg     unsigned char 
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 14262 ;;  result          1    5[BANK0 ] enum E8016
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  1    wreg      enum E8016
 14265 ;; Registers used:
 14266 ;;		wreg, status,2, status,0
 14267 ;; Tracked objects:
 14268 ;;		On entry : F/0
 14269 ;;		On exit  : F/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14276 ;;Total ram usage:        2 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; Hardware stack levels required when called:    7
 14279 ;; This function calls:
 14280 ;;		Nothing
 14281 ;; This function is called by:
 14282 ;;		_ExecuteRxParamSetupReq
 14283 ;; This function uses a non-reentrant model
 14284 ;;
 14285                           
 14286                           	psect	text74
 14287  007708                     __ptext74:
 14288                           	opt stack 0
 14289  007708                     _ValidateRxOffset:
 14290                           	opt stack 17
 14291                           
 14292                           ; BSR set to: 2
 14293                           ;incstack = 0
 14294                           ;ValidateRxOffset@rxOffset stored from wreg
 14295  007708  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14296                           
 14297                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14298  00770A  0100               	movlb	0	; () banked
 14299  00770C  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14303  00770E  0E05               	movlw	5
 14304  007710  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14305  007712  D002               	goto	l1223
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;lorawan_eu.c: 1081: {
 14309                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14310  007714  0E03               	movlw	3
 14311  007716  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 14312  007718                     l1223:
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;lorawan_eu.c: 1083: }
 14316                           ;lorawan_eu.c: 1085: return result;
 14317  007718  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 14318                           
 14319                           ; BSR set to: 0
 14320  00771A  0012               	return		;funcret
 14321  00771C                     __end_of_ValidateRxOffset:
 14322                           	opt stack 0
 14323                           tosu	equ	0xFFF
 14324                           tosh	equ	0xFFE
 14325                           tosl	equ	0xFFD
 14326                           pclath	equ	0xFFA
 14327                           tblptru	equ	0xFF8
 14328                           tblptrh	equ	0xFF7
 14329                           tblptrl	equ	0xFF6
 14330                           tablat	equ	0xFF5
 14331                           prodh	equ	0xFF4
 14332                           prodl	equ	0xFF3
 14333                           intcon	equ	0xFF2
 14334                           intcon2	equ	0xFF1
 14335                           intcon3	equ	0xFF0
 14336                           indf0	equ	0xFEF
 14337                           postinc0	equ	0xFEE
 14338                           fsr0h	equ	0xFEA
 14339                           fsr0l	equ	0xFE9
 14340                           wreg	equ	0xFE8
 14341                           postinc1	equ	0xFE6
 14342                           postdec1	equ	0xFE5
 14343                           plusw1	equ	0xFE3
 14344                           fsr1h	equ	0xFE2
 14345                           fsr1l	equ	0xFE1
 14346                           indf2	equ	0xFDF
 14347                           postinc2	equ	0xFDE
 14348                           postdec2	equ	0xFDD
 14349                           fsr2h	equ	0xFDA
 14350                           fsr2l	equ	0xFD9
 14351                           status	equ	0xFD8
 14352                           
 14353 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14354 ;; Defined at:
 14355 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14356 ;; Parameters:    Size  Location     Type
 14357 ;;  frequency       4    4[BANK0 ] unsigned long 
 14358 ;;  dataRate        1    8[BANK0 ] unsigned char 
 14359 ;; Auto vars:     Size  Location     Type
 14360 ;;		None
 14361 ;; Return value:  Size  Location     Type
 14362 ;;                  1    wreg      void 
 14363 ;; Registers used:
 14364 ;;		None
 14365 ;; Tracked objects:
 14366 ;;		On entry : F/0
 14367 ;;		On exit  : F/0
 14368 ;;		Unchanged: F/0
 14369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14370 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14374 ;;Total ram usage:        5 bytes
 14375 ;; Hardware stack levels used:    1
 14376 ;; Hardware stack levels required when called:    7
 14377 ;; This function calls:
 14378 ;;		Nothing
 14379 ;; This function is called by:
 14380 ;;		_ExecuteRxParamSetupReq
 14381 ;; This function uses a non-reentrant model
 14382 ;;
 14383                           
 14384                           	psect	text75
 14385  0076DC                     __ptext75:
 14386                           	opt stack 0
 14387  0076DC                     _UpdateReceiveWindow2Parameters:
 14388                           	opt stack 17
 14389                           
 14390                           ; BSR set to: 0
 14391                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;incstack = 0
 14395  0076DC  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14396                           
 14397                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14398  0076E0  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14399  0076E4  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14400  0076E8  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14401  0076EC  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14402                           
 14403                           ; BSR set to: 0
 14404  0076F0  0012               	return		;funcret
 14405  0076F2                     __end_of_UpdateReceiveWindow2Parameters:
 14406                           	opt stack 0
 14407                           tosu	equ	0xFFF
 14408                           tosh	equ	0xFFE
 14409                           tosl	equ	0xFFD
 14410                           pclath	equ	0xFFA
 14411                           tblptru	equ	0xFF8
 14412                           tblptrh	equ	0xFF7
 14413                           tblptrl	equ	0xFF6
 14414                           tablat	equ	0xFF5
 14415                           prodh	equ	0xFF4
 14416                           prodl	equ	0xFF3
 14417                           intcon	equ	0xFF2
 14418                           intcon2	equ	0xFF1
 14419                           intcon3	equ	0xFF0
 14420                           indf0	equ	0xFEF
 14421                           postinc0	equ	0xFEE
 14422                           fsr0h	equ	0xFEA
 14423                           fsr0l	equ	0xFE9
 14424                           wreg	equ	0xFE8
 14425                           postinc1	equ	0xFE6
 14426                           postdec1	equ	0xFE5
 14427                           plusw1	equ	0xFE3
 14428                           fsr1h	equ	0xFE2
 14429                           fsr1l	equ	0xFE1
 14430                           indf2	equ	0xFDF
 14431                           postinc2	equ	0xFDE
 14432                           postdec2	equ	0xFDD
 14433                           fsr2h	equ	0xFDA
 14434                           fsr2l	equ	0xFD9
 14435                           status	equ	0xFD8
 14436                           
 14437 ;; *************** function _ExecuteNewChannel *****************
 14438 ;; Defined at:
 14439 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14442 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;  frequency       4   19[BANK0 ] unsigned long 
 14445 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 14446 ;;  drRange         1   18[BANK0 ] struct .
 14447 ;; Return value:  Size  Location     Type
 14448 ;;                  2   16[BANK0 ] PTR unsigned char 
 14449 ;; Registers used:
 14450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14451 ;; Tracked objects:
 14452 ;;		On entry : F/0
 14453 ;;		On exit  : F/2
 14454 ;;		Unchanged: 0/0
 14455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14459 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14460 ;;Total ram usage:        8 bytes
 14461 ;; Hardware stack levels used:    1
 14462 ;; Hardware stack levels required when called:    9
 14463 ;; This function calls:
 14464 ;;		_LORAWAN_SetChannelIdStatus
 14465 ;;		_UpdateChannelIdStatus
 14466 ;;		_UpdateDataRange
 14467 ;;		_UpdateDutyCycle
 14468 ;;		_UpdateFrequency
 14469 ;;		_ValidateChannelId
 14470 ;;		_ValidateDataRange
 14471 ;;		_ValidateFrequency
 14472 ;;		___lmul
 14473 ;; This function is called by:
 14474 ;;		_MacExecuteCommands
 14475 ;; This function uses a non-reentrant model
 14476 ;;
 14477                           
 14478                           	psect	text76
 14479  00337A                     __ptext76:
 14480                           	opt stack 0
 14481  00337A                     _ExecuteNewChannel:
 14482                           	opt stack 16
 14483                           
 14484                           ; BSR set to: 0
 14485                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14486                           
 14487                           ; BSR set to: 0
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;incstack = 0
 14491  00337A  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14492  00337E  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14493  003382  50DF               	movf	indf2,w,c
 14494  003384  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14495                           
 14496                           ; BSR set to: 0
 14497  003386  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14498  003388  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14499                           
 14500                           ; BSR set to: 0
 14501                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14502  00338A  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14503  00338E  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14504  003392  0EFF               	movlw	255
 14505  003394  14DE               	andwf	postinc2,w,c
 14506  003396  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14507  003398  0EFF               	movlw	255
 14508  00339A  14DE               	andwf	postinc2,w,c
 14509  00339C  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14510  00339E  0EFF               	movlw	255
 14511  0033A0  14DE               	andwf	postinc2,w,c
 14512  0033A2  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14513  0033A4  0E00               	movlw	0
 14514  0033A6  14DE               	andwf	postinc2,w,c
 14515  0033A8  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14516                           
 14517                           ; BSR set to: 0
 14518                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14519  0033AA  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14520  0033AE  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14521  0033B2  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14522  0033B6  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14523  0033BA  0E64               	movlw	100
 14524  0033BC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14525  0033BE  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14526  0033C0  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14527  0033C2  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14528  0033C4  EC9C  F02E         	call	___lmul	;wreg free
 14529  0033C8  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 14530  0033CC  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14531  0033D0  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14532  0033D4  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14536  0033D8  0E03               	movlw	3
 14537  0033DA  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 14538  0033DC  0E00               	movlw	0
 14539  0033DE  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14540                           
 14541                           ; BSR set to: 0
 14542                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14543  0033E0  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14544  0033E4  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14545  0033E8  50DF               	movf	indf2,w,c
 14546  0033EA  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14547                           
 14548                           ; BSR set to: 0
 14549  0033EC  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14550  0033EE  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14551                           
 14552                           ; BSR set to: 0
 14553                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14554  0033F0  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14555  0033F2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14556  0033F4  EC51  F03A         	call	_ValidateChannelId
 14557  0033F8  0900               	iorlw	0
 14558  0033FA  E12B               	bnz	l1110
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;lorawan_eu.c: 692: {
 14562                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14563  0033FC  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14564  003400  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14565  003404  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14566  003408  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14567  00340C  ECBA  F033         	call	_ValidateFrequency	;wreg free
 14568  003410  0900               	iorlw	0
 14569  003412  E005               	bz	l13580
 14570                           
 14571                           ; BSR set to: 0
 14572  003414  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14573  003416  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14574  003418  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14575  00341A  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14576  00341C  E10A               	bnz	l13582
 14577  00341E                     l13580:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;lorawan_eu.c: 694: {
 14581                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14582  00341E  0102               	movlb	2	; () banked
 14583  003420  51A7               	movf	(_loRa+167)& (0+255),w,b
 14584  003422  0D02               	mullw	2
 14585  003424  0EA9               	movlw	low (_loRa+169)
 14586  003426  24F3               	addwf	prodl,w,c
 14587  003428  6ED9               	movwf	fsr2l,c
 14588  00342A  0E02               	movlw	high (_loRa+169)
 14589  00342C  20F4               	addwfc	prodh,w,c
 14590  00342E  6EDA               	movwf	fsr2h,c
 14591  003430  8EDF               	bsf	indf2,7,c
 14592  003432                     l13582:
 14593                           
 14594                           ;lorawan_eu.c: 696: }
 14595                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14596  003432  0100               	movlb	0	; () banked
 14597  003434  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14598  003436  ECD7  F037         	call	_ValidateDataRange
 14599  00343A  0900               	iorlw	0
 14600  00343C  E10A               	bnz	l1110
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;lorawan_eu.c: 699: {
 14604                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14605  00343E  0102               	movlb	2	; () banked
 14606  003440  51A7               	movf	(_loRa+167)& (0+255),w,b
 14607  003442  0D02               	mullw	2
 14608  003444  0EA9               	movlw	low (_loRa+169)
 14609  003446  24F3               	addwf	prodl,w,c
 14610  003448  6ED9               	movwf	fsr2l,c
 14611  00344A  0E02               	movlw	high (_loRa+169)
 14612  00344C  20F4               	addwfc	prodh,w,c
 14613  00344E  6EDA               	movwf	fsr2h,c
 14614  003450  8CDF               	bsf	indf2,6,c
 14615  003452                     l1110:
 14616                           
 14617                           ;lorawan_eu.c: 701: }
 14618                           ;lorawan_eu.c: 702: }
 14619                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14620  003452  0102               	movlb	2	; () banked
 14621  003454  51A7               	movf	(_loRa+167)& (0+255),w,b
 14622  003456  0D02               	mullw	2
 14623  003458  0EA9               	movlw	low (_loRa+169)
 14624  00345A  24F3               	addwf	prodl,w,c
 14625  00345C  6ED9               	movwf	fsr2l,c
 14626  00345E  0E02               	movlw	high (_loRa+169)
 14627  003460  20F4               	addwfc	prodh,w,c
 14628  003462  6EDA               	movwf	fsr2h,c
 14629  003464  AEDF               	btfss	indf2,7,c
 14630  003466  D065               	goto	l13604
 14631                           
 14632                           ; BSR set to: 2
 14633  003468  51A7               	movf	(_loRa+167)& (0+255),w,b
 14634  00346A  0D02               	mullw	2
 14635  00346C  0EA9               	movlw	low (_loRa+169)
 14636  00346E  24F3               	addwf	prodl,w,c
 14637  003470  6ED9               	movwf	fsr2l,c
 14638  003472  0E02               	movlw	high (_loRa+169)
 14639  003474  20F4               	addwfc	prodh,w,c
 14640  003476  6EDA               	movwf	fsr2h,c
 14641  003478  ACDF               	btfss	indf2,6,c
 14642  00347A  D05B               	goto	l13604
 14643                           
 14644                           ; BSR set to: 2
 14645                           ;lorawan_eu.c: 705: {
 14646                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14647  00347C  0E10               	movlw	16
 14648  00347E  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14649  003480  D029               	goto	l13596
 14650                           
 14651                           ; BSR set to: 2
 14652                           ;lorawan_eu.c: 707: {
 14653                           ;lorawan_eu.c: 708: if (frequency != 0)
 14654  003482  0100               	movlb	0	; () banked
 14655  003484  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14656  003486  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14657  003488  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14658  00348A  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14659  00348C  E01E               	bz	l13594
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;lorawan_eu.c: 709: {
 14663                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14664  00348E  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14665  003492  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14666  003496  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14667  00349A  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14668  00349E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14669  0034A0  EC4C  F037         	call	_UpdateFrequency
 14670                           
 14671                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14672  0034A4  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14673  0034A8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14674  0034AA  ECC2  F024         	call	_UpdateDataRange
 14675                           
 14676                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14677  0034AE  0E01               	movlw	1
 14678  0034B0  0100               	movlb	0	; () banked
 14679  0034B2  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14680  0034B4  0E2E               	movlw	46
 14681  0034B6  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14682  0034B8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14683  0034BA  EC24  F038         	call	_UpdateDutyCycle
 14684                           
 14685                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14686  0034BE  0E01               	movlw	1
 14687  0034C0  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14688  0034C2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14689  0034C4  ECBE  F023         	call	_UpdateChannelIdStatus
 14690                           
 14691                           ;lorawan_eu.c: 714: }
 14692  0034C8  D032               	goto	l13602
 14693  0034CA                     l13594:
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;lorawan_eu.c: 715: else
 14697                           ;lorawan_eu.c: 716: {
 14698                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 14699  0034CA  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14700  0034CC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14701  0034CE  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 14702  0034D2  D02D               	goto	l13602
 14703  0034D4                     l13596:
 14704                           
 14705                           ; BSR set to: 2
 14706                           ;lorawan_eu.c: 720: else
 14707                           ;lorawan_eu.c: 721: {
 14708                           ;lorawan_eu.c: 722: if (frequency != 0)
 14709  0034D4  0100               	movlb	0	; () banked
 14710  0034D6  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14711  0034D8  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14712  0034DA  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14713  0034DC  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14714  0034DE  E022               	bz	l13600
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;lorawan_eu.c: 723: {
 14718                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 14719  0034E0  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14720  0034E4  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14721  0034E8  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14722  0034EC  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14723  0034F0  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14724  0034F2  0F10               	addlw	16
 14725  0034F4  EC4C  F037         	call	_UpdateFrequency
 14726                           
 14727                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 14728  0034F8  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14729  0034FC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14730  0034FE  0F10               	addlw	16
 14731  003500  ECC2  F024         	call	_UpdateDataRange
 14732                           
 14733                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 14734  003504  0E01               	movlw	1
 14735  003506  0100               	movlb	0	; () banked
 14736  003508  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14737  00350A  0E2E               	movlw	46
 14738  00350C  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14739  00350E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14740  003510  0F10               	addlw	16
 14741  003512  EC24  F038         	call	_UpdateDutyCycle
 14742                           
 14743                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 14744  003516  0E01               	movlw	1
 14745  003518  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14746  00351A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14747  00351C  0F10               	addlw	16
 14748  00351E  ECBE  F023         	call	_UpdateChannelIdStatus
 14749                           
 14750                           ;lorawan_eu.c: 728: }
 14751  003522  D005               	goto	l13602
 14752  003524                     l13600:
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;lorawan_eu.c: 729: else
 14756                           ;lorawan_eu.c: 730: {
 14757                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 14758  003524  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14759  003526  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14760  003528  0F10               	addlw	16
 14761  00352A  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 14762  00352E                     l13602:
 14763                           
 14764                           ;lorawan_eu.c: 732: }
 14765                           ;lorawan_eu.c: 733: }
 14766                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 14767  00352E  0102               	movlb	2	; () banked
 14768  003530  8703               	bsf	(_loRa+3)& (0+255),3,b
 14769  003532                     l13604:
 14770                           
 14771                           ; BSR set to: 2
 14772                           ;lorawan_eu.c: 736: }
 14773                           ;lorawan_eu.c: 737: return ptr;
 14774  003532  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 14775  003536  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 14776                           
 14777                           ; BSR set to: 2
 14778  00353A  0012               	return		;funcret
 14779  00353C                     __end_of_ExecuteNewChannel:
 14780                           	opt stack 0
 14781                           tosu	equ	0xFFF
 14782                           tosh	equ	0xFFE
 14783                           tosl	equ	0xFFD
 14784                           pclath	equ	0xFFA
 14785                           tblptru	equ	0xFF8
 14786                           tblptrh	equ	0xFF7
 14787                           tblptrl	equ	0xFF6
 14788                           tablat	equ	0xFF5
 14789                           prodh	equ	0xFF4
 14790                           prodl	equ	0xFF3
 14791                           intcon	equ	0xFF2
 14792                           intcon2	equ	0xFF1
 14793                           intcon3	equ	0xFF0
 14794                           indf0	equ	0xFEF
 14795                           postinc0	equ	0xFEE
 14796                           fsr0h	equ	0xFEA
 14797                           fsr0l	equ	0xFE9
 14798                           wreg	equ	0xFE8
 14799                           postinc1	equ	0xFE6
 14800                           postdec1	equ	0xFE5
 14801                           plusw1	equ	0xFE3
 14802                           fsr1h	equ	0xFE2
 14803                           fsr1l	equ	0xFE1
 14804                           indf2	equ	0xFDF
 14805                           postinc2	equ	0xFDE
 14806                           postdec2	equ	0xFDD
 14807                           fsr2h	equ	0xFDA
 14808                           fsr2l	equ	0xFD9
 14809                           status	equ	0xFD8
 14810                           
 14811 ;; *************** function _ValidateFrequency *****************
 14812 ;; Defined at:
 14813 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14814 ;; Parameters:    Size  Location     Type
 14815 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 14816 ;; Auto vars:     Size  Location     Type
 14817 ;;  result          1    8[BANK0 ] enum E8016
 14818 ;; Return value:  Size  Location     Type
 14819 ;;                  1    wreg      enum E8016
 14820 ;; Registers used:
 14821 ;;		wreg, status,2, status,0
 14822 ;; Tracked objects:
 14823 ;;		On entry : F/0
 14824 ;;		On exit  : F/0
 14825 ;;		Unchanged: 0/0
 14826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;Total ram usage:        5 bytes
 14832 ;; Hardware stack levels used:    1
 14833 ;; Hardware stack levels required when called:    7
 14834 ;; This function calls:
 14835 ;;		Nothing
 14836 ;; This function is called by:
 14837 ;;		_ExecuteNewChannel
 14838 ;;		_ExecuteRxParamSetupReq
 14839 ;;		_UpdateCfList
 14840 ;; This function uses a non-reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text77
 14844  006774                     __ptext77:
 14845                           	opt stack 0
 14846  006774                     _ValidateFrequency:
 14847                           	opt stack 18
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 14851                           
 14852                           ; BSR set to: 2
 14853                           ;incstack = 0
 14854  006774  6B68               	clrf	ValidateFrequency@result& (0+255),b
 14855                           
 14856                           ; BSR set to: 0
 14857                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 14858  006776  0102               	movlb	2	; () banked
 14859  006778  51A4               	movf	(_loRa+164)& (0+255),w,b
 14860  00677A  E116               	bnz	l12842
 14861                           
 14862                           ; BSR set to: 2
 14863                           ;lorawan_eu.c: 1093: {
 14864                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 14865  00677C  0E81               	movlw	129
 14866  00677E  0100               	movlb	0	; () banked
 14867  006780  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14868  006782  0E25               	movlw	37
 14869  006784  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14870  006786  0EDB               	movlw	219
 14871  006788  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14872  00678A  0E33               	movlw	51
 14873  00678C  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14874  00678E  E209               	bc	l12840
 14875                           
 14876                           ; BSR set to: 0
 14877  006790  0EC0               	movlw	192
 14878  006792  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14879  006794  0E55               	movlw	85
 14880  006796  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14881  006798  0E70               	movlw	112
 14882  00679A  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14883  00679C  0E33               	movlw	51
 14884  00679E  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14885  0067A0  E215               	bc	l1231
 14886  0067A2                     l12840:
 14887                           
 14888                           ; BSR set to: 0
 14889                           ;lorawan_eu.c: 1095: {
 14890                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 14891  0067A2  0E03               	movlw	3
 14892  0067A4  6F68               	movwf	ValidateFrequency@result& (0+255),b
 14893  0067A6  D012               	goto	l1231
 14894  0067A8                     l12842:
 14895                           
 14896                           ; BSR set to: 2
 14897                           ;lorawan_eu.c: 1099: else
 14898                           ;lorawan_eu.c: 1100: {
 14899                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 14900  0067A8  0E71               	movlw	113
 14901  0067AA  0100               	movlb	0	; () banked
 14902  0067AC  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14903  0067AE  0E5E               	movlw	94
 14904  0067B0  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14905  0067B2  0EEA               	movlw	234
 14906  0067B4  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14907  0067B6  0E19               	movlw	25
 14908  0067B8  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14909  0067BA  E2F3               	bc	l12840
 14910                           
 14911                           ; BSR set to: 0
 14912  0067BC  0E90               	movlw	144
 14913  0067BE  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14914  0067C0  0ED1               	movlw	209
 14915  0067C2  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14916  0067C4  0ECF               	movlw	207
 14917  0067C6  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14918  0067C8  0E19               	movlw	25
 14919  0067CA  D7E9               	goto	L7
 14920  0067CC                     l1231:
 14921                           
 14922                           ; BSR set to: 0
 14923                           ;lorawan_eu.c: 1104: }
 14924                           ;lorawan_eu.c: 1105: }
 14925                           ;lorawan_eu.c: 1107: return result;
 14926  0067CC  5168               	movf	ValidateFrequency@result& (0+255),w,b
 14927                           
 14928                           ; BSR set to: 0
 14929  0067CE  0012               	return		;funcret
 14930  0067D0                     __end_of_ValidateFrequency:
 14931                           	opt stack 0
 14932                           tosu	equ	0xFFF
 14933                           tosh	equ	0xFFE
 14934                           tosl	equ	0xFFD
 14935                           pclath	equ	0xFFA
 14936                           tblptru	equ	0xFF8
 14937                           tblptrh	equ	0xFF7
 14938                           tblptrl	equ	0xFF6
 14939                           tablat	equ	0xFF5
 14940                           prodh	equ	0xFF4
 14941                           prodl	equ	0xFF3
 14942                           intcon	equ	0xFF2
 14943                           intcon2	equ	0xFF1
 14944                           intcon3	equ	0xFF0
 14945                           indf0	equ	0xFEF
 14946                           postinc0	equ	0xFEE
 14947                           fsr0h	equ	0xFEA
 14948                           fsr0l	equ	0xFE9
 14949                           wreg	equ	0xFE8
 14950                           postinc1	equ	0xFE6
 14951                           postdec1	equ	0xFE5
 14952                           plusw1	equ	0xFE3
 14953                           fsr1h	equ	0xFE2
 14954                           fsr1l	equ	0xFE1
 14955                           indf2	equ	0xFDF
 14956                           postinc2	equ	0xFDE
 14957                           postdec2	equ	0xFDD
 14958                           fsr2h	equ	0xFDA
 14959                           fsr2l	equ	0xFD9
 14960                           status	equ	0xFD8
 14961                           
 14962 ;; *************** function _ValidateDataRange *****************
 14963 ;; Defined at:
 14964 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14965 ;; Parameters:    Size  Location     Type
 14966 ;;  dataRangeNew    1    wreg     unsigned char 
 14967 ;; Auto vars:     Size  Location     Type
 14968 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 14969 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 14970 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 14971 ;;  result          1    6[BANK0 ] enum E8016
 14972 ;; Return value:  Size  Location     Type
 14973 ;;                  1    wreg      enum E8016
 14974 ;; Registers used:
 14975 ;;		wreg, status,2, status,0, cstack
 14976 ;; Tracked objects:
 14977 ;;		On entry : F/0
 14978 ;;		On exit  : F/0
 14979 ;;		Unchanged: 0/0
 14980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14982 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14984 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14985 ;;Total ram usage:        4 bytes
 14986 ;; Hardware stack levels used:    1
 14987 ;; Hardware stack levels required when called:    8
 14988 ;; This function calls:
 14989 ;;		_ValidateDataRate
 14990 ;; This function is called by:
 14991 ;;		_ExecuteNewChannel
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text78
 14996  006FAE                     __ptext78:
 14997                           	opt stack 0
 14998  006FAE                     _ValidateDataRange:
 14999                           	opt stack 16
 15000                           
 15001                           ; BSR set to: 0
 15002                           ;incstack = 0
 15003                           ;ValidateDataRange@dataRangeNew stored from wreg
 15004  006FAE  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15005                           
 15006                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15007  006FB0  0100               	movlb	0	; () banked
 15008  006FB2  6B66               	clrf	ValidateDataRange@result& (0+255),b
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15012                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15013  006FB4  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15014  006FB6  0B0F               	andlw	15
 15015  006FB8  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15016                           
 15017                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15018  006FBA  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15019  006FBC  0B0F               	andlw	15
 15020  006FBE  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15024  006FC0  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15025  006FC2  EC8E  F03B         	call	_ValidateDataRate
 15026  006FC6  0900               	iorlw	0
 15027  006FC8  E108               	bnz	l12862
 15028                           
 15029                           ; BSR set to: 0
 15030  006FCA  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15031  006FCC  EC8E  F03B         	call	_ValidateDataRate
 15032  006FD0  0900               	iorlw	0
 15033  006FD2  E103               	bnz	l12862
 15034                           
 15035                           ; BSR set to: 0
 15036  006FD4  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15037  006FD6  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15038  006FD8  E202               	bc	l1238
 15039  006FDA                     l12862:
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;lorawan_eu.c: 1119: {
 15043                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15044  006FDA  0E03               	movlw	3
 15045  006FDC  6F66               	movwf	ValidateDataRange@result& (0+255),b
 15046  006FDE                     l1238:
 15047                           
 15048                           ; BSR set to: 0
 15049                           ;lorawan_eu.c: 1121: }
 15050                           ;lorawan_eu.c: 1122: return result;
 15051  006FDE  5166               	movf	ValidateDataRange@result& (0+255),w,b
 15052                           
 15053                           ; BSR set to: 0
 15054  006FE0  0012               	return		;funcret
 15055  006FE2                     __end_of_ValidateDataRange:
 15056                           	opt stack 0
 15057                           tosu	equ	0xFFF
 15058                           tosh	equ	0xFFE
 15059                           tosl	equ	0xFFD
 15060                           pclath	equ	0xFFA
 15061                           tblptru	equ	0xFF8
 15062                           tblptrh	equ	0xFF7
 15063                           tblptrl	equ	0xFF6
 15064                           tablat	equ	0xFF5
 15065                           prodh	equ	0xFF4
 15066                           prodl	equ	0xFF3
 15067                           intcon	equ	0xFF2
 15068                           intcon2	equ	0xFF1
 15069                           intcon3	equ	0xFF0
 15070                           indf0	equ	0xFEF
 15071                           postinc0	equ	0xFEE
 15072                           fsr0h	equ	0xFEA
 15073                           fsr0l	equ	0xFE9
 15074                           wreg	equ	0xFE8
 15075                           postinc1	equ	0xFE6
 15076                           postdec1	equ	0xFE5
 15077                           plusw1	equ	0xFE3
 15078                           fsr1h	equ	0xFE2
 15079                           fsr1l	equ	0xFE1
 15080                           indf2	equ	0xFDF
 15081                           postinc2	equ	0xFDE
 15082                           postdec2	equ	0xFDD
 15083                           fsr2h	equ	0xFDA
 15084                           fsr2l	equ	0xFD9
 15085                           status	equ	0xFD8
 15086                           
 15087 ;; *************** function _UpdateFrequency *****************
 15088 ;; Defined at:
 15089 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;  channelId       1    wreg     unsigned char 
 15092 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;  channelId       1    8[BANK0 ] unsigned char 
 15095 ;; Return value:  Size  Location     Type
 15096 ;;                  1    wreg      void 
 15097 ;; Registers used:
 15098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15099 ;; Tracked objects:
 15100 ;;		On entry : F/0
 15101 ;;		On exit  : F/0
 15102 ;;		Unchanged: 0/0
 15103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15107 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15108 ;;Total ram usage:        5 bytes
 15109 ;; Hardware stack levels used:    1
 15110 ;; Hardware stack levels required when called:    7
 15111 ;; This function calls:
 15112 ;;		Nothing
 15113 ;; This function is called by:
 15114 ;;		_ExecuteNewChannel
 15115 ;; This function uses a non-reentrant model
 15116 ;;
 15117                           
 15118                           	psect	text79
 15119  006E98                     __ptext79:
 15120                           	opt stack 0
 15121  006E98                     _UpdateFrequency:
 15122                           	opt stack 17
 15123                           
 15124                           ; BSR set to: 0
 15125                           ;incstack = 0
 15126                           ;UpdateFrequency@channelId stored from wreg
 15127  006E98  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 15128                           
 15129                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15130  006E9A  0100               	movlb	0	; () banked
 15131  006E9C  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15132  006E9E  0D0E               	mullw	14
 15133  006EA0  0E00               	movlw	low _Channels
 15134  006EA2  24F3               	addwf	prodl,w,c
 15135  006EA4  6ED9               	movwf	fsr2l,c
 15136  006EA6  0E04               	movlw	high _Channels
 15137  006EA8  20F4               	addwfc	prodh,w,c
 15138  006EAA  6EDA               	movwf	fsr2h,c
 15139  006EAC  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15140  006EB0  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15141  006EB4  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15142  006EB8  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15143                           
 15144                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15145  006EBC  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15146  006EBE  0D0E               	mullw	14
 15147  006EC0  0E0D               	movlw	low (_Channels+13)
 15148  006EC2  24F3               	addwf	prodl,w,c
 15149  006EC4  6ED9               	movwf	fsr2l,c
 15150  006EC6  0E04               	movlw	high (_Channels+13)
 15151  006EC8  20F4               	addwfc	prodh,w,c
 15152  006ECA  6EDA               	movwf	fsr2h,c
 15153  006ECC  0E00               	movlw	0
 15154  006ECE  80DB               	bsf	plusw2,0,c
 15155                           
 15156                           ; BSR set to: 0
 15157  006ED0  0C00               	retlw	0	;funcret
 15158  006ED2                     __end_of_UpdateFrequency:
 15159                           	opt stack 0
 15160                           tosu	equ	0xFFF
 15161                           tosh	equ	0xFFE
 15162                           tosl	equ	0xFFD
 15163                           pclath	equ	0xFFA
 15164                           tblptru	equ	0xFF8
 15165                           tblptrh	equ	0xFF7
 15166                           tblptrl	equ	0xFF6
 15167                           tablat	equ	0xFF5
 15168                           prodh	equ	0xFF4
 15169                           prodl	equ	0xFF3
 15170                           intcon	equ	0xFF2
 15171                           intcon2	equ	0xFF1
 15172                           intcon3	equ	0xFF0
 15173                           indf0	equ	0xFEF
 15174                           postinc0	equ	0xFEE
 15175                           fsr0h	equ	0xFEA
 15176                           fsr0l	equ	0xFE9
 15177                           wreg	equ	0xFE8
 15178                           postinc1	equ	0xFE6
 15179                           postdec1	equ	0xFE5
 15180                           plusw1	equ	0xFE3
 15181                           fsr1h	equ	0xFE2
 15182                           fsr1l	equ	0xFE1
 15183                           indf2	equ	0xFDF
 15184                           postinc2	equ	0xFDE
 15185                           postdec2	equ	0xFDD
 15186                           plusw2	equ	0xFDB
 15187                           fsr2h	equ	0xFDA
 15188                           fsr2l	equ	0xFD9
 15189                           status	equ	0xFD8
 15190                           
 15191 ;; *************** function _UpdateDutyCycle *****************
 15192 ;; Defined at:
 15193 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;  channelId       1    wreg     unsigned char 
 15196 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 15197 ;; Auto vars:     Size  Location     Type
 15198 ;;  channelId       1    6[BANK0 ] unsigned char 
 15199 ;; Return value:  Size  Location     Type
 15200 ;;                  1    wreg      void 
 15201 ;; Registers used:
 15202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15203 ;; Tracked objects:
 15204 ;;		On entry : F/0
 15205 ;;		On exit  : F/0
 15206 ;;		Unchanged: 0/0
 15207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15209 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15211 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15212 ;;Total ram usage:        3 bytes
 15213 ;; Hardware stack levels used:    1
 15214 ;; Hardware stack levels required when called:    7
 15215 ;; This function calls:
 15216 ;;		Nothing
 15217 ;; This function is called by:
 15218 ;;		_ExecuteNewChannel
 15219 ;; This function uses a non-reentrant model
 15220 ;;
 15221                           
 15222                           	psect	text80
 15223  007048                     __ptext80:
 15224                           	opt stack 0
 15225  007048                     _UpdateDutyCycle:
 15226                           	opt stack 17
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;incstack = 0
 15230                           ;UpdateDutyCycle@channelId stored from wreg
 15231  007048  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15232                           
 15233                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15234  00704A  0100               	movlb	0	; () banked
 15235  00704C  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15236  00704E  0D0E               	mullw	14
 15237  007050  0E06               	movlw	low (_Channels+6)
 15238  007052  24F3               	addwf	prodl,w,c
 15239  007054  6ED9               	movwf	fsr2l,c
 15240  007056  0E04               	movlw	high (_Channels+6)
 15241  007058  20F4               	addwfc	prodh,w,c
 15242  00705A  6EDA               	movwf	fsr2h,c
 15243  00705C  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15244  007060  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15245                           
 15246                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15247  007064  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15248  007066  0D0E               	mullw	14
 15249  007068  0E0D               	movlw	low (_Channels+13)
 15250  00706A  24F3               	addwf	prodl,w,c
 15251  00706C  6ED9               	movwf	fsr2l,c
 15252  00706E  0E04               	movlw	high (_Channels+13)
 15253  007070  20F4               	addwfc	prodh,w,c
 15254  007072  6EDA               	movwf	fsr2h,c
 15255  007074  0E00               	movlw	0
 15256  007076  84DB               	bsf	plusw2,2,c
 15257                           
 15258                           ; BSR set to: 0
 15259  007078  0C00               	retlw	0	;funcret
 15260  00707A                     __end_of_UpdateDutyCycle:
 15261                           	opt stack 0
 15262                           tosu	equ	0xFFF
 15263                           tosh	equ	0xFFE
 15264                           tosl	equ	0xFFD
 15265                           pclath	equ	0xFFA
 15266                           tblptru	equ	0xFF8
 15267                           tblptrh	equ	0xFF7
 15268                           tblptrl	equ	0xFF6
 15269                           tablat	equ	0xFF5
 15270                           prodh	equ	0xFF4
 15271                           prodl	equ	0xFF3
 15272                           intcon	equ	0xFF2
 15273                           intcon2	equ	0xFF1
 15274                           intcon3	equ	0xFF0
 15275                           indf0	equ	0xFEF
 15276                           postinc0	equ	0xFEE
 15277                           fsr0h	equ	0xFEA
 15278                           fsr0l	equ	0xFE9
 15279                           wreg	equ	0xFE8
 15280                           postinc1	equ	0xFE6
 15281                           postdec1	equ	0xFE5
 15282                           plusw1	equ	0xFE3
 15283                           fsr1h	equ	0xFE2
 15284                           fsr1l	equ	0xFE1
 15285                           indf2	equ	0xFDF
 15286                           postinc2	equ	0xFDE
 15287                           postdec2	equ	0xFDD
 15288                           plusw2	equ	0xFDB
 15289                           fsr2h	equ	0xFDA
 15290                           fsr2l	equ	0xFD9
 15291                           status	equ	0xFD8
 15292                           
 15293 ;; *************** function _UpdateDataRange *****************
 15294 ;; Defined at:
 15295 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15296 ;; Parameters:    Size  Location     Type
 15297 ;;  channelId       1    wreg     unsigned char 
 15298 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 15299 ;; Auto vars:     Size  Location     Type
 15300 ;;  channelId       1    6[BANK0 ] unsigned char 
 15301 ;;  i               1    7[BANK0 ] unsigned char 
 15302 ;; Return value:  Size  Location     Type
 15303 ;;                  1    wreg      void 
 15304 ;; Registers used:
 15305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15306 ;; Tracked objects:
 15307 ;;		On entry : F/0
 15308 ;;		On exit  : F/2
 15309 ;;		Unchanged: 0/0
 15310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15311 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;Total ram usage:        4 bytes
 15316 ;; Hardware stack levels used:    1
 15317 ;; Hardware stack levels required when called:    7
 15318 ;; This function calls:
 15319 ;;		Nothing
 15320 ;; This function is called by:
 15321 ;;		_ExecuteNewChannel
 15322 ;; This function uses a non-reentrant model
 15323 ;;
 15324                           
 15325                           	psect	text81
 15326  004984                     __ptext81:
 15327                           	opt stack 0
 15328  004984                     _UpdateDataRange:
 15329                           	opt stack 17
 15330                           
 15331                           ; BSR set to: 0
 15332                           ;incstack = 0
 15333                           ;UpdateDataRange@channelId stored from wreg
 15334  004984  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 15335                           
 15336                           ;lorawan_eu.c: 1011: uint8_t i;
 15337                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15338  004986  0E07               	movlw	7
 15339  004988  0102               	movlb	2	; () banked
 15340  00498A  6FEB               	movwf	(_loRa+235)& (0+255),b
 15341                           
 15342                           ; BSR set to: 2
 15343                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15344  00498C  6BEC               	clrf	(_loRa+236)& (0+255),b
 15345                           
 15346                           ; BSR set to: 2
 15347                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15348  00498E  0100               	movlb	0	; () banked
 15349  004990  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15350  004992  0D0E               	mullw	14
 15351  004994  0E05               	movlw	low (_Channels+5)
 15352  004996  24F3               	addwf	prodl,w,c
 15353  004998  6ED9               	movwf	fsr2l,c
 15354  00499A  0E04               	movlw	high (_Channels+5)
 15355  00499C  20F4               	addwfc	prodh,w,c
 15356  00499E  6EDA               	movwf	fsr2h,c
 15357  0049A0  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15361  0049A4  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15362  0049A6  0D0E               	mullw	14
 15363  0049A8  0E0D               	movlw	low (_Channels+13)
 15364  0049AA  24F3               	addwf	prodl,w,c
 15365  0049AC  6ED9               	movwf	fsr2l,c
 15366  0049AE  0E04               	movlw	high (_Channels+13)
 15367  0049B0  20F4               	addwfc	prodh,w,c
 15368  0049B2  6EDA               	movwf	fsr2h,c
 15369  0049B4  0E00               	movlw	0
 15370  0049B6  82DB               	bsf	plusw2,1,c
 15371                           
 15372                           ; BSR set to: 0
 15373                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15374  0049B8  6B67               	clrf	UpdateDataRange@i& (0+255),b
 15375  0049BA  D04E               	goto	l12888
 15376  0049BC                     l12876:
 15377                           
 15378                           ; BSR set to: 0
 15379                           ;lorawan_eu.c: 1020: {
 15380                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15381  0049BC  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15382  0049BE  0D0E               	mullw	14
 15383  0049C0  0E05               	movlw	low (_Channels+5)
 15384  0049C2  24F3               	addwf	prodl,w,c
 15385  0049C4  6ED9               	movwf	fsr2l,c
 15386  0049C6  0E04               	movlw	high (_Channels+5)
 15387  0049C8  20F4               	addwfc	prodh,w,c
 15388  0049CA  6EDA               	movwf	fsr2h,c
 15389  0049CC  50DF               	movf	223,w,c
 15390  0049CE  0B0F               	andlw	15
 15391  0049D0  0100               	movlb	0	; () banked
 15392  0049D2  6F65               	movwf	??_UpdateDataRange& (0+255),b
 15393  0049D4  0102               	movlb	2	; () banked
 15394  0049D6  51EB               	movf	(_loRa+235)& (0+255),w,b
 15395  0049D8  0100               	movlb	0	; () banked
 15396  0049DA  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 15397  0049DC  E216               	bc	l1204
 15398                           
 15399                           ; BSR set to: 0
 15400  0049DE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15401  0049E0  0D0E               	mullw	14
 15402  0049E2  0E04               	movlw	low (_Channels+4)
 15403  0049E4  24F3               	addwf	prodl,w,c
 15404  0049E6  6ED9               	movwf	fsr2l,c
 15405  0049E8  0E04               	movlw	high (_Channels+4)
 15406  0049EA  20F4               	addwfc	prodh,w,c
 15407  0049EC  6EDA               	movwf	fsr2h,c
 15408  0049EE  04DE               	decf	postinc2,w,c
 15409  0049F0  E10C               	bnz	l1204
 15410                           
 15411                           ; BSR set to: 0
 15412                           ;lorawan_eu.c: 1022: {
 15413                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15414  0049F2  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15415  0049F4  0D0E               	mullw	14
 15416  0049F6  0E05               	movlw	low (_Channels+5)
 15417  0049F8  24F3               	addwf	prodl,w,c
 15418  0049FA  6ED9               	movwf	fsr2l,c
 15419  0049FC  0E04               	movlw	high (_Channels+5)
 15420  0049FE  20F4               	addwfc	prodh,w,c
 15421  004A00  6EDA               	movwf	fsr2h,c
 15422  004A02  50DF               	movf	223,w,c
 15423  004A04  0B0F               	andlw	15
 15424  004A06  0102               	movlb	2	; () banked
 15425  004A08  6FEB               	movwf	(_loRa+235)& (0+255),b
 15426  004A0A                     l1204:
 15427                           
 15428                           ;lorawan_eu.c: 1024: }
 15429                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15430  004A0A  0100               	movlb	0	; () banked
 15431  004A0C  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15432  004A0E  0D0E               	mullw	14
 15433  004A10  0E05               	movlw	low (_Channels+5)
 15434  004A12  24F3               	addwf	prodl,w,c
 15435  004A14  6ED9               	movwf	fsr2l,c
 15436  004A16  0E04               	movlw	high (_Channels+5)
 15437  004A18  20F4               	addwfc	prodh,w,c
 15438  004A1A  6EDA               	movwf	fsr2h,c
 15439  004A1C  38DF               	swapf	223,w,c
 15440  004A1E  0B0F               	andlw	15
 15441  004A20  0102               	movlb	2	; () banked
 15442  004A22  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15443  004A24  D017               	goto	l12886
 15444                           
 15445                           ; BSR set to: 2
 15446  004A26  0100               	movlb	0	; () banked
 15447  004A28  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15448  004A2A  0D0E               	mullw	14
 15449  004A2C  0E04               	movlw	low (_Channels+4)
 15450  004A2E  24F3               	addwf	prodl,w,c
 15451  004A30  6ED9               	movwf	fsr2l,c
 15452  004A32  0E04               	movlw	high (_Channels+4)
 15453  004A34  20F4               	addwfc	prodh,w,c
 15454  004A36  6EDA               	movwf	fsr2h,c
 15455  004A38  04DE               	decf	postinc2,w,c
 15456  004A3A  E10C               	bnz	l12886
 15457                           
 15458                           ; BSR set to: 0
 15459                           ;lorawan_eu.c: 1026: {
 15460                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15461  004A3C  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15462  004A3E  0D0E               	mullw	14
 15463  004A40  0E05               	movlw	low (_Channels+5)
 15464  004A42  24F3               	addwf	prodl,w,c
 15465  004A44  6ED9               	movwf	fsr2l,c
 15466  004A46  0E04               	movlw	high (_Channels+5)
 15467  004A48  20F4               	addwfc	prodh,w,c
 15468  004A4A  6EDA               	movwf	fsr2h,c
 15469  004A4C  38DF               	swapf	223,w,c
 15470  004A4E  0B0F               	andlw	15
 15471  004A50  0102               	movlb	2	; () banked
 15472  004A52  6FEC               	movwf	(_loRa+236)& (0+255),b
 15473  004A54                     l12886:
 15474  004A54  0100               	movlb	0	; () banked
 15475  004A56  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 15476  004A58                     l12888:
 15477                           
 15478                           ; BSR set to: 0
 15479  004A58  0102               	movlb	2	; () banked
 15480  004A5A  51ED               	movf	(_loRa+237)& (0+255),w,b
 15481  004A5C  0100               	movlb	0	; () banked
 15482  004A5E  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 15483  004A60  E3AD               	bnc	l12876
 15484                           
 15485                           ; BSR set to: 0
 15486                           ;lorawan_eu.c: 1028: }
 15487                           ;lorawan_eu.c: 1029: }
 15488                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15489  004A62  0102               	movlb	2	; () banked
 15490  004A64  51DF               	movf	(_loRa+223)& (0+255),w,b
 15491  004A66  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15492  004A68  E202               	bc	l12894
 15493                           
 15494                           ; BSR set to: 2
 15495                           ;lorawan_eu.c: 1032: {
 15496                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15497  004A6A  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15498  004A6E                     l12894:
 15499                           
 15500                           ; BSR set to: 2
 15501                           ;lorawan_eu.c: 1034: }
 15502                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15503  004A6E  51EB               	movf	(_loRa+235)& (0+255),w,b
 15504  004A70  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15505  004A72  A0D8               	btfss	status,0,c
 15506                           
 15507                           ; BSR set to: 2
 15508                           ;lorawan_eu.c: 1037: {
 15509                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15510  004A74  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15511                           
 15512                           ; BSR set to: 2
 15513  004A78  0012               	return		;funcret
 15514  004A7A                     __end_of_UpdateDataRange:
 15515                           	opt stack 0
 15516                           tosu	equ	0xFFF
 15517                           tosh	equ	0xFFE
 15518                           tosl	equ	0xFFD
 15519                           pclath	equ	0xFFA
 15520                           tblptru	equ	0xFF8
 15521                           tblptrh	equ	0xFF7
 15522                           tblptrl	equ	0xFF6
 15523                           tablat	equ	0xFF5
 15524                           prodh	equ	0xFF4
 15525                           prodl	equ	0xFF3
 15526                           intcon	equ	0xFF2
 15527                           intcon2	equ	0xFF1
 15528                           intcon3	equ	0xFF0
 15529                           indf0	equ	0xFEF
 15530                           postinc0	equ	0xFEE
 15531                           fsr0h	equ	0xFEA
 15532                           fsr0l	equ	0xFE9
 15533                           wreg	equ	0xFE8
 15534                           postinc1	equ	0xFE6
 15535                           postdec1	equ	0xFE5
 15536                           plusw1	equ	0xFE3
 15537                           fsr1h	equ	0xFE2
 15538                           fsr1l	equ	0xFE1
 15539                           indf2	equ	0xFDF
 15540                           postinc2	equ	0xFDE
 15541                           postdec2	equ	0xFDD
 15542                           plusw2	equ	0xFDB
 15543                           fsr2h	equ	0xFDA
 15544                           fsr2l	equ	0xFD9
 15545                           status	equ	0xFD8
 15546                           
 15547 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15548 ;; Defined at:
 15549 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;  channelId       1    wreg     unsigned char 
 15552 ;;  statusNew       1    8[BANK0 ] unsigned char 
 15553 ;; Auto vars:     Size  Location     Type
 15554 ;;  channelId       1   10[BANK0 ] unsigned char 
 15555 ;;  result          1    0        enum E8016
 15556 ;; Return value:  Size  Location     Type
 15557 ;;                  1    wreg      enum E8016
 15558 ;; Registers used:
 15559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15560 ;; Tracked objects:
 15561 ;;		On entry : F/0
 15562 ;;		On exit  : D/0
 15563 ;;		Unchanged: 0/0
 15564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15565 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15569 ;;Total ram usage:        3 bytes
 15570 ;; Hardware stack levels used:    1
 15571 ;; Hardware stack levels required when called:    8
 15572 ;; This function calls:
 15573 ;;		_UpdateChannelIdStatus
 15574 ;;		_ValidateChannelId
 15575 ;; This function is called by:
 15576 ;;		_ExecuteNewChannel
 15577 ;;		_UpdateCfList
 15578 ;; This function uses a non-reentrant model
 15579 ;;
 15580                           
 15581                           	psect	text82
 15582  006ED2                     __ptext82:
 15583                           	opt stack 0
 15584  006ED2                     _LORAWAN_SetChannelIdStatus:
 15585                           	opt stack 17
 15586                           
 15587                           ; BSR set to: 2
 15588                           ;incstack = 0
 15589                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15590  006ED2  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15591                           
 15592                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15593  006ED4  0E01               	movlw	1
 15594  006ED6  0100               	movlb	0	; () banked
 15595  006ED8  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15596  006EDA  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15597  006EDC  EC51  F03A         	call	_ValidateChannelId
 15598  006EE0  0900               	iorlw	0
 15599  006EE2  E001               	bz	l12904
 15600                           
 15601                           ; BSR set to: 0
 15602                           ;lorawan_eu.c: 290: }
 15603  006EE4  0012               	return	
 15604  006EE6                     l12904:
 15605                           
 15606                           ; BSR set to: 0
 15607                           ;lorawan_eu.c: 292: else
 15608                           ;lorawan_eu.c: 293: {
 15609                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 15610  006EE6  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15611  006EE8  0D0E               	mullw	14
 15612  006EEA  0E0D               	movlw	low (_Channels+13)
 15613  006EEC  24F3               	addwf	prodl,w,c
 15614  006EEE  6ED9               	movwf	fsr2l,c
 15615  006EF0  0E04               	movlw	high (_Channels+13)
 15616  006EF2  20F4               	addwfc	prodh,w,c
 15617  006EF4  6EDA               	movwf	fsr2h,c
 15618  006EF6  50DF               	movf	indf2,w,c
 15619  006EF8  0B07               	andlw	7
 15620  006EFA  0A07               	xorlw	7
 15621  006EFC  A4D8               	btfss	status,2,c
 15622  006EFE  0012               	return	
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;lorawan_eu.c: 295: {
 15626                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 15627  006F00  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 15628  006F04  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15629  006F06  EFBE  F023         	goto	_UpdateChannelIdStatus
 15630  006F0A                     __end_of_LORAWAN_SetChannelIdStatus:
 15631                           	opt stack 0
 15632                           tosu	equ	0xFFF
 15633                           tosh	equ	0xFFE
 15634                           tosl	equ	0xFFD
 15635                           pclath	equ	0xFFA
 15636                           tblptru	equ	0xFF8
 15637                           tblptrh	equ	0xFF7
 15638                           tblptrl	equ	0xFF6
 15639                           tablat	equ	0xFF5
 15640                           prodh	equ	0xFF4
 15641                           prodl	equ	0xFF3
 15642                           intcon	equ	0xFF2
 15643                           intcon2	equ	0xFF1
 15644                           intcon3	equ	0xFF0
 15645                           indf0	equ	0xFEF
 15646                           postinc0	equ	0xFEE
 15647                           fsr0h	equ	0xFEA
 15648                           fsr0l	equ	0xFE9
 15649                           wreg	equ	0xFE8
 15650                           postinc1	equ	0xFE6
 15651                           postdec1	equ	0xFE5
 15652                           plusw1	equ	0xFE3
 15653                           fsr1h	equ	0xFE2
 15654                           fsr1l	equ	0xFE1
 15655                           indf2	equ	0xFDF
 15656                           postinc2	equ	0xFDE
 15657                           postdec2	equ	0xFDD
 15658                           plusw2	equ	0xFDB
 15659                           fsr2h	equ	0xFDA
 15660                           fsr2l	equ	0xFD9
 15661                           status	equ	0xFD8
 15662                           
 15663 ;; *************** function _ValidateChannelId *****************
 15664 ;; Defined at:
 15665 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15666 ;; Parameters:    Size  Location     Type
 15667 ;;  channelId       1    wreg     unsigned char 
 15668 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;  channelId       1    6[BANK0 ] unsigned char 
 15671 ;;  result          1    5[BANK0 ] enum E8016
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  1    wreg      enum E8016
 15674 ;; Registers used:
 15675 ;;		wreg, status,2, status,0
 15676 ;; Tracked objects:
 15677 ;;		On entry : F/0
 15678 ;;		On exit  : F/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15681 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15684 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15685 ;;Total ram usage:        3 bytes
 15686 ;; Hardware stack levels used:    1
 15687 ;; Hardware stack levels required when called:    7
 15688 ;; This function calls:
 15689 ;;		Nothing
 15690 ;; This function is called by:
 15691 ;;		_LORAWAN_SetChannelIdStatus
 15692 ;;		_ExecuteNewChannel
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text83
 15697  0074A2                     __ptext83:
 15698                           	opt stack 0
 15699  0074A2                     _ValidateChannelId:
 15700                           	opt stack 17
 15701                           
 15702                           ;incstack = 0
 15703                           ;ValidateChannelId@channelId stored from wreg
 15704  0074A2  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 15705                           
 15706                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 15707  0074A4  0100               	movlb	0	; () banked
 15708  0074A6  6B65               	clrf	ValidateChannelId@result& (0+255),b
 15709                           
 15710                           ; BSR set to: 0
 15711                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 15712  0074A8  0E10               	movlw	16
 15713  0074AA  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15714  0074AC  D005               	goto	l12630
 15715                           
 15716                           ; BSR set to: 0
 15717  0074AE  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 15718  0074B0  E105               	bnz	l1244
 15719                           
 15720                           ; BSR set to: 0
 15721  0074B2  0E03               	movlw	3
 15722  0074B4  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15723  0074B6  D002               	goto	l1244
 15724  0074B8                     l12630:
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;lorawan_eu.c: 1130: {
 15728                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 15729  0074B8  0E03               	movlw	3
 15730  0074BA  6F65               	movwf	ValidateChannelId@result& (0+255),b
 15731  0074BC                     l1244:
 15732                           
 15733                           ; BSR set to: 0
 15734                           ;lorawan_eu.c: 1132: }
 15735                           ;lorawan_eu.c: 1134: return result;
 15736  0074BC  5165               	movf	ValidateChannelId@result& (0+255),w,b
 15737                           
 15738                           ; BSR set to: 0
 15739  0074BE  0012               	return		;funcret
 15740  0074C0                     __end_of_ValidateChannelId:
 15741                           	opt stack 0
 15742                           tosu	equ	0xFFF
 15743                           tosh	equ	0xFFE
 15744                           tosl	equ	0xFFD
 15745                           pclath	equ	0xFFA
 15746                           tblptru	equ	0xFF8
 15747                           tblptrh	equ	0xFF7
 15748                           tblptrl	equ	0xFF6
 15749                           tablat	equ	0xFF5
 15750                           prodh	equ	0xFF4
 15751                           prodl	equ	0xFF3
 15752                           intcon	equ	0xFF2
 15753                           intcon2	equ	0xFF1
 15754                           intcon3	equ	0xFF0
 15755                           indf0	equ	0xFEF
 15756                           postinc0	equ	0xFEE
 15757                           fsr0h	equ	0xFEA
 15758                           fsr0l	equ	0xFE9
 15759                           wreg	equ	0xFE8
 15760                           postinc1	equ	0xFE6
 15761                           postdec1	equ	0xFE5
 15762                           plusw1	equ	0xFE3
 15763                           fsr1h	equ	0xFE2
 15764                           fsr1l	equ	0xFE1
 15765                           indf2	equ	0xFDF
 15766                           postinc2	equ	0xFDE
 15767                           postdec2	equ	0xFDD
 15768                           plusw2	equ	0xFDB
 15769                           fsr2h	equ	0xFDA
 15770                           fsr2l	equ	0xFD9
 15771                           status	equ	0xFD8
 15772                           
 15773 ;; *************** function _ExecuteLinkCheck *****************
 15774 ;; Defined at:
 15775 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15776 ;; Parameters:    Size  Location     Type
 15777 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 15778 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;		None
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  2    4[BANK0 ] PTR unsigned char 
 15783 ;; Registers used:
 15784 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15785 ;; Tracked objects:
 15786 ;;		On entry : F/0
 15787 ;;		On exit  : F/0
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15793 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15794 ;;Total ram usage:        2 bytes
 15795 ;; Hardware stack levels used:    1
 15796 ;; Hardware stack levels required when called:    7
 15797 ;; This function calls:
 15798 ;;		Nothing
 15799 ;; This function is called by:
 15800 ;;		_MacExecuteCommands
 15801 ;; This function uses a non-reentrant model
 15802 ;;
 15803                           
 15804                           	psect	text84
 15805  00707A                     __ptext84:
 15806                           	opt stack 0
 15807  00707A                     _ExecuteLinkCheck:
 15808                           	opt stack 18
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 15812                           
 15813                           ; BSR set to: 0
 15814                           ;incstack = 0
 15815  00707A  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15816  00707E  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15817  007082  50DF               	movf	indf2,w,c
 15818  007084  0102               	movlb	2	; () banked
 15819  007086  6FDD               	movwf	(_loRa+221)& (0+255),b
 15820                           
 15821                           ; BSR set to: 2
 15822  007088  0100               	movlb	0	; () banked
 15823  00708A  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15824  00708C  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 15828  00708E  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15829  007092  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15830  007096  50DF               	movf	indf2,w,c
 15831  007098  0102               	movlb	2	; () banked
 15832  00709A  6FDE               	movwf	(_loRa+222)& (0+255),b
 15833  00709C  0100               	movlb	0	; () banked
 15834  00709E  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15835  0070A0  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;lorawan.c: 1656: return ptr;
 15839  0070A2  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 15840  0070A6  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 15841                           
 15842                           ; BSR set to: 0
 15843  0070AA  0012               	return		;funcret
 15844  0070AC                     __end_of_ExecuteLinkCheck:
 15845                           	opt stack 0
 15846                           tosu	equ	0xFFF
 15847                           tosh	equ	0xFFE
 15848                           tosl	equ	0xFFD
 15849                           pclath	equ	0xFFA
 15850                           tblptru	equ	0xFF8
 15851                           tblptrh	equ	0xFF7
 15852                           tblptrl	equ	0xFF6
 15853                           tablat	equ	0xFF5
 15854                           prodh	equ	0xFF4
 15855                           prodl	equ	0xFF3
 15856                           intcon	equ	0xFF2
 15857                           intcon2	equ	0xFF1
 15858                           intcon3	equ	0xFF0
 15859                           indf0	equ	0xFEF
 15860                           postinc0	equ	0xFEE
 15861                           fsr0h	equ	0xFEA
 15862                           fsr0l	equ	0xFE9
 15863                           wreg	equ	0xFE8
 15864                           postinc1	equ	0xFE6
 15865                           postdec1	equ	0xFE5
 15866                           plusw1	equ	0xFE3
 15867                           fsr1h	equ	0xFE2
 15868                           fsr1l	equ	0xFE1
 15869                           indf2	equ	0xFDF
 15870                           postinc2	equ	0xFDE
 15871                           postdec2	equ	0xFDD
 15872                           plusw2	equ	0xFDB
 15873                           fsr2h	equ	0xFDA
 15874                           fsr2l	equ	0xFD9
 15875                           status	equ	0xFD8
 15876                           
 15877 ;; *************** function _ExecuteLinkAdr *****************
 15878 ;; Defined at:
 15879 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15880 ;; Parameters:    Size  Location     Type
 15881 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 15882 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15883 ;; Auto vars:     Size  Location     Type
 15884 ;;  redundancy      2   23[BANK0 ] PTR struct .
 15885 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15886 ;;  channelMask     2   20[BANK0 ] unsigned int 
 15887 ;;  dataRate        1   25[BANK0 ] unsigned char 
 15888 ;;  txPower         1   22[BANK0 ] unsigned char 
 15889 ;; Return value:  Size  Location     Type
 15890 ;;                  2   17[BANK0 ] PTR unsigned char 
 15891 ;; Registers used:
 15892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15893 ;; Tracked objects:
 15894 ;;		On entry : F/0
 15895 ;;		On exit  : F/2
 15896 ;;		Unchanged: 0/0
 15897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15899 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15901 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15902 ;;Total ram usage:        9 bytes
 15903 ;; Hardware stack levels used:    1
 15904 ;; Hardware stack levels required when called:   10
 15905 ;; This function calls:
 15906 ;;		_EnableChannels
 15907 ;;		_UpdateCurrentDataRate
 15908 ;;		_UpdateTxPower
 15909 ;;		_ValidateChannelMask
 15910 ;;		_ValidateChannelMaskCntl
 15911 ;;		_ValidateDataRate
 15912 ;;		_ValidateTxPower
 15913 ;; This function is called by:
 15914 ;;		_MacExecuteCommands
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           	psect	text85
 15919  00353C                     __ptext85:
 15920                           	opt stack 0
 15921  00353C                     _ExecuteLinkAdr:
 15922                           	opt stack 15
 15923                           
 15924                           ; BSR set to: 0
 15925                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 15926                           ;lorawan_eu.c: 616: uint16_t channelMask;
 15927                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;incstack = 0
 15931  00353C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15932  003540  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15933  003544  50DF               	movf	indf2,w,c
 15934  003546  0B0F               	andlw	15
 15935  003548  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 15936                           
 15937                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 15938  00354A  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15939  00354E  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15940  003552  50DF               	movf	indf2,w,c
 15941  003554  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 15942  003556  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 15943  003558  0B0F               	andlw	15
 15944  00355A  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 15945                           
 15946                           ; BSR set to: 0
 15947                           ;lorawan_eu.c: 620: ptr++;
 15948  00355C  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15949  00355E  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 15953  003560  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15954  003564  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15955  003568  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 15956  00356C  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 15957                           
 15958                           ; BSR set to: 0
 15959                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 15960  003570  0E02               	movlw	2
 15961  003572  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 15962  003574  0E00               	movlw	0
 15963  003576  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15964                           
 15965                           ; BSR set to: 0
 15966                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 15967                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 15968  003578  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 15969  00357C  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 15970                           
 15971                           ; BSR set to: 0
 15972  003580  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15973  003582  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15974                           
 15975                           ; BSR set to: 0
 15976                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 15977  003584  0102               	movlb	2	; () banked
 15978  003586  AD02               	btfss	(_loRa+2)& (0+255),6,b
 15979  003588  D092               	goto	l13548
 15980                           
 15981                           ; BSR set to: 2
 15982                           ;lorawan_eu.c: 627: {
 15983                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 15984  00358A  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 15985  00358E  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 15986  003592  0100               	movlb	0	; () banked
 15987  003594  38DF               	swapf	223,w,c
 15988  003596  0B07               	andlw	7
 15989  003598  EC62  F03B         	call	_ValidateChannelMaskCntl
 15990  00359C  0900               	iorlw	0
 15991  00359E  E112               	bnz	l13516
 15992                           
 15993                           ; BSR set to: 0
 15994  0035A0  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 15995  0035A4  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 15996  0035A8  EC85  F037         	call	_ValidateChannelMask	;wreg free
 15997  0035AC  0900               	iorlw	0
 15998  0035AE  E10A               	bnz	l13516
 15999                           
 16000                           ; BSR set to: 0
 16001                           ;lorawan_eu.c: 629: {
 16002                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16003  0035B0  0102               	movlb	2	; () banked
 16004  0035B2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16005  0035B4  0D02               	mullw	2
 16006  0035B6  0EA9               	movlw	low (_loRa+169)
 16007  0035B8  24F3               	addwf	prodl,w,c
 16008  0035BA  6ED9               	movwf	fsr2l,c
 16009  0035BC  0E02               	movlw	high (_loRa+169)
 16010  0035BE  20F4               	addwfc	prodh,w,c
 16011  0035C0  6EDA               	movwf	fsr2h,c
 16012  0035C2  80DF               	bsf	indf2,0,c
 16013  0035C4                     l13516:
 16014                           
 16015                           ;lorawan_eu.c: 631: }
 16016                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16017  0035C4  0100               	movlb	0	; () banked
 16018  0035C6  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16019  0035C8  EC8E  F03B         	call	_ValidateDataRate
 16020  0035CC  0900               	iorlw	0
 16021  0035CE  E112               	bnz	l13524
 16022                           
 16023                           ; BSR set to: 0
 16024  0035D0  0102               	movlb	2	; () banked
 16025  0035D2  51EB               	movf	(_loRa+235)& (0+255),w,b
 16026  0035D4  0100               	movlb	0	; () banked
 16027  0035D6  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16028  0035D8  E30D               	bnc	l13524
 16029                           
 16030                           ; BSR set to: 0
 16031  0035DA  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16032  0035DC  0102               	movlb	2	; () banked
 16033  0035DE  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16034  0035E0  E309               	bnc	l13524
 16035                           
 16036                           ; BSR set to: 2
 16037                           ;lorawan_eu.c: 634: {
 16038                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16039  0035E2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16040  0035E4  0D02               	mullw	2
 16041  0035E6  0EA9               	movlw	low (_loRa+169)
 16042  0035E8  24F3               	addwf	prodl,w,c
 16043  0035EA  6ED9               	movwf	fsr2l,c
 16044  0035EC  0E02               	movlw	high (_loRa+169)
 16045  0035EE  20F4               	addwfc	prodh,w,c
 16046  0035F0  6EDA               	movwf	fsr2h,c
 16047  0035F2  82DF               	bsf	indf2,1,c
 16048  0035F4                     l13524:
 16049                           
 16050                           ;lorawan_eu.c: 636: }
 16051                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16052  0035F4  0100               	movlb	0	; () banked
 16053  0035F6  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16054  0035F8  ECE0  F039         	call	_ValidateTxPower
 16055  0035FC  0900               	iorlw	0
 16056  0035FE  E10A               	bnz	l1099
 16057                           
 16058                           ; BSR set to: 0
 16059                           ;lorawan_eu.c: 639: {
 16060                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16061  003600  0102               	movlb	2	; () banked
 16062  003602  51A7               	movf	(_loRa+167)& (0+255),w,b
 16063  003604  0D02               	mullw	2
 16064  003606  0EA9               	movlw	low (_loRa+169)
 16065  003608  24F3               	addwf	prodl,w,c
 16066  00360A  6ED9               	movwf	fsr2l,c
 16067  00360C  0E02               	movlw	high (_loRa+169)
 16068  00360E  20F4               	addwfc	prodh,w,c
 16069  003610  6EDA               	movwf	fsr2h,c
 16070  003612  84DF               	bsf	indf2,2,c
 16071  003614                     l1099:
 16072                           
 16073                           ;lorawan_eu.c: 641: }
 16074                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16075  003614  0102               	movlb	2	; () banked
 16076  003616  51A7               	movf	(_loRa+167)& (0+255),w,b
 16077  003618  0D02               	mullw	2
 16078  00361A  0EA9               	movlw	low (_loRa+169)
 16079  00361C  24F3               	addwf	prodl,w,c
 16080  00361E  6ED9               	movwf	fsr2l,c
 16081  003620  0E02               	movlw	high (_loRa+169)
 16082  003622  20F4               	addwfc	prodh,w,c
 16083  003624  6EDA               	movwf	fsr2h,c
 16084  003626  A4DF               	btfss	indf2,2,c
 16085  003628  D05D               	goto	l13550
 16086                           
 16087                           ; BSR set to: 2
 16088  00362A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16089  00362C  0D02               	mullw	2
 16090  00362E  0EA9               	movlw	low (_loRa+169)
 16091  003630  24F3               	addwf	prodl,w,c
 16092  003632  6ED9               	movwf	fsr2l,c
 16093  003634  0E02               	movlw	high (_loRa+169)
 16094  003636  20F4               	addwfc	prodh,w,c
 16095  003638  6EDA               	movwf	fsr2h,c
 16096  00363A  A2DF               	btfss	indf2,1,c
 16097  00363C  D053               	goto	l13550
 16098                           
 16099                           ; BSR set to: 2
 16100  00363E  51A7               	movf	(_loRa+167)& (0+255),w,b
 16101  003640  0D02               	mullw	2
 16102  003642  0EA9               	movlw	low (_loRa+169)
 16103  003644  24F3               	addwf	prodl,w,c
 16104  003646  6ED9               	movwf	fsr2l,c
 16105  003648  0E02               	movlw	high (_loRa+169)
 16106  00364A  20F4               	addwfc	prodh,w,c
 16107  00364C  6EDA               	movwf	fsr2h,c
 16108  00364E  A0DF               	btfss	indf2,0,c
 16109  003650  D049               	goto	l13550
 16110                           
 16111                           ; BSR set to: 2
 16112                           ;lorawan_eu.c: 644: {
 16113                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16114  003652  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16115  003656  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16116  00365A  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16117  00365E  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16118  003662  0100               	movlb	0	; () banked
 16119  003664  38DF               	swapf	223,w,c
 16120  003666  0B07               	andlw	7
 16121  003668  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16122  00366A  EC79  F03B         	call	_EnableChannels	;wreg free
 16123                           
 16124                           ; BSR set to: 0
 16125                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16126  00366E  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16127  003670  EC60  F03C         	call	_UpdateTxPower
 16128                           
 16129                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16130  003674  0102               	movlb	2	; () banked
 16131  003676  8903               	bsf	(_loRa+3)& (0+255),4,b
 16132                           
 16133                           ; BSR set to: 2
 16134                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16135  003678  0100               	movlb	0	; () banked
 16136  00367A  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16137  00367C  EC64  F03C         	call	_UpdateCurrentDataRate
 16138                           
 16139                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16140  003680  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16141  003684  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16142  003688  0100               	movlb	0	; () banked
 16143  00368A  50DF               	movf	223,w,c
 16144  00368C  0B0F               	andlw	15
 16145  00368E  E103               	bnz	l13544
 16146                           
 16147                           ; BSR set to: 0
 16148                           ;lorawan_eu.c: 652: {
 16149                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16150  003690  0102               	movlb	2	; () banked
 16151  003692  6BD6               	clrf	(_loRa+214)& (0+255),b
 16152                           
 16153                           ;lorawan_eu.c: 654: }
 16154  003694  D00A               	goto	l13546
 16155  003696                     l13544:
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;lorawan_eu.c: 655: else
 16159                           ;lorawan_eu.c: 656: {
 16160                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16161  003696  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16162  00369A  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16163  00369E  50DF               	movf	223,w,c
 16164  0036A0  0B0F               	andlw	15
 16165  0036A2  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16166  0036A4  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16167  0036A6  0102               	movlb	2	; () banked
 16168  0036A8  6FD6               	movwf	(_loRa+214)& (0+255),b
 16169  0036AA                     l13546:
 16170                           
 16171                           ; BSR set to: 2
 16172                           ;lorawan_eu.c: 658: }
 16173                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16174  0036AA  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16175  0036AC  D01B               	goto	l13550
 16176  0036AE                     l13548:
 16177                           
 16178                           ; BSR set to: 2
 16179                           ;lorawan_eu.c: 662: else
 16180                           ;lorawan_eu.c: 663: {
 16181                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16182  0036AE  51A7               	movf	(_loRa+167)& (0+255),w,b
 16183  0036B0  0D02               	mullw	2
 16184  0036B2  0EA9               	movlw	low (_loRa+169)
 16185  0036B4  24F3               	addwf	prodl,w,c
 16186  0036B6  6ED9               	movwf	fsr2l,c
 16187  0036B8  0E02               	movlw	high (_loRa+169)
 16188  0036BA  20F4               	addwfc	prodh,w,c
 16189  0036BC  6EDA               	movwf	fsr2h,c
 16190  0036BE  90DF               	bcf	indf2,0,c
 16191                           
 16192                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16193  0036C0  51A7               	movf	(_loRa+167)& (0+255),w,b
 16194  0036C2  0D02               	mullw	2
 16195  0036C4  0EA9               	movlw	low (_loRa+169)
 16196  0036C6  24F3               	addwf	prodl,w,c
 16197  0036C8  6ED9               	movwf	fsr2l,c
 16198  0036CA  0E02               	movlw	high (_loRa+169)
 16199  0036CC  20F4               	addwfc	prodh,w,c
 16200  0036CE  6EDA               	movwf	fsr2h,c
 16201  0036D0  92DF               	bcf	indf2,1,c
 16202                           
 16203                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16204  0036D2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16205  0036D4  0D02               	mullw	2
 16206  0036D6  0EA9               	movlw	low (_loRa+169)
 16207  0036D8  24F3               	addwf	prodl,w,c
 16208  0036DA  6ED9               	movwf	fsr2l,c
 16209  0036DC  0E02               	movlw	high (_loRa+169)
 16210  0036DE  20F4               	addwfc	prodh,w,c
 16211  0036E0  6EDA               	movwf	fsr2h,c
 16212  0036E2  94DF               	bcf	indf2,2,c
 16213  0036E4                     l13550:
 16214                           
 16215                           ; BSR set to: 2
 16216                           ;lorawan_eu.c: 667: }
 16217                           ;lorawan_eu.c: 669: return ptr;
 16218  0036E4  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16219  0036E8  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16220                           
 16221                           ; BSR set to: 2
 16222  0036EC  0012               	return		;funcret
 16223  0036EE                     __end_of_ExecuteLinkAdr:
 16224                           	opt stack 0
 16225                           tosu	equ	0xFFF
 16226                           tosh	equ	0xFFE
 16227                           tosl	equ	0xFFD
 16228                           pclath	equ	0xFFA
 16229                           tblptru	equ	0xFF8
 16230                           tblptrh	equ	0xFF7
 16231                           tblptrl	equ	0xFF6
 16232                           tablat	equ	0xFF5
 16233                           prodh	equ	0xFF4
 16234                           prodl	equ	0xFF3
 16235                           intcon	equ	0xFF2
 16236                           intcon2	equ	0xFF1
 16237                           intcon3	equ	0xFF0
 16238                           indf0	equ	0xFEF
 16239                           postinc0	equ	0xFEE
 16240                           fsr0h	equ	0xFEA
 16241                           fsr0l	equ	0xFE9
 16242                           wreg	equ	0xFE8
 16243                           postinc1	equ	0xFE6
 16244                           postdec1	equ	0xFE5
 16245                           plusw1	equ	0xFE3
 16246                           fsr1h	equ	0xFE2
 16247                           fsr1l	equ	0xFE1
 16248                           indf2	equ	0xFDF
 16249                           postinc2	equ	0xFDE
 16250                           postdec2	equ	0xFDD
 16251                           plusw2	equ	0xFDB
 16252                           fsr2h	equ	0xFDA
 16253                           fsr2l	equ	0xFD9
 16254                           status	equ	0xFD8
 16255                           
 16256 ;; *************** function _ValidateTxPower *****************
 16257 ;; Defined at:
 16258 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;  txPowerNew      1    wreg     unsigned char 
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 16263 ;;  result          1    4[BANK0 ] enum E8016
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  1    wreg      enum E8016
 16266 ;; Registers used:
 16267 ;;		wreg, status,2, status,0
 16268 ;; Tracked objects:
 16269 ;;		On entry : F/0
 16270 ;;		On exit  : F/0
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16274 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16276 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16277 ;;Total ram usage:        2 bytes
 16278 ;; Hardware stack levels used:    1
 16279 ;; Hardware stack levels required when called:    7
 16280 ;; This function calls:
 16281 ;;		Nothing
 16282 ;; This function is called by:
 16283 ;;		_ExecuteLinkAdr
 16284 ;; This function uses a non-reentrant model
 16285 ;;
 16286                           
 16287                           	psect	text86
 16288  0073C0                     __ptext86:
 16289                           	opt stack 0
 16290  0073C0                     _ValidateTxPower:
 16291                           	opt stack 17
 16292                           
 16293                           ; BSR set to: 2
 16294                           ;incstack = 0
 16295                           ;ValidateTxPower@txPowerNew stored from wreg
 16296  0073C0  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16297                           
 16298                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16299  0073C2  0100               	movlb	0	; () banked
 16300  0073C4  6B64               	clrf	ValidateTxPower@result& (0+255),b
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16304  0073C6  0102               	movlb	2	; () banked
 16305  0073C8  51A4               	movf	(_loRa+164)& (0+255),w,b
 16306  0073CA  E103               	bnz	l12930
 16307                           
 16308                           ; BSR set to: 2
 16309  0073CC  0100               	movlb	0	; () banked
 16310  0073CE  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16311  0073D0  E004               	bz	l12932
 16312  0073D2                     l12930:
 16313  0073D2  0E05               	movlw	5
 16314  0073D4  0100               	movlb	0	; () banked
 16315  0073D6  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16316  0073D8  D002               	goto	l1083
 16317  0073DA                     l12932:
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;lorawan_eu.c: 587: {
 16321                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16322  0073DA  0E03               	movlw	3
 16323  0073DC  6F64               	movwf	ValidateTxPower@result& (0+255),b
 16324  0073DE                     l1083:
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;lorawan_eu.c: 589: }
 16328                           ;lorawan_eu.c: 591: return result;
 16329  0073DE  5164               	movf	ValidateTxPower@result& (0+255),w,b
 16330                           
 16331                           ; BSR set to: 0
 16332  0073E0  0012               	return		;funcret
 16333  0073E2                     __end_of_ValidateTxPower:
 16334                           	opt stack 0
 16335                           tosu	equ	0xFFF
 16336                           tosh	equ	0xFFE
 16337                           tosl	equ	0xFFD
 16338                           pclath	equ	0xFFA
 16339                           tblptru	equ	0xFF8
 16340                           tblptrh	equ	0xFF7
 16341                           tblptrl	equ	0xFF6
 16342                           tablat	equ	0xFF5
 16343                           prodh	equ	0xFF4
 16344                           prodl	equ	0xFF3
 16345                           intcon	equ	0xFF2
 16346                           intcon2	equ	0xFF1
 16347                           intcon3	equ	0xFF0
 16348                           indf0	equ	0xFEF
 16349                           postinc0	equ	0xFEE
 16350                           fsr0h	equ	0xFEA
 16351                           fsr0l	equ	0xFE9
 16352                           wreg	equ	0xFE8
 16353                           postinc1	equ	0xFE6
 16354                           postdec1	equ	0xFE5
 16355                           plusw1	equ	0xFE3
 16356                           fsr1h	equ	0xFE2
 16357                           fsr1l	equ	0xFE1
 16358                           indf2	equ	0xFDF
 16359                           postinc2	equ	0xFDE
 16360                           postdec2	equ	0xFDD
 16361                           plusw2	equ	0xFDB
 16362                           fsr2h	equ	0xFDA
 16363                           fsr2l	equ	0xFD9
 16364                           status	equ	0xFD8
 16365                           
 16366 ;; *************** function _ValidateChannelMaskCntl *****************
 16367 ;; Defined at:
 16368 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16369 ;; Parameters:    Size  Location     Type
 16370 ;;  channelMaskC    1    wreg     unsigned char 
 16371 ;; Auto vars:     Size  Location     Type
 16372 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 16373 ;;  result          1    4[BANK0 ] enum E8016
 16374 ;; Return value:  Size  Location     Type
 16375 ;;                  1    wreg      enum E8016
 16376 ;; Registers used:
 16377 ;;		wreg, status,2, status,0
 16378 ;; Tracked objects:
 16379 ;;		On entry : F/0
 16380 ;;		On exit  : F/0
 16381 ;;		Unchanged: 0/0
 16382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16387 ;;Total ram usage:        2 bytes
 16388 ;; Hardware stack levels used:    1
 16389 ;; Hardware stack levels required when called:    7
 16390 ;; This function calls:
 16391 ;;		Nothing
 16392 ;; This function is called by:
 16393 ;;		_ExecuteLinkAdr
 16394 ;; This function uses a non-reentrant model
 16395 ;;
 16396                           
 16397                           	psect	text87
 16398  0076C4                     __ptext87:
 16399                           	opt stack 0
 16400  0076C4                     _ValidateChannelMaskCntl:
 16401                           	opt stack 17
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;incstack = 0
 16405                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 16406  0076C4  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 16407                           
 16408                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 16409  0076C6  0100               	movlb	0	; () banked
 16410  0076C8  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 16411                           
 16412                           ; BSR set to: 0
 16413                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 16414  0076CA  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16415  0076CC  E005               	bz	l1250
 16416                           
 16417                           ; BSR set to: 0
 16418  0076CE  0E06               	movlw	6
 16419  0076D0  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16420  0076D2  E002               	bz	l1250
 16421                           
 16422                           ; BSR set to: 0
 16423                           ;lorawan_eu.c: 1142: {
 16424                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 16425  0076D4  0E03               	movlw	3
 16426  0076D6  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 16427  0076D8                     l1250:
 16428                           
 16429                           ; BSR set to: 0
 16430                           ;lorawan_eu.c: 1144: }
 16431                           ;lorawan_eu.c: 1146: return result;
 16432  0076D8  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 16433                           
 16434                           ; BSR set to: 0
 16435  0076DA  0012               	return		;funcret
 16436  0076DC                     __end_of_ValidateChannelMaskCntl:
 16437                           	opt stack 0
 16438                           tosu	equ	0xFFF
 16439                           tosh	equ	0xFFE
 16440                           tosl	equ	0xFFD
 16441                           pclath	equ	0xFFA
 16442                           tblptru	equ	0xFF8
 16443                           tblptrh	equ	0xFF7
 16444                           tblptrl	equ	0xFF6
 16445                           tablat	equ	0xFF5
 16446                           prodh	equ	0xFF4
 16447                           prodl	equ	0xFF3
 16448                           intcon	equ	0xFF2
 16449                           intcon2	equ	0xFF1
 16450                           intcon3	equ	0xFF0
 16451                           indf0	equ	0xFEF
 16452                           postinc0	equ	0xFEE
 16453                           fsr0h	equ	0xFEA
 16454                           fsr0l	equ	0xFE9
 16455                           wreg	equ	0xFE8
 16456                           postinc1	equ	0xFE6
 16457                           postdec1	equ	0xFE5
 16458                           plusw1	equ	0xFE3
 16459                           fsr1h	equ	0xFE2
 16460                           fsr1l	equ	0xFE1
 16461                           indf2	equ	0xFDF
 16462                           postinc2	equ	0xFDE
 16463                           postdec2	equ	0xFDD
 16464                           plusw2	equ	0xFDB
 16465                           fsr2h	equ	0xFDA
 16466                           fsr2l	equ	0xFD9
 16467                           status	equ	0xFD8
 16468                           
 16469 ;; *************** function _ValidateChannelMask *****************
 16470 ;; Defined at:
 16471 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16472 ;; Parameters:    Size  Location     Type
 16473 ;;  channelMask     2    4[BANK0 ] unsigned int 
 16474 ;; Auto vars:     Size  Location     Type
 16475 ;;  i               1    6[BANK0 ] unsigned char 
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  1    wreg      enum E8016
 16478 ;; Registers used:
 16479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16480 ;; Tracked objects:
 16481 ;;		On entry : F/0
 16482 ;;		On exit  : F/0
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16488 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16489 ;;Total ram usage:        3 bytes
 16490 ;; Hardware stack levels used:    1
 16491 ;; Hardware stack levels required when called:    7
 16492 ;; This function calls:
 16493 ;;		Nothing
 16494 ;; This function is called by:
 16495 ;;		_ExecuteLinkAdr
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           	psect	text88
 16500  006F0A                     __ptext88:
 16501                           	opt stack 0
 16502  006F0A                     _ValidateChannelMask:
 16503                           	opt stack 17
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 16507                           
 16508                           ; BSR set to: 0
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;incstack = 0
 16512  006F0A  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 16513  006F0C  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 16514  006F0E  B4D8               	btfsc	status,2,c
 16515  006F10  0C03               	retlw	3
 16516                           
 16517                           ; BSR set to: 0
 16518                           ;lorawan_eu.c: 1171: {
 16519                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 16520  006F12  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 16521  006F14                     l1264:
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;lorawan_eu.c: 1173: {
 16525                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 16526  006F14  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 16527  006F16  D00D               	goto	l12964
 16528                           
 16529                           ; BSR set to: 0
 16530  006F18  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 16531  006F1A  0D0E               	mullw	14
 16532  006F1C  0E0D               	movlw	low (_Channels+13)
 16533  006F1E  24F3               	addwf	prodl,w,c
 16534  006F20  6ED9               	movwf	fsr2l,c
 16535  006F22  0E04               	movlw	high (_Channels+13)
 16536  006F24  20F4               	addwfc	prodh,w,c
 16537  006F26  6EDA               	movwf	fsr2h,c
 16538  006F28  50DF               	movf	indf2,w,c
 16539  006F2A  0B07               	andlw	7
 16540  006F2C  0A07               	xorlw	7
 16541  006F2E  E001               	bz	l12964
 16542                           
 16543                           ; BSR set to: 0
 16544                           ;lorawan_eu.c: 1175: {
 16545                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 16546  006F30  0C03               	retlw	3
 16547  006F32                     l12964:
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;lorawan_eu.c: 1178: else
 16551                           ;lorawan_eu.c: 1179: {
 16552                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 16553  006F32  90D8               	bcf	status,0,c
 16554  006F34  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 16555  006F36  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 16556                           
 16557                           ; BSR set to: 0
 16558  006F38  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 16559                           
 16560                           ; BSR set to: 0
 16561  006F3A  0E0F               	movlw	15
 16562  006F3C  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 16563  006F3E  D7EA               	goto	l1264
 16564  006F40  0C00               	retlw	0
 16565  006F42                     __end_of_ValidateChannelMask:
 16566                           	opt stack 0
 16567                           tosu	equ	0xFFF
 16568                           tosh	equ	0xFFE
 16569                           tosl	equ	0xFFD
 16570                           pclath	equ	0xFFA
 16571                           tblptru	equ	0xFF8
 16572                           tblptrh	equ	0xFF7
 16573                           tblptrl	equ	0xFF6
 16574                           tablat	equ	0xFF5
 16575                           prodh	equ	0xFF4
 16576                           prodl	equ	0xFF3
 16577                           intcon	equ	0xFF2
 16578                           intcon2	equ	0xFF1
 16579                           intcon3	equ	0xFF0
 16580                           indf0	equ	0xFEF
 16581                           postinc0	equ	0xFEE
 16582                           fsr0h	equ	0xFEA
 16583                           fsr0l	equ	0xFE9
 16584                           wreg	equ	0xFE8
 16585                           postinc1	equ	0xFE6
 16586                           postdec1	equ	0xFE5
 16587                           plusw1	equ	0xFE3
 16588                           fsr1h	equ	0xFE2
 16589                           fsr1l	equ	0xFE1
 16590                           indf2	equ	0xFDF
 16591                           postinc2	equ	0xFDE
 16592                           postdec2	equ	0xFDD
 16593                           plusw2	equ	0xFDB
 16594                           fsr2h	equ	0xFDA
 16595                           fsr2l	equ	0xFD9
 16596                           status	equ	0xFD8
 16597                           
 16598 ;; *************** function _UpdateTxPower *****************
 16599 ;; Defined at:
 16600 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16601 ;; Parameters:    Size  Location     Type
 16602 ;;  txPowerNew      1    wreg     unsigned char 
 16603 ;; Auto vars:     Size  Location     Type
 16604 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 16605 ;; Return value:  Size  Location     Type
 16606 ;;                  1    wreg      void 
 16607 ;; Registers used:
 16608 ;;		wreg
 16609 ;; Tracked objects:
 16610 ;;		On entry : F/0
 16611 ;;		On exit  : 0/0
 16612 ;;		Unchanged: 0/0
 16613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16617 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16618 ;;Total ram usage:        1 bytes
 16619 ;; Hardware stack levels used:    1
 16620 ;; Hardware stack levels required when called:    7
 16621 ;; This function calls:
 16622 ;;		Nothing
 16623 ;; This function is called by:
 16624 ;;		_ExecuteLinkAdr
 16625 ;; This function uses a non-reentrant model
 16626 ;;
 16627                           
 16628                           	psect	text89
 16629  0078C0                     __ptext89:
 16630                           	opt stack 0
 16631  0078C0                     _UpdateTxPower:
 16632                           	opt stack 17
 16633                           
 16634                           ; BSR set to: 0
 16635                           ;incstack = 0
 16636                           ;UpdateTxPower@txPowerNew stored from wreg
 16637  0078C0  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 16638                           
 16639                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 16640  0078C2  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 16641  0078C6  0012               	return		;funcret
 16642  0078C8                     __end_of_UpdateTxPower:
 16643                           	opt stack 0
 16644                           tosu	equ	0xFFF
 16645                           tosh	equ	0xFFE
 16646                           tosl	equ	0xFFD
 16647                           pclath	equ	0xFFA
 16648                           tblptru	equ	0xFF8
 16649                           tblptrh	equ	0xFF7
 16650                           tblptrl	equ	0xFF6
 16651                           tablat	equ	0xFF5
 16652                           prodh	equ	0xFF4
 16653                           prodl	equ	0xFF3
 16654                           intcon	equ	0xFF2
 16655                           intcon2	equ	0xFF1
 16656                           intcon3	equ	0xFF0
 16657                           indf0	equ	0xFEF
 16658                           postinc0	equ	0xFEE
 16659                           fsr0h	equ	0xFEA
 16660                           fsr0l	equ	0xFE9
 16661                           wreg	equ	0xFE8
 16662                           postinc1	equ	0xFE6
 16663                           postdec1	equ	0xFE5
 16664                           plusw1	equ	0xFE3
 16665                           fsr1h	equ	0xFE2
 16666                           fsr1l	equ	0xFE1
 16667                           indf2	equ	0xFDF
 16668                           postinc2	equ	0xFDE
 16669                           postdec2	equ	0xFDD
 16670                           plusw2	equ	0xFDB
 16671                           fsr2h	equ	0xFDA
 16672                           fsr2l	equ	0xFD9
 16673                           status	equ	0xFD8
 16674                           
 16675 ;; *************** function _EnableChannels *****************
 16676 ;; Defined at:
 16677 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;  channelMask     2   14[BANK0 ] unsigned int 
 16680 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 16681 ;; Auto vars:     Size  Location     Type
 16682 ;;		None
 16683 ;; Return value:  Size  Location     Type
 16684 ;;                  1    wreg      void 
 16685 ;; Registers used:
 16686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16687 ;; Tracked objects:
 16688 ;;		On entry : F/0
 16689 ;;		On exit  : F/0
 16690 ;;		Unchanged: 0/0
 16691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16692 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16695 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16696 ;;Total ram usage:        3 bytes
 16697 ;; Hardware stack levels used:    1
 16698 ;; Hardware stack levels required when called:    9
 16699 ;; This function calls:
 16700 ;;		_EnableChannels1
 16701 ;; This function is called by:
 16702 ;;		_ExecuteLinkAdr
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           	psect	text90
 16707  0076F2                     __ptext90:
 16708                           	opt stack 0
 16709  0076F2                     _EnableChannels:
 16710                           	opt stack 15
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 16714                           
 16715                           ;incstack = 0
 16716  0076F2  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 16717  0076F6  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 16718  0076FA  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 16719  0076FE  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 16720  007700  0E10               	movlw	16
 16721  007702  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 16722  007704  EFE8  F033         	goto	_EnableChannels1	;wreg free
 16723  007708                     __end_of_EnableChannels:
 16724                           	opt stack 0
 16725                           tosu	equ	0xFFF
 16726                           tosh	equ	0xFFE
 16727                           tosl	equ	0xFFD
 16728                           pclath	equ	0xFFA
 16729                           tblptru	equ	0xFF8
 16730                           tblptrh	equ	0xFF7
 16731                           tblptrl	equ	0xFF6
 16732                           tablat	equ	0xFF5
 16733                           prodh	equ	0xFF4
 16734                           prodl	equ	0xFF3
 16735                           intcon	equ	0xFF2
 16736                           intcon2	equ	0xFF1
 16737                           intcon3	equ	0xFF0
 16738                           indf0	equ	0xFEF
 16739                           postinc0	equ	0xFEE
 16740                           fsr0h	equ	0xFEA
 16741                           fsr0l	equ	0xFE9
 16742                           wreg	equ	0xFE8
 16743                           postinc1	equ	0xFE6
 16744                           postdec1	equ	0xFE5
 16745                           plusw1	equ	0xFE3
 16746                           fsr1h	equ	0xFE2
 16747                           fsr1l	equ	0xFE1
 16748                           indf2	equ	0xFDF
 16749                           postinc2	equ	0xFDE
 16750                           postdec2	equ	0xFDD
 16751                           plusw2	equ	0xFDB
 16752                           fsr2h	equ	0xFDA
 16753                           fsr2l	equ	0xFD9
 16754                           status	equ	0xFD8
 16755                           
 16756 ;; *************** function _EnableChannels1 *****************
 16757 ;; Defined at:
 16758 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16759 ;; Parameters:    Size  Location     Type
 16760 ;;  channelMask     2    8[BANK0 ] unsigned int 
 16761 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 16762 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 16763 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 16764 ;; Auto vars:     Size  Location     Type
 16765 ;;  i               1   13[BANK0 ] unsigned char 
 16766 ;; Return value:  Size  Location     Type
 16767 ;;                  1    wreg      void 
 16768 ;; Registers used:
 16769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16770 ;; Tracked objects:
 16771 ;;		On entry : F/0
 16772 ;;		On exit  : F/0
 16773 ;;		Unchanged: 0/0
 16774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16775 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16778 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16779 ;;Total ram usage:        6 bytes
 16780 ;; Hardware stack levels used:    1
 16781 ;; Hardware stack levels required when called:    8
 16782 ;; This function calls:
 16783 ;;		_UpdateChannelIdStatus
 16784 ;; This function is called by:
 16785 ;;		_EnableChannels
 16786 ;; This function uses a non-reentrant model
 16787 ;;
 16788                           
 16789                           	psect	text91
 16790  0067D0                     __ptext91:
 16791                           	opt stack 0
 16792  0067D0                     _EnableChannels1:
 16793                           	opt stack 15
 16794                           
 16795                           ; BSR set to: 0
 16796                           ;lorawan_eu.c: 1195: uint8_t i;
 16797                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;incstack = 0
 16801  0067D0  0E06               	movlw	6
 16802  0067D2  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16803  0067D4  E10E               	bnz	l12662
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;lorawan_eu.c: 1198: {
 16807                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16808  0067D6  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16809  0067DA  D007               	goto	l12660
 16810  0067DC                     l12656:
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;lorawan_eu.c: 1200: {
 16814                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 16815  0067DC  0E01               	movlw	1
 16816  0067DE  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16817  0067E0  516D               	movf	EnableChannels1@i& (0+255),w,b
 16818  0067E2  ECBE  F023         	call	_UpdateChannelIdStatus
 16819                           
 16820                           ; BSR set to: 2
 16821  0067E6  0100               	movlb	0	; () banked
 16822  0067E8  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16823  0067EA                     l12660:
 16824                           
 16825                           ; BSR set to: 0
 16826  0067EA  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16827  0067EC  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 16828  0067EE  E3F6               	bnc	l12656
 16829  0067F0  0012               	return	
 16830  0067F2                     l12662:
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 16834  0067F2  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16835  0067F4  A4D8               	btfss	status,2,c
 16836  0067F6  0012               	return	
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;lorawan_eu.c: 1205: {
 16840                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16841  0067F8  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16842  0067FC  D011               	goto	l12674
 16843  0067FE                     l1279:
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;lorawan_eu.c: 1207: {
 16847                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 16848  0067FE  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 16849  006800  D006               	goto	l12668
 16850                           
 16851                           ; BSR set to: 0
 16852                           ;lorawan_eu.c: 1209: {
 16853                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 16854  006802  0E01               	movlw	1
 16855  006804  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16856  006806  516D               	movf	EnableChannels1@i& (0+255),w,b
 16857  006808  ECBE  F023         	call	_UpdateChannelIdStatus
 16858                           
 16859                           ;lorawan_eu.c: 1211: }
 16860  00680C  D004               	goto	l12670
 16861  00680E                     l12668:
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;lorawan_eu.c: 1212: else
 16865                           ;lorawan_eu.c: 1213: {
 16866                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 16867  00680E  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 16868  006810  516D               	movf	EnableChannels1@i& (0+255),w,b
 16869  006812  ECBE  F023         	call	_UpdateChannelIdStatus
 16870  006816                     l12670:
 16871                           
 16872                           ; BSR set to: 2
 16873                           ;lorawan_eu.c: 1215: }
 16874                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 16875  006816  0100               	movlb	0	; () banked
 16876  006818  90D8               	bcf	status,0,c
 16877  00681A  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 16878  00681C  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 16879                           
 16880                           ; BSR set to: 0
 16881  00681E  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16882  006820                     l12674:
 16883                           
 16884                           ; BSR set to: 0
 16885  006820  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16886  006822  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 16887  006824  E3EC               	bnc	l1279
 16888                           
 16889                           ; BSR set to: 0
 16890  006826  0012               	return		;funcret
 16891  006828                     __end_of_EnableChannels1:
 16892                           	opt stack 0
 16893                           tosu	equ	0xFFF
 16894                           tosh	equ	0xFFE
 16895                           tosl	equ	0xFFD
 16896                           pclath	equ	0xFFA
 16897                           tblptru	equ	0xFF8
 16898                           tblptrh	equ	0xFF7
 16899                           tblptrl	equ	0xFF6
 16900                           tablat	equ	0xFF5
 16901                           prodh	equ	0xFF4
 16902                           prodl	equ	0xFF3
 16903                           intcon	equ	0xFF2
 16904                           intcon2	equ	0xFF1
 16905                           intcon3	equ	0xFF0
 16906                           indf0	equ	0xFEF
 16907                           postinc0	equ	0xFEE
 16908                           fsr0h	equ	0xFEA
 16909                           fsr0l	equ	0xFE9
 16910                           wreg	equ	0xFE8
 16911                           postinc1	equ	0xFE6
 16912                           postdec1	equ	0xFE5
 16913                           plusw1	equ	0xFE3
 16914                           fsr1h	equ	0xFE2
 16915                           fsr1l	equ	0xFE1
 16916                           indf2	equ	0xFDF
 16917                           postinc2	equ	0xFDE
 16918                           postdec2	equ	0xFDD
 16919                           plusw2	equ	0xFDB
 16920                           fsr2h	equ	0xFDA
 16921                           fsr2l	equ	0xFD9
 16922                           status	equ	0xFD8
 16923                           
 16924 ;; *************** function _UpdateChannelIdStatus *****************
 16925 ;; Defined at:
 16926 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16927 ;; Parameters:    Size  Location     Type
 16928 ;;  channelId       1    wreg     unsigned char 
 16929 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16930 ;; Auto vars:     Size  Location     Type
 16931 ;;  channelId       1    6[BANK0 ] unsigned char 
 16932 ;;  i               1    7[BANK0 ] unsigned char 
 16933 ;; Return value:  Size  Location     Type
 16934 ;;                  1    wreg      void 
 16935 ;; Registers used:
 16936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16937 ;; Tracked objects:
 16938 ;;		On entry : F/0
 16939 ;;		On exit  : F/2
 16940 ;;		Unchanged: 0/0
 16941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16942 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16945 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16946 ;;Total ram usage:        4 bytes
 16947 ;; Hardware stack levels used:    1
 16948 ;; Hardware stack levels required when called:    7
 16949 ;; This function calls:
 16950 ;;		Nothing
 16951 ;; This function is called by:
 16952 ;;		_LORAWAN_SetChannelIdStatus
 16953 ;;		_ExecuteNewChannel
 16954 ;;		_EnableChannels1
 16955 ;; This function uses a non-reentrant model
 16956 ;;
 16957                           
 16958                           	psect	text92
 16959  00477C                     __ptext92:
 16960                           	opt stack 0
 16961  00477C                     _UpdateChannelIdStatus:
 16962                           	opt stack 17
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;incstack = 0
 16966                           ;UpdateChannelIdStatus@channelId stored from wreg
 16967  00477C  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 16968                           
 16969                           ;lorawan_eu.c: 1044: uint8_t i;
 16970                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 16971  00477E  0100               	movlb	0	; () banked
 16972  004780  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 16973  004782  0D0E               	mullw	14
 16974  004784  0E04               	movlw	low (_Channels+4)
 16975  004786  24F3               	addwf	prodl,w,c
 16976  004788  6ED9               	movwf	fsr2l,c
 16977  00478A  0E04               	movlw	high (_Channels+4)
 16978  00478C  20F4               	addwfc	prodh,w,c
 16979  00478E  6EDA               	movwf	fsr2h,c
 16980  004790  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 16981                           
 16982                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 16983  004794  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 16984  004796  0D0E               	mullw	14
 16985  004798  0E04               	movlw	low (_Channels+4)
 16986  00479A  24F3               	addwf	prodl,w,c
 16987  00479C  6ED9               	movwf	fsr2l,c
 16988  00479E  0E04               	movlw	high (_Channels+4)
 16989  0047A0  20F4               	addwfc	prodh,w,c
 16990  0047A2  6EDA               	movwf	fsr2h,c
 16991  0047A4  50DF               	movf	indf2,w,c
 16992  0047A6  E10C               	bnz	l12378
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;lorawan_eu.c: 1048: {
 16996                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 16997  0047A8  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 16998  0047AA  0D0E               	mullw	14
 16999  0047AC  0E08               	movlw	low (_Channels+8)
 17000  0047AE  24F3               	addwf	prodl,w,c
 17001  0047B0  6ED9               	movwf	fsr2l,c
 17002  0047B2  0E04               	movlw	high (_Channels+8)
 17003  0047B4  20F4               	addwfc	prodh,w,c
 17004  0047B6  6EDA               	movwf	fsr2h,c
 17005  0047B8  6ADE               	clrf	postinc2,c
 17006  0047BA  6ADE               	clrf	postinc2,c
 17007  0047BC  6ADE               	clrf	postinc2,c
 17008  0047BE  6ADD               	clrf	postdec2,c
 17009  0047C0                     l12378:
 17010                           
 17011                           ; BSR set to: 0
 17012                           ;lorawan_eu.c: 1051: }
 17013                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17014  0047C0  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 17015  0047C2  D04E               	goto	l12392
 17016  0047C4                     l12380:
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;lorawan_eu.c: 1054: {
 17020                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17021  0047C4  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17022  0047C6  0D0E               	mullw	14
 17023  0047C8  0E05               	movlw	low (_Channels+5)
 17024  0047CA  24F3               	addwf	prodl,w,c
 17025  0047CC  6ED9               	movwf	fsr2l,c
 17026  0047CE  0E04               	movlw	high (_Channels+5)
 17027  0047D0  20F4               	addwfc	prodh,w,c
 17028  0047D2  6EDA               	movwf	fsr2h,c
 17029  0047D4  50DF               	movf	223,w,c
 17030  0047D6  0B0F               	andlw	15
 17031  0047D8  0100               	movlb	0	; () banked
 17032  0047DA  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17033  0047DC  0102               	movlb	2	; () banked
 17034  0047DE  51EB               	movf	(_loRa+235)& (0+255),w,b
 17035  0047E0  0100               	movlb	0	; () banked
 17036  0047E2  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17037  0047E4  E216               	bc	l1215
 17038                           
 17039                           ; BSR set to: 0
 17040  0047E6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17041  0047E8  0D0E               	mullw	14
 17042  0047EA  0E04               	movlw	low (_Channels+4)
 17043  0047EC  24F3               	addwf	prodl,w,c
 17044  0047EE  6ED9               	movwf	fsr2l,c
 17045  0047F0  0E04               	movlw	high (_Channels+4)
 17046  0047F2  20F4               	addwfc	prodh,w,c
 17047  0047F4  6EDA               	movwf	fsr2h,c
 17048  0047F6  04DE               	decf	postinc2,w,c
 17049  0047F8  E10C               	bnz	l1215
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;lorawan_eu.c: 1056: {
 17053                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17054  0047FA  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17055  0047FC  0D0E               	mullw	14
 17056  0047FE  0E05               	movlw	low (_Channels+5)
 17057  004800  24F3               	addwf	prodl,w,c
 17058  004802  6ED9               	movwf	fsr2l,c
 17059  004804  0E04               	movlw	high (_Channels+5)
 17060  004806  20F4               	addwfc	prodh,w,c
 17061  004808  6EDA               	movwf	fsr2h,c
 17062  00480A  50DF               	movf	223,w,c
 17063  00480C  0B0F               	andlw	15
 17064  00480E  0102               	movlb	2	; () banked
 17065  004810  6FEB               	movwf	(_loRa+235)& (0+255),b
 17066  004812                     l1215:
 17067                           
 17068                           ;lorawan_eu.c: 1058: }
 17069                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17070  004812  0100               	movlb	0	; () banked
 17071  004814  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17072  004816  0D0E               	mullw	14
 17073  004818  0E05               	movlw	low (_Channels+5)
 17074  00481A  24F3               	addwf	prodl,w,c
 17075  00481C  6ED9               	movwf	fsr2l,c
 17076  00481E  0E04               	movlw	high (_Channels+5)
 17077  004820  20F4               	addwfc	prodh,w,c
 17078  004822  6EDA               	movwf	fsr2h,c
 17079  004824  38DF               	swapf	223,w,c
 17080  004826  0B0F               	andlw	15
 17081  004828  0102               	movlb	2	; () banked
 17082  00482A  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17083  00482C  D017               	goto	l12390
 17084                           
 17085                           ; BSR set to: 2
 17086  00482E  0100               	movlb	0	; () banked
 17087  004830  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17088  004832  0D0E               	mullw	14
 17089  004834  0E04               	movlw	low (_Channels+4)
 17090  004836  24F3               	addwf	prodl,w,c
 17091  004838  6ED9               	movwf	fsr2l,c
 17092  00483A  0E04               	movlw	high (_Channels+4)
 17093  00483C  20F4               	addwfc	prodh,w,c
 17094  00483E  6EDA               	movwf	fsr2h,c
 17095  004840  04DE               	decf	postinc2,w,c
 17096  004842  E10C               	bnz	l12390
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;lorawan_eu.c: 1060: {
 17100                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17101  004844  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17102  004846  0D0E               	mullw	14
 17103  004848  0E05               	movlw	low (_Channels+5)
 17104  00484A  24F3               	addwf	prodl,w,c
 17105  00484C  6ED9               	movwf	fsr2l,c
 17106  00484E  0E04               	movlw	high (_Channels+5)
 17107  004850  20F4               	addwfc	prodh,w,c
 17108  004852  6EDA               	movwf	fsr2h,c
 17109  004854  38DF               	swapf	223,w,c
 17110  004856  0B0F               	andlw	15
 17111  004858  0102               	movlb	2	; () banked
 17112  00485A  6FEC               	movwf	(_loRa+236)& (0+255),b
 17113  00485C                     l12390:
 17114  00485C  0100               	movlb	0	; () banked
 17115  00485E  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17116  004860                     l12392:
 17117                           
 17118                           ; BSR set to: 0
 17119  004860  0102               	movlb	2	; () banked
 17120  004862  51ED               	movf	(_loRa+237)& (0+255),w,b
 17121  004864  0100               	movlb	0	; () banked
 17122  004866  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 17123  004868  E3AD               	bnc	l12380
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;lorawan_eu.c: 1062: }
 17127                           ;lorawan_eu.c: 1063: }
 17128                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 17129  00486A  0102               	movlb	2	; () banked
 17130  00486C  51DF               	movf	(_loRa+223)& (0+255),w,b
 17131  00486E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17132  004870  E202               	bc	l12398
 17133                           
 17134                           ; BSR set to: 2
 17135                           ;lorawan_eu.c: 1066: {
 17136                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 17137  004872  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17138  004876                     l12398:
 17139                           
 17140                           ; BSR set to: 2
 17141                           ;lorawan_eu.c: 1068: }
 17142                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 17143  004876  51EB               	movf	(_loRa+235)& (0+255),w,b
 17144  004878  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17145  00487A  A0D8               	btfss	status,0,c
 17146                           
 17147                           ; BSR set to: 2
 17148                           ;lorawan_eu.c: 1071: {
 17149                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 17150  00487C  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17151                           
 17152                           ; BSR set to: 2
 17153  004880  0012               	return		;funcret
 17154  004882                     __end_of_UpdateChannelIdStatus:
 17155                           	opt stack 0
 17156                           tosu	equ	0xFFF
 17157                           tosh	equ	0xFFE
 17158                           tosl	equ	0xFFD
 17159                           pclath	equ	0xFFA
 17160                           tblptru	equ	0xFF8
 17161                           tblptrh	equ	0xFF7
 17162                           tblptrl	equ	0xFF6
 17163                           tablat	equ	0xFF5
 17164                           prodh	equ	0xFF4
 17165                           prodl	equ	0xFF3
 17166                           intcon	equ	0xFF2
 17167                           intcon2	equ	0xFF1
 17168                           intcon3	equ	0xFF0
 17169                           indf0	equ	0xFEF
 17170                           postinc0	equ	0xFEE
 17171                           fsr0h	equ	0xFEA
 17172                           fsr0l	equ	0xFE9
 17173                           wreg	equ	0xFE8
 17174                           postinc1	equ	0xFE6
 17175                           postdec1	equ	0xFE5
 17176                           plusw1	equ	0xFE3
 17177                           fsr1h	equ	0xFE2
 17178                           fsr1l	equ	0xFE1
 17179                           indf2	equ	0xFDF
 17180                           postinc2	equ	0xFDE
 17181                           postdec2	equ	0xFDD
 17182                           plusw2	equ	0xFDB
 17183                           fsr2h	equ	0xFDA
 17184                           fsr2l	equ	0xFD9
 17185                           status	equ	0xFD8
 17186                           
 17187 ;; *************** function _ExecuteDutyCycle *****************
 17188 ;; Defined at:
 17189 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17190 ;; Parameters:    Size  Location     Type
 17191 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17192 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17193 ;; Auto vars:     Size  Location     Type
 17194 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  2    4[BANK0 ] PTR unsigned char 
 17197 ;; Registers used:
 17198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17199 ;; Tracked objects:
 17200 ;;		On entry : F/0
 17201 ;;		On exit  : D/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17206 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17207 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17208 ;;Total ram usage:        6 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; Hardware stack levels required when called:    7
 17211 ;; This function calls:
 17212 ;;		Nothing
 17213 ;; This function is called by:
 17214 ;;		_MacExecuteCommands
 17215 ;; This function uses a non-reentrant model
 17216 ;;
 17217                           
 17218                           	psect	text93
 17219  006976                     __ptext93:
 17220                           	opt stack 0
 17221  006976                     _ExecuteDutyCycle:
 17222                           	opt stack 18
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 17226                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 17227                           
 17228                           ; BSR set to: 2
 17229                           ;incstack = 0
 17230  006976  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 17231  00697A  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 17232  00697E  50DF               	movf	indf2,w,c
 17233  006980  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 17234                           
 17235                           ; BSR set to: 0
 17236  006982  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 17237  006984  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 17238                           
 17239                           ; BSR set to: 0
 17240                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 17241  006986  0E0F               	movlw	15
 17242  006988  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 17243  00698A  D012               	goto	l1091
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;lorawan_eu.c: 600: {
 17247                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 17248  00698C  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 17249  006990  0E01               	movlw	1
 17250  006992  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 17251  006994  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 17252  006996  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 17253  006998  D003               	goto	u14864
 17254  00699A                     u14865:
 17255  00699A  90D8               	bcf	status,0,c
 17256  00699C  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 17257  00699E  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 17258  0069A0                     u14864:
 17259  0069A0  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 17260  0069A2  D7FB               	goto	u14865
 17261  0069A4  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 17262  0069A8  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 17263                           
 17264                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 17265  0069AC  0102               	movlb	2	; () banked
 17266  0069AE  8D03               	bsf	(_loRa+3)& (0+255),6,b
 17267  0069B0                     l1091:
 17268                           
 17269                           ;lorawan_eu.c: 603: }
 17270                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 17271  0069B0  0100               	movlb	0	; () banked
 17272  0069B2  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 17273  0069B4  E102               	bnz	l13492
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;lorawan_eu.c: 606: {
 17277                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 17278  0069B6  0102               	movlb	2	; () banked
 17279  0069B8  8F02               	bsf	(_loRa+2)& (0+255),7,b
 17280  0069BA                     l13492:
 17281                           
 17282                           ;lorawan_eu.c: 608: }
 17283                           ;lorawan_eu.c: 610: return ptr;
 17284  0069BA  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 17285  0069BE  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 17286  0069C2  0012               	return		;funcret
 17287  0069C4                     __end_of_ExecuteDutyCycle:
 17288                           	opt stack 0
 17289                           tosu	equ	0xFFF
 17290                           tosh	equ	0xFFE
 17291                           tosl	equ	0xFFD
 17292                           pclath	equ	0xFFA
 17293                           tblptru	equ	0xFF8
 17294                           tblptrh	equ	0xFF7
 17295                           tblptrl	equ	0xFF6
 17296                           tablat	equ	0xFF5
 17297                           prodh	equ	0xFF4
 17298                           prodl	equ	0xFF3
 17299                           intcon	equ	0xFF2
 17300                           intcon2	equ	0xFF1
 17301                           intcon3	equ	0xFF0
 17302                           indf0	equ	0xFEF
 17303                           postinc0	equ	0xFEE
 17304                           fsr0h	equ	0xFEA
 17305                           fsr0l	equ	0xFE9
 17306                           wreg	equ	0xFE8
 17307                           postinc1	equ	0xFE6
 17308                           postdec1	equ	0xFE5
 17309                           plusw1	equ	0xFE3
 17310                           fsr1h	equ	0xFE2
 17311                           fsr1l	equ	0xFE1
 17312                           indf2	equ	0xFDF
 17313                           postinc2	equ	0xFDE
 17314                           postdec2	equ	0xFDD
 17315                           plusw2	equ	0xFDB
 17316                           fsr2h	equ	0xFDA
 17317                           fsr2l	equ	0xFD9
 17318                           status	equ	0xFD8
 17319                           
 17320 ;; *************** function _ExecuteDevStatus *****************
 17321 ;; Defined at:
 17322 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17323 ;; Parameters:    Size  Location     Type
 17324 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17325 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17326 ;; Auto vars:     Size  Location     Type
 17327 ;;		None
 17328 ;; Return value:  Size  Location     Type
 17329 ;;                  2    4[BANK0 ] PTR unsigned char 
 17330 ;; Registers used:
 17331 ;;		wreg, status,2, status,0
 17332 ;; Tracked objects:
 17333 ;;		On entry : F/0
 17334 ;;		On exit  : F/0
 17335 ;;		Unchanged: F/0
 17336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17341 ;;Total ram usage:        2 bytes
 17342 ;; Hardware stack levels used:    1
 17343 ;; Hardware stack levels required when called:    7
 17344 ;; This function calls:
 17345 ;;		Nothing
 17346 ;; This function is called by:
 17347 ;;		_MacExecuteCommands
 17348 ;; This function uses a non-reentrant model
 17349 ;;
 17350                           
 17351                           	psect	text94
 17352  007868                     __ptext94:
 17353                           	opt stack 0
 17354  007868                     _ExecuteDevStatus:
 17355                           	opt stack 18
 17356                           
 17357                           ; BSR set to: 0
 17358                           ;lorawan_eu.c: 674: return ptr;
 17359                           
 17360                           ;incstack = 0
 17361  007868  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 17362  00786C  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 17363                           
 17364                           ; BSR set to: 0
 17365  007870  0012               	return		;funcret
 17366  007872                     __end_of_ExecuteDevStatus:
 17367                           	opt stack 0
 17368                           tosu	equ	0xFFF
 17369                           tosh	equ	0xFFE
 17370                           tosl	equ	0xFFD
 17371                           pclath	equ	0xFFA
 17372                           tblptru	equ	0xFF8
 17373                           tblptrh	equ	0xFF7
 17374                           tblptrl	equ	0xFF6
 17375                           tablat	equ	0xFF5
 17376                           prodh	equ	0xFF4
 17377                           prodl	equ	0xFF3
 17378                           intcon	equ	0xFF2
 17379                           intcon2	equ	0xFF1
 17380                           intcon3	equ	0xFF0
 17381                           indf0	equ	0xFEF
 17382                           postinc0	equ	0xFEE
 17383                           fsr0h	equ	0xFEA
 17384                           fsr0l	equ	0xFE9
 17385                           wreg	equ	0xFE8
 17386                           postinc1	equ	0xFE6
 17387                           postdec1	equ	0xFE5
 17388                           plusw1	equ	0xFE3
 17389                           fsr1h	equ	0xFE2
 17390                           fsr1l	equ	0xFE1
 17391                           indf2	equ	0xFDF
 17392                           postinc2	equ	0xFDE
 17393                           postdec2	equ	0xFDD
 17394                           plusw2	equ	0xFDB
 17395                           fsr2h	equ	0xFDA
 17396                           fsr2l	equ	0xFD9
 17397                           status	equ	0xFD8
 17398                           
 17399 ;; *************** function _LORAWAN_Send *****************
 17400 ;; Defined at:
 17401 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;  confirmed       1    wreg     enum E7984
 17404 ;;  port            1  118[BANK0 ] unsigned char 
 17405 ;;  buffer          2  119[BANK0 ] PTR void 
 17406 ;;		 -> payload(4), NULL(0), 
 17407 ;;  bufferLength    1  121[BANK0 ] unsigned char 
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;  confirmed       1  124[BANK0 ] enum E7984
 17410 ;;  result          1  123[BANK0 ] enum E7957
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  1    wreg      enum E7957
 17413 ;; Registers used:
 17414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17415 ;; Tracked objects:
 17416 ;;		On entry : F/0
 17417 ;;		On exit  : D/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17423 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17424 ;;Total ram usage:        7 bytes
 17425 ;; Hardware stack levels used:    1
 17426 ;; Hardware stack levels required when called:   13
 17427 ;; This function calls:
 17428 ;;		_AssemblePacket
 17429 ;;		_LORAWAN_GetMaxPayloadSize
 17430 ;;		_RADIO_ReceiveStop
 17431 ;;		_RADIO_Transmit
 17432 ;;		_SelectChannelForTransmission
 17433 ;; This function is called by:
 17434 ;;		_AutomaticReplyCallback
 17435 ;;		_LORAWAN_RxDone
 17436 ;;		_readAndSend
 17437 ;; This function uses a non-reentrant model
 17438 ;;
 17439                           
 17440                           	psect	text95
 17441  00541A                     __ptext95:
 17442                           	opt stack 0
 17443  00541A                     _LORAWAN_Send:
 17444                           	opt stack 16
 17445                           
 17446                           ; BSR set to: 0
 17447                           ;incstack = 0
 17448                           ;LORAWAN_Send@confirmed stored from wreg
 17449  00541A  6FDC               	movwf	LORAWAN_Send@confirmed& (0+255),b
 17450                           
 17451                           ;lorawan.c: 187: LorawanError_t result;
 17452                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 17453  00541C  0102               	movlb	2	; () banked
 17454  00541E  A103               	btfss	(_loRa+3)& (0+255),0,b
 17455                           
 17456                           ; BSR set to: 2
 17457                           ;lorawan.c: 192: }
 17458                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 17459  005420  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 17460  005422  0012               	return	
 17461                           
 17462                           ; BSR set to: 2
 17463                           ;lorawan.c: 197: }
 17464                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 17465  005424  A902               	btfss	(_loRa+2)& (0+255),4,b
 17466  005426  0012               	return	
 17467                           
 17468                           ; BSR set to: 2
 17469                           ;lorawan.c: 202: }
 17470                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 17471  005428  0100               	movlb	0	; () banked
 17472  00542A  51D6               	movf	LORAWAN_Send@port& (0+255),w,b
 17473  00542C  E103               	bnz	l13936
 17474                           
 17475                           ; BSR set to: 0
 17476  00542E  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17477  005430  E001               	bz	l13936
 17478  005432  0012               	return	
 17479  005434                     l13936:
 17480                           
 17481                           ; BSR set to: 0
 17482                           ;lorawan.c: 207: }
 17483                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 17484  005434  EC57  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 17485  005438  6FDA               	movwf	??_LORAWAN_Send& (0+255),b
 17486  00543A  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17487  00543C  5DDA               	subwf	??_LORAWAN_Send& (0+255),w,b
 17488  00543E  E201               	bc	l13940
 17489  005440  0012               	return	
 17490  005442                     l13940:
 17491                           
 17492                           ; BSR set to: 0
 17493                           ;lorawan.c: 213: }
 17494                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 17495  005442  0102               	movlb	2	; () banked
 17496  005444  2906               	incf	(_loRa+6)& (0+255),w,b
 17497  005446  E108               	bnz	l13944
 17498  005448  2907               	incf	(_loRa+7)& (0+255),w,b
 17499  00544A  E106               	bnz	l13944
 17500  00544C  2908               	incf	(_loRa+8)& (0+255),w,b
 17501  00544E  E104               	bnz	l13944
 17502  005450  2909               	incf	(_loRa+9)& (0+255),w,b
 17503  005452  E102               	bnz	l13944
 17504                           
 17505                           ; BSR set to: 2
 17506                           ;lorawan.c: 216: {
 17507                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 17508  005454  8304               	bsf	(_loRa+4)& (0+255),1,b
 17509                           
 17510                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 17511                           ;	Return value of _LORAWAN_Send is never used
 17512  005456  0012               	return	
 17513  005458                     l13944:
 17514                           
 17515                           ; BSR set to: 2
 17516                           ;lorawan.c: 220: }
 17517                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 17518  005458  5102               	movf	(_loRa+2)& (0+255),w,b
 17519  00545A  0B0F               	andlw	15
 17520  00545C  E003               	bz	l13950
 17521                           
 17522                           ; BSR set to: 2
 17523  00545E  5112               	movf	(_loRa+18)& (0+255),w,b
 17524  005460  E101               	bnz	l13950
 17525  005462  0012               	return	
 17526  005464                     l13950:
 17527                           
 17528                           ; BSR set to: 2
 17529                           ;lorawan.c: 225: }
 17530                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 17531  005464  0E01               	movlw	1
 17532  005466  EC2C  F033         	call	_SelectChannelForTransmission
 17533  00546A  6FDB               	movwf	LORAWAN_Send@result& (0+255),b
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;lorawan.c: 228: if (result != OK)
 17537  00546C  51DB               	movf	LORAWAN_Send@result& (0+255),w,b
 17538  00546E  E001               	bz	l13958
 17539  005470  0012               	return	
 17540  005472                     l13958:
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;lorawan.c: 232: else
 17544                           ;lorawan.c: 233: {
 17545                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 17546  005472  0E02               	movlw	2
 17547  005474  0102               	movlb	2	; () banked
 17548  005476  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17549  005478  E102               	bnz	l13962
 17550                           
 17551                           ; BSR set to: 2
 17552                           ;lorawan.c: 235: {
 17553                           ;lorawan.c: 236: RADIO_ReceiveStop();
 17554  00547A  EC60  F03A         	call	_RADIO_ReceiveStop	;wreg free
 17555  00547E                     l13962:
 17556                           
 17557                           ;lorawan.c: 237: }
 17558                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 17559  00547E  C0D6  F0CA         	movff	LORAWAN_Send@port,AssemblePacket@port
 17560  005482  C0D7  F0CB         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 17561  005486  C0D8  F0CC         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 17562  00548A  C0D9  F0CD         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 17563  00548E  0100               	movlb	0	; () banked
 17564  005490  6BCE               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 17565  005492  51DC               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 17566  005494  EC16  F00F         	call	_AssemblePacket
 17567                           
 17568                           ; BSR set to: 2
 17569                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 17570  005498  0EF0               	movlw	low (_macBuffer+16)
 17571  00549A  0100               	movlb	0	; () banked
 17572  00549C  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 17573  00549E  0E04               	movlw	high (_macBuffer+16)
 17574  0054A0  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 17575  0054A2  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 17576  0054A6  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 17577  0054AA  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 17578  0054AC  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 17579  0054AE  A4D8               	btfss	status,2,c
 17580  0054B0  0012               	return	
 17581                           
 17582                           ; BSR set to: 0
 17583                           ;lorawan.c: 242: {
 17584                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 17585  0054B2  0102               	movlb	2	; () banked
 17586  0054B4  2B06               	incf	(_loRa+6)& (0+255),f,b
 17587  0054B6  0E00               	movlw	0
 17588  0054B8  2307               	addwfc	(_loRa+7)& (0+255),f,b
 17589  0054BA  2308               	addwfc	(_loRa+8)& (0+255),f,b
 17590  0054BC  2309               	addwfc	(_loRa+9)& (0+255),f,b
 17591                           
 17592                           ;lorawan.c: 245: if (CNF == confirmed)
 17593  0054BE  0100               	movlb	0	; () banked
 17594  0054C0  05DC               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 17595  0054C2  E102               	bnz	l1746
 17596                           
 17597                           ; BSR set to: 0
 17598                           ;lorawan.c: 246: {
 17599                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17600  0054C4  0102               	movlb	2	; () banked
 17601  0054C6  8100               	bsf	_loRa& (0+255),0,b
 17602  0054C8                     l1746:
 17603                           
 17604                           ;lorawan.c: 248: }
 17605                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 17606  0054C8  0102               	movlb	2	; () banked
 17607  0054CA  8B00               	bsf	_loRa& (0+255),5,b
 17608                           
 17609                           ; BSR set to: 2
 17610                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 17611  0054CC  5102               	movf	(_loRa+2)& (0+255),w,b
 17612  0054CE  0BF0               	andlw	-16
 17613  0054D0  0901               	iorlw	1
 17614  0054D2  6F02               	movwf	(_loRa+2)& (0+255),b
 17615                           
 17616                           ;lorawan.c: 251: }
 17617  0054D4  0012               	return		;funcret
 17618  0054D6                     __end_of_LORAWAN_Send:
 17619                           	opt stack 0
 17620                           tosu	equ	0xFFF
 17621                           tosh	equ	0xFFE
 17622                           tosl	equ	0xFFD
 17623                           pclath	equ	0xFFA
 17624                           tblptru	equ	0xFF8
 17625                           tblptrh	equ	0xFF7
 17626                           tblptrl	equ	0xFF6
 17627                           tablat	equ	0xFF5
 17628                           prodh	equ	0xFF4
 17629                           prodl	equ	0xFF3
 17630                           intcon	equ	0xFF2
 17631                           intcon2	equ	0xFF1
 17632                           intcon3	equ	0xFF0
 17633                           indf0	equ	0xFEF
 17634                           postinc0	equ	0xFEE
 17635                           fsr0h	equ	0xFEA
 17636                           fsr0l	equ	0xFE9
 17637                           wreg	equ	0xFE8
 17638                           postinc1	equ	0xFE6
 17639                           postdec1	equ	0xFE5
 17640                           plusw1	equ	0xFE3
 17641                           fsr1h	equ	0xFE2
 17642                           fsr1l	equ	0xFE1
 17643                           indf2	equ	0xFDF
 17644                           postinc2	equ	0xFDE
 17645                           postdec2	equ	0xFDD
 17646                           plusw2	equ	0xFDB
 17647                           fsr2h	equ	0xFDA
 17648                           fsr2l	equ	0xFD9
 17649                           status	equ	0xFD8
 17650                           
 17651 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 17652 ;; Defined at:
 17653 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17654 ;; Parameters:    Size  Location     Type
 17655 ;;		None
 17656 ;; Auto vars:     Size  Location     Type
 17657 ;;  result          1   14[BANK0 ] unsigned char 
 17658 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 17659 ;; Return value:  Size  Location     Type
 17660 ;;                  1    wreg      unsigned char 
 17661 ;; Registers used:
 17662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17663 ;; Tracked objects:
 17664 ;;		On entry : D/2
 17665 ;;		On exit  : F/0
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17671 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17672 ;;Total ram usage:        3 bytes
 17673 ;; Hardware stack levels used:    1
 17674 ;; Hardware stack levels required when called:    8
 17675 ;; This function calls:
 17676 ;;		_CountfOptsLength
 17677 ;; This function is called by:
 17678 ;;		_LORAWAN_Send
 17679 ;;		_AckRetransmissionCallback
 17680 ;; This function uses a non-reentrant model
 17681 ;;
 17682                           
 17683                           	psect	text96
 17684  006AAE                     __ptext96:
 17685                           	opt stack 0
 17686  006AAE                     _LORAWAN_GetMaxPayloadSize:
 17687                           	opt stack 20
 17688                           
 17689                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 17690                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 17691                           
 17692                           ;incstack = 0
 17693  006AAE  EC6B  F02A         	call	_CountfOptsLength	;wreg free
 17694  006AB2  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 17698  006AB4  0102               	movlb	2	; () banked
 17699  006AB6  51A7               	movf	(_loRa+167)& (0+255),w,b
 17700  006AB8  E10D               	bnz	l13654
 17701                           
 17702                           ; BSR set to: 2
 17703                           ;lorawan.c: 1564: {
 17704                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 17705  006ABA  0E6D               	movlw	low _maxPayloadSize
 17706  006ABC  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17707  006ABE  6EF6               	movwf	tblptrl,c
 17708  006AC0  6AF7               	clrf	tblptrh,c
 17709  006AC2  0EFF               	movlw	high _maxPayloadSize
 17710  006AC4  22F7               	addwfc	tblptrh,f,c
 17711  006AC6                     	if	1	;There are 3 active tblptr bytes
 17712  006AC6  6AF8               	clrf	tblptru,c
 17713  006AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 17714  006ACA  22F8               	addwfc	tblptru,f,c
 17715  006ACC                     	endif
 17716  006ACC  0008               	tblrd		*
 17717  006ACE  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 17718                           
 17719                           ;lorawan.c: 1566: }
 17720  006AD2  D010               	goto	l13656
 17721  006AD4                     l13654:
 17722                           
 17723                           ; BSR set to: 2
 17724                           ;lorawan.c: 1567: else
 17725                           ;lorawan.c: 1568: {
 17726                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 17727  006AD4  0E6D               	movlw	low _maxPayloadSize
 17728  006AD6  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17729  006AD8  6EF6               	movwf	tblptrl,c
 17730  006ADA  6AF7               	clrf	tblptrh,c
 17731  006ADC  0EFF               	movlw	high _maxPayloadSize
 17732  006ADE  22F7               	addwfc	tblptrh,f,c
 17733  006AE0                     	if	1	;There are 3 active tblptr bytes
 17734  006AE0  6AF8               	clrf	tblptru,c
 17735  006AE2  0E00               	movlw	low (__mediumconst shr (0+16))
 17736  006AE4  22F8               	addwfc	tblptru,f,c
 17737  006AE6                     	endif
 17738  006AE6  0008               	tblrd		*
 17739  006AE8  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 17740  006AEC  0100               	movlb	0	; () banked
 17741  006AEE  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 17742  006AF0  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 17743  006AF2  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 17744  006AF4                     l13656:
 17745                           
 17746                           ;lorawan.c: 1570: }
 17747                           ;lorawan.c: 1572: return result;
 17748  006AF4  0100               	movlb	0	; () banked
 17749  006AF6  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 17750                           
 17751                           ; BSR set to: 0
 17752  006AF8  0012               	return		;funcret
 17753  006AFA                     __end_of_LORAWAN_GetMaxPayloadSize:
 17754                           	opt stack 0
 17755                           tosu	equ	0xFFF
 17756                           tosh	equ	0xFFE
 17757                           tosl	equ	0xFFD
 17758                           pclath	equ	0xFFA
 17759                           tblptru	equ	0xFF8
 17760                           tblptrh	equ	0xFF7
 17761                           tblptrl	equ	0xFF6
 17762                           tablat	equ	0xFF5
 17763                           prodh	equ	0xFF4
 17764                           prodl	equ	0xFF3
 17765                           intcon	equ	0xFF2
 17766                           intcon2	equ	0xFF1
 17767                           intcon3	equ	0xFF0
 17768                           indf0	equ	0xFEF
 17769                           postinc0	equ	0xFEE
 17770                           fsr0h	equ	0xFEA
 17771                           fsr0l	equ	0xFE9
 17772                           wreg	equ	0xFE8
 17773                           postinc1	equ	0xFE6
 17774                           postdec1	equ	0xFE5
 17775                           plusw1	equ	0xFE3
 17776                           fsr1h	equ	0xFE2
 17777                           fsr1l	equ	0xFE1
 17778                           indf2	equ	0xFDF
 17779                           postinc2	equ	0xFDE
 17780                           postdec2	equ	0xFDD
 17781                           plusw2	equ	0xFDB
 17782                           fsr2h	equ	0xFDA
 17783                           fsr2l	equ	0xFD9
 17784                           status	equ	0xFD8
 17785                           
 17786 ;; *************** function _AssemblePacket *****************
 17787 ;; Defined at:
 17788 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17789 ;; Parameters:    Size  Location     Type
 17790 ;;  confirmed       1    wreg     unsigned char 
 17791 ;;  port            1  106[BANK0 ] unsigned char 
 17792 ;;  buffer          2  107[BANK0 ] PTR unsigned char 
 17793 ;;		 -> payload(4), NULL(0), 
 17794 ;;  bufferLength    2  109[BANK0 ] unsigned int 
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;  confirmed       1  113[BANK0 ] unsigned char 
 17797 ;;  bufferIndex     1  117[BANK0 ] unsigned char 
 17798 ;;  macCmdIdx       1  116[BANK0 ] unsigned char 
 17799 ;;  fCtrl           1  115[BANK0 ] struct .
 17800 ;;  mhdr            1  114[BANK0 ] struct .
 17801 ;; Return value:  Size  Location     Type
 17802 ;;                  1    wreg      void 
 17803 ;; Registers used:
 17804 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17805 ;; Tracked objects:
 17806 ;;		On entry : F/0
 17807 ;;		On exit  : F/2
 17808 ;;		Unchanged: 0/0
 17809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17810 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17811 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17813 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17814 ;;Total ram usage:       12 bytes
 17815 ;; Hardware stack levels used:    1
 17816 ;; Hardware stack levels required when called:   12
 17817 ;; This function calls:
 17818 ;;		_AESCmac
 17819 ;;		_AssembleEncryptionBlock
 17820 ;;		_CountfOptsLength
 17821 ;;		_EncryptFRMPayload
 17822 ;;		_FindSmallestDataRate
 17823 ;;		_IncludeMacCommandsResponse
 17824 ;;		_memcpy
 17825 ;;		_memset
 17826 ;; This function is called by:
 17827 ;;		_LORAWAN_Send
 17828 ;; This function uses a non-reentrant model
 17829 ;;
 17830                           
 17831                           	psect	text97
 17832  001E2C                     __ptext97:
 17833                           	opt stack 0
 17834  001E2C                     _AssemblePacket:
 17835                           	opt stack 16
 17836                           
 17837                           ; BSR set to: 0
 17838                           ;incstack = 0
 17839                           ;AssemblePacket@confirmed stored from wreg
 17840  001E2C  6FD1               	movwf	AssemblePacket@confirmed& (0+255),b
 17841                           
 17842                           ;lorawan.c: 1674: Mhdr_t mhdr;
 17843                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 17844  001E2E  0E10               	movlw	16
 17845  001E30  0100               	movlb	0	; () banked
 17846  001E32  6FD5               	movwf	AssemblePacket@bufferIndex& (0+255),b
 17847                           
 17848                           ; BSR set to: 0
 17849                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 17850                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 17851  001E34  6BD4               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 17855  001E36  0ED2               	movlw	low AssemblePacket@mhdr
 17856  001E38  6F64               	movwf	memset@p1& (0+255),b
 17857  001E3A  6B65               	clrf	(memset@p1+1)& (0+255),b
 17858  001E3C  6B67               	clrf	(memset@c+1)& (0+255),b
 17859  001E3E  6B66               	clrf	memset@c& (0+255),b
 17860  001E40  6B69               	clrf	(memset@n+1)& (0+255),b
 17861  001E42  0E01               	movlw	1
 17862  001E44  6F68               	movwf	memset@n& (0+255),b
 17863  001E46  EC21  F039         	call	_memset	;wreg free
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 17867  001E4A  0EE0               	movlw	low _macBuffer
 17868  001E4C  6F64               	movwf	memset@p1& (0+255),b
 17869  001E4E  0E04               	movlw	high _macBuffer
 17870  001E50  6F65               	movwf	(memset@p1+1)& (0+255),b
 17871  001E52  6B67               	clrf	(memset@c+1)& (0+255),b
 17872  001E54  6B66               	clrf	memset@c& (0+255),b
 17873  001E56  0E01               	movlw	1
 17874  001E58  6F69               	movwf	(memset@n+1)& (0+255),b
 17875  001E5A  0E0F               	movlw	15
 17876  001E5C  6F68               	movwf	memset@n& (0+255),b
 17877  001E5E  EC21  F039         	call	_memset	;wreg free
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 17881  001E62  0E9F               	movlw	low _aesBuffer
 17882  001E64  6F64               	movwf	memset@p1& (0+255),b
 17883  001E66  0E01               	movlw	high _aesBuffer
 17884  001E68  6F65               	movwf	(memset@p1+1)& (0+255),b
 17885  001E6A  6B67               	clrf	(memset@c+1)& (0+255),b
 17886  001E6C  6B66               	clrf	memset@c& (0+255),b
 17887  001E6E  6B69               	clrf	(memset@n+1)& (0+255),b
 17888  001E70  0E10               	movlw	16
 17889  001E72  6F68               	movwf	memset@n& (0+255),b
 17890  001E74  EC21  F039         	call	_memset	;wreg free
 17891                           
 17892                           ; BSR set to: 0
 17893                           ;lorawan.c: 1683: if (confirmed == 1)
 17894  001E78  05D1               	decf	AssemblePacket@confirmed& (0+255),w,b
 17895  001E7A  E107               	bnz	l13676
 17896                           
 17897                           ; BSR set to: 0
 17898                           ;lorawan.c: 1684: {
 17899                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 17900  001E7C  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 17901  001E7E  0B1F               	andlw	-225
 17902  001E80  0980               	iorlw	128
 17903  001E82  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 17904                           
 17905                           ; BSR set to: 0
 17906                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17907  001E84  0102               	movlb	2	; () banked
 17908  001E86  8100               	bsf	_loRa& (0+255),0,b
 17909                           
 17910                           ;lorawan.c: 1687: }
 17911  001E88  D004               	goto	l2231
 17912  001E8A                     l13676:
 17913                           
 17914                           ; BSR set to: 0
 17915                           ;lorawan.c: 1688: else
 17916                           ;lorawan.c: 1689: {
 17917                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 17918  001E8A  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 17919  001E8C  0B1F               	andlw	-225
 17920  001E8E  0940               	iorlw	64
 17921  001E90  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 17922  001E92                     l2231:
 17923                           
 17924                           ;lorawan.c: 1691: }
 17925                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 17926  001E92  0EFC               	movlw	-4
 17927  001E94  0100               	movlb	0	; () banked
 17928  001E96  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 17929                           
 17930                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 17931  001E98  0EE3               	movlw	-29
 17932  001E9A  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 17933                           
 17934                           ; BSR set to: 0
 17935                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 17936  001E9C  0EE0               	movlw	low _macBuffer
 17937  001E9E  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 17938  001EA0  6ED9               	movwf	fsr2l,c
 17939  001EA2  6ADA               	clrf	fsr2h,c
 17940  001EA4  0E04               	movlw	high _macBuffer
 17941  001EA6  22DA               	addwfc	fsr2h,f,c
 17942  001EA8  C0D2  FFDF         	movff	AssemblePacket@mhdr,indf2
 17943                           
 17944                           ; BSR set to: 0
 17945  001EAC  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 17949  001EAE  0EE0               	movlw	low _macBuffer
 17950  001EB0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 17951  001EB2  6F64               	movwf	memcpy@d1& (0+255),b
 17952  001EB4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 17953  001EB6  0E04               	movlw	high _macBuffer
 17954  001EB8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 17955  001EBA  0E1E               	movlw	low (_loRa+30)
 17956  001EBC  6F66               	movwf	memcpy@s1& (0+255),b
 17957  001EBE  0E02               	movlw	high (_loRa+30)
 17958  001EC0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 17959  001EC2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 17960  001EC4  0E04               	movlw	4
 17961  001EC6  6F68               	movwf	memcpy@n& (0+255),b
 17962  001EC8  EC14  F034         	call	_memcpy	;wreg free
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 17966  001ECC  0E04               	movlw	4
 17967  001ECE  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;lorawan.c: 1699: fCtrl.value = 0;
 17971  001ED0  6BD3               	clrf	AssemblePacket@fCtrl& (0+255),b
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 17975  001ED2  0102               	movlb	2	; () banked
 17976  001ED4  AD02               	btfss	(_loRa+2)& (0+255),6,b
 17977  001ED6  D030               	goto	l2232
 17978                           
 17979                           ; BSR set to: 2
 17980                           ;lorawan.c: 1702: {
 17981                           ;lorawan.c: 1703: fCtrl.adr = 1;
 17982  001ED8  0100               	movlb	0	; () banked
 17983  001EDA  8FD3               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 17984                           
 17985                           ; BSR set to: 0
 17986                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 17987  001EDC  0102               	movlb	2	; () banked
 17988  001EDE  51DF               	movf	(_loRa+223)& (0+255),w,b
 17989  001EE0  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 17990  001EE2  E229               	bc	l2233
 17991                           
 17992                           ; BSR set to: 2
 17993                           ;lorawan.c: 1705: {
 17994                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 17995  001EE4  0100               	movlb	0	; () banked
 17996  001EE6  8DD3               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 17997                           
 17998                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 17999  001EE8  0102               	movlb	2	; () banked
 18000  001EEA  8900               	bsf	_loRa& (0+255),4,b
 18001                           
 18002                           ; BSR set to: 2
 18003                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18004  001EEC  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18005  001EEE  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18006                           
 18007                           ; BSR set to: 2
 18008                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18009  001EF0  51A2               	movf	(_loRa+162)& (0+255),w,b
 18010  001EF2  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 18011  001EF4  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 18012  001EF6  E102               	bnz	l13702
 18013                           
 18014                           ; BSR set to: 2
 18015                           ;lorawan.c: 1711: {
 18016                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18017  001EF8  6BEE               	clrf	(_loRa+238)& (0+255),b
 18018  001EFA  D01A               	goto	L9
 18019  001EFC                     l13702:
 18020                           
 18021                           ; BSR set to: 2
 18022                           ;lorawan.c: 1716: else
 18023                           ;lorawan.c: 1717: {
 18024                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 18025  001EFC  51A2               	movf	(_loRa+162)& (0+255),w,b
 18026  001EFE  0100               	movlb	0	; () banked
 18027  001F00  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18028  001F02  6BD0               	clrf	(??_AssemblePacket+1)& (0+255),b
 18029  001F04  0102               	movlb	2	; () banked
 18030  001F06  51D0               	movf	(_loRa+208)& (0+255),w,b
 18031  001F08  0100               	movlb	0	; () banked
 18032  001F0A  5DCF               	subwf	??_AssemblePacket& (0+255),w,b
 18033  001F0C  0102               	movlb	2	; () banked
 18034  001F0E  51D1               	movf	(_loRa+209)& (0+255),w,b
 18035  001F10  0100               	movlb	0	; () banked
 18036  001F12  59D0               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 18037  001F14  E20E               	bc	l2236
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;lorawan.c: 1719: {
 18041                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 18042  001F16  0102               	movlb	2	; () banked
 18043  001F18  2BEE               	incf	(_loRa+238)& (0+255),f,b
 18044                           
 18045                           ; BSR set to: 2
 18046                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 18047  001F1A  51EE               	movf	(_loRa+238)& (0+255),w,b
 18048  001F1C  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 18049  001F1E  E20C               	bc	l2232
 18050                           
 18051                           ; BSR set to: 2
 18052                           ;lorawan.c: 1725: {
 18053                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 18054  001F20  6BEE               	clrf	(_loRa+238)& (0+255),b
 18055                           
 18056                           ; BSR set to: 2
 18057                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 18058  001F22  EC8A  F02C         	call	_FindSmallestDataRate	;wreg free
 18059  001F26  0900               	iorlw	0
 18060  001F28  E107               	bnz	l2232
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;lorawan.c: 1729: {
 18064                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 18065  001F2A  0102               	movlb	2	; () banked
 18066  001F2C  6BD0               	clrf	(_loRa+208)& (0+255),b
 18067  001F2E  6BD1               	clrf	(_loRa+209)& (0+255),b
 18068  001F30                     L9:
 18069                           
 18070                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 18071  001F30  0100               	movlb	0	; () banked
 18072  001F32                     l2236:
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;lorawan.c: 1737: else
 18076                           ;lorawan.c: 1738: {
 18077                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 18078  001F32  9DD3               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 18079                           
 18080                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 18081  001F34  0102               	movlb	2	; () banked
 18082  001F36                     l2233:
 18083                           
 18084                           ; BSR set to: 2
 18085                           ;lorawan.c: 1744: else
 18086                           ;lorawan.c: 1745: {
 18087                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 18088  001F36  9900               	bcf	_loRa& (0+255),4,b
 18089  001F38                     l2232:
 18090                           
 18091                           ;lorawan.c: 1747: }
 18092                           ;lorawan.c: 1748: }
 18093                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 18094  001F38  0102               	movlb	2	; () banked
 18095  001F3A  A300               	btfss	_loRa& (0+255),1,b
 18096  001F3C  D004               	goto	l2241
 18097                           
 18098                           ; BSR set to: 2
 18099                           ;lorawan.c: 1751: {
 18100                           ;lorawan.c: 1752: fCtrl.ack = 1;
 18101  001F3E  0100               	movlb	0	; () banked
 18102  001F40  8BD3               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 18103                           
 18104                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 18105  001F42  0102               	movlb	2	; () banked
 18106  001F44  9300               	bcf	_loRa& (0+255),1,b
 18107  001F46                     l2241:
 18108                           
 18109                           ; BSR set to: 2
 18110                           ;lorawan.c: 1754: }
 18111                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 18112  001F46  0100               	movlb	0	; () banked
 18113  001F48  99D3               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 18114                           
 18115                           ; BSR set to: 0
 18116                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 18117  001F4A  0102               	movlb	2	; () banked
 18118  001F4C  51A7               	movf	(_loRa+167)& (0+255),w,b
 18119  001F4E  E004               	bz	l13720
 18120                           
 18121                           ; BSR set to: 2
 18122  001F50  0100               	movlb	0	; () banked
 18123  001F52  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18124  001F54  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18125  001F56  E104               	bnz	l13722
 18126  001F58                     l13720:
 18127                           
 18128                           ;lorawan.c: 1759: {
 18129                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 18130  001F58  0EF0               	movlw	-16
 18131  001F5A  0100               	movlb	0	; () banked
 18132  001F5C  17D3               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 18133                           
 18134                           ;lorawan.c: 1761: }
 18135  001F5E  D007               	goto	l13724
 18136  001F60                     l13722:
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;lorawan.c: 1763: else
 18140                           ;lorawan.c: 1764: {
 18141                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 18142  001F60  EC6B  F02A         	call	_CountfOptsLength	;wreg free
 18143  001F64  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18144  001F66  19D3               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 18145  001F68  0BF0               	andlw	-16
 18146  001F6A  19CF               	xorwf	??_AssemblePacket& (0+255),w,b
 18147  001F6C  6FD3               	movwf	AssemblePacket@fCtrl& (0+255),b
 18148  001F6E                     l13724:
 18149                           
 18150                           ; BSR set to: 0
 18151                           ;lorawan.c: 1766: }
 18152                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 18153  001F6E  0EE0               	movlw	low _macBuffer
 18154  001F70  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18155  001F72  6ED9               	movwf	fsr2l,c
 18156  001F74  6ADA               	clrf	fsr2h,c
 18157  001F76  0E04               	movlw	high _macBuffer
 18158  001F78  22DA               	addwfc	fsr2h,f,c
 18159  001F7A  C0D3  FFDF         	movff	AssemblePacket@fCtrl,indf2
 18160                           
 18161                           ; BSR set to: 0
 18162  001F7E  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18163                           
 18164                           ; BSR set to: 0
 18165                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 18166  001F80  0EE0               	movlw	low _macBuffer
 18167  001F82  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18168  001F84  6F64               	movwf	memcpy@d1& (0+255),b
 18169  001F86  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18170  001F88  0E04               	movlw	high _macBuffer
 18171  001F8A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18172  001F8C  0E06               	movlw	low (_loRa+6)
 18173  001F8E  6F66               	movwf	memcpy@s1& (0+255),b
 18174  001F90  0E02               	movlw	high (_loRa+6)
 18175  001F92  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18176  001F94  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18177  001F96  0E02               	movlw	2
 18178  001F98  6F68               	movwf	memcpy@n& (0+255),b
 18179  001F9A  EC14  F034         	call	_memcpy	;wreg free
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 18183  001F9E  0E02               	movlw	2
 18184  001FA0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 18188  001FA2  0102               	movlb	2	; () banked
 18189  001FA4  51A7               	movf	(_loRa+167)& (0+255),w,b
 18190  001FA6  E00E               	bz	l13738
 18191                           
 18192                           ; BSR set to: 2
 18193  001FA8  0100               	movlb	0	; () banked
 18194  001FAA  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18195  001FAC  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18196  001FAE  E00A               	bz	l13738
 18197                           
 18198                           ; BSR set to: 0
 18199                           ;lorawan.c: 1774: {
 18200                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 18201  001FB0  0EE0               	movlw	low _macBuffer
 18202  001FB2  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18203  001FB4  0E04               	movlw	high _macBuffer
 18204  001FB6  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18205  001FB8  0ED5               	movlw	low AssemblePacket@bufferIndex
 18206  001FBA  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18207  001FBC  0E01               	movlw	1
 18208  001FBE  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18209  001FC0  EC9A  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18210  001FC4                     l13738:
 18211                           
 18212                           ;lorawan.c: 1776: }
 18213                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 18214  001FC4  0EE0               	movlw	low _macBuffer
 18215  001FC6  0100               	movlb	0	; () banked
 18216  001FC8  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18217  001FCA  6ED9               	movwf	fsr2l,c
 18218  001FCC  6ADA               	clrf	fsr2h,c
 18219  001FCE  0E04               	movlw	high _macBuffer
 18220  001FD0  22DA               	addwfc	fsr2h,f,c
 18221  001FD2  C0CA  FFDF         	movff	AssemblePacket@port,indf2
 18222                           
 18223                           ; BSR set to: 0
 18224  001FD6  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;lorawan.c: 1780: if (bufferLength != 0)
 18228  001FD8  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18229  001FDA  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18230  001FDC  E02E               	bz	l13750
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;lorawan.c: 1781: {
 18234                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 18235  001FDE  0EE0               	movlw	low _macBuffer
 18236  001FE0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18237  001FE2  6F64               	movwf	memcpy@d1& (0+255),b
 18238  001FE4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18239  001FE6  0E04               	movlw	high _macBuffer
 18240  001FE8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18241  001FEA  C0CB  F066         	movff	AssemblePacket@buffer,memcpy@s1
 18242  001FEE  C0CC  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 18243  001FF2  C0CD  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 18244  001FF6  C0CE  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 18245  001FFA  EC14  F034         	call	_memcpy	;wreg free
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 18249  001FFE  C0CB  F094         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 18250  002002  C0CC  F095         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 18251  002006  C0CD  F096         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 18252  00200A  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18253  00200C  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18254  002010  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18255  002014  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18256  002018  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18257  00201C  0E32               	movlw	low (_loRa+50)
 18258  00201E  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18259  002020  0E02               	movlw	high (_loRa+50)
 18260  002022  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18261  002024  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18262  002028  0EE0               	movlw	low _macBuffer
 18263  00202A  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18264  00202C  0E04               	movlw	high _macBuffer
 18265  00202E  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18266  002030  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18267  002032  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 18268                           
 18269                           ; BSR set to: 0
 18270                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 18271  002036  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18272  002038  D02A               	goto	L8
 18273  00203A                     l13750:
 18274                           
 18275                           ; BSR set to: 0
 18276                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 18277  00203A  0102               	movlb	2	; () banked
 18278  00203C  51A7               	movf	(_loRa+167)& (0+255),w,b
 18279  00203E  E028               	bz	l13756
 18280                           
 18281                           ; BSR set to: 2
 18282                           ;lorawan.c: 1787: {
 18283                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 18284  002040  0EEF               	movlw	low _radioBuffer
 18285  002042  0100               	movlb	0	; () banked
 18286  002044  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18287  002046  0E05               	movlw	high _radioBuffer
 18288  002048  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18289  00204A  0ED4               	movlw	low AssemblePacket@macCmdIdx
 18290  00204C  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18291  00204E  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18292  002050  EC9A  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18293                           
 18294                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 18295  002054  0EEF               	movlw	low _radioBuffer
 18296  002056  6F94               	movwf	EncryptFRMPayload@buffer& (0+255),b
 18297  002058  0E05               	movlw	high _radioBuffer
 18298  00205A  6F95               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 18299  00205C  C0D4  F096         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 18300  002060  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18301  002062  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18302  002066  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18303  00206A  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18304  00206E  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18305  002072  0E22               	movlw	low (_loRa+34)
 18306  002074  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18307  002076  0E02               	movlw	high (_loRa+34)
 18308  002078  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18309  00207A  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18310  00207E  0EE0               	movlw	low _macBuffer
 18311  002080  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18312  002082  0E04               	movlw	high _macBuffer
 18313  002084  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18314  002086  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18315  002088  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 18319  00208C  51D4               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 18320  00208E                     L8:
 18321  00208E  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18322  002090                     l13756:
 18323                           
 18324                           ;lorawan.c: 1793: }
 18325                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 18326  002090  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 18327  002094  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 18328  002098  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 18329  00209C  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 18330  0020A0  0100               	movlb	0	; () banked
 18331  0020A2  51D5               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18332  0020A4  0FF0               	addlw	240
 18333  0020A6  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 18334  0020A8  0E49               	movlw	73
 18335  0020AA  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 18336  0020AC  0E00               	movlw	0
 18337  0020AE  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 18338  0020B0  EC31  F02C         	call	_AssembleEncryptionBlock
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 18342  0020B4  0EE0               	movlw	low _macBuffer
 18343  0020B6  6F64               	movwf	memcpy@d1& (0+255),b
 18344  0020B8  0E04               	movlw	high _macBuffer
 18345  0020BA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 18346  0020BC  0E9F               	movlw	low _aesBuffer
 18347  0020BE  6F66               	movwf	memcpy@s1& (0+255),b
 18348  0020C0  0E01               	movlw	high _aesBuffer
 18349  0020C2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18350  0020C4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18351  0020C6  0E10               	movlw	16
 18352  0020C8  6F68               	movwf	memcpy@n& (0+255),b
 18353  0020CA  EC14  F034         	call	_memcpy	;wreg free
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 18357  0020CE  0E22               	movlw	low (_loRa+34)
 18358  0020D0  6FBC               	movwf	AESCmac@key& (0+255),b
 18359  0020D2  0E02               	movlw	high (_loRa+34)
 18360  0020D4  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 18361  0020D6  0E9F               	movlw	low _aesBuffer
 18362  0020D8  6FBE               	movwf	AESCmac@output& (0+255),b
 18363  0020DA  0E01               	movlw	high _aesBuffer
 18364  0020DC  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 18365  0020DE  0EE0               	movlw	low _macBuffer
 18366  0020E0  6FC0               	movwf	AESCmac@input& (0+255),b
 18367  0020E2  0E04               	movlw	high _macBuffer
 18368  0020E4  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 18369  0020E6  C0D5  F0C2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 18370  0020EA  EC0C  F00C         	call	_AESCmac	;wreg free
 18371                           
 18372                           ; BSR set to: 0
 18373                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 18374  0020EE  0EE0               	movlw	low _macBuffer
 18375  0020F0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18376  0020F2  6F64               	movwf	memcpy@d1& (0+255),b
 18377  0020F4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18378  0020F6  0E04               	movlw	high _macBuffer
 18379  0020F8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18380  0020FA  0E9F               	movlw	low _aesBuffer
 18381  0020FC  6F66               	movwf	memcpy@s1& (0+255),b
 18382  0020FE  0E01               	movlw	high _aesBuffer
 18383  002100  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18384  002102  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18385  002104  0E04               	movlw	4
 18386  002106  6F68               	movwf	memcpy@n& (0+255),b
 18387  002108  EC14  F034         	call	_memcpy	;wreg free
 18388                           
 18389                           ; BSR set to: 0
 18390                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 18391  00210C  0E04               	movlw	4
 18392  00210E  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18393                           
 18394                           ; BSR set to: 0
 18395                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 18396  002110  0EF0               	movlw	240
 18397  002112  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18398  002114  0102               	movlb	2	; () banked
 18399  002116  6FD4               	movwf	(_loRa+212)& (0+255),b
 18400  002118  6BD5               	clrf	(_loRa+213)& (0+255),b
 18401  00211A  0EFF               	movlw	255
 18402  00211C  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 18403                           
 18404                           ; BSR set to: 2
 18405  00211E  0CFF               	retlw	255	;funcret
 18406  002120                     __end_of_AssemblePacket:
 18407                           	opt stack 0
 18408                           tosu	equ	0xFFF
 18409                           tosh	equ	0xFFE
 18410                           tosl	equ	0xFFD
 18411                           pclath	equ	0xFFA
 18412                           tblptru	equ	0xFF8
 18413                           tblptrh	equ	0xFF7
 18414                           tblptrl	equ	0xFF6
 18415                           tablat	equ	0xFF5
 18416                           prodh	equ	0xFF4
 18417                           prodl	equ	0xFF3
 18418                           intcon	equ	0xFF2
 18419                           intcon2	equ	0xFF1
 18420                           intcon3	equ	0xFF0
 18421                           indf0	equ	0xFEF
 18422                           postinc0	equ	0xFEE
 18423                           fsr0h	equ	0xFEA
 18424                           fsr0l	equ	0xFE9
 18425                           wreg	equ	0xFE8
 18426                           postinc1	equ	0xFE6
 18427                           postdec1	equ	0xFE5
 18428                           plusw1	equ	0xFE3
 18429                           fsr1h	equ	0xFE2
 18430                           fsr1l	equ	0xFE1
 18431                           indf2	equ	0xFDF
 18432                           postinc2	equ	0xFDE
 18433                           postdec2	equ	0xFDD
 18434                           plusw2	equ	0xFDB
 18435                           fsr2h	equ	0xFDA
 18436                           fsr2l	equ	0xFD9
 18437                           status	equ	0xFD8
 18438                           
 18439 ;; *************** function _IncludeMacCommandsResponse *****************
 18440 ;; Defined at:
 18441 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18442 ;; Parameters:    Size  Location     Type
 18443 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 18444 ;;		 -> macBuffer(271), radioBuffer(271), 
 18445 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 18446 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 18447 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 18450 ;;  i               1   14[BANK0 ] unsigned char 
 18451 ;; Return value:  Size  Location     Type
 18452 ;;                  1    wreg      void 
 18453 ;; Registers used:
 18454 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18455 ;; Tracked objects:
 18456 ;;		On entry : F/0
 18457 ;;		On exit  : F/0
 18458 ;;		Unchanged: 0/0
 18459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18461 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18462 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18463 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18464 ;;Total ram usage:       12 bytes
 18465 ;; Hardware stack levels used:    1
 18466 ;; Hardware stack levels required when called:    8
 18467 ;; This function calls:
 18468 ;;		_RADIO_GetPacketSnr
 18469 ;; This function is called by:
 18470 ;;		_AssemblePacket
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           	psect	text98
 18475  001B34                     __ptext98:
 18476                           	opt stack 0
 18477  001B34                     _IncludeMacCommandsResponse:
 18478                           	opt stack 19
 18479                           
 18480                           ; BSR set to: 0
 18481                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 18482                           
 18483                           ; BSR set to: 0
 18484                           
 18485                           ; BSR set to: 2
 18486                           ;incstack = 0
 18487  001B34  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18488  001B36  6ED9               	movwf	fsr2l,c
 18489  001B38  6ADA               	clrf	fsr2h,c
 18490  001B3A  50DF               	movf	indf2,w,c
 18491  001B3C  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 18495  001B3E  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 18496  001B40  D169               	goto	l13340
 18497  001B42                     l13244:
 18498                           
 18499                           ; BSR set to: 0
 18500                           ;lorawan.c: 1851: {
 18501                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 18502  001B42  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 18503  001B44  E101 D14B          	bz	l13336
 18504                           
 18505                           ; BSR set to: 0
 18506  001B48  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18507  001B4A  0D02               	mullw	2
 18508  001B4C  0EA8               	movlw	low (_loRa+168)
 18509  001B4E  24F3               	addwf	prodl,w,c
 18510  001B50  6ED9               	movwf	fsr2l,c
 18511  001B52  0E02               	movlw	high (_loRa+168)
 18512  001B54  20F4               	addwfc	prodh,w,c
 18513  001B56  6EDA               	movwf	fsr2h,c
 18514  001B58  28DE               	incf	postinc2,w,c
 18515  001B5A  E101 D140          	bz	l13336
 18516                           
 18517                           ; BSR set to: 0
 18518                           ;lorawan.c: 1853: {
 18519                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 18520  001B5E  0EFE               	movlw	254
 18521  001B60  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 18522  001B62  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 18523  001B64  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18524  001B66  0D02               	mullw	2
 18525  001B68  0EA8               	movlw	low (_loRa+168)
 18526  001B6A  24F3               	addwf	prodl,w,c
 18527  001B6C  6ED9               	movwf	fsr2l,c
 18528  001B6E  0E02               	movlw	high (_loRa+168)
 18529  001B70  20F4               	addwfc	prodh,w,c
 18530  001B72  6EDA               	movwf	fsr2h,c
 18531  001B74  50DF               	movf	indf2,w,c
 18532  001B76  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 18533  001B78  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 18534  001B7A  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 18535  001B7C  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 18536  001B7E  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 18537  001B80  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 18538  001B82  0E94               	movlw	low _macEndDevCmdReplyLen
 18539  001B84  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 18540  001B86  6EF6               	movwf	tblptrl,c
 18541  001B88  0EFF               	movlw	high _macEndDevCmdReplyLen
 18542  001B8A  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 18543  001B8C  6EF7               	movwf	tblptrh,c
 18544  001B8E                     	if	1	;There are 3 active tblptr bytes
 18545  001B8E  6AF8               	clrf	tblptru,c
 18546  001B90  0E00               	movlw	low (__mediumconst shr (0+16))
 18547  001B92  22F8               	addwfc	tblptru,f,c
 18548  001B94                     	endif
 18549  001B94  0008               	tblrd		*
 18550  001B96  50F5               	movf	tablat,w,c
 18551  001B98  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 18552  001B9C  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 18553  001B9E  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18554  001BA0  0E00               	movlw	0
 18555  001BA2  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18556  001BA4  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18557  001BA6  6ED9               	movwf	fsr2l,c
 18558  001BA8  6ADA               	clrf	fsr2h,c
 18559  001BAA  50DF               	movf	indf2,w,c
 18560  001BAC  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18561  001BAE  0E00               	movlw	0
 18562  001BB0  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18563  001BB2  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 18564  001BB4  D114               	goto	l13336
 18565  001BB6  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 18566  001BB8  E105               	bnz	u14570
 18567  001BBA  0E10               	movlw	16
 18568  001BBC  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 18569  001BBE  E301 D12F          	bc	l13342
 18570  001BC2  D10D               	goto	l13336
 18571  001BC4                     u14570:
 18572  001BC4  D12D               	goto	l13342
 18573  001BC6                     l13252:
 18574                           
 18575                           ; BSR set to: 0
 18576                           ;lorawan.c: 1862: {
 18577                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 18578  001BC6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18579  001BC8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18580  001BCA  6ED9               	movwf	fsr2l,c
 18581  001BCC  0E00               	movlw	0
 18582  001BCE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18583  001BD0  6EDA               	movwf	fsr2h,c
 18584  001BD2  0E03               	movlw	3
 18585  001BD4  6EDF               	movwf	indf2,c
 18586                           
 18587                           ; BSR set to: 0
 18588  001BD6  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 18592  001BD8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18593  001BDA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18594  001BDC  6ED9               	movwf	fsr2l,c
 18595  001BDE  0E00               	movlw	0
 18596  001BE0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18597  001BE2  6EDA               	movwf	fsr2h,c
 18598  001BE4  6ADF               	clrf	indf2,c
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 18602  001BE6  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18603  001BE8  0D02               	mullw	2
 18604  001BEA  0EA9               	movlw	low (_loRa+169)
 18605  001BEC  24F3               	addwf	prodl,w,c
 18606  001BEE  6ED9               	movwf	fsr2l,c
 18607  001BF0  0E02               	movlw	high (_loRa+169)
 18608  001BF2  20F4               	addwfc	prodh,w,c
 18609  001BF4  6EDA               	movwf	fsr2h,c
 18610  001BF6  A0DF               	btfss	indf2,0,c
 18611  001BF8  D009               	goto	l13262
 18612                           
 18613                           ; BSR set to: 2
 18614                           ;lorawan.c: 1866: {
 18615                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 18616  001BFA  0100               	movlb	0	; () banked
 18617  001BFC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18618  001BFE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18619  001C00  6ED9               	movwf	fsr2l,c
 18620  001C02  0E00               	movlw	0
 18621  001C04  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18622  001C06  6EDA               	movwf	fsr2h,c
 18623  001C08  0E00               	movlw	0
 18624  001C0A  80DB               	bsf	plusw2,0,c
 18625  001C0C                     l13262:
 18626                           
 18627                           ;lorawan.c: 1868: }
 18628                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 18629  001C0C  0100               	movlb	0	; () banked
 18630  001C0E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18631  001C10  0D02               	mullw	2
 18632  001C12  0EA9               	movlw	low (_loRa+169)
 18633  001C14  24F3               	addwf	prodl,w,c
 18634  001C16  6ED9               	movwf	fsr2l,c
 18635  001C18  0E02               	movlw	high (_loRa+169)
 18636  001C1A  20F4               	addwfc	prodh,w,c
 18637  001C1C  6EDA               	movwf	fsr2h,c
 18638  001C1E  A2DF               	btfss	indf2,1,c
 18639  001C20  D008               	goto	l13266
 18640                           
 18641                           ; BSR set to: 2
 18642                           ;lorawan.c: 1871: {
 18643                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 18644  001C22  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18645  001C24  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18646  001C26  6ED9               	movwf	fsr2l,c
 18647  001C28  0E00               	movlw	0
 18648  001C2A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18649  001C2C  6EDA               	movwf	fsr2h,c
 18650  001C2E  0E00               	movlw	0
 18651  001C30  82DB               	bsf	plusw2,1,c
 18652  001C32                     l13266:
 18653                           
 18654                           ;lorawan.c: 1873: }
 18655                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 18656  001C32  0100               	movlb	0	; () banked
 18657  001C34  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18658  001C36  0D02               	mullw	2
 18659  001C38  0EA9               	movlw	low (_loRa+169)
 18660  001C3A  24F3               	addwf	prodl,w,c
 18661  001C3C  6ED9               	movwf	fsr2l,c
 18662  001C3E  0E02               	movlw	high (_loRa+169)
 18663  001C40  20F4               	addwfc	prodh,w,c
 18664  001C42  6EDA               	movwf	fsr2h,c
 18665  001C44  A4DF               	btfss	indf2,2,c
 18666  001C46  D009               	goto	l13270
 18667  001C48                     l13268:
 18668                           
 18669                           ; BSR set to: 2
 18670                           ;lorawan.c: 1876: {
 18671                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 18672  001C48  0100               	movlb	0	; () banked
 18673  001C4A  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18674  001C4C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18675  001C4E  6ED9               	movwf	fsr2l,c
 18676  001C50  0E00               	movlw	0
 18677  001C52  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18678  001C54  6EDA               	movwf	fsr2h,c
 18679  001C56  0E00               	movlw	0
 18680  001C58  84DB               	bsf	plusw2,2,c
 18681  001C5A                     l13270:
 18682                           
 18683                           ;lorawan.c: 1878: }
 18684                           ;lorawan.c: 1879: bufferIndex ++;
 18685  001C5A  0100               	movlb	0	; () banked
 18686  001C5C  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18687                           
 18688                           ;lorawan.c: 1880: }
 18689                           ;lorawan.c: 1881: break;
 18690  001C5E  D0D9               	goto	l13338
 18691  001C60                     l13272:
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;lorawan.c: 1884: {
 18695                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 18696  001C60  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18697  001C62  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18698  001C64  6ED9               	movwf	fsr2l,c
 18699  001C66  0E00               	movlw	0
 18700  001C68  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18701  001C6A  6EDA               	movwf	fsr2h,c
 18702  001C6C  0E05               	movlw	5
 18703  001C6E  6EDF               	movwf	indf2,c
 18704                           
 18705                           ; BSR set to: 0
 18706  001C70  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 18710  001C72  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18711  001C74  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18712  001C76  6ED9               	movwf	fsr2l,c
 18713  001C78  0E00               	movlw	0
 18714  001C7A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18715  001C7C  6EDA               	movwf	fsr2h,c
 18716  001C7E  6ADF               	clrf	indf2,c
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 18720  001C80  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18721  001C82  0D02               	mullw	2
 18722  001C84  0EA9               	movlw	low (_loRa+169)
 18723  001C86  24F3               	addwf	prodl,w,c
 18724  001C88  6ED9               	movwf	fsr2l,c
 18725  001C8A  0E02               	movlw	high (_loRa+169)
 18726  001C8C  20F4               	addwfc	prodh,w,c
 18727  001C8E  6EDA               	movwf	fsr2h,c
 18728  001C90  A6DF               	btfss	indf2,3,c
 18729  001C92  D009               	goto	l13282
 18730                           
 18731                           ; BSR set to: 2
 18732                           ;lorawan.c: 1888: {
 18733                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 18734  001C94  0100               	movlb	0	; () banked
 18735  001C96  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18736  001C98  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18737  001C9A  6ED9               	movwf	fsr2l,c
 18738  001C9C  0E00               	movlw	0
 18739  001C9E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18740  001CA0  6EDA               	movwf	fsr2h,c
 18741  001CA2  0E00               	movlw	0
 18742  001CA4  80DB               	bsf	plusw2,0,c
 18743  001CA6                     l13282:
 18744                           
 18745                           ;lorawan.c: 1890: }
 18746                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 18747  001CA6  0100               	movlb	0	; () banked
 18748  001CA8  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18749  001CAA  0D02               	mullw	2
 18750  001CAC  0EA9               	movlw	low (_loRa+169)
 18751  001CAE  24F3               	addwf	prodl,w,c
 18752  001CB0  6ED9               	movwf	fsr2l,c
 18753  001CB2  0E02               	movlw	high (_loRa+169)
 18754  001CB4  20F4               	addwfc	prodh,w,c
 18755  001CB6  6EDA               	movwf	fsr2h,c
 18756  001CB8  A8DF               	btfss	indf2,4,c
 18757  001CBA  D008               	goto	l13286
 18758                           
 18759                           ; BSR set to: 2
 18760                           ;lorawan.c: 1893: {
 18761                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 18762  001CBC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18763  001CBE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18764  001CC0  6ED9               	movwf	fsr2l,c
 18765  001CC2  0E00               	movlw	0
 18766  001CC4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18767  001CC6  6EDA               	movwf	fsr2h,c
 18768  001CC8  0E00               	movlw	0
 18769  001CCA  82DB               	bsf	plusw2,1,c
 18770  001CCC                     l13286:
 18771                           
 18772                           ;lorawan.c: 1895: }
 18773                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 18774  001CCC  0100               	movlb	0	; () banked
 18775  001CCE  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18776  001CD0  0D02               	mullw	2
 18777  001CD2  0EA9               	movlw	low (_loRa+169)
 18778  001CD4  24F3               	addwf	prodl,w,c
 18779  001CD6  6ED9               	movwf	fsr2l,c
 18780  001CD8  0E02               	movlw	high (_loRa+169)
 18781  001CDA  20F4               	addwfc	prodh,w,c
 18782  001CDC  6EDA               	movwf	fsr2h,c
 18783  001CDE  AADF               	btfss	indf2,5,c
 18784  001CE0  D7BC               	goto	l13270
 18785  001CE2  D7B2               	goto	l13268
 18786  001CE4                     l13292:
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;lorawan.c: 1907: {
 18790                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 18791  001CE4  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18792  001CE6  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18793  001CE8  6ED9               	movwf	fsr2l,c
 18794  001CEA  0E00               	movlw	0
 18795  001CEC  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18796  001CEE  6EDA               	movwf	fsr2h,c
 18797  001CF0  0E06               	movlw	6
 18798  001CF2  6EDF               	movwf	indf2,c
 18799                           
 18800                           ; BSR set to: 0
 18801  001CF4  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 18805  001CF6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18806  001CF8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18807  001CFA  6ED9               	movwf	fsr2l,c
 18808  001CFC  0E00               	movlw	0
 18809  001CFE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18810  001D00  6EDA               	movwf	fsr2h,c
 18811  001D02  C2E0  FFDF         	movff	_loRa+224,indf2
 18812  001D06  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 18816  001D08  EC7F  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18817  001D0C  0A80               	xorlw	128
 18818  001D0E  0FA0               	addlw	160
 18819  001D10  E305               	bnc	l13302
 18820                           
 18821                           ; BSR set to: 1
 18822  001D12  EC7F  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18823  001D16  0A80               	xorlw	128
 18824  001D18  0F60               	addlw	-160
 18825  001D1A  E309               	bnc	l13306
 18826  001D1C                     l13302:
 18827                           
 18828                           ; BSR set to: 1
 18829                           ;lorawan.c: 1911: {
 18830                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 18831  001D1C  0100               	movlb	0	; () banked
 18832  001D1E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18833  001D20  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18834  001D22  6ED9               	movwf	fsr2l,c
 18835  001D24  0E00               	movlw	0
 18836  001D26  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18837  001D28  6EDA               	movwf	fsr2h,c
 18838  001D2A  0E20               	movlw	32
 18839  001D2C  D00A               	goto	L10
 18840  001D2E                     l13306:
 18841                           
 18842                           ; BSR set to: 1
 18843                           ;lorawan.c: 1914: else
 18844                           ;lorawan.c: 1915: {
 18845                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 18846  001D2E  0100               	movlb	0	; () banked
 18847  001D30  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18848  001D32  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18849  001D34  6ED9               	movwf	fsr2l,c
 18850  001D36  0E00               	movlw	0
 18851  001D38  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18852  001D3A  6EDA               	movwf	fsr2h,c
 18853  001D3C  EC7F  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18854  001D40  0B3F               	andlw	63
 18855  001D42                     L10:
 18856  001D42  6EDF               	movwf	indf2,c
 18857  001D44  D78A               	goto	l13270
 18858  001D46                     l13310:
 18859                           
 18860                           ; BSR set to: 0
 18861                           ;lorawan.c: 1922: {
 18862                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 18863  001D46  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18864  001D48  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18865  001D4A  6ED9               	movwf	fsr2l,c
 18866  001D4C  0E00               	movlw	0
 18867  001D4E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18868  001D50  6EDA               	movwf	fsr2h,c
 18869  001D52  0E07               	movlw	7
 18870  001D54  6EDF               	movwf	indf2,c
 18871                           
 18872                           ; BSR set to: 0
 18873  001D56  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 18877  001D58  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18878  001D5A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18879  001D5C  6ED9               	movwf	fsr2l,c
 18880  001D5E  0E00               	movlw	0
 18881  001D60  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18882  001D62  6EDA               	movwf	fsr2h,c
 18883  001D64  6ADF               	clrf	indf2,c
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 18887  001D66  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18888  001D68  0D02               	mullw	2
 18889  001D6A  0EA9               	movlw	low (_loRa+169)
 18890  001D6C  24F3               	addwf	prodl,w,c
 18891  001D6E  6ED9               	movwf	fsr2l,c
 18892  001D70  0E02               	movlw	high (_loRa+169)
 18893  001D72  20F4               	addwfc	prodh,w,c
 18894  001D74  6EDA               	movwf	fsr2h,c
 18895  001D76  AEDF               	btfss	indf2,7,c
 18896  001D78  D009               	goto	l13320
 18897                           
 18898                           ; BSR set to: 2
 18899                           ;lorawan.c: 1926: {
 18900                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 18901  001D7A  0100               	movlb	0	; () banked
 18902  001D7C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18903  001D7E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18904  001D80  6ED9               	movwf	fsr2l,c
 18905  001D82  0E00               	movlw	0
 18906  001D84  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18907  001D86  6EDA               	movwf	fsr2h,c
 18908  001D88  0E00               	movlw	0
 18909  001D8A  80DB               	bsf	plusw2,0,c
 18910  001D8C                     l13320:
 18911                           
 18912                           ;lorawan.c: 1928: }
 18913                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 18914  001D8C  0100               	movlb	0	; () banked
 18915  001D8E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18916  001D90  0D02               	mullw	2
 18917  001D92  0EA9               	movlw	low (_loRa+169)
 18918  001D94  24F3               	addwf	prodl,w,c
 18919  001D96  6ED9               	movwf	fsr2l,c
 18920  001D98  0E02               	movlw	high (_loRa+169)
 18921  001D9A  20F4               	addwfc	prodh,w,c
 18922  001D9C  6EDA               	movwf	fsr2h,c
 18923  001D9E  ACDF               	btfss	indf2,6,c
 18924  001DA0  D75C               	goto	l13270
 18925                           
 18926                           ; BSR set to: 2
 18927                           ;lorawan.c: 1931: {
 18928                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 18929  001DA2  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18930  001DA4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18931  001DA6  6ED9               	movwf	fsr2l,c
 18932  001DA8  0E00               	movlw	0
 18933  001DAA  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18934  001DAC  6EDA               	movwf	fsr2h,c
 18935  001DAE  0E00               	movlw	0
 18936  001DB0  82DB               	bsf	plusw2,1,c
 18937  001DB2  D753               	goto	l13270
 18938  001DB4                     l2283:
 18939                           
 18940                           ; BSR set to: 0
 18941                           ;lorawan.c: 1939: {
 18942                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 18943  001DB4  0102               	movlb	2	; () banked
 18944  001DB6  69DD               	setf	(_loRa+221)& (0+255),b
 18945                           
 18946                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 18947  001DB8  6BDE               	clrf	(_loRa+222)& (0+255),b
 18948  001DBA                     l13326:
 18949                           
 18950                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 18951  001DBA  0100               	movlb	0	; () banked
 18952  001DBC  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18953  001DBE  0D02               	mullw	2
 18954  001DC0  0EA8               	movlw	low (_loRa+168)
 18955  001DC2  24F3               	addwf	prodl,w,c
 18956  001DC4  6ED9               	movwf	fsr2l,c
 18957  001DC6  0E02               	movlw	high (_loRa+168)
 18958  001DC8  20F4               	addwfc	prodh,w,c
 18959  001DCA  6EDA               	movwf	fsr2h,c
 18960  001DCC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18961  001DCE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18962  001DD0  6EE9               	movwf	fsr0l,c
 18963  001DD2  0E00               	movlw	0
 18964  001DD4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18965  001DD6  6EEA               	movwf	fsr0h,c
 18966  001DD8  CFDF FFEF          	movff	indf2,indf0
 18967  001DDC  D73E               	goto	l13270
 18968  001DDE                     l13336:
 18969                           
 18970                           ; BSR set to: 0
 18971  001DDE  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18972  001DE0  0D02               	mullw	2
 18973  001DE2  0EA8               	movlw	low (_loRa+168)
 18974  001DE4  24F3               	addwf	prodl,w,c
 18975  001DE6  6ED9               	movwf	fsr2l,c
 18976  001DE8  0E02               	movlw	high (_loRa+168)
 18977  001DEA  20F4               	addwfc	prodh,w,c
 18978  001DEC  6EDA               	movwf	fsr2h,c
 18979  001DEE  50DF               	movf	indf2,w,c
 18980                           
 18981                           ; Switch size 1, requested type "speed"
 18982                           ; Number of cases is 7, Range of values is 2 to 8
 18983                           ; switch strategies available:
 18984                           ; Name         Instructions Cycles
 18985                           ; simple_byte           22    12 (average)
 18986                           ;	Chosen strategy is simple_byte
 18987  001DF0  0A02               	xorlw	2	; case 2
 18988  001DF2  E0E0               	bz	l2283
 18989  001DF4  0A01               	xorlw	1	; case 3
 18990  001DF6  E101 D6E6          	bz	l13252
 18991  001DFA  0A07               	xorlw	7	; case 4
 18992  001DFC  E0DE               	bz	l13326
 18993  001DFE  0A01               	xorlw	1	; case 5
 18994  001E00  E101 D72E          	bz	l13272
 18995  001E04  0A03               	xorlw	3	; case 6
 18996  001E06  E101 D76D          	bz	l13292
 18997  001E0A  0A01               	xorlw	1	; case 7
 18998  001E0C  E09C               	bz	l13310
 18999  001E0E  0A0F               	xorlw	15	; case 8
 19000  001E10  E0D4               	bz	l13326
 19001  001E12                     l13338:
 19002                           
 19003                           ; BSR set to: 0
 19004  001E12  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19005  001E14                     l13340:
 19006                           
 19007                           ; BSR set to: 0
 19008  001E14  0102               	movlb	2	; () banked
 19009  001E16  51A7               	movf	(_loRa+167)& (0+255),w,b
 19010  001E18  0100               	movlb	0	; () banked
 19011  001E1A  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19012  001E1C  E201 D691          	bnc	l13244
 19013  001E20                     l13342:
 19014                           
 19015                           ; BSR set to: 0
 19016                           ;lorawan.c: 1957: }
 19017                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19018  001E20  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19019  001E22  6ED9               	movwf	fsr2l,c
 19020  001E24  6ADA               	clrf	fsr2h,c
 19021  001E26  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19022                           
 19023                           ; BSR set to: 0
 19024  001E2A  0012               	return		;funcret
 19025  001E2C                     __end_of_IncludeMacCommandsResponse:
 19026                           	opt stack 0
 19027                           tosu	equ	0xFFF
 19028                           tosh	equ	0xFFE
 19029                           tosl	equ	0xFFD
 19030                           pclath	equ	0xFFA
 19031                           tblptru	equ	0xFF8
 19032                           tblptrh	equ	0xFF7
 19033                           tblptrl	equ	0xFF6
 19034                           tablat	equ	0xFF5
 19035                           prodh	equ	0xFF4
 19036                           prodl	equ	0xFF3
 19037                           intcon	equ	0xFF2
 19038                           intcon2	equ	0xFF1
 19039                           intcon3	equ	0xFF0
 19040                           indf0	equ	0xFEF
 19041                           postinc0	equ	0xFEE
 19042                           fsr0h	equ	0xFEA
 19043                           fsr0l	equ	0xFE9
 19044                           wreg	equ	0xFE8
 19045                           postinc1	equ	0xFE6
 19046                           postdec1	equ	0xFE5
 19047                           plusw1	equ	0xFE3
 19048                           fsr1h	equ	0xFE2
 19049                           fsr1l	equ	0xFE1
 19050                           indf2	equ	0xFDF
 19051                           postinc2	equ	0xFDE
 19052                           postdec2	equ	0xFDD
 19053                           plusw2	equ	0xFDB
 19054                           fsr2h	equ	0xFDA
 19055                           fsr2l	equ	0xFD9
 19056                           status	equ	0xFD8
 19057                           
 19058 ;; *************** function _RADIO_GetPacketSnr *****************
 19059 ;; Defined at:
 19060 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19061 ;; Parameters:    Size  Location     Type
 19062 ;;		None
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;		None
 19065 ;; Return value:  Size  Location     Type
 19066 ;;                  1    wreg      char 
 19067 ;; Registers used:
 19068 ;;		wreg, status,2
 19069 ;; Tracked objects:
 19070 ;;		On entry : E/0
 19071 ;;		On exit  : F/1
 19072 ;;		Unchanged: 0/0
 19073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19078 ;;Total ram usage:        0 bytes
 19079 ;; Hardware stack levels used:    1
 19080 ;; Hardware stack levels required when called:    7
 19081 ;; This function calls:
 19082 ;;		Nothing
 19083 ;; This function is called by:
 19084 ;;		_IncludeMacCommandsResponse
 19085 ;; This function uses a non-reentrant model
 19086 ;;
 19087                           
 19088                           	psect	text99
 19089  0078FE                     __ptext99:
 19090                           	opt stack 0
 19091  0078FE                     _RADIO_GetPacketSnr:
 19092                           	opt stack 19
 19093                           
 19094                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 19095                           
 19096                           ; BSR set to: 0
 19097                           ;incstack = 0
 19098  0078FE  0101               	movlb	1	; () banked
 19099  007900  519B               	movf	(_RadioConfiguration+50)& (0+255),w,b
 19100                           
 19101                           ; BSR set to: 1
 19102  007902  0012               	return		;funcret
 19103  007904                     __end_of_RADIO_GetPacketSnr:
 19104                           	opt stack 0
 19105                           tosu	equ	0xFFF
 19106                           tosh	equ	0xFFE
 19107                           tosl	equ	0xFFD
 19108                           pclath	equ	0xFFA
 19109                           tblptru	equ	0xFF8
 19110                           tblptrh	equ	0xFF7
 19111                           tblptrl	equ	0xFF6
 19112                           tablat	equ	0xFF5
 19113                           prodh	equ	0xFF4
 19114                           prodl	equ	0xFF3
 19115                           intcon	equ	0xFF2
 19116                           intcon2	equ	0xFF1
 19117                           intcon3	equ	0xFF0
 19118                           indf0	equ	0xFEF
 19119                           postinc0	equ	0xFEE
 19120                           fsr0h	equ	0xFEA
 19121                           fsr0l	equ	0xFE9
 19122                           wreg	equ	0xFE8
 19123                           postinc1	equ	0xFE6
 19124                           postdec1	equ	0xFE5
 19125                           plusw1	equ	0xFE3
 19126                           fsr1h	equ	0xFE2
 19127                           fsr1l	equ	0xFE1
 19128                           indf2	equ	0xFDF
 19129                           postinc2	equ	0xFDE
 19130                           postdec2	equ	0xFDD
 19131                           plusw2	equ	0xFDB
 19132                           fsr2h	equ	0xFDA
 19133                           fsr2l	equ	0xFD9
 19134                           status	equ	0xFD8
 19135                           
 19136 ;; *************** function _FindSmallestDataRate *****************
 19137 ;; Defined at:
 19138 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19139 ;; Parameters:    Size  Location     Type
 19140 ;;		None
 19141 ;; Auto vars:     Size  Location     Type
 19142 ;;  dataRate        1    7[BANK0 ] unsigned char 
 19143 ;;  i               1    6[BANK0 ] unsigned char 
 19144 ;;  found           1    5[BANK0 ] unsigned char 
 19145 ;; Return value:  Size  Location     Type
 19146 ;;                  1    wreg      unsigned char 
 19147 ;; Registers used:
 19148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19149 ;; Tracked objects:
 19150 ;;		On entry : F/2
 19151 ;;		On exit  : F/0
 19152 ;;		Unchanged: 0/0
 19153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19155 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19156 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19157 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19158 ;;Total ram usage:        4 bytes
 19159 ;; Hardware stack levels used:    1
 19160 ;; Hardware stack levels required when called:    7
 19161 ;; This function calls:
 19162 ;;		Nothing
 19163 ;; This function is called by:
 19164 ;;		_AckRetransmissionCallback
 19165 ;;		_AssemblePacket
 19166 ;; This function uses a non-reentrant model
 19167 ;;
 19168                           
 19169                           	psect	text100
 19170  005914                     __ptext100:
 19171                           	opt stack 0
 19172  005914                     _FindSmallestDataRate:
 19173                           	opt stack 20
 19174                           
 19175                           ; BSR set to: 2
 19176                           ;lorawan.c: 1966: bool found = 0;
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;incstack = 0
 19180  005914  0100               	movlb	0	; () banked
 19181  005916  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 19185  005918  0102               	movlb	2	; () banked
 19186  00591A  51DF               	movf	(_loRa+223)& (0+255),w,b
 19187  00591C  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19188  00591E  E24A               	bc	l13170
 19189                           
 19190                           ; BSR set to: 2
 19191                           ;lorawan.c: 1969: {
 19192                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 19193  005920  05DF               	decf	(_loRa+223)& (0+255),w,b
 19194  005922  0100               	movlb	0	; () banked
 19195  005924  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 19196                           
 19197                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 19198  005926  D03A               	goto	l13162
 19199  005928                     l2292:
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;lorawan.c: 1973: {
 19203                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 19204  005928  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 19205  00592A  D02B               	goto	l13154
 19206  00592C                     l13144:
 19207                           
 19208                           ; BSR set to: 0
 19209                           ;lorawan.c: 1975: {
 19210                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 19211  00592C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19212  00592E  0D0E               	mullw	14
 19213  005930  0E05               	movlw	low (_Channels+5)
 19214  005932  24F3               	addwf	prodl,w,c
 19215  005934  6ED9               	movwf	fsr2l,c
 19216  005936  0E04               	movlw	high (_Channels+5)
 19217  005938  20F4               	addwfc	prodh,w,c
 19218  00593A  6EDA               	movwf	fsr2h,c
 19219  00593C  50DF               	movf	223,w,c
 19220  00593E  0B0F               	andlw	15
 19221  005940  0100               	movlb	0	; () banked
 19222  005942  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19223  005944  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 19224  005946  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19225  005948  E31B               	bnc	l13152
 19226                           
 19227                           ; BSR set to: 0
 19228  00594A  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19229  00594C  0D0E               	mullw	14
 19230  00594E  0E05               	movlw	low (_Channels+5)
 19231  005950  24F3               	addwf	prodl,w,c
 19232  005952  6ED9               	movwf	fsr2l,c
 19233  005954  0E04               	movlw	high (_Channels+5)
 19234  005956  20F4               	addwfc	prodh,w,c
 19235  005958  6EDA               	movwf	fsr2h,c
 19236  00595A  38DF               	swapf	223,w,c
 19237  00595C  0B0F               	andlw	15
 19238  00595E  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19239  005960  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19240  005962  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 19241  005964  E30D               	bnc	l13152
 19242                           
 19243                           ; BSR set to: 0
 19244  005966  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19245  005968  0D0E               	mullw	14
 19246  00596A  0E04               	movlw	low (_Channels+4)
 19247  00596C  24F3               	addwf	prodl,w,c
 19248  00596E  6ED9               	movwf	fsr2l,c
 19249  005970  0E04               	movlw	high (_Channels+4)
 19250  005972  20F4               	addwfc	prodh,w,c
 19251  005974  6EDA               	movwf	fsr2h,c
 19252  005976  04DE               	decf	postinc2,w,c
 19253  005978  E103               	bnz	l13152
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;lorawan.c: 1977: {
 19257                           ;lorawan.c: 1978: found = 1;
 19258  00597A  0E01               	movlw	1
 19259  00597C  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 19260                           
 19261                           ;lorawan.c: 1979: break;
 19262  00597E  D006               	goto	l13156
 19263  005980                     l13152:
 19264                           
 19265                           ; BSR set to: 0
 19266  005980  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 19267  005982                     l13154:
 19268                           
 19269                           ; BSR set to: 0
 19270  005982  0102               	movlb	2	; () banked
 19271  005984  51ED               	movf	(_loRa+237)& (0+255),w,b
 19272  005986  0100               	movlb	0	; () banked
 19273  005988  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 19274  00598A  E3D0               	bnc	l13144
 19275  00598C                     l13156:
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;lorawan.c: 1980: }
 19279                           ;lorawan.c: 1981: }
 19280                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 19281  00598C  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19282  00598E  E106               	bnz	l13162
 19283                           
 19284                           ; BSR set to: 0
 19285  005990  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19286  005992  0102               	movlb	2	; () banked
 19287  005994  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19288  005996  E202               	bc	l13162
 19289                           
 19290                           ; BSR set to: 2
 19291                           ;lorawan.c: 1983: {
 19292                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 19293  005998  0100               	movlb	0	; () banked
 19294  00599A  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 19295  00599C                     l13162:
 19296  00599C  0100               	movlb	0	; () banked
 19297  00599E  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19298  0059A0  E105               	bnz	l13166
 19299                           
 19300                           ; BSR set to: 0
 19301  0059A2  0102               	movlb	2	; () banked
 19302  0059A4  51EB               	movf	(_loRa+235)& (0+255),w,b
 19303  0059A6  0100               	movlb	0	; () banked
 19304  0059A8  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19305  0059AA  E2BE               	bc	l2292
 19306  0059AC                     l13166:
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;lorawan.c: 1985: }
 19310                           ;lorawan.c: 1986: }
 19311                           ;lorawan.c: 1988: if (found == 1)
 19312  0059AC  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 19313  0059AE  E102               	bnz	l13170
 19314                           
 19315                           ; BSR set to: 0
 19316                           ;lorawan.c: 1989: {
 19317                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 19318  0059B0  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 19319  0059B4                     l13170:
 19320                           
 19321                           ;lorawan.c: 1991: }
 19322                           ;lorawan.c: 1992: }
 19323                           ;lorawan.c: 1994: return found;
 19324  0059B4  0100               	movlb	0	; () banked
 19325  0059B6  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19326                           
 19327                           ; BSR set to: 0
 19328  0059B8  0012               	return		;funcret
 19329  0059BA                     __end_of_FindSmallestDataRate:
 19330                           	opt stack 0
 19331                           tosu	equ	0xFFF
 19332                           tosh	equ	0xFFE
 19333                           tosl	equ	0xFFD
 19334                           pclath	equ	0xFFA
 19335                           tblptru	equ	0xFF8
 19336                           tblptrh	equ	0xFF7
 19337                           tblptrl	equ	0xFF6
 19338                           tablat	equ	0xFF5
 19339                           prodh	equ	0xFF4
 19340                           prodl	equ	0xFF3
 19341                           intcon	equ	0xFF2
 19342                           intcon2	equ	0xFF1
 19343                           intcon3	equ	0xFF0
 19344                           indf0	equ	0xFEF
 19345                           postinc0	equ	0xFEE
 19346                           fsr0h	equ	0xFEA
 19347                           fsr0l	equ	0xFE9
 19348                           wreg	equ	0xFE8
 19349                           postinc1	equ	0xFE6
 19350                           postdec1	equ	0xFE5
 19351                           plusw1	equ	0xFE3
 19352                           fsr1h	equ	0xFE2
 19353                           fsr1l	equ	0xFE1
 19354                           indf2	equ	0xFDF
 19355                           postinc2	equ	0xFDE
 19356                           postdec2	equ	0xFDD
 19357                           plusw2	equ	0xFDB
 19358                           fsr2h	equ	0xFDA
 19359                           fsr2l	equ	0xFD9
 19360                           status	equ	0xFD8
 19361                           
 19362 ;; *************** function _EncryptFRMPayload *****************
 19363 ;; Defined at:
 19364 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19365 ;; Parameters:    Size  Location     Type
 19366 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 19367 ;;		 -> payload(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 19368 ;;  bufferLength    1   54[BANK0 ] unsigned char 
 19369 ;;  dir             1   55[BANK0 ] unsigned char 
 19370 ;;  frameCounter    4   56[BANK0 ] unsigned long 
 19371 ;;  key             2   60[BANK0 ] PTR unsigned char 
 19372 ;;		 -> loRa.activationParameters(105), loRa(245), 
 19373 ;;  macBufferInd    1   62[BANK0 ] unsigned char 
 19374 ;;  bufferToBeEn    2   63[BANK0 ] PTR unsigned char 
 19375 ;;		 -> macBuffer(271), radioBuffer(271), 
 19376 ;;  multicastSta    1   65[BANK0 ] unsigned char 
 19377 ;; Auto vars:     Size  Location     Type
 19378 ;;  j               1   73[BANK0 ] unsigned char 
 19379 ;;  i               1   72[BANK0 ] unsigned char 
 19380 ;;  k               1   71[BANK0 ] unsigned char 
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      void 
 19383 ;; Registers used:
 19384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19385 ;; Tracked objects:
 19386 ;;		On entry : F/0
 19387 ;;		On exit  : F/0
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19390 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19391 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19392 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19393 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19394 ;;Total ram usage:       22 bytes
 19395 ;; Hardware stack levels used:    1
 19396 ;; Hardware stack levels required when called:   10
 19397 ;; This function calls:
 19398 ;;		_AESEncodeLoRa
 19399 ;;		_AssembleEncryptionBlock
 19400 ;; This function is called by:
 19401 ;;		_LORAWAN_RxDone
 19402 ;;		_AssemblePacket
 19403 ;; This function uses a non-reentrant model
 19404 ;;
 19405                           
 19406                           	psect	text101
 19407  004154                     __ptext101:
 19408                           	opt stack 0
 19409  004154                     _EncryptFRMPayload:
 19410                           	opt stack 17
 19411                           
 19412                           ; BSR set to: 0
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;incstack = 0
 19416  004154  6BA8               	clrf	EncryptFRMPayload@i& (0+255),b
 19417  004156  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;lorawan.c: 2209: k = bufferLength / 16;
 19421  004158  3996               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 19422  00415A  0B0F               	andlw	15
 19423  00415C  6FA7               	movwf	EncryptFRMPayload@k& (0+255),b
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 19427  00415E  0E01               	movlw	1
 19428  004160  6FA8               	movwf	EncryptFRMPayload@i& (0+255),b
 19429  004162  D051               	goto	l13206
 19430  004164                     l13188:
 19431                           
 19432                           ; BSR set to: 0
 19433                           ;lorawan.c: 2211: {
 19434                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19435  004164  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19436  004168  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19437  00416C  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19438  004170  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19439  004174  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19440  004178  0E01               	movlw	1
 19441  00417A  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19442  00417C  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19443  004180  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19444  004182  EC31  F02C         	call	_AssembleEncryptionBlock
 19445                           
 19446                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 19447  004186  0E9F               	movlw	low _aesBuffer
 19448  004188  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19449  00418A  0E01               	movlw	high _aesBuffer
 19450  00418C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19451  00418E  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19452  004192  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19453  004196  EC5E  F039         	call	_AESEncodeLoRa	;wreg free
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 19457  00419A  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19458  00419C                     l13196:
 19459                           
 19460                           ; BSR set to: 0
 19461                           ;lorawan.c: 2216: {
 19462                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 19463  00419C  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19464  00419E  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19465  0041A0  6ED9               	movwf	fsr2l,c
 19466  0041A2  0E00               	movlw	0
 19467  0041A4  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19468  0041A6  6EDA               	movwf	fsr2h,c
 19469  0041A8  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19470  0041AA  6FA2               	movwf	??_EncryptFRMPayload& (0+255),b
 19471  0041AC  6BA3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 19472  0041AE  3BA2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 19473  0041B0  3BA3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19474  0041B2  0EF0               	movlw	240
 19475  0041B4  17A3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19476  0041B6  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19477  0041B8  0B0F               	andlw	15
 19478  0041BA  13A3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19479  0041BC  0EF0               	movlw	240
 19480  0041BE  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19481  0041C0  C094  F0A4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 19482  0041C4  C095  F0A5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 19483  0041C8  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19484  0041CA  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19485  0041CC  51A3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 19486  0041CE  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19487  0041D0  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19488  0041D2  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19489  0041D4  0E00               	movlw	0
 19490  0041D6  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19491  0041D8  0EF0               	movlw	240
 19492  0041DA  25A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19493  0041DC  6EE9               	movwf	fsr0l,c
 19494  0041DE  0EFF               	movlw	255
 19495  0041E0  21A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 19496  0041E2  6EEA               	movwf	fsr0h,c
 19497  0041E4  50EF               	movf	indf0,w,c
 19498  0041E6  6FA6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 19499  0041E8  0E9F               	movlw	low _aesBuffer
 19500  0041EA  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19501  0041EC  6EE9               	movwf	fsr0l,c
 19502  0041EE  6AEA               	clrf	fsr0h,c
 19503  0041F0  0E01               	movlw	high _aesBuffer
 19504  0041F2  22EA               	addwfc	fsr0h,f,c
 19505  0041F4  50EF               	movf	indf0,w,c
 19506  0041F6  19A6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 19507  0041F8  6EDF               	movwf	indf2,c
 19508                           
 19509                           ; BSR set to: 0
 19510  0041FA  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19511                           
 19512                           ; BSR set to: 0
 19513  0041FC  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19514                           
 19515                           ; BSR set to: 0
 19516  0041FE  0E0F               	movlw	15
 19517  004200  65A9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 19518  004202  D7CC               	goto	l13196
 19519                           
 19520                           ; BSR set to: 0
 19521  004204  2BA8               	incf	EncryptFRMPayload@i& (0+255),f,b
 19522  004206                     l13206:
 19523                           
 19524                           ; BSR set to: 0
 19525  004206  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19526  004208  5DA7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 19527  00420A  E2AC               	bc	l13188
 19528                           
 19529                           ; BSR set to: 0
 19530                           ;lorawan.c: 2218: }
 19531                           ;lorawan.c: 2219: }
 19532                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 19533  00420C  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19534  004210  0E0F               	movlw	15
 19535  004212  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19536  004214  B4D8               	btfsc	status,2,c
 19537  004216  0C0F               	retlw	15
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;lorawan.c: 2222: {
 19541                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19542  004218  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19543  00421C  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19544  004220  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19545  004224  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19546  004228  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19547  00422C  0E01               	movlw	1
 19548  00422E  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19549  004230  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19550  004234  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19551  004236  EC31  F02C         	call	_AssembleEncryptionBlock
 19552                           
 19553                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 19554  00423A  0E9F               	movlw	low _aesBuffer
 19555  00423C  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19556  00423E  0E01               	movlw	high _aesBuffer
 19557  004240  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19558  004242  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19559  004246  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19560  00424A  EC5E  F039         	call	_AESEncodeLoRa	;wreg free
 19561                           
 19562                           ; BSR set to: 0
 19563                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 19564  00424E  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19565  004250  D023               	goto	l13220
 19566  004252                     l13214:
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;lorawan.c: 2227: {
 19570                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 19571  004252  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19572  004254  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19573  004256  6ED9               	movwf	fsr2l,c
 19574  004258  0E00               	movlw	0
 19575  00425A  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19576  00425C  6EDA               	movwf	fsr2h,c
 19577  00425E  51A7               	movf	EncryptFRMPayload@k& (0+255),w,b
 19578  004260  0D10               	mullw	16
 19579  004262  C094  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 19580  004266  C095  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 19581  00426A  50F3               	movf	prodl,w,c
 19582  00426C  27A2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 19583  00426E  50F4               	movf	prodh,w,c
 19584  004270  23A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 19585  004272  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19586  004274  25A2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 19587  004276  6EE9               	movwf	fsr0l,c
 19588  004278  0E00               	movlw	0
 19589  00427A  21A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 19590  00427C  6EEA               	movwf	fsr0h,c
 19591  00427E  50EF               	movf	indf0,w,c
 19592  004280  6FA4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 19593  004282  0E9F               	movlw	low _aesBuffer
 19594  004284  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19595  004286  6EE9               	movwf	fsr0l,c
 19596  004288  6AEA               	clrf	fsr0h,c
 19597  00428A  0E01               	movlw	high _aesBuffer
 19598  00428C  22EA               	addwfc	fsr0h,f,c
 19599  00428E  50EF               	movf	indf0,w,c
 19600  004290  19A4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19601  004292  6EDF               	movwf	indf2,c
 19602                           
 19603                           ; BSR set to: 0
 19604  004294  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19605                           
 19606                           ; BSR set to: 0
 19607  004296  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19608  004298                     l13220:
 19609                           
 19610                           ; BSR set to: 0
 19611  004298  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19612  00429C  0E0F               	movlw	15
 19613  00429E  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19614  0042A0  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19615  0042A2  5DA9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 19616  0042A4  E3D6               	bnc	l13214
 19617                           
 19618                           ; BSR set to: 0
 19619  0042A6  0012               	return		;funcret
 19620  0042A8                     __end_of_EncryptFRMPayload:
 19621                           	opt stack 0
 19622                           tosu	equ	0xFFF
 19623                           tosh	equ	0xFFE
 19624                           tosl	equ	0xFFD
 19625                           pclath	equ	0xFFA
 19626                           tblptru	equ	0xFF8
 19627                           tblptrh	equ	0xFF7
 19628                           tblptrl	equ	0xFF6
 19629                           tablat	equ	0xFF5
 19630                           prodh	equ	0xFF4
 19631                           prodl	equ	0xFF3
 19632                           intcon	equ	0xFF2
 19633                           intcon2	equ	0xFF1
 19634                           intcon3	equ	0xFF0
 19635                           indf0	equ	0xFEF
 19636                           postinc0	equ	0xFEE
 19637                           fsr0h	equ	0xFEA
 19638                           fsr0l	equ	0xFE9
 19639                           wreg	equ	0xFE8
 19640                           postinc1	equ	0xFE6
 19641                           postdec1	equ	0xFE5
 19642                           plusw1	equ	0xFE3
 19643                           fsr1h	equ	0xFE2
 19644                           fsr1l	equ	0xFE1
 19645                           indf2	equ	0xFDF
 19646                           postinc2	equ	0xFDE
 19647                           postdec2	equ	0xFDD
 19648                           plusw2	equ	0xFDB
 19649                           fsr2h	equ	0xFDA
 19650                           fsr2l	equ	0xFD9
 19651                           status	equ	0xFD8
 19652                           
 19653 ;; *************** function _AssembleEncryptionBlock *****************
 19654 ;; Defined at:
 19655 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19656 ;; Parameters:    Size  Location     Type
 19657 ;;  dir             1    wreg     unsigned char 
 19658 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 19659 ;;  blockId         1   18[BANK0 ] unsigned char 
 19660 ;;  firstByte       1   19[BANK0 ] unsigned char 
 19661 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 19662 ;; Auto vars:     Size  Location     Type
 19663 ;;  dir             1   21[BANK0 ] unsigned char 
 19664 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 19665 ;; Return value:  Size  Location     Type
 19666 ;;                  1    wreg      void 
 19667 ;; Registers used:
 19668 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19669 ;; Tracked objects:
 19670 ;;		On entry : F/0
 19671 ;;		On exit  : F/0
 19672 ;;		Unchanged: 0/0
 19673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19674 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19675 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19677 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19678 ;;Total ram usage:        9 bytes
 19679 ;; Hardware stack levels used:    1
 19680 ;; Hardware stack levels required when called:    8
 19681 ;; This function calls:
 19682 ;;		_memcpy
 19683 ;;		_memset
 19684 ;; This function is called by:
 19685 ;;		_LORAWAN_RxDone
 19686 ;;		_AssemblePacket
 19687 ;;		_EncryptFRMPayload
 19688 ;; This function uses a non-reentrant model
 19689 ;;
 19690                           
 19691                           	psect	text102
 19692  005862                     __ptext102:
 19693                           	opt stack 0
 19694  005862                     _AssembleEncryptionBlock:
 19695                           	opt stack 18
 19696                           
 19697                           ; BSR set to: 0
 19698                           ;incstack = 0
 19699                           ;AssembleEncryptionBlock@dir stored from wreg
 19700  005862  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 19701                           
 19702                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 19703  005864  0100               	movlb	0	; () banked
 19704  005866  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 19708  005868  0E9F               	movlw	low _aesBuffer
 19709  00586A  6F64               	movwf	memset@p1& (0+255),b
 19710  00586C  0E01               	movlw	high _aesBuffer
 19711  00586E  6F65               	movwf	(memset@p1+1)& (0+255),b
 19712  005870  6B67               	clrf	(memset@c+1)& (0+255),b
 19713  005872  6B66               	clrf	memset@c& (0+255),b
 19714  005874  6B69               	clrf	(memset@n+1)& (0+255),b
 19715  005876  0E10               	movlw	16
 19716  005878  6F68               	movwf	memset@n& (0+255),b
 19717  00587A  EC21  F039         	call	_memset	;wreg free
 19718                           
 19719                           ; BSR set to: 0
 19720                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 19721  00587E  C073  F19F         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 19722                           
 19723                           ; BSR set to: 0
 19724                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 19725  005882  0E05               	movlw	5
 19726  005884  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 19730  005886  0E9F               	movlw	low _aesBuffer
 19731  005888  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19732  00588A  6ED9               	movwf	fsr2l,c
 19733  00588C  6ADA               	clrf	fsr2h,c
 19734  00588E  0E01               	movlw	high _aesBuffer
 19735  005890  22DA               	addwfc	fsr2h,f,c
 19736  005892  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 19737                           
 19738                           ; BSR set to: 0
 19739  005896  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19740                           
 19741                           ; BSR set to: 0
 19742                           ;lorawan.c: 2168: if (0 == multicastStatus)
 19743  005898  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 19744  00589A  E112               	bnz	l12750
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;lorawan.c: 2169: {
 19748                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 19749  00589C  0E9F               	movlw	low _aesBuffer
 19750  00589E  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19751  0058A0  6F64               	movwf	memcpy@d1& (0+255),b
 19752  0058A2  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19753  0058A4  0E01               	movlw	high _aesBuffer
 19754  0058A6  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19755  0058A8  0E1E               	movlw	low (_loRa+30)
 19756  0058AA  6F66               	movwf	memcpy@s1& (0+255),b
 19757  0058AC  0E02               	movlw	high (_loRa+30)
 19758  0058AE  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19759  0058B0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19760  0058B2  0E04               	movlw	4
 19761  0058B4  6F68               	movwf	memcpy@n& (0+255),b
 19762  0058B6  EC14  F034         	call	_memcpy	;wreg free
 19763  0058BA                     l12748:
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 19767  0058BA  0E04               	movlw	4
 19768  0058BC  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19769                           
 19770                           ;lorawan.c: 2172: }
 19771  0058BE  D010               	goto	l12754
 19772  0058C0                     l12750:
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;lorawan.c: 2173: else
 19776                           ;lorawan.c: 2174: {
 19777                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 19778  0058C0  0E9F               	movlw	low _aesBuffer
 19779  0058C2  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19780  0058C4  6F64               	movwf	memcpy@d1& (0+255),b
 19781  0058C6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19782  0058C8  0E01               	movlw	high _aesBuffer
 19783  0058CA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19784  0058CC  0E62               	movlw	low (_loRa+98)
 19785  0058CE  6F66               	movwf	memcpy@s1& (0+255),b
 19786  0058D0  0E02               	movlw	high (_loRa+98)
 19787  0058D2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19788  0058D4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19789  0058D6  0E04               	movlw	4
 19790  0058D8  6F68               	movwf	memcpy@n& (0+255),b
 19791  0058DA  EC14  F034         	call	_memcpy	;wreg free
 19792  0058DE  D7ED               	goto	l12748
 19793  0058E0                     l12754:
 19794                           
 19795                           ; BSR set to: 0
 19796                           ;lorawan.c: 2177: }
 19797                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 19798  0058E0  0E9F               	movlw	low _aesBuffer
 19799  0058E2  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19800  0058E4  6F64               	movwf	memcpy@d1& (0+255),b
 19801  0058E6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19802  0058E8  0E01               	movlw	high _aesBuffer
 19803  0058EA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19804  0058EC  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 19805  0058EE  6F66               	movwf	memcpy@s1& (0+255),b
 19806  0058F0  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 19807  0058F2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19808  0058F4  0E04               	movlw	4
 19809  0058F6  6F68               	movwf	memcpy@n& (0+255),b
 19810  0058F8  EC14  F034         	call	_memcpy	;wreg free
 19811                           
 19812                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 19813  0058FC  0E04               	movlw	4
 19814  0058FE  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;lorawan.c: 2182: bufferIndex ++;
 19818  005900  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19819                           
 19820                           ; BSR set to: 0
 19821                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 19822  005902  0E9F               	movlw	low _aesBuffer
 19823  005904  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19824  005906  6ED9               	movwf	fsr2l,c
 19825  005908  6ADA               	clrf	fsr2h,c
 19826  00590A  0E01               	movlw	high _aesBuffer
 19827  00590C  22DA               	addwfc	fsr2h,f,c
 19828  00590E  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 19829                           
 19830                           ; BSR set to: 0
 19831  005912  0012               	return		;funcret
 19832  005914                     __end_of_AssembleEncryptionBlock:
 19833                           	opt stack 0
 19834                           tosu	equ	0xFFF
 19835                           tosh	equ	0xFFE
 19836                           tosl	equ	0xFFD
 19837                           pclath	equ	0xFFA
 19838                           tblptru	equ	0xFF8
 19839                           tblptrh	equ	0xFF7
 19840                           tblptrl	equ	0xFF6
 19841                           tablat	equ	0xFF5
 19842                           prodh	equ	0xFF4
 19843                           prodl	equ	0xFF3
 19844                           intcon	equ	0xFF2
 19845                           intcon2	equ	0xFF1
 19846                           intcon3	equ	0xFF0
 19847                           indf0	equ	0xFEF
 19848                           postinc0	equ	0xFEE
 19849                           fsr0h	equ	0xFEA
 19850                           fsr0l	equ	0xFE9
 19851                           wreg	equ	0xFE8
 19852                           postinc1	equ	0xFE6
 19853                           postdec1	equ	0xFE5
 19854                           plusw1	equ	0xFE3
 19855                           fsr1h	equ	0xFE2
 19856                           fsr1l	equ	0xFE1
 19857                           indf2	equ	0xFDF
 19858                           postinc2	equ	0xFDE
 19859                           postdec2	equ	0xFDD
 19860                           plusw2	equ	0xFDB
 19861                           fsr2h	equ	0xFDA
 19862                           fsr2l	equ	0xFD9
 19863                           status	equ	0xFD8
 19864                           
 19865 ;; *************** function _CountfOptsLength *****************
 19866 ;; Defined at:
 19867 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;		None
 19870 ;; Auto vars:     Size  Location     Type
 19871 ;;  i               1   11[BANK0 ] unsigned char 
 19872 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 19873 ;; Return value:  Size  Location     Type
 19874 ;;                  1    wreg      unsigned char 
 19875 ;; Registers used:
 19876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19877 ;; Tracked objects:
 19878 ;;		On entry : D/2
 19879 ;;		On exit  : F/0
 19880 ;;		Unchanged: 0/0
 19881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19884 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19885 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19886 ;;Total ram usage:        8 bytes
 19887 ;; Hardware stack levels used:    1
 19888 ;; Hardware stack levels required when called:    7
 19889 ;; This function calls:
 19890 ;;		Nothing
 19891 ;; This function is called by:
 19892 ;;		_LORAWAN_GetMaxPayloadSize
 19893 ;;		_AssemblePacket
 19894 ;; This function uses a non-reentrant model
 19895 ;;
 19896                           
 19897                           	psect	text103
 19898  0054D6                     __ptext103:
 19899                           	opt stack 0
 19900  0054D6                     _CountfOptsLength:
 19901                           	opt stack 20
 19902                           
 19903                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 19904                           
 19905                           ; BSR set to: 0
 19906                           ;incstack = 0
 19907  0054D6  0100               	movlb	0	; () banked
 19908  0054D8  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 19909                           
 19910                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 19911  0054DA  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 19912  0054DC  D053               	goto	l13232
 19913  0054DE                     l13224:
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;lorawan.c: 2139: {
 19917                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 19918  0054DE  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19919  0054E0  0D02               	mullw	2
 19920  0054E2  0EA8               	movlw	low (_loRa+168)
 19921  0054E4  24F3               	addwf	prodl,w,c
 19922  0054E6  6ED9               	movwf	fsr2l,c
 19923  0054E8  0E02               	movlw	high (_loRa+168)
 19924  0054EA  20F4               	addwfc	prodh,w,c
 19925  0054EC  6EDA               	movwf	fsr2h,c
 19926  0054EE  28DE               	incf	postinc2,w,c
 19927  0054F0  E048               	bz	l13230
 19928                           
 19929                           ; BSR set to: 0
 19930                           ;lorawan.c: 2141: {
 19931                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 19932  0054F2  0EFE               	movlw	254
 19933  0054F4  6F64               	movwf	??_CountfOptsLength& (0+255),b
 19934  0054F6  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 19935  0054F8  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19936  0054FA  0D02               	mullw	2
 19937  0054FC  0EA8               	movlw	low (_loRa+168)
 19938  0054FE  24F3               	addwf	prodl,w,c
 19939  005500  6ED9               	movwf	fsr2l,c
 19940  005502  0E02               	movlw	high (_loRa+168)
 19941  005504  20F4               	addwfc	prodh,w,c
 19942  005506  6EDA               	movwf	fsr2h,c
 19943  005508  50DF               	movf	indf2,w,c
 19944  00550A  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 19945  00550C  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 19946  00550E  5164               	movf	??_CountfOptsLength& (0+255),w,b
 19947  005510  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 19948  005512  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 19949  005514  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 19950  005516  0E94               	movlw	low _macEndDevCmdReplyLen
 19951  005518  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 19952  00551A  6EF6               	movwf	tblptrl,c
 19953  00551C  0EFF               	movlw	high _macEndDevCmdReplyLen
 19954  00551E  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 19955  005520  6EF7               	movwf	tblptrh,c
 19956  005522                     	if	1	;There are 3 active tblptr bytes
 19957  005522  6AF8               	clrf	tblptru,c
 19958  005524  0E00               	movlw	low (__mediumconst shr (0+16))
 19959  005526  22F8               	addwfc	tblptru,f,c
 19960  005528                     	endif
 19961  005528  0008               	tblrd		*
 19962  00552A  50F5               	movf	tablat,w,c
 19963  00552C  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 19964  005530  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 19965  005532  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 19966  005534  0E00               	movlw	0
 19967  005536  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 19968  005538  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 19969  00553A  D005               	goto	l13228
 19970  00553C  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 19971  00553E  E127               	bnz	l13234
 19972  005540  0E10               	movlw	16
 19973  005542  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 19974  005544  E224               	bc	l13234
 19975  005546                     l13228:
 19976                           
 19977                           ; BSR set to: 0
 19978                           ;lorawan.c: 2143: {
 19979                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 19980  005546  0EFE               	movlw	254
 19981  005548  6F64               	movwf	??_CountfOptsLength& (0+255),b
 19982  00554A  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 19983  00554C  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19984  00554E  0D02               	mullw	2
 19985  005550  0EA8               	movlw	low (_loRa+168)
 19986  005552  24F3               	addwf	prodl,w,c
 19987  005554  6ED9               	movwf	fsr2l,c
 19988  005556  0E02               	movlw	high (_loRa+168)
 19989  005558  20F4               	addwfc	prodh,w,c
 19990  00555A  6EDA               	movwf	fsr2h,c
 19991  00555C  50DF               	movf	indf2,w,c
 19992  00555E  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 19993  005560  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 19994  005562  5164               	movf	??_CountfOptsLength& (0+255),w,b
 19995  005564  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 19996  005566  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 19997  005568  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 19998  00556A  0E94               	movlw	low _macEndDevCmdReplyLen
 19999  00556C  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20000  00556E  6EF6               	movwf	tblptrl,c
 20001  005570  0EFF               	movlw	high _macEndDevCmdReplyLen
 20002  005572  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20003  005574  6EF7               	movwf	tblptrh,c
 20004  005576                     	if	1	;There are 3 active tblptr bytes
 20005  005576  6AF8               	clrf	tblptru,c
 20006  005578  0E00               	movlw	low (__mediumconst shr (0+16))
 20007  00557A  22F8               	addwfc	tblptru,f,c
 20008  00557C                     	endif
 20009  00557C  0008               	tblrd		*
 20010  00557E  50F5               	movf	tablat,w,c
 20011  005580  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 20012  005582                     l13230:
 20013                           
 20014                           ; BSR set to: 0
 20015  005582  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 20016  005584                     l13232:
 20017                           
 20018                           ; BSR set to: 0
 20019  005584  0102               	movlb	2	; () banked
 20020  005586  51A7               	movf	(_loRa+167)& (0+255),w,b
 20021  005588  0100               	movlb	0	; () banked
 20022  00558A  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 20023  00558C  E3A8               	bnc	l13224
 20024  00558E                     l13234:
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;lorawan.c: 2149: }
 20028                           ;lorawan.c: 2150: }
 20029                           ;lorawan.c: 2151: }
 20030                           ;lorawan.c: 2153: return macCommandLength;
 20031  00558E  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 20032                           
 20033                           ; BSR set to: 0
 20034  005590  0012               	return		;funcret
 20035  005592                     __end_of_CountfOptsLength:
 20036                           	opt stack 0
 20037                           tosu	equ	0xFFF
 20038                           tosh	equ	0xFFE
 20039                           tosl	equ	0xFFD
 20040                           pclath	equ	0xFFA
 20041                           tblptru	equ	0xFF8
 20042                           tblptrh	equ	0xFF7
 20043                           tblptrl	equ	0xFF6
 20044                           tablat	equ	0xFF5
 20045                           prodh	equ	0xFF4
 20046                           prodl	equ	0xFF3
 20047                           intcon	equ	0xFF2
 20048                           intcon2	equ	0xFF1
 20049                           intcon3	equ	0xFF0
 20050                           indf0	equ	0xFEF
 20051                           postinc0	equ	0xFEE
 20052                           fsr0h	equ	0xFEA
 20053                           fsr0l	equ	0xFE9
 20054                           wreg	equ	0xFE8
 20055                           postinc1	equ	0xFE6
 20056                           postdec1	equ	0xFE5
 20057                           plusw1	equ	0xFE3
 20058                           fsr1h	equ	0xFE2
 20059                           fsr1l	equ	0xFE1
 20060                           indf2	equ	0xFDF
 20061                           postinc2	equ	0xFDE
 20062                           postdec2	equ	0xFDD
 20063                           plusw2	equ	0xFDB
 20064                           fsr2h	equ	0xFDA
 20065                           fsr2l	equ	0xFD9
 20066                           status	equ	0xFD8
 20067                           
 20068 ;; *************** function _ExtractMic *****************
 20069 ;; Defined at:
 20070 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20071 ;; Parameters:    Size  Location     Type
 20072 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 20073 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20074 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 20075 ;; Auto vars:     Size  Location     Type
 20076 ;;  mic             4   20[BANK0 ] unsigned long 
 20077 ;; Return value:  Size  Location     Type
 20078 ;;                  4   14[BANK0 ] unsigned long 
 20079 ;; Registers used:
 20080 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20081 ;; Tracked objects:
 20082 ;;		On entry : F/0
 20083 ;;		On exit  : F/0
 20084 ;;		Unchanged: 0/0
 20085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20087 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20088 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20089 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20090 ;;Total ram usage:       10 bytes
 20091 ;; Hardware stack levels used:    1
 20092 ;; Hardware stack levels required when called:    8
 20093 ;; This function calls:
 20094 ;;		_memcpy
 20095 ;; This function is called by:
 20096 ;;		_LORAWAN_RxDone
 20097 ;; This function uses a non-reentrant model
 20098 ;;
 20099                           
 20100                           	psect	text104
 20101  006CA8                     __ptext104:
 20102                           	opt stack 0
 20103  006CA8                     _ExtractMic:
 20104                           	opt stack 18
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;lorawan.c: 2189: uint32_t mic = 0;
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;incstack = 0
 20111  006CA8  6B74               	clrf	ExtractMic@mic& (0+255),b
 20112  006CAA  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 20113  006CAC  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 20114  006CAE  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 20115                           
 20116                           ; BSR set to: 0
 20117                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 20118  006CB0  0E74               	movlw	low ExtractMic@mic
 20119  006CB2  6F64               	movwf	memcpy@d1& (0+255),b
 20120  006CB4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20121  006CB6  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 20122  006CB8  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 20123  006CBA  6F72               	movwf	??_ExtractMic& (0+255),b
 20124  006CBC  0E00               	movlw	0
 20125  006CBE  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 20126  006CC0  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 20127  006CC2  0EFC               	movlw	252
 20128  006CC4  2572               	addwf	??_ExtractMic& (0+255),w,b
 20129  006CC6  6F66               	movwf	memcpy@s1& (0+255),b
 20130  006CC8  0EFF               	movlw	255
 20131  006CCA  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 20132  006CCC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20133  006CCE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20134  006CD0  0E04               	movlw	4
 20135  006CD2  6F68               	movwf	memcpy@n& (0+255),b
 20136  006CD4  EC14  F034         	call	_memcpy	;wreg free
 20137                           
 20138                           ; BSR set to: 0
 20139                           ;lorawan.c: 2191: return mic;
 20140  006CD8  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 20141  006CDC  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 20142  006CE0  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 20143  006CE4  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 20144                           
 20145                           ; BSR set to: 0
 20146  006CE8  0012               	return		;funcret
 20147  006CEA                     __end_of_ExtractMic:
 20148                           	opt stack 0
 20149                           tosu	equ	0xFFF
 20150                           tosh	equ	0xFFE
 20151                           tosl	equ	0xFFD
 20152                           pclath	equ	0xFFA
 20153                           tblptru	equ	0xFF8
 20154                           tblptrh	equ	0xFF7
 20155                           tblptrl	equ	0xFF6
 20156                           tablat	equ	0xFF5
 20157                           prodh	equ	0xFF4
 20158                           prodl	equ	0xFF3
 20159                           intcon	equ	0xFF2
 20160                           intcon2	equ	0xFF1
 20161                           intcon3	equ	0xFF0
 20162                           indf0	equ	0xFEF
 20163                           postinc0	equ	0xFEE
 20164                           fsr0h	equ	0xFEA
 20165                           fsr0l	equ	0xFE9
 20166                           wreg	equ	0xFE8
 20167                           postinc1	equ	0xFE6
 20168                           postdec1	equ	0xFE5
 20169                           plusw1	equ	0xFE3
 20170                           fsr1h	equ	0xFE2
 20171                           fsr1l	equ	0xFE1
 20172                           indf2	equ	0xFDF
 20173                           postinc2	equ	0xFDE
 20174                           postdec2	equ	0xFDD
 20175                           plusw2	equ	0xFDB
 20176                           fsr2h	equ	0xFDA
 20177                           fsr2l	equ	0xFD9
 20178                           status	equ	0xFD8
 20179                           
 20180 ;; *************** function _ComputeSessionKeys *****************
 20181 ;; Defined at:
 20182 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20183 ;; Parameters:    Size  Location     Type
 20184 ;;  joinAcceptBu    2   52[BANK0 ] PTR struct .
 20185 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20186 ;; Auto vars:     Size  Location     Type
 20187 ;;		None
 20188 ;; Return value:  Size  Location     Type
 20189 ;;                  1    wreg      void 
 20190 ;; Registers used:
 20191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20192 ;; Tracked objects:
 20193 ;;		On entry : D/0
 20194 ;;		On exit  : F/0
 20195 ;;		Unchanged: 0/0
 20196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20201 ;;Total ram usage:        2 bytes
 20202 ;; Hardware stack levels used:    1
 20203 ;; Hardware stack levels required when called:   10
 20204 ;; This function calls:
 20205 ;;		_AESEncodeLoRa
 20206 ;;		_PrepareSessionKeys
 20207 ;; This function is called by:
 20208 ;;		_LORAWAN_RxDone
 20209 ;; This function uses a non-reentrant model
 20210 ;;
 20211                           
 20212                           	psect	text105
 20213  005E40                     __ptext105:
 20214                           	opt stack 0
 20215  005E40                     _ComputeSessionKeys:
 20216                           	opt stack 16
 20217                           
 20218                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;incstack = 0
 20222  005E40  0E32               	movlw	low (_loRa+50)
 20223  005E42  0100               	movlb	0	; () banked
 20224  005E44  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20225  005E46  0E02               	movlw	high (_loRa+50)
 20226  005E48  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20227  005E4A  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20228  005E4C  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20229  005E4E  0E00               	movlw	0
 20230  005E50  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20231  005E52  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20232  005E54  0E04               	movlw	4
 20233  005E56  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20234  005E58  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20235  005E5A  0E00               	movlw	0
 20236  005E5C  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20237  005E5E  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20238  005E60  EC9E  F02F         	call	_PrepareSessionKeys	;wreg free
 20239                           
 20240                           ; BSR set to: 0
 20241                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 20242  005E64  0E02               	movlw	2
 20243  005E66  0102               	movlb	2	; () banked
 20244  005E68  6F32               	movwf	(_loRa+50)& (0+255),b
 20245                           
 20246                           ; BSR set to: 2
 20247                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 20248  005E6A  0E32               	movlw	low (_loRa+50)
 20249  005E6C  0100               	movlb	0	; () banked
 20250  005E6E  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20251  005E70  0E02               	movlw	high (_loRa+50)
 20252  005E72  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20253  005E74  0E42               	movlw	low (_loRa+66)
 20254  005E76  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20255  005E78  0E02               	movlw	high (_loRa+66)
 20256  005E7A  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20257  005E7C  EC5E  F039         	call	_AESEncodeLoRa	;wreg free
 20258                           
 20259                           ; BSR set to: 0
 20260                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20261  005E80  0E22               	movlw	low (_loRa+34)
 20262  005E82  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20263  005E84  0E02               	movlw	high (_loRa+34)
 20264  005E86  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20265  005E88  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20266  005E8A  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20267  005E8C  0E00               	movlw	0
 20268  005E8E  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20269  005E90  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20270  005E92  0E04               	movlw	4
 20271  005E94  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20272  005E96  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20273  005E98  0E00               	movlw	0
 20274  005E9A  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20275  005E9C  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20276  005E9E  EC9E  F02F         	call	_PrepareSessionKeys	;wreg free
 20277                           
 20278                           ; BSR set to: 0
 20279                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 20280  005EA2  0E01               	movlw	1
 20281  005EA4  0102               	movlb	2	; () banked
 20282  005EA6  6F22               	movwf	(_loRa+34)& (0+255),b
 20283                           
 20284                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 20285  005EA8  0E22               	movlw	low (_loRa+34)
 20286  005EAA  0100               	movlb	0	; () banked
 20287  005EAC  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20288  005EAE  0E02               	movlw	high (_loRa+34)
 20289  005EB0  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20290  005EB2  0E42               	movlw	low (_loRa+66)
 20291  005EB4  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20292  005EB6  0E02               	movlw	high (_loRa+66)
 20293  005EB8  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20294  005EBA  EF5E  F039         	goto	_AESEncodeLoRa	;wreg free
 20295  005EBE                     __end_of_ComputeSessionKeys:
 20296                           	opt stack 0
 20297                           tosu	equ	0xFFF
 20298                           tosh	equ	0xFFE
 20299                           tosl	equ	0xFFD
 20300                           pclath	equ	0xFFA
 20301                           tblptru	equ	0xFF8
 20302                           tblptrh	equ	0xFF7
 20303                           tblptrl	equ	0xFF6
 20304                           tablat	equ	0xFF5
 20305                           prodh	equ	0xFF4
 20306                           prodl	equ	0xFF3
 20307                           intcon	equ	0xFF2
 20308                           intcon2	equ	0xFF1
 20309                           intcon3	equ	0xFF0
 20310                           indf0	equ	0xFEF
 20311                           postinc0	equ	0xFEE
 20312                           fsr0h	equ	0xFEA
 20313                           fsr0l	equ	0xFE9
 20314                           wreg	equ	0xFE8
 20315                           postinc1	equ	0xFE6
 20316                           postdec1	equ	0xFE5
 20317                           plusw1	equ	0xFE3
 20318                           fsr1h	equ	0xFE2
 20319                           fsr1l	equ	0xFE1
 20320                           indf2	equ	0xFDF
 20321                           postinc2	equ	0xFDE
 20322                           postdec2	equ	0xFDD
 20323                           plusw2	equ	0xFDB
 20324                           fsr2h	equ	0xFDA
 20325                           fsr2l	equ	0xFD9
 20326                           status	equ	0xFD8
 20327                           
 20328 ;; *************** function _PrepareSessionKeys *****************
 20329 ;; Defined at:
 20330 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20331 ;; Parameters:    Size  Location     Type
 20332 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 20333 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20334 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 20335 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20336 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 20337 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20338 ;; Auto vars:     Size  Location     Type
 20339 ;;  index           1   20[BANK0 ] unsigned char 
 20340 ;; Return value:  Size  Location     Type
 20341 ;;                  1    wreg      void 
 20342 ;; Registers used:
 20343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20344 ;; Tracked objects:
 20345 ;;		On entry : F/0
 20346 ;;		On exit  : F/0
 20347 ;;		Unchanged: 0/0
 20348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20352 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20353 ;;Total ram usage:        7 bytes
 20354 ;; Hardware stack levels used:    1
 20355 ;; Hardware stack levels required when called:    8
 20356 ;; This function calls:
 20357 ;;		_memcpy
 20358 ;;		_memset
 20359 ;; This function is called by:
 20360 ;;		_ComputeSessionKeys
 20361 ;; This function uses a non-reentrant model
 20362 ;;
 20363                           
 20364                           	psect	text106
 20365  005F3C                     __ptext106:
 20366                           	opt stack 0
 20367  005F3C                     _PrepareSessionKeys:
 20368                           	opt stack 17
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;lorawan.c: 2047: uint8_t index = 0;
 20372                           
 20373                           ; BSR set to: 0
 20374                           ;incstack = 0
 20375  005F3C  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 20376                           
 20377                           ; BSR set to: 0
 20378                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 20379  005F3E  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 20380  005F42  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 20381  005F46  6B67               	clrf	(memset@c+1)& (0+255),b
 20382  005F48  6B66               	clrf	memset@c& (0+255),b
 20383  005F4A  6B69               	clrf	(memset@n+1)& (0+255),b
 20384  005F4C  0E10               	movlw	16
 20385  005F4E  6F68               	movwf	memset@n& (0+255),b
 20386  005F50  EC21  F039         	call	_memset	;wreg free
 20387                           
 20388                           ; BSR set to: 0
 20389                           ;lorawan.c: 2050: index ++;
 20390  005F54  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 20391                           
 20392                           ; BSR set to: 0
 20393                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 20394  005F56  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20395  005F58  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20396  005F5A  6F64               	movwf	memcpy@d1& (0+255),b
 20397  005F5C  0E00               	movlw	0
 20398  005F5E  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20399  005F60  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20400  005F62  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 20401  005F66  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 20402  005F6A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20403  005F6C  0E03               	movlw	3
 20404  005F6E  6F68               	movwf	memcpy@n& (0+255),b
 20405  005F70  EC14  F034         	call	_memcpy	;wreg free
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;lorawan.c: 2053: index = index + 3;
 20409  005F74  0E03               	movlw	3
 20410  005F76  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20411                           
 20412                           ; BSR set to: 0
 20413                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 20414  005F78  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20415  005F7A  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20416  005F7C  6F64               	movwf	memcpy@d1& (0+255),b
 20417  005F7E  0E00               	movlw	0
 20418  005F80  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20419  005F82  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20420  005F84  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 20421  005F88  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 20422  005F8C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20423  005F8E  0E03               	movlw	3
 20424  005F90  6F68               	movwf	memcpy@n& (0+255),b
 20425  005F92  EC14  F034         	call	_memcpy	;wreg free
 20426                           
 20427                           ; BSR set to: 0
 20428                           ;lorawan.c: 2056: index = index + 3;
 20429  005F96  0E03               	movlw	3
 20430  005F98  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20431                           
 20432                           ; BSR set to: 0
 20433                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 20434  005F9A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20435  005F9C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20436  005F9E  6F64               	movwf	memcpy@d1& (0+255),b
 20437  005FA0  0E00               	movlw	0
 20438  005FA2  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20439  005FA4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20440  005FA6  0ED2               	movlw	low (_loRa+210)
 20441  005FA8  6F66               	movwf	memcpy@s1& (0+255),b
 20442  005FAA  0E02               	movlw	high (_loRa+210)
 20443  005FAC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20444  005FAE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20445  005FB0  0E02               	movlw	2
 20446  005FB2  6F68               	movwf	memcpy@n& (0+255),b
 20447  005FB4  EF14  F034         	goto	_memcpy	;wreg free
 20448  005FB8                     __end_of_PrepareSessionKeys:
 20449                           	opt stack 0
 20450                           tosu	equ	0xFFF
 20451                           tosh	equ	0xFFE
 20452                           tosl	equ	0xFFD
 20453                           pclath	equ	0xFFA
 20454                           tblptru	equ	0xFF8
 20455                           tblptrh	equ	0xFF7
 20456                           tblptrl	equ	0xFF6
 20457                           tablat	equ	0xFF5
 20458                           prodh	equ	0xFF4
 20459                           prodl	equ	0xFF3
 20460                           intcon	equ	0xFF2
 20461                           intcon2	equ	0xFF1
 20462                           intcon3	equ	0xFF0
 20463                           indf0	equ	0xFEF
 20464                           postinc0	equ	0xFEE
 20465                           fsr0h	equ	0xFEA
 20466                           fsr0l	equ	0xFE9
 20467                           wreg	equ	0xFE8
 20468                           postinc1	equ	0xFE6
 20469                           postdec1	equ	0xFE5
 20470                           plusw1	equ	0xFE3
 20471                           fsr1h	equ	0xFE2
 20472                           fsr1l	equ	0xFE1
 20473                           indf2	equ	0xFDF
 20474                           postinc2	equ	0xFDE
 20475                           postdec2	equ	0xFDD
 20476                           plusw2	equ	0xFDB
 20477                           fsr2h	equ	0xFDA
 20478                           fsr2l	equ	0xFD9
 20479                           status	equ	0xFD8
 20480                           
 20481 ;; *************** function _CheckMcastFlags *****************
 20482 ;; Defined at:
 20483 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20484 ;; Parameters:    Size  Location     Type
 20485 ;;  hdr             2    4[BANK0 ] PTR struct .
 20486 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20487 ;; Auto vars:     Size  Location     Type
 20488 ;;		None
 20489 ;; Return value:  Size  Location     Type
 20490 ;;                  1    wreg      unsigned char 
 20491 ;; Registers used:
 20492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20493 ;; Tracked objects:
 20494 ;;		On entry : F/2
 20495 ;;		On exit  : D/0
 20496 ;;		Unchanged: 0/0
 20497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20498 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20502 ;;Total ram usage:        2 bytes
 20503 ;; Hardware stack levels used:    1
 20504 ;; Hardware stack levels required when called:    7
 20505 ;; This function calls:
 20506 ;;		Nothing
 20507 ;; This function is called by:
 20508 ;;		_LORAWAN_RxDone
 20509 ;; This function uses a non-reentrant model
 20510 ;;
 20511                           
 20512                           	psect	text107
 20513  0060AA                     __ptext107:
 20514                           	opt stack 0
 20515  0060AA                     _CheckMcastFlags:
 20516                           	opt stack 19
 20517                           
 20518                           ; BSR set to: 2
 20519                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 20520                           
 20521                           ; BSR set to: 0
 20522                           ;incstack = 0
 20523  0060AA  0100               	movlb	0	; () banked
 20524  0060AC  EE20 F005          	lfsr	2,5
 20525  0060B0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20526  0060B2  26D9               	addwf	fsr2l,f,c
 20527  0060B4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20528  0060B6  22DA               	addwfc	fsr2h,f,c
 20529  0060B8  BADF               	btfsc	indf2,5,c
 20530  0060BA  0C00               	retlw	0
 20531                           
 20532                           ; BSR set to: 0
 20533  0060BC  EE20 F005          	lfsr	2,5
 20534  0060C0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20535  0060C2  26D9               	addwf	fsr2l,f,c
 20536  0060C4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20537  0060C6  22DA               	addwfc	fsr2h,f,c
 20538  0060C8  BCDF               	btfsc	indf2,6,c
 20539  0060CA  0C00               	retlw	0
 20540                           
 20541                           ; BSR set to: 0
 20542  0060CC  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 20543  0060D0  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 20544  0060D4  38DF               	swapf	223,w,c
 20545  0060D6  32E8               	rrcf	wreg,f,c
 20546  0060D8  0B07               	andlw	7
 20547  0060DA  0A03               	xorlw	3
 20548  0060DC  E001               	bz	l14040
 20549                           
 20550                           ; BSR set to: 0
 20551                           ;lorawan.c: 2110: {
 20552                           ;lorawan.c: 2111: return 0;
 20553  0060DE  0C00               	retlw	0
 20554  0060E0                     l14040:
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;lorawan.c: 2112: }
 20558                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 20559  0060E0  EE20 F005          	lfsr	2,5
 20560  0060E4  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20561  0060E6  26D9               	addwf	fsr2l,f,c
 20562  0060E8  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20563  0060EA  22DA               	addwfc	fsr2h,f,c
 20564  0060EC  50DF               	movf	223,w,c
 20565  0060EE  0B0F               	andlw	15
 20566  0060F0  E001               	bz	l14048
 20567  0060F2  0C00               	retlw	0
 20568  0060F4                     l14048:
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;lorawan.c: 2118: else
 20572                           ;lorawan.c: 2119: {
 20573                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 20574  0060F4  EE20 F008          	lfsr	2,8
 20575  0060F8  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20576  0060FA  26D9               	addwf	fsr2l,f,c
 20577  0060FC  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20578  0060FE  22DA               	addwfc	fsr2h,f,c
 20579  006100  50DF               	movf	indf2,w,c
 20580  006102  E101               	bnz	l14054
 20581  006104  0C00               	retlw	0
 20582  006106                     l14054:
 20583                           
 20584                           ; BSR set to: 0
 20585                           ;lorawan.c: 2123: }
 20586                           ;lorawan.c: 2124: }
 20587                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 20588  006106  EE20 F005          	lfsr	2,5
 20589  00610A  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20590  00610C  26D9               	addwf	fsr2l,f,c
 20591  00610E  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20592  006110  22DA               	addwfc	fsr2h,f,c
 20593  006112  A8DF               	btfss	indf2,4,c
 20594  006114  0C01               	retlw	1
 20595                           
 20596                           ; BSR set to: 0
 20597                           ;lorawan.c: 2127: {
 20598                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 20599  006116  0102               	movlb	2	; () banked
 20600  006118  8700               	bsf	_loRa& (0+255),3,b
 20601                           
 20602                           ;lorawan.c: 2129: }
 20603                           ;lorawan.c: 2131: return 1;
 20604  00611A  0C01               	retlw	1	;funcret
 20605  00611C                     __end_of_CheckMcastFlags:
 20606                           	opt stack 0
 20607                           tosu	equ	0xFFF
 20608                           tosh	equ	0xFFE
 20609                           tosl	equ	0xFFD
 20610                           pclath	equ	0xFFA
 20611                           tblptru	equ	0xFF8
 20612                           tblptrh	equ	0xFF7
 20613                           tblptrl	equ	0xFF6
 20614                           tablat	equ	0xFF5
 20615                           prodh	equ	0xFF4
 20616                           prodl	equ	0xFF3
 20617                           intcon	equ	0xFF2
 20618                           intcon2	equ	0xFF1
 20619                           intcon3	equ	0xFF0
 20620                           indf0	equ	0xFEF
 20621                           postinc0	equ	0xFEE
 20622                           fsr0h	equ	0xFEA
 20623                           fsr0l	equ	0xFE9
 20624                           wreg	equ	0xFE8
 20625                           postinc1	equ	0xFE6
 20626                           postdec1	equ	0xFE5
 20627                           plusw1	equ	0xFE3
 20628                           fsr1h	equ	0xFE2
 20629                           fsr1l	equ	0xFE1
 20630                           indf2	equ	0xFDF
 20631                           postinc2	equ	0xFDE
 20632                           postdec2	equ	0xFDD
 20633                           plusw2	equ	0xFDB
 20634                           fsr2h	equ	0xFDA
 20635                           fsr2l	equ	0xFD9
 20636                           status	equ	0xFD8
 20637                           
 20638 ;; *************** function _CheckFlags *****************
 20639 ;; Defined at:
 20640 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20641 ;; Parameters:    Size  Location     Type
 20642 ;;  hdr             2    4[BANK0 ] PTR struct .
 20643 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20644 ;; Auto vars:     Size  Location     Type
 20645 ;;		None
 20646 ;; Return value:  Size  Location     Type
 20647 ;;                  1    wreg      void 
 20648 ;; Registers used:
 20649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20650 ;; Tracked objects:
 20651 ;;		On entry : F/2
 20652 ;;		On exit  : D/0
 20653 ;;		Unchanged: 0/0
 20654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20658 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20659 ;;Total ram usage:        2 bytes
 20660 ;; Hardware stack levels used:    1
 20661 ;; Hardware stack levels required when called:    7
 20662 ;; This function calls:
 20663 ;;		Nothing
 20664 ;; This function is called by:
 20665 ;;		_LORAWAN_RxDone
 20666 ;; This function uses a non-reentrant model
 20667 ;;
 20668                           
 20669                           	psect	text108
 20670  0066B8                     __ptext108:
 20671                           	opt stack 0
 20672  0066B8                     _CheckFlags:
 20673                           	opt stack 19
 20674                           
 20675                           ; BSR set to: 2
 20676                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 20677                           
 20678                           ;incstack = 0
 20679  0066B8  0100               	movlb	0	; () banked
 20680  0066BA  EE20 F005          	lfsr	2,5
 20681  0066BE  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20682  0066C0  26D9               	addwf	fsr2l,f,c
 20683  0066C2  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20684  0066C4  22DA               	addwfc	fsr2h,f,c
 20685  0066C6  AEDF               	btfss	indf2,7,c
 20686  0066C8  D002               	goto	l14088
 20687                           
 20688                           ; BSR set to: 0
 20689                           ;lorawan.c: 2077: {
 20690                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 20691  0066CA  0102               	movlb	2	; () banked
 20692  0066CC  8D02               	bsf	(_loRa+2)& (0+255),6,b
 20693  0066CE                     l14088:
 20694                           
 20695                           ;lorawan.c: 2079: }
 20696                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 20697  0066CE  0100               	movlb	0	; () banked
 20698  0066D0  EE20 F005          	lfsr	2,5
 20699  0066D4  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20700  0066D6  26D9               	addwf	fsr2l,f,c
 20701  0066D8  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20702  0066DA  22DA               	addwfc	fsr2h,f,c
 20703  0066DC  A8DF               	btfss	indf2,4,c
 20704  0066DE  D002               	goto	l14092
 20705                           
 20706                           ; BSR set to: 0
 20707                           ;lorawan.c: 2082: {
 20708                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 20709  0066E0  0102               	movlb	2	; () banked
 20710  0066E2  8700               	bsf	_loRa& (0+255),3,b
 20711  0066E4                     l14092:
 20712                           
 20713                           ;lorawan.c: 2084: }
 20714                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 20715  0066E4  0100               	movlb	0	; () banked
 20716  0066E6  EE20 F005          	lfsr	2,5
 20717  0066EA  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20718  0066EC  26D9               	addwf	fsr2l,f,c
 20719  0066EE  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20720  0066F0  22DA               	addwfc	fsr2h,f,c
 20721  0066F2  ACDF               	btfss	indf2,6,c
 20722  0066F4  D002               	goto	l14096
 20723                           
 20724                           ; BSR set to: 0
 20725                           ;lorawan.c: 2087: {
 20726                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 20727  0066F6  0102               	movlb	2	; () banked
 20728  0066F8  8900               	bsf	_loRa& (0+255),4,b
 20729  0066FA                     l14096:
 20730                           
 20731                           ;lorawan.c: 2089: }
 20732                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 20733  0066FA  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 20734  0066FE  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 20735  006702  0100               	movlb	0	; () banked
 20736  006704  38DF               	swapf	223,w,c
 20737  006706  32E8               	rrcf	wreg,f,c
 20738  006708  0B07               	andlw	7
 20739  00670A  0A05               	xorlw	5
 20740  00670C  A4D8               	btfss	status,2,c
 20741  00670E  0012               	return	
 20742                           
 20743                           ; BSR set to: 0
 20744                           ;lorawan.c: 2092: {
 20745                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 20746  006710  0102               	movlb	2	; () banked
 20747  006712  8300               	bsf	_loRa& (0+255),1,b
 20748  006714  0012               	return		;funcret
 20749  006716                     __end_of_CheckFlags:
 20750                           	opt stack 0
 20751                           tosu	equ	0xFFF
 20752                           tosh	equ	0xFFE
 20753                           tosl	equ	0xFFD
 20754                           pclath	equ	0xFFA
 20755                           tblptru	equ	0xFF8
 20756                           tblptrh	equ	0xFF7
 20757                           tblptrl	equ	0xFF6
 20758                           tablat	equ	0xFF5
 20759                           prodh	equ	0xFF4
 20760                           prodl	equ	0xFF3
 20761                           intcon	equ	0xFF2
 20762                           intcon2	equ	0xFF1
 20763                           intcon3	equ	0xFF0
 20764                           indf0	equ	0xFEF
 20765                           postinc0	equ	0xFEE
 20766                           fsr0h	equ	0xFEA
 20767                           fsr0l	equ	0xFE9
 20768                           wreg	equ	0xFE8
 20769                           postinc1	equ	0xFE6
 20770                           postdec1	equ	0xFE5
 20771                           plusw1	equ	0xFE3
 20772                           fsr1h	equ	0xFE2
 20773                           fsr1l	equ	0xFE1
 20774                           indf2	equ	0xFDF
 20775                           postinc2	equ	0xFDE
 20776                           postdec2	equ	0xFDD
 20777                           plusw2	equ	0xFDB
 20778                           fsr2h	equ	0xFDA
 20779                           fsr2l	equ	0xFD9
 20780                           status	equ	0xFD8
 20781                           
 20782 ;; *************** function _RADIO_FSKPacketSent *****************
 20783 ;; Defined at:
 20784 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20785 ;; Parameters:    Size  Location     Type
 20786 ;;		None
 20787 ;; Auto vars:     Size  Location     Type
 20788 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
 20789 ;;  irqFlags        1  126[BANK0 ] unsigned char 
 20790 ;; Return value:  Size  Location     Type
 20791 ;;                  1    wreg      void 
 20792 ;; Registers used:
 20793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20794 ;; Tracked objects:
 20795 ;;		On entry : F/0
 20796 ;;		On exit  : C/0
 20797 ;;		Unchanged: 0/0
 20798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20800 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20802 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20803 ;;Total ram usage:       13 bytes
 20804 ;; Hardware stack levels used:    1
 20805 ;; Hardware stack levels required when called:   15
 20806 ;; This function calls:
 20807 ;;		_LORAWAN_TxDone
 20808 ;;		_RADIO_RegisterRead
 20809 ;;		_RADIO_WriteMode
 20810 ;;		_SwTimerReadValue
 20811 ;;		_SwTimerStop
 20812 ;; This function is called by:
 20813 ;;		_RADIO_DIO0
 20814 ;; This function uses a non-reentrant model
 20815 ;;
 20816                           
 20817                           	psect	text109
 20818  003A20                     __ptext109:
 20819                           	opt stack 0
 20820  003A20                     _RADIO_FSKPacketSent:
 20821                           	opt stack 13
 20822                           
 20823                           ; BSR set to: 0
 20824                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 20825                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 20826                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 20827                           
 20828                           ;incstack = 0
 20829  003A20  0E3F               	movlw	63
 20830  003A22  EC98  F039         	call	_RADIO_RegisterRead
 20831  003A26  6FDE               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 20832                           
 20833                           ; BSR set to: 0
 20834                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 20835  003A28  A7DE               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 20836  003A2A  0012               	return	
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;radio_driver_SX1276.c: 1100: {
 20840                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 20841  003A2C  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 20842  003A30  0E00               	movlw	0
 20843  003A32  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 20844  003A34  EC6E  F028         	call	_RADIO_WriteMode
 20845                           
 20846                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 20847  003A38  0101               	movlb	1	; () banked
 20848  003A3A  918C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 20849                           
 20850                           ; BSR set to: 1
 20851                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 20852  003A3C  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
 20853  003A3E  EC9C  F03A         	call	_SwTimerStop
 20854                           
 20855                           ; BSR set to: 0
 20856                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 20857  003A42  0101               	movlb	1	; () banked
 20858  003A44  B98C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 20859  003A46  0012               	return	
 20860                           
 20861                           ; BSR set to: 1
 20862                           ;radio_driver_SX1276.c: 1107: {
 20863                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 20864  003A48  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20865  003A4A  EC96  F036         	call	_SwTimerReadValue
 20866  003A4E  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 20867  003A50  E107               	bnz	u17340
 20868  003A52  0E1F               	movlw	31
 20869  003A54  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
 20870  003A56  0EAC               	movlw	172
 20871  003A58  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 20872  003A5A  0EDF               	movlw	223
 20873  003A5C  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 20874  003A5E  E346               	bnc	l14914
 20875  003A60                     u17340:
 20876                           
 20877                           ; BSR set to: 0
 20878  003A60  0101               	movlb	1	; () banked
 20879  003A62  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20880  003A64  EC96  F036         	call	_SwTimerReadValue
 20881  003A68  0E0D               	movlw	13
 20882  003A6A  D005               	goto	u17350
 20883  003A6C                     u17355:
 20884  003A6C  90D8               	bcf	status,0,c
 20885  003A6E  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 20886  003A70  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 20887  003A72  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 20888  003A74  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
 20889  003A76                     u17350:
 20890  003A76  2EE8               	decfsz	wreg,f,c
 20891  003A78  D7F9               	goto	u17355
 20892  003A7A  0E7D               	movlw	125
 20893  003A7C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20894  003A7E  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 20895  003A82  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 20896  003A86  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 20897  003A88  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 20898  003A8A  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20899  003A8C  50F3               	movf	prodl,w,c
 20900  003A8E  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20901  003A90  50F4               	movf	prodh,w,c
 20902  003A92  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20903  003A94  0E00               	movlw	0
 20904  003A96  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20905  003A98  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20906  003A9A  50F3               	movf	prodl,w,c
 20907  003A9C  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20908  003A9E  50F4               	movf	prodh,w,c
 20909  003AA0  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20910  003AA2  0E00               	movlw	0
 20911  003AA4  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20912  003AA6  0E7D               	movlw	125
 20913  003AA8  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20914  003AAA  50F3               	movf	prodl,w,c
 20915  003AAC  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20916  003AAE  50F4               	movf	prodh,w,c
 20917  003AB0  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20918  003AB2  0E00               	movlw	0
 20919  003AB4  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20920  003AB6  50F3               	movf	prodl,w,c
 20921  003AB8  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20922  003ABA  50F4               	movf	prodh,w,c
 20923  003ABC  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20924  003ABE  0E00               	movlw	0
 20925  003AC0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20926  003AC2  50F3               	movf	prodl,w,c
 20927  003AC4  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20928  003AC6  50F4               	movf	prodh,w,c
 20929  003AC8  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20930  003ACA  0E7D               	movlw	125
 20931  003ACC  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 20932  003ACE  50F3               	movf	prodl,w,c
 20933  003AD0  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20934  003AD2  0E00               	movlw	0
 20935  003AD4  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20936  003AD6  50F3               	movf	prodl,w,c
 20937  003AD8  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20938  003ADA  0E00               	movlw	0
 20939  003ADC  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20940  003ADE  50F3               	movf	prodl,w,c
 20941  003AE0  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20942  003AE2  0E00               	movlw	0
 20943  003AE4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20944  003AE6  50F3               	movf	prodl,w,c
 20945  003AE8  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20946  003AEA  D045               	goto	L11
 20947  003AEC                     l14914:
 20948                           
 20949                           ; BSR set to: 0
 20950  003AEC  0101               	movlb	1	; () banked
 20951  003AEE  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20952  003AF0  EC96  F036         	call	_SwTimerReadValue
 20953  003AF4  0E7D               	movlw	125
 20954  003AF6  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20955  003AF8  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 20956  003AFC  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 20957  003B00  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 20958  003B02  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 20959  003B04  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20960  003B06  50F3               	movf	prodl,w,c
 20961  003B08  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20962  003B0A  50F4               	movf	prodh,w,c
 20963  003B0C  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20964  003B0E  0E00               	movlw	0
 20965  003B10  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20966  003B12  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20967  003B14  50F3               	movf	prodl,w,c
 20968  003B16  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20969  003B18  50F4               	movf	prodh,w,c
 20970  003B1A  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20971  003B1C  0E00               	movlw	0
 20972  003B1E  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20973  003B20  0E7D               	movlw	125
 20974  003B22  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20975  003B24  50F3               	movf	prodl,w,c
 20976  003B26  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20977  003B28  50F4               	movf	prodh,w,c
 20978  003B2A  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20979  003B2C  0E00               	movlw	0
 20980  003B2E  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20981  003B30  50F3               	movf	prodl,w,c
 20982  003B32  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20983  003B34  50F4               	movf	prodh,w,c
 20984  003B36  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20985  003B38  0E00               	movlw	0
 20986  003B3A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20987  003B3C  50F3               	movf	prodl,w,c
 20988  003B3E  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20989  003B40  50F4               	movf	prodh,w,c
 20990  003B42  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20991  003B44  0E7D               	movlw	125
 20992  003B46  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 20993  003B48  50F3               	movf	prodl,w,c
 20994  003B4A  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20995  003B4C  0E00               	movlw	0
 20996  003B4E  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20997  003B50  50F3               	movf	prodl,w,c
 20998  003B52  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20999  003B54  0E00               	movlw	0
 21000  003B56  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21001  003B58  50F3               	movf	prodl,w,c
 21002  003B5A  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21003  003B5C  0E00               	movlw	0
 21004  003B5E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21005  003B60  50F3               	movf	prodl,w,c
 21006  003B62  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21007  003B64  0E0D               	movlw	13
 21008  003B66  D005               	goto	u17360
 21009  003B68                     u17365:
 21010  003B68  90D8               	bcf	status,0,c
 21011  003B6A  33D5               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21012  003B6C  33D4               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21013  003B6E  33D3               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21014  003B70  33D2               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 21015  003B72                     u17360:
 21016  003B72  2EE8               	decfsz	wreg,f,c
 21017  003B74  D7F9               	goto	u17365
 21018  003B76                     L11:
 21019  003B76  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1215
 21020  003B7A  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1215+1
 21021  003B7E  C0D4  F0DC         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1215+2
 21022  003B82  C0D5  F0DD         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1215+3
 21023                           
 21024                           ; BSR set to: 0
 21025  003B86  51DA               	movf	_RADIO_FSKPacketSent$1215& (0+255),w,b
 21026  003B88  0820               	sublw	32
 21027  003B8A  6FD6               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21028  003B8C  0E4E               	movlw	78
 21029  003B8E  55DB               	subfwb	(_RADIO_FSKPacketSent$1215+1)& (0+255),w,b
 21030  003B90  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21031  003B92  0E00               	movlw	0
 21032  003B94  55DC               	subfwb	(_RADIO_FSKPacketSent$1215+2)& (0+255),w,b
 21033  003B96  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21034  003B98  0E00               	movlw	0
 21035  003B9A  55DD               	subfwb	(_RADIO_FSKPacketSent$1215+3)& (0+255),w,b
 21036  003B9C  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21037                           
 21038                           ; BSR set to: 0
 21039                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21040  003B9E  0101               	movlb	1	; () banked
 21041  003BA0  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21042  003BA2  EC9C  F03A         	call	_SwTimerStop
 21043                           
 21044                           ; BSR set to: 0
 21045                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21046  003BA6  C0D6  F0A0         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21047  003BAA  C0D7  F0A1         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21048  003BAE  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
 21049  003BB2                     __end_of_RADIO_FSKPacketSent:
 21050                           	opt stack 0
 21051                           tosu	equ	0xFFF
 21052                           tosh	equ	0xFFE
 21053                           tosl	equ	0xFFD
 21054                           pclath	equ	0xFFA
 21055                           tblptru	equ	0xFF8
 21056                           tblptrh	equ	0xFF7
 21057                           tblptrl	equ	0xFF6
 21058                           tablat	equ	0xFF5
 21059                           prodh	equ	0xFF4
 21060                           prodl	equ	0xFF3
 21061                           intcon	equ	0xFF2
 21062                           intcon2	equ	0xFF1
 21063                           intcon3	equ	0xFF0
 21064                           indf0	equ	0xFEF
 21065                           postinc0	equ	0xFEE
 21066                           fsr0h	equ	0xFEA
 21067                           fsr0l	equ	0xFE9
 21068                           wreg	equ	0xFE8
 21069                           postinc1	equ	0xFE6
 21070                           postdec1	equ	0xFE5
 21071                           plusw1	equ	0xFE3
 21072                           fsr1h	equ	0xFE2
 21073                           fsr1l	equ	0xFE1
 21074                           indf2	equ	0xFDF
 21075                           postinc2	equ	0xFDE
 21076                           postdec2	equ	0xFDD
 21077                           plusw2	equ	0xFDB
 21078                           fsr2h	equ	0xFDA
 21079                           fsr2l	equ	0xFD9
 21080                           status	equ	0xFD8
 21081                           
 21082 ;; *************** function _LORAWAN_TxDone *****************
 21083 ;; Defined at:
 21084 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21085 ;; Parameters:    Size  Location     Type
 21086 ;;  timeOnAir       2   64[BANK0 ] unsigned int 
 21087 ;; Auto vars:     Size  Location     Type
 21088 ;;  minim           4  109[BANK0 ] unsigned long 
 21089 ;;  ticks           4  105[BANK0 ] unsigned long 
 21090 ;;  delta           4  101[BANK0 ] unsigned long 
 21091 ;;  i               1  113[BANK0 ] unsigned char 
 21092 ;;  found           1  100[BANK0 ] unsigned char 
 21093 ;; Return value:  Size  Location     Type
 21094 ;;                  1    wreg      void 
 21095 ;; Registers used:
 21096 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21097 ;; Tracked objects:
 21098 ;;		On entry : E/1
 21099 ;;		On exit  : D/0
 21100 ;;		Unchanged: 0/0
 21101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21103 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21104 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21105 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21106 ;;Total ram usage:       50 bytes
 21107 ;; Hardware stack levels used:    1
 21108 ;; Hardware stack levels required when called:   14
 21109 ;; This function calls:
 21110 ;;		_LORAWAN_EnterContinuousReceive
 21111 ;;		_RADIO_GetStatus
 21112 ;;		_RxDataDone
 21113 ;;		_SwTimerIsRunning
 21114 ;;		_SwTimerReadValue
 21115 ;;		_SwTimerSetTimeout
 21116 ;;		_SwTimerStart
 21117 ;;		_SwTimerStop
 21118 ;;		___lldiv
 21119 ;; This function is called by:
 21120 ;;		_RADIO_TxDone
 21121 ;;		_RADIO_FSKPacketSent
 21122 ;;		_RADIO_WatchdogTimeout
 21123 ;; This function uses a non-reentrant model
 21124 ;;
 21125                           
 21126                           	psect	text110
 21127  000B18                     __ptext110:
 21128                           	opt stack 0
 21129  000B18                     _LORAWAN_TxDone:
 21130                           	opt stack 13
 21131                           
 21132                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 21133                           
 21134                           ;incstack = 0
 21135  000B18  0102               	movlb	2	; () banked
 21136  000B1A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 21137  000B1C  EFAA  F009         	goto	l14722
 21138                           
 21139                           ; BSR set to: 2
 21140                           ;lorawan_eu.c: 368: {
 21141                           ;lorawan_eu.c: 369: bool found = 0;
 21142  000B20  0100               	movlb	0	; () banked
 21143  000B22  6BC4               	clrf	LORAWAN_TxDone@found& (0+255),b
 21144                           
 21145                           ;lorawan_eu.c: 370: uint8_t i;
 21146                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 21147  000B24  6BC5               	clrf	LORAWAN_TxDone@delta& (0+255),b
 21148  000B26  6BC6               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21149  000B28  6BC7               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21150  000B2A  6BC8               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21151  000B2C  69CD               	setf	LORAWAN_TxDone@minim& (0+255),b
 21152  000B2E  69CE               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21153  000B30  69CF               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21154  000B32  69D0               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21155                           
 21156                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 21157  000B34  0102               	movlb	2	; () banked
 21158  000B36  6BF1               	clrf	(_loRa+241)& (0+255),b
 21159                           
 21160                           ; BSR set to: 2
 21161                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 21162  000B38  5102               	movf	(_loRa+2)& (0+255),w,b
 21163  000B3A  0BF0               	andlw	-16
 21164  000B3C  0902               	iorlw	2
 21165  000B3E  6F02               	movwf	(_loRa+2)& (0+255),b
 21166                           
 21167                           ; BSR set to: 2
 21168                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 21169  000B40  C2DA  F0D1         	movff	_loRa+218,LORAWAN_TxDone@i
 21170                           
 21171                           ; BSR set to: 2
 21172                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 21173  000B44  A500               	btfss	_loRa& (0+255),2,b
 21174  000B46  D110               	goto	l14652
 21175                           
 21176                           ; BSR set to: 2
 21177                           ;lorawan_eu.c: 382: {
 21178                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21179  000B48  0E7D               	movlw	low _rxWindowOffset
 21180  000B4A  2517               	addwf	(_loRa+23)& (0+255),w,b
 21181  000B4C  6EF6               	movwf	tblptrl,c
 21182  000B4E  6AF7               	clrf	tblptrh,c
 21183  000B50  0EFF               	movlw	high _rxWindowOffset
 21184  000B52  22F7               	addwfc	tblptrh,f,c
 21185  000B54                     	if	1	;There are 3 active tblptr bytes
 21186  000B54  6AF8               	clrf	tblptru,c
 21187  000B56  0E00               	movlw	low (__mediumconst shr (0+16))
 21188  000B58  22F8               	addwfc	tblptru,f,c
 21189  000B5A                     	endif
 21190  000B5A  0008               	tblrd		*
 21191  000B5C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21192  000B60  5198               	movf	(_loRa+152)& (0+255),w,b
 21193  000B62  0100               	movlb	0	; () banked
 21194  000B64  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21195  000B66  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21196  000B68  0E00               	movlw	0
 21197  000B6A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21198  000B6C  0EFF               	movlw	255
 21199  000B6E  0102               	movlb	2	; () banked
 21200  000B70  2199               	addwfc	(_loRa+153)& (0+255),w,b
 21201  000B72  0100               	movlb	0	; () banked
 21202  000B74  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21203  000B76  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21204  000B78  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21205  000B7A  0E0C               	movlw	12
 21206  000B7C                     u16915:
 21207  000B7C  90D8               	bcf	status,0,c
 21208  000B7E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21209  000B80  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21210  000B82  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21211  000B84  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21212  000B86  2EE8               	decfsz	wreg,f,c
 21213  000B88  D7F9               	goto	u16915
 21214  000B8A  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21215  000B8E  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21216  000B92  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21217  000B96  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21218  000B9A  0E7D               	movlw	125
 21219  000B9C  6F68               	movwf	___lldiv@divisor& (0+255),b
 21220  000B9E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21221  000BA0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21222  000BA2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21223  000BA4  EC1A  F030         	call	___lldiv	;wreg free
 21224  000BA8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21225  000BAC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21226  000BB0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21227  000BB4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21228  000BB8  0102               	movlb	2	; () banked
 21229  000BBA  51E2               	movf	(_loRa+226)& (0+255),w,b
 21230  000BBC  EC75  F036         	call	_SwTimerSetTimeout
 21231                           
 21232                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21233  000BC0  0E7D               	movlw	low _rxWindowOffset
 21234  000BC2  0102               	movlb	2	; () banked
 21235  000BC4  251C               	addwf	(_loRa+28)& (0+255),w,b
 21236  000BC6  6EF6               	movwf	tblptrl,c
 21237  000BC8  6AF7               	clrf	tblptrh,c
 21238  000BCA  0EFF               	movlw	high _rxWindowOffset
 21239  000BCC  22F7               	addwfc	tblptrh,f,c
 21240  000BCE                     	if	1	;There are 3 active tblptr bytes
 21241  000BCE  6AF8               	clrf	tblptru,c
 21242  000BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 21243  000BD2  22F8               	addwfc	tblptru,f,c
 21244  000BD4                     	endif
 21245  000BD4  0008               	tblrd		*
 21246  000BD6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21247  000BDA  519A               	movf	(_loRa+154)& (0+255),w,b
 21248  000BDC  0100               	movlb	0	; () banked
 21249  000BDE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21250  000BE0  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21251  000BE2  0E00               	movlw	0
 21252  000BE4  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21253  000BE6  0EFF               	movlw	255
 21254  000BE8  0102               	movlb	2	; () banked
 21255  000BEA  219B               	addwfc	(_loRa+155)& (0+255),w,b
 21256  000BEC  0100               	movlb	0	; () banked
 21257  000BEE  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21258  000BF0  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21259  000BF2  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21260  000BF4  0E0C               	movlw	12
 21261  000BF6                     u16925:
 21262  000BF6  90D8               	bcf	status,0,c
 21263  000BF8  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21264  000BFA  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21265  000BFC  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21266  000BFE  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21267  000C00  2EE8               	decfsz	wreg,f,c
 21268  000C02  D7F9               	goto	u16925
 21269  000C04  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21270  000C08  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21271  000C0C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21272  000C10  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21273  000C14  0E7D               	movlw	125
 21274  000C16  6F68               	movwf	___lldiv@divisor& (0+255),b
 21275  000C18  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21276  000C1A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21277  000C1C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21278  000C1E  EC1A  F030         	call	___lldiv	;wreg free
 21279  000C22  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21280  000C26  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21281  000C2A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21282  000C2E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21283  000C32  0102               	movlb	2	; () banked
 21284  000C34  51E3               	movf	(_loRa+227)& (0+255),w,b
 21285  000C36  EC75  F036         	call	_SwTimerSetTimeout
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 21289  000C3A  0102               	movlb	2	; () banked
 21290  000C3C  51E2               	movf	(_loRa+226)& (0+255),w,b
 21291  000C3E  EC58  F02E         	call	_SwTimerStart
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 21295  000C42  0102               	movlb	2	; () banked
 21296  000C44  51E3               	movf	(_loRa+227)& (0+255),w,b
 21297  000C46  EC58  F02E         	call	_SwTimerStart
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 21301  000C4A  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21302  000C4E  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21303  000C52  0102               	movlb	2	; () banked
 21304  000C54  51DB               	movf	(_loRa+219)& (0+255),w,b
 21305  000C56  0100               	movlb	0	; () banked
 21306  000C58  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21307  000C5A  0102               	movlb	2	; () banked
 21308  000C5C  51DC               	movf	(_loRa+220)& (0+255),w,b
 21309  000C5E  0100               	movlb	0	; () banked
 21310  000C60  6FA5               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21311  000C62  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21312  000C64  6BA7               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 21313  000C66  0ED6               	movlw	214
 21314  000C68  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21315  000C6A  CFF3 F0A8          	movff	prodl,??_LORAWAN_TxDone+6
 21316  000C6E  CFF4 F0A9          	movff	prodh,??_LORAWAN_TxDone+7
 21317  000C72  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21318  000C74  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21319  000C76  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21320  000C78  50F3               	movf	prodl,w,c
 21321  000C7A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21322  000C7C  50F4               	movf	prodh,w,c
 21323  000C7E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21324  000C80  0E00               	movlw	0
 21325  000C82  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21326  000C84  0E0B               	movlw	11
 21327  000C86  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21328  000C88  50F3               	movf	prodl,w,c
 21329  000C8A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21330  000C8C  50F4               	movf	prodh,w,c
 21331  000C8E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21332  000C90  0E00               	movlw	0
 21333  000C92  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21334  000C94  0ED6               	movlw	214
 21335  000C96  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21336  000C98  50F3               	movf	prodl,w,c
 21337  000C9A  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21338  000C9C  50F4               	movf	prodh,w,c
 21339  000C9E  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21340  000CA0  0E0B               	movlw	11
 21341  000CA2  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21342  000CA4  50F3               	movf	prodl,w,c
 21343  000CA6  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21344  000CA8  50F4               	movf	prodh,w,c
 21345  000CAA  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21346  000CAC  0E00               	movlw	0
 21347  000CAE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21348  000CB0  50F3               	movf	prodl,w,c
 21349  000CB2  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21350  000CB4  50F4               	movf	prodh,w,c
 21351  000CB6  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21352  000CB8  0ED6               	movlw	214
 21353  000CBA  03A7               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 21354  000CBC  50F3               	movf	prodl,w,c
 21355  000CBE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21356  000CC0  0E0B               	movlw	11
 21357  000CC2  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21358  000CC4  50F3               	movf	prodl,w,c
 21359  000CC6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21360  000CC8  0E00               	movlw	0
 21361  000CCA  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21362  000CCC  50F3               	movf	prodl,w,c
 21363  000CCE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21364  000CD0  0E00               	movlw	0
 21365  000CD2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21366  000CD4  50F3               	movf	prodl,w,c
 21367  000CD6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21368  000CD8  0EFF               	movlw	255
 21369  000CDA  25A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21370  000CDC  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21371  000CDE  0EFF               	movlw	255
 21372  000CE0  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21373  000CE2  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21374  000CE4  0EFF               	movlw	255
 21375  000CE6  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21376  000CE8  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21377  000CEA  0EFF               	movlw	255
 21378  000CEC  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21379  000CEE  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21380  000CF0  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21381  000CF2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21382  000CF4  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21383  000CF8  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21384  000CFC  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21385  000CFE  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21386  000D00  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21387  000D02  50F3               	movf	prodl,w,c
 21388  000D04  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21389  000D06  50F4               	movf	prodh,w,c
 21390  000D08  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21391  000D0A  0E00               	movlw	0
 21392  000D0C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21393  000D0E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21394  000D10  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21395  000D12  50F3               	movf	prodl,w,c
 21396  000D14  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21397  000D16  50F4               	movf	prodh,w,c
 21398  000D18  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21399  000D1A  0E00               	movlw	0
 21400  000D1C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21401  000D1E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21402  000D20  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21403  000D22  50F3               	movf	prodl,w,c
 21404  000D24  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21405  000D26  50F4               	movf	prodh,w,c
 21406  000D28  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21407  000D2A  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21408  000D2C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21409  000D2E  50F3               	movf	prodl,w,c
 21410  000D30  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21411  000D32  50F4               	movf	prodh,w,c
 21412  000D34  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21413  000D36  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21414  000D38  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21415  000D3A  50F3               	movf	prodl,w,c
 21416  000D3C  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21417  000D3E  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21418  000D40  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21419  000D42  50F3               	movf	prodl,w,c
 21420  000D44  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21421  000D46  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21422  000D48  0D0E               	mullw	14
 21423  000D4A  0E08               	movlw	low (_Channels+8)
 21424  000D4C  24F3               	addwf	prodl,w,c
 21425  000D4E  6ED9               	movwf	fsr2l,c
 21426  000D50  0E04               	movlw	high (_Channels+8)
 21427  000D52  20F4               	addwfc	prodh,w,c
 21428  000D54  6EDA               	movwf	fsr2h,c
 21429  000D56  C0B0  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 21430  000D5A  C0B1  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 21431  000D5E  C0B2  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 21432  000D62  C0B3  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 21433                           
 21434                           ;lorawan_eu.c: 389: }
 21435  000D66  D11D               	goto	l14662
 21436  000D68                     l14652:
 21437                           
 21438                           ; BSR set to: 2
 21439                           ;lorawan_eu.c: 390: else
 21440                           ;lorawan_eu.c: 391: {
 21441                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21442  000D68  0E7D               	movlw	low _rxWindowOffset
 21443  000D6A  2517               	addwf	(_loRa+23)& (0+255),w,b
 21444  000D6C  6EF6               	movwf	tblptrl,c
 21445  000D6E  6AF7               	clrf	tblptrh,c
 21446  000D70  0EFF               	movlw	high _rxWindowOffset
 21447  000D72  22F7               	addwfc	tblptrh,f,c
 21448  000D74                     	if	1	;There are 3 active tblptr bytes
 21449  000D74  6AF8               	clrf	tblptru,c
 21450  000D76  0E00               	movlw	low (__mediumconst shr (0+16))
 21451  000D78  22F8               	addwfc	tblptru,f,c
 21452  000D7A                     	endif
 21453  000D7A  0008               	tblrd		*
 21454  000D7C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21455  000D80  5194               	movf	(_loRa+148)& (0+255),w,b
 21456  000D82  0100               	movlb	0	; () banked
 21457  000D84  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21458  000D86  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21459  000D88  0E00               	movlw	0
 21460  000D8A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21461  000D8C  0EFF               	movlw	255
 21462  000D8E  0102               	movlb	2	; () banked
 21463  000D90  2195               	addwfc	(_loRa+149)& (0+255),w,b
 21464  000D92  0100               	movlb	0	; () banked
 21465  000D94  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21466  000D96  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21467  000D98  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21468  000D9A  0E0C               	movlw	12
 21469  000D9C                     u16935:
 21470  000D9C  90D8               	bcf	status,0,c
 21471  000D9E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21472  000DA0  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21473  000DA2  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21474  000DA4  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21475  000DA6  2EE8               	decfsz	wreg,f,c
 21476  000DA8  D7F9               	goto	u16935
 21477  000DAA  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21478  000DAE  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21479  000DB2  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21480  000DB6  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21481  000DBA  0E7D               	movlw	125
 21482  000DBC  6F68               	movwf	___lldiv@divisor& (0+255),b
 21483  000DBE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21484  000DC0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21485  000DC2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21486  000DC4  EC1A  F030         	call	___lldiv	;wreg free
 21487  000DC8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21488  000DCC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21489  000DD0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21490  000DD4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21491  000DD8  0102               	movlb	2	; () banked
 21492  000DDA  51E4               	movf	(_loRa+228)& (0+255),w,b
 21493  000DDC  EC75  F036         	call	_SwTimerSetTimeout
 21494                           
 21495                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21496  000DE0  0E7D               	movlw	low _rxWindowOffset
 21497  000DE2  0102               	movlb	2	; () banked
 21498  000DE4  251C               	addwf	(_loRa+28)& (0+255),w,b
 21499  000DE6  6EF6               	movwf	tblptrl,c
 21500  000DE8  6AF7               	clrf	tblptrh,c
 21501  000DEA  0EFF               	movlw	high _rxWindowOffset
 21502  000DEC  22F7               	addwfc	tblptrh,f,c
 21503  000DEE                     	if	1	;There are 3 active tblptr bytes
 21504  000DEE  6AF8               	clrf	tblptru,c
 21505  000DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 21506  000DF2  22F8               	addwfc	tblptru,f,c
 21507  000DF4                     	endif
 21508  000DF4  0008               	tblrd		*
 21509  000DF6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21510  000DFA  5196               	movf	(_loRa+150)& (0+255),w,b
 21511  000DFC  0100               	movlb	0	; () banked
 21512  000DFE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21513  000E00  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21514  000E02  0E00               	movlw	0
 21515  000E04  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21516  000E06  0EFF               	movlw	255
 21517  000E08  0102               	movlb	2	; () banked
 21518  000E0A  2197               	addwfc	(_loRa+151)& (0+255),w,b
 21519  000E0C  0100               	movlb	0	; () banked
 21520  000E0E  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21521  000E10  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21522  000E12  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21523  000E14  0E0C               	movlw	12
 21524  000E16                     u16945:
 21525  000E16  90D8               	bcf	status,0,c
 21526  000E18  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21527  000E1A  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21528  000E1C  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21529  000E1E  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21530  000E20  2EE8               	decfsz	wreg,f,c
 21531  000E22  D7F9               	goto	u16945
 21532  000E24  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21533  000E28  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21534  000E2C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21535  000E30  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21536  000E34  0E7D               	movlw	125
 21537  000E36  6F68               	movwf	___lldiv@divisor& (0+255),b
 21538  000E38  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21539  000E3A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21540  000E3C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21541  000E3E  EC1A  F030         	call	___lldiv	;wreg free
 21542  000E42  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21543  000E46  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21544  000E4A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21545  000E4E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21546  000E52  0102               	movlb	2	; () banked
 21547  000E54  51E5               	movf	(_loRa+229)& (0+255),w,b
 21548  000E56  EC75  F036         	call	_SwTimerSetTimeout
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 21552  000E5A  0102               	movlb	2	; () banked
 21553  000E5C  51E4               	movf	(_loRa+228)& (0+255),w,b
 21554  000E5E  EC58  F02E         	call	_SwTimerStart
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 21558  000E62  0102               	movlb	2	; () banked
 21559  000E64  5112               	movf	(_loRa+18)& (0+255),w,b
 21560  000E66  E103               	bnz	l14660
 21561                           
 21562                           ; BSR set to: 2
 21563                           ;lorawan_eu.c: 396: {
 21564                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 21565  000E68  51E5               	movf	(_loRa+229)& (0+255),w,b
 21566  000E6A  EC58  F02E         	call	_SwTimerStart
 21567  000E6E                     l14660:
 21568                           
 21569                           ;lorawan_eu.c: 398: }
 21570                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 21571  000E6E  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21572  000E72  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21573  000E76  EE22  F0DB         	lfsr	2,_loRa+219
 21574  000E7A  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 21575  000E7E  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+3
 21576  000E82  0100               	movlb	0	; () banked
 21577  000E84  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21578  000E86  0D0E               	mullw	14
 21579  000E88  0E06               	movlw	low (_Channels+6)
 21580  000E8A  24F3               	addwf	prodl,w,c
 21581  000E8C  6ED9               	movwf	fsr2l,c
 21582  000E8E  0E04               	movlw	high (_Channels+6)
 21583  000E90  20F4               	addwfc	prodh,w,c
 21584  000E92  6EDA               	movwf	fsr2h,c
 21585  000E94  CFDE F0A6          	movff	postinc2,??_LORAWAN_TxDone+4
 21586  000E98  CFDD F0A7          	movff	postdec2,??_LORAWAN_TxDone+5
 21587  000E9C  51A6               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 21588  000E9E  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 21589  000EA0  51A7               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 21590  000EA2  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 21591  000EA4  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21592  000EA6  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21593  000EA8  29A8               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21594  000EAA  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21595  000EAC  0E00               	movlw	0
 21596  000EAE  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21597  000EB0  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21598  000EB2  0E00               	movlw	0
 21599  000EB4  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21600  000EB6  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21601  000EB8  0E00               	movlw	0
 21602  000EBA  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21603  000EBC  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21604  000EBE  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21605  000EC0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21606  000EC2  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21607  000EC6  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21608  000ECA  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21609  000ECC  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21610  000ECE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21611  000ED0  50F3               	movf	prodl,w,c
 21612  000ED2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21613  000ED4  50F4               	movf	prodh,w,c
 21614  000ED6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21615  000ED8  0E00               	movlw	0
 21616  000EDA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21617  000EDC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21618  000EDE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21619  000EE0  50F3               	movf	prodl,w,c
 21620  000EE2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21621  000EE4  50F4               	movf	prodh,w,c
 21622  000EE6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21623  000EE8  0E00               	movlw	0
 21624  000EEA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21625  000EEC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21626  000EEE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21627  000EF0  50F3               	movf	prodl,w,c
 21628  000EF2  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21629  000EF4  50F4               	movf	prodh,w,c
 21630  000EF6  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21631  000EF8  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21632  000EFA  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21633  000EFC  50F3               	movf	prodl,w,c
 21634  000EFE  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21635  000F00  50F4               	movf	prodh,w,c
 21636  000F02  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21637  000F04  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21638  000F06  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21639  000F08  50F3               	movf	prodl,w,c
 21640  000F0A  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21641  000F0C  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21642  000F0E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21643  000F10  50F3               	movf	prodl,w,c
 21644  000F12  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21645  000F14  0EFF               	movlw	255
 21646  000F16  25B0               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 21647  000F18  6FB4               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 21648  000F1A  0EFF               	movlw	255
 21649  000F1C  21B1               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 21650  000F1E  6FB5               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 21651  000F20  0EFF               	movlw	255
 21652  000F22  21B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 21653  000F24  6FB6               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 21654  000F26  0EFF               	movlw	255
 21655  000F28  21B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 21656  000F2A  6FB7               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 21657  000F2C  51B4               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 21658  000F2E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21659  000F30  CFF3 F0B8          	movff	prodl,??_LORAWAN_TxDone+22
 21660  000F34  CFF4 F0B9          	movff	prodh,??_LORAWAN_TxDone+23
 21661  000F38  6BBA               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 21662  000F3A  6BBB               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 21663  000F3C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21664  000F3E  50F3               	movf	prodl,w,c
 21665  000F40  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21666  000F42  50F4               	movf	prodh,w,c
 21667  000F44  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21668  000F46  0E00               	movlw	0
 21669  000F48  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21670  000F4A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21671  000F4C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21672  000F4E  50F3               	movf	prodl,w,c
 21673  000F50  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21674  000F52  50F4               	movf	prodh,w,c
 21675  000F54  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21676  000F56  0E00               	movlw	0
 21677  000F58  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21678  000F5A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21679  000F5C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21680  000F5E  50F3               	movf	prodl,w,c
 21681  000F60  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21682  000F62  50F4               	movf	prodh,w,c
 21683  000F64  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21684  000F66  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21685  000F68  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21686  000F6A  50F3               	movf	prodl,w,c
 21687  000F6C  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21688  000F6E  50F4               	movf	prodh,w,c
 21689  000F70  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21690  000F72  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21691  000F74  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21692  000F76  50F3               	movf	prodl,w,c
 21693  000F78  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21694  000F7A  51B7               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 21695  000F7C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21696  000F7E  50F3               	movf	prodl,w,c
 21697  000F80  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21698  000F82  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21699  000F84  0D0E               	mullw	14
 21700  000F86  0E08               	movlw	low (_Channels+8)
 21701  000F88  24F3               	addwf	prodl,w,c
 21702  000F8A  6ED9               	movwf	fsr2l,c
 21703  000F8C  0E04               	movlw	high (_Channels+8)
 21704  000F8E  20F4               	addwfc	prodh,w,c
 21705  000F90  6EDA               	movwf	fsr2h,c
 21706  000F92  C0B8  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 21707  000F96  C0B9  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 21708  000F9A  C0BA  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 21709  000F9E  C0BB  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 21710  000FA2                     l14662:
 21711                           
 21712                           ; BSR set to: 0
 21713                           ;lorawan_eu.c: 401: }
 21714                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 21715  000FA2  0102               	movlb	2	; () banked
 21716  000FA4  51E9               	movf	(_loRa+233)& (0+255),w,b
 21717  000FA6  EC32  F03A         	call	_SwTimerIsRunning
 21718  000FAA  0900               	iorlw	0
 21719  000FAC  E101 D0C8          	bz	l14674
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;lorawan_eu.c: 404: {
 21723                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 21724  000FB0  0102               	movlb	2	; () banked
 21725  000FB2  51E9               	movf	(_loRa+233)& (0+255),w,b
 21726  000FB4  EC9C  F03A         	call	_SwTimerStop
 21727                           
 21728                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 21729  000FB8  0102               	movlb	2	; () banked
 21730  000FBA  51E9               	movf	(_loRa+233)& (0+255),w,b
 21731  000FBC  EC96  F036         	call	_SwTimerReadValue
 21732  000FC0  C08D  F0C9         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 21733  000FC4  C08E  F0CA         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 21734  000FC8  C08F  F0CB         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 21735  000FCC  C090  F0CC         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 21736                           
 21737                           ; BSR set to: 0
 21738                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 21739  000FD0  51CC               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 21740  000FD2  E107               	bnz	u16970
 21741  000FD4  0E1F               	movlw	31
 21742  000FD6  5DC9               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 21743  000FD8  0EAC               	movlw	172
 21744  000FDA  59CA               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 21745  000FDC  0EDF               	movlw	223
 21746  000FDE  59CB               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 21747  000FE0  E34A               	bnc	l14670
 21748  000FE2                     u16970:
 21749                           
 21750                           ; BSR set to: 0
 21751  000FE2  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21752  000FE6  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21753  000FEA  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21754  000FEE  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21755  000FF2  0E0D               	movlw	13
 21756  000FF4  D005               	goto	u16980
 21757  000FF6                     u16985:
 21758  000FF6  90D8               	bcf	status,0,c
 21759  000FF8  33A5               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21760  000FFA  33A4               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21761  000FFC  33A3               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21762  000FFE  33A2               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 21763  001000                     u16980:
 21764  001000  2EE8               	decfsz	wreg,f,c
 21765  001002  D7F9               	goto	u16985
 21766  001004  0E7D               	movlw	125
 21767  001006  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21768  001008  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21769  00100C  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21770  001010  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21771  001012  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21772  001014  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21773  001016  50F3               	movf	prodl,w,c
 21774  001018  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21775  00101A  50F4               	movf	prodh,w,c
 21776  00101C  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21777  00101E  0E00               	movlw	0
 21778  001020  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21779  001022  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21780  001024  50F3               	movf	prodl,w,c
 21781  001026  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21782  001028  50F4               	movf	prodh,w,c
 21783  00102A  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21784  00102C  0E00               	movlw	0
 21785  00102E  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21786  001030  0E7D               	movlw	125
 21787  001032  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21788  001034  50F3               	movf	prodl,w,c
 21789  001036  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21790  001038  50F4               	movf	prodh,w,c
 21791  00103A  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21792  00103C  0E00               	movlw	0
 21793  00103E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21794  001040  50F3               	movf	prodl,w,c
 21795  001042  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21796  001044  50F4               	movf	prodh,w,c
 21797  001046  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21798  001048  0E00               	movlw	0
 21799  00104A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21800  00104C  50F3               	movf	prodl,w,c
 21801  00104E  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21802  001050  50F4               	movf	prodh,w,c
 21803  001052  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21804  001054  0E7D               	movlw	125
 21805  001056  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21806  001058  50F3               	movf	prodl,w,c
 21807  00105A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21808  00105C  0E00               	movlw	0
 21809  00105E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21810  001060  50F3               	movf	prodl,w,c
 21811  001062  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21812  001064  0E00               	movlw	0
 21813  001066  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21814  001068  50F3               	movf	prodl,w,c
 21815  00106A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21816  00106C  0E00               	movlw	0
 21817  00106E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21818  001070  50F3               	movf	prodl,w,c
 21819  001072  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21820  001074  D049               	goto	L12
 21821  001076                     l14670:
 21822                           
 21823                           ; BSR set to: 0
 21824  001076  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21825  00107A  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21826  00107E  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21827  001082  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21828  001086  0E7D               	movlw	125
 21829  001088  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21830  00108A  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21831  00108E  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21832  001092  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21833  001094  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21834  001096  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21835  001098  50F3               	movf	prodl,w,c
 21836  00109A  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21837  00109C  50F4               	movf	prodh,w,c
 21838  00109E  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21839  0010A0  0E00               	movlw	0
 21840  0010A2  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21841  0010A4  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21842  0010A6  50F3               	movf	prodl,w,c
 21843  0010A8  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21844  0010AA  50F4               	movf	prodh,w,c
 21845  0010AC  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21846  0010AE  0E00               	movlw	0
 21847  0010B0  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21848  0010B2  0E7D               	movlw	125
 21849  0010B4  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21850  0010B6  50F3               	movf	prodl,w,c
 21851  0010B8  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21852  0010BA  50F4               	movf	prodh,w,c
 21853  0010BC  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21854  0010BE  0E00               	movlw	0
 21855  0010C0  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21856  0010C2  50F3               	movf	prodl,w,c
 21857  0010C4  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21858  0010C6  50F4               	movf	prodh,w,c
 21859  0010C8  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21860  0010CA  0E00               	movlw	0
 21861  0010CC  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21862  0010CE  50F3               	movf	prodl,w,c
 21863  0010D0  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21864  0010D2  50F4               	movf	prodh,w,c
 21865  0010D4  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21866  0010D6  0E7D               	movlw	125
 21867  0010D8  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21868  0010DA  50F3               	movf	prodl,w,c
 21869  0010DC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21870  0010DE  0E00               	movlw	0
 21871  0010E0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21872  0010E2  50F3               	movf	prodl,w,c
 21873  0010E4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21874  0010E6  0E00               	movlw	0
 21875  0010E8  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21876  0010EA  50F3               	movf	prodl,w,c
 21877  0010EC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21878  0010EE  0E00               	movlw	0
 21879  0010F0  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21880  0010F2  50F3               	movf	prodl,w,c
 21881  0010F4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21882  0010F6  0E0D               	movlw	13
 21883  0010F8  D005               	goto	u16990
 21884  0010FA                     u16995:
 21885  0010FA  90D8               	bcf	status,0,c
 21886  0010FC  33A9               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21887  0010FE  33A8               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21888  001100  33A7               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21889  001102  33A6               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21890  001104                     u16990:
 21891  001104  2EE8               	decfsz	wreg,f,c
 21892  001106  D7F9               	goto	u16995
 21893  001108                     L12:
 21894  001108  C0A6  F0BC         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$2092
 21895  00110C  C0A7  F0BD         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$2092+1
 21896  001110  C0A8  F0BE         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$2092+2
 21897  001114  C0A9  F0BF         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$2092+3
 21898                           
 21899                           ; BSR set to: 0
 21900  001118  51BC               	movf	_LORAWAN_TxDone$2092& (0+255),w,b
 21901  00111A  0102               	movlb	2	; () banked
 21902  00111C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 21903  00111E  0100               	movlb	0	; () banked
 21904  001120  6FC5               	movwf	LORAWAN_TxDone@delta& (0+255),b
 21905  001122  51BD               	movf	(_LORAWAN_TxDone$2092+1)& (0+255),w,b
 21906  001124  0102               	movlb	2	; () banked
 21907  001126  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 21908  001128  0100               	movlb	0	; () banked
 21909  00112A  6FC6               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21910  00112C  51BE               	movf	(_LORAWAN_TxDone$2092+2)& (0+255),w,b
 21911  00112E  0102               	movlb	2	; () banked
 21912  001130  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 21913  001132  0100               	movlb	0	; () banked
 21914  001134  6FC7               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21915  001136  51BF               	movf	(_LORAWAN_TxDone$2092+3)& (0+255),w,b
 21916  001138  0102               	movlb	2	; () banked
 21917  00113A  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 21918  00113C  0100               	movlb	0	; () banked
 21919  00113E  6FC8               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21920  001140                     l14674:
 21921                           
 21922                           ; BSR set to: 0
 21923                           ;lorawan_eu.c: 409: }
 21924                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 21925  001140  6BD1               	clrf	LORAWAN_TxDone@i& (0+255),b
 21926  001142                     l14680:
 21927                           
 21928                           ; BSR set to: 0
 21929                           ;lorawan_eu.c: 412: {
 21930                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 21931  001142  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21932  001144  0D0E               	mullw	14
 21933  001146  0E04               	movlw	low (_Channels+4)
 21934  001148  24F3               	addwf	prodl,w,c
 21935  00114A  6ED9               	movwf	fsr2l,c
 21936  00114C  0E04               	movlw	high (_Channels+4)
 21937  00114E  20F4               	addwfc	prodh,w,c
 21938  001150  6EDA               	movwf	fsr2h,c
 21939  001152  04DE               	decf	postinc2,w,c
 21940  001154  E001 D08E          	bnz	l14698
 21941                           
 21942                           ; BSR set to: 0
 21943  001158  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21944  00115A  0D0E               	mullw	14
 21945  00115C  0E08               	movlw	low (_Channels+8)
 21946  00115E  24F3               	addwf	prodl,w,c
 21947  001160  6ED9               	movwf	fsr2l,c
 21948  001162  0E04               	movlw	high (_Channels+8)
 21949  001164  20F4               	addwfc	prodh,w,c
 21950  001166  6EDA               	movwf	fsr2h,c
 21951  001168  50DE               	movf	postinc2,w,c
 21952  00116A  10DE               	iorwf	postinc2,w,c
 21953  00116C  10DE               	iorwf	postinc2,w,c
 21954  00116E  10DE               	iorwf	postinc2,w,c
 21955  001170  E101 D080          	bz	l14698
 21956                           
 21957                           ; BSR set to: 0
 21958                           ;lorawan_eu.c: 414: {
 21959                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 21960  001174  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21961  001176  0102               	movlb	2	; () banked
 21962  001178  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 21963  00117A  E04B               	bz	l1031
 21964                           
 21965                           ; BSR set to: 2
 21966                           ;lorawan_eu.c: 416: {
 21967                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 21968  00117C  0100               	movlb	0	; () banked
 21969  00117E  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21970  001180  0D0E               	mullw	14
 21971  001182  0E08               	movlw	low (_Channels+8)
 21972  001184  24F3               	addwf	prodl,w,c
 21973  001186  6ED9               	movwf	fsr2l,c
 21974  001188  0E04               	movlw	high (_Channels+8)
 21975  00118A  20F4               	addwfc	prodh,w,c
 21976  00118C  6EDA               	movwf	fsr2h,c
 21977  00118E  50DE               	movf	postinc2,w,c
 21978  001190  5DC5               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 21979  001192  50DE               	movf	postinc2,w,c
 21980  001194  59C6               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 21981  001196  50DE               	movf	postinc2,w,c
 21982  001198  59C7               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 21983  00119A  50DE               	movf	postinc2,w,c
 21984  00119C  59C8               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 21985  00119E  E22D               	bc	l14690
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;lorawan_eu.c: 418: {
 21989                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 21990  0011A0  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21991  0011A2  0D0E               	mullw	14
 21992  0011A4  0E08               	movlw	low (_Channels+8)
 21993  0011A6  24F3               	addwf	prodl,w,c
 21994  0011A8  6ED9               	movwf	fsr2l,c
 21995  0011AA  0E04               	movlw	high (_Channels+8)
 21996  0011AC  20F4               	addwfc	prodh,w,c
 21997  0011AE  6EDA               	movwf	fsr2h,c
 21998  0011B0  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone
 21999  0011B4  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+1
 22000  0011B8  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 22001  0011BC  CFDE F0A5          	movff	postinc2,??_LORAWAN_TxDone+3
 22002  0011C0  51C5               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22003  0011C2  5DA2               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22004  0011C4  6FA6               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22005  0011C6  51C6               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22006  0011C8  59A3               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22007  0011CA  6FA7               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22008  0011CC  51C7               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22009  0011CE  59A4               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22010  0011D0  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22011  0011D2  51C8               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22012  0011D4  59A5               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22013  0011D6  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22014  0011D8  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22015  0011DA  0D0E               	mullw	14
 22016  0011DC  0E08               	movlw	low (_Channels+8)
 22017  0011DE  24F3               	addwf	prodl,w,c
 22018  0011E0  6ED9               	movwf	fsr2l,c
 22019  0011E2  0E04               	movlw	high (_Channels+8)
 22020  0011E4  20F4               	addwfc	prodh,w,c
 22021  0011E6  6EDA               	movwf	fsr2h,c
 22022  0011E8  C0A6  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22023  0011EC  C0A7  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22024  0011F0  C0A8  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22025  0011F4  C0A9  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22026                           
 22027                           ;lorawan_eu.c: 420: }
 22028  0011F8  D00C               	goto	l1031
 22029  0011FA                     l14690:
 22030                           
 22031                           ; BSR set to: 0
 22032                           ;lorawan_eu.c: 421: else
 22033                           ;lorawan_eu.c: 422: {
 22034                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 22035  0011FA  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22036  0011FC  0D0E               	mullw	14
 22037  0011FE  0E08               	movlw	low (_Channels+8)
 22038  001200  24F3               	addwf	prodl,w,c
 22039  001202  6ED9               	movwf	fsr2l,c
 22040  001204  0E04               	movlw	high (_Channels+8)
 22041  001206  20F4               	addwfc	prodh,w,c
 22042  001208  6EDA               	movwf	fsr2h,c
 22043  00120A  6ADE               	clrf	postinc2,c
 22044  00120C  6ADE               	clrf	postinc2,c
 22045  00120E  6ADE               	clrf	postinc2,c
 22046  001210  6ADD               	clrf	postdec2,c
 22047  001212                     l1031:
 22048                           
 22049                           ;lorawan_eu.c: 424: }
 22050                           ;lorawan_eu.c: 425: }
 22051                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 22052  001212  0100               	movlb	0	; () banked
 22053  001214  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22054  001216  0D0E               	mullw	14
 22055  001218  0E08               	movlw	low (_Channels+8)
 22056  00121A  24F3               	addwf	prodl,w,c
 22057  00121C  6ED9               	movwf	fsr2l,c
 22058  00121E  0E04               	movlw	high (_Channels+8)
 22059  001220  20F4               	addwfc	prodh,w,c
 22060  001222  6EDA               	movwf	fsr2h,c
 22061  001224  50DE               	movf	postinc2,w,c
 22062  001226  5DCD               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22063  001228  50DE               	movf	postinc2,w,c
 22064  00122A  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22065  00122C  50DE               	movf	postinc2,w,c
 22066  00122E  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22067  001230  50DE               	movf	postinc2,w,c
 22068  001232  59D0               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22069  001234  E31F               	bnc	l14698
 22070                           
 22071                           ; BSR set to: 0
 22072  001236  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22073  001238  0D0E               	mullw	14
 22074  00123A  0E08               	movlw	low (_Channels+8)
 22075  00123C  24F3               	addwf	prodl,w,c
 22076  00123E  6ED9               	movwf	fsr2l,c
 22077  001240  0E04               	movlw	high (_Channels+8)
 22078  001242  20F4               	addwfc	prodh,w,c
 22079  001244  6EDA               	movwf	fsr2h,c
 22080  001246  50DE               	movf	postinc2,w,c
 22081  001248  10DE               	iorwf	postinc2,w,c
 22082  00124A  10DE               	iorwf	postinc2,w,c
 22083  00124C  10DE               	iorwf	postinc2,w,c
 22084  00124E  E012               	bz	l14698
 22085                           
 22086                           ; BSR set to: 0
 22087                           ;lorawan_eu.c: 427: {
 22088                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 22089  001250  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22090  001252  0D0E               	mullw	14
 22091  001254  0E08               	movlw	low (_Channels+8)
 22092  001256  24F3               	addwf	prodl,w,c
 22093  001258  6ED9               	movwf	fsr2l,c
 22094  00125A  0E04               	movlw	high (_Channels+8)
 22095  00125C  20F4               	addwfc	prodh,w,c
 22096  00125E  6EDA               	movwf	fsr2h,c
 22097  001260  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim
 22098  001264  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+1
 22099  001268  CFDE F0CF          	movff	postinc2,LORAWAN_TxDone@minim+2
 22100  00126C  CFDE F0D0          	movff	postinc2,LORAWAN_TxDone@minim+3
 22101                           
 22102                           ; BSR set to: 0
 22103                           ;lorawan_eu.c: 429: found = 1;
 22104  001270  0E01               	movlw	1
 22105  001272  6FC4               	movwf	LORAWAN_TxDone@found& (0+255),b
 22106  001274                     l14698:
 22107                           
 22108                           ; BSR set to: 0
 22109  001274  2BD1               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22110                           
 22111                           ; BSR set to: 0
 22112  001276  0E0F               	movlw	15
 22113  001278  65D1               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22114  00127A  D763               	goto	l14680
 22115                           
 22116                           ; BSR set to: 0
 22117                           ;lorawan_eu.c: 430: }
 22118                           ;lorawan_eu.c: 431: }
 22119                           ;lorawan_eu.c: 432: }
 22120                           ;lorawan_eu.c: 433: if (found == 1)
 22121  00127C  05C4               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22122  00127E  E15F               	bnz	l14716
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;lorawan_eu.c: 434: {
 22126                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 22127  001280  C0CD  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 22128  001284  C0CE  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22129  001288  C0CF  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22130  00128C  C0D0  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22134  001290  51D0               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22135  001292  E106               	bnz	u17080
 22136  001294  29CD               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22137  001296  0EFF               	movlw	255
 22138  001298  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22139  00129A  0E0F               	movlw	15
 22140  00129C  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22141  00129E  E318               	bnc	l14710
 22142  0012A0                     u17080:
 22143                           
 22144                           ; BSR set to: 0
 22145  0012A0  C0CD  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22146  0012A4  C0CE  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22147  0012A8  C0CF  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22148  0012AC  C0D0  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22149  0012B0  0E7D               	movlw	125
 22150  0012B2  6F68               	movwf	___lldiv@divisor& (0+255),b
 22151  0012B4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22152  0012B6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22153  0012B8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22154  0012BA  EC1A  F030         	call	___lldiv	;wreg free
 22155  0012BE  0E0C               	movlw	12
 22156  0012C0                     u17095:
 22157  0012C0  90D8               	bcf	status,0,c
 22158  0012C2  3764               	rlcf	?___lldiv& (0+255),f,b
 22159  0012C4  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 22160  0012C6  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 22161  0012C8  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 22162  0012CA  2EE8               	decfsz	wreg,f,c
 22163  0012CC  D7F9               	goto	u17095
 22164  0012CE  D01F               	goto	L13
 22165  0012D0                     l14710:
 22166                           
 22167                           ; BSR set to: 0
 22168  0012D0  C0CD  F0A2         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22169  0012D4  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22170  0012D8  C0CF  F0A4         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22171  0012DC  C0D0  F0A5         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22172  0012E0  0E0C               	movlw	12
 22173  0012E2                     u17105:
 22174  0012E2  90D8               	bcf	status,0,c
 22175  0012E4  37A2               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22176  0012E6  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22177  0012E8  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22178  0012EA  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22179  0012EC  2EE8               	decfsz	wreg,f,c
 22180  0012EE  D7F9               	goto	u17105
 22181  0012F0  C0A2  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22182  0012F4  C0A3  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22183  0012F8  C0A4  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22184  0012FC  C0A5  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22185  001300  0E7D               	movlw	125
 22186  001302  6F68               	movwf	___lldiv@divisor& (0+255),b
 22187  001304  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22188  001306  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22189  001308  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22190  00130A  EC1A  F030         	call	___lldiv	;wreg free
 22191  00130E                     L13:
 22192  00130E  C064  F0C0         	movff	?___lldiv,_LORAWAN_TxDone$2093
 22193  001312  C065  F0C1         	movff	?___lldiv+1,_LORAWAN_TxDone$2093+1
 22194  001316  C066  F0C2         	movff	?___lldiv+2,_LORAWAN_TxDone$2093+2
 22195  00131A  C067  F0C3         	movff	?___lldiv+3,_LORAWAN_TxDone$2093+3
 22196                           
 22197                           ; BSR set to: 0
 22198  00131E  C0C0  F071         	movff	_LORAWAN_TxDone$2093,SwTimerSetTimeout@timeout
 22199  001322  C0C1  F072         	movff	_LORAWAN_TxDone$2093+1,SwTimerSetTimeout@timeout+1
 22200  001326  C0C2  F073         	movff	_LORAWAN_TxDone$2093+2,SwTimerSetTimeout@timeout+2
 22201  00132A  C0C3  F074         	movff	_LORAWAN_TxDone$2093+3,SwTimerSetTimeout@timeout+3
 22202  00132E  0102               	movlb	2	; () banked
 22203  001330  51E9               	movf	(_loRa+233)& (0+255),w,b
 22204  001332  EC75  F036         	call	_SwTimerSetTimeout
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 22208  001336  0102               	movlb	2	; () banked
 22209  001338  51E9               	movf	(_loRa+233)& (0+255),w,b
 22210  00133A  EC58  F02E         	call	_SwTimerStart
 22211  00133E                     l14716:
 22212                           
 22213                           ; BSR set to: 0
 22214                           ;lorawan_eu.c: 438: }
 22215                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 22216  00133E  0E02               	movlw	2
 22217  001340  0102               	movlb	2	; () banked
 22218  001342  1912               	xorwf	(_loRa+18)& (0+255),w,b
 22219  001344  A4D8               	btfss	status,2,c
 22220  001346  0012               	return	
 22221                           
 22222                           ; BSR set to: 2
 22223                           ;lorawan_eu.c: 440: {
 22224                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22225  001348  5102               	movf	(_loRa+2)& (0+255),w,b
 22226  00134A  0BF0               	andlw	-16
 22227  00134C  0908               	iorlw	8
 22228  00134E  6F02               	movwf	(_loRa+2)& (0+255),b
 22229                           
 22230                           ; BSR set to: 2
 22231                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 22232  001350  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 22233  001354                     l14722:
 22234                           
 22235                           ; BSR set to: 2
 22236                           ;lorawan_eu.c: 445: else
 22237                           ;lorawan_eu.c: 446: {
 22238                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 22239  001354  EC82  F03C         	call	_RADIO_GetStatus	;wreg free
 22240  001358  0100               	movlb	0	; () banked
 22241  00135A  6FA2               	movwf	??_LORAWAN_TxDone& (0+255),b
 22242  00135C  A9A2               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22243  00135E  D00E               	goto	l14726
 22244                           
 22245                           ; BSR set to: 0
 22246                           ;lorawan_eu.c: 448: {
 22247                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22248  001360  6B67               	clrf	RxDataDone@pData& (0+255),b
 22249  001362  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22250  001364  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22251  001366  0E02               	movlw	2
 22252  001368  6F6A               	movwf	RxDataDone@status& (0+255),b
 22253  00136A  0005               	push	
 22254  00136C  6EFA               	movwf	pclath,c
 22255  00136E  51E8               	movf	_rxPayload& (0+255),w,b
 22256  001370  6EFD               	movwf	tosl,c
 22257  001372  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22258  001374  6EFE               	movwf	tosh,c
 22259  001376  6AFF               	clrf	tosu,c
 22260  001378  50FA               	movf	pclath,w,c
 22261  00137A  0012               	return		;indir
 22262  00137C                     l14726:
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;lorawan_eu.c: 452: else
 22266                           ;lorawan_eu.c: 453: {
 22267                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 22268  00137C  51E8               	movf	_rxPayload& (0+255),w,b
 22269  00137E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22270  001380  B4D8               	btfsc	status,2,c
 22271  001382  0012               	return	
 22272                           
 22273                           ; BSR set to: 0
 22274                           ;lorawan_eu.c: 456: {
 22275                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22276  001384  6B67               	clrf	RxDataDone@pData& (0+255),b
 22277  001386  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22278  001388  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22279  00138A  0E03               	movlw	3
 22280  00138C  6F6A               	movwf	RxDataDone@status& (0+255),b
 22281  00138E  0005               	push	
 22282  001390  6EFA               	movwf	pclath,c
 22283  001392  51E8               	movf	_rxPayload& (0+255),w,b
 22284  001394  6EFD               	movwf	tosl,c
 22285  001396  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22286  001398  6EFE               	movwf	tosh,c
 22287  00139A  6AFF               	clrf	tosu,c
 22288  00139C  50FA               	movf	pclath,w,c
 22289  00139E  0012               	return		;indir
 22290  0013A0                     __end_of_LORAWAN_TxDone:
 22291                           	opt stack 0
 22292                           tosu	equ	0xFFF
 22293                           tosh	equ	0xFFE
 22294                           tosl	equ	0xFFD
 22295                           pclath	equ	0xFFA
 22296                           tblptru	equ	0xFF8
 22297                           tblptrh	equ	0xFF7
 22298                           tblptrl	equ	0xFF6
 22299                           tablat	equ	0xFF5
 22300                           prodh	equ	0xFF4
 22301                           prodl	equ	0xFF3
 22302                           intcon	equ	0xFF2
 22303                           intcon2	equ	0xFF1
 22304                           intcon3	equ	0xFF0
 22305                           indf0	equ	0xFEF
 22306                           postinc0	equ	0xFEE
 22307                           fsr0h	equ	0xFEA
 22308                           fsr0l	equ	0xFE9
 22309                           wreg	equ	0xFE8
 22310                           postinc1	equ	0xFE6
 22311                           postdec1	equ	0xFE5
 22312                           plusw1	equ	0xFE3
 22313                           fsr1h	equ	0xFE2
 22314                           fsr1l	equ	0xFE1
 22315                           indf2	equ	0xFDF
 22316                           postinc2	equ	0xFDE
 22317                           postdec2	equ	0xFDD
 22318                           plusw2	equ	0xFDB
 22319                           fsr2h	equ	0xFDA
 22320                           fsr2l	equ	0xFD9
 22321                           status	equ	0xFD8
 22322                           
 22323 ;; *************** function _SwTimerReadValue *****************
 22324 ;; Defined at:
 22325 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22326 ;; Parameters:    Size  Location     Type
 22327 ;;  timerId         1    wreg     unsigned char 
 22328 ;; Auto vars:     Size  Location     Type
 22329 ;;  timerId         1   53[BANK0 ] unsigned char 
 22330 ;;  ticksCount      4   49[BANK0 ] unsigned long 
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  4   45[BANK0 ] unsigned long 
 22333 ;; Registers used:
 22334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22335 ;; Tracked objects:
 22336 ;;		On entry : C/1
 22337 ;;		On exit  : F/0
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22341 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22343 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22344 ;;Total ram usage:        9 bytes
 22345 ;; Hardware stack levels used:    1
 22346 ;; Hardware stack levels required when called:   10
 22347 ;; This function calls:
 22348 ;;		_SwTimersInterrupt
 22349 ;; This function is called by:
 22350 ;;		_RADIO_TxDone
 22351 ;;		_RADIO_FSKPacketSent
 22352 ;;		_LORAWAN_TxDone
 22353 ;; This function uses a non-reentrant model
 22354 ;;
 22355                           
 22356                           	psect	text111
 22357  006D2C                     __ptext111:
 22358                           	opt stack 0
 22359  006D2C                     _SwTimerReadValue:
 22360                           	opt stack 16
 22361                           
 22362                           ;incstack = 0
 22363                           ;SwTimerReadValue@timerId stored from wreg
 22364  006D2C  0100               	movlb	0	; () banked
 22365  006D2E  6F95               	movwf	SwTimerReadValue@timerId& (0+255),b
 22366                           
 22367                           ;sw_timer.c: 195: uint32_t ticksCount;
 22368                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22369  006D30  9EF2               	bcf	intcon,7,c	;volatile
 22370                           
 22371                           ;sw_timer.c: 200: SwTimersInterrupt();
 22372  006D32  ECB6  F025         	call	_SwTimersInterrupt	;wreg free
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22376  006D36  5195               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22377  006D38  0D08               	mullw	8
 22378  006D3A  0E00               	movlw	low _swTimers
 22379  006D3C  24F3               	addwf	prodl,w,c
 22380  006D3E  6ED9               	movwf	fsr2l,c
 22381  006D40  0E03               	movlw	high _swTimers
 22382  006D42  20F4               	addwfc	prodh,w,c
 22383  006D44  6EDA               	movwf	fsr2h,c
 22384  006D46  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount
 22385  006D4A  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22386  006D4E  CFDE F093          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22387  006D52  CFDE F094          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22388                           
 22389                           ; BSR set to: 0
 22390                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22391  006D56  8EF2               	bsf	intcon,7,c	;volatile
 22392                           
 22393                           ; BSR set to: 0
 22394                           ;sw_timer.c: 204: return ticksCount;
 22395  006D58  C091  F08D         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22396  006D5C  C092  F08E         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22397  006D60  C093  F08F         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22398  006D64  C094  F090         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22399                           
 22400                           ; BSR set to: 0
 22401  006D68  0012               	return		;funcret
 22402  006D6A                     __end_of_SwTimerReadValue:
 22403                           	opt stack 0
 22404                           tosu	equ	0xFFF
 22405                           tosh	equ	0xFFE
 22406                           tosl	equ	0xFFD
 22407                           pclath	equ	0xFFA
 22408                           tblptru	equ	0xFF8
 22409                           tblptrh	equ	0xFF7
 22410                           tblptrl	equ	0xFF6
 22411                           tablat	equ	0xFF5
 22412                           prodh	equ	0xFF4
 22413                           prodl	equ	0xFF3
 22414                           intcon	equ	0xFF2
 22415                           intcon2	equ	0xFF1
 22416                           intcon3	equ	0xFF0
 22417                           indf0	equ	0xFEF
 22418                           postinc0	equ	0xFEE
 22419                           fsr0h	equ	0xFEA
 22420                           fsr0l	equ	0xFE9
 22421                           wreg	equ	0xFE8
 22422                           postinc1	equ	0xFE6
 22423                           postdec1	equ	0xFE5
 22424                           plusw1	equ	0xFE3
 22425                           fsr1h	equ	0xFE2
 22426                           fsr1l	equ	0xFE1
 22427                           indf2	equ	0xFDF
 22428                           postinc2	equ	0xFDE
 22429                           postdec2	equ	0xFDD
 22430                           plusw2	equ	0xFDB
 22431                           fsr2h	equ	0xFDA
 22432                           fsr2l	equ	0xFD9
 22433                           status	equ	0xFD8
 22434                           
 22435 ;; *************** function _SwTimerIsRunning *****************
 22436 ;; Defined at:
 22437 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22438 ;; Parameters:    Size  Location     Type
 22439 ;;  timerId         1    wreg     unsigned char 
 22440 ;; Auto vars:     Size  Location     Type
 22441 ;;  timerId         1    4[BANK0 ] unsigned char 
 22442 ;;  isRunning       1    5[BANK0 ] unsigned char 
 22443 ;; Return value:  Size  Location     Type
 22444 ;;                  1    wreg      unsigned char 
 22445 ;; Registers used:
 22446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22447 ;; Tracked objects:
 22448 ;;		On entry : F/2
 22449 ;;		On exit  : F/0
 22450 ;;		Unchanged: 0/0
 22451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22455 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22456 ;;Total ram usage:        2 bytes
 22457 ;; Hardware stack levels used:    1
 22458 ;; Hardware stack levels required when called:    7
 22459 ;; This function calls:
 22460 ;;		Nothing
 22461 ;; This function is called by:
 22462 ;;		_LORAWAN_TxDone
 22463 ;; This function uses a non-reentrant model
 22464 ;;
 22465                           
 22466                           	psect	text112
 22467  007464                     __ptext112:
 22468                           	opt stack 0
 22469  007464                     _SwTimerIsRunning:
 22470                           	opt stack 19
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;incstack = 0
 22474                           ;SwTimerIsRunning@timerId stored from wreg
 22475  007464  0100               	movlb	0	; () banked
 22476  007466  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22477                           
 22478                           ;sw_timer.c: 209: uint8_t isRunning;
 22479                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22480  007468  9EF2               	bcf	intcon,7,c	;volatile
 22481                           
 22482                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22483  00746A  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22484  00746C  0D08               	mullw	8
 22485  00746E  0E04               	movlw	low (_swTimers+4)
 22486  007470  24F3               	addwf	prodl,w,c
 22487  007472  6ED9               	movwf	fsr2l,c
 22488  007474  0E03               	movlw	high (_swTimers+4)
 22489  007476  20F4               	addwfc	prodh,w,c
 22490  007478  6EDA               	movwf	fsr2h,c
 22491  00747A  50DF               	movf	indf2,w,c
 22492  00747C  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22493                           
 22494                           ; BSR set to: 0
 22495                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22496  00747E  8EF2               	bsf	intcon,7,c	;volatile
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;sw_timer.c: 215: return isRunning;
 22500  007480  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22501                           
 22502                           ; BSR set to: 0
 22503  007482  0012               	return		;funcret
 22504  007484                     __end_of_SwTimerIsRunning:
 22505                           	opt stack 0
 22506                           tosu	equ	0xFFF
 22507                           tosh	equ	0xFFE
 22508                           tosl	equ	0xFFD
 22509                           pclath	equ	0xFFA
 22510                           tblptru	equ	0xFF8
 22511                           tblptrh	equ	0xFF7
 22512                           tblptrl	equ	0xFF6
 22513                           tablat	equ	0xFF5
 22514                           prodh	equ	0xFF4
 22515                           prodl	equ	0xFF3
 22516                           intcon	equ	0xFF2
 22517                           intcon2	equ	0xFF1
 22518                           intcon3	equ	0xFF0
 22519                           indf0	equ	0xFEF
 22520                           postinc0	equ	0xFEE
 22521                           fsr0h	equ	0xFEA
 22522                           fsr0l	equ	0xFE9
 22523                           wreg	equ	0xFE8
 22524                           postinc1	equ	0xFE6
 22525                           postdec1	equ	0xFE5
 22526                           plusw1	equ	0xFE3
 22527                           fsr1h	equ	0xFE2
 22528                           fsr1l	equ	0xFE1
 22529                           indf2	equ	0xFDF
 22530                           postinc2	equ	0xFDE
 22531                           postdec2	equ	0xFDD
 22532                           plusw2	equ	0xFDB
 22533                           fsr2h	equ	0xFDA
 22534                           fsr2l	equ	0xFD9
 22535                           status	equ	0xFD8
 22536                           
 22537 ;; *************** function _RADIO_GetStatus *****************
 22538 ;; Defined at:
 22539 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22540 ;; Parameters:    Size  Location     Type
 22541 ;;		None
 22542 ;; Auto vars:     Size  Location     Type
 22543 ;;		None
 22544 ;; Return value:  Size  Location     Type
 22545 ;;                  1    wreg      unsigned char 
 22546 ;; Registers used:
 22547 ;;		wreg, status,2
 22548 ;; Tracked objects:
 22549 ;;		On entry : D/2
 22550 ;;		On exit  : F/1
 22551 ;;		Unchanged: 0/0
 22552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22557 ;;Total ram usage:        0 bytes
 22558 ;; Hardware stack levels used:    1
 22559 ;; Hardware stack levels required when called:    7
 22560 ;; This function calls:
 22561 ;;		Nothing
 22562 ;; This function is called by:
 22563 ;;		_LORAWAN_TxDone
 22564 ;;		_LORAWAN_ReceiveWindow2Callback
 22565 ;;		_LORAWAN_RxDone
 22566 ;; This function uses a non-reentrant model
 22567 ;;
 22568                           
 22569                           	psect	text113
 22570  007904                     __ptext113:
 22571                           	opt stack 0
 22572  007904                     _RADIO_GetStatus:
 22573                           	opt stack 19
 22574                           
 22575                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22576                           
 22577                           ; BSR set to: 0
 22578                           ;incstack = 0
 22579  007904  0101               	movlb	1	; () banked
 22580  007906  518C               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22581                           
 22582                           ; BSR set to: 1
 22583  007908  0012               	return		;funcret
 22584  00790A                     __end_of_RADIO_GetStatus:
 22585                           	opt stack 0
 22586                           tosu	equ	0xFFF
 22587                           tosh	equ	0xFFE
 22588                           tosl	equ	0xFFD
 22589                           pclath	equ	0xFFA
 22590                           tblptru	equ	0xFF8
 22591                           tblptrh	equ	0xFF7
 22592                           tblptrl	equ	0xFF6
 22593                           tablat	equ	0xFF5
 22594                           prodh	equ	0xFF4
 22595                           prodl	equ	0xFF3
 22596                           intcon	equ	0xFF2
 22597                           intcon2	equ	0xFF1
 22598                           intcon3	equ	0xFF0
 22599                           indf0	equ	0xFEF
 22600                           postinc0	equ	0xFEE
 22601                           fsr0h	equ	0xFEA
 22602                           fsr0l	equ	0xFE9
 22603                           wreg	equ	0xFE8
 22604                           postinc1	equ	0xFE6
 22605                           postdec1	equ	0xFE5
 22606                           plusw1	equ	0xFE3
 22607                           fsr1h	equ	0xFE2
 22608                           fsr1l	equ	0xFE1
 22609                           indf2	equ	0xFDF
 22610                           postinc2	equ	0xFDE
 22611                           postdec2	equ	0xFDD
 22612                           plusw2	equ	0xFDB
 22613                           fsr2h	equ	0xFDA
 22614                           fsr2l	equ	0xFD9
 22615                           status	equ	0xFD8
 22616                           
 22617 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22618 ;; Defined at:
 22619 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22620 ;; Parameters:    Size  Location     Type
 22621 ;;		None
 22622 ;; Auto vars:     Size  Location     Type
 22623 ;;		None
 22624 ;; Return value:  Size  Location     Type
 22625 ;;                  1    wreg      void 
 22626 ;; Registers used:
 22627 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22628 ;; Tracked objects:
 22629 ;;		On entry : F/2
 22630 ;;		On exit  : F/0
 22631 ;;		Unchanged: 0/0
 22632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22637 ;;Total ram usage:        0 bytes
 22638 ;; Hardware stack levels used:    1
 22639 ;; Hardware stack levels required when called:   13
 22640 ;; This function calls:
 22641 ;;		_ConfigureRadioRx
 22642 ;;		_RADIO_ReceiveStart
 22643 ;;		_RADIO_ReceiveStop
 22644 ;;		_RADIO_ReleaseData
 22645 ;;		_ResetParametersForConfirmedTransmission
 22646 ;;		_ResetParametersForUnconfirmedTransmission
 22647 ;;		_RxDataDone
 22648 ;; This function is called by:
 22649 ;;		_LORAWAN_TxDone
 22650 ;;		_LORAWAN_ReceiveWindow2Callback
 22651 ;;		_LORAWAN_RxDone
 22652 ;;		_SetReceptionNotOkState
 22653 ;; This function uses a non-reentrant model
 22654 ;;
 22655                           
 22656                           	psect	text114
 22657  006532                     __ptext114:
 22658                           	opt stack 0
 22659  006532                     _LORAWAN_EnterContinuousReceive:
 22660                           	opt stack 13
 22661                           
 22662                           ; BSR set to: 2
 22663                           ;lorawan.c: 917: RADIO_ReceiveStop();
 22664                           
 22665                           ; BSR set to: 1
 22666                           ;incstack = 0
 22667  006532  EC60  F03A         	call	_RADIO_ReceiveStop	;wreg free
 22668                           
 22669                           ; BSR set to: 1
 22670                           ;lorawan.c: 918: RADIO_ReleaseData();
 22671  006536  EC85  F03C         	call	_RADIO_ReleaseData	;wreg free
 22672                           
 22673                           ; BSR set to: 1
 22674                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 22675  00653A  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 22676  00653E  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 22677  006542  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 22678  006546  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 22679  00654A  0102               	movlb	2	; () banked
 22680  00654C  511C               	movf	(_loRa+28)& (0+255),w,b
 22681  00654E  EC85  F039         	call	_ConfigureRadioRx
 22682                           
 22683                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 22684  006552  0100               	movlb	0	; () banked
 22685  006554  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 22686  006556  6B96               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 22687  006558  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
 22688  00655C  5196               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 22689  00655E  1197               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 22690  006560  B4D8               	btfsc	status,2,c
 22691  006562  0012               	return	
 22692                           
 22693                           ; BSR set to: 0
 22694                           ;lorawan.c: 923: {
 22695                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 22696  006564  ECCD  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22697                           
 22698                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 22699  006568  ECC6  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 22700                           
 22701                           ; BSR set to: 2
 22702                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 22703  00656C  0EF0               	movlw	-16
 22704  00656E  1702               	andwf	(_loRa+2)& (0+255),f,b
 22705                           
 22706                           ; BSR set to: 2
 22707                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 22708  006570  0100               	movlb	0	; () banked
 22709  006572  51E8               	movf	_rxPayload& (0+255),w,b
 22710  006574  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22711  006576  B4D8               	btfsc	status,2,c
 22712  006578  0012               	return	
 22713                           
 22714                           ; BSR set to: 0
 22715                           ;lorawan.c: 928: {
 22716                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 22717  00657A  6B67               	clrf	RxDataDone@pData& (0+255),b
 22718  00657C  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22719  00657E  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22720  006580  6B6A               	clrf	RxDataDone@status& (0+255),b
 22721  006582  0005               	push	
 22722  006584  6AFA               	clrf	pclath,c
 22723  006586  51E8               	movf	_rxPayload& (0+255),w,b
 22724  006588  6EFD               	movwf	tosl,c
 22725  00658A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22726  00658C  6EFE               	movwf	tosh,c
 22727  00658E  6AFF               	clrf	tosu,c
 22728  006590  50FA               	movf	pclath,w,c
 22729  006592  0012               	return		;indir
 22730  006594                     __end_of_LORAWAN_EnterContinuousReceive:
 22731                           	opt stack 0
 22732                           tosu	equ	0xFFF
 22733                           tosh	equ	0xFFE
 22734                           tosl	equ	0xFFD
 22735                           pclath	equ	0xFFA
 22736                           tblptru	equ	0xFF8
 22737                           tblptrh	equ	0xFF7
 22738                           tblptrl	equ	0xFF6
 22739                           tablat	equ	0xFF5
 22740                           prodh	equ	0xFF4
 22741                           prodl	equ	0xFF3
 22742                           intcon	equ	0xFF2
 22743                           intcon2	equ	0xFF1
 22744                           intcon3	equ	0xFF0
 22745                           indf0	equ	0xFEF
 22746                           postinc0	equ	0xFEE
 22747                           fsr0h	equ	0xFEA
 22748                           fsr0l	equ	0xFE9
 22749                           wreg	equ	0xFE8
 22750                           postinc1	equ	0xFE6
 22751                           postdec1	equ	0xFE5
 22752                           plusw1	equ	0xFE3
 22753                           fsr1h	equ	0xFE2
 22754                           fsr1l	equ	0xFE1
 22755                           indf2	equ	0xFDF
 22756                           postinc2	equ	0xFDE
 22757                           postdec2	equ	0xFDD
 22758                           plusw2	equ	0xFDB
 22759                           fsr2h	equ	0xFDA
 22760                           fsr2l	equ	0xFD9
 22761                           status	equ	0xFD8
 22762                           
 22763 ;; *************** function _RxDataDone *****************
 22764 ;; Defined at:
 22765 ;;		line 106 in file "main.c"
 22766 ;; Parameters:    Size  Location     Type
 22767 ;;  pData           2    7[BANK0 ] PTR unsigned char 
 22768 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22769 ;;  dataLength      1    9[BANK0 ] unsigned char 
 22770 ;;  status          1   10[BANK0 ] enum E8000
 22771 ;; Auto vars:     Size  Location     Type
 22772 ;;		None
 22773 ;; Return value:  Size  Location     Type
 22774 ;;                  1    wreg      void 
 22775 ;; Registers used:
 22776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22777 ;; Tracked objects:
 22778 ;;		On entry : F/0
 22779 ;;		On exit  : F/0
 22780 ;;		Unchanged: 0/0
 22781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22785 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22786 ;;Total ram usage:        5 bytes
 22787 ;; Hardware stack levels used:    1
 22788 ;; Hardware stack levels required when called:    9
 22789 ;; This function calls:
 22790 ;;		_LORAWAN_SetCurrentDataRate
 22791 ;; This function is called by:
 22792 ;;		_main
 22793 ;;		_LORAWAN_EnterContinuousReceive
 22794 ;;		_LORAWAN_ReceiveWindow2Callback
 22795 ;;		_SetReceptionNotOkState
 22796 ;;		_LORAWAN_RxDone
 22797 ;;		_LORAWAN_RxTimeout
 22798 ;;		_LORAWAN_TxDone
 22799 ;;		_AckRetransmissionCallback
 22800 ;;		_UnconfirmedTransmissionCallback
 22801 ;; This function uses a non-reentrant model
 22802 ;;
 22803                           
 22804                           	psect	text115
 22805  00611C                     __ptext115:
 22806                           	opt stack 0
 22807  00611C                     _RxDataDone:
 22808                           	opt stack 18
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;main.c: 111: if(pData[0]==30){
 22812                           
 22813                           ; BSR set to: 0
 22814                           ;incstack = 0
 22815  00611C  C067  FFD9         	movff	RxDataDone@pData,fsr2l
 22816  006120  C068  FFDA         	movff	RxDataDone@pData+1,fsr2h
 22817  006124  0E1E               	movlw	30
 22818  006126  18DE               	xorwf	postinc2,w,c
 22819  006128  A4D8               	btfss	status,2,c
 22820  00612A  0012               	return	
 22821                           
 22822                           ; BSR set to: 0
 22823                           ;main.c: 112: LORAWAN_SetCurrentDataRate(pData[1]);
 22824  00612C  EE20 F001          	lfsr	2,1
 22825  006130  5167               	movf	RxDataDone@pData& (0+255),w,b
 22826  006132  26D9               	addwf	fsr2l,f,c
 22827  006134  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22828  006136  22DA               	addwfc	fsr2h,f,c
 22829  006138  50DF               	movf	indf2,w,c
 22830  00613A  ECB6  F038         	call	_LORAWAN_SetCurrentDataRate
 22831                           
 22832                           ;main.c: 113: PORTCbits.RC5 = pData[2];
 22833  00613E  0100               	movlb	0	; () banked
 22834  006140  EE20 F002          	lfsr	2,2
 22835  006144  5167               	movf	RxDataDone@pData& (0+255),w,b
 22836  006146  26D9               	addwf	fsr2l,f,c
 22837  006148  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22838  00614A  22DA               	addwfc	fsr2h,f,c
 22839  00614C  50DF               	movf	indf2,w,c
 22840  00614E  6F6B               	movwf	??_RxDataDone& (0+255),b
 22841  006150  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 22842  006152  476B               	rlncf	??_RxDataDone& (0+255),f,b
 22843  006154  5082               	movf	3970,w,c	;volatile
 22844  006156  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22845  006158  0BDF               	andlw	-33
 22846  00615A  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22847  00615C  6E82               	movwf	3970,c	;volatile
 22848                           
 22849                           ; BSR set to: 0
 22850                           ;main.c: 114: PORTDbits.RD5 = pData[3];
 22851  00615E  EE20 F003          	lfsr	2,3
 22852  006162  5167               	movf	RxDataDone@pData& (0+255),w,b
 22853  006164  26D9               	addwf	fsr2l,f,c
 22854  006166  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22855  006168  22DA               	addwfc	fsr2h,f,c
 22856  00616A  50DF               	movf	indf2,w,c
 22857  00616C  6F6B               	movwf	??_RxDataDone& (0+255),b
 22858  00616E  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 22859  006170  476B               	rlncf	??_RxDataDone& (0+255),f,b
 22860  006172  5083               	movf	3971,w,c	;volatile
 22861  006174  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22862  006176  0BDF               	andlw	-33
 22863  006178  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22864  00617A  6E83               	movwf	3971,c	;volatile
 22865                           
 22866                           ; BSR set to: 0
 22867                           ;main.c: 115: ONE_HOUR_TIMEOUT_COUNTS = pData[4];
 22868  00617C  EE20 F004          	lfsr	2,4
 22869  006180  5167               	movf	RxDataDone@pData& (0+255),w,b
 22870  006182  26D9               	addwf	fsr2l,f,c
 22871  006184  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22872  006186  22DA               	addwfc	fsr2h,f,c
 22873  006188  50DF               	movf	indf2,w,c
 22874  00618A  6E5A               	movwf	_ONE_HOUR_TIMEOUT_COUNTS,c
 22875                           
 22876                           ; BSR set to: 0
 22877  00618C  0012               	return		;funcret
 22878  00618E                     __end_of_RxDataDone:
 22879                           	opt stack 0
 22880                           tosu	equ	0xFFF
 22881                           tosh	equ	0xFFE
 22882                           tosl	equ	0xFFD
 22883                           pclath	equ	0xFFA
 22884                           tblptru	equ	0xFF8
 22885                           tblptrh	equ	0xFF7
 22886                           tblptrl	equ	0xFF6
 22887                           tablat	equ	0xFF5
 22888                           prodh	equ	0xFF4
 22889                           prodl	equ	0xFF3
 22890                           intcon	equ	0xFF2
 22891                           intcon2	equ	0xFF1
 22892                           intcon3	equ	0xFF0
 22893                           indf0	equ	0xFEF
 22894                           postinc0	equ	0xFEE
 22895                           fsr0h	equ	0xFEA
 22896                           fsr0l	equ	0xFE9
 22897                           wreg	equ	0xFE8
 22898                           postinc1	equ	0xFE6
 22899                           postdec1	equ	0xFE5
 22900                           plusw1	equ	0xFE3
 22901                           fsr1h	equ	0xFE2
 22902                           fsr1l	equ	0xFE1
 22903                           indf2	equ	0xFDF
 22904                           postinc2	equ	0xFDE
 22905                           postdec2	equ	0xFDD
 22906                           plusw2	equ	0xFDB
 22907                           fsr2h	equ	0xFDA
 22908                           fsr2l	equ	0xFD9
 22909                           status	equ	0xFD8
 22910                           
 22911 ;; *************** function _LORAWAN_SetCurrentDataRate *****************
 22912 ;; Defined at:
 22913 ;;		line 436 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22914 ;; Parameters:    Size  Location     Type
 22915 ;;  valueNew        1    wreg     unsigned char 
 22916 ;; Auto vars:     Size  Location     Type
 22917 ;;  valueNew        1    6[BANK0 ] unsigned char 
 22918 ;; Return value:  Size  Location     Type
 22919 ;;                  1    wreg      enum E7957
 22920 ;; Registers used:
 22921 ;;		wreg, status,2, status,0, cstack
 22922 ;; Tracked objects:
 22923 ;;		On entry : F/0
 22924 ;;		On exit  : 0/0
 22925 ;;		Unchanged: 0/0
 22926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22931 ;;Total ram usage:        1 bytes
 22932 ;; Hardware stack levels used:    1
 22933 ;; Hardware stack levels required when called:    8
 22934 ;; This function calls:
 22935 ;;		_UpdateCurrentDataRate
 22936 ;;		_ValidateDataRate
 22937 ;; This function is called by:
 22938 ;;		_RxDataDone
 22939 ;; This function uses a non-reentrant model
 22940 ;;
 22941                           
 22942                           	psect	text116
 22943  00716C                     __ptext116:
 22944                           	opt stack 0
 22945  00716C                     _LORAWAN_SetCurrentDataRate:
 22946                           	opt stack 18
 22947                           
 22948                           ; BSR set to: 0
 22949                           ;incstack = 0
 22950                           ;LORAWAN_SetCurrentDataRate@valueNew stored from wreg
 22951  00716C  6F66               	movwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),b
 22952                           
 22953                           ;lorawan.c: 440: if ( (valueNew < loRa.minDataRate) || (valueNew > loRa.maxDataRate) || 
      +                          (ValidateDataRate(valueNew) != OK) )
 22954  00716E  0102               	movlb	2	; () banked
 22955  007170  51EB               	movf	(_loRa+235)& (0+255),w,b
 22956  007172  0100               	movlb	0	; () banked
 22957  007174  5D66               	subwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22958  007176  A0D8               	btfss	status,0,c
 22959  007178  0012               	return	
 22960                           
 22961                           ; BSR set to: 0
 22962  00717A  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22963  00717C  0102               	movlb	2	; () banked
 22964  00717E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 22965  007180  A0D8               	btfss	status,0,c
 22966  007182  0012               	return	
 22967                           
 22968                           ; BSR set to: 2
 22969  007184  0100               	movlb	0	; () banked
 22970  007186  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22971  007188  EC8E  F03B         	call	_ValidateDataRate
 22972  00718C  0900               	iorlw	0
 22973  00718E  E001               	bz	l12728
 22974  007190  0012               	return	
 22975  007192                     l12728:
 22976                           
 22977                           ; BSR set to: 0
 22978                           ;lorawan.c: 444: else
 22979                           ;lorawan.c: 445: {
 22980                           ;lorawan.c: 446: UpdateCurrentDataRate (valueNew);
 22981  007192  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22982  007194  EF64  F03C         	goto	_UpdateCurrentDataRate
 22983  007198                     __end_of_LORAWAN_SetCurrentDataRate:
 22984                           	opt stack 0
 22985                           tosu	equ	0xFFF
 22986                           tosh	equ	0xFFE
 22987                           tosl	equ	0xFFD
 22988                           pclath	equ	0xFFA
 22989                           tblptru	equ	0xFF8
 22990                           tblptrh	equ	0xFF7
 22991                           tblptrl	equ	0xFF6
 22992                           tablat	equ	0xFF5
 22993                           prodh	equ	0xFF4
 22994                           prodl	equ	0xFF3
 22995                           intcon	equ	0xFF2
 22996                           intcon2	equ	0xFF1
 22997                           intcon3	equ	0xFF0
 22998                           indf0	equ	0xFEF
 22999                           postinc0	equ	0xFEE
 23000                           fsr0h	equ	0xFEA
 23001                           fsr0l	equ	0xFE9
 23002                           wreg	equ	0xFE8
 23003                           postinc1	equ	0xFE6
 23004                           postdec1	equ	0xFE5
 23005                           plusw1	equ	0xFE3
 23006                           fsr1h	equ	0xFE2
 23007                           fsr1l	equ	0xFE1
 23008                           indf2	equ	0xFDF
 23009                           postinc2	equ	0xFDE
 23010                           postdec2	equ	0xFDD
 23011                           plusw2	equ	0xFDB
 23012                           fsr2h	equ	0xFDA
 23013                           fsr2l	equ	0xFD9
 23014                           status	equ	0xFD8
 23015                           
 23016 ;; *************** function _ValidateDataRate *****************
 23017 ;; Defined at:
 23018 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 23019 ;; Parameters:    Size  Location     Type
 23020 ;;  dataRate        1    wreg     unsigned char 
 23021 ;; Auto vars:     Size  Location     Type
 23022 ;;  dataRate        1    4[BANK0 ] unsigned char 
 23023 ;;  result          1    5[BANK0 ] enum E8016
 23024 ;; Return value:  Size  Location     Type
 23025 ;;                  1    wreg      enum E8016
 23026 ;; Registers used:
 23027 ;;		wreg, status,2, status,0
 23028 ;; Tracked objects:
 23029 ;;		On entry : F/0
 23030 ;;		On exit  : F/0
 23031 ;;		Unchanged: 0/0
 23032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23034 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23037 ;;Total ram usage:        2 bytes
 23038 ;; Hardware stack levels used:    1
 23039 ;; Hardware stack levels required when called:    7
 23040 ;; This function calls:
 23041 ;;		Nothing
 23042 ;; This function is called by:
 23043 ;;		_ExecuteLinkAdr
 23044 ;;		_ExecuteRxParamSetupReq
 23045 ;;		_ValidateDataRange
 23046 ;;		_LORAWAN_SetCurrentDataRate
 23047 ;; This function uses a non-reentrant model
 23048 ;;
 23049                           
 23050                           	psect	text117
 23051  00771C                     __ptext117:
 23052                           	opt stack 0
 23053  00771C                     _ValidateDataRate:
 23054                           	opt stack 18
 23055                           
 23056                           ;incstack = 0
 23057                           ;ValidateDataRate@dataRate stored from wreg
 23058  00771C  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 23059                           
 23060                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 23061  00771E  0100               	movlb	0	; () banked
 23062  007720  6B65               	clrf	ValidateDataRate@result& (0+255),b
 23063                           
 23064                           ; BSR set to: 0
 23065                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 23066  007722  0E07               	movlw	7
 23067  007724  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 23068  007726  D002               	goto	l1079
 23069                           
 23070                           ; BSR set to: 0
 23071                           ;lorawan_eu.c: 575: {
 23072                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 23073  007728  0E03               	movlw	3
 23074  00772A  6F65               	movwf	ValidateDataRate@result& (0+255),b
 23075  00772C                     l1079:
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;lorawan_eu.c: 577: }
 23079                           ;lorawan_eu.c: 579: return result;
 23080  00772C  5165               	movf	ValidateDataRate@result& (0+255),w,b
 23081                           
 23082                           ; BSR set to: 0
 23083  00772E  0012               	return		;funcret
 23084  007730                     __end_of_ValidateDataRate:
 23085                           	opt stack 0
 23086                           tosu	equ	0xFFF
 23087                           tosh	equ	0xFFE
 23088                           tosl	equ	0xFFD
 23089                           pclath	equ	0xFFA
 23090                           tblptru	equ	0xFF8
 23091                           tblptrh	equ	0xFF7
 23092                           tblptrl	equ	0xFF6
 23093                           tablat	equ	0xFF5
 23094                           prodh	equ	0xFF4
 23095                           prodl	equ	0xFF3
 23096                           intcon	equ	0xFF2
 23097                           intcon2	equ	0xFF1
 23098                           intcon3	equ	0xFF0
 23099                           indf0	equ	0xFEF
 23100                           postinc0	equ	0xFEE
 23101                           fsr0h	equ	0xFEA
 23102                           fsr0l	equ	0xFE9
 23103                           wreg	equ	0xFE8
 23104                           postinc1	equ	0xFE6
 23105                           postdec1	equ	0xFE5
 23106                           plusw1	equ	0xFE3
 23107                           fsr1h	equ	0xFE2
 23108                           fsr1l	equ	0xFE1
 23109                           indf2	equ	0xFDF
 23110                           postinc2	equ	0xFDE
 23111                           postdec2	equ	0xFDD
 23112                           plusw2	equ	0xFDB
 23113                           fsr2h	equ	0xFDA
 23114                           fsr2l	equ	0xFD9
 23115                           status	equ	0xFD8
 23116                           
 23117 ;; *************** function _UpdateCurrentDataRate *****************
 23118 ;; Defined at:
 23119 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23120 ;; Parameters:    Size  Location     Type
 23121 ;;  valueNew        1    wreg     unsigned char 
 23122 ;; Auto vars:     Size  Location     Type
 23123 ;;  valueNew        1    4[BANK0 ] unsigned char 
 23124 ;; Return value:  Size  Location     Type
 23125 ;;                  1    wreg      void 
 23126 ;; Registers used:
 23127 ;;		wreg
 23128 ;; Tracked objects:
 23129 ;;		On entry : F/0
 23130 ;;		On exit  : 0/0
 23131 ;;		Unchanged: 0/0
 23132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23137 ;;Total ram usage:        1 bytes
 23138 ;; Hardware stack levels used:    1
 23139 ;; Hardware stack levels required when called:    7
 23140 ;; This function calls:
 23141 ;;		Nothing
 23142 ;; This function is called by:
 23143 ;;		_ExecuteLinkAdr
 23144 ;;		_LORAWAN_SetCurrentDataRate
 23145 ;; This function uses a non-reentrant model
 23146 ;;
 23147                           
 23148                           	psect	text118
 23149  0078C8                     __ptext118:
 23150                           	opt stack 0
 23151  0078C8                     _UpdateCurrentDataRate:
 23152                           	opt stack 18
 23153                           
 23154                           ; BSR set to: 0
 23155                           ;incstack = 0
 23156                           ;UpdateCurrentDataRate@valueNew stored from wreg
 23157  0078C8  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 23158                           
 23159                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 23160  0078CA  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 23161  0078CE  0012               	return		;funcret
 23162  0078D0                     __end_of_UpdateCurrentDataRate:
 23163                           	opt stack 0
 23164                           tosu	equ	0xFFF
 23165                           tosh	equ	0xFFE
 23166                           tosl	equ	0xFFD
 23167                           pclath	equ	0xFFA
 23168                           tblptru	equ	0xFF8
 23169                           tblptrh	equ	0xFF7
 23170                           tblptrl	equ	0xFF6
 23171                           tablat	equ	0xFF5
 23172                           prodh	equ	0xFF4
 23173                           prodl	equ	0xFF3
 23174                           intcon	equ	0xFF2
 23175                           intcon2	equ	0xFF1
 23176                           intcon3	equ	0xFF0
 23177                           indf0	equ	0xFEF
 23178                           postinc0	equ	0xFEE
 23179                           fsr0h	equ	0xFEA
 23180                           fsr0l	equ	0xFE9
 23181                           wreg	equ	0xFE8
 23182                           postinc1	equ	0xFE6
 23183                           postdec1	equ	0xFE5
 23184                           plusw1	equ	0xFE3
 23185                           fsr1h	equ	0xFE2
 23186                           fsr1l	equ	0xFE1
 23187                           indf2	equ	0xFDF
 23188                           postinc2	equ	0xFDE
 23189                           postdec2	equ	0xFDD
 23190                           plusw2	equ	0xFDB
 23191                           fsr2h	equ	0xFDA
 23192                           fsr2l	equ	0xFD9
 23193                           status	equ	0xFD8
 23194                           
 23195 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23196 ;; Defined at:
 23197 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23198 ;; Parameters:    Size  Location     Type
 23199 ;;		None
 23200 ;; Auto vars:     Size  Location     Type
 23201 ;;		None
 23202 ;; Return value:  Size  Location     Type
 23203 ;;                  1    wreg      void 
 23204 ;; Registers used:
 23205 ;;		wreg, status,2
 23206 ;; Tracked objects:
 23207 ;;		On entry : D/0
 23208 ;;		On exit  : F/2
 23209 ;;		Unchanged: 0/0
 23210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23215 ;;Total ram usage:        0 bytes
 23216 ;; Hardware stack levels used:    1
 23217 ;; Hardware stack levels required when called:    7
 23218 ;; This function calls:
 23219 ;;		Nothing
 23220 ;; This function is called by:
 23221 ;;		_LORAWAN_RxTimeout
 23222 ;;		_LORAWAN_ReceiveWindow2Callback
 23223 ;;		_LORAWAN_EnterContinuousReceive
 23224 ;;		_UnconfirmedTransmissionCallback
 23225 ;; This function uses a non-reentrant model
 23226 ;;
 23227                           
 23228                           	psect	text119
 23229  00778C                     __ptext119:
 23230                           	opt stack 0
 23231  00778C                     _ResetParametersForUnconfirmedTransmission:
 23232                           	opt stack 20
 23233                           
 23234                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23235                           
 23236                           ;incstack = 0
 23237  00778C  0EF0               	movlw	-16
 23238  00778E  0102               	movlb	2	; () banked
 23239  007790  1702               	andwf	(_loRa+2)& (0+255),f,b
 23240                           
 23241                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23242  007792  0E01               	movlw	1
 23243  007794  6FD8               	movwf	(_loRa+216)& (0+255),b
 23244                           
 23245                           ; BSR set to: 2
 23246                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23247  007796  6BA7               	clrf	(_loRa+167)& (0+255),b
 23248                           
 23249                           ; BSR set to: 2
 23250  007798  0012               	return		;funcret
 23251  00779A                     __end_of_ResetParametersForUnconfirmedTransmission:
 23252                           	opt stack 0
 23253                           tosu	equ	0xFFF
 23254                           tosh	equ	0xFFE
 23255                           tosl	equ	0xFFD
 23256                           pclath	equ	0xFFA
 23257                           tblptru	equ	0xFF8
 23258                           tblptrh	equ	0xFF7
 23259                           tblptrl	equ	0xFF6
 23260                           tablat	equ	0xFF5
 23261                           prodh	equ	0xFF4
 23262                           prodl	equ	0xFF3
 23263                           intcon	equ	0xFF2
 23264                           intcon2	equ	0xFF1
 23265                           intcon3	equ	0xFF0
 23266                           indf0	equ	0xFEF
 23267                           postinc0	equ	0xFEE
 23268                           fsr0h	equ	0xFEA
 23269                           fsr0l	equ	0xFE9
 23270                           wreg	equ	0xFE8
 23271                           postinc1	equ	0xFE6
 23272                           postdec1	equ	0xFE5
 23273                           plusw1	equ	0xFE3
 23274                           fsr1h	equ	0xFE2
 23275                           fsr1l	equ	0xFE1
 23276                           indf2	equ	0xFDF
 23277                           postinc2	equ	0xFDE
 23278                           postdec2	equ	0xFDD
 23279                           plusw2	equ	0xFDB
 23280                           fsr2h	equ	0xFDA
 23281                           fsr2l	equ	0xFD9
 23282                           status	equ	0xFD8
 23283                           
 23284 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23285 ;; Defined at:
 23286 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23287 ;; Parameters:    Size  Location     Type
 23288 ;;		None
 23289 ;; Auto vars:     Size  Location     Type
 23290 ;;		None
 23291 ;; Return value:  Size  Location     Type
 23292 ;;                  1    wreg      void 
 23293 ;; Registers used:
 23294 ;;		wreg, status,2
 23295 ;; Tracked objects:
 23296 ;;		On entry : D/2
 23297 ;;		On exit  : F/2
 23298 ;;		Unchanged: 0/0
 23299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23304 ;;Total ram usage:        0 bytes
 23305 ;; Hardware stack levels used:    1
 23306 ;; Hardware stack levels required when called:    7
 23307 ;; This function calls:
 23308 ;;		Nothing
 23309 ;; This function is called by:
 23310 ;;		_LORAWAN_RxTimeout
 23311 ;;		_LORAWAN_ReceiveWindow2Callback
 23312 ;;		_LORAWAN_EnterContinuousReceive
 23313 ;;		_AckRetransmissionCallback
 23314 ;; This function uses a non-reentrant model
 23315 ;;
 23316                           
 23317                           	psect	text120
 23318  00779A                     __ptext120:
 23319                           	opt stack 0
 23320  00779A                     _ResetParametersForConfirmedTransmission:
 23321                           	opt stack 18
 23322                           
 23323                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23324                           
 23325                           ; BSR set to: 2
 23326                           ;incstack = 0
 23327  00779A  0EF0               	movlw	-16
 23328  00779C  0102               	movlb	2	; () banked
 23329  00779E  1702               	andwf	(_loRa+2)& (0+255),f,b
 23330                           
 23331                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23332  0077A0  0E01               	movlw	1
 23333  0077A2  6FD9               	movwf	(_loRa+217)& (0+255),b
 23334                           
 23335                           ; BSR set to: 2
 23336                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23337  0077A4  9100               	bcf	_loRa& (0+255),0,b
 23338                           
 23339                           ; BSR set to: 2
 23340  0077A6  0C01               	retlw	1	;funcret
 23341  0077A8                     __end_of_ResetParametersForConfirmedTransmission:
 23342                           	opt stack 0
 23343                           tosu	equ	0xFFF
 23344                           tosh	equ	0xFFE
 23345                           tosl	equ	0xFFD
 23346                           pclath	equ	0xFFA
 23347                           tblptru	equ	0xFF8
 23348                           tblptrh	equ	0xFF7
 23349                           tblptrl	equ	0xFF6
 23350                           tablat	equ	0xFF5
 23351                           prodh	equ	0xFF4
 23352                           prodl	equ	0xFF3
 23353                           intcon	equ	0xFF2
 23354                           intcon2	equ	0xFF1
 23355                           intcon3	equ	0xFF0
 23356                           indf0	equ	0xFEF
 23357                           postinc0	equ	0xFEE
 23358                           fsr0h	equ	0xFEA
 23359                           fsr0l	equ	0xFE9
 23360                           wreg	equ	0xFE8
 23361                           postinc1	equ	0xFE6
 23362                           postdec1	equ	0xFE5
 23363                           plusw1	equ	0xFE3
 23364                           fsr1h	equ	0xFE2
 23365                           fsr1l	equ	0xFE1
 23366                           indf2	equ	0xFDF
 23367                           postinc2	equ	0xFDE
 23368                           postdec2	equ	0xFDD
 23369                           plusw2	equ	0xFDB
 23370                           fsr2h	equ	0xFDA
 23371                           fsr2l	equ	0xFD9
 23372                           status	equ	0xFD8
 23373                           
 23374 ;; *************** function _RADIO_ReleaseData *****************
 23375 ;; Defined at:
 23376 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23377 ;; Parameters:    Size  Location     Type
 23378 ;;		None
 23379 ;; Auto vars:     Size  Location     Type
 23380 ;;		None
 23381 ;; Return value:  Size  Location     Type
 23382 ;;                  1    wreg      void 
 23383 ;; Registers used:
 23384 ;;		status,2, status,0
 23385 ;; Tracked objects:
 23386 ;;		On entry : C/2
 23387 ;;		On exit  : F/1
 23388 ;;		Unchanged: 0/0
 23389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23394 ;;Total ram usage:        0 bytes
 23395 ;; Hardware stack levels used:    1
 23396 ;; Hardware stack levels required when called:    7
 23397 ;; This function calls:
 23398 ;;		Nothing
 23399 ;; This function is called by:
 23400 ;;		_LORAWAN_ReceiveWindow1Callback
 23401 ;;		_LORAWAN_ReceiveWindow2Callback
 23402 ;;		_LORAWAN_EnterContinuousReceive
 23403 ;;		_LORAWAN_RxDone
 23404 ;; This function uses a non-reentrant model
 23405 ;;
 23406                           
 23407                           	psect	text121
 23408  00790A                     __ptext121:
 23409                           	opt stack 0
 23410  00790A                     _RADIO_ReleaseData:
 23411                           	opt stack 18
 23412                           
 23413                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23414                           
 23415                           ; BSR set to: 2
 23416                           ;incstack = 0
 23417  00790A  0101               	movlb	1	; () banked
 23418  00790C  958C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23419                           
 23420                           ; BSR set to: 1
 23421  00790E  0012               	return		;funcret
 23422  007910                     __end_of_RADIO_ReleaseData:
 23423                           	opt stack 0
 23424                           tosu	equ	0xFFF
 23425                           tosh	equ	0xFFE
 23426                           tosl	equ	0xFFD
 23427                           pclath	equ	0xFFA
 23428                           tblptru	equ	0xFF8
 23429                           tblptrh	equ	0xFF7
 23430                           tblptrl	equ	0xFF6
 23431                           tablat	equ	0xFF5
 23432                           prodh	equ	0xFF4
 23433                           prodl	equ	0xFF3
 23434                           intcon	equ	0xFF2
 23435                           intcon2	equ	0xFF1
 23436                           intcon3	equ	0xFF0
 23437                           indf0	equ	0xFEF
 23438                           postinc0	equ	0xFEE
 23439                           fsr0h	equ	0xFEA
 23440                           fsr0l	equ	0xFE9
 23441                           wreg	equ	0xFE8
 23442                           postinc1	equ	0xFE6
 23443                           postdec1	equ	0xFE5
 23444                           plusw1	equ	0xFE3
 23445                           fsr1h	equ	0xFE2
 23446                           fsr1l	equ	0xFE1
 23447                           indf2	equ	0xFDF
 23448                           postinc2	equ	0xFDE
 23449                           postdec2	equ	0xFDD
 23450                           plusw2	equ	0xFDB
 23451                           fsr2h	equ	0xFDA
 23452                           fsr2l	equ	0xFD9
 23453                           status	equ	0xFD8
 23454                           
 23455 ;; *************** function _RADIO_ReceiveStop *****************
 23456 ;; Defined at:
 23457 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23458 ;; Parameters:    Size  Location     Type
 23459 ;;		None
 23460 ;; Auto vars:     Size  Location     Type
 23461 ;;		None
 23462 ;; Return value:  Size  Location     Type
 23463 ;;                  1    wreg      void 
 23464 ;; Registers used:
 23465 ;;		wreg, status,2, status,0, cstack
 23466 ;; Tracked objects:
 23467 ;;		On entry : F/2
 23468 ;;		On exit  : F/1
 23469 ;;		Unchanged: 0/0
 23470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23475 ;;Total ram usage:        0 bytes
 23476 ;; Hardware stack levels used:    1
 23477 ;; Hardware stack levels required when called:   11
 23478 ;; This function calls:
 23479 ;;		_RADIO_WriteMode
 23480 ;; This function is called by:
 23481 ;;		_LORAWAN_Send
 23482 ;;		_LORAWAN_ReceiveWindow1Callback
 23483 ;;		_LORAWAN_ReceiveWindow2Callback
 23484 ;;		_LORAWAN_EnterContinuousReceive
 23485 ;; This function uses a non-reentrant model
 23486 ;;
 23487                           
 23488                           	psect	text122
 23489  0074C0                     __ptext122:
 23490                           	opt stack 0
 23491  0074C0                     _RADIO_ReceiveStop:
 23492                           	opt stack 17
 23493                           
 23494                           ; BSR set to: 2
 23495                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23496                           
 23497                           ; BSR set to: 1
 23498                           ;incstack = 0
 23499  0074C0  0E02               	movlw	2
 23500  0074C2  0101               	movlb	1	; () banked
 23501  0074C4  198C               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23502  0074C6  A4D8               	btfss	status,2,c
 23503  0074C8  0012               	return	
 23504                           
 23505                           ; BSR set to: 1
 23506                           ;radio_driver_SX1276.c: 954: {
 23507                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 23508  0074CA  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23509  0074CE  0E00               	movlw	0
 23510  0074D0  0100               	movlb	0	; () banked
 23511  0074D2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23512  0074D4  EC6E  F028         	call	_RADIO_WriteMode
 23513                           
 23514                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23515  0074D8  0101               	movlb	1	; () banked
 23516  0074DA  938C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23517                           
 23518                           ; BSR set to: 1
 23519  0074DC  0012               	return		;funcret
 23520  0074DE                     __end_of_RADIO_ReceiveStop:
 23521                           	opt stack 0
 23522                           tosu	equ	0xFFF
 23523                           tosh	equ	0xFFE
 23524                           tosl	equ	0xFFD
 23525                           pclath	equ	0xFFA
 23526                           tblptru	equ	0xFF8
 23527                           tblptrh	equ	0xFF7
 23528                           tblptrl	equ	0xFF6
 23529                           tablat	equ	0xFF5
 23530                           prodh	equ	0xFF4
 23531                           prodl	equ	0xFF3
 23532                           intcon	equ	0xFF2
 23533                           intcon2	equ	0xFF1
 23534                           intcon3	equ	0xFF0
 23535                           indf0	equ	0xFEF
 23536                           postinc0	equ	0xFEE
 23537                           fsr0h	equ	0xFEA
 23538                           fsr0l	equ	0xFE9
 23539                           wreg	equ	0xFE8
 23540                           postinc1	equ	0xFE6
 23541                           postdec1	equ	0xFE5
 23542                           plusw1	equ	0xFE3
 23543                           fsr1h	equ	0xFE2
 23544                           fsr1l	equ	0xFE1
 23545                           indf2	equ	0xFDF
 23546                           postinc2	equ	0xFDE
 23547                           postdec2	equ	0xFDD
 23548                           plusw2	equ	0xFDB
 23549                           fsr2h	equ	0xFDA
 23550                           fsr2l	equ	0xFD9
 23551                           status	equ	0xFD8
 23552                           
 23553 ;; *************** function _RADIO_ReceiveStart *****************
 23554 ;; Defined at:
 23555 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23556 ;; Parameters:    Size  Location     Type
 23557 ;;  rxWindowSize    2   54[BANK0 ] unsigned int 
 23558 ;; Auto vars:     Size  Location     Type
 23559 ;;		None
 23560 ;; Return value:  Size  Location     Type
 23561 ;;                  2   54[BANK0 ] enum E7805
 23562 ;; Registers used:
 23563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23564 ;; Tracked objects:
 23565 ;;		On entry : F/0
 23566 ;;		On exit  : F/0
 23567 ;;		Unchanged: 0/0
 23568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23569 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23570 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23572 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23573 ;;Total ram usage:       10 bytes
 23574 ;; Hardware stack levels used:    1
 23575 ;; Hardware stack levels required when called:   12
 23576 ;; This function calls:
 23577 ;;		_RADIO_RegisterWrite
 23578 ;;		_RADIO_WriteConfiguration
 23579 ;;		_RADIO_WriteMode
 23580 ;;		_SwTimerSetTimeout
 23581 ;;		_SwTimerStart
 23582 ;;		___lldiv
 23583 ;; This function is called by:
 23584 ;;		_LORAWAN_ReceiveWindow1Callback
 23585 ;;		_LORAWAN_ReceiveWindow2Callback
 23586 ;;		_LORAWAN_EnterContinuousReceive
 23587 ;; This function uses a non-reentrant model
 23588 ;;
 23589                           
 23590                           	psect	text123
 23591  002BD4                     __ptext123:
 23592                           	opt stack 0
 23593  002BD4                     _RADIO_ReceiveStart:
 23594                           	opt stack 13
 23595                           
 23596                           ; BSR set to: 0
 23597                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23598                           
 23599                           ; BSR set to: 1
 23600                           ;incstack = 0
 23601  002BD4  0101               	movlb	1	; () banked
 23602  002BD6  A58C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23603  002BD8  D006               	goto	l12772
 23604                           
 23605                           ; BSR set to: 1
 23606                           ;radio_driver_SX1276.c: 878: {
 23607                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23608  002BDA  0E80               	movlw	128
 23609  002BDC  0100               	movlb	0	; () banked
 23610  002BDE  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23611  002BE0  0E03               	movlw	3
 23612  002BE2  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23613  002BE4  0C03               	retlw	3
 23614  002BE6                     l12772:
 23615                           
 23616                           ; BSR set to: 1
 23617                           ;radio_driver_SX1276.c: 880: }
 23618                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 23619  002BE6  C18C  F098         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23620  002BEA  0E03               	movlw	3
 23621  002BEC  0100               	movlb	0	; () banked
 23622  002BEE  1798               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23623  002BF0  E005               	bz	l12778
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;radio_driver_SX1276.c: 883: {
 23627                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23628  002BF2  0E80               	movlw	128
 23629  002BF4  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23630  002BF6  0E04               	movlw	4
 23631  002BF8  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23632  002BFA  0C04               	retlw	4
 23633  002BFC                     l12778:
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;radio_driver_SX1276.c: 885: }
 23637                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23638  002BFC  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23639  002BFE  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23640  002C00  E107               	bnz	l12782
 23641                           
 23642                           ; BSR set to: 0
 23643                           ;radio_driver_SX1276.c: 888: {
 23644                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23645  002C02  0E00               	movlw	0
 23646  002C04  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23647  002C06  0E04               	movlw	4
 23648  002C08  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23649  002C0A  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23650                           
 23651                           ;radio_driver_SX1276.c: 890: }
 23652  002C0E  D006               	goto	l12784
 23653  002C10                     l12782:
 23654                           
 23655                           ; BSR set to: 0
 23656                           ;radio_driver_SX1276.c: 891: else
 23657                           ;radio_driver_SX1276.c: 892: {
 23658                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 23659  002C10  C096  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23660  002C14  C097  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23661  002C18  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23662  002C1C                     l12784:
 23663                           
 23664                           ;radio_driver_SX1276.c: 894: }
 23665                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 23666  002C1C  0101               	movlb	1	; () banked
 23667  002C1E  0581               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23668  002C20  E111               	bnz	l12788
 23669                           
 23670                           ; BSR set to: 1
 23671                           ;radio_driver_SX1276.c: 897: {
 23672                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 23673  002C22  0E01               	movlw	1
 23674  002C24  0100               	movlb	0	; () banked
 23675  002C26  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23676  002C28  0E22               	movlw	34
 23677  002C2A  EC6F  F03A         	call	_RADIO_RegisterWrite
 23678                           
 23679                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23680  002C2E  0100               	movlb	0	; () banked
 23681  002C30  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23682  002C32  0E40               	movlw	64
 23683  002C34  EC6F  F03A         	call	_RADIO_RegisterWrite
 23684                           
 23685                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23686  002C38  0100               	movlb	0	; () banked
 23687  002C3A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23688  002C3C  0E41               	movlw	65
 23689  002C3E  EC6F  F03A         	call	_RADIO_RegisterWrite
 23690                           
 23691                           ;radio_driver_SX1276.c: 908: }
 23692  002C42  D014               	goto	l12790
 23693  002C44                     l12788:
 23694                           
 23695                           ; BSR set to: 1
 23696                           ;radio_driver_SX1276.c: 909: else
 23697                           ;radio_driver_SX1276.c: 910: {
 23698                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23699  002C44  C19D  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23700  002C48  0E12               	movlw	18
 23701  002C4A  EC6F  F03A         	call	_RADIO_RegisterWrite
 23702                           
 23703                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23704  002C4E  C19E  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23705  002C52  0E13               	movlw	19
 23706  002C54  EC6F  F03A         	call	_RADIO_RegisterWrite
 23707                           
 23708                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23709  002C58  0100               	movlb	0	; () banked
 23710  002C5A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23711  002C5C  0E40               	movlw	64
 23712  002C5E  EC6F  F03A         	call	_RADIO_RegisterWrite
 23713                           
 23714                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23715  002C62  0100               	movlb	0	; () banked
 23716  002C64  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23717  002C66  0E41               	movlw	65
 23718  002C68  EC6F  F03A         	call	_RADIO_RegisterWrite
 23719  002C6C                     l12790:
 23720                           
 23721                           ;radio_driver_SX1276.c: 917: }
 23722                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 23723  002C6C  0101               	movlb	1	; () banked
 23724  002C6E  838C               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23725                           
 23726                           ; BSR set to: 1
 23727                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23728  002C70  0EE7               	movlw	231
 23729  002C72  178C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23730                           
 23731                           ; BSR set to: 1
 23732                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23733  002C74  0100               	movlb	0	; () banked
 23734  002C76  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23735  002C78  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23736  002C7A  E108               	bnz	l12798
 23737                           
 23738                           ; BSR set to: 0
 23739                           ;radio_driver_SX1276.c: 925: {
 23740                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 23741  002C7C  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23742  002C80  0E00               	movlw	0
 23743  002C82  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23744  002C84  0E05               	movlw	5
 23745  002C86  EC6E  F028         	call	_RADIO_WriteMode
 23746                           
 23747                           ;radio_driver_SX1276.c: 927: }
 23748  002C8A  D041               	goto	l12808
 23749  002C8C                     l12798:
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;radio_driver_SX1276.c: 928: else
 23753                           ;radio_driver_SX1276.c: 929: {
 23754                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 23755  002C8C  0101               	movlb	1	; () banked
 23756  002C8E  0581               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23757  002C90  E109               	bnz	l12802
 23758                           
 23759                           ; BSR set to: 1
 23760                           ;radio_driver_SX1276.c: 931: {
 23761                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 23762  002C92  0E01               	movlw	1
 23763  002C94  0100               	movlb	0	; () banked
 23764  002C96  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23765  002C98  0E00               	movlw	0
 23766  002C9A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23767  002C9C  0E06               	movlw	6
 23768  002C9E  EC6E  F028         	call	_RADIO_WriteMode
 23769                           
 23770                           ;radio_driver_SX1276.c: 933: }
 23771  002CA2  D035               	goto	l12808
 23772  002CA4                     l12802:
 23773                           
 23774                           ; BSR set to: 1
 23775                           ;radio_driver_SX1276.c: 934: else
 23776                           ;radio_driver_SX1276.c: 935: {
 23777                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23778  002CA4  0E00               	movlw	0
 23779  002CA6  0100               	movlb	0	; () banked
 23780  002CA8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23781  002CAA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23782  002CAC  0E05               	movlw	5
 23783  002CAE  EC6E  F028         	call	_RADIO_WriteMode
 23784                           
 23785                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23786  002CB2  0100               	movlb	0	; () banked
 23787  002CB4  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23788  002CB6  6F98               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23789  002CB8  5197               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23790  002CBA  6F99               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23791  002CBC  6B9A               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23792  002CBE  6B9B               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23793  002CC0  0E0C               	movlw	12
 23794  002CC2                     u13805:
 23795  002CC2  90D8               	bcf	status,0,c
 23796  002CC4  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23797  002CC6  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23798  002CC8  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23799  002CCA  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23800  002CCC  2EE8               	decfsz	wreg,f,c
 23801  002CCE  D7F9               	goto	u13805
 23802  002CD0  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23803  002CD4  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23804  002CD8  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23805  002CDC  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23806  002CE0  0E7D               	movlw	125
 23807  002CE2  6F68               	movwf	___lldiv@divisor& (0+255),b
 23808  002CE4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23809  002CE6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23810  002CE8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23811  002CEA  EC1A  F030         	call	___lldiv	;wreg free
 23812  002CEE  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23813  002CF2  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23814  002CF6  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23815  002CFA  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23816  002CFE  0101               	movlb	1	; () banked
 23817  002D00  5191               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23818  002D02  EC75  F036         	call	_SwTimerSetTimeout
 23819                           
 23820                           ; BSR set to: 0
 23821                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23822  002D06  0101               	movlb	1	; () banked
 23823  002D08  5191               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23824  002D0A  EC58  F02E         	call	_SwTimerStart
 23825  002D0E                     l12808:
 23826                           
 23827                           ;radio_driver_SX1276.c: 939: }
 23828                           ;radio_driver_SX1276.c: 940: }
 23829                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 23830  002D0E  0101               	movlb	1	; () banked
 23831  002D10  5193               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23832  002D12  1194               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23833  002D14  1195               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23834  002D16  1196               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23835  002D18  E059               	bz	l12820
 23836                           
 23837                           ; BSR set to: 1
 23838                           ;radio_driver_SX1276.c: 943: {
 23839                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 23840  002D1A  5196               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23841  002D1C  E106               	bnz	u13820
 23842  002D1E  2993               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23843  002D20  0EFF               	movlw	255
 23844  002D22  5994               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23845  002D24  0E0F               	movlw	15
 23846  002D26  5995               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23847  002D28  E319               	bnc	l12814
 23848  002D2A                     u13820:
 23849                           
 23850                           ; BSR set to: 1
 23851  002D2A  C193  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 23852  002D2E  C194  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23853  002D32  C195  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23854  002D36  C196  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23855  002D3A  0E7D               	movlw	125
 23856  002D3C  0100               	movlb	0	; () banked
 23857  002D3E  6F68               	movwf	___lldiv@divisor& (0+255),b
 23858  002D40  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23859  002D42  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23860  002D44  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23861  002D46  EC1A  F030         	call	___lldiv	;wreg free
 23862  002D4A  0E0C               	movlw	12
 23863  002D4C                     u13835:
 23864  002D4C  90D8               	bcf	status,0,c
 23865  002D4E  3764               	rlcf	?___lldiv& (0+255),f,b
 23866  002D50  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23867  002D52  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23868  002D54  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23869  002D56  2EE8               	decfsz	wreg,f,c
 23870  002D58  D7F9               	goto	u13835
 23871  002D5A  D020               	goto	L14
 23872  002D5C                     l12814:
 23873                           
 23874                           ; BSR set to: 1
 23875  002D5C  C193  F098         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23876  002D60  C194  F099         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23877  002D64  C195  F09A         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23878  002D68  C196  F09B         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23879  002D6C  0E0C               	movlw	12
 23880  002D6E                     u13845:
 23881  002D6E  90D8               	bcf	status,0,c
 23882  002D70  0100               	movlb	0	; () banked
 23883  002D72  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23884  002D74  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23885  002D76  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23886  002D78  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23887  002D7A  2EE8               	decfsz	wreg,f,c
 23888  002D7C  D7F8               	goto	u13845
 23889  002D7E  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23890  002D82  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23891  002D86  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23892  002D8A  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23893  002D8E  0E7D               	movlw	125
 23894  002D90  6F68               	movwf	___lldiv@divisor& (0+255),b
 23895  002D92  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23896  002D94  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23897  002D96  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23898  002D98  EC1A  F030         	call	___lldiv	;wreg free
 23899  002D9C                     L14:
 23900  002D9C  C064  F09C         	movff	?___lldiv,_RADIO_ReceiveStart$1199
 23901  002DA0  C065  F09D         	movff	?___lldiv+1,_RADIO_ReceiveStart$1199+1
 23902  002DA4  C066  F09E         	movff	?___lldiv+2,_RADIO_ReceiveStart$1199+2
 23903  002DA8  C067  F09F         	movff	?___lldiv+3,_RADIO_ReceiveStart$1199+3
 23904                           
 23905                           ; BSR set to: 0
 23906  002DAC  C09C  F071         	movff	_RADIO_ReceiveStart$1199,SwTimerSetTimeout@timeout
 23907  002DB0  C09D  F072         	movff	_RADIO_ReceiveStart$1199+1,SwTimerSetTimeout@timeout+1
 23908  002DB4  C09E  F073         	movff	_RADIO_ReceiveStart$1199+2,SwTimerSetTimeout@timeout+2
 23909  002DB8  C09F  F074         	movff	_RADIO_ReceiveStart$1199+3,SwTimerSetTimeout@timeout+3
 23910  002DBC  0101               	movlb	1	; () banked
 23911  002DBE  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23912  002DC0  EC75  F036         	call	_SwTimerSetTimeout
 23913                           
 23914                           ; BSR set to: 0
 23915                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23916  002DC4  0101               	movlb	1	; () banked
 23917  002DC6  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23918  002DC8  EC58  F02E         	call	_SwTimerStart
 23919  002DCC                     l12820:
 23920                           
 23921                           ;radio_driver_SX1276.c: 946: }
 23922                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 23923  002DCC  0100               	movlb	0	; () banked
 23924  002DCE  6B96               	clrf	?_RADIO_ReceiveStart& (0+255),b
 23925  002DD0  6B97               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23926                           
 23927                           ; BSR set to: 0
 23928  002DD2  0012               	return		;funcret
 23929  002DD4                     __end_of_RADIO_ReceiveStart:
 23930                           	opt stack 0
 23931                           tosu	equ	0xFFF
 23932                           tosh	equ	0xFFE
 23933                           tosl	equ	0xFFD
 23934                           pclath	equ	0xFFA
 23935                           tblptru	equ	0xFF8
 23936                           tblptrh	equ	0xFF7
 23937                           tblptrl	equ	0xFF6
 23938                           tablat	equ	0xFF5
 23939                           prodh	equ	0xFF4
 23940                           prodl	equ	0xFF3
 23941                           intcon	equ	0xFF2
 23942                           intcon2	equ	0xFF1
 23943                           intcon3	equ	0xFF0
 23944                           indf0	equ	0xFEF
 23945                           postinc0	equ	0xFEE
 23946                           fsr0h	equ	0xFEA
 23947                           fsr0l	equ	0xFE9
 23948                           wreg	equ	0xFE8
 23949                           postinc1	equ	0xFE6
 23950                           postdec1	equ	0xFE5
 23951                           plusw1	equ	0xFE3
 23952                           fsr1h	equ	0xFE2
 23953                           fsr1l	equ	0xFE1
 23954                           indf2	equ	0xFDF
 23955                           postinc2	equ	0xFDE
 23956                           postdec2	equ	0xFDD
 23957                           plusw2	equ	0xFDB
 23958                           fsr2h	equ	0xFDA
 23959                           fsr2l	equ	0xFD9
 23960                           status	equ	0xFD8
 23961                           
 23962 ;; *************** function _ConfigureRadioRx *****************
 23963 ;; Defined at:
 23964 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23965 ;; Parameters:    Size  Location     Type
 23966 ;;  dataRate        1    wreg     unsigned char 
 23967 ;;  freq            4   22[BANK0 ] unsigned long 
 23968 ;; Auto vars:     Size  Location     Type
 23969 ;;  dataRate        1   26[BANK0 ] unsigned char 
 23970 ;; Return value:  Size  Location     Type
 23971 ;;                  1    wreg      void 
 23972 ;; Registers used:
 23973 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23974 ;; Tracked objects:
 23975 ;;		On entry : F/2
 23976 ;;		On exit  : 0/0
 23977 ;;		Unchanged: 0/0
 23978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23983 ;;Total ram usage:        5 bytes
 23984 ;; Hardware stack levels used:    1
 23985 ;; Hardware stack levels required when called:   10
 23986 ;; This function calls:
 23987 ;;		_ConfigureRadio
 23988 ;;		_RADIO_SetCRC
 23989 ;;		_RADIO_SetIQInverted
 23990 ;; This function is called by:
 23991 ;;		_LORAWAN_ReceiveWindow1Callback
 23992 ;;		_LORAWAN_ReceiveWindow2Callback
 23993 ;;		_LORAWAN_EnterContinuousReceive
 23994 ;; This function uses a non-reentrant model
 23995 ;;
 23996                           
 23997                           	psect	text124
 23998  00730A                     __ptext124:
 23999                           	opt stack 0
 24000  00730A                     _ConfigureRadioRx:
 24001                           	opt stack 15
 24002                           
 24003                           ; BSR set to: 0
 24004                           ;incstack = 0
 24005                           ;ConfigureRadioRx@dataRate stored from wreg
 24006  00730A  0100               	movlb	0	; () banked
 24007  00730C  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 24008                           
 24009                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 24010  00730E  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 24011  007312  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 24012  007316  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 24013  00731A  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 24014  00731E  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 24015  007320  ECCB  F02D         	call	_ConfigureRadio
 24016                           
 24017                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 24018  007324  0E00               	movlw	0
 24019  007326  EC3E  F03C         	call	_RADIO_SetCRC
 24020                           
 24021                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 24022  00732A  0E01               	movlw	1
 24023  00732C  EF39  F03C         	goto	_RADIO_SetIQInverted
 24024  007330                     __end_of_ConfigureRadioRx:
 24025                           	opt stack 0
 24026                           tosu	equ	0xFFF
 24027                           tosh	equ	0xFFE
 24028                           tosl	equ	0xFFD
 24029                           pclath	equ	0xFFA
 24030                           tblptru	equ	0xFF8
 24031                           tblptrh	equ	0xFF7
 24032                           tblptrl	equ	0xFF6
 24033                           tablat	equ	0xFF5
 24034                           prodh	equ	0xFF4
 24035                           prodl	equ	0xFF3
 24036                           intcon	equ	0xFF2
 24037                           intcon2	equ	0xFF1
 24038                           intcon3	equ	0xFF0
 24039                           indf0	equ	0xFEF
 24040                           postinc0	equ	0xFEE
 24041                           fsr0h	equ	0xFEA
 24042                           fsr0l	equ	0xFE9
 24043                           wreg	equ	0xFE8
 24044                           postinc1	equ	0xFE6
 24045                           postdec1	equ	0xFE5
 24046                           plusw1	equ	0xFE3
 24047                           fsr1h	equ	0xFE2
 24048                           fsr1l	equ	0xFE1
 24049                           indf2	equ	0xFDF
 24050                           postinc2	equ	0xFDE
 24051                           postdec2	equ	0xFDD
 24052                           plusw2	equ	0xFDB
 24053                           fsr2h	equ	0xFDA
 24054                           fsr2l	equ	0xFD9
 24055                           status	equ	0xFD8
 24056                           
 24057 ;; *************** function _INTERRUPT_GetDioStatus *****************
 24058 ;; Defined at:
 24059 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 24060 ;; Parameters:    Size  Location     Type
 24061 ;;		None
 24062 ;; Auto vars:     Size  Location     Type
 24063 ;;  a               1    4[BANK0 ] unsigned char 
 24064 ;; Return value:  Size  Location     Type
 24065 ;;                  1    wreg      unsigned char 
 24066 ;; Registers used:
 24067 ;;		wreg, status,2
 24068 ;; Tracked objects:
 24069 ;;		On entry : F/0
 24070 ;;		On exit  : F/0
 24071 ;;		Unchanged: 0/0
 24072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24076 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24077 ;;Total ram usage:        1 bytes
 24078 ;; Hardware stack levels used:    1
 24079 ;; Hardware stack levels required when called:    7
 24080 ;; This function calls:
 24081 ;;		Nothing
 24082 ;; This function is called by:
 24083 ;;		_LORAWAN_Mainloop
 24084 ;; This function uses a non-reentrant model
 24085 ;;
 24086                           
 24087                           	psect	text125
 24088  0077A8                     __ptext125:
 24089                           	opt stack 0
 24090  0077A8                     _INTERRUPT_GetDioStatus:
 24091                           	opt stack 22
 24092                           
 24093                           ; BSR set to: 0
 24094                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 24095                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 24096                           
 24097                           ;incstack = 0
 24098  0077A8  9EF2               	bcf	intcon,7,c	;volatile
 24099                           
 24100                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 24101  0077AA  C0F0  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 24102                           
 24103                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 24104  0077AE  6BF0               	clrf	_dioStatus& (0+255),b	;volatile
 24105                           
 24106                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 24107  0077B0  8EF2               	bsf	intcon,7,c	;volatile
 24108                           
 24109                           ; BSR set to: 0
 24110                           ;interrupt_manager_lora_addons.c: 55: return a;
 24111  0077B2  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 24112                           
 24113                           ; BSR set to: 0
 24114  0077B4  0012               	return		;funcret
 24115  0077B6                     __end_of_INTERRUPT_GetDioStatus:
 24116                           	opt stack 0
 24117                           tosu	equ	0xFFF
 24118                           tosh	equ	0xFFE
 24119                           tosl	equ	0xFFD
 24120                           pclath	equ	0xFFA
 24121                           tblptru	equ	0xFF8
 24122                           tblptrh	equ	0xFF7
 24123                           tblptrl	equ	0xFF6
 24124                           tablat	equ	0xFF5
 24125                           prodh	equ	0xFF4
 24126                           prodl	equ	0xFF3
 24127                           intcon	equ	0xFF2
 24128                           intcon2	equ	0xFF1
 24129                           intcon3	equ	0xFF0
 24130                           indf0	equ	0xFEF
 24131                           postinc0	equ	0xFEE
 24132                           fsr0h	equ	0xFEA
 24133                           fsr0l	equ	0xFE9
 24134                           wreg	equ	0xFE8
 24135                           postinc1	equ	0xFE6
 24136                           postdec1	equ	0xFE5
 24137                           plusw1	equ	0xFE3
 24138                           fsr1h	equ	0xFE2
 24139                           fsr1l	equ	0xFE1
 24140                           indf2	equ	0xFDF
 24141                           postinc2	equ	0xFDE
 24142                           postdec2	equ	0xFDD
 24143                           plusw2	equ	0xFDB
 24144                           fsr2h	equ	0xFDA
 24145                           fsr2l	equ	0xFD9
 24146                           status	equ	0xFD8
 24147                           
 24148 ;; *************** function _LORAWAN_Join *****************
 24149 ;; Defined at:
 24150 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24151 ;; Parameters:    Size  Location     Type
 24152 ;;  activationTy    1    wreg     enum E7980
 24153 ;; Auto vars:     Size  Location     Type
 24154 ;;  activationTy    1  126[BANK0 ] enum E7980
 24155 ;;  result          1  125[BANK0 ] enum E7957
 24156 ;;  bufferIndex     1  124[BANK0 ] unsigned char 
 24157 ;; Return value:  Size  Location     Type
 24158 ;;                  1    wreg      enum E7957
 24159 ;; Registers used:
 24160 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24161 ;; Tracked objects:
 24162 ;;		On entry : F/2
 24163 ;;		On exit  : D/0
 24164 ;;		Unchanged: 0/0
 24165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24167 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24169 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24170 ;;Total ram usage:        3 bytes
 24171 ;; Hardware stack levels used:    1
 24172 ;; Hardware stack levels required when called:   14
 24173 ;; This function calls:
 24174 ;;		_PrepareJoinRequestFrame
 24175 ;;		_RADIO_Transmit
 24176 ;;		_SelectChannelForTransmission
 24177 ;;		_SwTimerSetTimeout
 24178 ;;		_SwTimerStart
 24179 ;;		_UpdateJoinInProgress
 24180 ;; This function is called by:
 24181 ;;		_main
 24182 ;; This function uses a non-reentrant model
 24183 ;;
 24184                           
 24185                           	psect	text126
 24186  005C24                     __ptext126:
 24187                           	opt stack 0
 24188  005C24                     _LORAWAN_Join:
 24189                           	opt stack 16
 24190                           
 24191                           ; BSR set to: 0
 24192                           ;incstack = 0
 24193                           ;LORAWAN_Join@activationTypeNew stored from wreg
 24194  005C24  0100               	movlb	0	; () banked
 24195  005C26  6FDE               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 24196                           
 24197                           ;lorawan.c: 117: uint8_t bufferIndex;
 24198                           ;lorawan.c: 118: LorawanError_t result;
 24199                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 24200  005C28  0102               	movlb	2	; () banked
 24201  005C2A  A103               	btfss	(_loRa+3)& (0+255),0,b
 24202                           
 24203                           ; BSR set to: 2
 24204                           ;lorawan.c: 123: }
 24205                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 24206  005C2C  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 24207  005C2E  0012               	return	
 24208                           
 24209                           ; BSR set to: 2
 24210                           ;lorawan.c: 128: }
 24211                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 24212  005C30  5102               	movf	(_loRa+2)& (0+255),w,b
 24213  005C32  0B0F               	andlw	15
 24214  005C34  E001               	bz	l1717
 24215  005C36  0012               	return	
 24216  005C38                     l1717:
 24217                           
 24218                           ; BSR set to: 2
 24219                           ;lorawan.c: 133: }
 24220                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 24221  005C38  C0DE  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 24222                           
 24223                           ; BSR set to: 2
 24224                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 24225  005C3C  0100               	movlb	0	; () banked
 24226  005C3E  51DE               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 24227  005C40  E11F               	bnz	l1718
 24228                           
 24229                           ; BSR set to: 0
 24230                           ;lorawan.c: 138: {
 24231                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 24232  005C42  0102               	movlb	2	; () banked
 24233  005C44  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 24234                           
 24235                           ; BSR set to: 2
 24236  005C46  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 24237  005C48  0012               	return	
 24238                           
 24239                           ; BSR set to: 2
 24240  005C4A  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 24241  005C4C  0012               	return	
 24242                           
 24243                           ; BSR set to: 2
 24244                           ;lorawan.c: 144: else
 24245                           ;lorawan.c: 145: {
 24246                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 24247  005C4E  EC28  F023         	call	_PrepareJoinRequestFrame	;wreg free
 24248  005C52  6FDC               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 24249                           
 24250                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 24251  005C54  0E00               	movlw	0
 24252  005C56  EC2C  F033         	call	_SelectChannelForTransmission
 24253  005C5A  6FDD               	movwf	LORAWAN_Join@result& (0+255),b
 24254                           
 24255                           ; BSR set to: 0
 24256                           ;lorawan.c: 149: if (result == OK)
 24257  005C5C  51DD               	movf	LORAWAN_Join@result& (0+255),w,b
 24258  005C5E  A4D8               	btfss	status,2,c
 24259  005C60  0012               	return	
 24260                           
 24261                           ; BSR set to: 0
 24262                           ;lorawan.c: 150: {
 24263                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 24264  005C62  0EE0               	movlw	low _macBuffer
 24265  005C64  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 24266  005C66  0E04               	movlw	high _macBuffer
 24267  005C68  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24268  005C6A  C0DC  F098         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 24269  005C6E  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 24270  005C72  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 24271  005C74  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 24272  005C76  A4D8               	btfss	status,2,c
 24273  005C78  0012               	return	
 24274                           
 24275                           ; BSR set to: 0
 24276                           ;lorawan.c: 152: {
 24277                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 24278  005C7A  0E01               	movlw	1
 24279  005C7C  EF19  F03B         	goto	_UpdateJoinInProgress
 24280  005C80                     l1718:
 24281                           
 24282                           ; BSR set to: 0
 24283                           ;lorawan.c: 167: else
 24284                           ;lorawan.c: 168: {
 24285                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 24286  005C80  0102               	movlb	2	; () banked
 24287  005C82  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 24288                           
 24289                           ; BSR set to: 2
 24290  005C84  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 24291  005C86  0012               	return	
 24292                           
 24293                           ; BSR set to: 2
 24294  005C88  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 24295  005C8A  0012               	return	
 24296                           
 24297                           ; BSR set to: 2
 24298                           ;lorawan.c: 174: else
 24299                           ;lorawan.c: 175: {
 24300                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 24301  005C8C  0E07               	movlw	7
 24302  005C8E  EC19  F03B         	call	_UpdateJoinInProgress
 24303                           
 24304                           ; BSR set to: 2
 24305                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 24306  005C92  0E8F               	movlw	143
 24307  005C94  0100               	movlb	0	; () banked
 24308  005C96  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 24309  005C98  0E02               	movlw	2
 24310  005C9A  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 24311  005C9C  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 24312  005C9E  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 24313  005CA0  0102               	movlb	2	; () banked
 24314  005CA2  51F3               	movf	(_loRa+243)& (0+255),w,b
 24315  005CA4  EC75  F036         	call	_SwTimerSetTimeout
 24316                           
 24317                           ; BSR set to: 0
 24318                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 24319  005CA8  0102               	movlb	2	; () banked
 24320  005CAA  51F3               	movf	(_loRa+243)& (0+255),w,b
 24321  005CAC  EF58  F02E         	goto	_SwTimerStart
 24322  005CB0                     __end_of_LORAWAN_Join:
 24323                           	opt stack 0
 24324                           tosu	equ	0xFFF
 24325                           tosh	equ	0xFFE
 24326                           tosl	equ	0xFFD
 24327                           pclath	equ	0xFFA
 24328                           tblptru	equ	0xFF8
 24329                           tblptrh	equ	0xFF7
 24330                           tblptrl	equ	0xFF6
 24331                           tablat	equ	0xFF5
 24332                           prodh	equ	0xFF4
 24333                           prodl	equ	0xFF3
 24334                           intcon	equ	0xFF2
 24335                           intcon2	equ	0xFF1
 24336                           intcon3	equ	0xFF0
 24337                           indf0	equ	0xFEF
 24338                           postinc0	equ	0xFEE
 24339                           fsr0h	equ	0xFEA
 24340                           fsr0l	equ	0xFE9
 24341                           wreg	equ	0xFE8
 24342                           postinc1	equ	0xFE6
 24343                           postdec1	equ	0xFE5
 24344                           plusw1	equ	0xFE3
 24345                           fsr1h	equ	0xFE2
 24346                           fsr1l	equ	0xFE1
 24347                           indf2	equ	0xFDF
 24348                           postinc2	equ	0xFDE
 24349                           postdec2	equ	0xFDD
 24350                           plusw2	equ	0xFDB
 24351                           fsr2h	equ	0xFDA
 24352                           fsr2l	equ	0xFD9
 24353                           status	equ	0xFD8
 24354                           
 24355 ;; *************** function _UpdateJoinInProgress *****************
 24356 ;; Defined at:
 24357 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24358 ;; Parameters:    Size  Location     Type
 24359 ;;  state           1    wreg     unsigned char 
 24360 ;; Auto vars:     Size  Location     Type
 24361 ;;  state           1    4[BANK0 ] unsigned char 
 24362 ;; Return value:  Size  Location     Type
 24363 ;;                  1    wreg      void 
 24364 ;; Registers used:
 24365 ;;		wreg, status,2, status,0
 24366 ;; Tracked objects:
 24367 ;;		On entry : D/0
 24368 ;;		On exit  : F/2
 24369 ;;		Unchanged: 0/0
 24370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24375 ;;Total ram usage:        1 bytes
 24376 ;; Hardware stack levels used:    1
 24377 ;; Hardware stack levels required when called:    7
 24378 ;; This function calls:
 24379 ;;		Nothing
 24380 ;; This function is called by:
 24381 ;;		_LORAWAN_Join
 24382 ;; This function uses a non-reentrant model
 24383 ;;
 24384                           
 24385                           	psect	text127
 24386  007632                     __ptext127:
 24387                           	opt stack 0
 24388  007632                     _UpdateJoinInProgress:
 24389                           	opt stack 22
 24390                           
 24391                           ;incstack = 0
 24392                           ;UpdateJoinInProgress@state stored from wreg
 24393  007632  0100               	movlb	0	; () banked
 24394  007634  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 24395                           
 24396                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24397  007636  0102               	movlb	2	; () banked
 24398  007638  9902               	bcf	(_loRa+2)& (0+255),4,b
 24399                           
 24400                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24401  00763A  8500               	bsf	_loRa& (0+255),2,b
 24402                           
 24403                           ; BSR set to: 2
 24404                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24405  00763C  5102               	movf	(_loRa+2)& (0+255),w,b
 24406  00763E  0100               	movlb	0	; () banked
 24407  007640  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24408  007642  0BF0               	andlw	-16
 24409  007644  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24410  007646  0102               	movlb	2	; () banked
 24411  007648  6F02               	movwf	(_loRa+2)& (0+255),b
 24412                           
 24413                           ; BSR set to: 2
 24414  00764A  0012               	return		;funcret
 24415  00764C                     __end_of_UpdateJoinInProgress:
 24416                           	opt stack 0
 24417                           tosu	equ	0xFFF
 24418                           tosh	equ	0xFFE
 24419                           tosl	equ	0xFFD
 24420                           pclath	equ	0xFFA
 24421                           tblptru	equ	0xFF8
 24422                           tblptrh	equ	0xFF7
 24423                           tblptrl	equ	0xFF6
 24424                           tablat	equ	0xFF5
 24425                           prodh	equ	0xFF4
 24426                           prodl	equ	0xFF3
 24427                           intcon	equ	0xFF2
 24428                           intcon2	equ	0xFF1
 24429                           intcon3	equ	0xFF0
 24430                           indf0	equ	0xFEF
 24431                           postinc0	equ	0xFEE
 24432                           fsr0h	equ	0xFEA
 24433                           fsr0l	equ	0xFE9
 24434                           wreg	equ	0xFE8
 24435                           postinc1	equ	0xFE6
 24436                           postdec1	equ	0xFE5
 24437                           plusw1	equ	0xFE3
 24438                           fsr1h	equ	0xFE2
 24439                           fsr1l	equ	0xFE1
 24440                           indf2	equ	0xFDF
 24441                           postinc2	equ	0xFDE
 24442                           postdec2	equ	0xFDD
 24443                           plusw2	equ	0xFDB
 24444                           fsr2h	equ	0xFDA
 24445                           fsr2l	equ	0xFD9
 24446                           status	equ	0xFD8
 24447                           
 24448 ;; *************** function _SelectChannelForTransmission *****************
 24449 ;; Defined at:
 24450 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24451 ;; Parameters:    Size  Location     Type
 24452 ;;  transmission    1    wreg     unsigned char 
 24453 ;; Auto vars:     Size  Location     Type
 24454 ;;  transmission    1   37[BANK0 ] unsigned char 
 24455 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 24456 ;;  result          1   38[BANK0 ] enum E8016
 24457 ;; Return value:  Size  Location     Type
 24458 ;;                  1    wreg      enum E8016
 24459 ;; Registers used:
 24460 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24461 ;; Tracked objects:
 24462 ;;		On entry : 0/0
 24463 ;;		On exit  : F/0
 24464 ;;		Unchanged: 0/0
 24465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24467 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24469 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24470 ;;Total ram usage:        3 bytes
 24471 ;; Hardware stack levels used:    1
 24472 ;; Hardware stack levels required when called:   11
 24473 ;; This function calls:
 24474 ;;		_ConfigureRadioTx
 24475 ;;		_SearchAvailableChannel
 24476 ;; This function is called by:
 24477 ;;		_LORAWAN_RxTimeout
 24478 ;;		_LORAWAN_Join
 24479 ;;		_LORAWAN_Send
 24480 ;;		_AckRetransmissionCallback
 24481 ;;		_UnconfirmedTransmissionCallback
 24482 ;; This function uses a non-reentrant model
 24483 ;;
 24484                           
 24485                           	psect	text128
 24486  006658                     __ptext128:
 24487                           	opt stack 0
 24488  006658                     _SelectChannelForTransmission:
 24489                           	opt stack 17
 24490                           
 24491                           ; BSR set to: 2
 24492                           ;incstack = 0
 24493                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24494  006658  0100               	movlb	0	; () banked
 24495  00665A  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24496                           
 24497                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 24498                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 24499  00665C  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24500  006660  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 24501  006662  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24502  006664  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24503  006666  0E10               	movlw	16
 24504  006668  EC90  F027         	call	_SearchAvailableChannel
 24505  00666C  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 24506                           
 24507                           ; BSR set to: 0
 24508                           ;lorawan_eu.c: 926: if (result == OK)
 24509  00666E  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24510  006670  E120               	bnz	l13476
 24511                           
 24512                           ; BSR set to: 0
 24513                           ;lorawan_eu.c: 927: {
 24514                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 24515  006672  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 24516                           
 24517                           ; BSR set to: 0
 24518                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 24519  006676  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24520  006678  0D0E               	mullw	14
 24521  00667A  0E00               	movlw	low _Channels
 24522  00667C  24F3               	addwf	prodl,w,c
 24523  00667E  6ED9               	movwf	fsr2l,c
 24524  006680  0E04               	movlw	high _Channels
 24525  006682  20F4               	addwfc	prodh,w,c
 24526  006684  6EDA               	movwf	fsr2h,c
 24527  006686  CFDE F213          	movff	postinc2,_loRa+19
 24528  00668A  CFDE F214          	movff	postinc2,_loRa+20
 24529  00668E  CFDE F215          	movff	postinc2,_loRa+21
 24530  006692  CFDE F216          	movff	postinc2,_loRa+22
 24531                           
 24532                           ; BSR set to: 0
 24533                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 24534  006696  C2DF  F217         	movff	_loRa+223,_loRa+23
 24535                           
 24536                           ; BSR set to: 0
 24537                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 24538  00669A  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 24539  00669E  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 24540  0066A2  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 24541  0066A6  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 24542  0066AA  0102               	movlb	2	; () banked
 24543  0066AC  5117               	movf	(_loRa+23)& (0+255),w,b
 24544  0066AE  EC0F  F036         	call	_ConfigureRadioTx
 24545  0066B2                     l13476:
 24546                           
 24547                           ;lorawan_eu.c: 933: }
 24548                           ;lorawan_eu.c: 934: return result;
 24549  0066B2  0100               	movlb	0	; () banked
 24550  0066B4  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24551                           
 24552                           ; BSR set to: 0
 24553  0066B6  0012               	return		;funcret
 24554  0066B8                     __end_of_SelectChannelForTransmission:
 24555                           	opt stack 0
 24556                           tosu	equ	0xFFF
 24557                           tosh	equ	0xFFE
 24558                           tosl	equ	0xFFD
 24559                           pclath	equ	0xFFA
 24560                           tblptru	equ	0xFF8
 24561                           tblptrh	equ	0xFF7
 24562                           tblptrl	equ	0xFF6
 24563                           tablat	equ	0xFF5
 24564                           prodh	equ	0xFF4
 24565                           prodl	equ	0xFF3
 24566                           intcon	equ	0xFF2
 24567                           intcon2	equ	0xFF1
 24568                           intcon3	equ	0xFF0
 24569                           indf0	equ	0xFEF
 24570                           postinc0	equ	0xFEE
 24571                           fsr0h	equ	0xFEA
 24572                           fsr0l	equ	0xFE9
 24573                           wreg	equ	0xFE8
 24574                           postinc1	equ	0xFE6
 24575                           postdec1	equ	0xFE5
 24576                           plusw1	equ	0xFE3
 24577                           fsr1h	equ	0xFE2
 24578                           fsr1l	equ	0xFE1
 24579                           indf2	equ	0xFDF
 24580                           postinc2	equ	0xFDE
 24581                           postdec2	equ	0xFDD
 24582                           plusw2	equ	0xFDB
 24583                           fsr2h	equ	0xFDA
 24584                           fsr2l	equ	0xFD9
 24585                           status	equ	0xFD8
 24586                           
 24587 ;; *************** function _SearchAvailableChannel *****************
 24588 ;; Defined at:
 24589 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24590 ;; Parameters:    Size  Location     Type
 24591 ;;  maxChannels     1    wreg     unsigned char 
 24592 ;;  transmission    1   25[BANK0 ] unsigned char 
 24593 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 24594 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24595 ;; Auto vars:     Size  Location     Type
 24596 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 24597 ;;  i               1   36[BANK0 ] unsigned char 
 24598 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 24599 ;;  result          1   33[BANK0 ] enum E8016
 24600 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 24601 ;; Return value:  Size  Location     Type
 24602 ;;                  1    wreg      enum E8016
 24603 ;; Registers used:
 24604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24605 ;; Tracked objects:
 24606 ;;		On entry : D/2
 24607 ;;		On exit  : F/0
 24608 ;;		Unchanged: 0/0
 24609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24610 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24611 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24612 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24613 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24614 ;;Total ram usage:       12 bytes
 24615 ;; Hardware stack levels used:    1
 24616 ;; Hardware stack levels required when called:   10
 24617 ;; This function calls:
 24618 ;;		_Random
 24619 ;; This function is called by:
 24620 ;;		_SelectChannelForTransmission
 24621 ;;		_LORAWAN_RxDone
 24622 ;; This function uses a non-reentrant model
 24623 ;;
 24624                           
 24625                           	psect	text129
 24626  004F20                     __ptext129:
 24627                           	opt stack 0
 24628  004F20                     _SearchAvailableChannel:
 24629                           	opt stack 17
 24630                           
 24631                           ; BSR set to: 0
 24632                           ;incstack = 0
 24633                           ;SearchAvailableChannel@maxChannels stored from wreg
 24634  004F20  0100               	movlb	0	; () banked
 24635  004F22  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24636                           
 24637                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 24638                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 24639  004F24  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 24640                           
 24641                           ; BSR set to: 0
 24642                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 24643  004F26  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 24644  004F2A  6B78               	clrf	(Random@max+1)& (0+255),b
 24645  004F2C  ECF1  F039         	call	_Random	;wreg free
 24646  004F30  2977               	incf	?_Random& (0+255),w,b
 24647  004F32  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24648                           
 24649                           ; BSR set to: 0
 24650                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 24651  004F34  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24652                           
 24653                           ;lorawan_eu.c: 786: while (randomNumber)
 24654  004F38  D054               	goto	l13020
 24655  004F3A                     l1133:
 24656                           
 24657                           ; BSR set to: 0
 24658                           ;lorawan_eu.c: 787: {
 24659                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 24660  004F3A  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 24661  004F3C  D047               	goto	l13012
 24662  004F3E                     l12996:
 24663                           
 24664                           ; BSR set to: 0
 24665                           ;lorawan_eu.c: 789: {
 24666                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 24667  004F3E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24668  004F40  0D0E               	mullw	14
 24669  004F42  0E04               	movlw	low (_Channels+4)
 24670  004F44  24F3               	addwf	prodl,w,c
 24671  004F46  6ED9               	movwf	fsr2l,c
 24672  004F48  0E04               	movlw	high (_Channels+4)
 24673  004F4A  20F4               	addwfc	prodh,w,c
 24674  004F4C  6EDA               	movwf	fsr2h,c
 24675  004F4E  04DE               	decf	postinc2,w,c
 24676  004F50  E13B               	bnz	l1136
 24677                           
 24678                           ; BSR set to: 0
 24679  004F52  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24680  004F54  0D0E               	mullw	14
 24681  004F56  0E08               	movlw	low (_Channels+8)
 24682  004F58  24F3               	addwf	prodl,w,c
 24683  004F5A  6ED9               	movwf	fsr2l,c
 24684  004F5C  0E04               	movlw	high (_Channels+8)
 24685  004F5E  20F4               	addwfc	prodh,w,c
 24686  004F60  6EDA               	movwf	fsr2h,c
 24687  004F62  50DE               	movf	postinc2,w,c
 24688  004F64  10DE               	iorwf	postinc2,w,c
 24689  004F66  10DE               	iorwf	postinc2,w,c
 24690  004F68  10DE               	iorwf	postinc2,w,c
 24691  004F6A  E12E               	bnz	l1136
 24692                           
 24693                           ; BSR set to: 0
 24694  004F6C  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24695  004F6E  0D0E               	mullw	14
 24696  004F70  0E05               	movlw	low (_Channels+5)
 24697  004F72  24F3               	addwf	prodl,w,c
 24698  004F74  6ED9               	movwf	fsr2l,c
 24699  004F76  0E04               	movlw	high (_Channels+5)
 24700  004F78  20F4               	addwfc	prodh,w,c
 24701  004F7A  6EDA               	movwf	fsr2h,c
 24702  004F7C  50DF               	movf	223,w,c
 24703  004F7E  0B0F               	andlw	15
 24704  004F80  0100               	movlb	0	; () banked
 24705  004F82  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24706  004F84  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 24707  004F86  0102               	movlb	2	; () banked
 24708  004F88  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 24709  004F8A  E31E               	bnc	l1136
 24710                           
 24711                           ; BSR set to: 2
 24712  004F8C  0100               	movlb	0	; () banked
 24713  004F8E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24714  004F90  0D0E               	mullw	14
 24715  004F92  0E05               	movlw	low (_Channels+5)
 24716  004F94  24F3               	addwf	prodl,w,c
 24717  004F96  6ED9               	movwf	fsr2l,c
 24718  004F98  0E04               	movlw	high (_Channels+5)
 24719  004F9A  20F4               	addwfc	prodh,w,c
 24720  004F9C  6EDA               	movwf	fsr2h,c
 24721  004F9E  38DF               	swapf	223,w,c
 24722  004FA0  0B0F               	andlw	15
 24723  004FA2  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24724  004FA4  0102               	movlb	2	; () banked
 24725  004FA6  51DF               	movf	(_loRa+223)& (0+255),w,b
 24726  004FA8  0100               	movlb	0	; () banked
 24727  004FAA  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24728  004FAC  E30D               	bnc	l1136
 24729                           
 24730                           ; BSR set to: 0
 24731                           ;lorawan_eu.c: 791: {
 24732                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 24733  004FAE  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 24734  004FB0  E10A               	bnz	l13008
 24735                           
 24736                           ; BSR set to: 0
 24737                           ;lorawan_eu.c: 793: {
 24738                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 24739  004FB2  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24740  004FB4  0D0E               	mullw	14
 24741  004FB6  0E0C               	movlw	low (_Channels+12)
 24742  004FB8  24F3               	addwf	prodl,w,c
 24743  004FBA  6ED9               	movwf	fsr2l,c
 24744  004FBC  0E04               	movlw	high (_Channels+12)
 24745  004FBE  20F4               	addwfc	prodh,w,c
 24746  004FC0  6EDA               	movwf	fsr2h,c
 24747  004FC2  04DE               	decf	postinc2,w,c
 24748  004FC4  E101               	bnz	l1136
 24749  004FC6                     l13008:
 24750                           
 24751                           ; BSR set to: 0
 24752                           ;lorawan_eu.c: 795: {
 24753                           ;lorawan_eu.c: 796: randomNumber --;
 24754  004FC6  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24755  004FC8                     l1136:
 24756  004FC8  0100               	movlb	0	; () banked
 24757  004FCA  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 24758  004FCC                     l13012:
 24759                           
 24760                           ; BSR set to: 0
 24761  004FCC  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24762  004FCE  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 24763  004FD0  E202               	bc	l13016
 24764                           
 24765                           ; BSR set to: 0
 24766  004FD2  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24767  004FD4  E1B4               	bnz	l12996
 24768  004FD6                     l13016:
 24769                           
 24770                           ; BSR set to: 0
 24771                           ;lorawan_eu.c: 802: }
 24772                           ;lorawan_eu.c: 803: }
 24773                           ;lorawan_eu.c: 804: }
 24774                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 24775  004FD6  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24776  004FD8  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24777  004FDA  E103               	bnz	l13020
 24778                           
 24779                           ; BSR set to: 0
 24780                           ;lorawan_eu.c: 807: {
 24781                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 24782  004FDC  0E09               	movlw	9
 24783  004FDE  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24784                           
 24785                           ;lorawan_eu.c: 809: break;
 24786  004FE0  D002               	goto	l13022
 24787  004FE2                     l13020:
 24788                           
 24789                           ; BSR set to: 0
 24790  004FE2  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24791  004FE4  E1AA               	bnz	l1133
 24792  004FE6                     l13022:
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;lorawan_eu.c: 810: }
 24796                           ;lorawan_eu.c: 811: }
 24797                           ;lorawan_eu.c: 813: if ( i != 0)
 24798  004FE6  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24799  004FE8  E007               	bz	l13026
 24800                           
 24801                           ; BSR set to: 0
 24802                           ;lorawan_eu.c: 814: {
 24803                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 24804  004FEA  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 24805  004FEC  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24806  004FF0  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24807  004FF4  6EDF               	movwf	indf2,c
 24808                           
 24809                           ;lorawan_eu.c: 816: }
 24810  004FF6  D002               	goto	l1146
 24811  004FF8                     l13026:
 24812                           
 24813                           ; BSR set to: 0
 24814                           ;lorawan_eu.c: 817: else
 24815                           ;lorawan_eu.c: 818: {
 24816                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 24817  004FF8  0E09               	movlw	9
 24818  004FFA  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24819  004FFC                     l1146:
 24820                           
 24821                           ; BSR set to: 0
 24822                           ;lorawan_eu.c: 820: }
 24823                           ;lorawan_eu.c: 821: return result;
 24824  004FFC  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 24825                           
 24826                           ; BSR set to: 0
 24827  004FFE  0012               	return		;funcret
 24828  005000                     __end_of_SearchAvailableChannel:
 24829                           	opt stack 0
 24830                           tosu	equ	0xFFF
 24831                           tosh	equ	0xFFE
 24832                           tosl	equ	0xFFD
 24833                           pclath	equ	0xFFA
 24834                           tblptru	equ	0xFF8
 24835                           tblptrh	equ	0xFF7
 24836                           tblptrl	equ	0xFF6
 24837                           tablat	equ	0xFF5
 24838                           prodh	equ	0xFF4
 24839                           prodl	equ	0xFF3
 24840                           intcon	equ	0xFF2
 24841                           intcon2	equ	0xFF1
 24842                           intcon3	equ	0xFF0
 24843                           indf0	equ	0xFEF
 24844                           postinc0	equ	0xFEE
 24845                           fsr0h	equ	0xFEA
 24846                           fsr0l	equ	0xFE9
 24847                           wreg	equ	0xFE8
 24848                           postinc1	equ	0xFE6
 24849                           postdec1	equ	0xFE5
 24850                           plusw1	equ	0xFE3
 24851                           fsr1h	equ	0xFE2
 24852                           fsr1l	equ	0xFE1
 24853                           indf2	equ	0xFDF
 24854                           postinc2	equ	0xFDE
 24855                           postdec2	equ	0xFDD
 24856                           plusw2	equ	0xFDB
 24857                           fsr2h	equ	0xFDA
 24858                           fsr2l	equ	0xFD9
 24859                           status	equ	0xFD8
 24860                           
 24861 ;; *************** function _ConfigureRadioTx *****************
 24862 ;; Defined at:
 24863 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24864 ;; Parameters:    Size  Location     Type
 24865 ;;  dataRate        1    wreg     unsigned char 
 24866 ;;  freq            4   22[BANK0 ] unsigned long 
 24867 ;; Auto vars:     Size  Location     Type
 24868 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24869 ;;  txPower         1   27[BANK0 ] char 
 24870 ;; Return value:  Size  Location     Type
 24871 ;;                  1    wreg      void 
 24872 ;; Registers used:
 24873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24874 ;; Tracked objects:
 24875 ;;		On entry : F/2
 24876 ;;		On exit  : 0/0
 24877 ;;		Unchanged: 0/0
 24878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24879 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24882 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24883 ;;Total ram usage:        6 bytes
 24884 ;; Hardware stack levels used:    1
 24885 ;; Hardware stack levels required when called:   10
 24886 ;; This function calls:
 24887 ;;		_ConfigureRadio
 24888 ;;		_RADIO_SetCRC
 24889 ;;		_RADIO_SetIQInverted
 24890 ;;		_RADIO_SetOutputPower
 24891 ;; This function is called by:
 24892 ;;		_SelectChannelForTransmission
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           	psect	text130
 24897  006C1E                     __ptext130:
 24898                           	opt stack 0
 24899  006C1E                     _ConfigureRadioTx:
 24900                           	opt stack 17
 24901                           
 24902                           ; BSR set to: 0
 24903                           ;incstack = 0
 24904                           ;ConfigureRadioTx@dataRate stored from wreg
 24905  006C1E  0100               	movlb	0	; () banked
 24906  006C20  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 24907                           
 24908                           ;lorawan_eu.c: 1257: int8_t txPower;
 24909                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 24910  006C22  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 24911  006C26  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 24912  006C2A  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 24913  006C2E  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 24914  006C32  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 24915  006C34  ECCB  F02D         	call	_ConfigureRadio
 24916                           
 24917                           ;lorawan_eu.c: 1262: {
 24918                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 24919  006C38  0EA2               	movlw	low _txPower868
 24920  006C3A  0102               	movlb	2	; () banked
 24921  006C3C  25E1               	addwf	(_loRa+225)& (0+255),w,b
 24922  006C3E  6EF6               	movwf	tblptrl,c
 24923  006C40  6AF7               	clrf	tblptrh,c
 24924  006C42  0EFF               	movlw	high _txPower868
 24925  006C44  22F7               	addwfc	tblptrh,f,c
 24926  006C46                     	if	1	;There are 3 active tblptr bytes
 24927  006C46  6AF8               	clrf	tblptru,c
 24928  006C48  0E00               	movlw	low (__mediumconst shr (0+16))
 24929  006C4A  22F8               	addwfc	tblptru,f,c
 24930  006C4C                     	endif
 24931  006C4C  0008               	tblrd		*
 24932  006C4E  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 24933                           
 24934                           ; BSR set to: 2
 24935                           ;lorawan_eu.c: 1268: }
 24936                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 24937                           
 24938                           ;lorawan_eu.c: 1264: }
 24939  006C52  0100               	movlb	0	; () banked
 24940  006C54  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 24941  006C56  EC68  F03C         	call	_RADIO_SetOutputPower
 24942                           
 24943                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 24944  006C5A  0E01               	movlw	1
 24945  006C5C  EC3E  F03C         	call	_RADIO_SetCRC
 24946                           
 24947                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 24948  006C60  0E00               	movlw	0
 24949  006C62  EF39  F03C         	goto	_RADIO_SetIQInverted
 24950  006C66                     __end_of_ConfigureRadioTx:
 24951                           	opt stack 0
 24952                           tosu	equ	0xFFF
 24953                           tosh	equ	0xFFE
 24954                           tosl	equ	0xFFD
 24955                           pclath	equ	0xFFA
 24956                           tblptru	equ	0xFF8
 24957                           tblptrh	equ	0xFF7
 24958                           tblptrl	equ	0xFF6
 24959                           tablat	equ	0xFF5
 24960                           prodh	equ	0xFF4
 24961                           prodl	equ	0xFF3
 24962                           intcon	equ	0xFF2
 24963                           intcon2	equ	0xFF1
 24964                           intcon3	equ	0xFF0
 24965                           indf0	equ	0xFEF
 24966                           postinc0	equ	0xFEE
 24967                           fsr0h	equ	0xFEA
 24968                           fsr0l	equ	0xFE9
 24969                           wreg	equ	0xFE8
 24970                           postinc1	equ	0xFE6
 24971                           postdec1	equ	0xFE5
 24972                           plusw1	equ	0xFE3
 24973                           fsr1h	equ	0xFE2
 24974                           fsr1l	equ	0xFE1
 24975                           indf2	equ	0xFDF
 24976                           postinc2	equ	0xFDE
 24977                           postdec2	equ	0xFDD
 24978                           plusw2	equ	0xFDB
 24979                           fsr2h	equ	0xFDA
 24980                           fsr2l	equ	0xFD9
 24981                           status	equ	0xFD8
 24982                           
 24983 ;; *************** function _RADIO_SetOutputPower *****************
 24984 ;; Defined at:
 24985 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24986 ;; Parameters:    Size  Location     Type
 24987 ;;  power           1    wreg     char 
 24988 ;; Auto vars:     Size  Location     Type
 24989 ;;  power           1    4[BANK0 ] char 
 24990 ;; Return value:  Size  Location     Type
 24991 ;;                  1    wreg      void 
 24992 ;; Registers used:
 24993 ;;		wreg
 24994 ;; Tracked objects:
 24995 ;;		On entry : F/0
 24996 ;;		On exit  : 0/0
 24997 ;;		Unchanged: 0/0
 24998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25003 ;;Total ram usage:        1 bytes
 25004 ;; Hardware stack levels used:    1
 25005 ;; Hardware stack levels required when called:    7
 25006 ;; This function calls:
 25007 ;;		Nothing
 25008 ;; This function is called by:
 25009 ;;		_ConfigureRadioTx
 25010 ;; This function uses a non-reentrant model
 25011 ;;
 25012                           
 25013                           	psect	text131
 25014  0078D0                     __ptext131:
 25015                           	opt stack 0
 25016  0078D0                     _RADIO_SetOutputPower:
 25017                           	opt stack 19
 25018                           
 25019                           ;incstack = 0
 25020                           ;RADIO_SetOutputPower@power stored from wreg
 25021  0078D0  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 25022                           
 25023                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 25024  0078D2  C064  F184         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 25025  0078D6  0012               	return		;funcret
 25026  0078D8                     __end_of_RADIO_SetOutputPower:
 25027                           	opt stack 0
 25028                           tosu	equ	0xFFF
 25029                           tosh	equ	0xFFE
 25030                           tosl	equ	0xFFD
 25031                           pclath	equ	0xFFA
 25032                           tblptru	equ	0xFF8
 25033                           tblptrh	equ	0xFF7
 25034                           tblptrl	equ	0xFF6
 25035                           tablat	equ	0xFF5
 25036                           prodh	equ	0xFF4
 25037                           prodl	equ	0xFF3
 25038                           intcon	equ	0xFF2
 25039                           intcon2	equ	0xFF1
 25040                           intcon3	equ	0xFF0
 25041                           indf0	equ	0xFEF
 25042                           postinc0	equ	0xFEE
 25043                           fsr0h	equ	0xFEA
 25044                           fsr0l	equ	0xFE9
 25045                           wreg	equ	0xFE8
 25046                           postinc1	equ	0xFE6
 25047                           postdec1	equ	0xFE5
 25048                           plusw1	equ	0xFE3
 25049                           fsr1h	equ	0xFE2
 25050                           fsr1l	equ	0xFE1
 25051                           indf2	equ	0xFDF
 25052                           postinc2	equ	0xFDE
 25053                           postdec2	equ	0xFDD
 25054                           plusw2	equ	0xFDB
 25055                           fsr2h	equ	0xFDA
 25056                           fsr2l	equ	0xFD9
 25057                           status	equ	0xFD8
 25058                           
 25059 ;; *************** function _RADIO_SetIQInverted *****************
 25060 ;; Defined at:
 25061 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25062 ;; Parameters:    Size  Location     Type
 25063 ;;  iqInverted      1    wreg     unsigned char 
 25064 ;; Auto vars:     Size  Location     Type
 25065 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 25066 ;; Return value:  Size  Location     Type
 25067 ;;                  1    wreg      void 
 25068 ;; Registers used:
 25069 ;;		wreg
 25070 ;; Tracked objects:
 25071 ;;		On entry : 0/0
 25072 ;;		On exit  : 0/0
 25073 ;;		Unchanged: 0/0
 25074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25079 ;;Total ram usage:        1 bytes
 25080 ;; Hardware stack levels used:    1
 25081 ;; Hardware stack levels required when called:    7
 25082 ;; This function calls:
 25083 ;;		Nothing
 25084 ;; This function is called by:
 25085 ;;		_ConfigureRadioTx
 25086 ;;		_ConfigureRadioRx
 25087 ;; This function uses a non-reentrant model
 25088 ;;
 25089                           
 25090                           	psect	text132
 25091  007872                     __ptext132:
 25092                           	opt stack 0
 25093  007872                     _RADIO_SetIQInverted:
 25094                           	opt stack 19
 25095                           
 25096                           ;incstack = 0
 25097                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 25098  007872  0100               	movlb	0	; () banked
 25099  007874  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 25100                           
 25101                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 25102  007876  C064  F189         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 25103  00787A  0012               	return		;funcret
 25104  00787C                     __end_of_RADIO_SetIQInverted:
 25105                           	opt stack 0
 25106                           tosu	equ	0xFFF
 25107                           tosh	equ	0xFFE
 25108                           tosl	equ	0xFFD
 25109                           pclath	equ	0xFFA
 25110                           tblptru	equ	0xFF8
 25111                           tblptrh	equ	0xFF7
 25112                           tblptrl	equ	0xFF6
 25113                           tablat	equ	0xFF5
 25114                           prodh	equ	0xFF4
 25115                           prodl	equ	0xFF3
 25116                           intcon	equ	0xFF2
 25117                           intcon2	equ	0xFF1
 25118                           intcon3	equ	0xFF0
 25119                           indf0	equ	0xFEF
 25120                           postinc0	equ	0xFEE
 25121                           fsr0h	equ	0xFEA
 25122                           fsr0l	equ	0xFE9
 25123                           wreg	equ	0xFE8
 25124                           postinc1	equ	0xFE6
 25125                           postdec1	equ	0xFE5
 25126                           plusw1	equ	0xFE3
 25127                           fsr1h	equ	0xFE2
 25128                           fsr1l	equ	0xFE1
 25129                           indf2	equ	0xFDF
 25130                           postinc2	equ	0xFDE
 25131                           postdec2	equ	0xFDD
 25132                           plusw2	equ	0xFDB
 25133                           fsr2h	equ	0xFDA
 25134                           fsr2l	equ	0xFD9
 25135                           status	equ	0xFD8
 25136                           
 25137 ;; *************** function _RADIO_SetCRC *****************
 25138 ;; Defined at:
 25139 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25140 ;; Parameters:    Size  Location     Type
 25141 ;;  crc             1    wreg     unsigned char 
 25142 ;; Auto vars:     Size  Location     Type
 25143 ;;  crc             1    4[BANK0 ] unsigned char 
 25144 ;; Return value:  Size  Location     Type
 25145 ;;                  1    wreg      void 
 25146 ;; Registers used:
 25147 ;;		wreg
 25148 ;; Tracked objects:
 25149 ;;		On entry : 0/0
 25150 ;;		On exit  : 0/0
 25151 ;;		Unchanged: 0/0
 25152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25156 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25157 ;;Total ram usage:        1 bytes
 25158 ;; Hardware stack levels used:    1
 25159 ;; Hardware stack levels required when called:    7
 25160 ;; This function calls:
 25161 ;;		Nothing
 25162 ;; This function is called by:
 25163 ;;		_ConfigureRadioTx
 25164 ;;		_ConfigureRadioRx
 25165 ;; This function uses a non-reentrant model
 25166 ;;
 25167                           
 25168                           	psect	text133
 25169  00787C                     __ptext133:
 25170                           	opt stack 0
 25171  00787C                     _RADIO_SetCRC:
 25172                           	opt stack 19
 25173                           
 25174                           ;incstack = 0
 25175                           ;RADIO_SetCRC@crc stored from wreg
 25176  00787C  0100               	movlb	0	; () banked
 25177  00787E  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 25178                           
 25179                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 25180  007880  C064  F185         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 25181  007884  0012               	return		;funcret
 25182  007886                     __end_of_RADIO_SetCRC:
 25183                           	opt stack 0
 25184                           tosu	equ	0xFFF
 25185                           tosh	equ	0xFFE
 25186                           tosl	equ	0xFFD
 25187                           pclath	equ	0xFFA
 25188                           tblptru	equ	0xFF8
 25189                           tblptrh	equ	0xFF7
 25190                           tblptrl	equ	0xFF6
 25191                           tablat	equ	0xFF5
 25192                           prodh	equ	0xFF4
 25193                           prodl	equ	0xFF3
 25194                           intcon	equ	0xFF2
 25195                           intcon2	equ	0xFF1
 25196                           intcon3	equ	0xFF0
 25197                           indf0	equ	0xFEF
 25198                           postinc0	equ	0xFEE
 25199                           fsr0h	equ	0xFEA
 25200                           fsr0l	equ	0xFE9
 25201                           wreg	equ	0xFE8
 25202                           postinc1	equ	0xFE6
 25203                           postdec1	equ	0xFE5
 25204                           plusw1	equ	0xFE3
 25205                           fsr1h	equ	0xFE2
 25206                           fsr1l	equ	0xFE1
 25207                           indf2	equ	0xFDF
 25208                           postinc2	equ	0xFDE
 25209                           postdec2	equ	0xFDD
 25210                           plusw2	equ	0xFDB
 25211                           fsr2h	equ	0xFDA
 25212                           fsr2l	equ	0xFD9
 25213                           status	equ	0xFD8
 25214                           
 25215 ;; *************** function _ConfigureRadio *****************
 25216 ;; Defined at:
 25217 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25218 ;; Parameters:    Size  Location     Type
 25219 ;;  dataRate        1    wreg     unsigned char 
 25220 ;;  freq            4   17[BANK0 ] unsigned long 
 25221 ;; Auto vars:     Size  Location     Type
 25222 ;;  dataRate        1   21[BANK0 ] unsigned char 
 25223 ;; Return value:  Size  Location     Type
 25224 ;;                  1    wreg      void 
 25225 ;; Registers used:
 25226 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25227 ;; Tracked objects:
 25228 ;;		On entry : F/0
 25229 ;;		On exit  : 0/0
 25230 ;;		Unchanged: 0/0
 25231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25232 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25235 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25236 ;;Total ram usage:        5 bytes
 25237 ;; Hardware stack levels used:    1
 25238 ;; Hardware stack levels required when called:    9
 25239 ;; This function calls:
 25240 ;;		_RADIO_SetBandwidth
 25241 ;;		_RADIO_SetChannelFrequency
 25242 ;;		_RADIO_SetFSKSyncWord
 25243 ;;		_RADIO_SetFrequencyHopPeriod
 25244 ;;		_RADIO_SetLoRaSyncWord
 25245 ;;		_RADIO_SetModulation
 25246 ;;		_RADIO_SetSpreadingFactor
 25247 ;; This function is called by:
 25248 ;;		_ConfigureRadioTx
 25249 ;;		_ConfigureRadioRx
 25250 ;; This function uses a non-reentrant model
 25251 ;;
 25252                           
 25253                           	psect	text134
 25254  005B96                     __ptext134:
 25255                           	opt stack 0
 25256  005B96                     _ConfigureRadio:
 25257                           	opt stack 17
 25258                           
 25259                           ;incstack = 0
 25260                           ;ConfigureRadio@dataRate stored from wreg
 25261  005B96  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 25262                           
 25263                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 25264  005B98  0E75               	movlw	low _modulation
 25265  005B9A  0100               	movlb	0	; () banked
 25266  005B9C  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25267  005B9E  6EF6               	movwf	tblptrl,c
 25268  005BA0  6AF7               	clrf	tblptrh,c
 25269  005BA2  0EFF               	movlw	high _modulation
 25270  005BA4  22F7               	addwfc	tblptrh,f,c
 25271  005BA6                     	if	1	;There are 3 active tblptr bytes
 25272  005BA6  6AF8               	clrf	tblptru,c
 25273  005BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 25274  005BAA  22F8               	addwfc	tblptru,f,c
 25275  005BAC                     	endif
 25276  005BAC  0008               	tblrd		*
 25277  005BAE  50F5               	movf	tablat,w,c
 25278  005BB0  EC70  F03C         	call	_RADIO_SetModulation
 25279                           
 25280                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 25281  005BB4  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 25282  005BB8  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 25283  005BBC  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 25284  005BC0  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 25285  005BC4  ECDF  F02E         	call	_RADIO_SetChannelFrequency	;wreg free
 25286                           
 25287                           ; BSR set to: 0
 25288                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 25289  005BC8  0E00               	movlw	0
 25290  005BCA  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 25291  005BCC  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 25292  005BCE  EC43  F03C         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 25293                           
 25294                           ; BSR set to: 0
 25295                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 25296  005BD2  0E07               	movlw	7
 25297  005BD4  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 25298  005BD6  D01F               	goto	l12650
 25299                           
 25300                           ; BSR set to: 0
 25301                           ;lorawan_eu.c: 870: {
 25302                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 25303  005BD8  0E9B               	movlw	low _spreadingFactor
 25304  005BDA  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25305  005BDC  6EF6               	movwf	tblptrl,c
 25306  005BDE  6AF7               	clrf	tblptrh,c
 25307  005BE0  0EFF               	movlw	high _spreadingFactor
 25308  005BE2  22F7               	addwfc	tblptrh,f,c
 25309  005BE4                     	if	1	;There are 3 active tblptr bytes
 25310  005BE4  6AF8               	clrf	tblptru,c
 25311  005BE6  0E00               	movlw	low (__mediumconst shr (0+16))
 25312  005BE8  22F8               	addwfc	tblptru,f,c
 25313  005BEA                     	endif
 25314  005BEA  0008               	tblrd		*
 25315  005BEC  50F5               	movf	tablat,w,c
 25316  005BEE  EC6C  F03C         	call	_RADIO_SetSpreadingFactor
 25317                           
 25318                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 25319  005BF2  0E8D               	movlw	low _bandwidth
 25320  005BF4  0100               	movlb	0	; () banked
 25321  005BF6  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25322  005BF8  6EF6               	movwf	tblptrl,c
 25323  005BFA  6AF7               	clrf	tblptrh,c
 25324  005BFC  0EFF               	movlw	high _bandwidth
 25325  005BFE  22F7               	addwfc	tblptrh,f,c
 25326  005C00                     	if	1	;There are 3 active tblptr bytes
 25327  005C00  6AF8               	clrf	tblptru,c
 25328  005C02  0E00               	movlw	low (__mediumconst shr (0+16))
 25329  005C04  22F8               	addwfc	tblptru,f,c
 25330  005C06                     	endif
 25331  005C06  0008               	tblrd		*
 25332  005C08  50F5               	movf	tablat,w,c
 25333  005C0A  EC74  F03C         	call	_RADIO_SetBandwidth
 25334                           
 25335                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 25336  005C0E  0102               	movlb	2	; () banked
 25337  005C10  51F4               	movf	(_loRa+244)& (0+255),w,b
 25338  005C12  EF48  F03C         	goto	_RADIO_SetLoRaSyncWord
 25339  005C16                     l12650:
 25340                           
 25341                           ; BSR set to: 0
 25342                           ;lorawan_eu.c: 876: else
 25343                           ;lorawan_eu.c: 877: {
 25344                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 25345  005C16  0EFC               	movlw	low _FskSyncWordBuff
 25346  005C18  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 25347  005C1A  0EFF               	movlw	high _FskSyncWordBuff
 25348  005C1C  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 25349  005C1E  0E03               	movlw	3
 25350  005C20  EFCC  F038         	goto	_RADIO_SetFSKSyncWord
 25351  005C24                     __end_of_ConfigureRadio:
 25352                           	opt stack 0
 25353                           tosu	equ	0xFFF
 25354                           tosh	equ	0xFFE
 25355                           tosl	equ	0xFFD
 25356                           pclath	equ	0xFFA
 25357                           tblptru	equ	0xFF8
 25358                           tblptrh	equ	0xFF7
 25359                           tblptrl	equ	0xFF6
 25360                           tablat	equ	0xFF5
 25361                           prodh	equ	0xFF4
 25362                           prodl	equ	0xFF3
 25363                           intcon	equ	0xFF2
 25364                           intcon2	equ	0xFF1
 25365                           intcon3	equ	0xFF0
 25366                           indf0	equ	0xFEF
 25367                           postinc0	equ	0xFEE
 25368                           fsr0h	equ	0xFEA
 25369                           fsr0l	equ	0xFE9
 25370                           wreg	equ	0xFE8
 25371                           postinc1	equ	0xFE6
 25372                           postdec1	equ	0xFE5
 25373                           plusw1	equ	0xFE3
 25374                           fsr1h	equ	0xFE2
 25375                           fsr1l	equ	0xFE1
 25376                           indf2	equ	0xFDF
 25377                           postinc2	equ	0xFDE
 25378                           postdec2	equ	0xFDD
 25379                           plusw2	equ	0xFDB
 25380                           fsr2h	equ	0xFDA
 25381                           fsr2l	equ	0xFD9
 25382                           status	equ	0xFD8
 25383                           
 25384 ;; *************** function _RADIO_SetSpreadingFactor *****************
 25385 ;; Defined at:
 25386 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25387 ;; Parameters:    Size  Location     Type
 25388 ;;  spreadingFac    1    wreg     enum E7761
 25389 ;; Auto vars:     Size  Location     Type
 25390 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 25391 ;; Return value:  Size  Location     Type
 25392 ;;                  1    wreg      void 
 25393 ;; Registers used:
 25394 ;;		wreg
 25395 ;; Tracked objects:
 25396 ;;		On entry : F/0
 25397 ;;		On exit  : 0/0
 25398 ;;		Unchanged: 0/0
 25399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25404 ;;Total ram usage:        1 bytes
 25405 ;; Hardware stack levels used:    1
 25406 ;; Hardware stack levels required when called:    7
 25407 ;; This function calls:
 25408 ;;		Nothing
 25409 ;; This function is called by:
 25410 ;;		_ConfigureRadio
 25411 ;; This function uses a non-reentrant model
 25412 ;;
 25413                           
 25414                           	psect	text135
 25415  0078D8                     __ptext135:
 25416                           	opt stack 0
 25417  0078D8                     _RADIO_SetSpreadingFactor:
 25418                           	opt stack 18
 25419                           
 25420                           ;incstack = 0
 25421                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 25422  0078D8  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 25423                           
 25424                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 25425  0078DA  C064  F182         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 25426  0078DE  0012               	return		;funcret
 25427  0078E0                     __end_of_RADIO_SetSpreadingFactor:
 25428                           	opt stack 0
 25429                           tosu	equ	0xFFF
 25430                           tosh	equ	0xFFE
 25431                           tosl	equ	0xFFD
 25432                           pclath	equ	0xFFA
 25433                           tblptru	equ	0xFF8
 25434                           tblptrh	equ	0xFF7
 25435                           tblptrl	equ	0xFF6
 25436                           tablat	equ	0xFF5
 25437                           prodh	equ	0xFF4
 25438                           prodl	equ	0xFF3
 25439                           intcon	equ	0xFF2
 25440                           intcon2	equ	0xFF1
 25441                           intcon3	equ	0xFF0
 25442                           indf0	equ	0xFEF
 25443                           postinc0	equ	0xFEE
 25444                           fsr0h	equ	0xFEA
 25445                           fsr0l	equ	0xFE9
 25446                           wreg	equ	0xFE8
 25447                           postinc1	equ	0xFE6
 25448                           postdec1	equ	0xFE5
 25449                           plusw1	equ	0xFE3
 25450                           fsr1h	equ	0xFE2
 25451                           fsr1l	equ	0xFE1
 25452                           indf2	equ	0xFDF
 25453                           postinc2	equ	0xFDE
 25454                           postdec2	equ	0xFDD
 25455                           plusw2	equ	0xFDB
 25456                           fsr2h	equ	0xFDA
 25457                           fsr2l	equ	0xFD9
 25458                           status	equ	0xFD8
 25459                           
 25460 ;; *************** function _RADIO_SetModulation *****************
 25461 ;; Defined at:
 25462 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25463 ;; Parameters:    Size  Location     Type
 25464 ;;  modulation      1    wreg     enum E7751
 25465 ;; Auto vars:     Size  Location     Type
 25466 ;;  modulation      1    4[BANK0 ] enum E7751
 25467 ;; Return value:  Size  Location     Type
 25468 ;;                  1    wreg      void 
 25469 ;; Registers used:
 25470 ;;		wreg
 25471 ;; Tracked objects:
 25472 ;;		On entry : F/0
 25473 ;;		On exit  : 0/0
 25474 ;;		Unchanged: 0/0
 25475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25477 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25479 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25480 ;;Total ram usage:        1 bytes
 25481 ;; Hardware stack levels used:    1
 25482 ;; Hardware stack levels required when called:    7
 25483 ;; This function calls:
 25484 ;;		Nothing
 25485 ;; This function is called by:
 25486 ;;		_ConfigureRadio
 25487 ;; This function uses a non-reentrant model
 25488 ;;
 25489                           
 25490                           	psect	text136
 25491  0078E0                     __ptext136:
 25492                           	opt stack 0
 25493  0078E0                     _RADIO_SetModulation:
 25494                           	opt stack 18
 25495                           
 25496                           ;incstack = 0
 25497                           ;RADIO_SetModulation@modulation stored from wreg
 25498  0078E0  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 25499                           
 25500                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 25501  0078E2  C064  F181         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 25502  0078E6  0012               	return		;funcret
 25503  0078E8                     __end_of_RADIO_SetModulation:
 25504                           	opt stack 0
 25505                           tosu	equ	0xFFF
 25506                           tosh	equ	0xFFE
 25507                           tosl	equ	0xFFD
 25508                           pclath	equ	0xFFA
 25509                           tblptru	equ	0xFF8
 25510                           tblptrh	equ	0xFF7
 25511                           tblptrl	equ	0xFF6
 25512                           tablat	equ	0xFF5
 25513                           prodh	equ	0xFF4
 25514                           prodl	equ	0xFF3
 25515                           intcon	equ	0xFF2
 25516                           intcon2	equ	0xFF1
 25517                           intcon3	equ	0xFF0
 25518                           indf0	equ	0xFEF
 25519                           postinc0	equ	0xFEE
 25520                           fsr0h	equ	0xFEA
 25521                           fsr0l	equ	0xFE9
 25522                           wreg	equ	0xFE8
 25523                           postinc1	equ	0xFE6
 25524                           postdec1	equ	0xFE5
 25525                           plusw1	equ	0xFE3
 25526                           fsr1h	equ	0xFE2
 25527                           fsr1l	equ	0xFE1
 25528                           indf2	equ	0xFDF
 25529                           postinc2	equ	0xFDE
 25530                           postdec2	equ	0xFDD
 25531                           plusw2	equ	0xFDB
 25532                           fsr2h	equ	0xFDA
 25533                           fsr2l	equ	0xFD9
 25534                           status	equ	0xFD8
 25535                           
 25536 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 25537 ;; Defined at:
 25538 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25539 ;; Parameters:    Size  Location     Type
 25540 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 25541 ;; Auto vars:     Size  Location     Type
 25542 ;;		None
 25543 ;; Return value:  Size  Location     Type
 25544 ;;                  1    wreg      void 
 25545 ;; Registers used:
 25546 ;;		None
 25547 ;; Tracked objects:
 25548 ;;		On entry : F/0
 25549 ;;		On exit  : F/0
 25550 ;;		Unchanged: F/0
 25551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25552 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25556 ;;Total ram usage:        2 bytes
 25557 ;; Hardware stack levels used:    1
 25558 ;; Hardware stack levels required when called:    7
 25559 ;; This function calls:
 25560 ;;		Nothing
 25561 ;; This function is called by:
 25562 ;;		_ConfigureRadio
 25563 ;; This function uses a non-reentrant model
 25564 ;;
 25565                           
 25566                           	psect	text137
 25567  007886                     __ptext137:
 25568                           	opt stack 0
 25569  007886                     _RADIO_SetFrequencyHopPeriod:
 25570                           	opt stack 18
 25571                           
 25572                           ; BSR set to: 0
 25573                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 25574                           
 25575                           ;incstack = 0
 25576  007886  C064  F187         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 25577  00788A  C065  F188         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 25578                           
 25579                           ; BSR set to: 0
 25580  00788E  0012               	return		;funcret
 25581  007890                     __end_of_RADIO_SetFrequencyHopPeriod:
 25582                           	opt stack 0
 25583                           tosu	equ	0xFFF
 25584                           tosh	equ	0xFFE
 25585                           tosl	equ	0xFFD
 25586                           pclath	equ	0xFFA
 25587                           tblptru	equ	0xFF8
 25588                           tblptrh	equ	0xFF7
 25589                           tblptrl	equ	0xFF6
 25590                           tablat	equ	0xFF5
 25591                           prodh	equ	0xFF4
 25592                           prodl	equ	0xFF3
 25593                           intcon	equ	0xFF2
 25594                           intcon2	equ	0xFF1
 25595                           intcon3	equ	0xFF0
 25596                           indf0	equ	0xFEF
 25597                           postinc0	equ	0xFEE
 25598                           fsr0h	equ	0xFEA
 25599                           fsr0l	equ	0xFE9
 25600                           wreg	equ	0xFE8
 25601                           postinc1	equ	0xFE6
 25602                           postdec1	equ	0xFE5
 25603                           plusw1	equ	0xFE3
 25604                           fsr1h	equ	0xFE2
 25605                           fsr1l	equ	0xFE1
 25606                           indf2	equ	0xFDF
 25607                           postinc2	equ	0xFDE
 25608                           postdec2	equ	0xFDD
 25609                           plusw2	equ	0xFDB
 25610                           fsr2h	equ	0xFDA
 25611                           fsr2l	equ	0xFD9
 25612                           status	equ	0xFD8
 25613                           
 25614 ;; *************** function _RADIO_SetFSKSyncWord *****************
 25615 ;; Defined at:
 25616 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25617 ;; Parameters:    Size  Location     Type
 25618 ;;  syncWordLen     1    wreg     unsigned char 
 25619 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 25620 ;;		 -> FskSyncWordBuff(3), 
 25621 ;; Auto vars:     Size  Location     Type
 25622 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 25623 ;; Return value:  Size  Location     Type
 25624 ;;                  1    wreg      void 
 25625 ;; Registers used:
 25626 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25627 ;; Tracked objects:
 25628 ;;		On entry : F/0
 25629 ;;		On exit  : F/0
 25630 ;;		Unchanged: 0/0
 25631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25635 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25636 ;;Total ram usage:        3 bytes
 25637 ;; Hardware stack levels used:    1
 25638 ;; Hardware stack levels required when called:    8
 25639 ;; This function calls:
 25640 ;;		_memcpy
 25641 ;; This function is called by:
 25642 ;;		_ConfigureRadio
 25643 ;; This function uses a non-reentrant model
 25644 ;;
 25645                           
 25646                           	psect	text138
 25647  007198                     __ptext138:
 25648                           	opt stack 0
 25649  007198                     _RADIO_SetFSKSyncWord:
 25650                           	opt stack 17
 25651                           
 25652                           ; BSR set to: 0
 25653                           ;incstack = 0
 25654                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 25655  007198  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25656                           
 25657                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 25658  00719A  0E08               	movlw	8
 25659  00719C  0100               	movlb	0	; () banked
 25660  00719E  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25661  0071A0  D001               	goto	l12354
 25662                           
 25663                           ; BSR set to: 0
 25664                           ;radio_driver_SX1276.c: 1627: {
 25665                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 25666  0071A2  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25667  0071A4                     l12354:
 25668                           
 25669                           ; BSR set to: 0
 25670                           ;radio_driver_SX1276.c: 1629: }
 25671                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 25672  0071A4  0E78               	movlw	low (_RadioConfiguration+15)
 25673  0071A6  6F64               	movwf	memcpy@d1& (0+255),b
 25674  0071A8  0E01               	movlw	high (_RadioConfiguration+15)
 25675  0071AA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 25676  0071AC  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 25677  0071B0  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 25678  0071B4  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 25679  0071B8  6B69               	clrf	(memcpy@n+1)& (0+255),b
 25680  0071BA  EC14  F034         	call	_memcpy	;wreg free
 25681                           
 25682                           ; BSR set to: 0
 25683                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 25684  0071BE  C070  F180         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 25685                           
 25686                           ; BSR set to: 0
 25687  0071C2  0012               	return		;funcret
 25688  0071C4                     __end_of_RADIO_SetFSKSyncWord:
 25689                           	opt stack 0
 25690                           tosu	equ	0xFFF
 25691                           tosh	equ	0xFFE
 25692                           tosl	equ	0xFFD
 25693                           pclath	equ	0xFFA
 25694                           tblptru	equ	0xFF8
 25695                           tblptrh	equ	0xFF7
 25696                           tblptrl	equ	0xFF6
 25697                           tablat	equ	0xFF5
 25698                           prodh	equ	0xFF4
 25699                           prodl	equ	0xFF3
 25700                           intcon	equ	0xFF2
 25701                           intcon2	equ	0xFF1
 25702                           intcon3	equ	0xFF0
 25703                           indf0	equ	0xFEF
 25704                           postinc0	equ	0xFEE
 25705                           fsr0h	equ	0xFEA
 25706                           fsr0l	equ	0xFE9
 25707                           wreg	equ	0xFE8
 25708                           postinc1	equ	0xFE6
 25709                           postdec1	equ	0xFE5
 25710                           plusw1	equ	0xFE3
 25711                           fsr1h	equ	0xFE2
 25712                           fsr1l	equ	0xFE1
 25713                           indf2	equ	0xFDF
 25714                           postinc2	equ	0xFDE
 25715                           postdec2	equ	0xFDD
 25716                           plusw2	equ	0xFDB
 25717                           fsr2h	equ	0xFDA
 25718                           fsr2l	equ	0xFD9
 25719                           status	equ	0xFD8
 25720                           
 25721 ;; *************** function _RADIO_SetChannelFrequency *****************
 25722 ;; Defined at:
 25723 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25724 ;; Parameters:    Size  Location     Type
 25725 ;;  frequency       4    4[BANK0 ] unsigned long 
 25726 ;; Auto vars:     Size  Location     Type
 25727 ;;		None
 25728 ;; Return value:  Size  Location     Type
 25729 ;;                  2    4[BANK0 ] enum E7805
 25730 ;; Registers used:
 25731 ;;		wreg, status,2, status,0
 25732 ;; Tracked objects:
 25733 ;;		On entry : 0/0
 25734 ;;		On exit  : F/0
 25735 ;;		Unchanged: 0/0
 25736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25741 ;;Total ram usage:        4 bytes
 25742 ;; Hardware stack levels used:    1
 25743 ;; Hardware stack levels required when called:    7
 25744 ;; This function calls:
 25745 ;;		Nothing
 25746 ;; This function is called by:
 25747 ;;		_ConfigureRadio
 25748 ;; This function uses a non-reentrant model
 25749 ;;
 25750                           
 25751                           	psect	text139
 25752  005DBE                     __ptext139:
 25753                           	opt stack 0
 25754  005DBE                     _RADIO_SetChannelFrequency:
 25755                           	opt stack 18
 25756                           
 25757                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25758                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 25759                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;incstack = 0
 25763  005DBE  0E40               	movlw	64
 25764  005DC0  0100               	movlb	0	; () banked
 25765  005DC2  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25766  005DC4  0E74               	movlw	116
 25767  005DC6  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25768  005DC8  0E2A               	movlw	42
 25769  005DCA  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25770  005DCC  0E08               	movlw	8
 25771  005DCE  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25772  005DD0  E309               	bnc	l12334
 25773                           
 25774                           ; BSR set to: 0
 25775  005DD2  0EC1               	movlw	193
 25776  005DD4  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25777  005DD6  0E49               	movlw	73
 25778  005DD8  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25779  005DDA  0E6E               	movlw	110
 25780  005DDC  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25781  005DDE  0E0A               	movlw	10
 25782  005DE0  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25783  005DE2  E325               	bnc	l690
 25784  005DE4                     l12334:
 25785                           
 25786                           ; BSR set to: 0
 25787  005DE4  0E80               	movlw	128
 25788  005DE6  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25789  005DE8  0E1A               	movlw	26
 25790  005DEA  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25791  005DEC  0E70               	movlw	112
 25792  005DEE  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25793  005DF0  0E18               	movlw	24
 25794  005DF2  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25795  005DF4  E309               	bnc	l12338
 25796                           
 25797                           ; BSR set to: 0
 25798  005DF6  0E41               	movlw	65
 25799  005DF8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25800  005DFA  0EDD               	movlw	221
 25801  005DFC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25802  005DFE  0E4A               	movlw	74
 25803  005E00  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25804  005E02  0E1F               	movlw	31
 25805  005E04  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25806  005E06  E313               	bnc	l690
 25807  005E08                     l12338:
 25808                           
 25809                           ; BSR set to: 0
 25810  005E08  0E80               	movlw	128
 25811  005E0A  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25812  005E0C  0E13               	movlw	19
 25813  005E0E  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25814  005E10  0E61               	movlw	97
 25815  005E12  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25816  005E14  0E33               	movlw	51
 25817  005E16  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25818  005E18  A0D8               	btfss	status,0,c
 25819  005E1A  0012               	return	
 25820                           
 25821                           ; BSR set to: 0
 25822  005E1C  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25823  005E1E  0EF7               	movlw	247
 25824  005E20  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25825  005E22  0ECB               	movlw	203
 25826  005E24  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25827  005E26  0E3C               	movlw	60
 25828  005E28  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25829  005E2A  B0D8               	btfsc	status,0,c
 25830  005E2C  0012               	return	
 25831  005E2E                     l690:
 25832                           
 25833                           ; BSR set to: 0
 25834                           ;radio_driver_SX1276.c: 1449: {
 25835                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 25836  005E2E  C064  F169         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25837  005E32  C065  F16A         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25838  005E36  C066  F16B         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25839  005E3A  C067  F16C         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25840                           
 25841                           ; BSR set to: 0
 25842                           
 25843                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 25844                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25845  005E3E  0012               	return		;funcret
 25846  005E40                     __end_of_RADIO_SetChannelFrequency:
 25847                           	opt stack 0
 25848                           tosu	equ	0xFFF
 25849                           tosh	equ	0xFFE
 25850                           tosl	equ	0xFFD
 25851                           pclath	equ	0xFFA
 25852                           tblptru	equ	0xFF8
 25853                           tblptrh	equ	0xFF7
 25854                           tblptrl	equ	0xFF6
 25855                           tablat	equ	0xFF5
 25856                           prodh	equ	0xFF4
 25857                           prodl	equ	0xFF3
 25858                           intcon	equ	0xFF2
 25859                           intcon2	equ	0xFF1
 25860                           intcon3	equ	0xFF0
 25861                           indf0	equ	0xFEF
 25862                           postinc0	equ	0xFEE
 25863                           fsr0h	equ	0xFEA
 25864                           fsr0l	equ	0xFE9
 25865                           wreg	equ	0xFE8
 25866                           postinc1	equ	0xFE6
 25867                           postdec1	equ	0xFE5
 25868                           plusw1	equ	0xFE3
 25869                           fsr1h	equ	0xFE2
 25870                           fsr1l	equ	0xFE1
 25871                           indf2	equ	0xFDF
 25872                           postinc2	equ	0xFDE
 25873                           postdec2	equ	0xFDD
 25874                           plusw2	equ	0xFDB
 25875                           fsr2h	equ	0xFDA
 25876                           fsr2l	equ	0xFD9
 25877                           status	equ	0xFD8
 25878                           
 25879 ;; *************** function _RADIO_SetBandwidth *****************
 25880 ;; Defined at:
 25881 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25882 ;; Parameters:    Size  Location     Type
 25883 ;;  bandwidth       1    wreg     enum E7769
 25884 ;; Auto vars:     Size  Location     Type
 25885 ;;  bandwidth       1    4[BANK0 ] enum E7769
 25886 ;; Return value:  Size  Location     Type
 25887 ;;                  1    wreg      void 
 25888 ;; Registers used:
 25889 ;;		wreg
 25890 ;; Tracked objects:
 25891 ;;		On entry : F/0
 25892 ;;		On exit  : 0/0
 25893 ;;		Unchanged: 0/0
 25894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25896 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25898 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25899 ;;Total ram usage:        1 bytes
 25900 ;; Hardware stack levels used:    1
 25901 ;; Hardware stack levels required when called:    7
 25902 ;; This function calls:
 25903 ;;		Nothing
 25904 ;; This function is called by:
 25905 ;;		_ConfigureRadio
 25906 ;; This function uses a non-reentrant model
 25907 ;;
 25908                           
 25909                           	psect	text140
 25910  0078E8                     __ptext140:
 25911                           	opt stack 0
 25912  0078E8                     _RADIO_SetBandwidth:
 25913                           	opt stack 18
 25914                           
 25915                           ; BSR set to: 0
 25916                           ;incstack = 0
 25917                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25918  0078E8  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25919                           
 25920                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 25921  0078EA  C064  F183         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25922  0078EE  0012               	return		;funcret
 25923  0078F0                     __end_of_RADIO_SetBandwidth:
 25924                           	opt stack 0
 25925                           tosu	equ	0xFFF
 25926                           tosh	equ	0xFFE
 25927                           tosl	equ	0xFFD
 25928                           pclath	equ	0xFFA
 25929                           tblptru	equ	0xFF8
 25930                           tblptrh	equ	0xFF7
 25931                           tblptrl	equ	0xFF6
 25932                           tablat	equ	0xFF5
 25933                           prodh	equ	0xFF4
 25934                           prodl	equ	0xFF3
 25935                           intcon	equ	0xFF2
 25936                           intcon2	equ	0xFF1
 25937                           intcon3	equ	0xFF0
 25938                           indf0	equ	0xFEF
 25939                           postinc0	equ	0xFEE
 25940                           fsr0h	equ	0xFEA
 25941                           fsr0l	equ	0xFE9
 25942                           wreg	equ	0xFE8
 25943                           postinc1	equ	0xFE6
 25944                           postdec1	equ	0xFE5
 25945                           plusw1	equ	0xFE3
 25946                           fsr1h	equ	0xFE2
 25947                           fsr1l	equ	0xFE1
 25948                           indf2	equ	0xFDF
 25949                           postinc2	equ	0xFDE
 25950                           postdec2	equ	0xFDD
 25951                           plusw2	equ	0xFDB
 25952                           fsr2h	equ	0xFDA
 25953                           fsr2l	equ	0xFD9
 25954                           status	equ	0xFD8
 25955                           
 25956 ;; *************** function _RADIO_Transmit *****************
 25957 ;; Defined at:
 25958 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25959 ;; Parameters:    Size  Location     Type
 25960 ;;  buffer          2   54[BANK0 ] PTR unsigned char 
 25961 ;;		 -> macBuffer(271), 
 25962 ;;  bufferLen       1   56[BANK0 ] unsigned char 
 25963 ;; Auto vars:     Size  Location     Type
 25964 ;;  i               1   70[BANK0 ] unsigned char 
 25965 ;;  regValue        1   69[BANK0 ] unsigned char 
 25966 ;; Return value:  Size  Location     Type
 25967 ;;                  2   54[BANK0 ] enum E7805
 25968 ;; Registers used:
 25969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25970 ;; Tracked objects:
 25971 ;;		On entry : F/0
 25972 ;;		On exit  : F/0
 25973 ;;		Unchanged: 0/0
 25974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25975 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25976 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25977 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25978 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25979 ;;Total ram usage:       17 bytes
 25980 ;; Hardware stack levels used:    1
 25981 ;; Hardware stack levels required when called:   12
 25982 ;; This function calls:
 25983 ;;		_HALSPICSAssert
 25984 ;;		_HALSPICSDeassert
 25985 ;;		_HALSPISend
 25986 ;;		_RADIO_RegisterRead
 25987 ;;		_RADIO_RegisterWrite
 25988 ;;		_RADIO_WriteConfiguration
 25989 ;;		_RADIO_WriteMode
 25990 ;;		_SwTimerSetTimeout
 25991 ;;		_SwTimerStart
 25992 ;;		_SwTimerStop
 25993 ;;		___lldiv
 25994 ;; This function is called by:
 25995 ;;		_LORAWAN_RxTimeout
 25996 ;;		_LORAWAN_Join
 25997 ;;		_LORAWAN_Send
 25998 ;;		_AckRetransmissionCallback
 25999 ;;		_UnconfirmedTransmissionCallback
 26000 ;; This function uses a non-reentrant model
 26001 ;;
 26002                           
 26003                           	psect	text141
 26004  002FC4                     __ptext141:
 26005                           	opt stack 0
 26006  002FC4                     _RADIO_Transmit:
 26007                           	opt stack 16
 26008                           
 26009                           ; BSR set to: 0
 26010                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 26011                           ;radio_driver_SX1276.c: 789: uint8_t i;
 26012                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 26013                           
 26014                           ;incstack = 0
 26015  002FC4  0101               	movlb	1	; () banked
 26016  002FC6  A58C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 26017  002FC8  D006               	goto	l13360
 26018                           
 26019                           ; BSR set to: 1
 26020                           ;radio_driver_SX1276.c: 792: {
 26021                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 26022  002FCA  0E80               	movlw	128
 26023  002FCC  0100               	movlb	0	; () banked
 26024  002FCE  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26025  002FD0  0E03               	movlw	3
 26026  002FD2  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26027  002FD4  0C03               	retlw	3
 26028  002FD6                     l13360:
 26029                           
 26030                           ; BSR set to: 1
 26031                           ;radio_driver_SX1276.c: 794: }
 26032                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 26033  002FD6  C18C  F099         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 26034  002FDA  0E03               	movlw	3
 26035  002FDC  0100               	movlb	0	; () banked
 26036  002FDE  1799               	andwf	??_RADIO_Transmit& (0+255),f,b
 26037  002FE0  E005               	bz	l13366
 26038                           
 26039                           ; BSR set to: 0
 26040                           ;radio_driver_SX1276.c: 797: {
 26041                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 26042  002FE2  0E80               	movlw	128
 26043  002FE4  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26044  002FE6  0E04               	movlw	4
 26045  002FE8  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26046  002FEA  0C04               	retlw	4
 26047  002FEC                     l13366:
 26048                           
 26049                           ; BSR set to: 0
 26050                           ;radio_driver_SX1276.c: 799: }
 26051                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 26052  002FEC  0101               	movlb	1	; () banked
 26053  002FEE  5181               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26054  002FF0  E109               	bnz	l13374
 26055                           
 26056                           ; BSR set to: 1
 26057  002FF2  0E40               	movlw	64
 26058  002FF4  0100               	movlb	0	; () banked
 26059  002FF6  6598               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 26060  002FF8  D005               	goto	l13374
 26061                           
 26062                           ; BSR set to: 0
 26063                           ;radio_driver_SX1276.c: 802: {
 26064                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 26065  002FFA  0E80               	movlw	128
 26066  002FFC  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26067  002FFE  0E02               	movlw	2
 26068  003000  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26069  003002  0C02               	retlw	2
 26070  003004                     l13374:
 26071                           
 26072                           ;radio_driver_SX1276.c: 804: }
 26073                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 26074  003004  0101               	movlb	1	; () banked
 26075  003006  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26076  003008  EC9C  F03A         	call	_SwTimerStop
 26077                           
 26078                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 26079  00300C  0E00               	movlw	0
 26080  00300E  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 26081  003010  0E04               	movlw	4
 26082  003012  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 26083  003014  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 26084                           
 26085                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 26086  003018  0101               	movlb	1	; () banked
 26087  00301A  0581               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26088  00301C  E123               	bnz	l13392
 26089                           
 26090                           ; BSR set to: 1
 26091                           ;radio_driver_SX1276.c: 813: {
 26092                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 26093  00301E  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26094  003022  0E22               	movlw	34
 26095  003024  EC6F  F03A         	call	_RADIO_RegisterWrite
 26096                           
 26097                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 26098  003028  0E0A               	movlw	10
 26099  00302A  EC98  F039         	call	_RADIO_RegisterRead
 26100  00302E  6FA5               	movwf	RADIO_Transmit@regValue& (0+255),b
 26101                           
 26102                           ; BSR set to: 0
 26103                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 26104  003030  0EF0               	movlw	240
 26105  003032  17A5               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 26106                           
 26107                           ; BSR set to: 0
 26108                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 26109  003034  87A5               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 26110                           
 26111                           ; BSR set to: 0
 26112                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 26113  003036  C0A5  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 26114  00303A  0E0A               	movlw	10
 26115  00303C  EC6F  F03A         	call	_RADIO_RegisterWrite
 26116                           
 26117                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 26118  003040  0E40               	movlw	64
 26119  003042  0100               	movlb	0	; () banked
 26120  003044  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26121  003046  EC6F  F03A         	call	_RADIO_RegisterWrite
 26122                           
 26123                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 26124  00304A  0100               	movlb	0	; () banked
 26125  00304C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26126  00304E  0E41               	movlw	65
 26127  003050  EC6F  F03A         	call	_RADIO_RegisterWrite
 26128                           
 26129                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 26130  003054  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26131  003058  0E01               	movlw	1
 26132  00305A  0100               	movlb	0	; () banked
 26133  00305C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26134  00305E  EC6E  F028         	call	_RADIO_WriteMode
 26135                           
 26136                           ;radio_driver_SX1276.c: 828: }
 26137  003062  D00A               	goto	l13394
 26138  003064                     l13392:
 26139                           
 26140                           ; BSR set to: 1
 26141                           ;radio_driver_SX1276.c: 829: else
 26142                           ;radio_driver_SX1276.c: 830: {
 26143                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 26144  003064  0100               	movlb	0	; () banked
 26145  003066  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26146  003068  0E40               	movlw	64
 26147  00306A  EC6F  F03A         	call	_RADIO_RegisterWrite
 26148                           
 26149                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 26150  00306E  0100               	movlb	0	; () banked
 26151  003070  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26152  003072  0E41               	movlw	65
 26153  003074  EC6F  F03A         	call	_RADIO_RegisterWrite
 26154  003078                     l13394:
 26155                           
 26156                           ;radio_driver_SX1276.c: 834: }
 26157                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 26158  003078  0101               	movlb	1	; () banked
 26159  00307A  5181               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26160  00307C  E105               	bnz	l13398
 26161                           
 26162                           ; BSR set to: 1
 26163                           ;radio_driver_SX1276.c: 837: {
 26164                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 26165  00307E  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26166  003082  0E00               	movlw	0
 26167  003084  EC6F  F03A         	call	_RADIO_RegisterWrite
 26168  003088                     l13398:
 26169                           
 26170                           ;radio_driver_SX1276.c: 840: }
 26171                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 26172  003088  ECA6  F03C         	call	_HALSPICSAssert	;wreg free
 26173                           
 26174                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 26175  00308C  0E80               	movlw	128
 26176  00308E  EC4D  F03C         	call	_HALSPISend
 26177                           
 26178                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 26179  003092  0100               	movlb	0	; () banked
 26180  003094  6BA6               	clrf	RADIO_Transmit@i& (0+255),b
 26181  003096  D00B               	goto	l13408
 26182  003098                     l13404:
 26183                           
 26184                           ; BSR set to: 0
 26185                           ;radio_driver_SX1276.c: 846: {
 26186                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 26187  003098  51A6               	movf	RADIO_Transmit@i& (0+255),w,b
 26188  00309A  2596               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 26189  00309C  6ED9               	movwf	fsr2l,c
 26190  00309E  0E00               	movlw	0
 26191  0030A0  2197               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 26192  0030A2  6EDA               	movwf	fsr2h,c
 26193  0030A4  50DF               	movf	indf2,w,c
 26194  0030A6  EC4D  F03C         	call	_HALSPISend
 26195  0030AA  0100               	movlb	0	; () banked
 26196  0030AC  2BA6               	incf	RADIO_Transmit@i& (0+255),f,b
 26197  0030AE                     l13408:
 26198                           
 26199                           ; BSR set to: 0
 26200  0030AE  5198               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 26201  0030B0  5DA6               	subwf	RADIO_Transmit@i& (0+255),w,b
 26202  0030B2  E3F2               	bnc	l13404
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;radio_driver_SX1276.c: 848: }
 26206                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 26207  0030B4  ECA4  F03C         	call	_HALSPICSDeassert	;wreg free
 26208                           
 26209                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 26210  0030B8  0101               	movlb	1	; () banked
 26211  0030BA  818C               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 26212                           
 26213                           ; BSR set to: 1
 26214                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 26215  0030BC  0EE7               	movlw	231
 26216  0030BE  178C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 26217                           
 26218                           ; BSR set to: 1
 26219                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 26220  0030C0  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26221  0030C4  0E00               	movlw	0
 26222  0030C6  0100               	movlb	0	; () banked
 26223  0030C8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26224  0030CA  0E03               	movlw	3
 26225  0030CC  EC6E  F028         	call	_RADIO_WriteMode
 26226                           
 26227                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 26228  0030D0  0100               	movlb	0	; () banked
 26229  0030D2  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 26230  0030D4  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 26231  0030D6  0E0A               	movlw	10
 26232  0030D8  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 26233  0030DA  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 26234  0030DC  0101               	movlb	1	; () banked
 26235  0030DE  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26236  0030E0  EC75  F036         	call	_SwTimerSetTimeout
 26237                           
 26238                           ; BSR set to: 0
 26239                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 26240  0030E4  0101               	movlb	1	; () banked
 26241  0030E6  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26242  0030E8  EC58  F02E         	call	_SwTimerStart
 26243                           
 26244                           ; BSR set to: 0
 26245                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 26246  0030EC  0101               	movlb	1	; () banked
 26247  0030EE  5193               	movf	(_RadioConfiguration+42)& (0+255),w,b
 26248  0030F0  1194               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 26249  0030F2  1195               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 26250  0030F4  1196               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 26251  0030F6  E059               	bz	l13438
 26252                           
 26253                           ; BSR set to: 1
 26254                           ;radio_driver_SX1276.c: 866: {
 26255                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26256  0030F8  5196               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26257  0030FA  E106               	bnz	u14780
 26258  0030FC  2993               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26259  0030FE  0EFF               	movlw	255
 26260  003100  5994               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26261  003102  0E0F               	movlw	15
 26262  003104  5995               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26263  003106  E319               	bnc	l13432
 26264  003108                     u14780:
 26265                           
 26266                           ; BSR set to: 1
 26267  003108  C193  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 26268  00310C  C194  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26269  003110  C195  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26270  003114  C196  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26271  003118  0E7D               	movlw	125
 26272  00311A  0100               	movlb	0	; () banked
 26273  00311C  6F68               	movwf	___lldiv@divisor& (0+255),b
 26274  00311E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26275  003120  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26276  003122  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26277  003124  EC1A  F030         	call	___lldiv	;wreg free
 26278  003128  0E0C               	movlw	12
 26279  00312A                     u14795:
 26280  00312A  90D8               	bcf	status,0,c
 26281  00312C  3764               	rlcf	?___lldiv& (0+255),f,b
 26282  00312E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 26283  003130  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 26284  003132  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 26285  003134  2EE8               	decfsz	wreg,f,c
 26286  003136  D7F9               	goto	u14795
 26287  003138  D020               	goto	L15
 26288  00313A                     l13432:
 26289                           
 26290                           ; BSR set to: 1
 26291  00313A  C193  F099         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 26292  00313E  C194  F09A         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 26293  003142  C195  F09B         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 26294  003146  C196  F09C         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 26295  00314A  0E0C               	movlw	12
 26296  00314C                     u14805:
 26297  00314C  90D8               	bcf	status,0,c
 26298  00314E  0100               	movlb	0	; () banked
 26299  003150  3799               	rlcf	??_RADIO_Transmit& (0+255),f,b
 26300  003152  379A               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 26301  003154  379B               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 26302  003156  379C               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 26303  003158  2EE8               	decfsz	wreg,f,c
 26304  00315A  D7F8               	goto	u14805
 26305  00315C  C099  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 26306  003160  C09A  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 26307  003164  C09B  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 26308  003168  C09C  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 26309  00316C  0E7D               	movlw	125
 26310  00316E  6F68               	movwf	___lldiv@divisor& (0+255),b
 26311  003170  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26312  003172  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26313  003174  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26314  003176  EC1A  F030         	call	___lldiv	;wreg free
 26315  00317A                     L15:
 26316  00317A  C064  F0A1         	movff	?___lldiv,_RADIO_Transmit$1196
 26317  00317E  C065  F0A2         	movff	?___lldiv+1,_RADIO_Transmit$1196+1
 26318  003182  C066  F0A3         	movff	?___lldiv+2,_RADIO_Transmit$1196+2
 26319  003186  C067  F0A4         	movff	?___lldiv+3,_RADIO_Transmit$1196+3
 26320                           
 26321                           ; BSR set to: 0
 26322  00318A  C0A1  F071         	movff	_RADIO_Transmit$1196,SwTimerSetTimeout@timeout
 26323  00318E  C0A2  F072         	movff	_RADIO_Transmit$1196+1,SwTimerSetTimeout@timeout+1
 26324  003192  C0A3  F073         	movff	_RADIO_Transmit$1196+2,SwTimerSetTimeout@timeout+2
 26325  003196  C0A4  F074         	movff	_RADIO_Transmit$1196+3,SwTimerSetTimeout@timeout+3
 26326  00319A  0101               	movlb	1	; () banked
 26327  00319C  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26328  00319E  EC75  F036         	call	_SwTimerSetTimeout
 26329                           
 26330                           ; BSR set to: 0
 26331                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26332  0031A2  0101               	movlb	1	; () banked
 26333  0031A4  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26334  0031A6  EC58  F02E         	call	_SwTimerStart
 26335  0031AA                     l13438:
 26336                           
 26337                           ;radio_driver_SX1276.c: 869: }
 26338                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 26339  0031AA  0100               	movlb	0	; () banked
 26340  0031AC  6B96               	clrf	?_RADIO_Transmit& (0+255),b
 26341  0031AE  6B97               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 26342                           
 26343                           ; BSR set to: 0
 26344  0031B0  0012               	return		;funcret
 26345  0031B2                     __end_of_RADIO_Transmit:
 26346                           	opt stack 0
 26347                           tosu	equ	0xFFF
 26348                           tosh	equ	0xFFE
 26349                           tosl	equ	0xFFD
 26350                           pclath	equ	0xFFA
 26351                           tblptru	equ	0xFF8
 26352                           tblptrh	equ	0xFF7
 26353                           tblptrl	equ	0xFF6
 26354                           tablat	equ	0xFF5
 26355                           prodh	equ	0xFF4
 26356                           prodl	equ	0xFF3
 26357                           intcon	equ	0xFF2
 26358                           intcon2	equ	0xFF1
 26359                           intcon3	equ	0xFF0
 26360                           indf0	equ	0xFEF
 26361                           postinc0	equ	0xFEE
 26362                           fsr0h	equ	0xFEA
 26363                           fsr0l	equ	0xFE9
 26364                           wreg	equ	0xFE8
 26365                           postinc1	equ	0xFE6
 26366                           postdec1	equ	0xFE5
 26367                           plusw1	equ	0xFE3
 26368                           fsr1h	equ	0xFE2
 26369                           fsr1l	equ	0xFE1
 26370                           indf2	equ	0xFDF
 26371                           postinc2	equ	0xFDE
 26372                           postdec2	equ	0xFDD
 26373                           plusw2	equ	0xFDB
 26374                           fsr2h	equ	0xFDA
 26375                           fsr2l	equ	0xFD9
 26376                           status	equ	0xFD8
 26377                           
 26378 ;; *************** function _RADIO_WriteConfiguration *****************
 26379 ;; Defined at:
 26380 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26381 ;; Parameters:    Size  Location     Type
 26382 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 26383 ;; Auto vars:     Size  Location     Type
 26384 ;;  tempValue       4   34[BANK0 ] unsigned long 
 26385 ;;  regValue        1   38[BANK0 ] unsigned char 
 26386 ;;  i               1   33[BANK0 ] unsigned char 
 26387 ;; Return value:  Size  Location     Type
 26388 ;;                  1    wreg      void 
 26389 ;; Registers used:
 26390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26391 ;; Tracked objects:
 26392 ;;		On entry : F/0
 26393 ;;		On exit  : 0/0
 26394 ;;		Unchanged: 0/0
 26395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26397 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26398 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26399 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26400 ;;Total ram usage:       10 bytes
 26401 ;; Hardware stack levels used:    1
 26402 ;; Hardware stack levels required when called:   11
 26403 ;; This function calls:
 26404 ;;		_RADIO_RegisterRead
 26405 ;;		_RADIO_RegisterWrite
 26406 ;;		_RADIO_WriteFSKBitRate
 26407 ;;		_RADIO_WriteFSKFrequencyDeviation
 26408 ;;		_RADIO_WriteFrequency
 26409 ;;		_RADIO_WriteMode
 26410 ;;		_RADIO_WritePower
 26411 ;;		___lmul
 26412 ;; This function is called by:
 26413 ;;		_RADIO_Transmit
 26414 ;;		_RADIO_ReceiveStart
 26415 ;; This function uses a non-reentrant model
 26416 ;;
 26417                           
 26418                           	psect	text142
 26419  0013A0                     __ptext142:
 26420                           	opt stack 0
 26421  0013A0                     _RADIO_WriteConfiguration:
 26422                           	opt stack 16
 26423                           
 26424                           ; BSR set to: 0
 26425                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 26426                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 26427                           ;radio_driver_SX1276.c: 537: uint8_t i;
 26428                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26429                           
 26430                           ; BSR set to: 0
 26431                           ;incstack = 0
 26432  0013A0  C181  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26433  0013A4  0E00               	movlw	0
 26434  0013A6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26435  0013A8  EC6E  F028         	call	_RADIO_WriteMode
 26436                           
 26437                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26438  0013AC  C169  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26439  0013B0  C16A  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26440  0013B4  C16B  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26441  0013B8  C16C  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26442  0013BC  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
 26443                           
 26444                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 26445  0013C0  0101               	movlb	1	; () banked
 26446  0013C2  5184               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26447  0013C4  EC42  F029         	call	_RADIO_WritePower
 26448                           
 26449                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 26450  0013C8  0101               	movlb	1	; () banked
 26451  0013CA  0581               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26452  0013CC  E001 D1B6          	bnz	l12584
 26453                           
 26454                           ; BSR set to: 1
 26455                           ;radio_driver_SX1276.c: 545: {
 26456                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26457  0013D0  C177  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26458  0013D4  0E39               	movlw	57
 26459  0013D6  EC6F  F03A         	call	_RADIO_RegisterWrite
 26460                           
 26461                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 26462                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 26463                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 26464                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 26465  0013DA  C18B  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26466  0013DE  0E01               	movlw	1
 26467  0013E0  0100               	movlb	0	; () banked
 26468  0013E2  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26469  0013E4  0101               	movlb	1	; () banked
 26470  0013E6  90D8               	bcf	status,0,c
 26471  0013E8  358A               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26472  0013EA  0100               	movlb	0	; () banked
 26473  0013EC  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26474  0013EE  0101               	movlb	1	; () banked
 26475  0013F0  3983               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26476  0013F2  0BF0               	andlw	240
 26477  0013F4  0100               	movlb	0	; () banked
 26478  0013F6  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26479  0013F8  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26480  0013FA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26481  0013FC  0E1D               	movlw	29
 26482  0013FE  EC6F  F03A         	call	_RADIO_RegisterWrite
 26483                           
 26484                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 26485                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 26486                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26487                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 26488  001402  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 26489  001406  0E03               	movlw	3
 26490  001408  0100               	movlb	0	; () banked
 26491  00140A  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26492  00140C  C185  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 26493  001410  0E01               	movlw	1
 26494  001412  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26495  001414  90D8               	bcf	status,0,c
 26496  001416  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26497  001418  90D8               	bcf	status,0,c
 26498  00141A  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26499  00141C  0101               	movlb	1	; () banked
 26500  00141E  3982               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26501  001420  0BF0               	andlw	240
 26502  001422  0100               	movlb	0	; () banked
 26503  001424  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26504  001426  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26505  001428  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26506  00142A  0E1E               	movlw	30
 26507  00142C  EC6F  F03A         	call	_RADIO_RegisterWrite
 26508                           
 26509                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 26510  001430  0101               	movlb	1	; () banked
 26511  001432  5187               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26512  001434  1188               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26513  001436  E060               	bz	l447
 26514                           
 26515                           ; BSR set to: 1
 26516                           ;radio_driver_SX1276.c: 561: {
 26517                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 26518  001438  C187  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26519  00143C  C188  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26520  001440  0100               	movlb	0	; () banked
 26521  001442  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26522  001444  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26523                           
 26524                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 26525  001446  D042               	goto	l12476
 26526  001448                     l12468:
 26527                           
 26528                           ; BSR set to: 1
 26529                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 26530  001448  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26531  00144C  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26532  001450  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26533  001454  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26534  001458  0E7D               	movlw	125
 26535  00145A  0100               	movlb	0	; () banked
 26536  00145C  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26537  00145E  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26538  001460  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26539  001462  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26540  001464  EC9C  F02E         	call	___lmul	;wreg free
 26541  001468  D022               	goto	L17
 26542  00146A                     l12470:
 26543                           
 26544                           ; BSR set to: 1
 26545                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 26546  00146A  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26547  00146E  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26548  001472  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26549  001476  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26550  00147A  0EFA               	movlw	250
 26551  00147C  0100               	movlb	0	; () banked
 26552  00147E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26553  001480  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26554  001482  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26555  001484  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26556  001486  EC9C  F02E         	call	___lmul	;wreg free
 26557  00148A  D011               	goto	L17
 26558  00148C                     l12472:
 26559                           
 26560                           ; BSR set to: 1
 26561                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 26562  00148C  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26563  001490  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26564  001494  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26565  001498  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26566  00149C  0EF4               	movlw	244
 26567  00149E  0100               	movlb	0	; () banked
 26568  0014A0  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26569  0014A2  0E01               	movlw	1
 26570  0014A4  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26571  0014A6  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26572  0014A8  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26573  0014AA  EC9C  F02E         	call	___lmul	;wreg free
 26574  0014AE                     L17:
 26575  0014AE  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26576  0014B2  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26577  0014B6  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26578  0014BA  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26579                           
 26580                           ;radio_driver_SX1276.c: 574: break;
 26581  0014BE  D00F               	goto	l12478
 26582  0014C0                     l453:
 26583                           
 26584                           ; BSR set to: 1
 26585                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 26586  0014C0  0100               	movlb	0	; () banked
 26587  0014C2  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26588  0014C4  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26589  0014C6  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26590  0014C8  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26591                           
 26592                           ;radio_driver_SX1276.c: 578: break;
 26593  0014CA  D009               	goto	l12478
 26594  0014CC                     l12476:
 26595                           
 26596                           ; BSR set to: 0
 26597  0014CC  0101               	movlb	1	; () banked
 26598  0014CE  5183               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26599                           
 26600                           ; Switch size 1, requested type "speed"
 26601                           ; Number of cases is 3, Range of values is 7 to 9
 26602                           ; switch strategies available:
 26603                           ; Name         Instructions Cycles
 26604                           ; simple_byte           10     6 (average)
 26605                           ;	Chosen strategy is simple_byte
 26606  0014D0  0A07               	xorlw	7	; case 7
 26607  0014D2  E0BA               	bz	l12468
 26608  0014D4  0A0F               	xorlw	15	; case 8
 26609  0014D6  E0C9               	bz	l12470
 26610  0014D8  0A01               	xorlw	1	; case 9
 26611  0014DA  E0D8               	bz	l12472
 26612  0014DC  D7F1               	goto	l453
 26613  0014DE                     l12478:
 26614                           
 26615                           ; BSR set to: 0
 26616                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 26617  0014DE  0101               	movlb	1	; () banked
 26618  0014E0  2982               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26619  0014E2  0100               	movlb	0	; () banked
 26620  0014E4  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26621  0014E6  D005               	goto	u13330
 26622  0014E8                     u13335:
 26623  0014E8  90D8               	bcf	status,0,c
 26624  0014EA  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26625  0014EC  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26626  0014EE  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26627  0014F0  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26628  0014F2                     u13330:
 26629  0014F2  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26630  0014F4  D7F9               	goto	u13335
 26631                           
 26632                           ;radio_driver_SX1276.c: 582: }
 26633  0014F6  D005               	goto	l12480
 26634  0014F8                     l447:
 26635                           
 26636                           ; BSR set to: 1
 26637                           ;radio_driver_SX1276.c: 583: else
 26638                           ;radio_driver_SX1276.c: 584: {
 26639                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 26640  0014F8  0100               	movlb	0	; () banked
 26641  0014FA  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26642  0014FC  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26643  0014FE  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26644  001500  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26645  001502                     l12480:
 26646                           
 26647                           ;radio_driver_SX1276.c: 586: }
 26648                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26649  001502  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26650  001506  0E24               	movlw	36
 26651  001508  EC6F  F03A         	call	_RADIO_RegisterWrite
 26652                           
 26653                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26654  00150C  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26655  001510  0E1F               	movlw	31
 26656  001512  EC6F  F03A         	call	_RADIO_RegisterWrite
 26657                           
 26658                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 26659  001516  0E26               	movlw	38
 26660  001518  EC98  F039         	call	_RADIO_RegisterRead
 26661  00151C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26662                           
 26663                           ; BSR set to: 0
 26664                           ;radio_driver_SX1276.c: 596: if (
 26665                           ;radio_driver_SX1276.c: 597: (
 26666                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 26667                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26668                           ;radio_driver_SX1276.c: 600: ) ||
 26669                           ;radio_driver_SX1276.c: 601: (
 26670                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 26671                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 26672                           ;radio_driver_SX1276.c: 604: )
 26673                           ;radio_driver_SX1276.c: 605: )
 26674  00151E  0E0C               	movlw	12
 26675  001520  0101               	movlb	1	; () banked
 26676  001522  1982               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26677  001524  E106               	bnz	l12488
 26678                           
 26679                           ; BSR set to: 1
 26680  001526  0E07               	movlw	7
 26681  001528  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26682  00152A  E009               	bz	l12492
 26683                           
 26684                           ; BSR set to: 1
 26685  00152C  0E08               	movlw	8
 26686  00152E  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26687  001530  E006               	bz	l12492
 26688  001532                     l12488:
 26689                           
 26690                           ; BSR set to: 1
 26691  001532  0E0B               	movlw	11
 26692  001534  1982               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26693  001536  E106               	bnz	l12494
 26694                           
 26695                           ; BSR set to: 1
 26696  001538  0E07               	movlw	7
 26697  00153A  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26698  00153C  E103               	bnz	l12494
 26699  00153E                     l12492:
 26700                           
 26701                           ; BSR set to: 1
 26702                           ;radio_driver_SX1276.c: 606: {
 26703                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 26704  00153E  0100               	movlb	0	; () banked
 26705  001540  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26706                           
 26707                           ;radio_driver_SX1276.c: 608: }
 26708  001542  D002               	goto	l460
 26709  001544                     l12494:
 26710                           
 26711                           ; BSR set to: 1
 26712                           ;radio_driver_SX1276.c: 609: else
 26713                           ;radio_driver_SX1276.c: 610: {
 26714                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 26715  001544  0100               	movlb	0	; () banked
 26716  001546  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26717  001548                     l460:
 26718                           
 26719                           ; BSR set to: 0
 26720                           ;radio_driver_SX1276.c: 612: }
 26721                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 26722  001548  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26723                           
 26724                           ; BSR set to: 0
 26725                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 26726  00154A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26727  00154E  0E26               	movlw	38
 26728  001550  EC6F  F03A         	call	_RADIO_RegisterWrite
 26729                           
 26730                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 26731  001554  0E31               	movlw	49
 26732  001556  EC98  F039         	call	_RADIO_RegisterRead
 26733  00155A  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26734                           
 26735                           ; BSR set to: 0
 26736                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 26737  00155C  0EF8               	movlw	248
 26738  00155E  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26739                           
 26740                           ; BSR set to: 0
 26741                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 26742  001560  0E03               	movlw	3
 26743  001562  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26744                           
 26745                           ; BSR set to: 0
 26746                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 26747  001564  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26748  001568  0E31               	movlw	49
 26749  00156A  EC6F  F03A         	call	_RADIO_RegisterWrite
 26750                           
 26751                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 26752  00156E  0E0A               	movlw	10
 26753  001570  0100               	movlb	0	; () banked
 26754  001572  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26755  001574  0E37               	movlw	55
 26756  001576  EC6F  F03A         	call	_RADIO_RegisterWrite
 26757                           
 26758                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 26759  00157A  0E12               	movlw	18
 26760  00157C  0101               	movlb	1	; () banked
 26761  00157E  199A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26762  001580  E129               	bnz	l12532
 26763                           
 26764                           ; BSR set to: 1
 26765                           ;radio_driver_SX1276.c: 626: {
 26766                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26767                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26768  001582  0E07               	movlw	7
 26769  001584  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26770  001586  E003               	bz	l12514
 26771                           
 26772                           ; BSR set to: 1
 26773  001588  0E08               	movlw	8
 26774  00158A  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26775  00158C  E115               	bnz	l12524
 26776  00158E                     l12514:
 26777                           
 26778                           ; BSR set to: 1
 26779                           ;radio_driver_SX1276.c: 631: {
 26780                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 26781  00158E  0E31               	movlw	49
 26782  001590  EC98  F039         	call	_RADIO_RegisterRead
 26783  001594  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26784                           
 26785                           ; BSR set to: 0
 26786                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 26787  001596  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26788                           
 26789                           ; BSR set to: 0
 26790                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 26791  001598  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26792  00159C  0E31               	movlw	49
 26793  00159E  EC6F  F03A         	call	_RADIO_RegisterWrite
 26794                           
 26795                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 26796  0015A2  0E40               	movlw	64
 26797  0015A4  0100               	movlb	0	; () banked
 26798  0015A6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26799  0015A8  0E2F               	movlw	47
 26800  0015AA  EC6F  F03A         	call	_RADIO_RegisterWrite
 26801                           
 26802                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 26803  0015AE  0100               	movlb	0	; () banked
 26804  0015B0  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26805  0015B2  0E30               	movlw	48
 26806  0015B4  EC6F  F03A         	call	_RADIO_RegisterWrite
 26807  0015B8                     l12524:
 26808                           
 26809                           ;radio_driver_SX1276.c: 637: }
 26810                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26811  0015B8  0E09               	movlw	9
 26812  0015BA  0101               	movlb	1	; () banked
 26813  0015BC  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26814  0015BE  E10A               	bnz	l12532
 26815                           
 26816                           ; BSR set to: 1
 26817                           ;radio_driver_SX1276.c: 640: {
 26818                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 26819  0015C0  0E31               	movlw	49
 26820  0015C2  EC98  F039         	call	_RADIO_RegisterRead
 26821  0015C6  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26822                           
 26823                           ; BSR set to: 0
 26824                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 26825  0015C8  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26826                           
 26827                           ; BSR set to: 0
 26828                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 26829  0015CA  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26830  0015CE  0E31               	movlw	49
 26831  0015D0  EC6F  F03A         	call	_RADIO_RegisterWrite
 26832  0015D4                     l12532:
 26833                           
 26834                           ;radio_driver_SX1276.c: 644: }
 26835                           ;radio_driver_SX1276.c: 645: }
 26836                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 26837  0015D4  0E33               	movlw	51
 26838  0015D6  EC98  F039         	call	_RADIO_RegisterRead
 26839  0015DA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26840                           
 26841                           ; BSR set to: 0
 26842                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 26843  0015DC  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26844                           
 26845                           ; BSR set to: 0
 26846                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 26847  0015DE  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26848                           
 26849                           ; BSR set to: 0
 26850                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26851  0015E0  C189  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26852  0015E4  0E01               	movlw	1
 26853  0015E6  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26854  0015E8  0E06               	movlw	6
 26855  0015EA  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26856  0015EC                     u13435:
 26857  0015EC  90D8               	bcf	status,0,c
 26858  0015EE  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26859  0015F0  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26860  0015F2  D7FC               	goto	u13435
 26861  0015F4  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26862  0015F6  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26863                           
 26864                           ; BSR set to: 0
 26865                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 26866  0015F8  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26867  0015FC  0E33               	movlw	51
 26868  0015FE  EC6F  F03A         	call	_RADIO_RegisterWrite
 26869                           
 26870                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26871  001602  C189  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26872  001606  0E01               	movlw	1
 26873  001608  0100               	movlb	0	; () banked
 26874  00160A  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26875  00160C  90D8               	bcf	status,0,c
 26876  00160E  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26877  001610  90D8               	bcf	status,0,c
 26878  001612  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26879  001614  0AFF               	xorlw	255
 26880  001616  0B1D               	andlw	29
 26881  001618  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26882                           
 26883                           ; BSR set to: 0
 26884                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 26885  00161A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26886  00161E  0E3B               	movlw	59
 26887  001620  EC6F  F03A         	call	_RADIO_RegisterWrite
 26888                           
 26889                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26890  001624  0101               	movlb	1	; () banked
 26891  001626  5176               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26892  001628  0100               	movlb	0	; () banked
 26893  00162A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26894  00162C  0E20               	movlw	32
 26895  00162E  EC6F  F03A         	call	_RADIO_RegisterWrite
 26896                           
 26897                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26898  001632  C175  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26899  001636  0E21               	movlw	33
 26900  001638  EC6F  F03A         	call	_RADIO_RegisterWrite
 26901                           
 26902                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 26903  00163C  0100               	movlb	0	; () banked
 26904  00163E  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26905  001640  0E0D               	movlw	13
 26906  001642  EC6F  F03A         	call	_RADIO_RegisterWrite
 26907                           
 26908                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 26909  001646  0100               	movlb	0	; () banked
 26910  001648  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26911  00164A  0E0E               	movlw	14
 26912  00164C  EC6F  F03A         	call	_RADIO_RegisterWrite
 26913                           
 26914                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 26915  001650  0100               	movlb	0	; () banked
 26916  001652  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26917  001654  0E0F               	movlw	15
 26918  001656  EC6F  F03A         	call	_RADIO_RegisterWrite
 26919                           
 26920                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 26921  00165A  0E12               	movlw	18
 26922  00165C  0101               	movlb	1	; () banked
 26923  00165E  199A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26924  001660  E168               	bnz	l466
 26925                           
 26926                           ; BSR set to: 1
 26927                           ;radio_driver_SX1276.c: 665: {
 26928                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26929                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 26930                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 26931                           ;radio_driver_SX1276.c: 669: )
 26932  001662  0E09               	movlw	9
 26933  001664  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26934  001666  E11E               	bnz	l12566
 26935                           
 26936                           ; BSR set to: 1
 26937  001668  0E80               	movlw	128
 26938  00166A  5D69               	subwf	_RadioConfiguration& (0+255),w,b
 26939  00166C  0E13               	movlw	19
 26940  00166E  596A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26941  001670  0E61               	movlw	97
 26942  001672  596B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26943  001674  0E33               	movlw	51
 26944  001676  596C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26945  001678  E315               	bnc	l12566
 26946                           
 26947                           ; BSR set to: 1
 26948  00167A  0569               	decf	_RadioConfiguration& (0+255),w,b
 26949  00167C  0EF7               	movlw	247
 26950  00167E  596A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26951  001680  0ECB               	movlw	203
 26952  001682  596B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26953  001684  0E3C               	movlw	60
 26954  001686  596C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26955  001688  E20D               	bc	l12566
 26956                           
 26957                           ; BSR set to: 1
 26958                           ;radio_driver_SX1276.c: 670: {
 26959                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 26960  00168A  0E02               	movlw	2
 26961  00168C  0100               	movlb	0	; () banked
 26962  00168E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26963  001690  0E36               	movlw	54
 26964  001692  EC6F  F03A         	call	_RADIO_RegisterWrite
 26965                           
 26966                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 26967  001696  0E64               	movlw	100
 26968  001698  0100               	movlb	0	; () banked
 26969  00169A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26970  00169C  0E3A               	movlw	58
 26971  00169E  EC6F  F03A         	call	_RADIO_RegisterWrite
 26972                           
 26973                           ;radio_driver_SX1276.c: 673: }
 26974  0016A2  D028               	goto	l12576
 26975  0016A4                     l12566:
 26976                           
 26977                           ; BSR set to: 1
 26978                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26979                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 26980                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 26981                           ;radio_driver_SX1276.c: 677: )
 26982  0016A4  0E09               	movlw	9
 26983  0016A6  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26984  0016A8  E11F               	bnz	l12574
 26985                           
 26986                           ; BSR set to: 1
 26987  0016AA  0E80               	movlw	128
 26988  0016AC  5D69               	subwf	_RadioConfiguration& (0+255),w,b
 26989  0016AE  0E1A               	movlw	26
 26990  0016B0  596A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26991  0016B2  0E70               	movlw	112
 26992  0016B4  596B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26993  0016B6  0E18               	movlw	24
 26994  0016B8  596C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26995  0016BA  E316               	bnc	l12574
 26996                           
 26997                           ; BSR set to: 1
 26998  0016BC  0E41               	movlw	65
 26999  0016BE  5D69               	subwf	_RadioConfiguration& (0+255),w,b
 27000  0016C0  0EDD               	movlw	221
 27001  0016C2  596A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 27002  0016C4  0E4A               	movlw	74
 27003  0016C6  596B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27004  0016C8  0E1F               	movlw	31
 27005  0016CA  596C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27006  0016CC  E20D               	bc	l12574
 27007                           
 27008                           ; BSR set to: 1
 27009                           ;radio_driver_SX1276.c: 678: {
 27010                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 27011  0016CE  0E02               	movlw	2
 27012  0016D0  0100               	movlb	0	; () banked
 27013  0016D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27014  0016D4  0E36               	movlw	54
 27015  0016D6  EC6F  F03A         	call	_RADIO_RegisterWrite
 27016                           
 27017                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 27018  0016DA  0E7F               	movlw	127
 27019  0016DC  0100               	movlb	0	; () banked
 27020  0016DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27021  0016E0  0E3A               	movlw	58
 27022  0016E2  EC6F  F03A         	call	_RADIO_RegisterWrite
 27023                           
 27024                           ;radio_driver_SX1276.c: 681: }
 27025  0016E6  D006               	goto	l12576
 27026  0016E8                     l12574:
 27027                           
 27028                           ; BSR set to: 1
 27029                           ;radio_driver_SX1276.c: 682: else
 27030                           ;radio_driver_SX1276.c: 683: {
 27031                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 27032  0016E8  0E03               	movlw	3
 27033  0016EA  0100               	movlb	0	; () banked
 27034  0016EC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27035  0016EE  0E36               	movlw	54
 27036  0016F0  EC6F  F03A         	call	_RADIO_RegisterWrite
 27037  0016F4                     l12576:
 27038                           
 27039                           ;radio_driver_SX1276.c: 685: }
 27040                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 27041  0016F4  0E09               	movlw	9
 27042  0016F6  0101               	movlb	1	; () banked
 27043  0016F8  1983               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27044  0016FA  E10F               	bnz	l12582
 27045                           
 27046                           ; BSR set to: 1
 27047  0016FC  0589               	decf	(_RadioConfiguration+32)& (0+255),w,b
 27048  0016FE  E10D               	bnz	l12582
 27049                           
 27050                           ; BSR set to: 1
 27051                           ;radio_driver_SX1276.c: 689: {
 27052                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 27053  001700  0E65               	movlw	101
 27054  001702  0100               	movlb	0	; () banked
 27055  001704  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27056  001706  0E3A               	movlw	58
 27057  001708  EC6F  F03A         	call	_RADIO_RegisterWrite
 27058                           
 27059                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 27060  00170C  0E19               	movlw	25
 27061  00170E  0100               	movlb	0	; () banked
 27062  001710  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27063  001712  0E3B               	movlw	59
 27064  001714  EC6F  F03A         	call	_RADIO_RegisterWrite
 27065                           
 27066                           ;radio_driver_SX1276.c: 692: }
 27067  001718  D00C               	goto	l466
 27068  00171A                     l12582:
 27069                           
 27070                           ; BSR set to: 1
 27071                           ;radio_driver_SX1276.c: 693: else
 27072                           ;radio_driver_SX1276.c: 694: {
 27073                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 27074  00171A  0E65               	movlw	101
 27075  00171C  0100               	movlb	0	; () banked
 27076  00171E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27077  001720  0E3A               	movlw	58
 27078  001722  EC6F  F03A         	call	_RADIO_RegisterWrite
 27079                           
 27080                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 27081  001726  0E1D               	movlw	29
 27082  001728  0100               	movlb	0	; () banked
 27083  00172A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27084  00172C  0E3B               	movlw	59
 27085  00172E  EC6F  F03A         	call	_RADIO_RegisterWrite
 27086  001732                     l466:
 27087                           
 27088                           ;radio_driver_SX1276.c: 697: }
 27089                           ;radio_driver_SX1276.c: 698: }
 27090                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 27091  001732  0100               	movlb	0	; () banked
 27092  001734  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27093  001736  0E12               	movlw	18
 27094  001738  EF6F  F03A         	goto	_RADIO_RegisterWrite
 27095  00173C                     l12584:
 27096                           
 27097                           ; BSR set to: 1
 27098                           ;radio_driver_SX1276.c: 703: else
 27099                           ;radio_driver_SX1276.c: 704: {
 27100                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 27101  00173C  C16D  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 27102  001740  C16E  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 27103  001744  C16F  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 27104  001748  C170  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 27105  00174C  EC67  F032         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 27106                           
 27107                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 27108  001750  C171  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 27109  001754  C172  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 27110  001758  C173  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 27111  00175C  C174  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 27112  001760  ECCA  F032         	call	_RADIO_WriteFSKBitRate	;wreg free
 27113                           
 27114                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 27115  001764  0101               	movlb	1	; () banked
 27116  001766  5176               	movf	(_RadioConfiguration+13)& (0+255),w,b
 27117  001768  0100               	movlb	0	; () banked
 27118  00176A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27119  00176C  0E25               	movlw	37
 27120  00176E  EC6F  F03A         	call	_RADIO_RegisterWrite
 27121                           
 27122                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 27123  001772  C175  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 27124  001776  0E26               	movlw	38
 27125  001778  EC6F  F03A         	call	_RADIO_RegisterWrite
 27126                           
 27127                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 27128  00177C  0E0A               	movlw	10
 27129  00177E  EC98  F039         	call	_RADIO_RegisterRead
 27130  001782  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27131                           
 27132                           ; BSR set to: 0
 27133                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 27134  001784  0E9F               	movlw	159
 27135  001786  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27136                           
 27137                           ; BSR set to: 0
 27138                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 27139  001788  0101               	movlb	1	; () banked
 27140  00178A  399C               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 27141  00178C  46E8               	rlncf	wreg,f,c
 27142  00178E  0BE0               	andlw	224
 27143  001790  0100               	movlb	0	; () banked
 27144  001792  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27145                           
 27146                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 27147  001794  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27148  001798  0E0A               	movlw	10
 27149  00179A  EC6F  F03A         	call	_RADIO_RegisterWrite
 27150                           
 27151                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 27152  00179E  0EC8               	movlw	200
 27153  0017A0  0100               	movlb	0	; () banked
 27154  0017A2  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27155                           
 27156                           ; BSR set to: 0
 27157                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 27158  0017A4  0101               	movlb	1	; () banked
 27159  0017A6  5185               	movf	(_RadioConfiguration+28)& (0+255),w,b
 27160  0017A8  E002               	bz	l12596
 27161                           
 27162                           ; BSR set to: 1
 27163                           ;radio_driver_SX1276.c: 722: {
 27164                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 27165  0017AA  0100               	movlb	0	; () banked
 27166  0017AC  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 27167  0017AE                     l12596:
 27168                           
 27169                           ;radio_driver_SX1276.c: 724: }
 27170                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 27171  0017AE  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27172  0017B2  0E30               	movlw	48
 27173  0017B4  EC6F  F03A         	call	_RADIO_RegisterWrite
 27174                           
 27175                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 27176  0017B8  0100               	movlb	0	; () banked
 27177  0017BA  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 27178  0017BC  D00E               	goto	l12604
 27179  0017BE                     l12600:
 27180                           
 27181                           ; BSR set to: 0
 27182                           ;radio_driver_SX1276.c: 729: {
 27183                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 27184  0017BE  0E78               	movlw	low (_RadioConfiguration+15)
 27185  0017C0  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27186  0017C2  6ED9               	movwf	fsr2l,c
 27187  0017C4  6ADA               	clrf	fsr2h,c
 27188  0017C6  0E01               	movlw	high (_RadioConfiguration+15)
 27189  0017C8  22DA               	addwfc	fsr2h,f,c
 27190  0017CA  50DF               	movf	indf2,w,c
 27191  0017CC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27192  0017CE  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27193  0017D0  0F28               	addlw	40
 27194  0017D2  EC6F  F03A         	call	_RADIO_RegisterWrite
 27195  0017D6  0100               	movlb	0	; () banked
 27196  0017D8  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 27197  0017DA                     l12604:
 27198                           
 27199                           ; BSR set to: 0
 27200  0017DA  0101               	movlb	1	; () banked
 27201  0017DC  5180               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27202  0017DE  0100               	movlb	0	; () banked
 27203  0017E0  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27204  0017E2  E3ED               	bnc	l12600
 27205                           
 27206                           ; BSR set to: 0
 27207                           ;radio_driver_SX1276.c: 733: }
 27208                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 27209  0017E4  0101               	movlb	1	; () banked
 27210  0017E6  5180               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27211  0017E8  E008               	bz	l12610
 27212                           
 27213                           ; BSR set to: 1
 27214                           ;radio_driver_SX1276.c: 737: {
 27215                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 27216  0017EA  0580               	decf	(_RadioConfiguration+23)& (0+255),w,b
 27217  0017EC  0910               	iorlw	16
 27218  0017EE  0100               	movlb	0	; () banked
 27219  0017F0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27220  0017F2  0E27               	movlw	39
 27221  0017F4  EC6F  F03A         	call	_RADIO_RegisterWrite
 27222                           
 27223                           ;radio_driver_SX1276.c: 739: }
 27224  0017F8  D005               	goto	l479
 27225  0017FA                     l12610:
 27226                           
 27227                           ; BSR set to: 1
 27228                           ;radio_driver_SX1276.c: 740: else
 27229                           ;radio_driver_SX1276.c: 741: {
 27230                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 27231  0017FA  0100               	movlb	0	; () banked
 27232  0017FC  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27233  0017FE  0E27               	movlw	39
 27234  001800  EC6F  F03A         	call	_RADIO_RegisterWrite
 27235  001804                     l479:
 27236                           
 27237                           ;radio_driver_SX1276.c: 743: }
 27238                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 27239  001804  0100               	movlb	0	; () banked
 27240  001806  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27241  001808  0E3E               	movlw	62
 27242  00180A  EC6F  F03A         	call	_RADIO_RegisterWrite
 27243                           
 27244                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 27245  00180E  0100               	movlb	0	; () banked
 27246  001810  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27247  001812  0E3F               	movlw	63
 27248  001814  EF6F  F03A         	goto	_RADIO_RegisterWrite
 27249  001818                     __end_of_RADIO_WriteConfiguration:
 27250                           	opt stack 0
 27251                           tosu	equ	0xFFF
 27252                           tosh	equ	0xFFE
 27253                           tosl	equ	0xFFD
 27254                           pclath	equ	0xFFA
 27255                           tblptru	equ	0xFF8
 27256                           tblptrh	equ	0xFF7
 27257                           tblptrl	equ	0xFF6
 27258                           tablat	equ	0xFF5
 27259                           prodh	equ	0xFF4
 27260                           prodl	equ	0xFF3
 27261                           intcon	equ	0xFF2
 27262                           intcon2	equ	0xFF1
 27263                           intcon3	equ	0xFF0
 27264                           indf0	equ	0xFEF
 27265                           postinc0	equ	0xFEE
 27266                           fsr0h	equ	0xFEA
 27267                           fsr0l	equ	0xFE9
 27268                           wreg	equ	0xFE8
 27269                           postinc1	equ	0xFE6
 27270                           postdec1	equ	0xFE5
 27271                           plusw1	equ	0xFE3
 27272                           fsr1h	equ	0xFE2
 27273                           fsr1l	equ	0xFE1
 27274                           indf2	equ	0xFDF
 27275                           postinc2	equ	0xFDE
 27276                           postdec2	equ	0xFDD
 27277                           plusw2	equ	0xFDB
 27278                           fsr2h	equ	0xFDA
 27279                           fsr2l	equ	0xFD9
 27280                           status	equ	0xFD8
 27281                           
 27282 ;; *************** function _RADIO_WritePower *****************
 27283 ;; Defined at:
 27284 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27285 ;; Parameters:    Size  Location     Type
 27286 ;;  power           1    wreg     char 
 27287 ;; Auto vars:     Size  Location     Type
 27288 ;;  power           1   10[BANK0 ] char 
 27289 ;;  paDac           1    9[BANK0 ] unsigned char 
 27290 ;;  ocp             1    8[BANK0 ] unsigned char 
 27291 ;; Return value:  Size  Location     Type
 27292 ;;                  1    wreg      void 
 27293 ;; Registers used:
 27294 ;;		wreg, status,2, status,0, cstack
 27295 ;; Tracked objects:
 27296 ;;		On entry : F/1
 27297 ;;		On exit  : 0/0
 27298 ;;		Unchanged: 0/0
 27299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27301 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27303 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27304 ;;Total ram usage:        3 bytes
 27305 ;; Hardware stack levels used:    1
 27306 ;; Hardware stack levels required when called:   10
 27307 ;; This function calls:
 27308 ;;		_RADIO_RegisterRead
 27309 ;;		_RADIO_RegisterWrite
 27310 ;; This function is called by:
 27311 ;;		_RADIO_WriteConfiguration
 27312 ;; This function uses a non-reentrant model
 27313 ;;
 27314                           
 27315                           	psect	text143
 27316  005284                     __ptext143:
 27317                           	opt stack 0
 27318  005284                     _RADIO_WritePower:
 27319                           	opt stack 16
 27320                           
 27321                           ;incstack = 0
 27322                           ;RADIO_WritePower@power stored from wreg
 27323  005284  0100               	movlb	0	; () banked
 27324  005286  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27325                           
 27326                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 27327                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 27328                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 27329  005288  0101               	movlb	1	; () banked
 27330  00528A  5186               	movf	(_RadioConfiguration+29)& (0+255),w,b
 27331  00528C  E127               	bnz	l12288
 27332                           
 27333                           ; BSR set to: 1
 27334                           ;radio_driver_SX1276.c: 348: {
 27335                           ;radio_driver_SX1276.c: 350: if (power < -3)
 27336  00528E  0100               	movlb	0	; () banked
 27337  005290  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27338  005292  0A80               	xorlw	128
 27339  005294  0F83               	addlw	131
 27340  005296  E202               	bc	l12268
 27341                           
 27342                           ; BSR set to: 0
 27343                           ;radio_driver_SX1276.c: 351: {
 27344                           ;radio_driver_SX1276.c: 352: power = -3;
 27345  005298  0EFD               	movlw	253
 27346  00529A  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27347  00529C                     l12268:
 27348                           
 27349                           ; BSR set to: 0
 27350                           ;radio_driver_SX1276.c: 353: }
 27351                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27352  00529C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27353  00529E  0A80               	xorlw	128
 27354  0052A0  0F70               	addlw	-144
 27355  0052A2  E302               	bnc	l12272
 27356                           
 27357                           ; BSR set to: 0
 27358                           ;radio_driver_SX1276.c: 355: {
 27359                           ;radio_driver_SX1276.c: 356: power = 15;
 27360  0052A4  0E0F               	movlw	15
 27361  0052A6  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27362  0052A8                     l12272:
 27363                           
 27364                           ; BSR set to: 0
 27365                           ;radio_driver_SX1276.c: 357: }
 27366                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27367  0052A8  0E4D               	movlw	77
 27368  0052AA  EC98  F039         	call	_RADIO_RegisterRead
 27369  0052AE  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27370                           
 27371                           ; BSR set to: 0
 27372                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27373  0052B0  0EF8               	movlw	248
 27374  0052B2  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27375                           
 27376                           ; BSR set to: 0
 27377                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27378  0052B4  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27379                           
 27380                           ; BSR set to: 0
 27381                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27382  0052B6  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27383  0052BA  0E4D               	movlw	77
 27384  0052BC  EC6F  F03A         	call	_RADIO_RegisterWrite
 27385                           
 27386                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27387  0052C0  0100               	movlb	0	; () banked
 27388  0052C2  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 27389  0052C4  D005               	goto	l12286
 27390                           
 27391                           ; BSR set to: 0
 27392                           ;radio_driver_SX1276.c: 365: {
 27393                           ;radio_driver_SX1276.c: 369: power += 3;
 27394  0052C6  0E03               	movlw	3
 27395  0052C8  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27396                           
 27397                           ; BSR set to: 0
 27398                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27399  0052CA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27400  0052CC  0920               	iorlw	32
 27401  0052CE  D002               	goto	L19
 27402  0052D0                     l12286:
 27403                           
 27404                           ; BSR set to: 0
 27405                           ;radio_driver_SX1276.c: 372: else
 27406                           ;radio_driver_SX1276.c: 373: {
 27407                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27408  0052D0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27409  0052D2  0970               	iorlw	112
 27410  0052D4                     L19:
 27411  0052D4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27412  0052D6  0E09               	movlw	9
 27413  0052D8  EF6F  F03A         	goto	_RADIO_RegisterWrite
 27414  0052DC                     l12288:
 27415                           
 27416                           ; BSR set to: 1
 27417                           ;radio_driver_SX1276.c: 380: else
 27418                           ;radio_driver_SX1276.c: 381: {
 27419                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27420  0052DC  0100               	movlb	0	; () banked
 27421  0052DE  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27422  0052E0  0A80               	xorlw	128
 27423  0052E2  0F7E               	addlw	-130
 27424  0052E4  E202               	bc	l12292
 27425                           
 27426                           ; BSR set to: 0
 27427                           ;radio_driver_SX1276.c: 386: {
 27428                           ;radio_driver_SX1276.c: 387: power = 2;
 27429  0052E6  0E02               	movlw	2
 27430  0052E8  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27431  0052EA                     l12292:
 27432                           
 27433                           ; BSR set to: 0
 27434                           ;radio_driver_SX1276.c: 388: }
 27435                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27436  0052EA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27437  0052EC  0A80               	xorlw	128
 27438  0052EE  0F6C               	addlw	-148
 27439  0052F0  E302               	bnc	l12296
 27440                           
 27441                           ; BSR set to: 0
 27442                           ;radio_driver_SX1276.c: 392: {
 27443                           ;radio_driver_SX1276.c: 393: power = 20;
 27444  0052F2  0E14               	movlw	20
 27445  0052F4  D005               	goto	L18
 27446  0052F6                     l12296:
 27447                           
 27448                           ; BSR set to: 0
 27449                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27450  0052F6  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27451  0052F8  0A80               	xorlw	128
 27452  0052FA  0F6E               	addlw	-146
 27453  0052FC  E302               	bnc	l12300
 27454                           
 27455                           ; BSR set to: 0
 27456                           ;radio_driver_SX1276.c: 396: {
 27457                           ;radio_driver_SX1276.c: 397: power = 17;
 27458  0052FE  0E11               	movlw	17
 27459  005300                     L18:
 27460  005300  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27461  005302                     l12300:
 27462                           
 27463                           ; BSR set to: 0
 27464                           ;radio_driver_SX1276.c: 398: }
 27465                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27466  005302  0E0B               	movlw	11
 27467  005304  EC98  F039         	call	_RADIO_RegisterRead
 27468  005308  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 27469                           
 27470                           ; BSR set to: 0
 27471                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27472  00530A  0E4D               	movlw	77
 27473  00530C  EC98  F039         	call	_RADIO_RegisterRead
 27474  005310  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27478  005312  0EF8               	movlw	248
 27479  005314  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27480                           
 27481                           ; BSR set to: 0
 27482                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27483  005316  0E14               	movlw	20
 27484  005318  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27485  00531A  E106               	bnz	l12314
 27486                           
 27487                           ; BSR set to: 0
 27488                           ;radio_driver_SX1276.c: 404: {
 27489                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27490  00531C  0E07               	movlw	7
 27491  00531E  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27492                           
 27493                           ; BSR set to: 0
 27494                           ;radio_driver_SX1276.c: 406: power = 15;
 27495  005320  0E0F               	movlw	15
 27496  005322  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27497                           
 27498                           ; BSR set to: 0
 27499                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27500  005324  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27501                           
 27502                           ;radio_driver_SX1276.c: 408: }
 27503  005326  D004               	goto	l12320
 27504  005328                     l12314:
 27505                           
 27506                           ; BSR set to: 0
 27507                           ;radio_driver_SX1276.c: 409: else
 27508                           ;radio_driver_SX1276.c: 410: {
 27509                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27510  005328  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27511                           
 27512                           ; BSR set to: 0
 27513                           ;radio_driver_SX1276.c: 412: power -= 2;
 27514  00532A  0EFE               	movlw	254
 27515  00532C  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27516                           
 27517                           ; BSR set to: 0
 27518                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27519  00532E  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27520  005330                     l12320:
 27521                           
 27522                           ; BSR set to: 0
 27523                           ;radio_driver_SX1276.c: 414: }
 27524                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27525  005330  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27526  005334  0E4D               	movlw	77
 27527  005336  EC6F  F03A         	call	_RADIO_RegisterWrite
 27528                           
 27529                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27530  00533A  0100               	movlb	0	; () banked
 27531  00533C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27532  00533E  0980               	iorlw	128
 27533  005340  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27534  005342  0E09               	movlw	9
 27535  005344  EC6F  F03A         	call	_RADIO_RegisterWrite
 27536                           
 27537                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27538  005348  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27539  00534C  0E0B               	movlw	11
 27540  00534E  EF6F  F03A         	goto	_RADIO_RegisterWrite
 27541  005352                     __end_of_RADIO_WritePower:
 27542                           	opt stack 0
 27543                           tosu	equ	0xFFF
 27544                           tosh	equ	0xFFE
 27545                           tosl	equ	0xFFD
 27546                           pclath	equ	0xFFA
 27547                           tblptru	equ	0xFF8
 27548                           tblptrh	equ	0xFF7
 27549                           tblptrl	equ	0xFF6
 27550                           tablat	equ	0xFF5
 27551                           prodh	equ	0xFF4
 27552                           prodl	equ	0xFF3
 27553                           intcon	equ	0xFF2
 27554                           intcon2	equ	0xFF1
 27555                           intcon3	equ	0xFF0
 27556                           indf0	equ	0xFEF
 27557                           postinc0	equ	0xFEE
 27558                           fsr0h	equ	0xFEA
 27559                           fsr0l	equ	0xFE9
 27560                           wreg	equ	0xFE8
 27561                           postinc1	equ	0xFE6
 27562                           postdec1	equ	0xFE5
 27563                           plusw1	equ	0xFE3
 27564                           fsr1h	equ	0xFE2
 27565                           fsr1l	equ	0xFE1
 27566                           indf2	equ	0xFDF
 27567                           postinc2	equ	0xFDE
 27568                           postdec2	equ	0xFDD
 27569                           plusw2	equ	0xFDB
 27570                           fsr2h	equ	0xFDA
 27571                           fsr2l	equ	0xFD9
 27572                           status	equ	0xFD8
 27573                           
 27574 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27575 ;; Defined at:
 27576 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27577 ;; Parameters:    Size  Location     Type
 27578 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 27579 ;; Auto vars:     Size  Location     Type
 27580 ;;  num             4   21[BANK0 ] unsigned long 
 27581 ;; Return value:  Size  Location     Type
 27582 ;;                  1    wreg      void 
 27583 ;; Registers used:
 27584 ;;		wreg, status,2, status,0, cstack
 27585 ;; Tracked objects:
 27586 ;;		On entry : F/1
 27587 ;;		On exit  : 0/0
 27588 ;;		Unchanged: 0/0
 27589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27591 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27593 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27594 ;;Total ram usage:        8 bytes
 27595 ;; Hardware stack levels used:    1
 27596 ;; Hardware stack levels required when called:   10
 27597 ;; This function calls:
 27598 ;;		_RADIO_RegisterWrite
 27599 ;;		___lldiv
 27600 ;; This function is called by:
 27601 ;;		_RADIO_WriteConfiguration
 27602 ;; This function uses a non-reentrant model
 27603 ;;
 27604                           
 27605                           	psect	text144
 27606  0064CE                     __ptext144:
 27607                           	opt stack 0
 27608  0064CE                     _RADIO_WriteFSKFrequencyDeviation:
 27609                           	opt stack 16
 27610                           
 27611                           ; BSR set to: 1
 27612                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27613                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27614                           
 27615                           ;incstack = 0
 27616  0064CE  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27617  0064D2  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27618  0064D6  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27619  0064DA  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27620                           
 27621                           ; BSR set to: 1
 27622                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27623  0064DE  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27624  0064E2  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27625  0064E6  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27626  0064EA  0100               	movlb	0	; () banked
 27627  0064EC  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27628                           
 27629                           ; BSR set to: 0
 27630                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27631  0064EE  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27632  0064F2  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27633  0064F6  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27634  0064FA  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27635  0064FE  0E09               	movlw	9
 27636  006500  6F68               	movwf	___lldiv@divisor& (0+255),b
 27637  006502  0E3D               	movlw	61
 27638  006504  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27639  006506  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27640  006508  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27641  00650A  EC1A  F030         	call	___lldiv	;wreg free
 27642  00650E  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27643  006512  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27644  006516  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27645  00651A  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27646                           
 27647                           ; BSR set to: 0
 27648                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27649  00651E  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27650  006522  0E04               	movlw	4
 27651  006524  EC6F  F03A         	call	_RADIO_RegisterWrite
 27652                           
 27653                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27654  006528  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27655  00652C  0E05               	movlw	5
 27656  00652E  EF6F  F03A         	goto	_RADIO_RegisterWrite
 27657  006532                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27658                           	opt stack 0
 27659                           tosu	equ	0xFFF
 27660                           tosh	equ	0xFFE
 27661                           tosl	equ	0xFFD
 27662                           pclath	equ	0xFFA
 27663                           tblptru	equ	0xFF8
 27664                           tblptrh	equ	0xFF7
 27665                           tblptrl	equ	0xFF6
 27666                           tablat	equ	0xFF5
 27667                           prodh	equ	0xFF4
 27668                           prodl	equ	0xFF3
 27669                           intcon	equ	0xFF2
 27670                           intcon2	equ	0xFF1
 27671                           intcon3	equ	0xFF0
 27672                           indf0	equ	0xFEF
 27673                           postinc0	equ	0xFEE
 27674                           fsr0h	equ	0xFEA
 27675                           fsr0l	equ	0xFE9
 27676                           wreg	equ	0xFE8
 27677                           postinc1	equ	0xFE6
 27678                           postdec1	equ	0xFE5
 27679                           plusw1	equ	0xFE3
 27680                           fsr1h	equ	0xFE2
 27681                           fsr1l	equ	0xFE1
 27682                           indf2	equ	0xFDF
 27683                           postinc2	equ	0xFDE
 27684                           postdec2	equ	0xFDD
 27685                           plusw2	equ	0xFDB
 27686                           fsr2h	equ	0xFDA
 27687                           fsr2l	equ	0xFD9
 27688                           status	equ	0xFD8
 27689                           
 27690 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27691 ;; Defined at:
 27692 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27693 ;; Parameters:    Size  Location     Type
 27694 ;;  bitRate         4   17[BANK0 ] unsigned long 
 27695 ;; Auto vars:     Size  Location     Type
 27696 ;;  num             4   21[BANK0 ] unsigned long 
 27697 ;; Return value:  Size  Location     Type
 27698 ;;                  1    wreg      void 
 27699 ;; Registers used:
 27700 ;;		wreg, status,2, status,0, cstack
 27701 ;; Tracked objects:
 27702 ;;		On entry : 0/1
 27703 ;;		On exit  : 0/0
 27704 ;;		Unchanged: 0/0
 27705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27707 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27709 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27710 ;;Total ram usage:        8 bytes
 27711 ;; Hardware stack levels used:    1
 27712 ;; Hardware stack levels required when called:   10
 27713 ;; This function calls:
 27714 ;;		_RADIO_RegisterWrite
 27715 ;;		___lldiv
 27716 ;; This function is called by:
 27717 ;;		_RADIO_WriteConfiguration
 27718 ;; This function uses a non-reentrant model
 27719 ;;
 27720                           
 27721                           	psect	text145
 27722  006594                     __ptext145:
 27723                           	opt stack 0
 27724  006594                     _RADIO_WriteFSKBitRate:
 27725                           	opt stack 16
 27726                           
 27727                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27728                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27729                           
 27730                           ;incstack = 0
 27731  006594  0100               	movlb	0	; () banked
 27732  006596  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 27733  006598  0E48               	movlw	72
 27734  00659A  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27735  00659C  0EE8               	movlw	232
 27736  00659E  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27737  0065A0  0E01               	movlw	1
 27738  0065A2  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27739                           
 27740                           ; BSR set to: 0
 27741                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27742  0065A4  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27743  0065A8  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27744  0065AC  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27745  0065B0  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27746  0065B4  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27747  0065B8  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27748  0065BC  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27749  0065C0  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27750  0065C4  EC1A  F030         	call	___lldiv	;wreg free
 27751  0065C8  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27752  0065CC  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27753  0065D0  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27754  0065D4  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27755                           
 27756                           ; BSR set to: 0
 27757                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27758  0065D8  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27759  0065DC  0E02               	movlw	2
 27760  0065DE  EC6F  F03A         	call	_RADIO_RegisterWrite
 27761                           
 27762                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27763  0065E2  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27764  0065E6  0E03               	movlw	3
 27765  0065E8  EC6F  F03A         	call	_RADIO_RegisterWrite
 27766                           
 27767                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27768  0065EC  0100               	movlb	0	; () banked
 27769  0065EE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27770  0065F0  0E5D               	movlw	93
 27771  0065F2  EF6F  F03A         	goto	_RADIO_RegisterWrite
 27772  0065F6                     __end_of_RADIO_WriteFSKBitRate:
 27773                           	opt stack 0
 27774                           tosu	equ	0xFFF
 27775                           tosh	equ	0xFFE
 27776                           tosl	equ	0xFFD
 27777                           pclath	equ	0xFFA
 27778                           tblptru	equ	0xFF8
 27779                           tblptrh	equ	0xFF7
 27780                           tblptrl	equ	0xFF6
 27781                           tablat	equ	0xFF5
 27782                           prodh	equ	0xFF4
 27783                           prodl	equ	0xFF3
 27784                           intcon	equ	0xFF2
 27785                           intcon2	equ	0xFF1
 27786                           intcon3	equ	0xFF0
 27787                           indf0	equ	0xFEF
 27788                           postinc0	equ	0xFEE
 27789                           fsr0h	equ	0xFEA
 27790                           fsr0l	equ	0xFE9
 27791                           wreg	equ	0xFE8
 27792                           postinc1	equ	0xFE6
 27793                           postdec1	equ	0xFE5
 27794                           plusw1	equ	0xFE3
 27795                           fsr1h	equ	0xFE2
 27796                           fsr1l	equ	0xFE1
 27797                           indf2	equ	0xFDF
 27798                           postinc2	equ	0xFDE
 27799                           postdec2	equ	0xFDD
 27800                           plusw2	equ	0xFDB
 27801                           fsr2h	equ	0xFDA
 27802                           fsr2l	equ	0xFD9
 27803                           status	equ	0xFD8
 27804                           
 27805 ;; *************** function _PrepareJoinRequestFrame *****************
 27806 ;; Defined at:
 27807 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27808 ;; Parameters:    Size  Location     Type
 27809 ;;		None
 27810 ;; Auto vars:     Size  Location     Type
 27811 ;;  mic             4  117[BANK0 ] unsigned long 
 27812 ;;  iCtr            1  123[BANK0 ] unsigned char 
 27813 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 27814 ;;  mhdr            1  121[BANK0 ] struct .
 27815 ;; Return value:  Size  Location     Type
 27816 ;;                  1    wreg      unsigned char 
 27817 ;; Registers used:
 27818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27819 ;; Tracked objects:
 27820 ;;		On entry : F/2
 27821 ;;		On exit  : F/0
 27822 ;;		Unchanged: 0/0
 27823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27825 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27827 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27828 ;;Total ram usage:        9 bytes
 27829 ;; Hardware stack levels used:    1
 27830 ;; Hardware stack levels required when called:   13
 27831 ;; This function calls:
 27832 ;;		_ComputeMic
 27833 ;;		_Random
 27834 ;;		_memcpy
 27835 ;;		_memset
 27836 ;; This function is called by:
 27837 ;;		_LORAWAN_Join
 27838 ;; This function uses a non-reentrant model
 27839 ;;
 27840                           
 27841                           	psect	text146
 27842  004650                     __ptext146:
 27843                           	opt stack 0
 27844  004650                     _PrepareJoinRequestFrame:
 27845                           	opt stack 16
 27846                           
 27847                           ; BSR set to: 2
 27848                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27849                           
 27850                           ;incstack = 0
 27851  004650  0100               	movlb	0	; () banked
 27852  004652  6BDA               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27853                           
 27854                           ; BSR set to: 0
 27855                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27856                           ;lorawan.c: 1810: uint32_t mic;
 27857                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27858  004654  0EE0               	movlw	low _macBuffer
 27859  004656  6F64               	movwf	memset@p1& (0+255),b
 27860  004658  0E04               	movlw	high _macBuffer
 27861  00465A  6F65               	movwf	(memset@p1+1)& (0+255),b
 27862  00465C  6B67               	clrf	(memset@c+1)& (0+255),b
 27863  00465E  6B66               	clrf	memset@c& (0+255),b
 27864  004660  0E01               	movlw	1
 27865  004662  6F69               	movwf	(memset@n+1)& (0+255),b
 27866  004664  0E0F               	movlw	15
 27867  004666  6F68               	movwf	memset@n& (0+255),b
 27868  004668  EC21  F039         	call	_memset	;wreg free
 27869                           
 27870                           ; BSR set to: 0
 27871                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27872  00466C  0E1F               	movlw	-225
 27873  00466E  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27874                           
 27875                           ; BSR set to: 0
 27876                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27877  004670  0EFC               	movlw	-4
 27878  004672  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27879                           
 27880                           ; BSR set to: 0
 27881                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27882  004674  0EE3               	movlw	-29
 27883  004676  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27884                           
 27885                           ; BSR set to: 0
 27886                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27887  004678  EE24  F0E0         	lfsr	2,_macBuffer
 27888  00467C  C0D9  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27889                           
 27890                           ; BSR set to: 0
 27891  004680  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27892                           
 27893                           ; BSR set to: 0
 27894                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27895  004682  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27896  004684                     l15468:
 27897                           
 27898                           ; BSR set to: 0
 27899                           ;lorawan.c: 1821: {
 27900                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27901  004684  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27902  004686  0859               	sublw	low (_loRa+89)
 27903  004688  6ED9               	movwf	fsr2l,c
 27904  00468A  0E00               	movlw	0
 27905  00468C  A0D8               	btfss	status,0,c
 27906  00468E  2AE8               	incf	wreg,f,c
 27907  004690  0802               	sublw	high (_loRa+89)
 27908  004692  6EDA               	movwf	fsr2h,c
 27909  004694  0EE0               	movlw	low _macBuffer
 27910  004696  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27911  004698  0E04               	movlw	high _macBuffer
 27912  00469A  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27913  00469C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27914  00469E  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27915  0046A0  0E00               	movlw	0
 27916  0046A2  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27917  0046A4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27918  0046A6  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27919  0046A8  6EE9               	movwf	fsr0l,c
 27920  0046AA  0E00               	movlw	0
 27921  0046AC  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27922  0046AE  6EEA               	movwf	fsr0h,c
 27923  0046B0  CFDF FFEF          	movff	indf2,indf0
 27924                           
 27925                           ; BSR set to: 0
 27926  0046B4  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27927                           
 27928                           ; BSR set to: 0
 27929  0046B6  0E07               	movlw	7
 27930  0046B8  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27931  0046BA  D7E4               	goto	l15468
 27932                           
 27933                           ; BSR set to: 0
 27934                           ;lorawan.c: 1823: }
 27935                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27936  0046BC  0E08               	movlw	8
 27937  0046BE  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27938                           
 27939                           ; BSR set to: 0
 27940                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27941  0046C0  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27942  0046C2                     l15480:
 27943                           
 27944                           ; BSR set to: 0
 27945                           ;lorawan.c: 1828: {
 27946                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27947  0046C2  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27948  0046C4  0861               	sublw	low (_loRa+97)
 27949  0046C6  6ED9               	movwf	fsr2l,c
 27950  0046C8  0E00               	movlw	0
 27951  0046CA  A0D8               	btfss	status,0,c
 27952  0046CC  2AE8               	incf	wreg,f,c
 27953  0046CE  0802               	sublw	high (_loRa+97)
 27954  0046D0  6EDA               	movwf	fsr2h,c
 27955  0046D2  0EE0               	movlw	low _macBuffer
 27956  0046D4  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27957  0046D6  0E04               	movlw	high _macBuffer
 27958  0046D8  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27959  0046DA  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27960  0046DC  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27961  0046DE  0E00               	movlw	0
 27962  0046E0  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27963  0046E2  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27964  0046E4  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27965  0046E6  6EE9               	movwf	fsr0l,c
 27966  0046E8  0E00               	movlw	0
 27967  0046EA  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27968  0046EC  6EEA               	movwf	fsr0h,c
 27969  0046EE  CFDF FFEF          	movff	indf2,indf0
 27970                           
 27971                           ; BSR set to: 0
 27972  0046F2  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27973                           
 27974                           ; BSR set to: 0
 27975  0046F4  0E07               	movlw	7
 27976  0046F6  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27977  0046F8  D7E4               	goto	l15480
 27978                           
 27979                           ; BSR set to: 0
 27980                           ;lorawan.c: 1830: }
 27981                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 27982  0046FA  0E08               	movlw	8
 27983  0046FC  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27984                           
 27985                           ; BSR set to: 0
 27986                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 27987  0046FE  6978               	setf	(Random@max+1)& (0+255),b
 27988  004700  6977               	setf	Random@max& (0+255),b
 27989  004702  ECF1  F039         	call	_Random	;wreg free
 27990  004706  C077  F2D2         	movff	?_Random,_loRa+210
 27991  00470A  C078  F2D3         	movff	?_Random+1,_loRa+211
 27992                           
 27993                           ; BSR set to: 0
 27994                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 27995  00470E  0EE0               	movlw	low _macBuffer
 27996  004710  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27997  004712  6F64               	movwf	memcpy@d1& (0+255),b
 27998  004714  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27999  004716  0E04               	movlw	high _macBuffer
 28000  004718  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 28001  00471A  0ED2               	movlw	low (_loRa+210)
 28002  00471C  6F66               	movwf	memcpy@s1& (0+255),b
 28003  00471E  0E02               	movlw	high (_loRa+210)
 28004  004720  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28005  004722  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28006  004724  0E02               	movlw	2
 28007  004726  6F68               	movwf	memcpy@n& (0+255),b
 28008  004728  EC14  F034         	call	_memcpy	;wreg free
 28009                           
 28010                           ; BSR set to: 0
 28011                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 28012  00472C  0E02               	movlw	2
 28013  00472E  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28014                           
 28015                           ; BSR set to: 0
 28016                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 28017  004730  0E42               	movlw	low (_loRa+66)
 28018  004732  6FCA               	movwf	ComputeMic@key& (0+255),b
 28019  004734  0E02               	movlw	high (_loRa+66)
 28020  004736  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 28021  004738  0EE0               	movlw	low _macBuffer
 28022  00473A  6FCC               	movwf	ComputeMic@buffer& (0+255),b
 28023  00473C  0E04               	movlw	high _macBuffer
 28024  00473E  6FCD               	movwf	(ComputeMic@buffer+1)& (0+255),b
 28025  004740  C0DA  F0CE         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 28026  004744  EC69  F034         	call	_ComputeMic	;wreg free
 28027  004748  C0CA  F0D5         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 28028  00474C  C0CB  F0D6         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 28029  004750  C0CC  F0D7         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 28030  004754  C0CD  F0D8         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 28031                           
 28032                           ; BSR set to: 0
 28033                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 28034  004758  0EE0               	movlw	low _macBuffer
 28035  00475A  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28036  00475C  6F64               	movwf	memcpy@d1& (0+255),b
 28037  00475E  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28038  004760  0E04               	movlw	high _macBuffer
 28039  004762  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 28040  004764  0ED5               	movlw	low PrepareJoinRequestFrame@mic
 28041  004766  6F66               	movwf	memcpy@s1& (0+255),b
 28042  004768  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 28043  00476A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28044  00476C  0E04               	movlw	4
 28045  00476E  6F68               	movwf	memcpy@n& (0+255),b
 28046  004770  EC14  F034         	call	_memcpy	;wreg free
 28047                           
 28048                           ; BSR set to: 0
 28049                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 28050  004774  0E04               	movlw	4
 28051  004776  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28052                           
 28053                           ; BSR set to: 0
 28054                           ;lorawan.c: 1842: return bufferIndex;
 28055  004778  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28056                           
 28057                           ; BSR set to: 0
 28058  00477A  0012               	return		;funcret
 28059  00477C                     __end_of_PrepareJoinRequestFrame:
 28060                           	opt stack 0
 28061                           tosu	equ	0xFFF
 28062                           tosh	equ	0xFFE
 28063                           tosl	equ	0xFFD
 28064                           pclath	equ	0xFFA
 28065                           tblptru	equ	0xFF8
 28066                           tblptrh	equ	0xFF7
 28067                           tblptrl	equ	0xFF6
 28068                           tablat	equ	0xFF5
 28069                           prodh	equ	0xFF4
 28070                           prodl	equ	0xFF3
 28071                           intcon	equ	0xFF2
 28072                           intcon2	equ	0xFF1
 28073                           intcon3	equ	0xFF0
 28074                           indf0	equ	0xFEF
 28075                           postinc0	equ	0xFEE
 28076                           fsr0h	equ	0xFEA
 28077                           fsr0l	equ	0xFE9
 28078                           wreg	equ	0xFE8
 28079                           postinc1	equ	0xFE6
 28080                           postdec1	equ	0xFE5
 28081                           plusw1	equ	0xFE3
 28082                           fsr1h	equ	0xFE2
 28083                           fsr1l	equ	0xFE1
 28084                           indf2	equ	0xFDF
 28085                           postinc2	equ	0xFDE
 28086                           postdec2	equ	0xFDD
 28087                           plusw2	equ	0xFDB
 28088                           fsr2h	equ	0xFDA
 28089                           fsr2l	equ	0xFD9
 28090                           status	equ	0xFD8
 28091                           
 28092 ;; *************** function _Random *****************
 28093 ;; Defined at:
 28094 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28095 ;; Parameters:    Size  Location     Type
 28096 ;;  max             2   23[BANK0 ] unsigned int 
 28097 ;; Auto vars:     Size  Location     Type
 28098 ;;		None
 28099 ;; Return value:  Size  Location     Type
 28100 ;;                  2   23[BANK0 ] unsigned int 
 28101 ;; Registers used:
 28102 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28103 ;; Tracked objects:
 28104 ;;		On entry : F/0
 28105 ;;		On exit  : F/0
 28106 ;;		Unchanged: 0/0
 28107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28108 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28112 ;;Total ram usage:        2 bytes
 28113 ;; Hardware stack levels used:    1
 28114 ;; Hardware stack levels required when called:    9
 28115 ;; This function calls:
 28116 ;;		___lwmod
 28117 ;;		_rand
 28118 ;; This function is called by:
 28119 ;;		_SearchAvailableChannel
 28120 ;;		_PrepareJoinRequestFrame
 28121 ;; This function uses a non-reentrant model
 28122 ;;
 28123                           
 28124                           	psect	text147
 28125  0073E2                     __ptext147:
 28126                           	opt stack 0
 28127  0073E2                     _Random:
 28128                           	opt stack 17
 28129                           
 28130                           ; BSR set to: 0
 28131                           ;lorawan.c: 1118: return (rand () % max);
 28132                           
 28133                           ; BSR set to: 0
 28134                           ;incstack = 0
 28135  0073E2  ECE2  F034         	call	_rand	;wreg free
 28136  0073E6  C070  F072         	movff	?_rand,___lwmod@dividend
 28137  0073EA  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 28138  0073EE  C077  F074         	movff	Random@max,___lwmod@divisor
 28139  0073F2  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 28140  0073F6  ECB5  F036         	call	___lwmod	;wreg free
 28141  0073FA  C072  F077         	movff	?___lwmod,?_Random
 28142  0073FE  C073  F078         	movff	?___lwmod+1,?_Random+1
 28143                           
 28144                           ; BSR set to: 0
 28145  007402  0012               	return		;funcret
 28146  007404                     __end_of_Random:
 28147                           	opt stack 0
 28148                           tosu	equ	0xFFF
 28149                           tosh	equ	0xFFE
 28150                           tosl	equ	0xFFD
 28151                           pclath	equ	0xFFA
 28152                           tblptru	equ	0xFF8
 28153                           tblptrh	equ	0xFF7
 28154                           tblptrl	equ	0xFF6
 28155                           tablat	equ	0xFF5
 28156                           prodh	equ	0xFF4
 28157                           prodl	equ	0xFF3
 28158                           intcon	equ	0xFF2
 28159                           intcon2	equ	0xFF1
 28160                           intcon3	equ	0xFF0
 28161                           indf0	equ	0xFEF
 28162                           postinc0	equ	0xFEE
 28163                           fsr0h	equ	0xFEA
 28164                           fsr0l	equ	0xFE9
 28165                           wreg	equ	0xFE8
 28166                           postinc1	equ	0xFE6
 28167                           postdec1	equ	0xFE5
 28168                           plusw1	equ	0xFE3
 28169                           fsr1h	equ	0xFE2
 28170                           fsr1l	equ	0xFE1
 28171                           indf2	equ	0xFDF
 28172                           postinc2	equ	0xFDE
 28173                           postdec2	equ	0xFDD
 28174                           plusw2	equ	0xFDB
 28175                           fsr2h	equ	0xFDA
 28176                           fsr2l	equ	0xFD9
 28177                           status	equ	0xFD8
 28178                           
 28179 ;; *************** function _rand *****************
 28180 ;; Defined at:
 28181 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 28182 ;; Parameters:    Size  Location     Type
 28183 ;;		None
 28184 ;; Auto vars:     Size  Location     Type
 28185 ;;		None
 28186 ;; Return value:  Size  Location     Type
 28187 ;;                  2   16[BANK0 ] int 
 28188 ;; Registers used:
 28189 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28190 ;; Tracked objects:
 28191 ;;		On entry : F/0
 28192 ;;		On exit  : F/0
 28193 ;;		Unchanged: 0/0
 28194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28195 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28198 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28199 ;;Total ram usage:        2 bytes
 28200 ;; Hardware stack levels used:    1
 28201 ;; Hardware stack levels required when called:    8
 28202 ;; This function calls:
 28203 ;;		___lmul
 28204 ;; This function is called by:
 28205 ;;		_Random
 28206 ;; This function uses a non-reentrant model
 28207 ;;
 28208                           
 28209                           	psect	text148
 28210  0069C4                     __ptext148:
 28211                           	opt stack 0
 28212  0069C4                     _rand:
 28213                           	opt stack 17
 28214                           
 28215                           ; BSR set to: 0
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;incstack = 0
 28219  0069C4  C052  F064         	movff	_randx,___lmul@multiplier
 28220  0069C8  C053  F065         	movff	_randx+1,___lmul@multiplier+1
 28221  0069CC  C054  F066         	movff	_randx+2,___lmul@multiplier+2
 28222  0069D0  C055  F067         	movff	_randx+3,___lmul@multiplier+3
 28223  0069D4  0E6D               	movlw	109
 28224  0069D6  6F68               	movwf	___lmul@multiplicand& (0+255),b
 28225  0069D8  0E4E               	movlw	78
 28226  0069DA  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28227  0069DC  0EC6               	movlw	198
 28228  0069DE  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28229  0069E0  0E41               	movlw	65
 28230  0069E2  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28231  0069E4  EC9C  F02E         	call	___lmul	;wreg free
 28232  0069E8  C064  F052         	movff	?___lmul,_randx
 28233  0069EC  C065  F053         	movff	?___lmul+1,_randx+1
 28234  0069F0  C066  F054         	movff	?___lmul+2,_randx+2
 28235  0069F4  C067  F055         	movff	?___lmul+3,_randx+3
 28236                           
 28237                           ; BSR set to: 0
 28238  0069F8  0E39               	movlw	57
 28239  0069FA  2652               	addwf	_randx,f,c
 28240  0069FC  0E30               	movlw	48
 28241  0069FE  2253               	addwfc	_randx+1,f,c
 28242  006A00  0E00               	movlw	0
 28243  006A02  2254               	addwfc	_randx+2,f,c
 28244  006A04  2255               	addwfc	_randx+3,f,c
 28245                           
 28246                           ; BSR set to: 0
 28247  006A06  5054               	movf	_randx+2,w,c
 28248  006A08  6F70               	movwf	?_rand& (0+255),b
 28249  006A0A  0E7F               	movlw	127
 28250  006A0C  1455               	andwf	_randx+3,w,c
 28251  006A0E  6F71               	movwf	(?_rand+1)& (0+255),b
 28252                           
 28253                           ; BSR set to: 0
 28254  006A10  0012               	return		;funcret
 28255  006A12                     __end_of_rand:
 28256                           	opt stack 0
 28257                           tosu	equ	0xFFF
 28258                           tosh	equ	0xFFE
 28259                           tosl	equ	0xFFD
 28260                           pclath	equ	0xFFA
 28261                           tblptru	equ	0xFF8
 28262                           tblptrh	equ	0xFF7
 28263                           tblptrl	equ	0xFF6
 28264                           tablat	equ	0xFF5
 28265                           prodh	equ	0xFF4
 28266                           prodl	equ	0xFF3
 28267                           intcon	equ	0xFF2
 28268                           intcon2	equ	0xFF1
 28269                           intcon3	equ	0xFF0
 28270                           indf0	equ	0xFEF
 28271                           postinc0	equ	0xFEE
 28272                           fsr0h	equ	0xFEA
 28273                           fsr0l	equ	0xFE9
 28274                           wreg	equ	0xFE8
 28275                           postinc1	equ	0xFE6
 28276                           postdec1	equ	0xFE5
 28277                           plusw1	equ	0xFE3
 28278                           fsr1h	equ	0xFE2
 28279                           fsr1l	equ	0xFE1
 28280                           indf2	equ	0xFDF
 28281                           postinc2	equ	0xFDE
 28282                           postdec2	equ	0xFDD
 28283                           plusw2	equ	0xFDB
 28284                           fsr2h	equ	0xFDA
 28285                           fsr2l	equ	0xFD9
 28286                           status	equ	0xFD8
 28287                           
 28288 ;; *************** function ___lmul *****************
 28289 ;; Defined at:
 28290 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 28291 ;; Parameters:    Size  Location     Type
 28292 ;;  multiplier      4    4[BANK0 ] unsigned long 
 28293 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 28294 ;; Auto vars:     Size  Location     Type
 28295 ;;  product         4   12[BANK0 ] unsigned long 
 28296 ;; Return value:  Size  Location     Type
 28297 ;;                  4    4[BANK0 ] unsigned long 
 28298 ;; Registers used:
 28299 ;;		wreg, status,2, status,0, prodl, prodh
 28300 ;; Tracked objects:
 28301 ;;		On entry : F/0
 28302 ;;		On exit  : F/0
 28303 ;;		Unchanged: 0/0
 28304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28305 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28306 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28308 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28309 ;;Total ram usage:       12 bytes
 28310 ;; Hardware stack levels used:    1
 28311 ;; Hardware stack levels required when called:    7
 28312 ;; This function calls:
 28313 ;;		Nothing
 28314 ;; This function is called by:
 28315 ;;		_RADIO_WriteConfiguration
 28316 ;;		_ExecuteNewChannel
 28317 ;;		_ExecuteRxParamSetupReq
 28318 ;;		_UpdateCfList
 28319 ;;		_rand
 28320 ;; This function uses a non-reentrant model
 28321 ;;
 28322                           
 28323                           	psect	text149
 28324  005D38                     __ptext149:
 28325                           	opt stack 0
 28326  005D38                     ___lmul:
 28327                           	opt stack 17
 28328                           
 28329                           ; BSR set to: 0
 28330                           
 28331                           ; BSR set to: 0
 28332                           ;incstack = 0
 28333  005D38  5164               	movf	___lmul@multiplier& (0+255),w,b
 28334  005D3A  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28335  005D3C  CFF3 F06C          	movff	prodl,___lmul@product
 28336  005D40  CFF4 F06D          	movff	prodh,___lmul@product+1
 28337  005D44  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 28338  005D46  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 28339  005D48  5164               	movf	___lmul@multiplier& (0+255),w,b
 28340  005D4A  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28341  005D4C  50F3               	movf	prodl,w,c
 28342  005D4E  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28343  005D50  50F4               	movf	prodh,w,c
 28344  005D52  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28345  005D54  0E00               	movlw	0
 28346  005D56  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28347  005D58  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28348  005D5A  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28349  005D5C  50F3               	movf	prodl,w,c
 28350  005D5E  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28351  005D60  50F4               	movf	prodh,w,c
 28352  005D62  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28353  005D64  0E00               	movlw	0
 28354  005D66  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28355  005D68  5164               	movf	___lmul@multiplier& (0+255),w,b
 28356  005D6A  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28357  005D6C  50F3               	movf	prodl,w,c
 28358  005D6E  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28359  005D70  50F4               	movf	prodh,w,c
 28360  005D72  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28361  005D74  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28362  005D76  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28363  005D78  50F3               	movf	prodl,w,c
 28364  005D7A  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28365  005D7C  50F4               	movf	prodh,w,c
 28366  005D7E  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28367  005D80  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28368  005D82  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28369  005D84  50F3               	movf	prodl,w,c
 28370  005D86  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28371  005D88  50F4               	movf	prodh,w,c
 28372  005D8A  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28373  005D8C  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28374  005D8E  0364               	mulwf	___lmul@multiplier& (0+255),b
 28375  005D90  50F3               	movf	prodl,w,c
 28376  005D92  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28377  005D94  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28378  005D96  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28379  005D98  50F3               	movf	prodl,w,c
 28380  005D9A  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28381  005D9C  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28382  005D9E  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28383  005DA0  50F3               	movf	prodl,w,c
 28384  005DA2  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28385  005DA4  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 28386  005DA6  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28387  005DA8  50F3               	movf	prodl,w,c
 28388  005DAA  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28389                           
 28390                           ; BSR set to: 0
 28391  005DAC  C06C  F064         	movff	___lmul@product,?___lmul
 28392  005DB0  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 28393  005DB4  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 28394  005DB8  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 28395                           
 28396                           ; BSR set to: 0
 28397  005DBC  0012               	return		;funcret
 28398  005DBE                     __end_of___lmul:
 28399                           	opt stack 0
 28400                           tosu	equ	0xFFF
 28401                           tosh	equ	0xFFE
 28402                           tosl	equ	0xFFD
 28403                           pclath	equ	0xFFA
 28404                           tblptru	equ	0xFF8
 28405                           tblptrh	equ	0xFF7
 28406                           tblptrl	equ	0xFF6
 28407                           tablat	equ	0xFF5
 28408                           prodh	equ	0xFF4
 28409                           prodl	equ	0xFF3
 28410                           intcon	equ	0xFF2
 28411                           intcon2	equ	0xFF1
 28412                           intcon3	equ	0xFF0
 28413                           indf0	equ	0xFEF
 28414                           postinc0	equ	0xFEE
 28415                           fsr0h	equ	0xFEA
 28416                           fsr0l	equ	0xFE9
 28417                           wreg	equ	0xFE8
 28418                           postinc1	equ	0xFE6
 28419                           postdec1	equ	0xFE5
 28420                           plusw1	equ	0xFE3
 28421                           fsr1h	equ	0xFE2
 28422                           fsr1l	equ	0xFE1
 28423                           indf2	equ	0xFDF
 28424                           postinc2	equ	0xFDE
 28425                           postdec2	equ	0xFDD
 28426                           plusw2	equ	0xFDB
 28427                           fsr2h	equ	0xFDA
 28428                           fsr2l	equ	0xFD9
 28429                           status	equ	0xFD8
 28430                           
 28431 ;; *************** function ___lwmod *****************
 28432 ;; Defined at:
 28433 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 28434 ;; Parameters:    Size  Location     Type
 28435 ;;  dividend        2   18[BANK0 ] unsigned int 
 28436 ;;  divisor         2   20[BANK0 ] unsigned int 
 28437 ;; Auto vars:     Size  Location     Type
 28438 ;;  counter         1   22[BANK0 ] unsigned char 
 28439 ;; Return value:  Size  Location     Type
 28440 ;;                  2   18[BANK0 ] unsigned int 
 28441 ;; Registers used:
 28442 ;;		wreg, status,2, status,0
 28443 ;; Tracked objects:
 28444 ;;		On entry : F/0
 28445 ;;		On exit  : F/0
 28446 ;;		Unchanged: 0/0
 28447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28448 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28451 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28452 ;;Total ram usage:        5 bytes
 28453 ;; Hardware stack levels used:    1
 28454 ;; Hardware stack levels required when called:    7
 28455 ;; This function calls:
 28456 ;;		Nothing
 28457 ;; This function is called by:
 28458 ;;		_Random
 28459 ;; This function uses a non-reentrant model
 28460 ;;
 28461                           
 28462                           	psect	text150
 28463  006D6A                     __ptext150:
 28464                           	opt stack 0
 28465  006D6A                     ___lwmod:
 28466                           	opt stack 18
 28467                           
 28468                           ; BSR set to: 0
 28469                           
 28470                           ; BSR set to: 0
 28471                           ;incstack = 0
 28472  006D6A  5174               	movf	___lwmod@divisor& (0+255),w,b
 28473  006D6C  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28474  006D6E  E017               	bz	l3167
 28475                           
 28476                           ; BSR set to: 0
 28477  006D70  0E01               	movlw	1
 28478  006D72  6F76               	movwf	___lwmod@counter& (0+255),b
 28479  006D74  D004               	goto	l12428
 28480  006D76                     l12426:
 28481                           
 28482                           ; BSR set to: 0
 28483  006D76  90D8               	bcf	status,0,c
 28484  006D78  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 28485  006D7A  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28486  006D7C  2B76               	incf	___lwmod@counter& (0+255),f,b
 28487  006D7E                     l12428:
 28488                           
 28489                           ; BSR set to: 0
 28490  006D7E  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28491  006D80  D7FA               	goto	l12426
 28492  006D82                     l12430:
 28493                           
 28494                           ; BSR set to: 0
 28495  006D82  5174               	movf	___lwmod@divisor& (0+255),w,b
 28496  006D84  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 28497  006D86  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28498  006D88  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28499  006D8A  E304               	bnc	l12434
 28500                           
 28501                           ; BSR set to: 0
 28502  006D8C  5174               	movf	___lwmod@divisor& (0+255),w,b
 28503  006D8E  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 28504  006D90  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28505  006D92  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28506  006D94                     l12434:
 28507                           
 28508                           ; BSR set to: 0
 28509  006D94  90D8               	bcf	status,0,c
 28510  006D96  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28511  006D98  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 28512                           
 28513                           ; BSR set to: 0
 28514  006D9A  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 28515  006D9C  D7F2               	goto	l12430
 28516  006D9E                     l3167:
 28517                           
 28518                           ; BSR set to: 0
 28519  006D9E  C072  F072         	movff	___lwmod@dividend,?___lwmod
 28520  006DA2  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 28521                           
 28522                           ; BSR set to: 0
 28523  006DA6  0012               	return		;funcret
 28524  006DA8                     __end_of___lwmod:
 28525                           	opt stack 0
 28526                           tosu	equ	0xFFF
 28527                           tosh	equ	0xFFE
 28528                           tosl	equ	0xFFD
 28529                           pclath	equ	0xFFA
 28530                           tblptru	equ	0xFF8
 28531                           tblptrh	equ	0xFF7
 28532                           tblptrl	equ	0xFF6
 28533                           tablat	equ	0xFF5
 28534                           prodh	equ	0xFF4
 28535                           prodl	equ	0xFF3
 28536                           intcon	equ	0xFF2
 28537                           intcon2	equ	0xFF1
 28538                           intcon3	equ	0xFF0
 28539                           indf0	equ	0xFEF
 28540                           postinc0	equ	0xFEE
 28541                           fsr0h	equ	0xFEA
 28542                           fsr0l	equ	0xFE9
 28543                           wreg	equ	0xFE8
 28544                           postinc1	equ	0xFE6
 28545                           postdec1	equ	0xFE5
 28546                           plusw1	equ	0xFE3
 28547                           fsr1h	equ	0xFE2
 28548                           fsr1l	equ	0xFE1
 28549                           indf2	equ	0xFDF
 28550                           postinc2	equ	0xFDE
 28551                           postdec2	equ	0xFDD
 28552                           plusw2	equ	0xFDB
 28553                           fsr2h	equ	0xFDA
 28554                           fsr2l	equ	0xFD9
 28555                           status	equ	0xFD8
 28556                           
 28557 ;; *************** function _ComputeMic *****************
 28558 ;; Defined at:
 28559 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28560 ;; Parameters:    Size  Location     Type
 28561 ;;  key             2  106[BANK0 ] PTR unsigned char 
 28562 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28563 ;;  buffer          2  108[BANK0 ] PTR unsigned char 
 28564 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28565 ;;  bufferLength    1  110[BANK0 ] unsigned char 
 28566 ;; Auto vars:     Size  Location     Type
 28567 ;;  mic             4  111[BANK0 ] unsigned long 
 28568 ;; Return value:  Size  Location     Type
 28569 ;;                  4  106[BANK0 ] unsigned long 
 28570 ;; Registers used:
 28571 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28572 ;; Tracked objects:
 28573 ;;		On entry : F/0
 28574 ;;		On exit  : F/0
 28575 ;;		Unchanged: 0/0
 28576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28577 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28578 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28580 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28581 ;;Total ram usage:        9 bytes
 28582 ;; Hardware stack levels used:    1
 28583 ;; Hardware stack levels required when called:   12
 28584 ;; This function calls:
 28585 ;;		_AESCmac
 28586 ;;		_memcpy
 28587 ;; This function is called by:
 28588 ;;		_LORAWAN_RxDone
 28589 ;;		_PrepareJoinRequestFrame
 28590 ;; This function uses a non-reentrant model
 28591 ;;
 28592                           
 28593                           	psect	text151
 28594  0068D2                     __ptext151:
 28595                           	opt stack 0
 28596  0068D2                     _ComputeMic:
 28597                           	opt stack 14
 28598                           
 28599                           ; BSR set to: 0
 28600                           ;lorawan.c: 2196: uint32_t mic = 0;
 28601                           
 28602                           ; BSR set to: 0
 28603                           ;incstack = 0
 28604  0068D2  6BCF               	clrf	ComputeMic@mic& (0+255),b
 28605  0068D4  6BD0               	clrf	(ComputeMic@mic+1)& (0+255),b
 28606  0068D6  6BD1               	clrf	(ComputeMic@mic+2)& (0+255),b
 28607  0068D8  6BD2               	clrf	(ComputeMic@mic+3)& (0+255),b
 28608                           
 28609                           ; BSR set to: 0
 28610                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28611  0068DA  C0CA  F0BC         	movff	ComputeMic@key,AESCmac@key
 28612  0068DE  C0CB  F0BD         	movff	ComputeMic@key+1,AESCmac@key+1
 28613  0068E2  0E9F               	movlw	low _aesBuffer
 28614  0068E4  6FBE               	movwf	AESCmac@output& (0+255),b
 28615  0068E6  0E01               	movlw	high _aesBuffer
 28616  0068E8  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 28617  0068EA  C0CC  F0C0         	movff	ComputeMic@buffer,AESCmac@input
 28618  0068EE  C0CD  F0C1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28619  0068F2  C0CE  F0C2         	movff	ComputeMic@bufferLength,AESCmac@size
 28620  0068F6  EC0C  F00C         	call	_AESCmac	;wreg free
 28621                           
 28622                           ; BSR set to: 0
 28623                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28624  0068FA  0ECF               	movlw	low ComputeMic@mic
 28625  0068FC  6F64               	movwf	memcpy@d1& (0+255),b
 28626  0068FE  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28627  006900  0E9F               	movlw	low _aesBuffer
 28628  006902  6F66               	movwf	memcpy@s1& (0+255),b
 28629  006904  0E01               	movlw	high _aesBuffer
 28630  006906  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28631  006908  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28632  00690A  0E04               	movlw	4
 28633  00690C  6F68               	movwf	memcpy@n& (0+255),b
 28634  00690E  EC14  F034         	call	_memcpy	;wreg free
 28635                           
 28636                           ; BSR set to: 0
 28637                           ;lorawan.c: 2202: return mic;
 28638  006912  C0CF  F0CA         	movff	ComputeMic@mic,?_ComputeMic
 28639  006916  C0D0  F0CB         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28640  00691A  C0D1  F0CC         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28641  00691E  C0D2  F0CD         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28642                           
 28643                           ; BSR set to: 0
 28644  006922  0012               	return		;funcret
 28645  006924                     __end_of_ComputeMic:
 28646                           	opt stack 0
 28647                           tosu	equ	0xFFF
 28648                           tosh	equ	0xFFE
 28649                           tosl	equ	0xFFD
 28650                           pclath	equ	0xFFA
 28651                           tblptru	equ	0xFF8
 28652                           tblptrh	equ	0xFF7
 28653                           tblptrl	equ	0xFF6
 28654                           tablat	equ	0xFF5
 28655                           prodh	equ	0xFF4
 28656                           prodl	equ	0xFF3
 28657                           intcon	equ	0xFF2
 28658                           intcon2	equ	0xFF1
 28659                           intcon3	equ	0xFF0
 28660                           indf0	equ	0xFEF
 28661                           postinc0	equ	0xFEE
 28662                           fsr0h	equ	0xFEA
 28663                           fsr0l	equ	0xFE9
 28664                           wreg	equ	0xFE8
 28665                           postinc1	equ	0xFE6
 28666                           postdec1	equ	0xFE5
 28667                           plusw1	equ	0xFE3
 28668                           fsr1h	equ	0xFE2
 28669                           fsr1l	equ	0xFE1
 28670                           indf2	equ	0xFDF
 28671                           postinc2	equ	0xFDE
 28672                           postdec2	equ	0xFDD
 28673                           plusw2	equ	0xFDB
 28674                           fsr2h	equ	0xFDA
 28675                           fsr2l	equ	0xFD9
 28676                           status	equ	0xFD8
 28677                           
 28678 ;; *************** function _AESCmac *****************
 28679 ;; Defined at:
 28680 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28681 ;; Parameters:    Size  Location     Type
 28682 ;;  key             2   92[BANK0 ] PTR unsigned char 
 28683 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28684 ;;  output          2   94[BANK0 ] PTR unsigned char 
 28685 ;;		 -> aesBuffer(16), 
 28686 ;;  input           2   96[BANK0 ] PTR unsigned char 
 28687 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28688 ;;  size            1   98[BANK0 ] unsigned char 
 28689 ;; Auto vars:     Size  Location     Type
 28690 ;;  x              16   80[BANK1 ] unsigned char [16]
 28691 ;;  y              16   64[BANK1 ] unsigned char [16]
 28692 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28693 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28694 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28695 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28696 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28697 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28698 ;;  i               1  101[BANK1 ] unsigned char 
 28699 ;;  j               1  100[BANK1 ] unsigned char 
 28700 ;;  n               1   99[BANK1 ] unsigned char 
 28701 ;;  flag            1   98[BANK1 ] unsigned char 
 28702 ;; Return value:  Size  Location     Type
 28703 ;;                  1    wreg      void 
 28704 ;; Registers used:
 28705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28706 ;; Tracked objects:
 28707 ;;		On entry : F/0
 28708 ;;		On exit  : F/0
 28709 ;;		Unchanged: 0/0
 28710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28711 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28712 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28713 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28714 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28715 ;;Total ram usage:      116 bytes
 28716 ;; Hardware stack levels used:    1
 28717 ;; Hardware stack levels required when called:   11
 28718 ;; This function calls:
 28719 ;;		_AESEncodeLoRa
 28720 ;;		_GenerateSubkey
 28721 ;;		_memcpy
 28722 ;;		_memset
 28723 ;; This function is called by:
 28724 ;;		_LORAWAN_RxDone
 28725 ;;		_AssemblePacket
 28726 ;;		_ComputeMic
 28727 ;; This function uses a non-reentrant model
 28728 ;;
 28729                           
 28730                           	psect	text152
 28731  001818                     __ptext152:
 28732                           	opt stack 0
 28733  001818                     _AESCmac:
 28734                           	opt stack 16
 28735                           
 28736                           ; BSR set to: 0
 28737                           
 28738                           ; BSR set to: 0
 28739                           ;incstack = 0
 28740  001818  0101               	movlb	1	; () banked
 28741  00181A  6B65               	clrf	AESCmac@i& (0+255),b
 28742  00181C  6B64               	clrf	AESCmac@j& (0+255),b
 28743                           
 28744                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28745  00181E  6B62               	clrf	AESCmac@flag& (0+255),b
 28746                           
 28747                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28748                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28749                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28750  001820  6B60               	clrf	AESCmac@ptr& (0+255),b
 28751  001822  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 28752                           
 28753                           ; BSR set to: 1
 28754                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28755  001824  C0BC  F094         	movff	AESCmac@key,GenerateSubkey@key
 28756  001828  C0BD  F095         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28757  00182C  0E10               	movlw	low AESCmac@k1
 28758  00182E  0100               	movlb	0	; () banked
 28759  001830  6F96               	movwf	GenerateSubkey@k1& (0+255),b
 28760  001832  0E01               	movlw	high AESCmac@k1
 28761  001834  6F97               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28762  001836  0E00               	movlw	low AESCmac@k2
 28763  001838  6F98               	movwf	GenerateSubkey@k2& (0+255),b
 28764  00183A  0E01               	movlw	high AESCmac@k2
 28765  00183C  6F99               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28766  00183E  EC41  F024         	call	_GenerateSubkey	;wreg free
 28767                           
 28768                           ; BSR set to: 0
 28769                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28770  001842  51C2               	movf	AESCmac@size& (0+255),w,b
 28771  001844  6FC3               	movwf	??_AESCmac& (0+255),b
 28772  001846  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28773  001848  0E0F               	movlw	15
 28774  00184A  27C3               	addwf	??_AESCmac& (0+255),f,b
 28775  00184C  0E00               	movlw	0
 28776  00184E  23C4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28777  001850  0E04               	movlw	4
 28778  001852  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28779  001854                     u14245:
 28780  001854  35C4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28781  001856  33C4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28782  001858  33C3               	rrcf	??_AESCmac& (0+255),f,b
 28783  00185A  2FC5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28784  00185C  D7FB               	goto	u14245
 28785  00185E  51C3               	movf	??_AESCmac& (0+255),w,b
 28786  001860  0101               	movlb	1	; () banked
 28787  001862  6F63               	movwf	AESCmac@n& (0+255),b
 28788                           
 28789                           ; BSR set to: 1
 28790                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28791  001864  5163               	movf	AESCmac@n& (0+255),w,b
 28792  001866  E104               	bnz	l13056
 28793                           
 28794                           ; BSR set to: 1
 28795                           ;lorawan_aes_cmac.c: 53: {
 28796                           ;lorawan_aes_cmac.c: 54: n = 1;
 28797  001868  0E01               	movlw	1
 28798  00186A  6F63               	movwf	AESCmac@n& (0+255),b
 28799                           
 28800                           ; BSR set to: 1
 28801                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28802  00186C  6B62               	clrf	AESCmac@flag& (0+255),b
 28803                           
 28804                           ;lorawan_aes_cmac.c: 56: }
 28805  00186E  D00A               	goto	l1454
 28806  001870                     l13056:
 28807                           
 28808                           ; BSR set to: 1
 28809                           ;lorawan_aes_cmac.c: 57: else
 28810                           ;lorawan_aes_cmac.c: 58: {
 28811                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28812  001870  C0C2  F0C3         	movff	AESCmac@size,??_AESCmac
 28813  001874  0E0F               	movlw	15
 28814  001876  0100               	movlb	0	; () banked
 28815  001878  17C3               	andwf	??_AESCmac& (0+255),f,b
 28816  00187A  0E01               	movlw	1
 28817  00187C  A4D8               	btfss	status,2,c
 28818  00187E  0E00               	movlw	0
 28819  001880  0101               	movlb	1	; () banked
 28820  001882  6F62               	movwf	AESCmac@flag& (0+255),b
 28821  001884                     l1454:
 28822                           
 28823                           ; BSR set to: 1
 28824                           ;lorawan_aes_cmac.c: 60: }
 28825                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28826  001884  0562               	decf	AESCmac@flag& (0+255),w,b
 28827  001886  E141               	bnz	l13070
 28828                           
 28829                           ; BSR set to: 1
 28830                           ;lorawan_aes_cmac.c: 63: {
 28831                           ;lorawan_aes_cmac.c: 64: j = 0;
 28832  001888  6B64               	clrf	AESCmac@j& (0+255),b
 28833                           
 28834                           ; BSR set to: 1
 28835                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28836  00188A  5163               	movf	AESCmac@n& (0+255),w,b
 28837  00188C  0D10               	mullw	16
 28838  00188E  50F3               	movf	prodl,w,c
 28839  001890  0FF0               	addlw	240
 28840  001892  6F65               	movwf	AESCmac@i& (0+255),b
 28841  001894  D01E               	goto	l13068
 28842  001896                     l13062:
 28843                           
 28844                           ; BSR set to: 0
 28845                           ;lorawan_aes_cmac.c: 66: {
 28846                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28847  001896  0E20               	movlw	low AESCmac@mLast
 28848  001898  0101               	movlb	1	; () banked
 28849  00189A  2564               	addwf	AESCmac@j& (0+255),w,b
 28850  00189C  6ED9               	movwf	fsr2l,c
 28851  00189E  6ADA               	clrf	fsr2h,c
 28852  0018A0  0E01               	movlw	high AESCmac@mLast
 28853  0018A2  22DA               	addwfc	fsr2h,f,c
 28854  0018A4  0E10               	movlw	low AESCmac@k1
 28855  0018A6  2564               	addwf	AESCmac@j& (0+255),w,b
 28856  0018A8  6EE9               	movwf	fsr0l,c
 28857  0018AA  6AEA               	clrf	fsr0h,c
 28858  0018AC  0E01               	movlw	high AESCmac@k1
 28859  0018AE  22EA               	addwfc	fsr0h,f,c
 28860  0018B0  50EF               	movf	indf0,w,c
 28861  0018B2  0100               	movlb	0	; () banked
 28862  0018B4  6FC3               	movwf	??_AESCmac& (0+255),b
 28863  0018B6  0101               	movlb	1	; () banked
 28864  0018B8  5165               	movf	AESCmac@i& (0+255),w,b
 28865  0018BA  0100               	movlb	0	; () banked
 28866  0018BC  25C0               	addwf	AESCmac@input& (0+255),w,b
 28867  0018BE  6EE9               	movwf	fsr0l,c
 28868  0018C0  0E00               	movlw	0
 28869  0018C2  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28870  0018C4  6EEA               	movwf	fsr0h,c
 28871  0018C6  50EF               	movf	indf0,w,c
 28872  0018C8  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28873  0018CA  6EDF               	movwf	indf2,c
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;lorawan_aes_cmac.c: 68: j++;
 28877  0018CC  0101               	movlb	1	; () banked
 28878  0018CE  2B64               	incf	AESCmac@j& (0+255),f,b
 28879                           
 28880                           ; BSR set to: 1
 28881  0018D0  2B65               	incf	AESCmac@i& (0+255),f,b
 28882  0018D2                     l13068:
 28883                           
 28884                           ; BSR set to: 1
 28885  0018D2  5163               	movf	AESCmac@n& (0+255),w,b
 28886  0018D4  0100               	movlb	0	; () banked
 28887  0018D6  6FC3               	movwf	??_AESCmac& (0+255),b
 28888  0018D8  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28889  0018DA  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28890  0018DC  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28891  0018DE  0EF0               	movlw	240
 28892  0018E0  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28893  0018E2  51C3               	movf	??_AESCmac& (0+255),w,b
 28894  0018E4  0B0F               	andlw	15
 28895  0018E6  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28896  0018E8  0EF0               	movlw	240
 28897  0018EA  17C3               	andwf	??_AESCmac& (0+255),f,b
 28898  0018EC  0101               	movlb	1	; () banked
 28899  0018EE  5165               	movf	AESCmac@i& (0+255),w,b
 28900  0018F0  0100               	movlb	0	; () banked
 28901  0018F2  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28902  0018F4  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 28903  0018F6  51C3               	movf	??_AESCmac& (0+255),w,b
 28904  0018F8  5DC5               	subwf	(??_AESCmac+2)& (0+255),w,b
 28905  0018FA  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 28906  0018FC  0A80               	xorlw	128
 28907  0018FE  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28908  001900  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28909  001902  0A80               	xorlw	128
 28910  001904  59C7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28911  001906  E263               	bc	l13100
 28912  001908  D7C6               	goto	l13062
 28913  00190A                     l13070:
 28914                           
 28915                           ; BSR set to: 1
 28916                           ;lorawan_aes_cmac.c: 71: else
 28917                           ;lorawan_aes_cmac.c: 72: {
 28918                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28919  00190A  0100               	movlb	0	; () banked
 28920  00190C  51C2               	movf	AESCmac@size& (0+255),w,b
 28921  00190E  25C0               	addwf	AESCmac@input& (0+255),w,b
 28922  001910  6FC3               	movwf	??_AESCmac& (0+255),b
 28923  001912  0E00               	movlw	0
 28924  001914  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28925  001916  6FC4               	movwf	(??_AESCmac+1)& (0+255),b
 28926  001918  51C2               	movf	AESCmac@size& (0+255),w,b
 28927  00191A  0B0F               	andlw	15
 28928  00191C  5DC3               	subwf	??_AESCmac& (0+255),w,b
 28929  00191E  0101               	movlb	1	; () banked
 28930  001920  6F60               	movwf	AESCmac@ptr& (0+255),b
 28931  001922  0100               	movlb	0	; () banked
 28932  001924  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28933  001926  A0D8               	btfss	status,0,c
 28934  001928  05C4               	decf	(??_AESCmac+1)& (0+255),w,b
 28935  00192A  0101               	movlb	1	; () banked
 28936  00192C  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28937                           
 28938                           ; BSR set to: 1
 28939                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28940  00192E  6B65               	clrf	AESCmac@i& (0+255),b
 28941  001930                     l13076:
 28942                           
 28943                           ; BSR set to: 1
 28944                           ;lorawan_aes_cmac.c: 76: {
 28945                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28946  001930  0100               	movlb	0	; () banked
 28947  001932  51C2               	movf	AESCmac@size& (0+255),w,b
 28948  001934  0B0F               	andlw	15
 28949  001936  0101               	movlb	1	; () banked
 28950  001938  6165               	cpfslt	AESCmac@i& (0+255),b
 28951  00193A  D00F               	goto	l13080
 28952                           
 28953                           ; BSR set to: 1
 28954                           ;lorawan_aes_cmac.c: 78: {
 28955                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28956  00193C  5165               	movf	AESCmac@i& (0+255),w,b
 28957  00193E  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28958  001940  6ED9               	movwf	fsr2l,c
 28959  001942  0E00               	movlw	0
 28960  001944  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28961  001946  6EDA               	movwf	fsr2h,c
 28962  001948  0E30               	movlw	low AESCmac@padded
 28963  00194A  2565               	addwf	AESCmac@i& (0+255),w,b
 28964  00194C  6EE9               	movwf	fsr0l,c
 28965  00194E  6AEA               	clrf	fsr0h,c
 28966  001950  0E01               	movlw	high AESCmac@padded
 28967  001952  22EA               	addwfc	fsr0h,f,c
 28968  001954  CFDF FFEF          	movff	indf2,indf0
 28969                           
 28970                           ;lorawan_aes_cmac.c: 80: }
 28971  001958  D016               	goto	l13086
 28972  00195A                     l13080:
 28973                           
 28974                           ; BSR set to: 1
 28975                           ;lorawan_aes_cmac.c: 81: else
 28976                           ;lorawan_aes_cmac.c: 82: {
 28977                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 28978  00195A  0100               	movlb	0	; () banked
 28979  00195C  51C2               	movf	AESCmac@size& (0+255),w,b
 28980  00195E  0B0F               	andlw	15
 28981  001960  0101               	movlb	1	; () banked
 28982  001962  1965               	xorwf	AESCmac@i& (0+255),w,b
 28983  001964  E109               	bnz	l13084
 28984                           
 28985                           ; BSR set to: 1
 28986                           ;lorawan_aes_cmac.c: 84: {
 28987                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 28988  001966  0E30               	movlw	low AESCmac@padded
 28989  001968  2565               	addwf	AESCmac@i& (0+255),w,b
 28990  00196A  6ED9               	movwf	fsr2l,c
 28991  00196C  6ADA               	clrf	fsr2h,c
 28992  00196E  0E01               	movlw	high AESCmac@padded
 28993  001970  22DA               	addwfc	fsr2h,f,c
 28994  001972  0E80               	movlw	128
 28995  001974  6EDF               	movwf	indf2,c
 28996                           
 28997                           ;lorawan_aes_cmac.c: 86: }
 28998  001976  D007               	goto	l13086
 28999  001978                     l13084:
 29000                           
 29001                           ; BSR set to: 1
 29002                           ;lorawan_aes_cmac.c: 87: else
 29003                           ;lorawan_aes_cmac.c: 88: {
 29004                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 29005  001978  0E30               	movlw	low AESCmac@padded
 29006  00197A  2565               	addwf	AESCmac@i& (0+255),w,b
 29007  00197C  6ED9               	movwf	fsr2l,c
 29008  00197E  6ADA               	clrf	fsr2h,c
 29009  001980  0E01               	movlw	high AESCmac@padded
 29010  001982  22DA               	addwfc	fsr2h,f,c
 29011  001984  6ADF               	clrf	indf2,c
 29012  001986                     l13086:
 29013                           
 29014                           ; BSR set to: 1
 29015  001986  2B65               	incf	AESCmac@i& (0+255),f,b
 29016                           
 29017                           ; BSR set to: 1
 29018  001988  0E0F               	movlw	15
 29019  00198A  6565               	cpfsgt	AESCmac@i& (0+255),b
 29020  00198C  D7D1               	goto	l13076
 29021                           
 29022                           ; BSR set to: 1
 29023                           ;lorawan_aes_cmac.c: 90: }
 29024                           ;lorawan_aes_cmac.c: 91: }
 29025                           ;lorawan_aes_cmac.c: 92: }
 29026                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 29027  00198E  6B65               	clrf	AESCmac@i& (0+255),b
 29028  001990                     l13094:
 29029                           
 29030                           ; BSR set to: 1
 29031                           ;lorawan_aes_cmac.c: 96: {
 29032                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 29033  001990  0E20               	movlw	low AESCmac@mLast
 29034  001992  2565               	addwf	AESCmac@i& (0+255),w,b
 29035  001994  6ED9               	movwf	fsr2l,c
 29036  001996  6ADA               	clrf	fsr2h,c
 29037  001998  0E01               	movlw	high AESCmac@mLast
 29038  00199A  22DA               	addwfc	fsr2h,f,c
 29039  00199C  0E00               	movlw	low AESCmac@k2
 29040  00199E  2565               	addwf	AESCmac@i& (0+255),w,b
 29041  0019A0  6EE9               	movwf	fsr0l,c
 29042  0019A2  6AEA               	clrf	fsr0h,c
 29043  0019A4  0E01               	movlw	high AESCmac@k2
 29044  0019A6  22EA               	addwfc	fsr0h,f,c
 29045  0019A8  50EF               	movf	indf0,w,c
 29046  0019AA  0100               	movlb	0	; () banked
 29047  0019AC  6FC3               	movwf	??_AESCmac& (0+255),b
 29048  0019AE  0E30               	movlw	low AESCmac@padded
 29049  0019B0  0101               	movlb	1	; () banked
 29050  0019B2  2565               	addwf	AESCmac@i& (0+255),w,b
 29051  0019B4  6EE9               	movwf	fsr0l,c
 29052  0019B6  6AEA               	clrf	fsr0h,c
 29053  0019B8  0E01               	movlw	high AESCmac@padded
 29054  0019BA  22EA               	addwfc	fsr0h,f,c
 29055  0019BC  50EF               	movf	indf0,w,c
 29056  0019BE  0100               	movlb	0	; () banked
 29057  0019C0  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29058  0019C2  6EDF               	movwf	indf2,c
 29059                           
 29060                           ; BSR set to: 0
 29061  0019C4  0101               	movlb	1	; () banked
 29062  0019C6  2B65               	incf	AESCmac@i& (0+255),f,b
 29063                           
 29064                           ; BSR set to: 1
 29065  0019C8  0E0F               	movlw	15
 29066  0019CA  6565               	cpfsgt	AESCmac@i& (0+255),b
 29067  0019CC  D7E1               	goto	l13094
 29068  0019CE                     l13100:
 29069                           
 29070                           ;lorawan_aes_cmac.c: 98: }
 29071                           ;lorawan_aes_cmac.c: 99: }
 29072                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 29073  0019CE  0E50               	movlw	low AESCmac@x
 29074  0019D0  0100               	movlb	0	; () banked
 29075  0019D2  6F64               	movwf	memset@p1& (0+255),b
 29076  0019D4  0E01               	movlw	high AESCmac@x
 29077  0019D6  6F65               	movwf	(memset@p1+1)& (0+255),b
 29078  0019D8  6B67               	clrf	(memset@c+1)& (0+255),b
 29079  0019DA  6B66               	clrf	memset@c& (0+255),b
 29080  0019DC  6B69               	clrf	(memset@n+1)& (0+255),b
 29081  0019DE  0E10               	movlw	16
 29082  0019E0  6F68               	movwf	memset@n& (0+255),b
 29083  0019E2  EC21  F039         	call	_memset	;wreg free
 29084                           
 29085                           ; BSR set to: 0
 29086                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 29087  0019E6  0101               	movlb	1	; () banked
 29088  0019E8  6B65               	clrf	AESCmac@i& (0+255),b
 29089  0019EA  D051               	goto	l13118
 29090  0019EC                     l1469:
 29091                           
 29092                           ; BSR set to: 0
 29093                           ;lorawan_aes_cmac.c: 104: {
 29094                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 29095  0019EC  0101               	movlb	1	; () banked
 29096  0019EE  6B64               	clrf	AESCmac@j& (0+255),b
 29097  0019F0                     l13108:
 29098                           
 29099                           ; BSR set to: 1
 29100                           ;lorawan_aes_cmac.c: 106: {
 29101                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 29102  0019F0  0E40               	movlw	low AESCmac@y
 29103  0019F2  2564               	addwf	AESCmac@j& (0+255),w,b
 29104  0019F4  6ED9               	movwf	fsr2l,c
 29105  0019F6  6ADA               	clrf	fsr2h,c
 29106  0019F8  0E01               	movlw	high AESCmac@y
 29107  0019FA  22DA               	addwfc	fsr2h,f,c
 29108  0019FC  5165               	movf	AESCmac@i& (0+255),w,b
 29109  0019FE  0100               	movlb	0	; () banked
 29110  001A00  6FC3               	movwf	??_AESCmac& (0+255),b
 29111  001A02  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 29112  001A04  3BC3               	swapf	??_AESCmac& (0+255),f,b
 29113  001A06  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 29114  001A08  0EF0               	movlw	240
 29115  001A0A  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 29116  001A0C  51C3               	movf	??_AESCmac& (0+255),w,b
 29117  001A0E  0B0F               	andlw	15
 29118  001A10  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 29119  001A12  0EF0               	movlw	240
 29120  001A14  17C3               	andwf	??_AESCmac& (0+255),f,b
 29121  001A16  C0C0  F0C5         	movff	AESCmac@input,??_AESCmac+2
 29122  001A1A  C0C1  F0C6         	movff	AESCmac@input+1,??_AESCmac+3
 29123  001A1E  51C3               	movf	??_AESCmac& (0+255),w,b
 29124  001A20  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29125  001A22  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29126  001A24  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29127  001A26  0101               	movlb	1	; () banked
 29128  001A28  5164               	movf	AESCmac@j& (0+255),w,b
 29129  001A2A  0100               	movlb	0	; () banked
 29130  001A2C  25C5               	addwf	(??_AESCmac+2)& (0+255),w,b
 29131  001A2E  6EE9               	movwf	fsr0l,c
 29132  001A30  0E00               	movlw	0
 29133  001A32  21C6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 29134  001A34  6EEA               	movwf	fsr0h,c
 29135  001A36  50EF               	movf	indf0,w,c
 29136  001A38  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29137  001A3A  0E50               	movlw	low AESCmac@x
 29138  001A3C  0101               	movlb	1	; () banked
 29139  001A3E  2564               	addwf	AESCmac@j& (0+255),w,b
 29140  001A40  6EE9               	movwf	fsr0l,c
 29141  001A42  6AEA               	clrf	fsr0h,c
 29142  001A44  0E01               	movlw	high AESCmac@x
 29143  001A46  22EA               	addwfc	fsr0h,f,c
 29144  001A48  50EF               	movf	indf0,w,c
 29145  001A4A  0100               	movlb	0	; () banked
 29146  001A4C  19C7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 29147  001A4E  6EDF               	movwf	indf2,c
 29148                           
 29149                           ; BSR set to: 0
 29150  001A50  0101               	movlb	1	; () banked
 29151  001A52  2B64               	incf	AESCmac@j& (0+255),f,b
 29152                           
 29153                           ; BSR set to: 1
 29154  001A54  0E0F               	movlw	15
 29155  001A56  6564               	cpfsgt	AESCmac@j& (0+255),b
 29156  001A58  D7CB               	goto	l13108
 29157                           
 29158                           ; BSR set to: 1
 29159                           ;lorawan_aes_cmac.c: 108: }
 29160                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 29161  001A5A  0E50               	movlw	low AESCmac@x
 29162  001A5C  0100               	movlb	0	; () banked
 29163  001A5E  6F64               	movwf	memcpy@d1& (0+255),b
 29164  001A60  0E01               	movlw	high AESCmac@x
 29165  001A62  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 29166  001A64  0E40               	movlw	low AESCmac@y
 29167  001A66  6F66               	movwf	memcpy@s1& (0+255),b
 29168  001A68  0E01               	movlw	high AESCmac@y
 29169  001A6A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29170  001A6C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29171  001A6E  0E10               	movlw	16
 29172  001A70  6F68               	movwf	memcpy@n& (0+255),b
 29173  001A72  EC14  F034         	call	_memcpy	;wreg free
 29174                           
 29175                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 29176  001A76  0E50               	movlw	low AESCmac@x
 29177  001A78  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29178  001A7A  0E01               	movlw	high AESCmac@x
 29179  001A7C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29180  001A7E  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29181  001A82  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29182  001A86  EC5E  F039         	call	_AESEncodeLoRa	;wreg free
 29183                           
 29184                           ; BSR set to: 0
 29185  001A8A  0101               	movlb	1	; () banked
 29186  001A8C  2B65               	incf	AESCmac@i& (0+255),f,b
 29187  001A8E                     l13118:
 29188                           
 29189                           ; BSR set to: 1
 29190  001A8E  0100               	movlb	0	; () banked
 29191  001A90  69C3               	setf	??_AESCmac& (0+255),b
 29192  001A92  69C4               	setf	(??_AESCmac+1)& (0+255),b
 29193  001A94  0101               	movlb	1	; () banked
 29194  001A96  5163               	movf	AESCmac@n& (0+255),w,b
 29195  001A98  0100               	movlb	0	; () banked
 29196  001A9A  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 29197  001A9C  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 29198  001A9E  51C3               	movf	??_AESCmac& (0+255),w,b
 29199  001AA0  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29200  001AA2  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29201  001AA4  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29202  001AA6  0101               	movlb	1	; () banked
 29203  001AA8  5165               	movf	AESCmac@i& (0+255),w,b
 29204  001AAA  0100               	movlb	0	; () banked
 29205  001AAC  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29206  001AAE  6BC8               	clrf	(??_AESCmac+5)& (0+255),b
 29207  001AB0  51C5               	movf	(??_AESCmac+2)& (0+255),w,b
 29208  001AB2  5DC7               	subwf	(??_AESCmac+4)& (0+255),w,b
 29209  001AB4  51C8               	movf	(??_AESCmac+5)& (0+255),w,b
 29210  001AB6  0A80               	xorlw	128
 29211  001AB8  6FC9               	movwf	(??_AESCmac+6)& (0+255),b
 29212  001ABA  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 29213  001ABC  0A80               	xorlw	128
 29214  001ABE  59C9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 29215  001AC0  E395               	bnc	l1469
 29216                           
 29217                           ; BSR set to: 0
 29218                           ;lorawan_aes_cmac.c: 111: }
 29219                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 29220  001AC2  0101               	movlb	1	; () banked
 29221  001AC4  6B65               	clrf	AESCmac@i& (0+255),b
 29222  001AC6                     l13124:
 29223                           
 29224                           ; BSR set to: 1
 29225                           ;lorawan_aes_cmac.c: 114: {
 29226                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 29227  001AC6  0E40               	movlw	low AESCmac@y
 29228  001AC8  2565               	addwf	AESCmac@i& (0+255),w,b
 29229  001ACA  6ED9               	movwf	fsr2l,c
 29230  001ACC  6ADA               	clrf	fsr2h,c
 29231  001ACE  0E01               	movlw	high AESCmac@y
 29232  001AD0  22DA               	addwfc	fsr2h,f,c
 29233  001AD2  0E20               	movlw	low AESCmac@mLast
 29234  001AD4  2565               	addwf	AESCmac@i& (0+255),w,b
 29235  001AD6  6EE9               	movwf	fsr0l,c
 29236  001AD8  6AEA               	clrf	fsr0h,c
 29237  001ADA  0E01               	movlw	high AESCmac@mLast
 29238  001ADC  22EA               	addwfc	fsr0h,f,c
 29239  001ADE  50EF               	movf	indf0,w,c
 29240  001AE0  0100               	movlb	0	; () banked
 29241  001AE2  6FC3               	movwf	??_AESCmac& (0+255),b
 29242  001AE4  0E50               	movlw	low AESCmac@x
 29243  001AE6  0101               	movlb	1	; () banked
 29244  001AE8  2565               	addwf	AESCmac@i& (0+255),w,b
 29245  001AEA  6EE9               	movwf	fsr0l,c
 29246  001AEC  6AEA               	clrf	fsr0h,c
 29247  001AEE  0E01               	movlw	high AESCmac@x
 29248  001AF0  22EA               	addwfc	fsr0h,f,c
 29249  001AF2  50EF               	movf	indf0,w,c
 29250  001AF4  0100               	movlb	0	; () banked
 29251  001AF6  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29252  001AF8  6EDF               	movwf	indf2,c
 29253                           
 29254                           ; BSR set to: 0
 29255  001AFA  0101               	movlb	1	; () banked
 29256  001AFC  2B65               	incf	AESCmac@i& (0+255),f,b
 29257                           
 29258                           ; BSR set to: 1
 29259  001AFE  0E0F               	movlw	15
 29260  001B00  6565               	cpfsgt	AESCmac@i& (0+255),b
 29261  001B02  D7E1               	goto	l13124
 29262                           
 29263                           ; BSR set to: 1
 29264                           ;lorawan_aes_cmac.c: 116: }
 29265                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 29266  001B04  0E40               	movlw	low AESCmac@y
 29267  001B06  0100               	movlb	0	; () banked
 29268  001B08  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29269  001B0A  0E01               	movlw	high AESCmac@y
 29270  001B0C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29271  001B0E  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29272  001B12  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29273  001B16  EC5E  F039         	call	_AESEncodeLoRa	;wreg free
 29274                           
 29275                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 29276  001B1A  C0BE  F064         	movff	AESCmac@output,memcpy@d1
 29277  001B1E  C0BF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 29278  001B22  0E40               	movlw	low AESCmac@y
 29279  001B24  6F66               	movwf	memcpy@s1& (0+255),b
 29280  001B26  0E01               	movlw	high AESCmac@y
 29281  001B28  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29282  001B2A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29283  001B2C  0E10               	movlw	16
 29284  001B2E  6F68               	movwf	memcpy@n& (0+255),b
 29285  001B30  EF14  F034         	goto	_memcpy	;wreg free
 29286  001B34                     __end_of_AESCmac:
 29287                           	opt stack 0
 29288                           tosu	equ	0xFFF
 29289                           tosh	equ	0xFFE
 29290                           tosl	equ	0xFFD
 29291                           pclath	equ	0xFFA
 29292                           tblptru	equ	0xFF8
 29293                           tblptrh	equ	0xFF7
 29294                           tblptrl	equ	0xFF6
 29295                           tablat	equ	0xFF5
 29296                           prodh	equ	0xFF4
 29297                           prodl	equ	0xFF3
 29298                           intcon	equ	0xFF2
 29299                           intcon2	equ	0xFF1
 29300                           intcon3	equ	0xFF0
 29301                           indf0	equ	0xFEF
 29302                           postinc0	equ	0xFEE
 29303                           fsr0h	equ	0xFEA
 29304                           fsr0l	equ	0xFE9
 29305                           wreg	equ	0xFE8
 29306                           postinc1	equ	0xFE6
 29307                           postdec1	equ	0xFE5
 29308                           plusw1	equ	0xFE3
 29309                           fsr1h	equ	0xFE2
 29310                           fsr1l	equ	0xFE1
 29311                           indf2	equ	0xFDF
 29312                           postinc2	equ	0xFDE
 29313                           postdec2	equ	0xFDD
 29314                           plusw2	equ	0xFDB
 29315                           fsr2h	equ	0xFDA
 29316                           fsr2l	equ	0xFD9
 29317                           status	equ	0xFD8
 29318                           
 29319 ;; *************** function _GenerateSubkey *****************
 29320 ;; Defined at:
 29321 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29322 ;; Parameters:    Size  Location     Type
 29323 ;;  key             2   52[BANK0 ] PTR unsigned char 
 29324 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29325 ;;  k1              2   54[BANK0 ] PTR unsigned char 
 29326 ;;		 -> AESCmac@k1(16), 
 29327 ;;  k2              2   56[BANK0 ] PTR unsigned char 
 29328 ;;		 -> AESCmac@k2(16), 
 29329 ;; Auto vars:     Size  Location     Type
 29330 ;;  l              16   75[BANK0 ] unsigned char [16]
 29331 ;;  const_Rb       16   59[BANK0 ] unsigned char [16]
 29332 ;;  i               1   91[BANK0 ] unsigned char 
 29333 ;; Return value:  Size  Location     Type
 29334 ;;                  1    wreg      void 
 29335 ;; Registers used:
 29336 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29337 ;; Tracked objects:
 29338 ;;		On entry : F/0
 29339 ;;		On exit  : F/0
 29340 ;;		Unchanged: 0/0
 29341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29342 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29343 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29345 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29346 ;;Total ram usage:       40 bytes
 29347 ;; Hardware stack levels used:    1
 29348 ;; Hardware stack levels required when called:   10
 29349 ;; This function calls:
 29350 ;;		_AESEncodeLoRa
 29351 ;;		_FillSubKey
 29352 ;;		_memset
 29353 ;; This function is called by:
 29354 ;;		_AESCmac
 29355 ;; This function uses a non-reentrant model
 29356 ;;
 29357                           
 29358                           	psect	text153
 29359  004882                     __ptext153:
 29360                           	opt stack 0
 29361  004882                     _GenerateSubkey:
 29362                           	opt stack 16
 29363                           
 29364                           ; BSR set to: 0
 29365                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 29366                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 29367                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 29368                           
 29369                           ; BSR set to: 0
 29370                           
 29371                           ; BSR set to: 0
 29372                           ;incstack = 0
 29373  004882  EE21  F0B3         	lfsr	2,GenerateSubkey@F7870
 29374  004886  EE00  F09B         	lfsr	0,GenerateSubkey@const_Rb
 29375  00488A  0E0F               	movlw	15
 29376  00488C                     u13651:
 29377  00488C  CFDB FFEB          	movff	plusw2,plusw0
 29378  004890  06E8               	decf	wreg,f,c
 29379  004892  E2FC               	bc	u13651
 29380                           
 29381                           ; BSR set to: 0
 29382                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29383  004894  0EAB               	movlw	low GenerateSubkey@l
 29384  004896  6F64               	movwf	memset@p1& (0+255),b
 29385  004898  6B65               	clrf	(memset@p1+1)& (0+255),b
 29386  00489A  6B67               	clrf	(memset@c+1)& (0+255),b
 29387  00489C  6B66               	clrf	memset@c& (0+255),b
 29388  00489E  6B69               	clrf	(memset@n+1)& (0+255),b
 29389  0048A0  0E10               	movlw	16
 29390  0048A2  6F68               	movwf	memset@n& (0+255),b
 29391  0048A4  EC21  F039         	call	_memset	;wreg free
 29392                           
 29393                           ; BSR set to: 0
 29394                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29395  0048A8  0EAB               	movlw	low GenerateSubkey@l
 29396  0048AA  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29397  0048AC  6B81               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 29398  0048AE  C094  F082         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29399  0048B2  C095  F083         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29400  0048B6  EC5E  F039         	call	_AESEncodeLoRa	;wreg free
 29401                           
 29402                           ; BSR set to: 0
 29403                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29404  0048BA  BFAB               	btfsc	GenerateSubkey@l& (0+255),7,b
 29405  0048BC  D00C               	goto	l12688
 29406                           
 29407                           ; BSR set to: 0
 29408                           ;lorawan_aes_cmac.c: 138: {
 29409                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29410  0048BE  0EAB               	movlw	low GenerateSubkey@l
 29411  0048C0  6F64               	movwf	FillSubKey@source& (0+255),b
 29412  0048C2  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29413  0048C4  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29414  0048C8  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29415  0048CC  0E10               	movlw	16
 29416  0048CE  6F68               	movwf	FillSubKey@size& (0+255),b
 29417  0048D0  ECA2  F035         	call	_FillSubKey	;wreg free
 29418                           
 29419                           ;lorawan_aes_cmac.c: 140: }
 29420  0048D4  D01E               	goto	l12702
 29421  0048D6                     l12688:
 29422                           
 29423                           ; BSR set to: 0
 29424                           ;lorawan_aes_cmac.c: 141: else
 29425                           ;lorawan_aes_cmac.c: 142: {
 29426                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29427  0048D6  0EAB               	movlw	low GenerateSubkey@l
 29428  0048D8  6F64               	movwf	FillSubKey@source& (0+255),b
 29429  0048DA  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29430  0048DC  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29431  0048E0  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29432  0048E4  0E10               	movlw	16
 29433  0048E6  6F68               	movwf	FillSubKey@size& (0+255),b
 29434  0048E8  ECA2  F035         	call	_FillSubKey	;wreg free
 29435                           
 29436                           ; BSR set to: 0
 29437                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29438  0048EC  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29439  0048EE                     l12696:
 29440                           
 29441                           ; BSR set to: 0
 29442                           ;lorawan_aes_cmac.c: 146: {
 29443                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29444  0048EE  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29445  0048F0  0F9B               	addlw	low GenerateSubkey@const_Rb
 29446  0048F2  6ED9               	movwf	fsr2l,c
 29447  0048F4  6ADA               	clrf	fsr2h,c
 29448  0048F6  50DF               	movf	indf2,w,c
 29449  0048F8  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29450  0048FA  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29451  0048FC  2596               	addwf	GenerateSubkey@k1& (0+255),w,b
 29452  0048FE  6ED9               	movwf	fsr2l,c
 29453  004900  0E00               	movlw	0
 29454  004902  2197               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29455  004904  6EDA               	movwf	fsr2h,c
 29456  004906  519A               	movf	??_GenerateSubkey& (0+255),w,b
 29457  004908  1ADF               	xorwf	indf2,f,c
 29458                           
 29459                           ; BSR set to: 0
 29460  00490A  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29461                           
 29462                           ; BSR set to: 0
 29463  00490C  0E0F               	movlw	15
 29464  00490E  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29465  004910  D7EE               	goto	l12696
 29466  004912                     l12702:
 29467                           
 29468                           ; BSR set to: 0
 29469                           ;lorawan_aes_cmac.c: 148: }
 29470                           ;lorawan_aes_cmac.c: 149: }
 29471                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29472  004912  C096  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29473  004916  C097  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29474  00491A  BEDF               	btfsc	indf2,7,c
 29475  00491C  D00C               	goto	l12706
 29476                           
 29477                           ; BSR set to: 0
 29478                           ;lorawan_aes_cmac.c: 153: {
 29479                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29480  00491E  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29481  004922  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29482  004926  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29483  00492A  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29484  00492E  0E10               	movlw	16
 29485  004930  6F68               	movwf	FillSubKey@size& (0+255),b
 29486  004932  EFA2  F035         	goto	_FillSubKey	;wreg free
 29487  004936                     l12706:
 29488                           
 29489                           ; BSR set to: 0
 29490                           ;lorawan_aes_cmac.c: 156: else
 29491                           ;lorawan_aes_cmac.c: 157: {
 29492                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29493  004936  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29494  00493A  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29495  00493E  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29496  004942  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29497  004946  0E10               	movlw	16
 29498  004948  6F68               	movwf	FillSubKey@size& (0+255),b
 29499  00494A  ECA2  F035         	call	_FillSubKey	;wreg free
 29500                           
 29501                           ; BSR set to: 0
 29502                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29503  00494E  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29504  004950                     l12714:
 29505                           
 29506                           ; BSR set to: 0
 29507                           ;lorawan_aes_cmac.c: 161: {
 29508                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29509  004950  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29510  004952  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29511  004954  6ED9               	movwf	fsr2l,c
 29512  004956  0E00               	movlw	0
 29513  004958  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29514  00495A  6EDA               	movwf	fsr2h,c
 29515  00495C  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29516  00495E  0F9B               	addlw	low GenerateSubkey@const_Rb
 29517  004960  6EE9               	movwf	fsr0l,c
 29518  004962  6AEA               	clrf	fsr0h,c
 29519  004964  50EF               	movf	indf0,w,c
 29520  004966  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29521  004968  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29522  00496A  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29523  00496C  6EE9               	movwf	fsr0l,c
 29524  00496E  0E00               	movlw	0
 29525  004970  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29526  004972  6EEA               	movwf	fsr0h,c
 29527  004974  50EF               	movf	indf0,w,c
 29528  004976  199A               	xorwf	??_GenerateSubkey& (0+255),w,b
 29529  004978  6EDF               	movwf	indf2,c
 29530                           
 29531                           ; BSR set to: 0
 29532  00497A  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29533                           
 29534                           ; BSR set to: 0
 29535  00497C  0E0F               	movlw	15
 29536  00497E  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29537  004980  D7E7               	goto	l12714
 29538  004982  0C0F               	retlw	15
 29539  004984                     __end_of_GenerateSubkey:
 29540                           	opt stack 0
 29541                           tosu	equ	0xFFF
 29542                           tosh	equ	0xFFE
 29543                           tosl	equ	0xFFD
 29544                           pclath	equ	0xFFA
 29545                           tblptru	equ	0xFF8
 29546                           tblptrh	equ	0xFF7
 29547                           tblptrl	equ	0xFF6
 29548                           tablat	equ	0xFF5
 29549                           prodh	equ	0xFF4
 29550                           prodl	equ	0xFF3
 29551                           intcon	equ	0xFF2
 29552                           intcon2	equ	0xFF1
 29553                           intcon3	equ	0xFF0
 29554                           indf0	equ	0xFEF
 29555                           postinc0	equ	0xFEE
 29556                           plusw0	equ	0xFEB
 29557                           fsr0h	equ	0xFEA
 29558                           fsr0l	equ	0xFE9
 29559                           wreg	equ	0xFE8
 29560                           postinc1	equ	0xFE6
 29561                           postdec1	equ	0xFE5
 29562                           plusw1	equ	0xFE3
 29563                           fsr1h	equ	0xFE2
 29564                           fsr1l	equ	0xFE1
 29565                           indf2	equ	0xFDF
 29566                           postinc2	equ	0xFDE
 29567                           postdec2	equ	0xFDD
 29568                           plusw2	equ	0xFDB
 29569                           fsr2h	equ	0xFDA
 29570                           fsr2l	equ	0xFD9
 29571                           status	equ	0xFD8
 29572                           
 29573 ;; *************** function _FillSubKey *****************
 29574 ;; Defined at:
 29575 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29576 ;; Parameters:    Size  Location     Type
 29577 ;;  source          2    4[BANK0 ] PTR unsigned char 
 29578 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29579 ;;  key             2    6[BANK0 ] PTR unsigned char 
 29580 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29581 ;;  size            1    8[BANK0 ] unsigned char 
 29582 ;; Auto vars:     Size  Location     Type
 29583 ;;  i               1   11[BANK0 ] unsigned char 
 29584 ;;  carry           1   10[BANK0 ] unsigned char 
 29585 ;; Return value:  Size  Location     Type
 29586 ;;                  1    wreg      void 
 29587 ;; Registers used:
 29588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 29589 ;; Tracked objects:
 29590 ;;		On entry : F/0
 29591 ;;		On exit  : F/0
 29592 ;;		Unchanged: 0/0
 29593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29594 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29596 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29597 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29598 ;;Total ram usage:        8 bytes
 29599 ;; Hardware stack levels used:    1
 29600 ;; Hardware stack levels required when called:    7
 29601 ;; This function calls:
 29602 ;;		Nothing
 29603 ;; This function is called by:
 29604 ;;		_GenerateSubkey
 29605 ;; This function uses a non-reentrant model
 29606 ;;
 29607                           
 29608                           	psect	text154
 29609  006B44                     __ptext154:
 29610                           	opt stack 0
 29611  006B44                     _FillSubKey:
 29612                           	opt stack 18
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29616                           
 29617                           ; BSR set to: 0
 29618                           ;incstack = 0
 29619  006B44  6B6B               	clrf	FillSubKey@i& (0+255),b
 29620                           
 29621                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29622  006B46  6B6A               	clrf	FillSubKey@carry& (0+255),b
 29623                           
 29624                           ;lorawan_aes_cmac.c: 172: i=size;
 29625  006B48  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 29626                           
 29627                           ;lorawan_aes_cmac.c: 174: while(i--)
 29628  006B4C  D01C               	goto	l12412
 29629  006B4E                     l12408:
 29630                           
 29631                           ; BSR set to: 0
 29632                           ;lorawan_aes_cmac.c: 175: {
 29633                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29634  006B4E  516B               	movf	FillSubKey@i& (0+255),w,b
 29635  006B50  2566               	addwf	FillSubKey@key& (0+255),w,b
 29636  006B52  6ED9               	movwf	fsr2l,c
 29637  006B54  0E00               	movlw	0
 29638  006B56  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29639  006B58  6EDA               	movwf	fsr2h,c
 29640  006B5A  516B               	movf	FillSubKey@i& (0+255),w,b
 29641  006B5C  2564               	addwf	FillSubKey@source& (0+255),w,b
 29642  006B5E  6EE9               	movwf	fsr0l,c
 29643  006B60  0E00               	movlw	0
 29644  006B62  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29645  006B64  6EEA               	movwf	fsr0h,c
 29646  006B66  50EF               	movf	indf0,w,c
 29647  006B68  6F69               	movwf	??_FillSubKey& (0+255),b
 29648  006B6A  90D8               	bcf	status,0,c
 29649  006B6C  3569               	rlcf	??_FillSubKey& (0+255),w,b
 29650  006B6E  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 29651  006B70  6EDF               	movwf	indf2,c
 29652                           
 29653                           ; BSR set to: 0
 29654                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29655  006B72  516B               	movf	FillSubKey@i& (0+255),w,b
 29656  006B74  2564               	addwf	FillSubKey@source& (0+255),w,b
 29657  006B76  6ED9               	movwf	fsr2l,c
 29658  006B78  0E00               	movlw	0
 29659  006B7A  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29660  006B7C  6EDA               	movwf	fsr2h,c
 29661  006B7E  0E01               	movlw	1
 29662  006B80  AEDF               	btfss	indf2,7,c
 29663  006B82  0E00               	movlw	0
 29664  006B84  6F6A               	movwf	FillSubKey@carry& (0+255),b
 29665  006B86                     l12412:
 29666                           
 29667                           ; BSR set to: 0
 29668  006B86  076B               	decf	FillSubKey@i& (0+255),f,b
 29669  006B88  296B               	incf	FillSubKey@i& (0+255),w,b
 29670  006B8A  E1E1               	bnz	l12408
 29671                           
 29672                           ; BSR set to: 0
 29673  006B8C  0012               	return		;funcret
 29674  006B8E                     __end_of_FillSubKey:
 29675                           	opt stack 0
 29676                           tosu	equ	0xFFF
 29677                           tosh	equ	0xFFE
 29678                           tosl	equ	0xFFD
 29679                           pclath	equ	0xFFA
 29680                           tblptru	equ	0xFF8
 29681                           tblptrh	equ	0xFF7
 29682                           tblptrl	equ	0xFF6
 29683                           tablat	equ	0xFF5
 29684                           prodh	equ	0xFF4
 29685                           prodl	equ	0xFF3
 29686                           intcon	equ	0xFF2
 29687                           intcon2	equ	0xFF1
 29688                           intcon3	equ	0xFF0
 29689                           indf0	equ	0xFEF
 29690                           postinc0	equ	0xFEE
 29691                           plusw0	equ	0xFEB
 29692                           fsr0h	equ	0xFEA
 29693                           fsr0l	equ	0xFE9
 29694                           wreg	equ	0xFE8
 29695                           postinc1	equ	0xFE6
 29696                           postdec1	equ	0xFE5
 29697                           plusw1	equ	0xFE3
 29698                           fsr1h	equ	0xFE2
 29699                           fsr1l	equ	0xFE1
 29700                           indf2	equ	0xFDF
 29701                           postinc2	equ	0xFDE
 29702                           postdec2	equ	0xFDD
 29703                           plusw2	equ	0xFDB
 29704                           fsr2h	equ	0xFDA
 29705                           fsr2l	equ	0xFD9
 29706                           status	equ	0xFD8
 29707                           
 29708 ;; *************** function _AESEncodeLoRa *****************
 29709 ;; Defined at:
 29710 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29711 ;; Parameters:    Size  Location     Type
 29712 ;;  block           2   32[BANK0 ] PTR unsigned char 
 29713 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29714 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29715 ;;  key             2   34[BANK0 ] PTR unsigned char 
 29716 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29717 ;; Auto vars:     Size  Location     Type
 29718 ;;  useKey         16   36[BANK0 ] unsigned char [16]
 29719 ;; Return value:  Size  Location     Type
 29720 ;;                  1    wreg      void 
 29721 ;; Registers used:
 29722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29723 ;; Tracked objects:
 29724 ;;		On entry : F/0
 29725 ;;		On exit  : F/0
 29726 ;;		Unchanged: 0/0
 29727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29728 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29729 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29731 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29732 ;;Total ram usage:       20 bytes
 29733 ;; Hardware stack levels used:    1
 29734 ;; Hardware stack levels required when called:    9
 29735 ;; This function calls:
 29736 ;;		_AESEncode
 29737 ;;		_memcpy
 29738 ;; This function is called by:
 29739 ;;		_AESCmac
 29740 ;;		_GenerateSubkey
 29741 ;;		_LORAWAN_RxDone
 29742 ;;		_ComputeSessionKeys
 29743 ;;		_EncryptFRMPayload
 29744 ;; This function uses a non-reentrant model
 29745 ;;
 29746                           
 29747                           	psect	text155
 29748  0072BC                     __ptext155:
 29749                           	opt stack 0
 29750  0072BC                     _AESEncodeLoRa:
 29751                           	opt stack 17
 29752                           
 29753                           ; BSR set to: 0
 29754                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29755                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29756                           
 29757                           ; BSR set to: 0
 29758                           ;incstack = 0
 29759  0072BC  0E84               	movlw	low AESEncodeLoRa@useKey
 29760  0072BE  6F64               	movwf	memcpy@d1& (0+255),b
 29761  0072C0  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29762  0072C2  C082  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 29763  0072C6  C083  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29764  0072CA  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29765  0072CC  0E10               	movlw	16
 29766  0072CE  6F68               	movwf	memcpy@n& (0+255),b
 29767  0072D0  EC14  F034         	call	_memcpy	;wreg free
 29768                           
 29769                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29770  0072D4  C080  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 29771  0072D8  C081  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29772  0072DC  0E84               	movlw	low AESEncodeLoRa@useKey
 29773  0072DE  6F6C               	movwf	AESEncode@key& (0+255),b
 29774  0072E0  EF04  F012         	goto	_AESEncode	;wreg free
 29775  0072E4                     __end_of_AESEncodeLoRa:
 29776                           	opt stack 0
 29777                           tosu	equ	0xFFF
 29778                           tosh	equ	0xFFE
 29779                           tosl	equ	0xFFD
 29780                           pclath	equ	0xFFA
 29781                           tblptru	equ	0xFF8
 29782                           tblptrh	equ	0xFF7
 29783                           tblptrl	equ	0xFF6
 29784                           tablat	equ	0xFF5
 29785                           prodh	equ	0xFF4
 29786                           prodl	equ	0xFF3
 29787                           intcon	equ	0xFF2
 29788                           intcon2	equ	0xFF1
 29789                           intcon3	equ	0xFF0
 29790                           indf0	equ	0xFEF
 29791                           postinc0	equ	0xFEE
 29792                           plusw0	equ	0xFEB
 29793                           fsr0h	equ	0xFEA
 29794                           fsr0l	equ	0xFE9
 29795                           wreg	equ	0xFE8
 29796                           postinc1	equ	0xFE6
 29797                           postdec1	equ	0xFE5
 29798                           plusw1	equ	0xFE3
 29799                           fsr1h	equ	0xFE2
 29800                           fsr1l	equ	0xFE1
 29801                           indf2	equ	0xFDF
 29802                           postinc2	equ	0xFDE
 29803                           postdec2	equ	0xFDD
 29804                           plusw2	equ	0xFDB
 29805                           fsr2h	equ	0xFDA
 29806                           fsr2l	equ	0xFD9
 29807                           status	equ	0xFD8
 29808                           
 29809 ;; *************** function _AESEncode *****************
 29810 ;; Defined at:
 29811 ;;		line 217 in file "mcc_generated_files/LoRaWAN/AES.c"
 29812 ;; Parameters:    Size  Location     Type
 29813 ;;  block           2   10[BANK0 ] PTR unsigned char 
 29814 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29815 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29816 ;;  key             1   12[BANK0 ] PTR unsigned char 
 29817 ;;		 -> AESEncodeLoRa@useKey(16), 
 29818 ;; Auto vars:     Size  Location     Type
 29819 ;;  aux3            1   30[BANK0 ] unsigned char 
 29820 ;;  aux1            1   29[BANK0 ] unsigned char 
 29821 ;;  aux2            1   28[BANK0 ] unsigned char 
 29822 ;;  aux             1   27[BANK0 ] unsigned char 
 29823 ;;  i               1   31[BANK0 ] unsigned char 
 29824 ;;  temp            1    0        unsigned char 
 29825 ;; Return value:  Size  Location     Type
 29826 ;;                  1    wreg      void 
 29827 ;; Registers used:
 29828 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29829 ;; Tracked objects:
 29830 ;;		On entry : F/0
 29831 ;;		On exit  : F/0
 29832 ;;		Unchanged: 0/0
 29833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29834 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29835 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29836 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29837 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29838 ;;Total ram usage:       22 bytes
 29839 ;; Hardware stack levels used:    1
 29840 ;; Hardware stack levels required when called:    8
 29841 ;; This function calls:
 29842 ;;		_EncKeySchedule
 29843 ;;		_EncodeShiftRow
 29844 ;; This function is called by:
 29845 ;;		_AESEncodeLoRa
 29846 ;; This function uses a non-reentrant model
 29847 ;;
 29848                           
 29849                           	psect	text156
 29850  002408                     __ptext156:
 29851                           	opt stack 0
 29852  002408                     _AESEncode:
 29853                           	opt stack 17
 29854                           
 29855                           ; BSR set to: 0
 29856                           ;AES.c: 219: unsigned char i;
 29857                           ;AES.c: 220: unsigned char temp;
 29858                           ;AES.c: 223: _roundCounter = 10;
 29859                           
 29860                           ; BSR set to: 0
 29861                           ;incstack = 0
 29862  002408  0E0A               	movlw	10
 29863  00240A  6E44               	movwf	__roundCounter,c
 29864                           
 29865                           ;AES.c: 225: _rcon = 0x01;
 29866  00240C  0E01               	movlw	1
 29867  00240E  6FEE               	movwf	__rcon& (0+255),b
 29868                           
 29869                           ; BSR set to: 0
 29870                           ;AES.c: 228: for(i=0;i<16;i++)
 29871  002410  6B7F               	clrf	AESEncode@i& (0+255),b
 29872  002412                     l12016:
 29873                           
 29874                           ; BSR set to: 0
 29875                           ;AES.c: 229: {
 29876                           ;AES.c: 230: block[i] ^= key[i];
 29877  002412  516C               	movf	AESEncode@key& (0+255),w,b
 29878  002414  257F               	addwf	AESEncode@i& (0+255),w,b
 29879  002416  6ED9               	movwf	fsr2l,c
 29880  002418  6ADA               	clrf	fsr2h,c
 29881  00241A  50DF               	movf	indf2,w,c
 29882  00241C  6F6D               	movwf	??_AESEncode& (0+255),b
 29883  00241E  517F               	movf	AESEncode@i& (0+255),w,b
 29884  002420  256A               	addwf	AESEncode@block& (0+255),w,b
 29885  002422  6ED9               	movwf	fsr2l,c
 29886  002424  0E00               	movlw	0
 29887  002426  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29888  002428  6EDA               	movwf	fsr2h,c
 29889  00242A  516D               	movf	??_AESEncode& (0+255),w,b
 29890  00242C  1ADF               	xorwf	indf2,f,c
 29891                           
 29892                           ; BSR set to: 0
 29893  00242E  2B7F               	incf	AESEncode@i& (0+255),f,b
 29894                           
 29895                           ; BSR set to: 0
 29896  002430  0E0F               	movlw	15
 29897  002432  657F               	cpfsgt	AESEncode@i& (0+255),b
 29898  002434  D7EE               	goto	l12016
 29899  002436                     l2522:
 29900                           
 29901                           ; BSR set to: 0
 29902                           ;AES.c: 234: {
 29903                           ;AES.c: 237: for(i=0;i<16;i++)
 29904  002436  6B7F               	clrf	AESEncode@i& (0+255),b
 29905  002438                     l12026:
 29906                           
 29907                           ; BSR set to: 0
 29908                           ;AES.c: 238: {
 29909                           ;AES.c: 239: block[i]=STable[block[i]];
 29910  002438  517F               	movf	AESEncode@i& (0+255),w,b
 29911  00243A  256A               	addwf	AESEncode@block& (0+255),w,b
 29912  00243C  6ED9               	movwf	fsr2l,c
 29913  00243E  0E00               	movlw	0
 29914  002440  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29915  002442  6EDA               	movwf	fsr2h,c
 29916  002444  50DF               	movf	indf2,w,c
 29917  002446  6F6D               	movwf	??_AESEncode& (0+255),b
 29918  002448  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29919  00244A  0E6D               	movlw	low _STable
 29920  00244C  256D               	addwf	??_AESEncode& (0+255),w,b
 29921  00244E  6EF6               	movwf	tblptrl,c
 29922  002450  0EFE               	movlw	high _STable
 29923  002452  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29924  002454  6EF7               	movwf	tblptrh,c
 29925  002456                     	if	1	;There are 3 active tblptr bytes
 29926  002456  6AF8               	clrf	tblptru,c
 29927  002458  0E00               	movlw	low (__mediumconst shr (0+16))
 29928  00245A  22F8               	addwfc	tblptru,f,c
 29929  00245C                     	endif
 29930  00245C  517F               	movf	AESEncode@i& (0+255),w,b
 29931  00245E  256A               	addwf	AESEncode@block& (0+255),w,b
 29932  002460  6ED9               	movwf	fsr2l,c
 29933  002462  0E00               	movlw	0
 29934  002464  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29935  002466  6EDA               	movwf	fsr2h,c
 29936  002468  0008               	tblrd		*
 29937  00246A  CFF5 FFDF          	movff	tablat,indf2
 29938                           
 29939                           ; BSR set to: 0
 29940  00246E  2B7F               	incf	AESEncode@i& (0+255),f,b
 29941                           
 29942                           ; BSR set to: 0
 29943  002470  0E0F               	movlw	15
 29944  002472  657F               	cpfsgt	AESEncode@i& (0+255),b
 29945  002474  D7E1               	goto	l12026
 29946                           
 29947                           ; BSR set to: 0
 29948                           ;AES.c: 240: }
 29949                           ;AES.c: 243: EncodeShiftRow(block);
 29950  002476  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29951  00247A  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29952  00247E  EC9E  F01E         	call	_EncodeShiftRow	;wreg free
 29953                           
 29954                           ; BSR set to: 0
 29955                           ;AES.c: 246: if(_roundCounter != 1)
 29956  002482  0444               	decf	__roundCounter,w,c
 29957  002484  E101 D111          	bz	l12074
 29958                           
 29959                           ; BSR set to: 0
 29960                           ;AES.c: 247: {
 29961                           ;AES.c: 248: unsigned char aux,aux1,aux2,aux3;
 29962                           ;AES.c: 250: for(i=0;i<16;i+=4)
 29963  002488  6B7F               	clrf	AESEncode@i& (0+255),b
 29964  00248A                     l12042:
 29965                           
 29966                           ; BSR set to: 0
 29967                           ;AES.c: 251: {
 29968                           ;AES.c: 252: aux1= block[i+0] ^ block[i+1];
 29969  00248A  517F               	movf	AESEncode@i& (0+255),w,b
 29970  00248C  256A               	addwf	AESEncode@block& (0+255),w,b
 29971  00248E  6F6D               	movwf	??_AESEncode& (0+255),b
 29972  002490  0E00               	movlw	0
 29973  002492  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29974  002494  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29975  002496  296D               	incf	??_AESEncode& (0+255),w,b
 29976  002498  6ED9               	movwf	fsr2l,c
 29977  00249A  0E00               	movlw	0
 29978  00249C  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29979  00249E  6EDA               	movwf	fsr2h,c
 29980  0024A0  50DF               	movf	indf2,w,c
 29981  0024A2  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29982  0024A4  517F               	movf	AESEncode@i& (0+255),w,b
 29983  0024A6  256A               	addwf	AESEncode@block& (0+255),w,b
 29984  0024A8  6ED9               	movwf	fsr2l,c
 29985  0024AA  0E00               	movlw	0
 29986  0024AC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29987  0024AE  6EDA               	movwf	fsr2h,c
 29988  0024B0  50DF               	movf	indf2,w,c
 29989  0024B2  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29990  0024B4  6F7D               	movwf	AESEncode@aux1& (0+255),b
 29991                           
 29992                           ;AES.c: 253: aux3= block[i+2]^block[i+3];
 29993  0024B6  517F               	movf	AESEncode@i& (0+255),w,b
 29994  0024B8  256A               	addwf	AESEncode@block& (0+255),w,b
 29995  0024BA  6F6D               	movwf	??_AESEncode& (0+255),b
 29996  0024BC  0E00               	movlw	0
 29997  0024BE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29998  0024C0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29999  0024C2  0E03               	movlw	3
 30000  0024C4  256D               	addwf	??_AESEncode& (0+255),w,b
 30001  0024C6  6ED9               	movwf	fsr2l,c
 30002  0024C8  0E00               	movlw	0
 30003  0024CA  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30004  0024CC  6EDA               	movwf	fsr2h,c
 30005  0024CE  50DF               	movf	indf2,w,c
 30006  0024D0  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30007  0024D2  517F               	movf	AESEncode@i& (0+255),w,b
 30008  0024D4  256A               	addwf	AESEncode@block& (0+255),w,b
 30009  0024D6  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30010  0024D8  0E00               	movlw	0
 30011  0024DA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30012  0024DC  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30013  0024DE  0E02               	movlw	2
 30014  0024E0  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30015  0024E2  6ED9               	movwf	fsr2l,c
 30016  0024E4  0E00               	movlw	0
 30017  0024E6  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30018  0024E8  6EDA               	movwf	fsr2h,c
 30019  0024EA  50DF               	movf	indf2,w,c
 30020  0024EC  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30021  0024EE  6F7E               	movwf	AESEncode@aux3& (0+255),b
 30022                           
 30023                           ; BSR set to: 0
 30024                           ;AES.c: 254: aux = aux1 ^ aux3;
 30025  0024F0  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30026  0024F2  6F7B               	movwf	AESEncode@aux& (0+255),b
 30027                           
 30028                           ; BSR set to: 0
 30029                           ;AES.c: 255: aux2= block[i+2]^block[i+1];
 30030  0024F4  517F               	movf	AESEncode@i& (0+255),w,b
 30031  0024F6  256A               	addwf	AESEncode@block& (0+255),w,b
 30032  0024F8  6F6D               	movwf	??_AESEncode& (0+255),b
 30033  0024FA  0E00               	movlw	0
 30034  0024FC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30035  0024FE  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30036  002500  296D               	incf	??_AESEncode& (0+255),w,b
 30037  002502  6ED9               	movwf	fsr2l,c
 30038  002504  0E00               	movlw	0
 30039  002506  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30040  002508  6EDA               	movwf	fsr2h,c
 30041  00250A  50DF               	movf	indf2,w,c
 30042  00250C  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30043  00250E  517F               	movf	AESEncode@i& (0+255),w,b
 30044  002510  256A               	addwf	AESEncode@block& (0+255),w,b
 30045  002512  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30046  002514  0E00               	movlw	0
 30047  002516  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30048  002518  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30049  00251A  0E02               	movlw	2
 30050  00251C  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30051  00251E  6ED9               	movwf	fsr2l,c
 30052  002520  0E00               	movlw	0
 30053  002522  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30054  002524  6EDA               	movwf	fsr2h,c
 30055  002526  50DF               	movf	indf2,w,c
 30056  002528  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30057  00252A  6F7C               	movwf	AESEncode@aux2& (0+255),b
 30058                           
 30059                           ;AES.c: 257: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 30060  00252C  0E7F               	movlw	127
 30061  00252E  657D               	cpfsgt	AESEncode@aux1& (0+255),b
 30062  002530  D00C               	goto	l12050
 30063                           
 30064                           ; BSR set to: 0
 30065  002532  0E1B               	movlw	27
 30066  002534  C07D  F06D         	movff	AESEncode@aux1,??_AESEncode
 30067  002538  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30068  00253A  90D8               	bcf	status,0,c
 30069  00253C  376D               	rlcf	??_AESEncode& (0+255),f,b
 30070  00253E  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30071  002540  196D               	xorwf	??_AESEncode& (0+255),w,b
 30072  002542  6F75               	movwf	_AESEncode$4143& (0+255),b
 30073  002544  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30074  002546  6F76               	movwf	(_AESEncode$4143+1)& (0+255),b
 30075  002548  D005               	goto	l12052
 30076  00254A                     l12050:
 30077                           
 30078                           ; BSR set to: 0
 30079  00254A  90D8               	bcf	status,0,c
 30080  00254C  357D               	rlcf	AESEncode@aux1& (0+255),w,b
 30081  00254E  6F75               	movwf	_AESEncode$4143& (0+255),b
 30082  002550  6B76               	clrf	(_AESEncode$4143+1)& (0+255),b
 30083  002552  3776               	rlcf	(_AESEncode$4143+1)& (0+255),f,b
 30084  002554                     l12052:
 30085                           
 30086                           ; BSR set to: 0
 30087  002554  C075  F07D         	movff	_AESEncode$4143,AESEncode@aux1
 30088                           
 30089                           ;AES.c: 258: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 30090  002558  0E7F               	movlw	127
 30091  00255A  657C               	cpfsgt	AESEncode@aux2& (0+255),b
 30092  00255C  D00C               	goto	l12056
 30093                           
 30094                           ; BSR set to: 0
 30095  00255E  0E1B               	movlw	27
 30096  002560  C07C  F06D         	movff	AESEncode@aux2,??_AESEncode
 30097  002564  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30098  002566  90D8               	bcf	status,0,c
 30099  002568  376D               	rlcf	??_AESEncode& (0+255),f,b
 30100  00256A  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30101  00256C  196D               	xorwf	??_AESEncode& (0+255),w,b
 30102  00256E  6F77               	movwf	_AESEncode$4144& (0+255),b
 30103  002570  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30104  002572  6F78               	movwf	(_AESEncode$4144+1)& (0+255),b
 30105  002574  D005               	goto	l12058
 30106  002576                     l12056:
 30107                           
 30108                           ; BSR set to: 0
 30109  002576  90D8               	bcf	status,0,c
 30110  002578  357C               	rlcf	AESEncode@aux2& (0+255),w,b
 30111  00257A  6F77               	movwf	_AESEncode$4144& (0+255),b
 30112  00257C  6B78               	clrf	(_AESEncode$4144+1)& (0+255),b
 30113  00257E  3778               	rlcf	(_AESEncode$4144+1)& (0+255),f,b
 30114  002580                     l12058:
 30115                           
 30116                           ; BSR set to: 0
 30117  002580  C077  F07C         	movff	_AESEncode$4144,AESEncode@aux2
 30118                           
 30119                           ;AES.c: 259: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 30120  002584  0E7F               	movlw	127
 30121  002586  657E               	cpfsgt	AESEncode@aux3& (0+255),b
 30122  002588  D00C               	goto	l12062
 30123                           
 30124                           ; BSR set to: 0
 30125  00258A  0E1B               	movlw	27
 30126  00258C  C07E  F06D         	movff	AESEncode@aux3,??_AESEncode
 30127  002590  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30128  002592  90D8               	bcf	status,0,c
 30129  002594  376D               	rlcf	??_AESEncode& (0+255),f,b
 30130  002596  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30131  002598  196D               	xorwf	??_AESEncode& (0+255),w,b
 30132  00259A  6F79               	movwf	_AESEncode$4145& (0+255),b
 30133  00259C  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30134  00259E  6F7A               	movwf	(_AESEncode$4145+1)& (0+255),b
 30135  0025A0  D005               	goto	l12064
 30136  0025A2                     l12062:
 30137                           
 30138                           ; BSR set to: 0
 30139  0025A2  90D8               	bcf	status,0,c
 30140  0025A4  357E               	rlcf	AESEncode@aux3& (0+255),w,b
 30141  0025A6  6F79               	movwf	_AESEncode$4145& (0+255),b
 30142  0025A8  6B7A               	clrf	(_AESEncode$4145+1)& (0+255),b
 30143  0025AA  377A               	rlcf	(_AESEncode$4145+1)& (0+255),f,b
 30144  0025AC                     l12064:
 30145                           
 30146                           ; BSR set to: 0
 30147  0025AC  C079  F07E         	movff	_AESEncode$4145,AESEncode@aux3
 30148                           
 30149                           ; BSR set to: 0
 30150                           ;AES.c: 261: block[i+0]= aux^aux1^block[i+0];
 30151  0025B0  517F               	movf	AESEncode@i& (0+255),w,b
 30152  0025B2  256A               	addwf	AESEncode@block& (0+255),w,b
 30153  0025B4  6ED9               	movwf	fsr2l,c
 30154  0025B6  0E00               	movlw	0
 30155  0025B8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30156  0025BA  6EDA               	movwf	fsr2h,c
 30157  0025BC  517F               	movf	AESEncode@i& (0+255),w,b
 30158  0025BE  256A               	addwf	AESEncode@block& (0+255),w,b
 30159  0025C0  6EE9               	movwf	fsr0l,c
 30160  0025C2  0E00               	movlw	0
 30161  0025C4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30162  0025C6  6EEA               	movwf	fsr0h,c
 30163  0025C8  50EF               	movf	indf0,w,c
 30164  0025CA  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30165  0025CC  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30166  0025CE  6EDF               	movwf	indf2,c
 30167                           
 30168                           ; BSR set to: 0
 30169                           ;AES.c: 262: block[i+1]= aux^aux2^block[i+1];
 30170  0025D0  517F               	movf	AESEncode@i& (0+255),w,b
 30171  0025D2  256A               	addwf	AESEncode@block& (0+255),w,b
 30172  0025D4  6F6D               	movwf	??_AESEncode& (0+255),b
 30173  0025D6  0E00               	movlw	0
 30174  0025D8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30175  0025DA  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30176  0025DC  296D               	incf	??_AESEncode& (0+255),w,b
 30177  0025DE  6ED9               	movwf	fsr2l,c
 30178  0025E0  0E00               	movlw	0
 30179  0025E2  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30180  0025E4  6EDA               	movwf	fsr2h,c
 30181  0025E6  517F               	movf	AESEncode@i& (0+255),w,b
 30182  0025E8  256A               	addwf	AESEncode@block& (0+255),w,b
 30183  0025EA  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30184  0025EC  0E00               	movlw	0
 30185  0025EE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30186  0025F0  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30187  0025F2  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 30188  0025F4  6EE9               	movwf	fsr0l,c
 30189  0025F6  0E00               	movlw	0
 30190  0025F8  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30191  0025FA  6EEA               	movwf	fsr0h,c
 30192  0025FC  50EF               	movf	indf0,w,c
 30193  0025FE  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30194  002600  197C               	xorwf	AESEncode@aux2& (0+255),w,b
 30195  002602  6EDF               	movwf	indf2,c
 30196                           
 30197                           ; BSR set to: 0
 30198                           ;AES.c: 263: block[i+2]= aux^aux3^block[i+2];
 30199  002604  517F               	movf	AESEncode@i& (0+255),w,b
 30200  002606  256A               	addwf	AESEncode@block& (0+255),w,b
 30201  002608  6F6D               	movwf	??_AESEncode& (0+255),b
 30202  00260A  0E00               	movlw	0
 30203  00260C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30204  00260E  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30205  002610  0E02               	movlw	2
 30206  002612  256D               	addwf	??_AESEncode& (0+255),w,b
 30207  002614  6ED9               	movwf	fsr2l,c
 30208  002616  0E00               	movlw	0
 30209  002618  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30210  00261A  6EDA               	movwf	fsr2h,c
 30211  00261C  517F               	movf	AESEncode@i& (0+255),w,b
 30212  00261E  256A               	addwf	AESEncode@block& (0+255),w,b
 30213  002620  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30214  002622  0E00               	movlw	0
 30215  002624  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30216  002626  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30217  002628  0E02               	movlw	2
 30218  00262A  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30219  00262C  6EE9               	movwf	fsr0l,c
 30220  00262E  0E00               	movlw	0
 30221  002630  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30222  002632  6EEA               	movwf	fsr0h,c
 30223  002634  50EF               	movf	indf0,w,c
 30224  002636  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30225  002638  197E               	xorwf	AESEncode@aux3& (0+255),w,b
 30226  00263A  6EDF               	movwf	indf2,c
 30227                           
 30228                           ; BSR set to: 0
 30229                           ;AES.c: 264: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 30230  00263C  517F               	movf	AESEncode@i& (0+255),w,b
 30231  00263E  256A               	addwf	AESEncode@block& (0+255),w,b
 30232  002640  6F6D               	movwf	??_AESEncode& (0+255),b
 30233  002642  0E00               	movlw	0
 30234  002644  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30235  002646  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30236  002648  0E03               	movlw	3
 30237  00264A  256D               	addwf	??_AESEncode& (0+255),w,b
 30238  00264C  6ED9               	movwf	fsr2l,c
 30239  00264E  0E00               	movlw	0
 30240  002650  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30241  002652  6EDA               	movwf	fsr2h,c
 30242  002654  517F               	movf	AESEncode@i& (0+255),w,b
 30243  002656  256A               	addwf	AESEncode@block& (0+255),w,b
 30244  002658  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30245  00265A  0E00               	movlw	0
 30246  00265C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30247  00265E  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30248  002660  0E02               	movlw	2
 30249  002662  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30250  002664  6EE9               	movwf	fsr0l,c
 30251  002666  0E00               	movlw	0
 30252  002668  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30253  00266A  6EEA               	movwf	fsr0h,c
 30254  00266C  50EF               	movf	indf0,w,c
 30255  00266E  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30256  002670  517F               	movf	AESEncode@i& (0+255),w,b
 30257  002672  256A               	addwf	AESEncode@block& (0+255),w,b
 30258  002674  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 30259  002676  0E00               	movlw	0
 30260  002678  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30261  00267A  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 30262  00267C  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 30263  00267E  6EE9               	movwf	fsr0l,c
 30264  002680  0E00               	movlw	0
 30265  002682  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 30266  002684  6EEA               	movwf	fsr0h,c
 30267  002686  50EF               	movf	indf0,w,c
 30268  002688  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 30269  00268A  517F               	movf	AESEncode@i& (0+255),w,b
 30270  00268C  256A               	addwf	AESEncode@block& (0+255),w,b
 30271  00268E  6EE9               	movwf	fsr0l,c
 30272  002690  0E00               	movlw	0
 30273  002692  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30274  002694  6EEA               	movwf	fsr0h,c
 30275  002696  50EF               	movf	indf0,w,c
 30276  002698  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 30277  00269A  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 30278  00269C  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30279  00269E  6EDF               	movwf	indf2,c
 30280  0026A0  0E04               	movlw	4
 30281  0026A2  277F               	addwf	AESEncode@i& (0+255),f,b
 30282  0026A4  0E0F               	movlw	15
 30283  0026A6  657F               	cpfsgt	AESEncode@i& (0+255),b
 30284  0026A8  D6F0               	goto	l12042
 30285  0026AA                     l12074:
 30286                           
 30287                           ; BSR set to: 0
 30288                           ;AES.c: 265: }
 30289                           ;AES.c: 266: }
 30290                           ;AES.c: 268: EncKeySchedule(key);
 30291  0026AA  C06C  F064         	movff	AESEncode@key,EncKeySchedule@key
 30292  0026AE  ECC0  F014         	call	_EncKeySchedule	;wreg free
 30293                           
 30294                           ; BSR set to: 0
 30295                           ;AES.c: 271: for(i=0;i<16;i++)
 30296  0026B2  6B7F               	clrf	AESEncode@i& (0+255),b
 30297  0026B4                     l12082:
 30298                           
 30299                           ; BSR set to: 0
 30300                           ;AES.c: 272: {
 30301                           ;AES.c: 273: block[i] ^= key[i];
 30302  0026B4  516C               	movf	AESEncode@key& (0+255),w,b
 30303  0026B6  257F               	addwf	AESEncode@i& (0+255),w,b
 30304  0026B8  6ED9               	movwf	fsr2l,c
 30305  0026BA  6ADA               	clrf	fsr2h,c
 30306  0026BC  50DF               	movf	indf2,w,c
 30307  0026BE  6F6D               	movwf	??_AESEncode& (0+255),b
 30308  0026C0  517F               	movf	AESEncode@i& (0+255),w,b
 30309  0026C2  256A               	addwf	AESEncode@block& (0+255),w,b
 30310  0026C4  6ED9               	movwf	fsr2l,c
 30311  0026C6  0E00               	movlw	0
 30312  0026C8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30313  0026CA  6EDA               	movwf	fsr2h,c
 30314  0026CC  516D               	movf	??_AESEncode& (0+255),w,b
 30315  0026CE  1ADF               	xorwf	indf2,f,c
 30316                           
 30317                           ; BSR set to: 0
 30318  0026D0  2B7F               	incf	AESEncode@i& (0+255),f,b
 30319                           
 30320                           ; BSR set to: 0
 30321  0026D2  0E0F               	movlw	15
 30322  0026D4  657F               	cpfsgt	AESEncode@i& (0+255),b
 30323  0026D6  D7EE               	goto	l12082
 30324                           
 30325                           ; BSR set to: 0
 30326                           ;AES.c: 274: }
 30327                           ;AES.c: 276: _roundCounter--;
 30328  0026D8  0644               	decf	__roundCounter,f,c
 30329                           
 30330                           ; BSR set to: 0
 30331                           ;AES.c: 277: }
 30332                           ;AES.c: 278: while(_roundCounter !=0);
 30333  0026DA  5044               	movf	__roundCounter,w,c
 30334  0026DC  E001 D6AB          	bnz	l2522
 30335                           
 30336                           ; BSR set to: 0
 30337  0026E0  0012               	return		;funcret
 30338  0026E2                     __end_of_AESEncode:
 30339                           	opt stack 0
 30340                           tosu	equ	0xFFF
 30341                           tosh	equ	0xFFE
 30342                           tosl	equ	0xFFD
 30343                           pclath	equ	0xFFA
 30344                           tblptru	equ	0xFF8
 30345                           tblptrh	equ	0xFF7
 30346                           tblptrl	equ	0xFF6
 30347                           tablat	equ	0xFF5
 30348                           prodh	equ	0xFF4
 30349                           prodl	equ	0xFF3
 30350                           intcon	equ	0xFF2
 30351                           intcon2	equ	0xFF1
 30352                           intcon3	equ	0xFF0
 30353                           indf0	equ	0xFEF
 30354                           postinc0	equ	0xFEE
 30355                           plusw0	equ	0xFEB
 30356                           fsr0h	equ	0xFEA
 30357                           fsr0l	equ	0xFE9
 30358                           wreg	equ	0xFE8
 30359                           postinc1	equ	0xFE6
 30360                           postdec1	equ	0xFE5
 30361                           plusw1	equ	0xFE3
 30362                           fsr1h	equ	0xFE2
 30363                           fsr1l	equ	0xFE1
 30364                           indf2	equ	0xFDF
 30365                           postinc2	equ	0xFDE
 30366                           postdec2	equ	0xFDD
 30367                           plusw2	equ	0xFDB
 30368                           fsr2h	equ	0xFDA
 30369                           fsr2l	equ	0xFD9
 30370                           status	equ	0xFD8
 30371                           
 30372 ;; *************** function _EncodeShiftRow *****************
 30373 ;; Defined at:
 30374 ;;		line 354 in file "mcc_generated_files/LoRaWAN/AES.c"
 30375 ;; Parameters:    Size  Location     Type
 30376 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 30377 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30378 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30379 ;; Auto vars:     Size  Location     Type
 30380 ;;  temp            1    6[BANK0 ] unsigned char 
 30381 ;; Return value:  Size  Location     Type
 30382 ;;                  1    wreg      void 
 30383 ;; Registers used:
 30384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30385 ;; Tracked objects:
 30386 ;;		On entry : F/0
 30387 ;;		On exit  : F/0
 30388 ;;		Unchanged: 0/0
 30389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30393 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30394 ;;Total ram usage:        3 bytes
 30395 ;; Hardware stack levels used:    1
 30396 ;; Hardware stack levels required when called:    7
 30397 ;; This function calls:
 30398 ;;		Nothing
 30399 ;; This function is called by:
 30400 ;;		_AESEncode
 30401 ;; This function uses a non-reentrant model
 30402 ;;
 30403                           
 30404                           	psect	text157
 30405  003D3C                     __ptext157:
 30406                           	opt stack 0
 30407  003D3C                     _EncodeShiftRow:
 30408                           	opt stack 17
 30409                           
 30410                           ; BSR set to: 0
 30411                           ;AES.c: 356: unsigned char temp;
 30412                           ;AES.c: 361: temp=stateTable[1];
 30413                           
 30414                           ; BSR set to: 0
 30415                           ;incstack = 0
 30416  003D3C  EE20 F001          	lfsr	2,1
 30417  003D40  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30418  003D42  26D9               	addwf	fsr2l,f,c
 30419  003D44  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30420  003D46  22DA               	addwfc	fsr2h,f,c
 30421  003D48  50DF               	movf	indf2,w,c
 30422  003D4A  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30423                           
 30424                           ; BSR set to: 0
 30425                           ;AES.c: 362: stateTable[1]=stateTable[5];
 30426  003D4C  EE20 F005          	lfsr	2,5
 30427  003D50  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30428  003D52  26D9               	addwf	fsr2l,f,c
 30429  003D54  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30430  003D56  22DA               	addwfc	fsr2h,f,c
 30431  003D58  EE00 F001          	lfsr	0,1
 30432  003D5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30433  003D5E  26E9               	addwf	fsr0l,f,c
 30434  003D60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30435  003D62  22EA               	addwfc	fsr0h,f,c
 30436  003D64  CFDF FFEF          	movff	indf2,indf0
 30437                           
 30438                           ; BSR set to: 0
 30439                           ;AES.c: 363: stateTable[5]=stateTable[9];
 30440  003D68  EE20 F009          	lfsr	2,9
 30441  003D6C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30442  003D6E  26D9               	addwf	fsr2l,f,c
 30443  003D70  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30444  003D72  22DA               	addwfc	fsr2h,f,c
 30445  003D74  EE00 F005          	lfsr	0,5
 30446  003D78  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30447  003D7A  26E9               	addwf	fsr0l,f,c
 30448  003D7C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30449  003D7E  22EA               	addwfc	fsr0h,f,c
 30450  003D80  CFDF FFEF          	movff	indf2,indf0
 30451                           
 30452                           ; BSR set to: 0
 30453                           ;AES.c: 364: stateTable[9]=stateTable[13];
 30454  003D84  EE20 F00D          	lfsr	2,13
 30455  003D88  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30456  003D8A  26D9               	addwf	fsr2l,f,c
 30457  003D8C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30458  003D8E  22DA               	addwfc	fsr2h,f,c
 30459  003D90  EE00 F009          	lfsr	0,9
 30460  003D94  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30461  003D96  26E9               	addwf	fsr0l,f,c
 30462  003D98  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30463  003D9A  22EA               	addwfc	fsr0h,f,c
 30464  003D9C  CFDF FFEF          	movff	indf2,indf0
 30465                           
 30466                           ; BSR set to: 0
 30467                           ;AES.c: 365: stateTable[13]=temp;
 30468  003DA0  EE20 F00D          	lfsr	2,13
 30469  003DA4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30470  003DA6  26D9               	addwf	fsr2l,f,c
 30471  003DA8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30472  003DAA  22DA               	addwfc	fsr2h,f,c
 30473  003DAC  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30474                           
 30475                           ; BSR set to: 0
 30476                           ;AES.c: 368: temp=stateTable[2];
 30477  003DB0  EE20 F002          	lfsr	2,2
 30478  003DB4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30479  003DB6  26D9               	addwf	fsr2l,f,c
 30480  003DB8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30481  003DBA  22DA               	addwfc	fsr2h,f,c
 30482  003DBC  50DF               	movf	indf2,w,c
 30483  003DBE  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30484                           
 30485                           ; BSR set to: 0
 30486                           ;AES.c: 369: stateTable[2]=stateTable[10];
 30487  003DC0  EE20 F00A          	lfsr	2,10
 30488  003DC4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30489  003DC6  26D9               	addwf	fsr2l,f,c
 30490  003DC8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30491  003DCA  22DA               	addwfc	fsr2h,f,c
 30492  003DCC  EE00 F002          	lfsr	0,2
 30493  003DD0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30494  003DD2  26E9               	addwf	fsr0l,f,c
 30495  003DD4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30496  003DD6  22EA               	addwfc	fsr0h,f,c
 30497  003DD8  CFDF FFEF          	movff	indf2,indf0
 30498                           
 30499                           ;AES.c: 370: stateTable[10]=temp;
 30500  003DDC  EE20 F00A          	lfsr	2,10
 30501  003DE0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30502  003DE2  26D9               	addwf	fsr2l,f,c
 30503  003DE4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30504  003DE6  22DA               	addwfc	fsr2h,f,c
 30505  003DE8  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30506                           
 30507                           ;AES.c: 371: temp=stateTable[14];
 30508  003DEC  EE20 F00E          	lfsr	2,14
 30509  003DF0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30510  003DF2  26D9               	addwf	fsr2l,f,c
 30511  003DF4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30512  003DF6  22DA               	addwfc	fsr2h,f,c
 30513  003DF8  50DF               	movf	indf2,w,c
 30514  003DFA  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30515                           
 30516                           ; BSR set to: 0
 30517                           ;AES.c: 372: stateTable[14]=stateTable[6];
 30518  003DFC  EE20 F006          	lfsr	2,6
 30519  003E00  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30520  003E02  26D9               	addwf	fsr2l,f,c
 30521  003E04  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30522  003E06  22DA               	addwfc	fsr2h,f,c
 30523  003E08  EE00 F00E          	lfsr	0,14
 30524  003E0C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30525  003E0E  26E9               	addwf	fsr0l,f,c
 30526  003E10  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30527  003E12  22EA               	addwfc	fsr0h,f,c
 30528  003E14  CFDF FFEF          	movff	indf2,indf0
 30529                           
 30530                           ; BSR set to: 0
 30531                           ;AES.c: 373: stateTable[6]=temp;
 30532  003E18  EE20 F006          	lfsr	2,6
 30533  003E1C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30534  003E1E  26D9               	addwf	fsr2l,f,c
 30535  003E20  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30536  003E22  22DA               	addwfc	fsr2h,f,c
 30537  003E24  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30538                           
 30539                           ; BSR set to: 0
 30540                           ;AES.c: 376: temp=stateTable[3];
 30541  003E28  EE20 F003          	lfsr	2,3
 30542  003E2C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30543  003E2E  26D9               	addwf	fsr2l,f,c
 30544  003E30  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30545  003E32  22DA               	addwfc	fsr2h,f,c
 30546  003E34  50DF               	movf	indf2,w,c
 30547  003E36  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30548                           
 30549                           ; BSR set to: 0
 30550                           ;AES.c: 377: stateTable[3]=stateTable[15];
 30551  003E38  EE20 F00F          	lfsr	2,15
 30552  003E3C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30553  003E3E  26D9               	addwf	fsr2l,f,c
 30554  003E40  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30555  003E42  22DA               	addwfc	fsr2h,f,c
 30556  003E44  EE00 F003          	lfsr	0,3
 30557  003E48  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30558  003E4A  26E9               	addwf	fsr0l,f,c
 30559  003E4C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30560  003E4E  22EA               	addwfc	fsr0h,f,c
 30561  003E50  CFDF FFEF          	movff	indf2,indf0
 30562                           
 30563                           ; BSR set to: 0
 30564                           ;AES.c: 378: stateTable[15]=stateTable[11];
 30565  003E54  EE20 F00B          	lfsr	2,11
 30566  003E58  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30567  003E5A  26D9               	addwf	fsr2l,f,c
 30568  003E5C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30569  003E5E  22DA               	addwfc	fsr2h,f,c
 30570  003E60  EE00 F00F          	lfsr	0,15
 30571  003E64  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30572  003E66  26E9               	addwf	fsr0l,f,c
 30573  003E68  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30574  003E6A  22EA               	addwfc	fsr0h,f,c
 30575  003E6C  CFDF FFEF          	movff	indf2,indf0
 30576                           
 30577                           ; BSR set to: 0
 30578                           ;AES.c: 379: stateTable[11]=stateTable[7];
 30579  003E70  EE20 F007          	lfsr	2,7
 30580  003E74  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30581  003E76  26D9               	addwf	fsr2l,f,c
 30582  003E78  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30583  003E7A  22DA               	addwfc	fsr2h,f,c
 30584  003E7C  EE00 F00B          	lfsr	0,11
 30585  003E80  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30586  003E82  26E9               	addwf	fsr0l,f,c
 30587  003E84  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30588  003E86  22EA               	addwfc	fsr0h,f,c
 30589  003E88  CFDF FFEF          	movff	indf2,indf0
 30590                           
 30591                           ;AES.c: 380: stateTable[7]=temp;
 30592  003E8C  EE20 F007          	lfsr	2,7
 30593  003E90  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30594  003E92  26D9               	addwf	fsr2l,f,c
 30595  003E94  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30596  003E96  22DA               	addwfc	fsr2h,f,c
 30597  003E98  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30598                           
 30599                           ; BSR set to: 0
 30600  003E9C  0012               	return		;funcret
 30601  003E9E                     __end_of_EncodeShiftRow:
 30602                           	opt stack 0
 30603                           tosu	equ	0xFFF
 30604                           tosh	equ	0xFFE
 30605                           tosl	equ	0xFFD
 30606                           pclath	equ	0xFFA
 30607                           tblptru	equ	0xFF8
 30608                           tblptrh	equ	0xFF7
 30609                           tblptrl	equ	0xFF6
 30610                           tablat	equ	0xFF5
 30611                           prodh	equ	0xFF4
 30612                           prodl	equ	0xFF3
 30613                           intcon	equ	0xFF2
 30614                           intcon2	equ	0xFF1
 30615                           intcon3	equ	0xFF0
 30616                           indf0	equ	0xFEF
 30617                           postinc0	equ	0xFEE
 30618                           plusw0	equ	0xFEB
 30619                           fsr0h	equ	0xFEA
 30620                           fsr0l	equ	0xFE9
 30621                           wreg	equ	0xFE8
 30622                           postinc1	equ	0xFE6
 30623                           postdec1	equ	0xFE5
 30624                           plusw1	equ	0xFE3
 30625                           fsr1h	equ	0xFE2
 30626                           fsr1l	equ	0xFE1
 30627                           indf2	equ	0xFDF
 30628                           postinc2	equ	0xFDE
 30629                           postdec2	equ	0xFDD
 30630                           plusw2	equ	0xFDB
 30631                           fsr2h	equ	0xFDA
 30632                           fsr2l	equ	0xFD9
 30633                           status	equ	0xFD8
 30634                           
 30635 ;; *************** function _EncKeySchedule *****************
 30636 ;; Defined at:
 30637 ;;		line 306 in file "mcc_generated_files/LoRaWAN/AES.c"
 30638 ;; Parameters:    Size  Location     Type
 30639 ;;  key             1    4[BANK0 ] PTR unsigned char 
 30640 ;;		 -> AESEncodeLoRa@useKey(16), 
 30641 ;; Auto vars:     Size  Location     Type
 30642 ;;		None
 30643 ;; Return value:  Size  Location     Type
 30644 ;;                  1    wreg      void 
 30645 ;; Registers used:
 30646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30647 ;; Tracked objects:
 30648 ;;		On entry : F/0
 30649 ;;		On exit  : F/0
 30650 ;;		Unchanged: 0/0
 30651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30652 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30654 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30655 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30656 ;;Total ram usage:        6 bytes
 30657 ;; Hardware stack levels used:    1
 30658 ;; Hardware stack levels required when called:    7
 30659 ;; This function calls:
 30660 ;;		Nothing
 30661 ;; This function is called by:
 30662 ;;		_AESEncode
 30663 ;; This function uses a non-reentrant model
 30664 ;;
 30665                           
 30666                           	psect	text158
 30667  002980                     __ptext158:
 30668                           	opt stack 0
 30669  002980                     _EncKeySchedule:
 30670                           	opt stack 17
 30671                           
 30672                           ; BSR set to: 0
 30673                           ;AES.c: 309: key[0]^=STable[key[13]];
 30674                           
 30675                           ; BSR set to: 0
 30676                           ;incstack = 0
 30677  002980  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30678  002982  6ED9               	movwf	fsr2l,c
 30679  002984  6ADA               	clrf	fsr2h,c
 30680  002986  0E0D               	movlw	13
 30681  002988  26D9               	addwf	fsr2l,f,c
 30682  00298A  50DF               	movf	indf2,w,c
 30683  00298C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30684  00298E  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30685  002990  0E6D               	movlw	low _STable
 30686  002992  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30687  002994  6EF6               	movwf	tblptrl,c
 30688  002996  0EFE               	movlw	high _STable
 30689  002998  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30690  00299A  6EF7               	movwf	tblptrh,c
 30691  00299C                     	if	1	;There are 3 active tblptr bytes
 30692  00299C  6AF8               	clrf	tblptru,c
 30693  00299E  0E00               	movlw	low (__mediumconst shr (0+16))
 30694  0029A0  22F8               	addwfc	tblptru,f,c
 30695  0029A2                     	endif
 30696  0029A2  0008               	tblrd		*
 30697  0029A4  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30698  0029A8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30699  0029AA  6ED9               	movwf	fsr2l,c
 30700  0029AC  6ADA               	clrf	fsr2h,c
 30701  0029AE  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30702  0029B0  1ADF               	xorwf	indf2,f,c
 30703                           
 30704                           ;AES.c: 310: key[1]^=STable[key[14]];
 30705  0029B2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30706  0029B4  6ED9               	movwf	fsr2l,c
 30707  0029B6  6ADA               	clrf	fsr2h,c
 30708  0029B8  0E0E               	movlw	14
 30709  0029BA  26D9               	addwf	fsr2l,f,c
 30710  0029BC  50DF               	movf	indf2,w,c
 30711  0029BE  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30712  0029C0  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30713  0029C2  0E6D               	movlw	low _STable
 30714  0029C4  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30715  0029C6  6EF6               	movwf	tblptrl,c
 30716  0029C8  0EFE               	movlw	high _STable
 30717  0029CA  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30718  0029CC  6EF7               	movwf	tblptrh,c
 30719  0029CE                     	if	1	;There are 3 active tblptr bytes
 30720  0029CE  6AF8               	clrf	tblptru,c
 30721  0029D0  0E00               	movlw	low (__mediumconst shr (0+16))
 30722  0029D2  22F8               	addwfc	tblptru,f,c
 30723  0029D4                     	endif
 30724  0029D4  0008               	tblrd		*
 30725  0029D6  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30726  0029DA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30727  0029DC  6ED9               	movwf	fsr2l,c
 30728  0029DE  6ADA               	clrf	fsr2h,c
 30729  0029E0  2AD9               	incf	fsr2l,f,c
 30730  0029E2  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30731  0029E4  1ADF               	xorwf	indf2,f,c
 30732                           
 30733                           ;AES.c: 311: key[2]^=STable[key[15]];
 30734  0029E6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30735  0029E8  6ED9               	movwf	fsr2l,c
 30736  0029EA  6ADA               	clrf	fsr2h,c
 30737  0029EC  0E0F               	movlw	15
 30738  0029EE  26D9               	addwf	fsr2l,f,c
 30739  0029F0  50DF               	movf	indf2,w,c
 30740  0029F2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30741  0029F4  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30742  0029F6  0E6D               	movlw	low _STable
 30743  0029F8  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30744  0029FA  6EF6               	movwf	tblptrl,c
 30745  0029FC  0EFE               	movlw	high _STable
 30746  0029FE  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30747  002A00  6EF7               	movwf	tblptrh,c
 30748  002A02                     	if	1	;There are 3 active tblptr bytes
 30749  002A02  6AF8               	clrf	tblptru,c
 30750  002A04  0E00               	movlw	low (__mediumconst shr (0+16))
 30751  002A06  22F8               	addwfc	tblptru,f,c
 30752  002A08                     	endif
 30753  002A08  0008               	tblrd		*
 30754  002A0A  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30755  002A0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30756  002A10  6ED9               	movwf	fsr2l,c
 30757  002A12  6ADA               	clrf	fsr2h,c
 30758  002A14  0E02               	movlw	2
 30759  002A16  26D9               	addwf	fsr2l,f,c
 30760  002A18  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30761  002A1A  1ADF               	xorwf	indf2,f,c
 30762                           
 30763                           ;AES.c: 312: key[3]^=STable[key[12]];
 30764  002A1C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30765  002A1E  6ED9               	movwf	fsr2l,c
 30766  002A20  6ADA               	clrf	fsr2h,c
 30767  002A22  0E0C               	movlw	12
 30768  002A24  26D9               	addwf	fsr2l,f,c
 30769  002A26  50DF               	movf	indf2,w,c
 30770  002A28  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30771  002A2A  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30772  002A2C  0E6D               	movlw	low _STable
 30773  002A2E  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30774  002A30  6EF6               	movwf	tblptrl,c
 30775  002A32  0EFE               	movlw	high _STable
 30776  002A34  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30777  002A36  6EF7               	movwf	tblptrh,c
 30778  002A38                     	if	1	;There are 3 active tblptr bytes
 30779  002A38  6AF8               	clrf	tblptru,c
 30780  002A3A  0E00               	movlw	low (__mediumconst shr (0+16))
 30781  002A3C  22F8               	addwfc	tblptru,f,c
 30782  002A3E                     	endif
 30783  002A3E  0008               	tblrd		*
 30784  002A40  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30785  002A44  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30786  002A46  6ED9               	movwf	fsr2l,c
 30787  002A48  6ADA               	clrf	fsr2h,c
 30788  002A4A  0E03               	movlw	3
 30789  002A4C  26D9               	addwf	fsr2l,f,c
 30790  002A4E  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30791  002A50  1ADF               	xorwf	indf2,f,c
 30792                           
 30793                           ; BSR set to: 0
 30794                           ;AES.c: 314: key[0]^=_rcon;
 30795  002A52  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30796  002A54  6ED9               	movwf	fsr2l,c
 30797  002A56  6ADA               	clrf	fsr2h,c
 30798  002A58  51EE               	movf	__rcon& (0+255),w,b
 30799  002A5A  1ADF               	xorwf	indf2,f,c
 30800                           
 30801                           ; BSR set to: 0
 30802                           ;AES.c: 315: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30803  002A5C  0E7F               	movlw	127
 30804  002A5E  65EE               	cpfsgt	__rcon& (0+255),b
 30805  002A60  D00C               	goto	l11902
 30806                           
 30807                           ; BSR set to: 0
 30808  002A62  0E1B               	movlw	27
 30809  002A64  C0EE  F065         	movff	__rcon,??_EncKeySchedule
 30810  002A68  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30811  002A6A  90D8               	bcf	status,0,c
 30812  002A6C  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 30813  002A6E  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30814  002A70  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 30815  002A72  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30816  002A74  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30817  002A76  6F69               	movwf	(_EncKeySchedule$4148+1)& (0+255),b
 30818  002A78  D005               	goto	l11904
 30819  002A7A                     l11902:
 30820                           
 30821                           ; BSR set to: 0
 30822  002A7A  90D8               	bcf	status,0,c
 30823  002A7C  35EE               	rlcf	__rcon& (0+255),w,b
 30824  002A7E  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30825  002A80  6B69               	clrf	(_EncKeySchedule$4148+1)& (0+255),b
 30826  002A82  3769               	rlcf	(_EncKeySchedule$4148+1)& (0+255),f,b
 30827  002A84                     l11904:
 30828                           
 30829                           ; BSR set to: 0
 30830  002A84  C068  F0EE         	movff	_EncKeySchedule$4148,__rcon
 30831                           
 30832                           ; BSR set to: 0
 30833                           ;AES.c: 318: key[4]^=key[0];
 30834  002A88  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30835  002A8A  6ED9               	movwf	fsr2l,c
 30836  002A8C  6ADA               	clrf	fsr2h,c
 30837  002A8E  50DF               	movf	indf2,w,c
 30838  002A90  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30839  002A92  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30840  002A94  6ED9               	movwf	fsr2l,c
 30841  002A96  6ADA               	clrf	fsr2h,c
 30842  002A98  0E04               	movlw	4
 30843  002A9A  26D9               	addwf	fsr2l,f,c
 30844  002A9C  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30845  002A9E  1ADF               	xorwf	indf2,f,c
 30846                           
 30847                           ; BSR set to: 0
 30848                           ;AES.c: 319: key[5]^=key[1];
 30849  002AA0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30850  002AA2  6ED9               	movwf	fsr2l,c
 30851  002AA4  6ADA               	clrf	fsr2h,c
 30852  002AA6  2AD9               	incf	fsr2l,f,c
 30853  002AA8  50DF               	movf	indf2,w,c
 30854  002AAA  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30855  002AAC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30856  002AAE  6ED9               	movwf	fsr2l,c
 30857  002AB0  6ADA               	clrf	fsr2h,c
 30858  002AB2  0E05               	movlw	5
 30859  002AB4  26D9               	addwf	fsr2l,f,c
 30860  002AB6  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30861  002AB8  1ADF               	xorwf	indf2,f,c
 30862                           
 30863                           ; BSR set to: 0
 30864                           ;AES.c: 320: key[6]^=key[2];
 30865  002ABA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30866  002ABC  6ED9               	movwf	fsr2l,c
 30867  002ABE  6ADA               	clrf	fsr2h,c
 30868  002AC0  0E02               	movlw	2
 30869  002AC2  26D9               	addwf	fsr2l,f,c
 30870  002AC4  50DF               	movf	indf2,w,c
 30871  002AC6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30872  002AC8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30873  002ACA  6ED9               	movwf	fsr2l,c
 30874  002ACC  6ADA               	clrf	fsr2h,c
 30875  002ACE  0E06               	movlw	6
 30876  002AD0  26D9               	addwf	fsr2l,f,c
 30877  002AD2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30878  002AD4  1ADF               	xorwf	indf2,f,c
 30879                           
 30880                           ; BSR set to: 0
 30881                           ;AES.c: 321: key[7]^=key[3];
 30882  002AD6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30883  002AD8  6ED9               	movwf	fsr2l,c
 30884  002ADA  6ADA               	clrf	fsr2h,c
 30885  002ADC  0E03               	movlw	3
 30886  002ADE  26D9               	addwf	fsr2l,f,c
 30887  002AE0  50DF               	movf	indf2,w,c
 30888  002AE2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30889  002AE4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30890  002AE6  6ED9               	movwf	fsr2l,c
 30891  002AE8  6ADA               	clrf	fsr2h,c
 30892  002AEA  0E07               	movlw	7
 30893  002AEC  26D9               	addwf	fsr2l,f,c
 30894  002AEE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30895  002AF0  1ADF               	xorwf	indf2,f,c
 30896                           
 30897                           ; BSR set to: 0
 30898                           ;AES.c: 324: key[8]^=key[4];
 30899  002AF2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30900  002AF4  6ED9               	movwf	fsr2l,c
 30901  002AF6  6ADA               	clrf	fsr2h,c
 30902  002AF8  0E04               	movlw	4
 30903  002AFA  26D9               	addwf	fsr2l,f,c
 30904  002AFC  50DF               	movf	indf2,w,c
 30905  002AFE  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30906  002B00  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30907  002B02  6ED9               	movwf	fsr2l,c
 30908  002B04  6ADA               	clrf	fsr2h,c
 30909  002B06  0E08               	movlw	8
 30910  002B08  26D9               	addwf	fsr2l,f,c
 30911  002B0A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30912  002B0C  1ADF               	xorwf	indf2,f,c
 30913                           
 30914                           ; BSR set to: 0
 30915                           ;AES.c: 325: key[9]^=key[5];
 30916  002B0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30917  002B10  6ED9               	movwf	fsr2l,c
 30918  002B12  6ADA               	clrf	fsr2h,c
 30919  002B14  0E05               	movlw	5
 30920  002B16  26D9               	addwf	fsr2l,f,c
 30921  002B18  50DF               	movf	indf2,w,c
 30922  002B1A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30923  002B1C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30924  002B1E  6ED9               	movwf	fsr2l,c
 30925  002B20  6ADA               	clrf	fsr2h,c
 30926  002B22  0E09               	movlw	9
 30927  002B24  26D9               	addwf	fsr2l,f,c
 30928  002B26  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30929  002B28  1ADF               	xorwf	indf2,f,c
 30930                           
 30931                           ; BSR set to: 0
 30932                           ;AES.c: 326: key[10]^=key[6];
 30933  002B2A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30934  002B2C  6ED9               	movwf	fsr2l,c
 30935  002B2E  6ADA               	clrf	fsr2h,c
 30936  002B30  0E06               	movlw	6
 30937  002B32  26D9               	addwf	fsr2l,f,c
 30938  002B34  50DF               	movf	indf2,w,c
 30939  002B36  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30940  002B38  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30941  002B3A  6ED9               	movwf	fsr2l,c
 30942  002B3C  6ADA               	clrf	fsr2h,c
 30943  002B3E  0E0A               	movlw	10
 30944  002B40  26D9               	addwf	fsr2l,f,c
 30945  002B42  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30946  002B44  1ADF               	xorwf	indf2,f,c
 30947                           
 30948                           ; BSR set to: 0
 30949                           ;AES.c: 327: key[11]^=key[7];
 30950  002B46  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30951  002B48  6ED9               	movwf	fsr2l,c
 30952  002B4A  6ADA               	clrf	fsr2h,c
 30953  002B4C  0E07               	movlw	7
 30954  002B4E  26D9               	addwf	fsr2l,f,c
 30955  002B50  50DF               	movf	indf2,w,c
 30956  002B52  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30957  002B54  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30958  002B56  6ED9               	movwf	fsr2l,c
 30959  002B58  6ADA               	clrf	fsr2h,c
 30960  002B5A  0E0B               	movlw	11
 30961  002B5C  26D9               	addwf	fsr2l,f,c
 30962  002B5E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30963  002B60  1ADF               	xorwf	indf2,f,c
 30964                           
 30965                           ; BSR set to: 0
 30966                           ;AES.c: 330: key[12]^=key[8];
 30967  002B62  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30968  002B64  6ED9               	movwf	fsr2l,c
 30969  002B66  6ADA               	clrf	fsr2h,c
 30970  002B68  0E08               	movlw	8
 30971  002B6A  26D9               	addwf	fsr2l,f,c
 30972  002B6C  50DF               	movf	indf2,w,c
 30973  002B6E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30974  002B70  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30975  002B72  6ED9               	movwf	fsr2l,c
 30976  002B74  6ADA               	clrf	fsr2h,c
 30977  002B76  0E0C               	movlw	12
 30978  002B78  26D9               	addwf	fsr2l,f,c
 30979  002B7A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30980  002B7C  1ADF               	xorwf	indf2,f,c
 30981                           
 30982                           ; BSR set to: 0
 30983                           ;AES.c: 331: key[13]^=key[9];
 30984  002B7E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30985  002B80  6ED9               	movwf	fsr2l,c
 30986  002B82  6ADA               	clrf	fsr2h,c
 30987  002B84  0E09               	movlw	9
 30988  002B86  26D9               	addwf	fsr2l,f,c
 30989  002B88  50DF               	movf	indf2,w,c
 30990  002B8A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30991  002B8C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30992  002B8E  6ED9               	movwf	fsr2l,c
 30993  002B90  6ADA               	clrf	fsr2h,c
 30994  002B92  0E0D               	movlw	13
 30995  002B94  26D9               	addwf	fsr2l,f,c
 30996  002B96  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30997  002B98  1ADF               	xorwf	indf2,f,c
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;AES.c: 332: key[14]^=key[10];
 31001  002B9A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31002  002B9C  6ED9               	movwf	fsr2l,c
 31003  002B9E  6ADA               	clrf	fsr2h,c
 31004  002BA0  0E0A               	movlw	10
 31005  002BA2  26D9               	addwf	fsr2l,f,c
 31006  002BA4  50DF               	movf	indf2,w,c
 31007  002BA6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31008  002BA8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31009  002BAA  6ED9               	movwf	fsr2l,c
 31010  002BAC  6ADA               	clrf	fsr2h,c
 31011  002BAE  0E0E               	movlw	14
 31012  002BB0  26D9               	addwf	fsr2l,f,c
 31013  002BB2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31014  002BB4  1ADF               	xorwf	indf2,f,c
 31015                           
 31016                           ; BSR set to: 0
 31017                           ;AES.c: 333: key[15]^=key[11];
 31018  002BB6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31019  002BB8  6ED9               	movwf	fsr2l,c
 31020  002BBA  6ADA               	clrf	fsr2h,c
 31021  002BBC  0E0B               	movlw	11
 31022  002BBE  26D9               	addwf	fsr2l,f,c
 31023  002BC0  50DF               	movf	indf2,w,c
 31024  002BC2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31025  002BC4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31026  002BC6  6ED9               	movwf	fsr2l,c
 31027  002BC8  6ADA               	clrf	fsr2h,c
 31028  002BCA  0E0F               	movlw	15
 31029  002BCC  26D9               	addwf	fsr2l,f,c
 31030  002BCE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31031  002BD0  1ADF               	xorwf	indf2,f,c
 31032                           
 31033                           ; BSR set to: 0
 31034  002BD2  0012               	return		;funcret
 31035  002BD4                     __end_of_EncKeySchedule:
 31036                           	opt stack 0
 31037                           tosu	equ	0xFFF
 31038                           tosh	equ	0xFFE
 31039                           tosl	equ	0xFFD
 31040                           pclath	equ	0xFFA
 31041                           tblptru	equ	0xFF8
 31042                           tblptrh	equ	0xFF7
 31043                           tblptrl	equ	0xFF6
 31044                           tablat	equ	0xFF5
 31045                           prodh	equ	0xFF4
 31046                           prodl	equ	0xFF3
 31047                           intcon	equ	0xFF2
 31048                           intcon2	equ	0xFF1
 31049                           intcon3	equ	0xFF0
 31050                           indf0	equ	0xFEF
 31051                           postinc0	equ	0xFEE
 31052                           plusw0	equ	0xFEB
 31053                           fsr0h	equ	0xFEA
 31054                           fsr0l	equ	0xFE9
 31055                           wreg	equ	0xFE8
 31056                           postinc1	equ	0xFE6
 31057                           postdec1	equ	0xFE5
 31058                           plusw1	equ	0xFE3
 31059                           fsr1h	equ	0xFE2
 31060                           fsr1l	equ	0xFE1
 31061                           indf2	equ	0xFDF
 31062                           postinc2	equ	0xFDE
 31063                           postdec2	equ	0xFDD
 31064                           plusw2	equ	0xFDB
 31065                           fsr2h	equ	0xFDA
 31066                           fsr2l	equ	0xFD9
 31067                           status	equ	0xFD8
 31068                           
 31069 ;; *************** function _LORAWAN_Init *****************
 31070 ;; Defined at:
 31071 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31072 ;; Parameters:    Size  Location     Type
 31073 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 31074 ;;		 -> RxDataDone(1), 
 31075 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 31076 ;;		 -> RxJoinResponse(1), 
 31077 ;; Auto vars:     Size  Location     Type
 31078 ;;		None
 31079 ;; Return value:  Size  Location     Type
 31080 ;;                  1    wreg      void 
 31081 ;; Registers used:
 31082 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31083 ;; Tracked objects:
 31084 ;;		On entry : F/0
 31085 ;;		On exit  : D/0
 31086 ;;		Unchanged: 0/0
 31087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31088 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31091 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31092 ;;Total ram usage:        4 bytes
 31093 ;; Hardware stack levels used:    1
 31094 ;; Hardware stack levels required when called:   13
 31095 ;; This function calls:
 31096 ;;		_CreateAllSoftwareTimers
 31097 ;;		_LORAWAN_Reset
 31098 ;;		_RADIO_Init
 31099 ;;		_RADIO_ReadRandom
 31100 ;;		_SetCallbackSoftwareTimers
 31101 ;;		_StopAllSoftwareTimers
 31102 ;;		_srand
 31103 ;; This function is called by:
 31104 ;;		_main
 31105 ;; This function uses a non-reentrant model
 31106 ;;
 31107                           
 31108                           	psect	text159
 31109  006716                     __ptext159:
 31110                           	opt stack 0
 31111  006716                     _LORAWAN_Init:
 31112                           	opt stack 17
 31113                           
 31114                           ; BSR set to: 0
 31115                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 31116                           
 31117                           ; BSR set to: 0
 31118                           ;incstack = 0
 31119  006716  0102               	movlb	2	; () banked
 31120  006718  51F0               	movf	(_loRa+240)& (0+255),w,b
 31121  00671A  E108               	bnz	l15518
 31122                           
 31123                           ; BSR set to: 2
 31124                           ;lorawan_eu.c: 127: {
 31125                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 31126  00671C  EC92  F034         	call	_CreateAllSoftwareTimers	;wreg free
 31127                           
 31128                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 31129  006720  ECC9  F02A         	call	_SetCallbackSoftwareTimers	;wreg free
 31130                           
 31131                           ; BSR set to: 0
 31132                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 31133  006724  0E01               	movlw	1
 31134  006726  0102               	movlb	2	; () banked
 31135  006728  6FF0               	movwf	(_loRa+240)& (0+255),b
 31136                           
 31137                           ;lorawan_eu.c: 131: }
 31138  00672A  D002               	goto	l15520
 31139  00672C                     l15518:
 31140                           
 31141                           ; BSR set to: 2
 31142                           ;lorawan_eu.c: 132: else
 31143                           ;lorawan_eu.c: 133: {
 31144                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 31145  00672C  EC09  F035         	call	_StopAllSoftwareTimers	;wreg free
 31146  006730                     l15520:
 31147                           
 31148                           ;lorawan_eu.c: 135: }
 31149                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 31150  006730  C0A6  F0E8         	movff	LORAWAN_Init@RxPayload,_rxPayload
 31151  006734  C0A7  F0E9         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 31152                           
 31153                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 31154  006738  C0A8  F0EA         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 31155  00673C  C0A9  F0EB         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 31156                           
 31157                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 31158  006740  0EFF               	movlw	low (_radioBuffer+16)
 31159  006742  0100               	movlb	0	; () banked
 31160  006744  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31161  006746  0E05               	movlw	high (_radioBuffer+16)
 31162  006748  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31163  00674A  0EA0               	movlw	160
 31164  00674C  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31165  00674E  0E27               	movlw	39
 31166  006750  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31167  006752  0EBE               	movlw	190
 31168  006754  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31169  006756  0E33               	movlw	51
 31170  006758  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31171  00675A  EC45  F01C         	call	_RADIO_Init	;wreg free
 31172                           
 31173                           ; BSR set to: 1
 31174                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 31175  00675E  EC5F  F02F         	call	_RADIO_ReadRandom	;wreg free
 31176  006762  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 31177  006766  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 31178  00676A  ECDB  F03B         	call	_srand	;wreg free
 31179                           
 31180                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 31181  00676E  0E00               	movlw	0
 31182  006770  EF4F  F01F         	goto	_LORAWAN_Reset
 31183  006774                     __end_of_LORAWAN_Init:
 31184                           	opt stack 0
 31185                           tosu	equ	0xFFF
 31186                           tosh	equ	0xFFE
 31187                           tosl	equ	0xFFD
 31188                           pclath	equ	0xFFA
 31189                           tblptru	equ	0xFF8
 31190                           tblptrh	equ	0xFF7
 31191                           tblptrl	equ	0xFF6
 31192                           tablat	equ	0xFF5
 31193                           prodh	equ	0xFF4
 31194                           prodl	equ	0xFF3
 31195                           intcon	equ	0xFF2
 31196                           intcon2	equ	0xFF1
 31197                           intcon3	equ	0xFF0
 31198                           indf0	equ	0xFEF
 31199                           postinc0	equ	0xFEE
 31200                           plusw0	equ	0xFEB
 31201                           fsr0h	equ	0xFEA
 31202                           fsr0l	equ	0xFE9
 31203                           wreg	equ	0xFE8
 31204                           postinc1	equ	0xFE6
 31205                           postdec1	equ	0xFE5
 31206                           plusw1	equ	0xFE3
 31207                           fsr1h	equ	0xFE2
 31208                           fsr1l	equ	0xFE1
 31209                           indf2	equ	0xFDF
 31210                           postinc2	equ	0xFDE
 31211                           postdec2	equ	0xFDD
 31212                           plusw2	equ	0xFDB
 31213                           fsr2h	equ	0xFDA
 31214                           fsr2l	equ	0xFD9
 31215                           status	equ	0xFD8
 31216                           
 31217 ;; *************** function _srand *****************
 31218 ;; Defined at:
 31219 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 31220 ;; Parameters:    Size  Location     Type
 31221 ;;  x               2   21[BANK0 ] unsigned int 
 31222 ;; Auto vars:     Size  Location     Type
 31223 ;;		None
 31224 ;; Return value:  Size  Location     Type
 31225 ;;                  1    wreg      void 
 31226 ;; Registers used:
 31227 ;;		status,2
 31228 ;; Tracked objects:
 31229 ;;		On entry : 0/1
 31230 ;;		On exit  : 0/0
 31231 ;;		Unchanged: 0/0
 31232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31236 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31237 ;;Total ram usage:        2 bytes
 31238 ;; Hardware stack levels used:    1
 31239 ;; Hardware stack levels required when called:    7
 31240 ;; This function calls:
 31241 ;;		Nothing
 31242 ;; This function is called by:
 31243 ;;		_LORAWAN_Init
 31244 ;; This function uses a non-reentrant model
 31245 ;;
 31246                           
 31247                           	psect	text160
 31248  0077B6                     __ptext160:
 31249                           	opt stack 0
 31250  0077B6                     _srand:
 31251                           	opt stack 22
 31252                           
 31253                           ;incstack = 0
 31254  0077B6  C075  F052         	movff	srand@x,_randx
 31255  0077BA  C076  F053         	movff	srand@x+1,_randx+1
 31256  0077BE  6A54               	clrf	_randx+2,c
 31257  0077C0  6A55               	clrf	_randx+3,c
 31258  0077C2  0012               	return		;funcret
 31259  0077C4                     __end_of_srand:
 31260                           	opt stack 0
 31261                           tosu	equ	0xFFF
 31262                           tosh	equ	0xFFE
 31263                           tosl	equ	0xFFD
 31264                           pclath	equ	0xFFA
 31265                           tblptru	equ	0xFF8
 31266                           tblptrh	equ	0xFF7
 31267                           tblptrl	equ	0xFF6
 31268                           tablat	equ	0xFF5
 31269                           prodh	equ	0xFF4
 31270                           prodl	equ	0xFF3
 31271                           intcon	equ	0xFF2
 31272                           intcon2	equ	0xFF1
 31273                           intcon3	equ	0xFF0
 31274                           indf0	equ	0xFEF
 31275                           postinc0	equ	0xFEE
 31276                           plusw0	equ	0xFEB
 31277                           fsr0h	equ	0xFEA
 31278                           fsr0l	equ	0xFE9
 31279                           wreg	equ	0xFE8
 31280                           postinc1	equ	0xFE6
 31281                           postdec1	equ	0xFE5
 31282                           plusw1	equ	0xFE3
 31283                           fsr1h	equ	0xFE2
 31284                           fsr1l	equ	0xFE1
 31285                           indf2	equ	0xFDF
 31286                           postinc2	equ	0xFDE
 31287                           postdec2	equ	0xFDD
 31288                           plusw2	equ	0xFDB
 31289                           fsr2h	equ	0xFDA
 31290                           fsr2l	equ	0xFD9
 31291                           status	equ	0xFD8
 31292                           
 31293 ;; *************** function _SetCallbackSoftwareTimers *****************
 31294 ;; Defined at:
 31295 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31296 ;; Parameters:    Size  Location     Type
 31297 ;;		None
 31298 ;; Auto vars:     Size  Location     Type
 31299 ;;		None
 31300 ;; Return value:  Size  Location     Type
 31301 ;;                  1    wreg      void 
 31302 ;; Registers used:
 31303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31304 ;; Tracked objects:
 31305 ;;		On entry : F/2
 31306 ;;		On exit  : F/0
 31307 ;;		Unchanged: 0/0
 31308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31313 ;;Total ram usage:        0 bytes
 31314 ;; Hardware stack levels used:    1
 31315 ;; Hardware stack levels required when called:    8
 31316 ;; This function calls:
 31317 ;;		_SwTimerSetCallback
 31318 ;; This function is called by:
 31319 ;;		_LORAWAN_Init
 31320 ;; This function uses a non-reentrant model
 31321 ;;
 31322                           
 31323                           	psect	text161
 31324  005592                     __ptext161:
 31325                           	opt stack 0
 31326  005592                     _SetCallbackSoftwareTimers:
 31327                           	opt stack 21
 31328                           
 31329                           ; BSR set to: 2
 31330                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 31331                           
 31332                           ;incstack = 0
 31333  005592  0E48               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31334  005594  0100               	movlb	0	; () banked
 31335  005596  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31336  005598  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31337  00559A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31338  00559C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31339  00559E  0102               	movlb	2	; () banked
 31340  0055A0  51E2               	movf	(_loRa+226)& (0+255),w,b
 31341  0055A2  EC56  F038         	call	_SwTimerSetCallback
 31342                           
 31343                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 31344  0055A6  0E52               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31345  0055A8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31346  0055AA  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31347  0055AC  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31348  0055AE  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31349  0055B0  0102               	movlb	2	; () banked
 31350  0055B2  51E3               	movf	(_loRa+227)& (0+255),w,b
 31351  0055B4  EC56  F038         	call	_SwTimerSetCallback
 31352                           
 31353                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 31354  0055B8  0EFC               	movlw	low _LORAWAN_LinkCheckCallback
 31355  0055BA  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31356  0055BC  0E3F               	movlw	high _LORAWAN_LinkCheckCallback
 31357  0055BE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31358  0055C0  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31359  0055C2  0102               	movlb	2	; () banked
 31360  0055C4  51E7               	movf	(_loRa+231)& (0+255),w,b
 31361  0055C6  EC56  F038         	call	_SwTimerSetCallback
 31362                           
 31363                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 31364  0055CA  0E48               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31365  0055CC  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31366  0055CE  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31367  0055D0  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31368  0055D2  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31369  0055D4  0102               	movlb	2	; () banked
 31370  0055D6  51E4               	movf	(_loRa+228)& (0+255),w,b
 31371  0055D8  EC56  F038         	call	_SwTimerSetCallback
 31372                           
 31373                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31374  0055DC  0E52               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31375  0055DE  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31376  0055E0  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31377  0055E2  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31378  0055E4  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31379  0055E6  0102               	movlb	2	; () banked
 31380  0055E8  51E5               	movf	(_loRa+229)& (0+255),w,b
 31381  0055EA  EC56  F038         	call	_SwTimerSetCallback
 31382                           
 31383                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31384  0055EE  0E7A               	movlw	low _AckRetransmissionCallback
 31385  0055F0  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31386  0055F2  0E4A               	movlw	high _AckRetransmissionCallback
 31387  0055F4  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31388  0055F6  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31389  0055F8  0102               	movlb	2	; () banked
 31390  0055FA  51E8               	movf	(_loRa+232)& (0+255),w,b
 31391  0055FC  EC56  F038         	call	_SwTimerSetCallback
 31392                           
 31393                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31394  005600  0E84               	movlw	low _AutomaticReplyCallback
 31395  005602  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31396  005604  0E74               	movlw	high _AutomaticReplyCallback
 31397  005606  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31398  005608  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31399  00560A  0102               	movlb	2	; () banked
 31400  00560C  51E6               	movf	(_loRa+230)& (0+255),w,b
 31401  00560E  EC56  F038         	call	_SwTimerSetCallback
 31402                           
 31403                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31404  005612  0ED2               	movlw	low _UnconfirmedTransmissionCallback
 31405  005614  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31406  005616  0E62               	movlw	high _UnconfirmedTransmissionCallback
 31407  005618  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31408  00561A  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31409  00561C  0102               	movlb	2	; () banked
 31410  00561E  51EA               	movf	(_loRa+234)& (0+255),w,b
 31411  005620  EC56  F038         	call	_SwTimerSetCallback
 31412                           
 31413                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31414  005624  0E24               	movlw	low _UpdateJoinSuccessState
 31415  005626  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31416  005628  0E45               	movlw	high _UpdateJoinSuccessState
 31417  00562A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31418  00562C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31419  00562E  0102               	movlb	2	; () banked
 31420  005630  51F3               	movf	(_loRa+243)& (0+255),w,b
 31421  005632  EC56  F038         	call	_SwTimerSetCallback
 31422                           
 31423                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 31424  005636  0E20               	movlw	low _DutyCycleCallback
 31425  005638  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31426  00563A  0E21               	movlw	high _DutyCycleCallback
 31427  00563C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31428  00563E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31429  005640  0102               	movlb	2	; () banked
 31430  005642  51E9               	movf	(_loRa+233)& (0+255),w,b
 31431  005644  EF56  F038         	goto	_SwTimerSetCallback
 31432  005648                     __end_of_SetCallbackSoftwareTimers:
 31433                           	opt stack 0
 31434                           tosu	equ	0xFFF
 31435                           tosh	equ	0xFFE
 31436                           tosl	equ	0xFFD
 31437                           pclath	equ	0xFFA
 31438                           tblptru	equ	0xFF8
 31439                           tblptrh	equ	0xFF7
 31440                           tblptrl	equ	0xFF6
 31441                           tablat	equ	0xFF5
 31442                           prodh	equ	0xFF4
 31443                           prodl	equ	0xFF3
 31444                           intcon	equ	0xFF2
 31445                           intcon2	equ	0xFF1
 31446                           intcon3	equ	0xFF0
 31447                           indf0	equ	0xFEF
 31448                           postinc0	equ	0xFEE
 31449                           plusw0	equ	0xFEB
 31450                           fsr0h	equ	0xFEA
 31451                           fsr0l	equ	0xFE9
 31452                           wreg	equ	0xFE8
 31453                           postinc1	equ	0xFE6
 31454                           postdec1	equ	0xFE5
 31455                           plusw1	equ	0xFE3
 31456                           fsr1h	equ	0xFE2
 31457                           fsr1l	equ	0xFE1
 31458                           indf2	equ	0xFDF
 31459                           postinc2	equ	0xFDE
 31460                           postdec2	equ	0xFDD
 31461                           plusw2	equ	0xFDB
 31462                           fsr2h	equ	0xFDA
 31463                           fsr2l	equ	0xFD9
 31464                           status	equ	0xFD8
 31465                           
 31466 ;; *************** function _RADIO_ReadRandom *****************
 31467 ;; Defined at:
 31468 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31469 ;; Parameters:    Size  Location     Type
 31470 ;;		None
 31471 ;; Auto vars:     Size  Location     Type
 31472 ;;  retVal          2   18[BANK0 ] unsigned int 
 31473 ;;  i               1   20[BANK0 ] unsigned char 
 31474 ;; Return value:  Size  Location     Type
 31475 ;;                  2   16[BANK0 ] unsigned int 
 31476 ;; Registers used:
 31477 ;;		wreg, status,2, status,0, cstack
 31478 ;; Tracked objects:
 31479 ;;		On entry : F/1
 31480 ;;		On exit  : 0/0
 31481 ;;		Unchanged: 0/0
 31482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31484 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31486 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31487 ;;Total ram usage:        5 bytes
 31488 ;; Hardware stack levels used:    1
 31489 ;; Hardware stack levels required when called:   11
 31490 ;; This function calls:
 31491 ;;		_RADIO_RegisterRead
 31492 ;;		_RADIO_RegisterWrite
 31493 ;;		_RADIO_WriteMode
 31494 ;;		_SystemBlockingWaitMs
 31495 ;; This function is called by:
 31496 ;;		_LORAWAN_Init
 31497 ;; This function uses a non-reentrant model
 31498 ;;
 31499                           
 31500                           	psect	text162
 31501  005EBE                     __ptext162:
 31502                           	opt stack 0
 31503  005EBE                     _RADIO_ReadRandom:
 31504                           	opt stack 18
 31505                           
 31506                           ; BSR set to: 1
 31507                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 31508                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 31509                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 31510                           
 31511                           ; BSR set to: 0
 31512                           ;incstack = 0
 31513  005EBE  0100               	movlb	0	; () banked
 31514  005EC0  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 31515  005EC2  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31516                           
 31517                           ; BSR set to: 0
 31518                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31519  005EC4  0E01               	movlw	1
 31520  005EC6  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31521  005EC8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31522  005ECA  0E00               	movlw	0
 31523  005ECC  EC6E  F028         	call	_RADIO_WriteMode
 31524                           
 31525                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 31526  005ED0  0100               	movlb	0	; () banked
 31527  005ED2  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31528  005ED4  0E11               	movlw	17
 31529  005ED6  EC6F  F03A         	call	_RADIO_RegisterWrite
 31530                           
 31531                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31532  005EDA  0E01               	movlw	1
 31533  005EDC  0100               	movlb	0	; () banked
 31534  005EDE  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31535  005EE0  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31536  005EE2  0E05               	movlw	5
 31537  005EE4  EC6E  F028         	call	_RADIO_WriteMode
 31538                           
 31539                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 31540  005EE8  0100               	movlb	0	; () banked
 31541  005EEA  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 31542  005EEC                     l15316:
 31543                           
 31544                           ; BSR set to: 0
 31545                           ;radio_driver_SX1276.c: 1377: {
 31546                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 31547  005EEC  0E01               	movlw	1
 31548  005EEE  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31549  005EF0  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31550  005EF2  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31551  005EF4  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31552  005EF6  EC0C  F039         	call	_SystemBlockingWaitMs	;wreg free
 31553                           
 31554                           ; BSR set to: 0
 31555                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 31556  005EFA  90D8               	bcf	status,0,c
 31557  005EFC  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31558  005EFE  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31559                           
 31560                           ; BSR set to: 0
 31561                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31562  005F00  0E2C               	movlw	44
 31563  005F02  EC98  F039         	call	_RADIO_RegisterRead
 31564  005F06  0B01               	andlw	1
 31565  005F08  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31566  005F0A  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31567                           
 31568                           ; BSR set to: 0
 31569  005F0C  0E0F               	movlw	15
 31570  005F0E  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31571  005F10  D7ED               	goto	l15316
 31572                           
 31573                           ; BSR set to: 0
 31574                           ;radio_driver_SX1276.c: 1381: }
 31575                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31576  005F12  0E01               	movlw	1
 31577  005F14  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31578  005F16  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31579  005F18  0E00               	movlw	0
 31580  005F1A  EC6E  F028         	call	_RADIO_WriteMode
 31581                           
 31582                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 31583  005F1E  0100               	movlb	0	; () banked
 31584  005F20  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31585  005F22  0E12               	movlw	18
 31586  005F24  EC6F  F03A         	call	_RADIO_RegisterWrite
 31587                           
 31588                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 31589  005F28  0100               	movlb	0	; () banked
 31590  005F2A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 31591  005F2C  0E11               	movlw	17
 31592  005F2E  EC6F  F03A         	call	_RADIO_RegisterWrite
 31593                           
 31594                           ;radio_driver_SX1276.c: 1389: return retVal;
 31595  005F32  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31596  005F36  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31597  005F3A  0012               	return		;funcret
 31598  005F3C                     __end_of_RADIO_ReadRandom:
 31599                           	opt stack 0
 31600                           tosu	equ	0xFFF
 31601                           tosh	equ	0xFFE
 31602                           tosl	equ	0xFFD
 31603                           pclath	equ	0xFFA
 31604                           tblptru	equ	0xFF8
 31605                           tblptrh	equ	0xFF7
 31606                           tblptrl	equ	0xFF6
 31607                           tablat	equ	0xFF5
 31608                           prodh	equ	0xFF4
 31609                           prodl	equ	0xFF3
 31610                           intcon	equ	0xFF2
 31611                           intcon2	equ	0xFF1
 31612                           intcon3	equ	0xFF0
 31613                           indf0	equ	0xFEF
 31614                           postinc0	equ	0xFEE
 31615                           plusw0	equ	0xFEB
 31616                           fsr0h	equ	0xFEA
 31617                           fsr0l	equ	0xFE9
 31618                           wreg	equ	0xFE8
 31619                           postinc1	equ	0xFE6
 31620                           postdec1	equ	0xFE5
 31621                           plusw1	equ	0xFE3
 31622                           fsr1h	equ	0xFE2
 31623                           fsr1l	equ	0xFE1
 31624                           indf2	equ	0xFDF
 31625                           postinc2	equ	0xFDE
 31626                           postdec2	equ	0xFDD
 31627                           plusw2	equ	0xFDB
 31628                           fsr2h	equ	0xFDA
 31629                           fsr2l	equ	0xFD9
 31630                           status	equ	0xFD8
 31631                           
 31632 ;; *************** function _LORAWAN_Reset *****************
 31633 ;; Defined at:
 31634 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31635 ;; Parameters:    Size  Location     Type
 31636 ;;  ismBandNew      1    wreg     enum E8047
 31637 ;; Auto vars:     Size  Location     Type
 31638 ;;  ismBandNew      1   69[BANK0 ] enum E8047
 31639 ;; Return value:  Size  Location     Type
 31640 ;;                  1    wreg      void 
 31641 ;; Registers used:
 31642 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31643 ;; Tracked objects:
 31644 ;;		On entry : 0/1
 31645 ;;		On exit  : D/0
 31646 ;;		Unchanged: 0/0
 31647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31652 ;;Total ram usage:        1 bytes
 31653 ;; Hardware stack levels used:    1
 31654 ;; Hardware stack levels required when called:   12
 31655 ;; This function calls:
 31656 ;;		_InitDefault433Channels
 31657 ;;		_InitDefault868Channels
 31658 ;;		_LORAWAN_LinkCheckConfigure
 31659 ;;		_RADIO_Init
 31660 ;;		_RADIO_SetLoRaSyncWord
 31661 ;;		_StopAllSoftwareTimers
 31662 ;;		_UpdateMinMaxChDataRate
 31663 ;;		_memset
 31664 ;; This function is called by:
 31665 ;;		_LORAWAN_Init
 31666 ;; This function uses a non-reentrant model
 31667 ;;
 31668                           
 31669                           	psect	text163
 31670  003E9E                     __ptext163:
 31671                           	opt stack 0
 31672  003E9E                     _LORAWAN_Reset:
 31673                           	opt stack 17
 31674                           
 31675                           ;incstack = 0
 31676                           ;LORAWAN_Reset@ismBandNew stored from wreg
 31677  003E9E  0100               	movlb	0	; () banked
 31678  003EA0  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 31679                           
 31680                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 31681  003EA2  0102               	movlb	2	; () banked
 31682  003EA4  05F0               	decf	(_loRa+240)& (0+255),w,b
 31683  003EA6  E102               	bnz	l15336
 31684                           
 31685                           ; BSR set to: 2
 31686                           ;lorawan_eu.c: 151: {
 31687                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 31688  003EA8  EC09  F035         	call	_StopAllSoftwareTimers	;wreg free
 31689  003EAC                     l15336:
 31690                           
 31691                           ;lorawan_eu.c: 153: }
 31692                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 31693  003EAC  0E34               	movlw	52
 31694  003EAE  0102               	movlb	2	; () banked
 31695  003EB0  6FF4               	movwf	(_loRa+244)& (0+255),b
 31696                           
 31697                           ; BSR set to: 2
 31698                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31699  003EB2  51F4               	movf	(_loRa+244)& (0+255),w,b
 31700  003EB4  EC48  F03C         	call	_RADIO_SetLoRaSyncWord
 31701                           
 31702                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 31703  003EB8  0102               	movlb	2	; () banked
 31704  003EBA  6B02               	clrf	(_loRa+2)& (0+255),b
 31705  003EBC  6B03               	clrf	(_loRa+3)& (0+255),b
 31706  003EBE  6B04               	clrf	(_loRa+4)& (0+255),b
 31707  003EC0  6B05               	clrf	(_loRa+5)& (0+255),b
 31708                           
 31709                           ; BSR set to: 2
 31710                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 31711  003EC2  69DD               	setf	(_loRa+221)& (0+255),b
 31712                           
 31713                           ; BSR set to: 2
 31714                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 31715  003EC4  6BDE               	clrf	(_loRa+222)& (0+255),b
 31716                           
 31717                           ; BSR set to: 2
 31718                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 31719  003EC6  6BC8               	clrf	(_loRa+200)& (0+255),b
 31720  003EC8  6BC9               	clrf	(_loRa+201)& (0+255),b
 31721  003ECA  6BCA               	clrf	(_loRa+202)& (0+255),b
 31722  003ECC  6BCB               	clrf	(_loRa+203)& (0+255),b
 31723                           
 31724                           ; BSR set to: 2
 31725                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 31726  003ECE  6BD4               	clrf	(_loRa+212)& (0+255),b
 31727  003ED0  6BD5               	clrf	(_loRa+213)& (0+255),b
 31728                           
 31729                           ; BSR set to: 2
 31730                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 31731  003ED2  6B0A               	clrf	(_loRa+10)& (0+255),b
 31732  003ED4  6B0B               	clrf	(_loRa+11)& (0+255),b
 31733  003ED6  6B0C               	clrf	(_loRa+12)& (0+255),b
 31734  003ED8  6B0D               	clrf	(_loRa+13)& (0+255),b
 31735                           
 31736                           ; BSR set to: 2
 31737                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 31738  003EDA  6B06               	clrf	(_loRa+6)& (0+255),b
 31739  003EDC  6B07               	clrf	(_loRa+7)& (0+255),b
 31740  003EDE  6B08               	clrf	(_loRa+8)& (0+255),b
 31741  003EE0  6B09               	clrf	(_loRa+9)& (0+255),b
 31742                           
 31743                           ; BSR set to: 2
 31744                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 31745  003EE2  6BD2               	clrf	(_loRa+210)& (0+255),b
 31746  003EE4  6BD3               	clrf	(_loRa+211)& (0+255),b
 31747                           
 31748                           ; BSR set to: 2
 31749                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 31750  003EE6  6BDC               	clrf	(_loRa+220)& (0+255),b
 31751  003EE8  0E01               	movlw	1
 31752  003EEA  6FDB               	movwf	(_loRa+219)& (0+255),b
 31753                           
 31754                           ; BSR set to: 2
 31755                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 31756  003EEC  6BD0               	clrf	(_loRa+208)& (0+255),b
 31757  003EEE  6BD1               	clrf	(_loRa+209)& (0+255),b
 31758                           
 31759                           ; BSR set to: 2
 31760                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 31761  003EF0  6BEE               	clrf	(_loRa+238)& (0+255),b
 31762                           
 31763                           ; BSR set to: 2
 31764                           ;lorawan_eu.c: 169: loRa.offset = 0;
 31765  003EF2  6BEF               	clrf	(_loRa+239)& (0+255),b
 31766                           
 31767                           ; BSR set to: 2
 31768                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 31769  003EF4  6BC8               	clrf	(_loRa+200)& (0+255),b
 31770  003EF6  6BC9               	clrf	(_loRa+201)& (0+255),b
 31771  003EF8  6BCA               	clrf	(_loRa+202)& (0+255),b
 31772  003EFA  6BCB               	clrf	(_loRa+203)& (0+255),b
 31773                           
 31774                           ; BSR set to: 2
 31775                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 31776  003EFC  9503               	bcf	(_loRa+3)& (0+255),2,b
 31777                           
 31778                           ; BSR set to: 2
 31779                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 31780  003EFE  6B02               	clrf	(_loRa+2)& (0+255),b
 31781  003F00  6B03               	clrf	(_loRa+3)& (0+255),b
 31782  003F02  6B04               	clrf	(_loRa+4)& (0+255),b
 31783  003F04  6B05               	clrf	(_loRa+5)& (0+255),b
 31784                           
 31785                           ; BSR set to: 2
 31786                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 31787  003F06  6B00               	clrf	_loRa& (0+255),b
 31788  003F08  6B01               	clrf	(_loRa+1)& (0+255),b
 31789                           
 31790                           ; BSR set to: 2
 31791                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 31792  003F0A  0E07               	movlw	7
 31793  003F0C  6FD7               	movwf	(_loRa+215)& (0+255),b
 31794                           
 31795                           ; BSR set to: 2
 31796                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31797  003F0E  6BD6               	clrf	(_loRa+214)& (0+255),b
 31798                           
 31799                           ; BSR set to: 2
 31800                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 31801  003F10  0E01               	movlw	1
 31802  003F12  6FD9               	movwf	(_loRa+217)& (0+255),b
 31803                           
 31804                           ; BSR set to: 2
 31805                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31806  003F14  6FD8               	movwf	(_loRa+216)& (0+255),b
 31807                           
 31808                           ; BSR set to: 2
 31809                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 31810  003F16  69E0               	setf	(_loRa+224)& (0+255),b
 31811                           
 31812                           ; BSR set to: 2
 31813                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 31814  003F18  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 31815                           
 31816                           ; BSR set to: 2
 31817                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 31818  003F1C  6B12               	clrf	(_loRa+18)& (0+255),b
 31819                           
 31820                           ; BSR set to: 2
 31821                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 31822  003F1E  0E10               	movlw	16
 31823  003F20  6FED               	movwf	(_loRa+237)& (0+255),b
 31824                           
 31825                           ; BSR set to: 2
 31826                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 31827  003F22  0100               	movlb	0	; () banked
 31828  003F24  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 31829  003F26  E11A               	bnz	l15398
 31830                           
 31831                           ; BSR set to: 0
 31832                           ;lorawan_eu.c: 193: {
 31833                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 31834  003F28  0EFF               	movlw	low (_radioBuffer+16)
 31835  003F2A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31836  003F2C  0E05               	movlw	high (_radioBuffer+16)
 31837  003F2E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31838  003F30  0EA0               	movlw	160
 31839  003F32  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31840  003F34  0E27               	movlw	39
 31841  003F36  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31842  003F38  0EBE               	movlw	190
 31843  003F3A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31844  003F3C  0E33               	movlw	51
 31845  003F3E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31846  003F40  EC45  F01C         	call	_RADIO_Init	;wreg free
 31847                           
 31848                           ; BSR set to: 1
 31849                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 31850  003F44  ECCF  F031         	call	_InitDefault868Channels	;wreg free
 31851                           
 31852                           ; BSR set to: 0
 31853                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 31854  003F48  0102               	movlb	2	; () banked
 31855  003F4A  6B1C               	clrf	(_loRa+28)& (0+255),b
 31856                           
 31857                           ; BSR set to: 2
 31858                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 31859  003F4C  0E08               	movlw	8
 31860  003F4E  6F18               	movwf	(_loRa+24)& (0+255),b
 31861  003F50  0EE6               	movlw	230
 31862  003F52  6F19               	movwf	(_loRa+25)& (0+255),b
 31863  003F54  0ED3               	movlw	211
 31864  003F56  6F1A               	movwf	(_loRa+26)& (0+255),b
 31865  003F58  0E33               	movlw	51
 31866  003F5A  D019               	goto	L20
 31867  003F5C                     l15398:
 31868                           
 31869                           ; BSR set to: 0
 31870                           ;lorawan_eu.c: 201: else
 31871                           ;lorawan_eu.c: 202: {
 31872                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 31873  003F5C  0EFF               	movlw	low (_radioBuffer+16)
 31874  003F5E  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31875  003F60  0E05               	movlw	high (_radioBuffer+16)
 31876  003F62  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31877  003F64  0E20               	movlw	32
 31878  003F66  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31879  003F68  0EA2               	movlw	162
 31880  003F6A  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31881  003F6C  0ED3               	movlw	211
 31882  003F6E  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31883  003F70  0E19               	movlw	25
 31884  003F72  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31885  003F74  EC45  F01C         	call	_RADIO_Init	;wreg free
 31886                           
 31887                           ; BSR set to: 1
 31888                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 31889  003F78  EC02  F032         	call	_InitDefault433Channels	;wreg free
 31890                           
 31891                           ; BSR set to: 0
 31892                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 31893  003F7C  0102               	movlb	2	; () banked
 31894  003F7E  6B1C               	clrf	(_loRa+28)& (0+255),b
 31895                           
 31896                           ; BSR set to: 2
 31897                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 31898  003F80  0E28               	movlw	40
 31899  003F82  6F18               	movwf	(_loRa+24)& (0+255),b
 31900  003F84  0E76               	movlw	118
 31901  003F86  6F19               	movwf	(_loRa+25)& (0+255),b
 31902  003F88  0EE8               	movlw	232
 31903  003F8A  6F1A               	movwf	(_loRa+26)& (0+255),b
 31904  003F8C  0E19               	movlw	25
 31905  003F8E                     L20:
 31906  003F8E  6F1B               	movwf	(_loRa+27)& (0+255),b
 31907                           
 31908                           ; BSR set to: 2
 31909                           ;lorawan_eu.c: 209: }
 31910                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 31911  003F90  0E01               	movlw	1
 31912  003F92  6FE1               	movwf	(_loRa+225)& (0+255),b
 31913                           
 31914                           ; BSR set to: 2
 31915                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 31916  003F94  6BDF               	clrf	(_loRa+223)& (0+255),b
 31917                           
 31918                           ; BSR set to: 2
 31919                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 31920  003F96  EC7E  F02B         	call	_UpdateMinMaxChDataRate	;wreg free
 31921                           
 31922                           ; BSR set to: 0
 31923                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 31924  003F9A  0102               	movlb	2	; () banked
 31925  003F9C  6BA5               	clrf	(_loRa+165)& (0+255),b
 31926  003F9E  6BA6               	clrf	(_loRa+166)& (0+255),b
 31927                           
 31928                           ; BSR set to: 2
 31929                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 31930  003FA0  0E1D               	movlw	low (_loRa+29)
 31931  003FA2  0100               	movlb	0	; () banked
 31932  003FA4  6F64               	movwf	memset@p1& (0+255),b
 31933  003FA6  0E02               	movlw	high (_loRa+29)
 31934  003FA8  6F65               	movwf	(memset@p1+1)& (0+255),b
 31935  003FAA  6B67               	clrf	(memset@c+1)& (0+255),b
 31936  003FAC  6B66               	clrf	memset@c& (0+255),b
 31937  003FAE  6B69               	clrf	(memset@n+1)& (0+255),b
 31938  003FB0  0E69               	movlw	105
 31939  003FB2  6F68               	movwf	memset@n& (0+255),b
 31940  003FB4  EC21  F039         	call	_memset	;wreg free
 31941                           
 31942                           ; BSR set to: 0
 31943                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 31944  003FB8  0E03               	movlw	3
 31945  003FBA  0102               	movlb	2	; () banked
 31946  003FBC  6F95               	movwf	(_loRa+149)& (0+255),b
 31947  003FBE  0EE8               	movlw	232
 31948  003FC0  6F94               	movwf	(_loRa+148)& (0+255),b
 31949                           
 31950                           ; BSR set to: 2
 31951                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 31952  003FC2  0E07               	movlw	7
 31953  003FC4  6F97               	movwf	(_loRa+151)& (0+255),b
 31954  003FC6  0ED0               	movlw	208
 31955  003FC8  6F96               	movwf	(_loRa+150)& (0+255),b
 31956                           
 31957                           ; BSR set to: 2
 31958                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 31959  003FCA  0E13               	movlw	19
 31960  003FCC  6F99               	movwf	(_loRa+153)& (0+255),b
 31961  003FCE  0E88               	movlw	136
 31962  003FD0  6F98               	movwf	(_loRa+152)& (0+255),b
 31963                           
 31964                           ; BSR set to: 2
 31965                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 31966  003FD2  0E17               	movlw	23
 31967  003FD4  6F9B               	movwf	(_loRa+155)& (0+255),b
 31968  003FD6  0E70               	movlw	112
 31969  003FD8  6F9A               	movwf	(_loRa+154)& (0+255),b
 31970                           
 31971                           ; BSR set to: 2
 31972                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 31973  003FDA  0E07               	movlw	7
 31974  003FDC  6FA1               	movwf	(_loRa+161)& (0+255),b
 31975  003FDE  0ED0               	movlw	208
 31976  003FE0  6FA0               	movwf	(_loRa+160)& (0+255),b
 31977                           
 31978                           ; BSR set to: 2
 31979                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 31980  003FE2  0E20               	movlw	32
 31981  003FE4  6FA3               	movwf	(_loRa+163)& (0+255),b
 31982                           
 31983                           ; BSR set to: 2
 31984                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 31985  003FE6  0E40               	movlw	64
 31986  003FE8  6FA2               	movwf	(_loRa+162)& (0+255),b
 31987                           
 31988                           ; BSR set to: 2
 31989                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 31990  003FEA  6F9D               	movwf	(_loRa+157)& (0+255),b
 31991  003FEC  6B9C               	clrf	(_loRa+156)& (0+255),b
 31992                           
 31993                           ; BSR set to: 2
 31994                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 31995  003FEE  6F9F               	movwf	(_loRa+159)& (0+255),b
 31996  003FF0  6B9E               	clrf	(_loRa+158)& (0+255),b
 31997                           
 31998                           ; BSR set to: 2
 31999                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 32000  003FF2  0100               	movlb	0	; () banked
 32001  003FF4  6B97               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 32002  003FF6  6B96               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 32003  003FF8  EF77  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 32004  003FFC                     __end_of_LORAWAN_Reset:
 32005                           	opt stack 0
 32006                           tosu	equ	0xFFF
 32007                           tosh	equ	0xFFE
 32008                           tosl	equ	0xFFD
 32009                           pclath	equ	0xFFA
 32010                           tblptru	equ	0xFF8
 32011                           tblptrh	equ	0xFF7
 32012                           tblptrl	equ	0xFF6
 32013                           tablat	equ	0xFF5
 32014                           prodh	equ	0xFF4
 32015                           prodl	equ	0xFF3
 32016                           intcon	equ	0xFF2
 32017                           intcon2	equ	0xFF1
 32018                           intcon3	equ	0xFF0
 32019                           indf0	equ	0xFEF
 32020                           postinc0	equ	0xFEE
 32021                           plusw0	equ	0xFEB
 32022                           fsr0h	equ	0xFEA
 32023                           fsr0l	equ	0xFE9
 32024                           wreg	equ	0xFE8
 32025                           postinc1	equ	0xFE6
 32026                           postdec1	equ	0xFE5
 32027                           plusw1	equ	0xFE3
 32028                           fsr1h	equ	0xFE2
 32029                           fsr1l	equ	0xFE1
 32030                           indf2	equ	0xFDF
 32031                           postinc2	equ	0xFDE
 32032                           postdec2	equ	0xFDD
 32033                           plusw2	equ	0xFDB
 32034                           fsr2h	equ	0xFDA
 32035                           fsr2l	equ	0xFD9
 32036                           status	equ	0xFD8
 32037                           
 32038 ;; *************** function _UpdateMinMaxChDataRate *****************
 32039 ;; Defined at:
 32040 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32041 ;; Parameters:    Size  Location     Type
 32042 ;;		None
 32043 ;; Auto vars:     Size  Location     Type
 32044 ;;  i               1    5[BANK0 ] unsigned char 
 32045 ;; Return value:  Size  Location     Type
 32046 ;;                  1    wreg      void 
 32047 ;; Registers used:
 32048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32049 ;; Tracked objects:
 32050 ;;		On entry : F/2
 32051 ;;		On exit  : F/0
 32052 ;;		Unchanged: 0/0
 32053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32057 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32058 ;;Total ram usage:        2 bytes
 32059 ;; Hardware stack levels used:    1
 32060 ;; Hardware stack levels required when called:    7
 32061 ;; This function calls:
 32062 ;;		Nothing
 32063 ;; This function is called by:
 32064 ;;		_LORAWAN_Reset
 32065 ;; This function uses a non-reentrant model
 32066 ;;
 32067                           
 32068                           	psect	text164
 32069  0056FC                     __ptext164:
 32070                           	opt stack 0
 32071  0056FC                     _UpdateMinMaxChDataRate:
 32072                           	opt stack 21
 32073                           
 32074                           ; BSR set to: 2
 32075                           ;lorawan.c: 1065: uint8_t i;
 32076                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 32077                           
 32078                           ;incstack = 0
 32079  0056FC  0E07               	movlw	7
 32080  0056FE  6FEB               	movwf	(_loRa+235)& (0+255),b
 32081                           
 32082                           ; BSR set to: 2
 32083                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 32084  005700  6BEC               	clrf	(_loRa+236)& (0+255),b
 32085                           
 32086                           ; BSR set to: 2
 32087                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 32088  005702  0100               	movlb	0	; () banked
 32089  005704  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 32090  005706  D04E               	goto	l10956
 32091  005708                     l10944:
 32092                           
 32093                           ; BSR set to: 0
 32094                           ;lorawan.c: 1072: {
 32095                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 32096  005708  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32097  00570A  0D0E               	mullw	14
 32098  00570C  0E05               	movlw	low (_Channels+5)
 32099  00570E  24F3               	addwf	prodl,w,c
 32100  005710  6ED9               	movwf	fsr2l,c
 32101  005712  0E04               	movlw	high (_Channels+5)
 32102  005714  20F4               	addwfc	prodh,w,c
 32103  005716  6EDA               	movwf	fsr2h,c
 32104  005718  50DF               	movf	223,w,c
 32105  00571A  0B0F               	andlw	15
 32106  00571C  0100               	movlb	0	; () banked
 32107  00571E  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 32108  005720  0102               	movlb	2	; () banked
 32109  005722  51EB               	movf	(_loRa+235)& (0+255),w,b
 32110  005724  0100               	movlb	0	; () banked
 32111  005726  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 32112  005728  E216               	bc	l2095
 32113                           
 32114                           ; BSR set to: 0
 32115  00572A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32116  00572C  0D0E               	mullw	14
 32117  00572E  0E04               	movlw	low (_Channels+4)
 32118  005730  24F3               	addwf	prodl,w,c
 32119  005732  6ED9               	movwf	fsr2l,c
 32120  005734  0E04               	movlw	high (_Channels+4)
 32121  005736  20F4               	addwfc	prodh,w,c
 32122  005738  6EDA               	movwf	fsr2h,c
 32123  00573A  04DE               	decf	postinc2,w,c
 32124  00573C  E10C               	bnz	l2095
 32125                           
 32126                           ; BSR set to: 0
 32127                           ;lorawan.c: 1074: {
 32128                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 32129  00573E  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32130  005740  0D0E               	mullw	14
 32131  005742  0E05               	movlw	low (_Channels+5)
 32132  005744  24F3               	addwf	prodl,w,c
 32133  005746  6ED9               	movwf	fsr2l,c
 32134  005748  0E04               	movlw	high (_Channels+5)
 32135  00574A  20F4               	addwfc	prodh,w,c
 32136  00574C  6EDA               	movwf	fsr2h,c
 32137  00574E  50DF               	movf	223,w,c
 32138  005750  0B0F               	andlw	15
 32139  005752  0102               	movlb	2	; () banked
 32140  005754  6FEB               	movwf	(_loRa+235)& (0+255),b
 32141  005756                     l2095:
 32142                           
 32143                           ;lorawan.c: 1076: }
 32144                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 32145  005756  0100               	movlb	0	; () banked
 32146  005758  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32147  00575A  0D0E               	mullw	14
 32148  00575C  0E05               	movlw	low (_Channels+5)
 32149  00575E  24F3               	addwf	prodl,w,c
 32150  005760  6ED9               	movwf	fsr2l,c
 32151  005762  0E04               	movlw	high (_Channels+5)
 32152  005764  20F4               	addwfc	prodh,w,c
 32153  005766  6EDA               	movwf	fsr2h,c
 32154  005768  38DF               	swapf	223,w,c
 32155  00576A  0B0F               	andlw	15
 32156  00576C  0102               	movlb	2	; () banked
 32157  00576E  61EC               	cpfslt	(_loRa+236)& (0+255),b
 32158  005770  D017               	goto	l10954
 32159                           
 32160                           ; BSR set to: 2
 32161  005772  0100               	movlb	0	; () banked
 32162  005774  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32163  005776  0D0E               	mullw	14
 32164  005778  0E04               	movlw	low (_Channels+4)
 32165  00577A  24F3               	addwf	prodl,w,c
 32166  00577C  6ED9               	movwf	fsr2l,c
 32167  00577E  0E04               	movlw	high (_Channels+4)
 32168  005780  20F4               	addwfc	prodh,w,c
 32169  005782  6EDA               	movwf	fsr2h,c
 32170  005784  04DE               	decf	postinc2,w,c
 32171  005786  E10C               	bnz	l10954
 32172                           
 32173                           ; BSR set to: 0
 32174                           ;lorawan.c: 1078: {
 32175                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 32176  005788  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32177  00578A  0D0E               	mullw	14
 32178  00578C  0E05               	movlw	low (_Channels+5)
 32179  00578E  24F3               	addwf	prodl,w,c
 32180  005790  6ED9               	movwf	fsr2l,c
 32181  005792  0E04               	movlw	high (_Channels+5)
 32182  005794  20F4               	addwfc	prodh,w,c
 32183  005796  6EDA               	movwf	fsr2h,c
 32184  005798  38DF               	swapf	223,w,c
 32185  00579A  0B0F               	andlw	15
 32186  00579C  0102               	movlb	2	; () banked
 32187  00579E  6FEC               	movwf	(_loRa+236)& (0+255),b
 32188  0057A0                     l10954:
 32189  0057A0  0100               	movlb	0	; () banked
 32190  0057A2  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 32191  0057A4                     l10956:
 32192                           
 32193                           ; BSR set to: 0
 32194  0057A4  0102               	movlb	2	; () banked
 32195  0057A6  51ED               	movf	(_loRa+237)& (0+255),w,b
 32196  0057A8  0100               	movlb	0	; () banked
 32197  0057AA  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32198  0057AC  E3AD               	bnc	l10944
 32199                           
 32200                           ; BSR set to: 0
 32201  0057AE  0012               	return		;funcret
 32202  0057B0                     __end_of_UpdateMinMaxChDataRate:
 32203                           	opt stack 0
 32204                           tosu	equ	0xFFF
 32205                           tosh	equ	0xFFE
 32206                           tosl	equ	0xFFD
 32207                           pclath	equ	0xFFA
 32208                           tblptru	equ	0xFF8
 32209                           tblptrh	equ	0xFF7
 32210                           tblptrl	equ	0xFF6
 32211                           tablat	equ	0xFF5
 32212                           prodh	equ	0xFF4
 32213                           prodl	equ	0xFF3
 32214                           intcon	equ	0xFF2
 32215                           intcon2	equ	0xFF1
 32216                           intcon3	equ	0xFF0
 32217                           indf0	equ	0xFEF
 32218                           postinc0	equ	0xFEE
 32219                           plusw0	equ	0xFEB
 32220                           fsr0h	equ	0xFEA
 32221                           fsr0l	equ	0xFE9
 32222                           wreg	equ	0xFE8
 32223                           postinc1	equ	0xFE6
 32224                           postdec1	equ	0xFE5
 32225                           plusw1	equ	0xFE3
 32226                           fsr1h	equ	0xFE2
 32227                           fsr1l	equ	0xFE1
 32228                           indf2	equ	0xFDF
 32229                           postinc2	equ	0xFDE
 32230                           postdec2	equ	0xFDD
 32231                           plusw2	equ	0xFDB
 32232                           fsr2h	equ	0xFDA
 32233                           fsr2l	equ	0xFD9
 32234                           status	equ	0xFD8
 32235                           
 32236 ;; *************** function _StopAllSoftwareTimers *****************
 32237 ;; Defined at:
 32238 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32239 ;; Parameters:    Size  Location     Type
 32240 ;;		None
 32241 ;; Auto vars:     Size  Location     Type
 32242 ;;		None
 32243 ;; Return value:  Size  Location     Type
 32244 ;;                  1    wreg      void 
 32245 ;; Registers used:
 32246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32247 ;; Tracked objects:
 32248 ;;		On entry : F/2
 32249 ;;		On exit  : F/0
 32250 ;;		Unchanged: 0/0
 32251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32256 ;;Total ram usage:        0 bytes
 32257 ;; Hardware stack levels used:    1
 32258 ;; Hardware stack levels required when called:    8
 32259 ;; This function calls:
 32260 ;;		_SwTimerStop
 32261 ;; This function is called by:
 32262 ;;		_LORAWAN_Init
 32263 ;;		_LORAWAN_Reset
 32264 ;; This function uses a non-reentrant model
 32265 ;;
 32266                           
 32267                           	psect	text165
 32268  006A12                     __ptext165:
 32269                           	opt stack 0
 32270  006A12                     _StopAllSoftwareTimers:
 32271                           	opt stack 21
 32272                           
 32273                           ; BSR set to: 2
 32274                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 32275                           
 32276                           ; BSR set to: 0
 32277                           ;incstack = 0
 32278  006A12  51E2               	movf	(_loRa+226)& (0+255),w,b
 32279  006A14  EC9C  F03A         	call	_SwTimerStop
 32280                           
 32281                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 32282  006A18  0102               	movlb	2	; () banked
 32283  006A1A  51E3               	movf	(_loRa+227)& (0+255),w,b
 32284  006A1C  EC9C  F03A         	call	_SwTimerStop
 32285                           
 32286                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 32287  006A20  0102               	movlb	2	; () banked
 32288  006A22  51E7               	movf	(_loRa+231)& (0+255),w,b
 32289  006A24  EC9C  F03A         	call	_SwTimerStop
 32290                           
 32291                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 32292  006A28  0102               	movlb	2	; () banked
 32293  006A2A  51E4               	movf	(_loRa+228)& (0+255),w,b
 32294  006A2C  EC9C  F03A         	call	_SwTimerStop
 32295                           
 32296                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 32297  006A30  0102               	movlb	2	; () banked
 32298  006A32  51E5               	movf	(_loRa+229)& (0+255),w,b
 32299  006A34  EC9C  F03A         	call	_SwTimerStop
 32300                           
 32301                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 32302  006A38  0102               	movlb	2	; () banked
 32303  006A3A  51E8               	movf	(_loRa+232)& (0+255),w,b
 32304  006A3C  EC9C  F03A         	call	_SwTimerStop
 32305                           
 32306                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 32307  006A40  0102               	movlb	2	; () banked
 32308  006A42  51E6               	movf	(_loRa+230)& (0+255),w,b
 32309  006A44  EC9C  F03A         	call	_SwTimerStop
 32310                           
 32311                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 32312  006A48  0102               	movlb	2	; () banked
 32313  006A4A  51EA               	movf	(_loRa+234)& (0+255),w,b
 32314  006A4C  EC9C  F03A         	call	_SwTimerStop
 32315                           
 32316                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 32317  006A50  0102               	movlb	2	; () banked
 32318  006A52  51F3               	movf	(_loRa+243)& (0+255),w,b
 32319  006A54  EC9C  F03A         	call	_SwTimerStop
 32320                           
 32321                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 32322  006A58  0102               	movlb	2	; () banked
 32323  006A5A  51E9               	movf	(_loRa+233)& (0+255),w,b
 32324  006A5C  EF9C  F03A         	goto	_SwTimerStop
 32325  006A60                     __end_of_StopAllSoftwareTimers:
 32326                           	opt stack 0
 32327                           tosu	equ	0xFFF
 32328                           tosh	equ	0xFFE
 32329                           tosl	equ	0xFFD
 32330                           pclath	equ	0xFFA
 32331                           tblptru	equ	0xFF8
 32332                           tblptrh	equ	0xFF7
 32333                           tblptrl	equ	0xFF6
 32334                           tablat	equ	0xFF5
 32335                           prodh	equ	0xFF4
 32336                           prodl	equ	0xFF3
 32337                           intcon	equ	0xFF2
 32338                           intcon2	equ	0xFF1
 32339                           intcon3	equ	0xFF0
 32340                           indf0	equ	0xFEF
 32341                           postinc0	equ	0xFEE
 32342                           plusw0	equ	0xFEB
 32343                           fsr0h	equ	0xFEA
 32344                           fsr0l	equ	0xFE9
 32345                           wreg	equ	0xFE8
 32346                           postinc1	equ	0xFE6
 32347                           postdec1	equ	0xFE5
 32348                           plusw1	equ	0xFE3
 32349                           fsr1h	equ	0xFE2
 32350                           fsr1l	equ	0xFE1
 32351                           indf2	equ	0xFDF
 32352                           postinc2	equ	0xFDE
 32353                           postdec2	equ	0xFDD
 32354                           plusw2	equ	0xFDB
 32355                           fsr2h	equ	0xFDA
 32356                           fsr2l	equ	0xFD9
 32357                           status	equ	0xFD8
 32358                           
 32359 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 32360 ;; Defined at:
 32361 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32362 ;; Parameters:    Size  Location     Type
 32363 ;;  syncWord        1    wreg     unsigned char 
 32364 ;; Auto vars:     Size  Location     Type
 32365 ;;  syncWord        1    4[BANK0 ] unsigned char 
 32366 ;; Return value:  Size  Location     Type
 32367 ;;                  1    wreg      void 
 32368 ;; Registers used:
 32369 ;;		wreg
 32370 ;; Tracked objects:
 32371 ;;		On entry : F/2
 32372 ;;		On exit  : 0/0
 32373 ;;		Unchanged: 0/0
 32374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32378 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32379 ;;Total ram usage:        1 bytes
 32380 ;; Hardware stack levels used:    1
 32381 ;; Hardware stack levels required when called:    7
 32382 ;; This function calls:
 32383 ;;		Nothing
 32384 ;; This function is called by:
 32385 ;;		_LORAWAN_Reset
 32386 ;;		_ConfigureRadio
 32387 ;; This function uses a non-reentrant model
 32388 ;;
 32389                           
 32390                           	psect	text166
 32391  007890                     __ptext166:
 32392                           	opt stack 0
 32393  007890                     _RADIO_SetLoRaSyncWord:
 32394                           	opt stack 18
 32395                           
 32396                           ; BSR set to: 0
 32397                           ;incstack = 0
 32398                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32399  007890  0100               	movlb	0	; () banked
 32400  007892  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32401                           
 32402                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 32403  007894  C064  F177         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32404  007898  0012               	return		;funcret
 32405  00789A                     __end_of_RADIO_SetLoRaSyncWord:
 32406                           	opt stack 0
 32407                           tosu	equ	0xFFF
 32408                           tosh	equ	0xFFE
 32409                           tosl	equ	0xFFD
 32410                           pclath	equ	0xFFA
 32411                           tblptru	equ	0xFF8
 32412                           tblptrh	equ	0xFF7
 32413                           tblptrl	equ	0xFF6
 32414                           tablat	equ	0xFF5
 32415                           prodh	equ	0xFF4
 32416                           prodl	equ	0xFF3
 32417                           intcon	equ	0xFF2
 32418                           intcon2	equ	0xFF1
 32419                           intcon3	equ	0xFF0
 32420                           indf0	equ	0xFEF
 32421                           postinc0	equ	0xFEE
 32422                           plusw0	equ	0xFEB
 32423                           fsr0h	equ	0xFEA
 32424                           fsr0l	equ	0xFE9
 32425                           wreg	equ	0xFE8
 32426                           postinc1	equ	0xFE6
 32427                           postdec1	equ	0xFE5
 32428                           plusw1	equ	0xFE3
 32429                           fsr1h	equ	0xFE2
 32430                           fsr1l	equ	0xFE1
 32431                           indf2	equ	0xFDF
 32432                           postinc2	equ	0xFDE
 32433                           postdec2	equ	0xFDD
 32434                           plusw2	equ	0xFDB
 32435                           fsr2h	equ	0xFDA
 32436                           fsr2l	equ	0xFD9
 32437                           status	equ	0xFD8
 32438                           
 32439 ;; *************** function _RADIO_Init *****************
 32440 ;; Defined at:
 32441 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 32444 ;;		 -> radioBuffer(271), 
 32445 ;;  frequency       4   31[BANK0 ] unsigned long 
 32446 ;; Auto vars:     Size  Location     Type
 32447 ;;		None
 32448 ;; Return value:  Size  Location     Type
 32449 ;;                  1    wreg      void 
 32450 ;; Registers used:
 32451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32452 ;; Tracked objects:
 32453 ;;		On entry : F/0
 32454 ;;		On exit  : F/1
 32455 ;;		Unchanged: 0/0
 32456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32457 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32459 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32460 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32461 ;;Total ram usage:        7 bytes
 32462 ;; Hardware stack levels used:    1
 32463 ;; Hardware stack levels required when called:   11
 32464 ;; This function calls:
 32465 ;;		_RADIO_RegisterRead
 32466 ;;		_RADIO_RegisterWrite
 32467 ;;		_RADIO_Reset
 32468 ;;		_RADIO_WriteFrequency
 32469 ;;		_RADIO_WriteMode
 32470 ;;		_SwTimerCreate
 32471 ;;		_SwTimerSetCallback
 32472 ;;		_SwTimerStop
 32473 ;; This function is called by:
 32474 ;;		_LORAWAN_Init
 32475 ;;		_LORAWAN_Reset
 32476 ;; This function uses a non-reentrant model
 32477 ;;
 32478                           
 32479                           	psect	text167
 32480  00388A                     __ptext167:
 32481                           	opt stack 0
 32482  00388A                     _RADIO_Init:
 32483                           	opt stack 18
 32484                           
 32485                           ; BSR set to: 0
 32486                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 32487                           
 32488                           ;incstack = 0
 32489  00388A  C07F  F169         	movff	RADIO_Init@frequency,_RadioConfiguration
 32490  00388E  C080  F16A         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32491  003892  C081  F16B         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32492  003896  C082  F16C         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32493                           
 32494                           ; BSR set to: 0
 32495                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 32496  00389A  0EA8               	movlw	168
 32497  00389C  0101               	movlb	1	; () banked
 32498  00389E  6F6D               	movwf	(_RadioConfiguration+4)& (0+255),b
 32499  0038A0  0E61               	movlw	97
 32500  0038A2  6F6E               	movwf	(_RadioConfiguration+5)& (0+255),b
 32501  0038A4  6B6F               	clrf	(_RadioConfiguration+6)& (0+255),b
 32502  0038A6  6B70               	clrf	(_RadioConfiguration+7)& (0+255),b
 32503                           
 32504                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 32505  0038A8  0E50               	movlw	80
 32506  0038AA  6F71               	movwf	(_RadioConfiguration+8)& (0+255),b
 32507  0038AC  0EC3               	movlw	195
 32508  0038AE  6F72               	movwf	(_RadioConfiguration+9)& (0+255),b
 32509  0038B0  6B73               	clrf	(_RadioConfiguration+10)& (0+255),b
 32510  0038B2  6B74               	clrf	(_RadioConfiguration+11)& (0+255),b
 32511                           
 32512                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 32513  0038B4  0E01               	movlw	1
 32514  0038B6  6F81               	movwf	(_RadioConfiguration+24)& (0+255),b
 32515                           
 32516                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 32517  0038B8  0E07               	movlw	7
 32518  0038BA  6F83               	movwf	(_RadioConfiguration+26)& (0+255),b
 32519                           
 32520                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 32521  0038BC  0E01               	movlw	1
 32522  0038BE  6F84               	movwf	(_RadioConfiguration+27)& (0+255),b
 32523                           
 32524                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 32525  0038C0  6F8A               	movwf	(_RadioConfiguration+33)& (0+255),b
 32526                           
 32527                           ; BSR set to: 1
 32528                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 32529  0038C2  6B8B               	clrf	(_RadioConfiguration+34)& (0+255),b
 32530                           
 32531                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 32532  0038C4  6B76               	clrf	(_RadioConfiguration+13)& (0+255),b
 32533  0038C6  0E08               	movlw	8
 32534  0038C8  6F75               	movwf	(_RadioConfiguration+12)& (0+255),b
 32535                           
 32536                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 32537  0038CA  0E0C               	movlw	12
 32538  0038CC  6F82               	movwf	(_RadioConfiguration+25)& (0+255),b
 32539                           
 32540                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 32541  0038CE  0E01               	movlw	1
 32542  0038D0  6F85               	movwf	(_RadioConfiguration+28)& (0+255),b
 32543                           
 32544                           ; BSR set to: 1
 32545                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 32546  0038D2  6B86               	clrf	(_RadioConfiguration+29)& (0+255),b
 32547                           
 32548                           ; BSR set to: 1
 32549                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 32550  0038D4  6B89               	clrf	(_RadioConfiguration+32)& (0+255),b
 32551                           
 32552                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 32553  0038D6  0EC1               	movlw	193
 32554  0038D8  6F78               	movwf	(_RadioConfiguration+15)& (0+255),b
 32555                           
 32556                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 32557  0038DA  0E94               	movlw	148
 32558  0038DC  6F79               	movwf	(_RadioConfiguration+16)& (0+255),b
 32559                           
 32560                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 32561  0038DE  0EC1               	movlw	193
 32562  0038E0  6F7A               	movwf	(_RadioConfiguration+17)& (0+255),b
 32563                           
 32564                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 32565  0038E2  0E03               	movlw	3
 32566  0038E4  6F80               	movwf	(_RadioConfiguration+23)& (0+255),b
 32567                           
 32568                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 32569  0038E6  0E34               	movlw	52
 32570  0038E8  6F77               	movwf	(_RadioConfiguration+14)& (0+255),b
 32571                           
 32572                           ; BSR set to: 1
 32573                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 32574  0038EA  6B8C               	clrf	(_RadioConfiguration+35)& (0+255),b
 32575                           
 32576                           ; BSR set to: 1
 32577                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 32578  0038EC  6B8D               	clrf	(_RadioConfiguration+36)& (0+255),b
 32579                           
 32580                           ; BSR set to: 1
 32581                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 32582  0038EE  C07D  F18E         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32583  0038F2  C07E  F18F         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32584                           
 32585                           ; BSR set to: 1
 32586                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 32587  0038F6  6B87               	clrf	(_RadioConfiguration+30)& (0+255),b
 32588  0038F8  6B88               	clrf	(_RadioConfiguration+31)& (0+255),b
 32589                           
 32590                           ; BSR set to: 1
 32591                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 32592  0038FA  0E80               	movlw	128
 32593  0038FC  6F9B               	movwf	(_RadioConfiguration+50)& (0+255),b
 32594                           
 32595                           ; BSR set to: 1
 32596                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32597  0038FE  0E98               	movlw	152
 32598  003900  6F93               	movwf	(_RadioConfiguration+42)& (0+255),b
 32599  003902  0E3A               	movlw	58
 32600  003904  6F94               	movwf	(_RadioConfiguration+43)& (0+255),b
 32601  003906  6B95               	clrf	(_RadioConfiguration+44)& (0+255),b
 32602  003908  6B96               	clrf	(_RadioConfiguration+45)& (0+255),b
 32603                           
 32604                           ; BSR set to: 1
 32605                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32606  00390A  0E02               	movlw	2
 32607  00390C  6F9C               	movwf	(_RadioConfiguration+51)& (0+255),b
 32608                           
 32609                           ; BSR set to: 1
 32610                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32611  00390E  0E0B               	movlw	11
 32612  003910  6F9D               	movwf	(_RadioConfiguration+52)& (0+255),b
 32613                           
 32614                           ; BSR set to: 1
 32615                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32616  003912  0E12               	movlw	18
 32617  003914  6F9E               	movwf	(_RadioConfiguration+53)& (0+255),b
 32618                           
 32619                           ; BSR set to: 1
 32620                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 32621  003916  6B98               	clrf	(_RadioConfiguration+47)& (0+255),b
 32622  003918  6B99               	clrf	(_RadioConfiguration+48)& (0+255),b
 32623                           
 32624                           ; BSR set to: 1
 32625                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 32626  00391A  5197               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32627  00391C  E123               	bnz	l14766
 32628                           
 32629                           ; BSR set to: 1
 32630                           ;radio_driver_SX1276.c: 457: {
 32631                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32632  00391E  EC34  F031         	call	_SwTimerCreate	;wreg free
 32633  003922  0101               	movlb	1	; () banked
 32634  003924  6F90               	movwf	(_RadioConfiguration+39)& (0+255),b
 32635                           
 32636                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32637  003926  EC34  F031         	call	_SwTimerCreate	;wreg free
 32638  00392A  0101               	movlb	1	; () banked
 32639  00392C  6F91               	movwf	(_RadioConfiguration+40)& (0+255),b
 32640                           
 32641                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32642  00392E  EC34  F031         	call	_SwTimerCreate	;wreg free
 32643  003932  0101               	movlb	1	; () banked
 32644  003934  6F92               	movwf	(_RadioConfiguration+41)& (0+255),b
 32645                           
 32646                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32647  003936  0E78               	movlw	low _RADIO_RxFSKTimeout
 32648  003938  0100               	movlb	0	; () banked
 32649  00393A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32650  00393C  0E6F               	movlw	high _RADIO_RxFSKTimeout
 32651  00393E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32652  003940  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32653  003942  0101               	movlb	1	; () banked
 32654  003944  5191               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32655  003946  EC56  F038         	call	_SwTimerSetCallback
 32656                           
 32657                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32658  00394A  0E66               	movlw	low _RADIO_WatchdogTimeout
 32659  00394C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32660  00394E  0E6C               	movlw	high _RADIO_WatchdogTimeout
 32661  003950  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32662  003952  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32663  003954  0101               	movlb	1	; () banked
 32664  003956  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32665  003958  EC56  F038         	call	_SwTimerSetCallback
 32666                           
 32667                           ; BSR set to: 0
 32668                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 32669  00395C  0E01               	movlw	1
 32670  00395E  0101               	movlb	1	; () banked
 32671  003960  6F97               	movwf	(_RadioConfiguration+46)& (0+255),b
 32672                           
 32673                           ;radio_driver_SX1276.c: 466: }
 32674  003962  D00B               	goto	l14768
 32675  003964                     l14766:
 32676                           
 32677                           ; BSR set to: 1
 32678                           ;radio_driver_SX1276.c: 467: else
 32679                           ;radio_driver_SX1276.c: 468: {
 32680                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32681  003964  5190               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32682  003966  EC9C  F03A         	call	_SwTimerStop
 32683                           
 32684                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32685  00396A  0101               	movlb	1	; () banked
 32686  00396C  5191               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32687  00396E  EC9C  F03A         	call	_SwTimerStop
 32688                           
 32689                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32690  003972  0101               	movlb	1	; () banked
 32691  003974  5192               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32692  003976  EC9C  F03A         	call	_SwTimerStop
 32693  00397A                     l14768:
 32694                           
 32695                           ;radio_driver_SX1276.c: 472: }
 32696                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 32697  00397A  ECF1  F037         	call	_RADIO_Reset	;wreg free
 32698                           
 32699                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32700  00397E  0E00               	movlw	0
 32701  003980  0100               	movlb	0	; () banked
 32702  003982  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32703  003984  0E01               	movlw	1
 32704  003986  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32705  003988  EC6E  F028         	call	_RADIO_WriteMode
 32706                           
 32707                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32708  00398C  C169  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32709  003990  C16A  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32710  003994  C16B  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32711  003998  C16C  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32712  00399C  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
 32713                           
 32714                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 32715  0039A0  0E42               	movlw	66
 32716  0039A2  0100               	movlb	0	; () banked
 32717  0039A4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32718  0039A6  0E3B               	movlw	59
 32719  0039A8  EC6F  F03A         	call	_RADIO_RegisterWrite
 32720  0039AC                     l14776:
 32721  0039AC  0E3B               	movlw	59
 32722  0039AE  EC98  F039         	call	_RADIO_RegisterRead
 32723  0039B2  6F83               	movwf	??_RADIO_Init& (0+255),b
 32724  0039B4  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 32725  0039B6  D7FA               	goto	l14776
 32726                           
 32727                           ; BSR set to: 0
 32728                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 32729  0039B8  0E23               	movlw	35
 32730  0039BA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32731  0039BC  0E0C               	movlw	12
 32732  0039BE  EC6F  F03A         	call	_RADIO_RegisterWrite
 32733                           
 32734                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 32735  0039C2  0E1E               	movlw	30
 32736  0039C4  0100               	movlb	0	; () banked
 32737  0039C6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32738  0039C8  0E0D               	movlw	13
 32739  0039CA  EC6F  F03A         	call	_RADIO_RegisterWrite
 32740                           
 32741                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 32742  0039CE  0EAA               	movlw	170
 32743  0039D0  0100               	movlb	0	; () banked
 32744  0039D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32745  0039D4  0E1F               	movlw	31
 32746  0039D6  EC6F  F03A         	call	_RADIO_RegisterWrite
 32747                           
 32748                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 32749  0039DA  0E8F               	movlw	143
 32750  0039DC  0100               	movlb	0	; () banked
 32751  0039DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32752  0039E0  0E35               	movlw	53
 32753  0039E2  EC6F  F03A         	call	_RADIO_RegisterWrite
 32754                           
 32755                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 32756  0039E6  0100               	movlb	0	; () banked
 32757  0039E8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32758  0039EA  0E32               	movlw	50
 32759  0039EC  EC6F  F03A         	call	_RADIO_RegisterWrite
 32760                           
 32761                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 32762  0039F0  0E40               	movlw	64
 32763  0039F2  0100               	movlb	0	; () banked
 32764  0039F4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32765  0039F6  0E31               	movlw	49
 32766  0039F8  EC6F  F03A         	call	_RADIO_RegisterWrite
 32767                           
 32768                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32769  0039FC  0E01               	movlw	1
 32770  0039FE  0100               	movlb	0	; () banked
 32771  003A00  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32772  003A02  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32773  003A04  0E00               	movlw	0
 32774  003A06  EC6E  F028         	call	_RADIO_WriteMode
 32775                           
 32776                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 32777  003A0A  0100               	movlb	0	; () banked
 32778  003A0C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32779  003A0E  0E23               	movlw	35
 32780  003A10  EC6F  F03A         	call	_RADIO_RegisterWrite
 32781                           
 32782                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 32783  003A14  0E42               	movlw	66
 32784  003A16  EC98  F039         	call	_RADIO_RegisterRead
 32785  003A1A  0101               	movlb	1	; () banked
 32786  003A1C  6F9A               	movwf	(_RadioConfiguration+49)& (0+255),b
 32787                           
 32788                           ; BSR set to: 1
 32789  003A1E  0012               	return		;funcret
 32790  003A20                     __end_of_RADIO_Init:
 32791                           	opt stack 0
 32792                           tosu	equ	0xFFF
 32793                           tosh	equ	0xFFE
 32794                           tosl	equ	0xFFD
 32795                           pclath	equ	0xFFA
 32796                           tblptru	equ	0xFF8
 32797                           tblptrh	equ	0xFF7
 32798                           tblptrl	equ	0xFF6
 32799                           tablat	equ	0xFF5
 32800                           prodh	equ	0xFF4
 32801                           prodl	equ	0xFF3
 32802                           intcon	equ	0xFF2
 32803                           intcon2	equ	0xFF1
 32804                           intcon3	equ	0xFF0
 32805                           indf0	equ	0xFEF
 32806                           postinc0	equ	0xFEE
 32807                           plusw0	equ	0xFEB
 32808                           fsr0h	equ	0xFEA
 32809                           fsr0l	equ	0xFE9
 32810                           wreg	equ	0xFE8
 32811                           postinc1	equ	0xFE6
 32812                           postdec1	equ	0xFE5
 32813                           plusw1	equ	0xFE3
 32814                           fsr1h	equ	0xFE2
 32815                           fsr1l	equ	0xFE1
 32816                           indf2	equ	0xFDF
 32817                           postinc2	equ	0xFDE
 32818                           postdec2	equ	0xFDD
 32819                           plusw2	equ	0xFDB
 32820                           fsr2h	equ	0xFDA
 32821                           fsr2l	equ	0xFD9
 32822                           status	equ	0xFD8
 32823                           
 32824 ;; *************** function _SwTimerSetCallback *****************
 32825 ;; Defined at:
 32826 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 32827 ;; Parameters:    Size  Location     Type
 32828 ;;  timerId         1    wreg     unsigned char 
 32829 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 32830 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 32831 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 32832 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 32833 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 32834 ;; Auto vars:     Size  Location     Type
 32835 ;;  timerId         1    7[BANK0 ] unsigned char 
 32836 ;; Return value:  Size  Location     Type
 32837 ;;                  1    wreg      void 
 32838 ;; Registers used:
 32839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32840 ;; Tracked objects:
 32841 ;;		On entry : C/2
 32842 ;;		On exit  : F/0
 32843 ;;		Unchanged: 0/0
 32844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32845 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32849 ;;Total ram usage:        4 bytes
 32850 ;; Hardware stack levels used:    1
 32851 ;; Hardware stack levels required when called:    7
 32852 ;; This function calls:
 32853 ;;		Nothing
 32854 ;; This function is called by:
 32855 ;;		_RADIO_Init
 32856 ;;		_SetCallbackSoftwareTimers
 32857 ;; This function uses a non-reentrant model
 32858 ;;
 32859                           
 32860                           	psect	text168
 32861  0070AC                     __ptext168:
 32862                           	opt stack 0
 32863  0070AC                     _SwTimerSetCallback:
 32864                           	opt stack 21
 32865                           
 32866                           ; BSR set to: 1
 32867                           ;incstack = 0
 32868                           ;SwTimerSetCallback@timerId stored from wreg
 32869  0070AC  0100               	movlb	0	; () banked
 32870  0070AE  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 32871                           
 32872                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 32873  0070B0  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32874  0070B2  0D08               	mullw	8
 32875  0070B4  0E06               	movlw	low (_swTimers+6)
 32876  0070B6  24F3               	addwf	prodl,w,c
 32877  0070B8  6ED9               	movwf	fsr2l,c
 32878  0070BA  0E03               	movlw	high (_swTimers+6)
 32879  0070BC  20F4               	addwfc	prodh,w,c
 32880  0070BE  6EDA               	movwf	fsr2h,c
 32881  0070C0  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 32882  0070C4  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 32883                           
 32884                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 32885  0070C8  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32886  0070CA  0D08               	mullw	8
 32887  0070CC  0E05               	movlw	low (_swTimers+5)
 32888  0070CE  24F3               	addwf	prodl,w,c
 32889  0070D0  6ED9               	movwf	fsr2l,c
 32890  0070D2  0E03               	movlw	high (_swTimers+5)
 32891  0070D4  20F4               	addwfc	prodh,w,c
 32892  0070D6  6EDA               	movwf	fsr2h,c
 32893  0070D8  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 32894                           
 32895                           ; BSR set to: 0
 32896  0070DC  0012               	return		;funcret
 32897  0070DE                     __end_of_SwTimerSetCallback:
 32898                           	opt stack 0
 32899                           tosu	equ	0xFFF
 32900                           tosh	equ	0xFFE
 32901                           tosl	equ	0xFFD
 32902                           pclath	equ	0xFFA
 32903                           tblptru	equ	0xFF8
 32904                           tblptrh	equ	0xFF7
 32905                           tblptrl	equ	0xFF6
 32906                           tablat	equ	0xFF5
 32907                           prodh	equ	0xFF4
 32908                           prodl	equ	0xFF3
 32909                           intcon	equ	0xFF2
 32910                           intcon2	equ	0xFF1
 32911                           intcon3	equ	0xFF0
 32912                           indf0	equ	0xFEF
 32913                           postinc0	equ	0xFEE
 32914                           plusw0	equ	0xFEB
 32915                           fsr0h	equ	0xFEA
 32916                           fsr0l	equ	0xFE9
 32917                           wreg	equ	0xFE8
 32918                           postinc1	equ	0xFE6
 32919                           postdec1	equ	0xFE5
 32920                           plusw1	equ	0xFE3
 32921                           fsr1h	equ	0xFE2
 32922                           fsr1l	equ	0xFE1
 32923                           indf2	equ	0xFDF
 32924                           postinc2	equ	0xFDE
 32925                           postdec2	equ	0xFDD
 32926                           plusw2	equ	0xFDB
 32927                           fsr2h	equ	0xFDA
 32928                           fsr2l	equ	0xFD9
 32929                           status	equ	0xFD8
 32930                           
 32931 ;; *************** function _RADIO_WriteMode *****************
 32932 ;; Defined at:
 32933 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32934 ;; Parameters:    Size  Location     Type
 32935 ;;  newMode         1    wreg     enum E8483
 32936 ;;  newModulatio    1    9[BANK0 ] enum E7751
 32937 ;;  blocking        1   10[BANK0 ] unsigned char 
 32938 ;; Auto vars:     Size  Location     Type
 32939 ;;  newMode         1   14[BANK0 ] enum E8483
 32940 ;;  opMode          1   15[BANK0 ] unsigned char 
 32941 ;;  currentMode     1   13[BANK0 ] enum E8483
 32942 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 32943 ;;  currentModul    1   11[BANK0 ] enum E7751
 32944 ;; Return value:  Size  Location     Type
 32945 ;;                  1    wreg      void 
 32946 ;; Registers used:
 32947 ;;		wreg, status,2, status,0, cstack
 32948 ;; Tracked objects:
 32949 ;;		On entry : F/0
 32950 ;;		On exit  : 0/0
 32951 ;;		Unchanged: 0/0
 32952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32954 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32956 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32957 ;;Total ram usage:        7 bytes
 32958 ;; Hardware stack levels used:    1
 32959 ;; Hardware stack levels required when called:   10
 32960 ;; This function calls:
 32961 ;;		_HALDIO5PinValue
 32962 ;;		_RADIO_RegisterRead
 32963 ;;		_RADIO_RegisterWrite
 32964 ;;		_SystemBlockingWaitMs
 32965 ;; This function is called by:
 32966 ;;		_RADIO_Init
 32967 ;;		_RADIO_WriteConfiguration
 32968 ;;		_RADIO_Transmit
 32969 ;;		_RADIO_ReceiveStart
 32970 ;;		_RADIO_ReceiveStop
 32971 ;;		_RADIO_RxDone
 32972 ;;		_RADIO_FSKPayloadReady
 32973 ;;		_RADIO_RxTimeout
 32974 ;;		_RADIO_TxDone
 32975 ;;		_RADIO_FSKPacketSent
 32976 ;;		_RADIO_ReadRandom
 32977 ;;		_RADIO_RxFSKTimeout
 32978 ;;		_RADIO_WatchdogTimeout
 32979 ;; This function uses a non-reentrant model
 32980 ;;
 32981                           
 32982                           	psect	text169
 32983  0050DC                     __ptext169:
 32984                           	opt stack 0
 32985  0050DC                     _RADIO_WriteMode:
 32986                           	opt stack 17
 32987                           
 32988                           ; BSR set to: 0
 32989                           ;incstack = 0
 32990                           ;RADIO_WriteMode@newMode stored from wreg
 32991  0050DC  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 32992                           
 32993                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 32994                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 32995                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 32996                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 32997                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 32998                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 32999  0050DE  0100               	movlb	0	; () banked
 33000  0050E0  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33001  0050E2  E108               	bnz	l12174
 33002                           
 33003                           ; BSR set to: 0
 33004  0050E4  0E06               	movlw	6
 33005  0050E6  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33006  0050E8  B4D8               	btfsc	status,2,c
 33007  0050EA  0012               	return	
 33008                           
 33009                           ; BSR set to: 0
 33010  0050EC  0E07               	movlw	7
 33011  0050EE  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33012  0050F0  E101               	bnz	l12174
 33013  0050F2  0012               	return	
 33014  0050F4                     l12174:
 33015                           
 33016                           ; BSR set to: 0
 33017                           ;radio_driver_SX1276.c: 159: }
 33018                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 33019  0050F4  0E07               	movlw	7
 33020  0050F6  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 33021                           
 33022                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 33023  0050F8  0E01               	movlw	1
 33024  0050FA  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 33025                           
 33026                           ; BSR set to: 0
 33027                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 33028  0050FC  EC98  F039         	call	_RADIO_RegisterRead
 33029  005100  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33030                           
 33031                           ; BSR set to: 0
 33032                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 33033  005102  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 33034  005104  D003               	goto	l382
 33035                           
 33036                           ; BSR set to: 0
 33037                           ;radio_driver_SX1276.c: 168: {
 33038                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 33039  005106  0E01               	movlw	1
 33040  005108  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 33041                           
 33042                           ;radio_driver_SX1276.c: 170: }
 33043  00510A  D001               	goto	l12182
 33044  00510C                     l382:
 33045                           
 33046                           ; BSR set to: 0
 33047                           ;radio_driver_SX1276.c: 171: else
 33048                           ;radio_driver_SX1276.c: 172: {
 33049                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 33050  00510C  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 33051  00510E                     l12182:
 33052                           
 33053                           ; BSR set to: 0
 33054                           ;radio_driver_SX1276.c: 174: }
 33055                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 33056  00510E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33057  005110  0B07               	andlw	7
 33058  005112  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 33059                           
 33060                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 33061  005114  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 33062  005116  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 33063  005118  E018               	bz	l12198
 33064                           
 33065                           ; BSR set to: 0
 33066                           ;radio_driver_SX1276.c: 181: {
 33067                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 33068  00511A  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33069  00511C  E008               	bz	l12190
 33070                           
 33071                           ; BSR set to: 0
 33072                           ;radio_driver_SX1276.c: 184: {
 33073                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 33074  00511E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33075  005120  0BF8               	andlw	248
 33076  005122  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33077  005124  0E01               	movlw	1
 33078  005126  EC6F  F03A         	call	_RADIO_RegisterWrite
 33079                           
 33080                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 33081  00512A  0100               	movlb	0	; () banked
 33082  00512C  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 33083  00512E                     l12190:
 33084                           
 33085                           ; BSR set to: 0
 33086                           ;radio_driver_SX1276.c: 188: }
 33087                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 33088  00512E  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33089  005130  E103               	bnz	l12194
 33090                           
 33091                           ; BSR set to: 0
 33092                           ;radio_driver_SX1276.c: 191: {
 33093                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 33094  005132  0E78               	movlw	120
 33095  005134  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33096                           
 33097                           ;radio_driver_SX1276.c: 194: }
 33098  005136  D004               	goto	l12196
 33099  005138                     l12194:
 33100                           
 33101                           ; BSR set to: 0
 33102                           ;radio_driver_SX1276.c: 195: else
 33103                           ;radio_driver_SX1276.c: 196: {
 33104                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 33105  005138  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33106  00513A  0B78               	andlw	120
 33107  00513C  0980               	iorlw	128
 33108  00513E  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33109  005140                     l12196:
 33110                           
 33111                           ; BSR set to: 0
 33112                           ;radio_driver_SX1276.c: 199: }
 33113                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 33114  005140  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33115  005144  0E01               	movlw	1
 33116  005146  EC6F  F03A         	call	_RADIO_RegisterWrite
 33117  00514A                     l12198:
 33118                           
 33119                           ;radio_driver_SX1276.c: 201: }
 33120                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 33121  00514A  0100               	movlb	0	; () banked
 33122  00514C  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33123  00514E  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33124  005150  B4D8               	btfsc	status,2,c
 33125  005152  0012               	return	
 33126                           
 33127                           ; BSR set to: 0
 33128                           ;radio_driver_SX1276.c: 208: {
 33129                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 33130  005154  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33131  005156  E012               	bz	l12214
 33132                           
 33133                           ; BSR set to: 0
 33134  005158  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33135  00515A  E110               	bnz	l12214
 33136                           
 33137                           ; BSR set to: 0
 33138                           ;radio_driver_SX1276.c: 212: {
 33139                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 33140  00515C  0E41               	movlw	65
 33141  00515E  EC98  F039         	call	_RADIO_RegisterRead
 33142  005162  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 33143                           
 33144                           ; BSR set to: 0
 33145                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 33146  005164  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33147  005166  E103               	bnz	l12210
 33148                           
 33149                           ; BSR set to: 0
 33150                           ;radio_driver_SX1276.c: 215: {
 33151                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 33152  005168  0E30               	movlw	48
 33153  00516A  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33154                           
 33155                           ;radio_driver_SX1276.c: 218: }
 33156  00516C  D002               	goto	l12212
 33157  00516E                     l12210:
 33158                           
 33159                           ; BSR set to: 0
 33160                           ;radio_driver_SX1276.c: 219: else
 33161                           ;radio_driver_SX1276.c: 220: {
 33162                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 33163  00516E  0ECF               	movlw	207
 33164  005170  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33165  005172                     l12212:
 33166                           
 33167                           ; BSR set to: 0
 33168                           ;radio_driver_SX1276.c: 223: }
 33169                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 33170  005172  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 33171  005176  0E41               	movlw	65
 33172  005178  EC6F  F03A         	call	_RADIO_RegisterWrite
 33173  00517C                     l12214:
 33174                           
 33175                           ;radio_driver_SX1276.c: 225: }
 33176                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 33177  00517C  0EF8               	movlw	248
 33178  00517E  0100               	movlb	0	; () banked
 33179  005180  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33180                           
 33181                           ; BSR set to: 0
 33182                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 33183  005182  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33184  005184  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 33185                           
 33186                           ; BSR set to: 0
 33187                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 33188  005186  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33189  00518A  0E01               	movlw	1
 33190  00518C  EC6F  F03A         	call	_RADIO_RegisterWrite
 33191                           
 33192                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 33193  005190  0100               	movlb	0	; () banked
 33194  005192  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33195  005194  A4D8               	btfss	status,2,c
 33196  005196  0012               	return	
 33197                           
 33198                           ; BSR set to: 0
 33199                           ;radio_driver_SX1276.c: 234: {
 33200                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 33201  005198  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33202  00519A  E005               	bz	l12226
 33203  00519C                     l12224:
 33204  00519C  EC88  F03C         	call	_HALDIO5PinValue	;wreg free
 33205  0051A0  0900               	iorlw	0
 33206  0051A2  E0FC               	bz	l12224
 33207  0051A4  0012               	return	
 33208  0051A6                     l12226:
 33209                           
 33210                           ; BSR set to: 0
 33211                           ;radio_driver_SX1276.c: 240: else
 33212                           ;radio_driver_SX1276.c: 241: {
 33213                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 33214  0051A6  0E01               	movlw	1
 33215  0051A8  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33216  0051AA  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33217  0051AC  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33218  0051AE  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33219  0051B0  EF0C  F039         	goto	_SystemBlockingWaitMs	;wreg free
 33220  0051B4                     __end_of_RADIO_WriteMode:
 33221                           	opt stack 0
 33222                           tosu	equ	0xFFF
 33223                           tosh	equ	0xFFE
 33224                           tosl	equ	0xFFD
 33225                           pclath	equ	0xFFA
 33226                           tblptru	equ	0xFF8
 33227                           tblptrh	equ	0xFF7
 33228                           tblptrl	equ	0xFF6
 33229                           tablat	equ	0xFF5
 33230                           prodh	equ	0xFF4
 33231                           prodl	equ	0xFF3
 33232                           intcon	equ	0xFF2
 33233                           intcon2	equ	0xFF1
 33234                           intcon3	equ	0xFF0
 33235                           indf0	equ	0xFEF
 33236                           postinc0	equ	0xFEE
 33237                           plusw0	equ	0xFEB
 33238                           fsr0h	equ	0xFEA
 33239                           fsr0l	equ	0xFE9
 33240                           wreg	equ	0xFE8
 33241                           postinc1	equ	0xFE6
 33242                           postdec1	equ	0xFE5
 33243                           plusw1	equ	0xFE3
 33244                           fsr1h	equ	0xFE2
 33245                           fsr1l	equ	0xFE1
 33246                           indf2	equ	0xFDF
 33247                           postinc2	equ	0xFDE
 33248                           postdec2	equ	0xFDD
 33249                           plusw2	equ	0xFDB
 33250                           fsr2h	equ	0xFDA
 33251                           fsr2l	equ	0xFD9
 33252                           status	equ	0xFD8
 33253                           
 33254 ;; *************** function _RADIO_RegisterRead *****************
 33255 ;; Defined at:
 33256 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33257 ;; Parameters:    Size  Location     Type
 33258 ;;  reg             1    wreg     unsigned char 
 33259 ;; Auto vars:     Size  Location     Type
 33260 ;;  reg             1    6[BANK0 ] unsigned char 
 33261 ;;  readValue       1    7[BANK0 ] unsigned char 
 33262 ;; Return value:  Size  Location     Type
 33263 ;;                  1    wreg      unsigned char 
 33264 ;; Registers used:
 33265 ;;		wreg, status,2, status,0, cstack
 33266 ;; Tracked objects:
 33267 ;;		On entry : 0/0
 33268 ;;		On exit  : F/0
 33269 ;;		Unchanged: 0/0
 33270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33272 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33275 ;;Total ram usage:        2 bytes
 33276 ;; Hardware stack levels used:    1
 33277 ;; Hardware stack levels required when called:    9
 33278 ;; This function calls:
 33279 ;;		_HALSPICSAssert
 33280 ;;		_HALSPICSDeassert
 33281 ;;		_HALSPISend
 33282 ;; This function is called by:
 33283 ;;		_RADIO_WriteMode
 33284 ;;		_RADIO_WritePower
 33285 ;;		_RADIO_Init
 33286 ;;		_RADIO_WriteConfiguration
 33287 ;;		_RADIO_Transmit
 33288 ;;		_RADIO_RxDone
 33289 ;;		_RADIO_FSKPayloadReady
 33290 ;;		_RADIO_FSKPacketSent
 33291 ;;		_RADIO_FHSSChangeChannel
 33292 ;;		_RADIO_DIO0
 33293 ;;		_RADIO_DIO1
 33294 ;;		_RADIO_DIO2
 33295 ;;		_RADIO_DIO3
 33296 ;;		_RADIO_DIO4
 33297 ;;		_RADIO_DIO5
 33298 ;;		_RADIO_ReadRandom
 33299 ;;		_RADIO_RxFSKTimeout
 33300 ;; This function uses a non-reentrant model
 33301 ;;
 33302                           
 33303                           	psect	text170
 33304  007330                     __ptext170:
 33305                           	opt stack 0
 33306  007330                     _RADIO_RegisterRead:
 33307                           	opt stack 17
 33308                           
 33309                           ;incstack = 0
 33310                           ;RADIO_RegisterRead@reg stored from wreg
 33311  007330  0100               	movlb	0	; () banked
 33312  007332  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 33313                           
 33314                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 33315                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 33316  007334  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 33317                           
 33318                           ; BSR set to: 0
 33319                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 33320  007336  ECA6  F03C         	call	_HALSPICSAssert	;wreg free
 33321                           
 33322                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 33323  00733A  0100               	movlb	0	; () banked
 33324  00733C  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 33325  00733E  EC4D  F03C         	call	_HALSPISend
 33326                           
 33327                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 33328  007342  0EFF               	movlw	255
 33329  007344  EC4D  F03C         	call	_HALSPISend
 33330  007348  0100               	movlb	0	; () banked
 33331  00734A  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 33332                           
 33333                           ; BSR set to: 0
 33334                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 33335  00734C  ECA4  F03C         	call	_HALSPICSDeassert	;wreg free
 33336                           
 33337                           ;radio_driver_SX1276.c: 142: return readValue;
 33338  007350  0100               	movlb	0	; () banked
 33339  007352  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 33340                           
 33341                           ; BSR set to: 0
 33342  007354  0012               	return		;funcret
 33343  007356                     __end_of_RADIO_RegisterRead:
 33344                           	opt stack 0
 33345                           tosu	equ	0xFFF
 33346                           tosh	equ	0xFFE
 33347                           tosl	equ	0xFFD
 33348                           pclath	equ	0xFFA
 33349                           tblptru	equ	0xFF8
 33350                           tblptrh	equ	0xFF7
 33351                           tblptrl	equ	0xFF6
 33352                           tablat	equ	0xFF5
 33353                           prodh	equ	0xFF4
 33354                           prodl	equ	0xFF3
 33355                           intcon	equ	0xFF2
 33356                           intcon2	equ	0xFF1
 33357                           intcon3	equ	0xFF0
 33358                           indf0	equ	0xFEF
 33359                           postinc0	equ	0xFEE
 33360                           plusw0	equ	0xFEB
 33361                           fsr0h	equ	0xFEA
 33362                           fsr0l	equ	0xFE9
 33363                           wreg	equ	0xFE8
 33364                           postinc1	equ	0xFE6
 33365                           postdec1	equ	0xFE5
 33366                           plusw1	equ	0xFE3
 33367                           fsr1h	equ	0xFE2
 33368                           fsr1l	equ	0xFE1
 33369                           indf2	equ	0xFDF
 33370                           postinc2	equ	0xFDE
 33371                           postdec2	equ	0xFDD
 33372                           plusw2	equ	0xFDB
 33373                           fsr2h	equ	0xFDA
 33374                           fsr2l	equ	0xFD9
 33375                           status	equ	0xFD8
 33376                           
 33377 ;; *************** function _HALDIO5PinValue *****************
 33378 ;; Defined at:
 33379 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33380 ;; Parameters:    Size  Location     Type
 33381 ;;		None
 33382 ;; Auto vars:     Size  Location     Type
 33383 ;;		None
 33384 ;; Return value:  Size  Location     Type
 33385 ;;                  1    wreg      unsigned char 
 33386 ;; Registers used:
 33387 ;;		wreg
 33388 ;; Tracked objects:
 33389 ;;		On entry : 0/0
 33390 ;;		On exit  : 0/0
 33391 ;;		Unchanged: 0/0
 33392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33397 ;;Total ram usage:        0 bytes
 33398 ;; Hardware stack levels used:    1
 33399 ;; Hardware stack levels required when called:    7
 33400 ;; This function calls:
 33401 ;;		Nothing
 33402 ;; This function is called by:
 33403 ;;		_RADIO_WriteMode
 33404 ;; This function uses a non-reentrant model
 33405 ;;
 33406                           
 33407                           	psect	text171
 33408  007910                     __ptext171:
 33409                           	opt stack 0
 33410  007910                     _HALDIO5PinValue:
 33411                           	opt stack 19
 33412                           
 33413                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33414                           
 33415                           ; BSR set to: 0
 33416                           ;incstack = 0
 33417  007910  B081               	btfsc	3969,0,c	;volatile
 33418  007912  0C01               	retlw	1
 33419  007914  0C00               	retlw	0	;funcret
 33420  007916                     __end_of_HALDIO5PinValue:
 33421                           	opt stack 0
 33422                           tosu	equ	0xFFF
 33423                           tosh	equ	0xFFE
 33424                           tosl	equ	0xFFD
 33425                           pclath	equ	0xFFA
 33426                           tblptru	equ	0xFF8
 33427                           tblptrh	equ	0xFF7
 33428                           tblptrl	equ	0xFF6
 33429                           tablat	equ	0xFF5
 33430                           prodh	equ	0xFF4
 33431                           prodl	equ	0xFF3
 33432                           intcon	equ	0xFF2
 33433                           intcon2	equ	0xFF1
 33434                           intcon3	equ	0xFF0
 33435                           indf0	equ	0xFEF
 33436                           postinc0	equ	0xFEE
 33437                           plusw0	equ	0xFEB
 33438                           fsr0h	equ	0xFEA
 33439                           fsr0l	equ	0xFE9
 33440                           wreg	equ	0xFE8
 33441                           postinc1	equ	0xFE6
 33442                           postdec1	equ	0xFE5
 33443                           plusw1	equ	0xFE3
 33444                           fsr1h	equ	0xFE2
 33445                           fsr1l	equ	0xFE1
 33446                           indf2	equ	0xFDF
 33447                           postinc2	equ	0xFDE
 33448                           postdec2	equ	0xFDD
 33449                           plusw2	equ	0xFDB
 33450                           fsr2h	equ	0xFDA
 33451                           fsr2l	equ	0xFD9
 33452                           status	equ	0xFD8
 33453                           
 33454 ;; *************** function _RADIO_WriteFrequency *****************
 33455 ;; Defined at:
 33456 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33457 ;; Parameters:    Size  Location     Type
 33458 ;;  frequency       4   17[BANK0 ] unsigned long 
 33459 ;; Auto vars:     Size  Location     Type
 33460 ;;  num             4   25[BANK0 ] unsigned long 
 33461 ;;  num_mod         4   21[BANK0 ] unsigned long 
 33462 ;; Return value:  Size  Location     Type
 33463 ;;                  1    wreg      void 
 33464 ;; Registers used:
 33465 ;;		wreg, status,2, status,0, cstack
 33466 ;; Tracked objects:
 33467 ;;		On entry : 0/0
 33468 ;;		On exit  : 0/0
 33469 ;;		Unchanged: 0/0
 33470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33471 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33472 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33474 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33475 ;;Total ram usage:       12 bytes
 33476 ;; Hardware stack levels used:    1
 33477 ;; Hardware stack levels required when called:   10
 33478 ;; This function calls:
 33479 ;;		_RADIO_RegisterWrite
 33480 ;;		___lldiv
 33481 ;;		___llmod
 33482 ;; This function is called by:
 33483 ;;		_RADIO_Init
 33484 ;;		_RADIO_WriteConfiguration
 33485 ;;		_RADIO_FHSSChangeChannel
 33486 ;; This function uses a non-reentrant model
 33487 ;;
 33488                           
 33489                           	psect	text172
 33490  005000                     __ptext172:
 33491                           	opt stack 0
 33492  005000                     _RADIO_WriteFrequency:
 33493                           	opt stack 16
 33494                           
 33495                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33496                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33497                           
 33498                           ;incstack = 0
 33499  005000  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33500  005004  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33501  005008  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33502  00500C  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33503  005010  0E09               	movlw	9
 33504  005012  0100               	movlb	0	; () banked
 33505  005014  6F68               	movwf	___lldiv@divisor& (0+255),b
 33506  005016  0E3D               	movlw	61
 33507  005018  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33508  00501A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33509  00501C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33510  00501E  EC1A  F030         	call	___lldiv	;wreg free
 33511  005022  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 33512  005026  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33513  00502A  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33514  00502E  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33515                           
 33516                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33517  005032  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33518  005036  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33519  00503A  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33520  00503E  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33521  005042  0E09               	movlw	9
 33522  005044  6F68               	movwf	___llmod@divisor& (0+255),b
 33523  005046  0E3D               	movlw	61
 33524  005048  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 33525  00504A  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 33526  00504C  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 33527  00504E  ECFB  F032         	call	___llmod	;wreg free
 33528  005052  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33529  005056  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33530  00505A  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33531  00505E  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33532                           
 33533                           ; BSR set to: 0
 33534                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33535  005062  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33536  005066  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33537  00506A  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33538  00506E  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33539                           
 33540                           ; BSR set to: 0
 33541                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33542  005070  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33543  005074  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33544  005078  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33545  00507C  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33546                           
 33547                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33548  00507E  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33549  005082  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33550  005086  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33551  00508A  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33552  00508E  0E09               	movlw	9
 33553  005090  6F68               	movwf	___lldiv@divisor& (0+255),b
 33554  005092  0E3D               	movlw	61
 33555  005094  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33556  005096  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33557  005098  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33558  00509A  EC1A  F030         	call	___lldiv	;wreg free
 33559  00509E  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33560  0050A2  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33561  0050A6  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33562  0050AA  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33563                           
 33564                           ; BSR set to: 0
 33565                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33566  0050AE  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33567  0050B0  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33568  0050B2  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33569  0050B4  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33570  0050B6  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33571  0050B8  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33572  0050BA  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33573  0050BC  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33574                           
 33575                           ; BSR set to: 0
 33576                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33577  0050BE  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33578  0050C2  0E06               	movlw	6
 33579  0050C4  EC6F  F03A         	call	_RADIO_RegisterWrite
 33580                           
 33581                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33582  0050C8  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33583  0050CC  0E07               	movlw	7
 33584  0050CE  EC6F  F03A         	call	_RADIO_RegisterWrite
 33585                           
 33586                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33587  0050D2  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33588  0050D6  0E08               	movlw	8
 33589  0050D8  EF6F  F03A         	goto	_RADIO_RegisterWrite
 33590  0050DC                     __end_of_RADIO_WriteFrequency:
 33591                           	opt stack 0
 33592                           tosu	equ	0xFFF
 33593                           tosh	equ	0xFFE
 33594                           tosl	equ	0xFFD
 33595                           pclath	equ	0xFFA
 33596                           tblptru	equ	0xFF8
 33597                           tblptrh	equ	0xFF7
 33598                           tblptrl	equ	0xFF6
 33599                           tablat	equ	0xFF5
 33600                           prodh	equ	0xFF4
 33601                           prodl	equ	0xFF3
 33602                           intcon	equ	0xFF2
 33603                           intcon2	equ	0xFF1
 33604                           intcon3	equ	0xFF0
 33605                           indf0	equ	0xFEF
 33606                           postinc0	equ	0xFEE
 33607                           plusw0	equ	0xFEB
 33608                           fsr0h	equ	0xFEA
 33609                           fsr0l	equ	0xFE9
 33610                           wreg	equ	0xFE8
 33611                           postinc1	equ	0xFE6
 33612                           postdec1	equ	0xFE5
 33613                           plusw1	equ	0xFE3
 33614                           fsr1h	equ	0xFE2
 33615                           fsr1l	equ	0xFE1
 33616                           indf2	equ	0xFDF
 33617                           postinc2	equ	0xFDE
 33618                           postdec2	equ	0xFDD
 33619                           plusw2	equ	0xFDB
 33620                           fsr2h	equ	0xFDA
 33621                           fsr2l	equ	0xFD9
 33622                           status	equ	0xFD8
 33623                           
 33624 ;; *************** function ___llmod *****************
 33625 ;; Defined at:
 33626 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 33627 ;; Parameters:    Size  Location     Type
 33628 ;;  dividend        4    4[BANK0 ] unsigned long 
 33629 ;;  divisor         4    8[BANK0 ] unsigned long 
 33630 ;; Auto vars:     Size  Location     Type
 33631 ;;  counter         1   12[BANK0 ] unsigned char 
 33632 ;; Return value:  Size  Location     Type
 33633 ;;                  4    4[BANK0 ] unsigned long 
 33634 ;; Registers used:
 33635 ;;		wreg, status,2, status,0
 33636 ;; Tracked objects:
 33637 ;;		On entry : F/0
 33638 ;;		On exit  : F/0
 33639 ;;		Unchanged: 0/0
 33640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33641 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33644 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33645 ;;Total ram usage:        9 bytes
 33646 ;; Hardware stack levels used:    1
 33647 ;; Hardware stack levels required when called:    7
 33648 ;; This function calls:
 33649 ;;		Nothing
 33650 ;; This function is called by:
 33651 ;;		_RADIO_WriteFrequency
 33652 ;; This function uses a non-reentrant model
 33653 ;;
 33654                           
 33655                           	psect	text173
 33656  0065F6                     __ptext173:
 33657                           	opt stack 0
 33658  0065F6                     ___llmod:
 33659                           	opt stack 18
 33660                           
 33661                           ; BSR set to: 0
 33662                           
 33663                           ;incstack = 0
 33664  0065F6  5168               	movf	___llmod@divisor& (0+255),w,b
 33665  0065F8  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 33666  0065FA  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 33667  0065FC  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 33668  0065FE  E023               	bz	l3114
 33669                           
 33670                           ; BSR set to: 0
 33671  006600  0E01               	movlw	1
 33672  006602  6F6C               	movwf	___llmod@counter& (0+255),b
 33673  006604  D006               	goto	l12126
 33674  006606                     l12124:
 33675                           
 33676                           ; BSR set to: 0
 33677  006606  90D8               	bcf	status,0,c
 33678  006608  3768               	rlcf	___llmod@divisor& (0+255),f,b
 33679  00660A  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 33680  00660C  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 33681  00660E  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 33682  006610  2B6C               	incf	___llmod@counter& (0+255),f,b
 33683  006612                     l12126:
 33684                           
 33685                           ; BSR set to: 0
 33686  006612  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 33687  006614  D7F8               	goto	l12124
 33688  006616                     l12128:
 33689                           
 33690                           ; BSR set to: 0
 33691  006616  5168               	movf	___llmod@divisor& (0+255),w,b
 33692  006618  5D64               	subwf	___llmod@dividend& (0+255),w,b
 33693  00661A  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33694  00661C  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 33695  00661E  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33696  006620  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 33697  006622  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33698  006624  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 33699  006626  E308               	bnc	l12132
 33700                           
 33701                           ; BSR set to: 0
 33702  006628  5168               	movf	___llmod@divisor& (0+255),w,b
 33703  00662A  5F64               	subwf	___llmod@dividend& (0+255),f,b
 33704  00662C  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33705  00662E  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 33706  006630  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33707  006632  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 33708  006634  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33709  006636  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 33710  006638                     l12132:
 33711                           
 33712                           ; BSR set to: 0
 33713  006638  90D8               	bcf	status,0,c
 33714  00663A  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 33715  00663C  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 33716  00663E  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 33717  006640  3368               	rrcf	___llmod@divisor& (0+255),f,b
 33718                           
 33719                           ; BSR set to: 0
 33720  006642  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 33721  006644  D7E8               	goto	l12128
 33722  006646                     l3114:
 33723                           
 33724                           ; BSR set to: 0
 33725  006646  C064  F064         	movff	___llmod@dividend,?___llmod
 33726  00664A  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 33727  00664E  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 33728  006652  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 33729                           
 33730                           ; BSR set to: 0
 33731  006656  0012               	return		;funcret
 33732  006658                     __end_of___llmod:
 33733                           	opt stack 0
 33734                           tosu	equ	0xFFF
 33735                           tosh	equ	0xFFE
 33736                           tosl	equ	0xFFD
 33737                           pclath	equ	0xFFA
 33738                           tblptru	equ	0xFF8
 33739                           tblptrh	equ	0xFF7
 33740                           tblptrl	equ	0xFF6
 33741                           tablat	equ	0xFF5
 33742                           prodh	equ	0xFF4
 33743                           prodl	equ	0xFF3
 33744                           intcon	equ	0xFF2
 33745                           intcon2	equ	0xFF1
 33746                           intcon3	equ	0xFF0
 33747                           indf0	equ	0xFEF
 33748                           postinc0	equ	0xFEE
 33749                           plusw0	equ	0xFEB
 33750                           fsr0h	equ	0xFEA
 33751                           fsr0l	equ	0xFE9
 33752                           wreg	equ	0xFE8
 33753                           postinc1	equ	0xFE6
 33754                           postdec1	equ	0xFE5
 33755                           plusw1	equ	0xFE3
 33756                           fsr1h	equ	0xFE2
 33757                           fsr1l	equ	0xFE1
 33758                           indf2	equ	0xFDF
 33759                           postinc2	equ	0xFDE
 33760                           postdec2	equ	0xFDD
 33761                           plusw2	equ	0xFDB
 33762                           fsr2h	equ	0xFDA
 33763                           fsr2l	equ	0xFD9
 33764                           status	equ	0xFD8
 33765                           
 33766 ;; *************** function _RADIO_RegisterWrite *****************
 33767 ;; Defined at:
 33768 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33769 ;; Parameters:    Size  Location     Type
 33770 ;;  reg             1    wreg     unsigned char 
 33771 ;;  value           1    6[BANK0 ] unsigned char 
 33772 ;; Auto vars:     Size  Location     Type
 33773 ;;  reg             1    7[BANK0 ] unsigned char 
 33774 ;; Return value:  Size  Location     Type
 33775 ;;                  1    wreg      void 
 33776 ;; Registers used:
 33777 ;;		wreg, status,2, status,0, cstack
 33778 ;; Tracked objects:
 33779 ;;		On entry : 0/0
 33780 ;;		On exit  : 0/0
 33781 ;;		Unchanged: 0/0
 33782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33783 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33787 ;;Total ram usage:        2 bytes
 33788 ;; Hardware stack levels used:    1
 33789 ;; Hardware stack levels required when called:    9
 33790 ;; This function calls:
 33791 ;;		_HALSPICSAssert
 33792 ;;		_HALSPICSDeassert
 33793 ;;		_HALSPISend
 33794 ;; This function is called by:
 33795 ;;		_RADIO_WriteMode
 33796 ;;		_RADIO_WriteFrequency
 33797 ;;		_RADIO_WriteFSKFrequencyDeviation
 33798 ;;		_RADIO_WriteFSKBitRate
 33799 ;;		_RADIO_WritePower
 33800 ;;		_RADIO_Init
 33801 ;;		_RADIO_WriteConfiguration
 33802 ;;		_RADIO_Transmit
 33803 ;;		_RADIO_ReceiveStart
 33804 ;;		_RADIO_RxDone
 33805 ;;		_RADIO_RxTimeout
 33806 ;;		_RADIO_TxDone
 33807 ;;		_RADIO_UnhandledInterrupt
 33808 ;;		_RADIO_FHSSChangeChannel
 33809 ;;		_RADIO_ReadRandom
 33810 ;; This function uses a non-reentrant model
 33811 ;;
 33812                           
 33813                           	psect	text174
 33814  0074DE                     __ptext174:
 33815                           	opt stack 0
 33816  0074DE                     _RADIO_RegisterWrite:
 33817                           	opt stack 17
 33818                           
 33819                           ; BSR set to: 0
 33820                           ;incstack = 0
 33821                           ;RADIO_RegisterWrite@reg stored from wreg
 33822  0074DE  0100               	movlb	0	; () banked
 33823  0074E0  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 33824                           
 33825                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 33826  0074E2  ECA6  F03C         	call	_HALSPICSAssert	;wreg free
 33827                           
 33828                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 33829  0074E6  0100               	movlb	0	; () banked
 33830  0074E8  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 33831  0074EA  0980               	iorlw	128
 33832  0074EC  EC4D  F03C         	call	_HALSPISend
 33833                           
 33834                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 33835  0074F0  0100               	movlb	0	; () banked
 33836  0074F2  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 33837  0074F4  EC4D  F03C         	call	_HALSPISend
 33838                           
 33839                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 33840  0074F8  EFA4  F03C         	goto	_HALSPICSDeassert	;wreg free
 33841  0074FC                     __end_of_RADIO_RegisterWrite:
 33842                           	opt stack 0
 33843                           tosu	equ	0xFFF
 33844                           tosh	equ	0xFFE
 33845                           tosl	equ	0xFFD
 33846                           pclath	equ	0xFFA
 33847                           tblptru	equ	0xFF8
 33848                           tblptrh	equ	0xFF7
 33849                           tblptrl	equ	0xFF6
 33850                           tablat	equ	0xFF5
 33851                           prodh	equ	0xFF4
 33852                           prodl	equ	0xFF3
 33853                           intcon	equ	0xFF2
 33854                           intcon2	equ	0xFF1
 33855                           intcon3	equ	0xFF0
 33856                           indf0	equ	0xFEF
 33857                           postinc0	equ	0xFEE
 33858                           plusw0	equ	0xFEB
 33859                           fsr0h	equ	0xFEA
 33860                           fsr0l	equ	0xFE9
 33861                           wreg	equ	0xFE8
 33862                           postinc1	equ	0xFE6
 33863                           postdec1	equ	0xFE5
 33864                           plusw1	equ	0xFE3
 33865                           fsr1h	equ	0xFE2
 33866                           fsr1l	equ	0xFE1
 33867                           indf2	equ	0xFDF
 33868                           postinc2	equ	0xFDE
 33869                           postdec2	equ	0xFDD
 33870                           plusw2	equ	0xFDB
 33871                           fsr2h	equ	0xFDA
 33872                           fsr2l	equ	0xFD9
 33873                           status	equ	0xFD8
 33874                           
 33875 ;; *************** function _HALSPISend *****************
 33876 ;; Defined at:
 33877 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33878 ;; Parameters:    Size  Location     Type
 33879 ;;  data            1    wreg     unsigned char 
 33880 ;; Auto vars:     Size  Location     Type
 33881 ;;  data            1    5[BANK0 ] unsigned char 
 33882 ;; Return value:  Size  Location     Type
 33883 ;;                  1    wreg      unsigned char 
 33884 ;; Registers used:
 33885 ;;		wreg, status,2, cstack
 33886 ;; Tracked objects:
 33887 ;;		On entry : 0/1
 33888 ;;		On exit  : 0/0
 33889 ;;		Unchanged: 0/0
 33890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33895 ;;Total ram usage:        1 bytes
 33896 ;; Hardware stack levels used:    1
 33897 ;; Hardware stack levels required when called:    8
 33898 ;; This function calls:
 33899 ;;		_SPI2_Exchange8bit
 33900 ;; This function is called by:
 33901 ;;		_RADIO_RegisterWrite
 33902 ;;		_RADIO_RegisterRead
 33903 ;;		_RADIO_Transmit
 33904 ;;		_RADIO_RxDone
 33905 ;;		_RADIO_FSKPayloadReady
 33906 ;; This function uses a non-reentrant model
 33907 ;;
 33908                           
 33909                           	psect	text175
 33910  00789A                     __ptext175:
 33911                           	opt stack 0
 33912  00789A                     _HALSPISend:
 33913                           	opt stack 17
 33914                           
 33915                           ;incstack = 0
 33916                           ;HALSPISend@data stored from wreg
 33917  00789A  0100               	movlb	0	; () banked
 33918  00789C  6F65               	movwf	HALSPISend@data& (0+255),b
 33919                           
 33920                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 33921  00789E  5165               	movf	HALSPISend@data& (0+255),w,b
 33922  0078A0  EFBE  F03B         	goto	_SPI2_Exchange8bit
 33923  0078A4                     __end_of_HALSPISend:
 33924                           	opt stack 0
 33925                           tosu	equ	0xFFF
 33926                           tosh	equ	0xFFE
 33927                           tosl	equ	0xFFD
 33928                           pclath	equ	0xFFA
 33929                           tblptru	equ	0xFF8
 33930                           tblptrh	equ	0xFF7
 33931                           tblptrl	equ	0xFF6
 33932                           tablat	equ	0xFF5
 33933                           prodh	equ	0xFF4
 33934                           prodl	equ	0xFF3
 33935                           intcon	equ	0xFF2
 33936                           intcon2	equ	0xFF1
 33937                           intcon3	equ	0xFF0
 33938                           indf0	equ	0xFEF
 33939                           postinc0	equ	0xFEE
 33940                           plusw0	equ	0xFEB
 33941                           fsr0h	equ	0xFEA
 33942                           fsr0l	equ	0xFE9
 33943                           wreg	equ	0xFE8
 33944                           postinc1	equ	0xFE6
 33945                           postdec1	equ	0xFE5
 33946                           plusw1	equ	0xFE3
 33947                           fsr1h	equ	0xFE2
 33948                           fsr1l	equ	0xFE1
 33949                           indf2	equ	0xFDF
 33950                           postinc2	equ	0xFDE
 33951                           postdec2	equ	0xFDD
 33952                           plusw2	equ	0xFDB
 33953                           fsr2h	equ	0xFDA
 33954                           fsr2l	equ	0xFD9
 33955                           status	equ	0xFD8
 33956                           
 33957 ;; *************** function _SPI2_Exchange8bit *****************
 33958 ;; Defined at:
 33959 ;;		line 77 in file "mcc_generated_files/spi2.c"
 33960 ;; Parameters:    Size  Location     Type
 33961 ;;  data            1    wreg     unsigned char 
 33962 ;; Auto vars:     Size  Location     Type
 33963 ;;  data            1    4[BANK0 ] unsigned char 
 33964 ;; Return value:  Size  Location     Type
 33965 ;;                  1    wreg      unsigned char 
 33966 ;; Registers used:
 33967 ;;		wreg, status,2
 33968 ;; Tracked objects:
 33969 ;;		On entry : F/0
 33970 ;;		On exit  : 0/0
 33971 ;;		Unchanged: 0/0
 33972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33977 ;;Total ram usage:        1 bytes
 33978 ;; Hardware stack levels used:    1
 33979 ;; Hardware stack levels required when called:    7
 33980 ;; This function calls:
 33981 ;;		Nothing
 33982 ;; This function is called by:
 33983 ;;		_HALSPISend
 33984 ;; This function uses a non-reentrant model
 33985 ;;
 33986                           
 33987                           	psect	text176
 33988  00777C                     __ptext176:
 33989                           	opt stack 0
 33990  00777C                     _SPI2_Exchange8bit:
 33991                           	opt stack 17
 33992                           
 33993                           ;incstack = 0
 33994                           ;SPI2_Exchange8bit@data stored from wreg
 33995  00777C  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 33996                           
 33997                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 33998  00777E  9E6C               	bcf	3948,7,c	;volatile
 33999                           
 34000                           ;spi2.c: 82: SSP2BUF = data;
 34001  007780  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 34002  007784                     l192:
 34003  007784  A06D               	btfss	3949,0,c	;volatile
 34004  007786  D7FE               	goto	l192
 34005                           
 34006                           ;spi2.c: 86: }
 34007                           ;spi2.c: 88: return (SSP2BUF);
 34008  007788  506F               	movf	3951,w,c	;volatile
 34009  00778A  0012               	return		;funcret
 34010  00778C                     __end_of_SPI2_Exchange8bit:
 34011                           	opt stack 0
 34012                           tosu	equ	0xFFF
 34013                           tosh	equ	0xFFE
 34014                           tosl	equ	0xFFD
 34015                           pclath	equ	0xFFA
 34016                           tblptru	equ	0xFF8
 34017                           tblptrh	equ	0xFF7
 34018                           tblptrl	equ	0xFF6
 34019                           tablat	equ	0xFF5
 34020                           prodh	equ	0xFF4
 34021                           prodl	equ	0xFF3
 34022                           intcon	equ	0xFF2
 34023                           intcon2	equ	0xFF1
 34024                           intcon3	equ	0xFF0
 34025                           indf0	equ	0xFEF
 34026                           postinc0	equ	0xFEE
 34027                           plusw0	equ	0xFEB
 34028                           fsr0h	equ	0xFEA
 34029                           fsr0l	equ	0xFE9
 34030                           wreg	equ	0xFE8
 34031                           postinc1	equ	0xFE6
 34032                           postdec1	equ	0xFE5
 34033                           plusw1	equ	0xFE3
 34034                           fsr1h	equ	0xFE2
 34035                           fsr1l	equ	0xFE1
 34036                           indf2	equ	0xFDF
 34037                           postinc2	equ	0xFDE
 34038                           postdec2	equ	0xFDD
 34039                           plusw2	equ	0xFDB
 34040                           fsr2h	equ	0xFDA
 34041                           fsr2l	equ	0xFD9
 34042                           status	equ	0xFD8
 34043                           
 34044 ;; *************** function _HALSPICSDeassert *****************
 34045 ;; Defined at:
 34046 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34047 ;; Parameters:    Size  Location     Type
 34048 ;;		None
 34049 ;; Auto vars:     Size  Location     Type
 34050 ;;		None
 34051 ;; Return value:  Size  Location     Type
 34052 ;;                  1    wreg      void 
 34053 ;; Registers used:
 34054 ;;		None
 34055 ;; Tracked objects:
 34056 ;;		On entry : 0/0
 34057 ;;		On exit  : 0/0
 34058 ;;		Unchanged: 0/0
 34059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34064 ;;Total ram usage:        0 bytes
 34065 ;; Hardware stack levels used:    1
 34066 ;; Hardware stack levels required when called:    7
 34067 ;; This function calls:
 34068 ;;		Nothing
 34069 ;; This function is called by:
 34070 ;;		_RADIO_RegisterWrite
 34071 ;;		_RADIO_RegisterRead
 34072 ;;		_RADIO_Transmit
 34073 ;;		_RADIO_RxDone
 34074 ;;		_RADIO_FSKPayloadReady
 34075 ;; This function uses a non-reentrant model
 34076 ;;
 34077                           
 34078                           	psect	text177
 34079  007948                     __ptext177:
 34080                           	opt stack 0
 34081  007948                     _HALSPICSDeassert:
 34082                           	opt stack 18
 34083                           
 34084                           ;incstack = 0
 34085                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 34086  007948  868C               	bsf	3980,3,c	;volatile
 34087  00794A  0012               	return		;funcret
 34088  00794C                     __end_of_HALSPICSDeassert:
 34089                           	opt stack 0
 34090                           tosu	equ	0xFFF
 34091                           tosh	equ	0xFFE
 34092                           tosl	equ	0xFFD
 34093                           pclath	equ	0xFFA
 34094                           tblptru	equ	0xFF8
 34095                           tblptrh	equ	0xFF7
 34096                           tblptrl	equ	0xFF6
 34097                           tablat	equ	0xFF5
 34098                           prodh	equ	0xFF4
 34099                           prodl	equ	0xFF3
 34100                           intcon	equ	0xFF2
 34101                           intcon2	equ	0xFF1
 34102                           intcon3	equ	0xFF0
 34103                           indf0	equ	0xFEF
 34104                           postinc0	equ	0xFEE
 34105                           plusw0	equ	0xFEB
 34106                           fsr0h	equ	0xFEA
 34107                           fsr0l	equ	0xFE9
 34108                           wreg	equ	0xFE8
 34109                           postinc1	equ	0xFE6
 34110                           postdec1	equ	0xFE5
 34111                           plusw1	equ	0xFE3
 34112                           fsr1h	equ	0xFE2
 34113                           fsr1l	equ	0xFE1
 34114                           indf2	equ	0xFDF
 34115                           postinc2	equ	0xFDE
 34116                           postdec2	equ	0xFDD
 34117                           plusw2	equ	0xFDB
 34118                           fsr2h	equ	0xFDA
 34119                           fsr2l	equ	0xFD9
 34120                           status	equ	0xFD8
 34121                           
 34122 ;; *************** function _HALSPICSAssert *****************
 34123 ;; Defined at:
 34124 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34125 ;; Parameters:    Size  Location     Type
 34126 ;;		None
 34127 ;; Auto vars:     Size  Location     Type
 34128 ;;		None
 34129 ;; Return value:  Size  Location     Type
 34130 ;;                  1    wreg      void 
 34131 ;; Registers used:
 34132 ;;		None
 34133 ;; Tracked objects:
 34134 ;;		On entry : 0/1
 34135 ;;		On exit  : 0/0
 34136 ;;		Unchanged: 0/0
 34137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34142 ;;Total ram usage:        0 bytes
 34143 ;; Hardware stack levels used:    1
 34144 ;; Hardware stack levels required when called:    7
 34145 ;; This function calls:
 34146 ;;		Nothing
 34147 ;; This function is called by:
 34148 ;;		_RADIO_RegisterWrite
 34149 ;;		_RADIO_RegisterRead
 34150 ;;		_RADIO_Transmit
 34151 ;;		_RADIO_RxDone
 34152 ;;		_RADIO_FSKPayloadReady
 34153 ;; This function uses a non-reentrant model
 34154 ;;
 34155                           
 34156                           	psect	text178
 34157  00794C                     __ptext178:
 34158                           	opt stack 0
 34159  00794C                     _HALSPICSAssert:
 34160                           	opt stack 18
 34161                           
 34162                           ;incstack = 0
 34163                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 34164  00794C  968C               	bcf	3980,3,c	;volatile
 34165  00794E  0012               	return		;funcret
 34166  007950                     __end_of_HALSPICSAssert:
 34167                           	opt stack 0
 34168                           tosu	equ	0xFFF
 34169                           tosh	equ	0xFFE
 34170                           tosl	equ	0xFFD
 34171                           pclath	equ	0xFFA
 34172                           tblptru	equ	0xFF8
 34173                           tblptrh	equ	0xFF7
 34174                           tblptrl	equ	0xFF6
 34175                           tablat	equ	0xFF5
 34176                           prodh	equ	0xFF4
 34177                           prodl	equ	0xFF3
 34178                           intcon	equ	0xFF2
 34179                           intcon2	equ	0xFF1
 34180                           intcon3	equ	0xFF0
 34181                           indf0	equ	0xFEF
 34182                           postinc0	equ	0xFEE
 34183                           plusw0	equ	0xFEB
 34184                           fsr0h	equ	0xFEA
 34185                           fsr0l	equ	0xFE9
 34186                           wreg	equ	0xFE8
 34187                           postinc1	equ	0xFE6
 34188                           postdec1	equ	0xFE5
 34189                           plusw1	equ	0xFE3
 34190                           fsr1h	equ	0xFE2
 34191                           fsr1l	equ	0xFE1
 34192                           indf2	equ	0xFDF
 34193                           postinc2	equ	0xFDE
 34194                           postdec2	equ	0xFDD
 34195                           plusw2	equ	0xFDB
 34196                           fsr2h	equ	0xFDA
 34197                           fsr2l	equ	0xFD9
 34198                           status	equ	0xFD8
 34199                           
 34200 ;; *************** function _RADIO_Reset *****************
 34201 ;; Defined at:
 34202 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34203 ;; Parameters:    Size  Location     Type
 34204 ;;		None
 34205 ;; Auto vars:     Size  Location     Type
 34206 ;;		None
 34207 ;; Return value:  Size  Location     Type
 34208 ;;                  1    wreg      void 
 34209 ;; Registers used:
 34210 ;;		wreg, status,2, status,0, cstack
 34211 ;; Tracked objects:
 34212 ;;		On entry : E/1
 34213 ;;		On exit  : E/0
 34214 ;;		Unchanged: 0/0
 34215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34220 ;;Total ram usage:        0 bytes
 34221 ;; Hardware stack levels used:    1
 34222 ;; Hardware stack levels required when called:    8
 34223 ;; This function calls:
 34224 ;;		_HALResetPinMakeInput
 34225 ;;		_HALResetPinMakeOutput
 34226 ;;		_HALResetPinOutputValue
 34227 ;;		_SystemBlockingWaitMs
 34228 ;; This function is called by:
 34229 ;;		_RADIO_Init
 34230 ;; This function uses a non-reentrant model
 34231 ;;
 34232                           
 34233                           	psect	text179
 34234  006FE2                     __ptext179:
 34235                           	opt stack 0
 34236  006FE2                     _RADIO_Reset:
 34237                           	opt stack 20
 34238                           
 34239                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 34240                           
 34241                           ;incstack = 0
 34242  006FE2  ECA8  F03C         	call	_HALResetPinMakeOutput	;wreg free
 34243                           
 34244                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 34245  006FE6  0E00               	movlw	0
 34246  006FE8  EC98  F03B         	call	_HALResetPinOutputValue
 34247                           
 34248                           ; BSR set to: 0
 34249                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 34250  006FEC  0E01               	movlw	1
 34251  006FEE  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34252  006FF0  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34253  006FF2  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34254  006FF4  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34255  006FF6  EC0C  F039         	call	_SystemBlockingWaitMs	;wreg free
 34256                           
 34257                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 34258  006FFA  ECAA  F03C         	call	_HALResetPinMakeInput	;wreg free
 34259                           
 34260                           ; BSR set to: 0
 34261                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 34262  006FFE  0E0A               	movlw	10
 34263  007000  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34264  007002  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34265  007004  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34266  007006  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34267  007008  EC0C  F039         	call	_SystemBlockingWaitMs	;wreg free
 34268                           
 34269                           ; BSR set to: 0
 34270                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 34271  00700C  0E01               	movlw	1
 34272  00700E  EC98  F03B         	call	_HALResetPinOutputValue
 34273                           
 34274                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 34275  007012  EFA8  F03C         	goto	_HALResetPinMakeOutput	;wreg free
 34276  007016                     __end_of_RADIO_Reset:
 34277                           	opt stack 0
 34278                           tosu	equ	0xFFF
 34279                           tosh	equ	0xFFE
 34280                           tosl	equ	0xFFD
 34281                           pclath	equ	0xFFA
 34282                           tblptru	equ	0xFF8
 34283                           tblptrh	equ	0xFF7
 34284                           tblptrl	equ	0xFF6
 34285                           tablat	equ	0xFF5
 34286                           prodh	equ	0xFF4
 34287                           prodl	equ	0xFF3
 34288                           intcon	equ	0xFF2
 34289                           intcon2	equ	0xFF1
 34290                           intcon3	equ	0xFF0
 34291                           indf0	equ	0xFEF
 34292                           postinc0	equ	0xFEE
 34293                           plusw0	equ	0xFEB
 34294                           fsr0h	equ	0xFEA
 34295                           fsr0l	equ	0xFE9
 34296                           wreg	equ	0xFE8
 34297                           postinc1	equ	0xFE6
 34298                           postdec1	equ	0xFE5
 34299                           plusw1	equ	0xFE3
 34300                           fsr1h	equ	0xFE2
 34301                           fsr1l	equ	0xFE1
 34302                           indf2	equ	0xFDF
 34303                           postinc2	equ	0xFDE
 34304                           postdec2	equ	0xFDD
 34305                           plusw2	equ	0xFDB
 34306                           fsr2h	equ	0xFDA
 34307                           fsr2l	equ	0xFD9
 34308                           status	equ	0xFD8
 34309                           
 34310 ;; *************** function _SystemBlockingWaitMs *****************
 34311 ;; Defined at:
 34312 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34313 ;; Parameters:    Size  Location     Type
 34314 ;;  ms              4    4[BANK0 ] unsigned long 
 34315 ;; Auto vars:     Size  Location     Type
 34316 ;;		None
 34317 ;; Return value:  Size  Location     Type
 34318 ;;                  1    wreg      void 
 34319 ;; Registers used:
 34320 ;;		wreg, status,2, status,0
 34321 ;; Tracked objects:
 34322 ;;		On entry : F/0
 34323 ;;		On exit  : F/0
 34324 ;;		Unchanged: 0/0
 34325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34329 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34330 ;;Total ram usage:        5 bytes
 34331 ;; Hardware stack levels used:    1
 34332 ;; Hardware stack levels required when called:    7
 34333 ;; This function calls:
 34334 ;;		Nothing
 34335 ;; This function is called by:
 34336 ;;		_RADIO_WriteMode
 34337 ;;		_RADIO_Reset
 34338 ;;		_RADIO_ReadRandom
 34339 ;; This function uses a non-reentrant model
 34340 ;;
 34341                           
 34342                           	psect	text180
 34343  007218                     __ptext180:
 34344                           	opt stack 0
 34345  007218                     _SystemBlockingWaitMs:
 34346                           	opt stack 19
 34347                           
 34348                           ; BSR set to: 0
 34349                           ;sw_timer.c: 147: while (ms > 0)
 34350                           
 34351                           ;incstack = 0
 34352  007218  D00E               	goto	l11970
 34353  00721A                     l11966:
 34354                           
 34355                           ; BSR set to: 0
 34356                           ;sw_timer.c: 148: {
 34357                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 34358  00721A  0E06               	movlw	6
 34359  00721C  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 34360  00721E  0E30               	movlw	48
 34361  007220                     u19667:
 34362  007220  2EE8               	decfsz	wreg,f,c
 34363  007222  D7FE               	goto	u19667
 34364  007224  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 34365  007226  D7FC               	goto	u19667
 34366  007228  D000               	nop2	
 34367                           
 34368                           ;sw_timer.c: 150: ms--;
 34369  00722A  0100               	movlb	0	; () banked
 34370  00722C  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 34371  00722E  0E00               	movlw	0
 34372  007230  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 34373  007232  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 34374  007234  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 34375  007236                     l11970:
 34376                           
 34377                           ; BSR set to: 0
 34378  007236  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 34379  007238  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 34380  00723A  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 34381  00723C  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 34382  00723E  E1ED               	bnz	l11966
 34383                           
 34384                           ; BSR set to: 0
 34385  007240  0012               	return		;funcret
 34386  007242                     __end_of_SystemBlockingWaitMs:
 34387                           	opt stack 0
 34388                           tosu	equ	0xFFF
 34389                           tosh	equ	0xFFE
 34390                           tosl	equ	0xFFD
 34391                           pclath	equ	0xFFA
 34392                           tblptru	equ	0xFF8
 34393                           tblptrh	equ	0xFF7
 34394                           tblptrl	equ	0xFF6
 34395                           tablat	equ	0xFF5
 34396                           prodh	equ	0xFF4
 34397                           prodl	equ	0xFF3
 34398                           intcon	equ	0xFF2
 34399                           intcon2	equ	0xFF1
 34400                           intcon3	equ	0xFF0
 34401                           indf0	equ	0xFEF
 34402                           postinc0	equ	0xFEE
 34403                           plusw0	equ	0xFEB
 34404                           fsr0h	equ	0xFEA
 34405                           fsr0l	equ	0xFE9
 34406                           wreg	equ	0xFE8
 34407                           postinc1	equ	0xFE6
 34408                           postdec1	equ	0xFE5
 34409                           plusw1	equ	0xFE3
 34410                           fsr1h	equ	0xFE2
 34411                           fsr1l	equ	0xFE1
 34412                           indf2	equ	0xFDF
 34413                           postinc2	equ	0xFDE
 34414                           postdec2	equ	0xFDD
 34415                           plusw2	equ	0xFDB
 34416                           fsr2h	equ	0xFDA
 34417                           fsr2l	equ	0xFD9
 34418                           status	equ	0xFD8
 34419                           
 34420 ;; *************** function _HALResetPinOutputValue *****************
 34421 ;; Defined at:
 34422 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34423 ;; Parameters:    Size  Location     Type
 34424 ;;  value           1    wreg     unsigned char 
 34425 ;; Auto vars:     Size  Location     Type
 34426 ;;  value           1    4[BANK0 ] unsigned char 
 34427 ;; Return value:  Size  Location     Type
 34428 ;;                  1    wreg      void 
 34429 ;; Registers used:
 34430 ;;		wreg, status,2, status,0
 34431 ;; Tracked objects:
 34432 ;;		On entry : E/1
 34433 ;;		On exit  : F/0
 34434 ;;		Unchanged: 0/0
 34435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34437 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34439 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34440 ;;Total ram usage:        1 bytes
 34441 ;; Hardware stack levels used:    1
 34442 ;; Hardware stack levels required when called:    7
 34443 ;; This function calls:
 34444 ;;		Nothing
 34445 ;; This function is called by:
 34446 ;;		_RADIO_Reset
 34447 ;; This function uses a non-reentrant model
 34448 ;;
 34449                           
 34450                           	psect	text181
 34451  007730                     __ptext181:
 34452                           	opt stack 0
 34453  007730                     _HALResetPinOutputValue:
 34454                           	opt stack 20
 34455                           
 34456                           ; BSR set to: 0
 34457                           ;incstack = 0
 34458                           ;HALResetPinOutputValue@value stored from wreg
 34459  007730  0100               	movlb	0	; () banked
 34460  007732  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 34461                           
 34462                           ;radio_driver_hal.c: 57: if (value == 0)
 34463  007734  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34464  007736  E102               	bnz	l9618
 34465                           
 34466                           ; BSR set to: 0
 34467                           
 34468                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 34469  007738  948B               	bcf	3979,2,c	;volatile
 34470  00773A  0012               	return	
 34471  00773C                     l9618:
 34472                           
 34473                           ; BSR set to: 0
 34474                           ;radio_driver_hal.c: 59: else if (value == 1)
 34475  00773C  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34476  00773E  B4D8               	btfsc	status,2,c
 34477                           
 34478                           ; BSR set to: 0
 34479                           
 34480                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 34481  007740  848B               	bsf	3979,2,c	;volatile
 34482                           
 34483                           ; BSR set to: 0
 34484  007742  0012               	return		;funcret
 34485  007744                     __end_of_HALResetPinOutputValue:
 34486                           	opt stack 0
 34487                           tosu	equ	0xFFF
 34488                           tosh	equ	0xFFE
 34489                           tosl	equ	0xFFD
 34490                           pclath	equ	0xFFA
 34491                           tblptru	equ	0xFF8
 34492                           tblptrh	equ	0xFF7
 34493                           tblptrl	equ	0xFF6
 34494                           tablat	equ	0xFF5
 34495                           prodh	equ	0xFF4
 34496                           prodl	equ	0xFF3
 34497                           intcon	equ	0xFF2
 34498                           intcon2	equ	0xFF1
 34499                           intcon3	equ	0xFF0
 34500                           indf0	equ	0xFEF
 34501                           postinc0	equ	0xFEE
 34502                           plusw0	equ	0xFEB
 34503                           fsr0h	equ	0xFEA
 34504                           fsr0l	equ	0xFE9
 34505                           wreg	equ	0xFE8
 34506                           postinc1	equ	0xFE6
 34507                           postdec1	equ	0xFE5
 34508                           plusw1	equ	0xFE3
 34509                           fsr1h	equ	0xFE2
 34510                           fsr1l	equ	0xFE1
 34511                           indf2	equ	0xFDF
 34512                           postinc2	equ	0xFDE
 34513                           postdec2	equ	0xFDD
 34514                           plusw2	equ	0xFDB
 34515                           fsr2h	equ	0xFDA
 34516                           fsr2l	equ	0xFD9
 34517                           status	equ	0xFD8
 34518                           
 34519 ;; *************** function _HALResetPinMakeOutput *****************
 34520 ;; Defined at:
 34521 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34522 ;; Parameters:    Size  Location     Type
 34523 ;;		None
 34524 ;; Auto vars:     Size  Location     Type
 34525 ;;		None
 34526 ;; Return value:  Size  Location     Type
 34527 ;;                  1    wreg      void 
 34528 ;; Registers used:
 34529 ;;		None
 34530 ;; Tracked objects:
 34531 ;;		On entry : E/1
 34532 ;;		On exit  : E/0
 34533 ;;		Unchanged: E/0
 34534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34539 ;;Total ram usage:        0 bytes
 34540 ;; Hardware stack levels used:    1
 34541 ;; Hardware stack levels required when called:    7
 34542 ;; This function calls:
 34543 ;;		Nothing
 34544 ;; This function is called by:
 34545 ;;		_RADIO_Reset
 34546 ;; This function uses a non-reentrant model
 34547 ;;
 34548                           
 34549                           	psect	text182
 34550  007950                     __ptext182:
 34551                           	opt stack 0
 34552  007950                     _HALResetPinMakeOutput:
 34553                           	opt stack 20
 34554                           
 34555                           ; BSR set to: 0
 34556                           ;incstack = 0
 34557                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 34558  007950  9494               	bcf	3988,2,c	;volatile
 34559  007952  0012               	return		;funcret
 34560  007954                     __end_of_HALResetPinMakeOutput:
 34561                           	opt stack 0
 34562                           tosu	equ	0xFFF
 34563                           tosh	equ	0xFFE
 34564                           tosl	equ	0xFFD
 34565                           pclath	equ	0xFFA
 34566                           tblptru	equ	0xFF8
 34567                           tblptrh	equ	0xFF7
 34568                           tblptrl	equ	0xFF6
 34569                           tablat	equ	0xFF5
 34570                           prodh	equ	0xFF4
 34571                           prodl	equ	0xFF3
 34572                           intcon	equ	0xFF2
 34573                           intcon2	equ	0xFF1
 34574                           intcon3	equ	0xFF0
 34575                           indf0	equ	0xFEF
 34576                           postinc0	equ	0xFEE
 34577                           plusw0	equ	0xFEB
 34578                           fsr0h	equ	0xFEA
 34579                           fsr0l	equ	0xFE9
 34580                           wreg	equ	0xFE8
 34581                           postinc1	equ	0xFE6
 34582                           postdec1	equ	0xFE5
 34583                           plusw1	equ	0xFE3
 34584                           fsr1h	equ	0xFE2
 34585                           fsr1l	equ	0xFE1
 34586                           indf2	equ	0xFDF
 34587                           postinc2	equ	0xFDE
 34588                           postdec2	equ	0xFDD
 34589                           plusw2	equ	0xFDB
 34590                           fsr2h	equ	0xFDA
 34591                           fsr2l	equ	0xFD9
 34592                           status	equ	0xFD8
 34593                           
 34594 ;; *************** function _HALResetPinMakeInput *****************
 34595 ;; Defined at:
 34596 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34597 ;; Parameters:    Size  Location     Type
 34598 ;;		None
 34599 ;; Auto vars:     Size  Location     Type
 34600 ;;		None
 34601 ;; Return value:  Size  Location     Type
 34602 ;;                  1    wreg      void 
 34603 ;; Registers used:
 34604 ;;		None
 34605 ;; Tracked objects:
 34606 ;;		On entry : F/0
 34607 ;;		On exit  : F/0
 34608 ;;		Unchanged: F/0
 34609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34614 ;;Total ram usage:        0 bytes
 34615 ;; Hardware stack levels used:    1
 34616 ;; Hardware stack levels required when called:    7
 34617 ;; This function calls:
 34618 ;;		Nothing
 34619 ;; This function is called by:
 34620 ;;		_RADIO_Reset
 34621 ;; This function uses a non-reentrant model
 34622 ;;
 34623                           
 34624                           	psect	text183
 34625  007954                     __ptext183:
 34626                           	opt stack 0
 34627  007954                     _HALResetPinMakeInput:
 34628                           	opt stack 20
 34629                           
 34630                           ; BSR set to: 0
 34631                           
 34632                           ;incstack = 0
 34633                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 34634  007954  8494               	bsf	3988,2,c	;volatile
 34635                           
 34636                           ; BSR set to: 0
 34637  007956  0012               	return		;funcret
 34638  007958                     __end_of_HALResetPinMakeInput:
 34639                           	opt stack 0
 34640                           tosu	equ	0xFFF
 34641                           tosh	equ	0xFFE
 34642                           tosl	equ	0xFFD
 34643                           pclath	equ	0xFFA
 34644                           tblptru	equ	0xFF8
 34645                           tblptrh	equ	0xFF7
 34646                           tblptrl	equ	0xFF6
 34647                           tablat	equ	0xFF5
 34648                           prodh	equ	0xFF4
 34649                           prodl	equ	0xFF3
 34650                           intcon	equ	0xFF2
 34651                           intcon2	equ	0xFF1
 34652                           intcon3	equ	0xFF0
 34653                           indf0	equ	0xFEF
 34654                           postinc0	equ	0xFEE
 34655                           plusw0	equ	0xFEB
 34656                           fsr0h	equ	0xFEA
 34657                           fsr0l	equ	0xFE9
 34658                           wreg	equ	0xFE8
 34659                           postinc1	equ	0xFE6
 34660                           postdec1	equ	0xFE5
 34661                           plusw1	equ	0xFE3
 34662                           fsr1h	equ	0xFE2
 34663                           fsr1l	equ	0xFE1
 34664                           indf2	equ	0xFDF
 34665                           postinc2	equ	0xFDE
 34666                           postdec2	equ	0xFDD
 34667                           plusw2	equ	0xFDB
 34668                           fsr2h	equ	0xFDA
 34669                           fsr2l	equ	0xFD9
 34670                           status	equ	0xFD8
 34671                           
 34672 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 34673 ;; Defined at:
 34674 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34675 ;; Parameters:    Size  Location     Type
 34676 ;;  period          2   54[BANK0 ] unsigned int 
 34677 ;; Auto vars:     Size  Location     Type
 34678 ;;  iCtr            1   68[BANK0 ] unsigned char 
 34679 ;; Return value:  Size  Location     Type
 34680 ;;                  1    wreg      void 
 34681 ;; Registers used:
 34682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34683 ;; Tracked objects:
 34684 ;;		On entry : F/0
 34685 ;;		On exit  : D/0
 34686 ;;		Unchanged: 0/0
 34687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34688 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34689 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34690 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34691 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34692 ;;Total ram usage:       15 bytes
 34693 ;; Hardware stack levels used:    1
 34694 ;; Hardware stack levels required when called:   11
 34695 ;; This function calls:
 34696 ;;		_SwTimerSetTimeout
 34697 ;;		_SwTimerStart
 34698 ;;		_SwTimerStop
 34699 ;;		___lldiv
 34700 ;; This function is called by:
 34701 ;;		_LORAWAN_Reset
 34702 ;; This function uses a non-reentrant model
 34703 ;;
 34704                           
 34705                           	psect	text184
 34706  0036EE                     __ptext184:
 34707                           	opt stack 0
 34708  0036EE                     _LORAWAN_LinkCheckConfigure:
 34709                           	opt stack 17
 34710                           
 34711                           ; BSR set to: 0
 34712                           ;lorawan.c: 757: uint8_t iCtr;
 34713                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;incstack = 0
 34717  0036EE  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34718  0036F0  6F98               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34719  0036F2  5197               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34720  0036F4  6F99               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34721  0036F6  6B9A               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34722  0036F8  6B9B               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34723  0036FA  0EE8               	movlw	232
 34724  0036FC  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34725  0036FE  CFF3 F09C          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 34726  003702  CFF4 F09D          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 34727  003706  6B9E               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 34728  003708  6B9F               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 34729  00370A  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34730  00370C  50F3               	movf	prodl,w,c
 34731  00370E  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34732  003710  50F4               	movf	prodh,w,c
 34733  003712  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34734  003714  0E00               	movlw	0
 34735  003716  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34736  003718  0E03               	movlw	3
 34737  00371A  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34738  00371C  50F3               	movf	prodl,w,c
 34739  00371E  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34740  003720  50F4               	movf	prodh,w,c
 34741  003722  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34742  003724  0E00               	movlw	0
 34743  003726  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34744  003728  0EE8               	movlw	232
 34745  00372A  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34746  00372C  50F3               	movf	prodl,w,c
 34747  00372E  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34748  003730  50F4               	movf	prodh,w,c
 34749  003732  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34750  003734  0E03               	movlw	3
 34751  003736  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34752  003738  50F3               	movf	prodl,w,c
 34753  00373A  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34754  00373C  50F4               	movf	prodh,w,c
 34755  00373E  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34756  003740  0E00               	movlw	0
 34757  003742  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34758  003744  50F3               	movf	prodl,w,c
 34759  003746  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34760  003748  50F4               	movf	prodh,w,c
 34761  00374A  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34762  00374C  0EE8               	movlw	232
 34763  00374E  039B               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34764  003750  50F3               	movf	prodl,w,c
 34765  003752  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34766  003754  0E03               	movlw	3
 34767  003756  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34768  003758  50F3               	movf	prodl,w,c
 34769  00375A  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34770  00375C  0E00               	movlw	0
 34771  00375E  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34772  003760  50F3               	movf	prodl,w,c
 34773  003762  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34774  003764  0E00               	movlw	0
 34775  003766  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34776  003768  50F3               	movf	prodl,w,c
 34777  00376A  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34778  00376C  C09C  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 34779  003770  C09D  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 34780  003774  C09E  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 34781  003778  C09F  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 34782                           
 34783                           ; BSR set to: 0
 34784                           ;lorawan.c: 761: if (period == 0)
 34785  00377C  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34786  00377E  1197               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34787  003780  E127               	bnz	l1993
 34788                           
 34789                           ; BSR set to: 0
 34790                           ;lorawan.c: 762: {
 34791                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 34792  003782  0102               	movlb	2	; () banked
 34793  003784  51E7               	movf	(_loRa+231)& (0+255),w,b
 34794  003786  EC9C  F03A         	call	_SwTimerStop
 34795                           
 34796                           ; BSR set to: 0
 34797                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 34798  00378A  0102               	movlb	2	; () banked
 34799  00378C  9503               	bcf	(_loRa+3)& (0+255),2,b
 34800                           
 34801                           ; BSR set to: 2
 34802                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 34803  00378E  0100               	movlb	0	; () banked
 34804  003790  6BA4               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 34805  003792  D018               	goto	l15014
 34806  003794                     l15006:
 34807                           
 34808                           ; BSR set to: 0
 34809                           ;lorawan.c: 766: {
 34810                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 34811  003794  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34812  003796  0D02               	mullw	2
 34813  003798  0EA8               	movlw	low (_loRa+168)
 34814  00379A  24F3               	addwf	prodl,w,c
 34815  00379C  6ED9               	movwf	fsr2l,c
 34816  00379E  0E02               	movlw	high (_loRa+168)
 34817  0037A0  20F4               	addwfc	prodh,w,c
 34818  0037A2  6EDA               	movwf	fsr2h,c
 34819  0037A4  0E02               	movlw	2
 34820  0037A6  18DE               	xorwf	postinc2,w,c
 34821  0037A8  E10B               	bnz	l15012
 34822                           
 34823                           ; BSR set to: 0
 34824                           ;lorawan.c: 768: {
 34825                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 34826  0037AA  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34827  0037AC  0D02               	mullw	2
 34828  0037AE  0EA8               	movlw	low (_loRa+168)
 34829  0037B0  24F3               	addwf	prodl,w,c
 34830  0037B2  6ED9               	movwf	fsr2l,c
 34831  0037B4  0E02               	movlw	high (_loRa+168)
 34832  0037B6  20F4               	addwfc	prodh,w,c
 34833  0037B8  6EDA               	movwf	fsr2h,c
 34834  0037BA  68DF               	setf	indf2,c
 34835                           
 34836                           ; BSR set to: 0
 34837                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 34838  0037BC  0102               	movlb	2	; () banked
 34839  0037BE  07A7               	decf	(_loRa+167)& (0+255),f,b
 34840  0037C0                     l15012:
 34841  0037C0  0100               	movlb	0	; () banked
 34842  0037C2  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 34843  0037C4                     l15014:
 34844                           
 34845                           ; BSR set to: 0
 34846  0037C4  0102               	movlb	2	; () banked
 34847  0037C6  51A7               	movf	(_loRa+167)& (0+255),w,b
 34848  0037C8  0100               	movlb	0	; () banked
 34849  0037CA  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34850  0037CC  E3E3               	bnc	l15006
 34851  0037CE  0012               	return	
 34852  0037D0                     l1993:
 34853                           
 34854                           ; BSR set to: 0
 34855                           ;lorawan.c: 776: else
 34856                           ;lorawan.c: 777: {
 34857                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 34858  0037D0  0102               	movlb	2	; () banked
 34859  0037D2  8503               	bsf	(_loRa+3)& (0+255),2,b
 34860                           
 34861                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 34862  0037D4  A902               	btfss	(_loRa+2)& (0+255),4,b
 34863  0037D6  0012               	return	
 34864                           
 34865                           ; BSR set to: 2
 34866                           ;lorawan.c: 782: {
 34867                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 34868  0037D8  51CF               	movf	(_loRa+207)& (0+255),w,b
 34869  0037DA  E106               	bnz	u17490
 34870  0037DC  29CC               	incf	(_loRa+204)& (0+255),w,b
 34871  0037DE  0EFF               	movlw	255
 34872  0037E0  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 34873  0037E2  0E0F               	movlw	15
 34874  0037E4  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 34875  0037E6  E319               	bnc	l15020
 34876  0037E8                     u17490:
 34877                           
 34878                           ; BSR set to: 2
 34879  0037E8  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 34880  0037EC  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 34881  0037F0  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 34882  0037F4  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 34883  0037F8  0E7D               	movlw	125
 34884  0037FA  0100               	movlb	0	; () banked
 34885  0037FC  6F68               	movwf	___lldiv@divisor& (0+255),b
 34886  0037FE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34887  003800  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34888  003802  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34889  003804  EC1A  F030         	call	___lldiv	;wreg free
 34890  003808  0E0C               	movlw	12
 34891  00380A                     u17505:
 34892  00380A  90D8               	bcf	status,0,c
 34893  00380C  3764               	rlcf	?___lldiv& (0+255),f,b
 34894  00380E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 34895  003810  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 34896  003812  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 34897  003814  2EE8               	decfsz	wreg,f,c
 34898  003816  D7F9               	goto	u17505
 34899  003818  D020               	goto	L21
 34900  00381A                     l15020:
 34901                           
 34902                           ; BSR set to: 2
 34903  00381A  C2CC  F098         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 34904  00381E  C2CD  F099         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 34905  003822  C2CE  F09A         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 34906  003826  C2CF  F09B         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 34907  00382A  0E0C               	movlw	12
 34908  00382C                     u17515:
 34909  00382C  90D8               	bcf	status,0,c
 34910  00382E  0100               	movlb	0	; () banked
 34911  003830  3798               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 34912  003832  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 34913  003834  379A               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 34914  003836  379B               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 34915  003838  2EE8               	decfsz	wreg,f,c
 34916  00383A  D7F8               	goto	u17515
 34917  00383C  C098  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 34918  003840  C099  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 34919  003844  C09A  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 34920  003848  C09B  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 34921  00384C  0E7D               	movlw	125
 34922  00384E  6F68               	movwf	___lldiv@divisor& (0+255),b
 34923  003850  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34924  003852  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34925  003854  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34926  003856  EC1A  F030         	call	___lldiv	;wreg free
 34927  00385A                     L21:
 34928  00385A  C064  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3502
 34929  00385E  C065  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3502+1
 34930  003862  C066  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3502+2
 34931  003866  C067  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3502+3
 34932                           
 34933                           ; BSR set to: 0
 34934  00386A  C0A0  F071         	movff	_LORAWAN_LinkCheckConfigure$3502,SwTimerSetTimeout@timeout
 34935  00386E  C0A1  F072         	movff	_LORAWAN_LinkCheckConfigure$3502+1,SwTimerSetTimeout@timeout+1
 34936  003872  C0A2  F073         	movff	_LORAWAN_LinkCheckConfigure$3502+2,SwTimerSetTimeout@timeout+2
 34937  003876  C0A3  F074         	movff	_LORAWAN_LinkCheckConfigure$3502+3,SwTimerSetTimeout@timeout+3
 34938  00387A  0102               	movlb	2	; () banked
 34939  00387C  51E7               	movf	(_loRa+231)& (0+255),w,b
 34940  00387E  EC75  F036         	call	_SwTimerSetTimeout
 34941                           
 34942                           ; BSR set to: 0
 34943                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 34944  003882  0102               	movlb	2	; () banked
 34945  003884  51E7               	movf	(_loRa+231)& (0+255),w,b
 34946  003886  EF58  F02E         	goto	_SwTimerStart
 34947  00388A                     __end_of_LORAWAN_LinkCheckConfigure:
 34948                           	opt stack 0
 34949                           tosu	equ	0xFFF
 34950                           tosh	equ	0xFFE
 34951                           tosl	equ	0xFFD
 34952                           pclath	equ	0xFFA
 34953                           tblptru	equ	0xFF8
 34954                           tblptrh	equ	0xFF7
 34955                           tblptrl	equ	0xFF6
 34956                           tablat	equ	0xFF5
 34957                           prodh	equ	0xFF4
 34958                           prodl	equ	0xFF3
 34959                           intcon	equ	0xFF2
 34960                           intcon2	equ	0xFF1
 34961                           intcon3	equ	0xFF0
 34962                           indf0	equ	0xFEF
 34963                           postinc0	equ	0xFEE
 34964                           plusw0	equ	0xFEB
 34965                           fsr0h	equ	0xFEA
 34966                           fsr0l	equ	0xFE9
 34967                           wreg	equ	0xFE8
 34968                           postinc1	equ	0xFE6
 34969                           postdec1	equ	0xFE5
 34970                           plusw1	equ	0xFE3
 34971                           fsr1h	equ	0xFE2
 34972                           fsr1l	equ	0xFE1
 34973                           indf2	equ	0xFDF
 34974                           postinc2	equ	0xFDE
 34975                           postdec2	equ	0xFDD
 34976                           plusw2	equ	0xFDB
 34977                           fsr2h	equ	0xFDA
 34978                           fsr2l	equ	0xFD9
 34979                           status	equ	0xFD8
 34980                           
 34981 ;; *************** function ___lldiv *****************
 34982 ;; Defined at:
 34983 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 34984 ;; Parameters:    Size  Location     Type
 34985 ;;  dividend        4    4[BANK0 ] unsigned long 
 34986 ;;  divisor         4    8[BANK0 ] unsigned long 
 34987 ;; Auto vars:     Size  Location     Type
 34988 ;;  quotient        4   12[BANK0 ] unsigned long 
 34989 ;;  counter         1   16[BANK0 ] unsigned char 
 34990 ;; Return value:  Size  Location     Type
 34991 ;;                  4    4[BANK0 ] unsigned long 
 34992 ;; Registers used:
 34993 ;;		wreg, status,2, status,0
 34994 ;; Tracked objects:
 34995 ;;		On entry : F/0
 34996 ;;		On exit  : F/0
 34997 ;;		Unchanged: 0/0
 34998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35000 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35002 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35003 ;;Total ram usage:       13 bytes
 35004 ;; Hardware stack levels used:    1
 35005 ;; Hardware stack levels required when called:    7
 35006 ;; This function calls:
 35007 ;;		Nothing
 35008 ;; This function is called by:
 35009 ;;		_RADIO_WriteFrequency
 35010 ;;		_RADIO_WriteFSKFrequencyDeviation
 35011 ;;		_RADIO_WriteFSKBitRate
 35012 ;;		_RADIO_Transmit
 35013 ;;		_RADIO_ReceiveStart
 35014 ;;		_LORAWAN_TxDone
 35015 ;;		_LORAWAN_RxTimeout
 35016 ;;		_StartReTxTimer
 35017 ;;		_DutyCycleCallback
 35018 ;;		_LORAWAN_LinkCheckConfigure
 35019 ;;		_LORAWAN_LinkCheckCallback
 35020 ;;		_UpdateRetransmissionAckTimeoutState
 35021 ;;		_UpdateJoinSuccessState
 35022 ;; This function uses a non-reentrant model
 35023 ;;
 35024                           
 35025                           	psect	text185
 35026  006034                     __ptext185:
 35027                           	opt stack 0
 35028  006034                     ___lldiv:
 35029                           	opt stack 20
 35030                           
 35031                           ; BSR set to: 0
 35032                           
 35033                           ;incstack = 0
 35034  006034  6B6C               	clrf	___lldiv@quotient& (0+255),b
 35035  006036  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 35036  006038  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 35037  00603A  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 35038                           
 35039                           ; BSR set to: 0
 35040  00603C  5168               	movf	___lldiv@divisor& (0+255),w,b
 35041  00603E  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35042  006040  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35043  006042  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35044  006044  E029               	bz	l3104
 35045                           
 35046                           ; BSR set to: 0
 35047  006046  0E01               	movlw	1
 35048  006048  6F70               	movwf	___lldiv@counter& (0+255),b
 35049  00604A  D006               	goto	l12106
 35050  00604C                     l12104:
 35051                           
 35052                           ; BSR set to: 0
 35053  00604C  90D8               	bcf	status,0,c
 35054  00604E  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 35055  006050  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35056  006052  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35057  006054  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35058  006056  2B70               	incf	___lldiv@counter& (0+255),f,b
 35059  006058                     l12106:
 35060                           
 35061                           ; BSR set to: 0
 35062  006058  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35063  00605A  D7F8               	goto	l12104
 35064  00605C                     l12108:
 35065                           
 35066                           ; BSR set to: 0
 35067  00605C  90D8               	bcf	status,0,c
 35068  00605E  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 35069  006060  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35070  006062  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35071  006064  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35072                           
 35073                           ; BSR set to: 0
 35074  006066  5168               	movf	___lldiv@divisor& (0+255),w,b
 35075  006068  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 35076  00606A  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35077  00606C  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35078  00606E  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35079  006070  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35080  006072  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35081  006074  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35082  006076  E309               	bnc	l12116
 35083                           
 35084                           ; BSR set to: 0
 35085  006078  5168               	movf	___lldiv@divisor& (0+255),w,b
 35086  00607A  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 35087  00607C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35088  00607E  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35089  006080  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35090  006082  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35091  006084  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35092  006086  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35093                           
 35094                           ; BSR set to: 0
 35095  006088  816C               	bsf	___lldiv@quotient& (0+255),0,b
 35096  00608A                     l12116:
 35097                           
 35098                           ; BSR set to: 0
 35099  00608A  90D8               	bcf	status,0,c
 35100  00608C  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35101  00608E  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35102  006090  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35103  006092  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 35104                           
 35105                           ; BSR set to: 0
 35106  006094  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 35107  006096  D7E2               	goto	l12108
 35108  006098                     l3104:
 35109                           
 35110                           ; BSR set to: 0
 35111  006098  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 35112  00609C  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 35113  0060A0  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 35114  0060A4  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 35115                           
 35116                           ; BSR set to: 0
 35117  0060A8  0012               	return		;funcret
 35118  0060AA                     __end_of___lldiv:
 35119                           	opt stack 0
 35120                           tosu	equ	0xFFF
 35121                           tosh	equ	0xFFE
 35122                           tosl	equ	0xFFD
 35123                           pclath	equ	0xFFA
 35124                           tblptru	equ	0xFF8
 35125                           tblptrh	equ	0xFF7
 35126                           tblptrl	equ	0xFF6
 35127                           tablat	equ	0xFF5
 35128                           prodh	equ	0xFF4
 35129                           prodl	equ	0xFF3
 35130                           intcon	equ	0xFF2
 35131                           intcon2	equ	0xFF1
 35132                           intcon3	equ	0xFF0
 35133                           indf0	equ	0xFEF
 35134                           postinc0	equ	0xFEE
 35135                           plusw0	equ	0xFEB
 35136                           fsr0h	equ	0xFEA
 35137                           fsr0l	equ	0xFE9
 35138                           wreg	equ	0xFE8
 35139                           postinc1	equ	0xFE6
 35140                           postdec1	equ	0xFE5
 35141                           plusw1	equ	0xFE3
 35142                           fsr1h	equ	0xFE2
 35143                           fsr1l	equ	0xFE1
 35144                           indf2	equ	0xFDF
 35145                           postinc2	equ	0xFDE
 35146                           postdec2	equ	0xFDD
 35147                           plusw2	equ	0xFDB
 35148                           fsr2h	equ	0xFDA
 35149                           fsr2l	equ	0xFD9
 35150                           status	equ	0xFD8
 35151                           
 35152 ;; *************** function _SwTimerStop *****************
 35153 ;; Defined at:
 35154 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35155 ;; Parameters:    Size  Location     Type
 35156 ;;  timerId         1    wreg     unsigned char 
 35157 ;; Auto vars:     Size  Location     Type
 35158 ;;  timerId         1    4[BANK0 ] unsigned char 
 35159 ;; Return value:  Size  Location     Type
 35160 ;;                  1    wreg      void 
 35161 ;; Registers used:
 35162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35163 ;; Tracked objects:
 35164 ;;		On entry : C/1
 35165 ;;		On exit  : F/0
 35166 ;;		Unchanged: 0/0
 35167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35169 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35171 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35172 ;;Total ram usage:        1 bytes
 35173 ;; Hardware stack levels used:    1
 35174 ;; Hardware stack levels required when called:    7
 35175 ;; This function calls:
 35176 ;;		Nothing
 35177 ;; This function is called by:
 35178 ;;		_RADIO_Init
 35179 ;;		_RADIO_Transmit
 35180 ;;		_RADIO_RxDone
 35181 ;;		_RADIO_FSKPayloadReady
 35182 ;;		_RADIO_RxTimeout
 35183 ;;		_RADIO_TxDone
 35184 ;;		_RADIO_FSKPacketSent
 35185 ;;		_RADIO_RxFSKTimeout
 35186 ;;		_LORAWAN_TxDone
 35187 ;;		_StopAllSoftwareTimers
 35188 ;;		_LORAWAN_LinkCheckConfigure
 35189 ;;		_LORAWAN_RxDone
 35190 ;; This function uses a non-reentrant model
 35191 ;;
 35192                           
 35193                           	psect	text186
 35194  007538                     __ptext186:
 35195                           	opt stack 0
 35196  007538                     _SwTimerStop:
 35197                           	opt stack 20
 35198                           
 35199                           ; BSR set to: 0
 35200                           ;incstack = 0
 35201                           ;SwTimerStop@timerId stored from wreg
 35202  007538  0100               	movlb	0	; () banked
 35203  00753A  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 35204                           
 35205                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 35206  00753C  9EF2               	bcf	intcon,7,c	;volatile
 35207                           
 35208                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 35209  00753E  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 35210  007540  0D08               	mullw	8
 35211  007542  0E04               	movlw	low (_swTimers+4)
 35212  007544  24F3               	addwf	prodl,w,c
 35213  007546  6ED9               	movwf	fsr2l,c
 35214  007548  0E03               	movlw	high (_swTimers+4)
 35215  00754A  20F4               	addwfc	prodh,w,c
 35216  00754C  6EDA               	movwf	fsr2h,c
 35217  00754E  6ADF               	clrf	indf2,c
 35218                           
 35219                           ; BSR set to: 0
 35220                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 35221  007550  8EF2               	bsf	intcon,7,c	;volatile
 35222                           
 35223                           ; BSR set to: 0
 35224  007552  0C00               	retlw	0	;funcret
 35225  007554                     __end_of_SwTimerStop:
 35226                           	opt stack 0
 35227                           tosu	equ	0xFFF
 35228                           tosh	equ	0xFFE
 35229                           tosl	equ	0xFFD
 35230                           pclath	equ	0xFFA
 35231                           tblptru	equ	0xFF8
 35232                           tblptrh	equ	0xFF7
 35233                           tblptrl	equ	0xFF6
 35234                           tablat	equ	0xFF5
 35235                           prodh	equ	0xFF4
 35236                           prodl	equ	0xFF3
 35237                           intcon	equ	0xFF2
 35238                           intcon2	equ	0xFF1
 35239                           intcon3	equ	0xFF0
 35240                           indf0	equ	0xFEF
 35241                           postinc0	equ	0xFEE
 35242                           plusw0	equ	0xFEB
 35243                           fsr0h	equ	0xFEA
 35244                           fsr0l	equ	0xFE9
 35245                           wreg	equ	0xFE8
 35246                           postinc1	equ	0xFE6
 35247                           postdec1	equ	0xFE5
 35248                           plusw1	equ	0xFE3
 35249                           fsr1h	equ	0xFE2
 35250                           fsr1l	equ	0xFE1
 35251                           indf2	equ	0xFDF
 35252                           postinc2	equ	0xFDE
 35253                           postdec2	equ	0xFDD
 35254                           plusw2	equ	0xFDB
 35255                           fsr2h	equ	0xFDA
 35256                           fsr2l	equ	0xFD9
 35257                           status	equ	0xFD8
 35258                           
 35259 ;; *************** function _SwTimerStart *****************
 35260 ;; Defined at:
 35261 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35262 ;; Parameters:    Size  Location     Type
 35263 ;;  timerId         1    wreg     unsigned char 
 35264 ;; Auto vars:     Size  Location     Type
 35265 ;;  timerId         1   53[BANK0 ] unsigned char 
 35266 ;;  ticksRemaini    4   49[BANK0 ] unsigned long 
 35267 ;; Return value:  Size  Location     Type
 35268 ;;                  1    wreg      void 
 35269 ;; Registers used:
 35270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35271 ;; Tracked objects:
 35272 ;;		On entry : C/2
 35273 ;;		On exit  : F/0
 35274 ;;		Unchanged: 0/0
 35275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35277 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35278 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35279 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35280 ;;Total ram usage:        9 bytes
 35281 ;; Hardware stack levels used:    1
 35282 ;; Hardware stack levels required when called:   10
 35283 ;; This function calls:
 35284 ;;		_SwTimersInterrupt
 35285 ;;		_TMR_OverrideRemaining
 35286 ;; This function is called by:
 35287 ;;		_RADIO_Transmit
 35288 ;;		_RADIO_ReceiveStart
 35289 ;;		_LORAWAN_TxDone
 35290 ;;		_LORAWAN_RxTimeout
 35291 ;;		_StartReTxTimer
 35292 ;;		_DutyCycleCallback
 35293 ;;		_LORAWAN_Join
 35294 ;;		_LORAWAN_LinkCheckConfigure
 35295 ;;		_LORAWAN_LinkCheckCallback
 35296 ;;		_UpdateRetransmissionAckTimeoutState
 35297 ;;		_UpdateJoinSuccessState
 35298 ;; This function uses a non-reentrant model
 35299 ;;
 35300                           
 35301                           	psect	text187
 35302  005CB0                     __ptext187:
 35303                           	opt stack 0
 35304  005CB0                     _SwTimerStart:
 35305                           	opt stack 17
 35306                           
 35307                           ; BSR set to: 0
 35308                           ;incstack = 0
 35309                           ;SwTimerStart@timerId stored from wreg
 35310  005CB0  0100               	movlb	0	; () banked
 35311  005CB2  6F95               	movwf	SwTimerStart@timerId& (0+255),b
 35312                           
 35313                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 35314                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 35315  005CB4  9EF2               	bcf	intcon,7,c	;volatile
 35316                           
 35317                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 35318  005CB6  ECB6  F025         	call	_SwTimersInterrupt	;wreg free
 35319  005CBA  C07C  F091         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 35320  005CBE  C07D  F092         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 35321  005CC2  C07E  F093         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 35322  005CC6  C07F  F094         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 35323                           
 35324                           ; BSR set to: 0
 35325                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 35326  005CCA  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35327  005CCC  0D08               	mullw	8
 35328  005CCE  0E00               	movlw	low _swTimers
 35329  005CD0  24F3               	addwf	prodl,w,c
 35330  005CD2  6ED9               	movwf	fsr2l,c
 35331  005CD4  0E03               	movlw	high _swTimers
 35332  005CD6  20F4               	addwfc	prodh,w,c
 35333  005CD8  6EDA               	movwf	fsr2h,c
 35334  005CDA  5191               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 35335  005CDC  5CDE               	subwf	postinc2,w,c
 35336  005CDE  5192               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 35337  005CE0  58DE               	subwfb	postinc2,w,c
 35338  005CE2  5193               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 35339  005CE4  58DE               	subwfb	postinc2,w,c
 35340  005CE6  5194               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 35341  005CE8  58DE               	subwfb	postinc2,w,c
 35342  005CEA  E210               	bc	l12452
 35343                           
 35344                           ; BSR set to: 0
 35345                           ;sw_timer.c: 225: {
 35346                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 35347  005CEC  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35348  005CEE  0D08               	mullw	8
 35349  005CF0  0E00               	movlw	low _swTimers
 35350  005CF2  24F3               	addwf	prodl,w,c
 35351  005CF4  6ED9               	movwf	fsr2l,c
 35352  005CF6  0E03               	movlw	high _swTimers
 35353  005CF8  20F4               	addwfc	prodh,w,c
 35354  005CFA  6EDA               	movwf	fsr2h,c
 35355  005CFC  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining
 35356  005D00  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+1
 35357  005D04  CFDE F093          	movff	postinc2,SwTimerStart@ticksRemaining+2
 35358  005D08  CFDE F094          	movff	postinc2,SwTimerStart@ticksRemaining+3
 35359  005D0C                     l12452:
 35360                           
 35361                           ; BSR set to: 0
 35362                           ;sw_timer.c: 227: }
 35363                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 35364  005D0C  C091  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 35365  005D10  C092  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 35366  005D14  C093  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 35367  005D18  C094  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 35368  005D1C  ECDC  F02F         	call	_TMR_OverrideRemaining	;wreg free
 35369                           
 35370                           ; BSR set to: 0
 35371                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 35372  005D20  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35373  005D22  0D08               	mullw	8
 35374  005D24  0E04               	movlw	low (_swTimers+4)
 35375  005D26  24F3               	addwf	prodl,w,c
 35376  005D28  6ED9               	movwf	fsr2l,c
 35377  005D2A  0E03               	movlw	high (_swTimers+4)
 35378  005D2C  20F4               	addwfc	prodh,w,c
 35379  005D2E  6EDA               	movwf	fsr2h,c
 35380  005D30  0E01               	movlw	1
 35381  005D32  6EDF               	movwf	indf2,c
 35382                           
 35383                           ; BSR set to: 0
 35384                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 35385  005D34  8EF2               	bsf	intcon,7,c	;volatile
 35386                           
 35387                           ; BSR set to: 0
 35388  005D36  0C01               	retlw	1	;funcret
 35389  005D38                     __end_of_SwTimerStart:
 35390                           	opt stack 0
 35391                           tosu	equ	0xFFF
 35392                           tosh	equ	0xFFE
 35393                           tosl	equ	0xFFD
 35394                           pclath	equ	0xFFA
 35395                           tblptru	equ	0xFF8
 35396                           tblptrh	equ	0xFF7
 35397                           tblptrl	equ	0xFF6
 35398                           tablat	equ	0xFF5
 35399                           prodh	equ	0xFF4
 35400                           prodl	equ	0xFF3
 35401                           intcon	equ	0xFF2
 35402                           intcon2	equ	0xFF1
 35403                           intcon3	equ	0xFF0
 35404                           indf0	equ	0xFEF
 35405                           postinc0	equ	0xFEE
 35406                           plusw0	equ	0xFEB
 35407                           fsr0h	equ	0xFEA
 35408                           fsr0l	equ	0xFE9
 35409                           wreg	equ	0xFE8
 35410                           postinc1	equ	0xFE6
 35411                           postdec1	equ	0xFE5
 35412                           plusw1	equ	0xFE3
 35413                           fsr1h	equ	0xFE2
 35414                           fsr1l	equ	0xFE1
 35415                           indf2	equ	0xFDF
 35416                           postinc2	equ	0xFDE
 35417                           postdec2	equ	0xFDD
 35418                           plusw2	equ	0xFDB
 35419                           fsr2h	equ	0xFDA
 35420                           fsr2l	equ	0xFD9
 35421                           status	equ	0xFD8
 35422                           
 35423 ;; *************** function _TMR_OverrideRemaining *****************
 35424 ;; Defined at:
 35425 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35426 ;; Parameters:    Size  Location     Type
 35427 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 35428 ;; Auto vars:     Size  Location     Type
 35429 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 35430 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 35431 ;; Return value:  Size  Location     Type
 35432 ;;                  1    wreg      void 
 35433 ;; Registers used:
 35434 ;;		wreg, status,2, status,0, cstack
 35435 ;; Tracked objects:
 35436 ;;		On entry : F/0
 35437 ;;		On exit  : F/0
 35438 ;;		Unchanged: 0/0
 35439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35441 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35443 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35444 ;;Total ram usage:       10 bytes
 35445 ;; Hardware stack levels used:    1
 35446 ;; Hardware stack levels required when called:    9
 35447 ;; This function calls:
 35448 ;;		_TMR_SwapTimer
 35449 ;; This function is called by:
 35450 ;;		_SwTimerStart
 35451 ;; This function uses a non-reentrant model
 35452 ;;
 35453                           
 35454                           	psect	text188
 35455  005FB8                     __ptext188:
 35456                           	opt stack 0
 35457  005FB8                     _TMR_OverrideRemaining:
 35458                           	opt stack 17
 35459                           
 35460                           ; BSR set to: 0
 35461                           ;sw_timer.c: 67: uint16_t tmrVal;
 35462                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35463                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35464                           
 35465                           ; BSR set to: 0
 35466                           ;incstack = 0
 35467  005FB8  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35468  005FBA  1058               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35469  005FBC  1057               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35470  005FBE  E104               	bnz	u12790
 35471  005FC0  0E0B               	movlw	11
 35472  005FC2  5C56               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35473  005FC4  A0D8               	btfss	status,0,c
 35474  005FC6  0012               	return	
 35475  005FC8                     u12790:
 35476                           
 35477                           ; BSR set to: 0
 35478                           ;sw_timer.c: 72: {
 35479                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35480  005FC8  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35481  005FCA  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35482  005FCC  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35483  005FCE  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35484  005FD0  5058               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35485  005FD2  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35486  005FD4  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35487  005FD6  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 35488  005FD8  B0D8               	btfsc	status,0,c
 35489  005FDA  0012               	return	
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;sw_timer.c: 74: {
 35493                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 35494  005FDC  C06E  F056         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 35495  005FE0  C06F  F057         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 35496  005FE4  C070  F058         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 35497  005FE8  C071  F059         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 35498                           
 35499                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 35500  005FEC  C0EC  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 35501  005FF0  C0ED  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 35502                           
 35503                           ; BSR set to: 0
 35504                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 35505  005FF4  516E               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35506  005FF6  0800               	sublw	0
 35507  005FF8  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 35508  005FFA  516F               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35509  005FFC  A0D8               	btfss	status,0,c
 35510  005FFE  2AE8               	incf	wreg,f,c
 35511  006000  0800               	sublw	0
 35512  006002  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 35513                           
 35514                           ; BSR set to: 0
 35515                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 35516  006004  C0EC  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 35517  006008  C0ED  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 35518  00600C  ECD4  F036         	call	_TMR_SwapTimer	;wreg free
 35519  006010  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 35520  006014  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 35521                           
 35522                           ; BSR set to: 0
 35523                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 35524  006018  5176               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 35525  00601A  5D74               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 35526  00601C  6F72               	movwf	??_TMR_OverrideRemaining& (0+255),b
 35527  00601E  5177               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 35528  006020  5975               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 35529  006022  6F73               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 35530  006024  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 35531  006026  263A               	addwf	_ticksAdded,f,c	;volatile
 35532  006028  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 35533  00602A  223B               	addwfc	_ticksAdded+1,f,c	;volatile
 35534  00602C  0E00               	movlw	0
 35535  00602E  223C               	addwfc	_ticksAdded+2,f,c	;volatile
 35536  006030  223D               	addwfc	_ticksAdded+3,f,c	;volatile
 35537                           
 35538                           ; BSR set to: 0
 35539  006032  0C00               	retlw	0	;funcret
 35540  006034                     __end_of_TMR_OverrideRemaining:
 35541                           	opt stack 0
 35542                           tosu	equ	0xFFF
 35543                           tosh	equ	0xFFE
 35544                           tosl	equ	0xFFD
 35545                           pclath	equ	0xFFA
 35546                           tblptru	equ	0xFF8
 35547                           tblptrh	equ	0xFF7
 35548                           tblptrl	equ	0xFF6
 35549                           tablat	equ	0xFF5
 35550                           prodh	equ	0xFF4
 35551                           prodl	equ	0xFF3
 35552                           intcon	equ	0xFF2
 35553                           intcon2	equ	0xFF1
 35554                           intcon3	equ	0xFF0
 35555                           indf0	equ	0xFEF
 35556                           postinc0	equ	0xFEE
 35557                           plusw0	equ	0xFEB
 35558                           fsr0h	equ	0xFEA
 35559                           fsr0l	equ	0xFE9
 35560                           wreg	equ	0xFE8
 35561                           postinc1	equ	0xFE6
 35562                           postdec1	equ	0xFE5
 35563                           plusw1	equ	0xFE3
 35564                           fsr1h	equ	0xFE2
 35565                           fsr1l	equ	0xFE1
 35566                           indf2	equ	0xFDF
 35567                           postinc2	equ	0xFDE
 35568                           postdec2	equ	0xFDD
 35569                           plusw2	equ	0xFDB
 35570                           fsr2h	equ	0xFDA
 35571                           fsr2l	equ	0xFD9
 35572                           status	equ	0xFD8
 35573                           
 35574 ;; *************** function _TMR_SwapTimer *****************
 35575 ;; Defined at:
 35576 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35577 ;; Parameters:    Size  Location     Type
 35578 ;;  timerVal        2   12[BANK0 ] unsigned int 
 35579 ;; Auto vars:     Size  Location     Type
 35580 ;;		None
 35581 ;; Return value:  Size  Location     Type
 35582 ;;                  2   12[BANK0 ] unsigned int 
 35583 ;; Registers used:
 35584 ;;		wreg, status,2, status,0, cstack
 35585 ;; Tracked objects:
 35586 ;;		On entry : F/0
 35587 ;;		On exit  : F/0
 35588 ;;		Unchanged: 0/0
 35589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35594 ;;Total ram usage:        2 bytes
 35595 ;; Hardware stack levels used:    1
 35596 ;; Hardware stack levels required when called:    8
 35597 ;; This function calls:
 35598 ;;		_TMR1_ReadTimer
 35599 ;;		_TMR1_WriteTimer
 35600 ;; This function is called by:
 35601 ;;		_TMR_OverrideRemaining
 35602 ;; This function uses a non-reentrant model
 35603 ;;
 35604                           
 35605                           	psect	text189
 35606  006DA8                     __ptext189:
 35607                           	opt stack 0
 35608  006DA8                     _TMR_SwapTimer:
 35609                           	opt stack 17
 35610                           
 35611                           ; BSR set to: 0
 35612                           ;sw_timer.c: 114: static uint16_t oldVal;
 35613                           ;sw_timer.c: 115: static uint16_t retVal;
 35614                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 35615                           
 35616                           ; BSR set to: 0
 35617                           ;incstack = 0
 35618  006DA8  EC7E  F03A         	call	_TMR1_ReadTimer	;wreg free
 35619  006DAC  C064  F040         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 35620  006DB0  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 35621  006DB4                     l11932:
 35622                           
 35623                           ; BSR set to: 0
 35624  006DB4  EC7E  F03A         	call	_TMR1_ReadTimer	;wreg free
 35625  006DB8  5040               	movf	TMR_SwapTimer@oldVal,w,c
 35626  006DBA  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 35627  006DBC  E103               	bnz	u12580
 35628  006DBE  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 35629  006DC0  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 35630  006DC2  E0F8               	bz	l11932
 35631  006DC4                     u12580:
 35632                           
 35633                           ; BSR set to: 0
 35634                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 35635  006DC4  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 35636  006DC8  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 35637  006DCC  ECAA  F03A         	call	_TMR1_WriteTimer	;wreg free
 35638                           
 35639                           ; BSR set to: 0
 35640                           ;sw_timer.c: 128: oldVal++;
 35641  006DD0  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 35642  006DD2  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 35643                           
 35644                           ; BSR set to: 0
 35645                           ;sw_timer.c: 130: retVal = oldVal;
 35646  006DD4  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 35647  006DD8  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 35648                           
 35649                           ; BSR set to: 0
 35650                           ;sw_timer.c: 132: return retVal;
 35651  006DDC  C042  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 35652  006DE0  C043  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 35653                           
 35654                           ; BSR set to: 0
 35655  006DE4  0012               	return		;funcret
 35656  006DE6                     __end_of_TMR_SwapTimer:
 35657                           	opt stack 0
 35658                           tosu	equ	0xFFF
 35659                           tosh	equ	0xFFE
 35660                           tosl	equ	0xFFD
 35661                           pclath	equ	0xFFA
 35662                           tblptru	equ	0xFF8
 35663                           tblptrh	equ	0xFF7
 35664                           tblptrl	equ	0xFF6
 35665                           tablat	equ	0xFF5
 35666                           prodh	equ	0xFF4
 35667                           prodl	equ	0xFF3
 35668                           intcon	equ	0xFF2
 35669                           intcon2	equ	0xFF1
 35670                           intcon3	equ	0xFF0
 35671                           indf0	equ	0xFEF
 35672                           postinc0	equ	0xFEE
 35673                           plusw0	equ	0xFEB
 35674                           fsr0h	equ	0xFEA
 35675                           fsr0l	equ	0xFE9
 35676                           wreg	equ	0xFE8
 35677                           postinc1	equ	0xFE6
 35678                           postdec1	equ	0xFE5
 35679                           plusw1	equ	0xFE3
 35680                           fsr1h	equ	0xFE2
 35681                           fsr1l	equ	0xFE1
 35682                           indf2	equ	0xFDF
 35683                           postinc2	equ	0xFDE
 35684                           postdec2	equ	0xFDD
 35685                           plusw2	equ	0xFDB
 35686                           fsr2h	equ	0xFDA
 35687                           fsr2l	equ	0xFD9
 35688                           status	equ	0xFD8
 35689                           
 35690 ;; *************** function _TMR1_WriteTimer *****************
 35691 ;; Defined at:
 35692 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 35693 ;; Parameters:    Size  Location     Type
 35694 ;;  timerVal        2    4[BANK0 ] unsigned int 
 35695 ;; Auto vars:     Size  Location     Type
 35696 ;;		None
 35697 ;; Return value:  Size  Location     Type
 35698 ;;                  1    wreg      void 
 35699 ;; Registers used:
 35700 ;;		None
 35701 ;; Tracked objects:
 35702 ;;		On entry : F/0
 35703 ;;		On exit  : F/0
 35704 ;;		Unchanged: F/0
 35705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35706 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35710 ;;Total ram usage:        2 bytes
 35711 ;; Hardware stack levels used:    1
 35712 ;; Hardware stack levels required when called:    7
 35713 ;; This function calls:
 35714 ;;		Nothing
 35715 ;; This function is called by:
 35716 ;;		_TMR_SwapTimer
 35717 ;; This function uses a non-reentrant model
 35718 ;;
 35719                           
 35720                           	psect	text190
 35721  007554                     __ptext190:
 35722                           	opt stack 0
 35723  007554                     _TMR1_WriteTimer:
 35724                           	opt stack 17
 35725                           
 35726                           ; BSR set to: 0
 35727                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 35728                           
 35729                           ; BSR set to: 0
 35730                           ;incstack = 0
 35731  007554  A4CD               	btfss	4045,2,c	;volatile
 35732  007556  D007               	goto	l1347
 35733                           
 35734                           ; BSR set to: 0
 35735                           ;tmr1.c: 123: {
 35736                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 35737  007558  90CD               	bcf	4045,0,c	;volatile
 35738                           
 35739                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 35740  00755A  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35741                           
 35742                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 35743  00755E  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35744                           
 35745                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 35746  007562  80CD               	bsf	4045,0,c	;volatile
 35747                           
 35748                           ;tmr1.c: 133: }
 35749  007564  0012               	return	
 35750  007566                     l1347:
 35751                           
 35752                           ; BSR set to: 0
 35753                           ;tmr1.c: 134: else
 35754                           ;tmr1.c: 135: {
 35755                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 35756  007566  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35757                           
 35758                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 35759  00756A  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35760                           
 35761                           ; BSR set to: 0
 35762  00756E  0012               	return		;funcret
 35763  007570                     __end_of_TMR1_WriteTimer:
 35764                           	opt stack 0
 35765                           tosu	equ	0xFFF
 35766                           tosh	equ	0xFFE
 35767                           tosl	equ	0xFFD
 35768                           pclath	equ	0xFFA
 35769                           tblptru	equ	0xFF8
 35770                           tblptrh	equ	0xFF7
 35771                           tblptrl	equ	0xFF6
 35772                           tablat	equ	0xFF5
 35773                           prodh	equ	0xFF4
 35774                           prodl	equ	0xFF3
 35775                           intcon	equ	0xFF2
 35776                           intcon2	equ	0xFF1
 35777                           intcon3	equ	0xFF0
 35778                           indf0	equ	0xFEF
 35779                           postinc0	equ	0xFEE
 35780                           plusw0	equ	0xFEB
 35781                           fsr0h	equ	0xFEA
 35782                           fsr0l	equ	0xFE9
 35783                           wreg	equ	0xFE8
 35784                           postinc1	equ	0xFE6
 35785                           postdec1	equ	0xFE5
 35786                           plusw1	equ	0xFE3
 35787                           fsr1h	equ	0xFE2
 35788                           fsr1l	equ	0xFE1
 35789                           indf2	equ	0xFDF
 35790                           postinc2	equ	0xFDE
 35791                           postdec2	equ	0xFDD
 35792                           plusw2	equ	0xFDB
 35793                           fsr2h	equ	0xFDA
 35794                           fsr2l	equ	0xFD9
 35795                           status	equ	0xFD8
 35796                           
 35797 ;; *************** function _SwTimersInterrupt *****************
 35798 ;; Defined at:
 35799 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35800 ;; Parameters:    Size  Location     Type
 35801 ;;		None
 35802 ;; Auto vars:     Size  Location     Type
 35803 ;;  ticksToNextT    4   40[BANK0 ] unsigned long 
 35804 ;;  timeElapsed     4   36[BANK0 ] unsigned long 
 35805 ;;  i               1   44[BANK0 ] unsigned char 
 35806 ;; Return value:  Size  Location     Type
 35807 ;;                  4   28[BANK0 ] unsigned long 
 35808 ;; Registers used:
 35809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35810 ;; Tracked objects:
 35811 ;;		On entry : 0/0
 35812 ;;		On exit  : F/0
 35813 ;;		Unchanged: 0/0
 35814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35815 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35816 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35818 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35819 ;;Total ram usage:       17 bytes
 35820 ;; Hardware stack levels used:    1
 35821 ;; Hardware stack levels required when called:    9
 35822 ;; This function calls:
 35823 ;;		_TMR_GetDeltaTime
 35824 ;; This function is called by:
 35825 ;;		_SwTimerReadValue
 35826 ;;		_SwTimerStart
 35827 ;; This function uses a non-reentrant model
 35828 ;;
 35829                           
 35830                           	psect	text191
 35831  004B6C                     __ptext191:
 35832                           	opt stack 0
 35833  004B6C                     _SwTimersInterrupt:
 35834                           	opt stack 17
 35835                           
 35836                           ;sw_timer.c: 289: uint8_t i;
 35837                           ;sw_timer.c: 290: uint32_t timeElapsed;
 35838                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 35839                           
 35840                           ; BSR set to: 0
 35841                           ;incstack = 0
 35842  004B6C  0100               	movlb	0	; () banked
 35843  004B6E  6988               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 35844  004B70  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 35845  004B72  698A               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 35846  004B74  698B               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 35847                           
 35848                           ; BSR set to: 0
 35849                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 35850  004B76  ECA4  F026         	call	_TMR_GetDeltaTime	;wreg free
 35851  004B7A  C06C  F084         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 35852  004B7E  C06D  F085         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 35853  004B82  C06E  F086         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 35854  004B86  C06F  F087         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 35855                           
 35856                           ; BSR set to: 0
 35857                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 35858  004B8A  6B8C               	clrf	SwTimersInterrupt@i& (0+255),b
 35859  004B8C  D05A               	goto	l12166
 35860  004B8E                     l12154:
 35861                           
 35862                           ; BSR set to: 0
 35863                           ;sw_timer.c: 298: {
 35864                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 35865  004B8E  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35866  004B90  0D08               	mullw	8
 35867  004B92  0E04               	movlw	low (_swTimers+4)
 35868  004B94  24F3               	addwf	prodl,w,c
 35869  004B96  6ED9               	movwf	fsr2l,c
 35870  004B98  0E03               	movlw	high (_swTimers+4)
 35871  004B9A  20F4               	addwfc	prodh,w,c
 35872  004B9C  6EDA               	movwf	fsr2h,c
 35873  004B9E  04DE               	decf	postinc2,w,c
 35874  004BA0  E14F               	bnz	l12164
 35875                           
 35876                           ; BSR set to: 0
 35877                           ;sw_timer.c: 302: {
 35878                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 35879  004BA2  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35880  004BA4  0D08               	mullw	8
 35881  004BA6  0E00               	movlw	low _swTimers
 35882  004BA8  24F3               	addwf	prodl,w,c
 35883  004BAA  6ED9               	movwf	fsr2l,c
 35884  004BAC  0E03               	movlw	high _swTimers
 35885  004BAE  20F4               	addwfc	prodh,w,c
 35886  004BB0  6EDA               	movwf	fsr2h,c
 35887  004BB2  50DE               	movf	postinc2,w,c
 35888  004BB4  5D84               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35889  004BB6  50DE               	movf	postinc2,w,c
 35890  004BB8  5985               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35891  004BBA  50DE               	movf	postinc2,w,c
 35892  004BBC  5986               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35893  004BBE  50DE               	movf	postinc2,w,c
 35894  004BC0  5987               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35895  004BC2  E30D               	bnc	l12160
 35896                           
 35897                           ; BSR set to: 0
 35898                           ;sw_timer.c: 304: {
 35899                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 35900  004BC4  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35901  004BC6  0D08               	mullw	8
 35902  004BC8  0E00               	movlw	low _swTimers
 35903  004BCA  24F3               	addwf	prodl,w,c
 35904  004BCC  6ED9               	movwf	fsr2l,c
 35905  004BCE  0E03               	movlw	high _swTimers
 35906  004BD0  20F4               	addwfc	prodh,w,c
 35907  004BD2  6EDA               	movwf	fsr2h,c
 35908  004BD4  6ADE               	clrf	postinc2,c
 35909  004BD6  6ADE               	clrf	postinc2,c
 35910  004BD8  6ADE               	clrf	postinc2,c
 35911  004BDA  6ADD               	clrf	postdec2,c
 35912                           
 35913                           ;sw_timer.c: 306: }
 35914  004BDC  D031               	goto	l12164
 35915  004BDE                     l12160:
 35916                           
 35917                           ; BSR set to: 0
 35918                           ;sw_timer.c: 307: else
 35919                           ;sw_timer.c: 308: {
 35920                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 35921  004BDE  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35922  004BE0  0D08               	mullw	8
 35923  004BE2  0E00               	movlw	low _swTimers
 35924  004BE4  24F3               	addwf	prodl,w,c
 35925  004BE6  6ED9               	movwf	fsr2l,c
 35926  004BE8  0E03               	movlw	high _swTimers
 35927  004BEA  20F4               	addwfc	prodh,w,c
 35928  004BEC  6EDA               	movwf	fsr2h,c
 35929  004BEE  5184               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35930  004BF0  5EDE               	subwf	postinc2,f,c
 35931  004BF2  5185               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35932  004BF4  5ADE               	subwfb	postinc2,f,c
 35933  004BF6  5186               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35934  004BF8  5ADE               	subwfb	postinc2,f,c
 35935  004BFA  5187               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35936  004BFC  5ADE               	subwfb	postinc2,f,c
 35937                           
 35938                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 35939  004BFE  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35940  004C00  0D08               	mullw	8
 35941  004C02  0E00               	movlw	low _swTimers
 35942  004C04  24F3               	addwf	prodl,w,c
 35943  004C06  6ED9               	movwf	fsr2l,c
 35944  004C08  0E03               	movlw	high _swTimers
 35945  004C0A  20F4               	addwfc	prodh,w,c
 35946  004C0C  6EDA               	movwf	fsr2h,c
 35947  004C0E  5188               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 35948  004C10  5CDE               	subwf	postinc2,w,c
 35949  004C12  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 35950  004C14  58DE               	subwfb	postinc2,w,c
 35951  004C16  518A               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 35952  004C18  58DE               	subwfb	postinc2,w,c
 35953  004C1A  518B               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 35954  004C1C  58DE               	subwfb	postinc2,w,c
 35955  004C1E  E210               	bc	l12164
 35956                           
 35957                           ; BSR set to: 0
 35958                           ;sw_timer.c: 313: {
 35959                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 35960  004C20  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35961  004C22  0D08               	mullw	8
 35962  004C24  0E00               	movlw	low _swTimers
 35963  004C26  24F3               	addwf	prodl,w,c
 35964  004C28  6ED9               	movwf	fsr2l,c
 35965  004C2A  0E03               	movlw	high _swTimers
 35966  004C2C  20F4               	addwfc	prodh,w,c
 35967  004C2E  6EDA               	movwf	fsr2h,c
 35968  004C30  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 35969  004C34  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 35970  004C38  CFDE F08A          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 35971  004C3C  CFDE F08B          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 35972  004C40                     l12164:
 35973                           
 35974                           ; BSR set to: 0
 35975  004C40  2B8C               	incf	SwTimersInterrupt@i& (0+255),f,b
 35976  004C42                     l12166:
 35977                           
 35978                           ; BSR set to: 0
 35979  004C42  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 35980  004C44  5D8C               	subwf	SwTimersInterrupt@i& (0+255),w,b
 35981  004C46  E3A3               	bnc	l12154
 35982                           
 35983                           ; BSR set to: 0
 35984                           ;sw_timer.c: 315: }
 35985                           ;sw_timer.c: 316: }
 35986                           ;sw_timer.c: 317: }
 35987                           ;sw_timer.c: 318: }
 35988                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 35989  004C48  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 35990  004C4C  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 35991  004C50  C08A  F07E         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 35992  004C54  C08B  F07F         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 35993                           
 35994                           ; BSR set to: 0
 35995  004C58  0012               	return		;funcret
 35996  004C5A                     __end_of_SwTimersInterrupt:
 35997                           	opt stack 0
 35998                           tosu	equ	0xFFF
 35999                           tosh	equ	0xFFE
 36000                           tosl	equ	0xFFD
 36001                           pclath	equ	0xFFA
 36002                           tblptru	equ	0xFF8
 36003                           tblptrh	equ	0xFF7
 36004                           tblptrl	equ	0xFF6
 36005                           tablat	equ	0xFF5
 36006                           prodh	equ	0xFF4
 36007                           prodl	equ	0xFF3
 36008                           intcon	equ	0xFF2
 36009                           intcon2	equ	0xFF1
 36010                           intcon3	equ	0xFF0
 36011                           indf0	equ	0xFEF
 36012                           postinc0	equ	0xFEE
 36013                           plusw0	equ	0xFEB
 36014                           fsr0h	equ	0xFEA
 36015                           fsr0l	equ	0xFE9
 36016                           wreg	equ	0xFE8
 36017                           postinc1	equ	0xFE6
 36018                           postdec1	equ	0xFE5
 36019                           plusw1	equ	0xFE3
 36020                           fsr1h	equ	0xFE2
 36021                           fsr1l	equ	0xFE1
 36022                           indf2	equ	0xFDF
 36023                           postinc2	equ	0xFDE
 36024                           postdec2	equ	0xFDD
 36025                           plusw2	equ	0xFDB
 36026                           fsr2h	equ	0xFDA
 36027                           fsr2l	equ	0xFD9
 36028                           status	equ	0xFD8
 36029                           
 36030 ;; *************** function _TMR_GetDeltaTime *****************
 36031 ;; Defined at:
 36032 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36033 ;; Parameters:    Size  Location     Type
 36034 ;;		None
 36035 ;; Auto vars:     Size  Location     Type
 36036 ;;		None
 36037 ;; Return value:  Size  Location     Type
 36038 ;;                  4   12[BANK0 ] unsigned long 
 36039 ;; Registers used:
 36040 ;;		wreg, status,2, status,0, cstack
 36041 ;; Tracked objects:
 36042 ;;		On entry : F/0
 36043 ;;		On exit  : F/0
 36044 ;;		Unchanged: 0/0
 36045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36048 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36049 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36050 ;;Total ram usage:       16 bytes
 36051 ;; Hardware stack levels used:    1
 36052 ;; Hardware stack levels required when called:    8
 36053 ;; This function calls:
 36054 ;;		_TMR1_ReadTimer
 36055 ;; This function is called by:
 36056 ;;		_SwTimersInterrupt
 36057 ;; This function uses a non-reentrant model
 36058 ;;
 36059                           
 36060                           	psect	text192
 36061  004D48                     __ptext192:
 36062                           	opt stack 0
 36063  004D48                     _TMR_GetDeltaTime:
 36064                           	opt stack 17
 36065                           
 36066                           ; BSR set to: 0
 36067                           ;sw_timer.c: 90: static uint32_t retVal;
 36068                           ;sw_timer.c: 91: static uint16_t tmrVal;
 36069                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 36070                           
 36071                           ; BSR set to: 0
 36072                           ;incstack = 0
 36073  004D48  EC7E  F03A         	call	_TMR1_ReadTimer	;wreg free
 36074  004D4C  C064  F03E         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 36075  004D50  C065  F03F         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 36076                           
 36077                           ; BSR set to: 0
 36078                           ;sw_timer.c: 95: if (timerOverflow == 1)
 36079  004D54  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 36080  004D56  E13D               	bnz	l11958
 36081                           
 36082                           ; BSR set to: 0
 36083                           ;sw_timer.c: 96: {
 36084                           ;sw_timer.c: 97: timerOverflow = 0;
 36085  004D58  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 36086                           
 36087                           ; BSR set to: 0
 36088                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 36089  004D5A  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36090  004D5C  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36091  004D5E  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36092  004D60  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36093  004D62  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36094  004D64  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36095  004D66  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36096  004D68  A0D8               	btfss	status,0,c
 36097  004D6A  0772               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36098  004D6C  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36099  004D6E  6F73               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36100  004D70  5036               	movf	_ticksAccounted,w,c	;volatile
 36101  004D72  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36102  004D74  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36103  004D76  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36104  004D78  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36105  004D7A  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36106  004D7C  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36107  004D7E  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36108  004D80  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36109  004D82  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36110  004D84  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36111  004D86  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36112  004D88  503A               	movf	_ticksAdded,w,c	;volatile
 36113  004D8A  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36114  004D8C  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 36115  004D8E  503B               	movf	_ticksAdded+1,w,c	;volatile
 36116  004D90  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36117  004D92  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 36118  004D94  503C               	movf	_ticksAdded+2,w,c	;volatile
 36119  004D96  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36120  004D98  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 36121  004D9A  503D               	movf	_ticksAdded+3,w,c	;volatile
 36122  004D9C  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36123  004D9E  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 36124  004DA0  0E00               	movlw	0
 36125  004DA2  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 36126  004DA4  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36127  004DA6  0E00               	movlw	0
 36128  004DA8  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 36129  004DAA  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36130  004DAC  0E01               	movlw	1
 36131  004DAE  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 36132  004DB0  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36133  004DB2  0E00               	movlw	0
 36134  004DB4  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 36135  004DB6  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36136                           
 36137                           ; BSR set to: 0
 36138                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 36139  004DB8  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 36140  004DBC  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 36141  004DC0  6A38               	clrf	_ticksAccounted+2,c	;volatile
 36142  004DC2  6A39               	clrf	_ticksAccounted+3,c	;volatile
 36143                           
 36144                           ; BSR set to: 0
 36145                           ;sw_timer.c: 100: ticksAdded = 0;
 36146  004DC4  6A3A               	clrf	_ticksAdded,c	;volatile
 36147  004DC6  6A3B               	clrf	_ticksAdded+1,c	;volatile
 36148  004DC8  6A3C               	clrf	_ticksAdded+2,c	;volatile
 36149  004DCA  6A3D               	clrf	_ticksAdded+3,c	;volatile
 36150                           
 36151                           ; BSR set to: 0
 36152                           ;sw_timer.c: 101: reloadVal = 0;
 36153  004DCC  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 36154  004DCE  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 36155                           
 36156                           ;sw_timer.c: 102: }
 36157  004DD0  D028               	goto	l11960
 36158  004DD2                     l11958:
 36159                           
 36160                           ; BSR set to: 0
 36161                           ;sw_timer.c: 103: else
 36162                           ;sw_timer.c: 104: {
 36163                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 36164  004DD2  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36165  004DD4  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36166  004DD6  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36167  004DD8  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36168  004DDA  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36169  004DDC  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36170  004DDE  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36171  004DE0  6B73               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36172  004DE2  5036               	movf	_ticksAccounted,w,c	;volatile
 36173  004DE4  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36174  004DE6  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36175  004DE8  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36176  004DEA  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36177  004DEC  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36178  004DEE  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36179  004DF0  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36180  004DF2  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36181  004DF4  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36182  004DF6  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36183  004DF8  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36184  004DFA  503A               	movf	_ticksAdded,w,c	;volatile
 36185  004DFC  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36186  004DFE  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36187  004E00  503B               	movf	_ticksAdded+1,w,c	;volatile
 36188  004E02  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36189  004E04  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36190  004E06  503C               	movf	_ticksAdded+2,w,c	;volatile
 36191  004E08  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36192  004E0A  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36193  004E0C  503D               	movf	_ticksAdded+3,w,c	;volatile
 36194  004E0E  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36195  004E10  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36196                           
 36197                           ;sw_timer.c: 106: ticksAccounted += retVal;
 36198  004E12  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 36199  004E14  2636               	addwf	_ticksAccounted,f,c	;volatile
 36200  004E16  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 36201  004E18  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 36202  004E1A  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 36203  004E1C  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 36204  004E1E  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 36205  004E20  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 36206  004E22                     l11960:
 36207                           
 36208                           ; BSR set to: 0
 36209                           ;sw_timer.c: 107: }
 36210                           ;sw_timer.c: 109: return retVal;
 36211  004E22  C032  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 36212  004E26  C033  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 36213  004E2A  C034  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 36214  004E2E  C035  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 36215                           
 36216                           ; BSR set to: 0
 36217  004E32  0012               	return		;funcret
 36218  004E34                     __end_of_TMR_GetDeltaTime:
 36219                           	opt stack 0
 36220                           tosu	equ	0xFFF
 36221                           tosh	equ	0xFFE
 36222                           tosl	equ	0xFFD
 36223                           pclath	equ	0xFFA
 36224                           tblptru	equ	0xFF8
 36225                           tblptrh	equ	0xFF7
 36226                           tblptrl	equ	0xFF6
 36227                           tablat	equ	0xFF5
 36228                           prodh	equ	0xFF4
 36229                           prodl	equ	0xFF3
 36230                           intcon	equ	0xFF2
 36231                           intcon2	equ	0xFF1
 36232                           intcon3	equ	0xFF0
 36233                           indf0	equ	0xFEF
 36234                           postinc0	equ	0xFEE
 36235                           plusw0	equ	0xFEB
 36236                           fsr0h	equ	0xFEA
 36237                           fsr0l	equ	0xFE9
 36238                           wreg	equ	0xFE8
 36239                           postinc1	equ	0xFE6
 36240                           postdec1	equ	0xFE5
 36241                           plusw1	equ	0xFE3
 36242                           fsr1h	equ	0xFE2
 36243                           fsr1l	equ	0xFE1
 36244                           indf2	equ	0xFDF
 36245                           postinc2	equ	0xFDE
 36246                           postdec2	equ	0xFDD
 36247                           plusw2	equ	0xFDB
 36248                           fsr2h	equ	0xFDA
 36249                           fsr2l	equ	0xFD9
 36250                           status	equ	0xFD8
 36251                           
 36252 ;; *************** function _TMR1_ReadTimer *****************
 36253 ;; Defined at:
 36254 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 36255 ;; Parameters:    Size  Location     Type
 36256 ;;		None
 36257 ;; Auto vars:     Size  Location     Type
 36258 ;;  readVal         2    8[BANK0 ] unsigned int 
 36259 ;;  readValLow      1   11[BANK0 ] unsigned char 
 36260 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 36261 ;; Return value:  Size  Location     Type
 36262 ;;                  2    4[BANK0 ] unsigned int 
 36263 ;; Registers used:
 36264 ;;		wreg, status,2
 36265 ;; Tracked objects:
 36266 ;;		On entry : F/0
 36267 ;;		On exit  : F/0
 36268 ;;		Unchanged: 0/0
 36269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36272 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36273 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36274 ;;Total ram usage:        8 bytes
 36275 ;; Hardware stack levels used:    1
 36276 ;; Hardware stack levels required when called:    7
 36277 ;; This function calls:
 36278 ;;		Nothing
 36279 ;; This function is called by:
 36280 ;;		_TMR_GetDeltaTime
 36281 ;;		_TMR_SwapTimer
 36282 ;; This function uses a non-reentrant model
 36283 ;;
 36284                           
 36285                           	psect	text193
 36286  0074FC                     __ptext193:
 36287                           	opt stack 0
 36288  0074FC                     _TMR1_ReadTimer:
 36289                           	opt stack 17
 36290                           
 36291                           ; BSR set to: 0
 36292                           ;tmr1.c: 108: uint16_t readVal;
 36293                           ;tmr1.c: 109: uint8_t readValHigh;
 36294                           ;tmr1.c: 110: uint8_t readValLow;
 36295                           ;tmr1.c: 112: readValLow = TMR1L;
 36296                           
 36297                           ; BSR set to: 0
 36298                           ;incstack = 0
 36299  0074FC  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 36300                           
 36301                           ;tmr1.c: 113: readValHigh = TMR1H;
 36302  007500  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 36303                           
 36304                           ; BSR set to: 0
 36305                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 36306  007504  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 36307  007506  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 36308  007508  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 36309  00750A  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 36310  00750C  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 36311                           
 36312                           ; BSR set to: 0
 36313                           ;tmr1.c: 117: return readVal;
 36314  007510  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 36315  007514  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 36316                           
 36317                           ; BSR set to: 0
 36318  007518  0012               	return		;funcret
 36319  00751A                     __end_of_TMR1_ReadTimer:
 36320                           	opt stack 0
 36321                           tosu	equ	0xFFF
 36322                           tosh	equ	0xFFE
 36323                           tosl	equ	0xFFD
 36324                           pclath	equ	0xFFA
 36325                           tblptru	equ	0xFF8
 36326                           tblptrh	equ	0xFF7
 36327                           tblptrl	equ	0xFF6
 36328                           tablat	equ	0xFF5
 36329                           prodh	equ	0xFF4
 36330                           prodl	equ	0xFF3
 36331                           intcon	equ	0xFF2
 36332                           intcon2	equ	0xFF1
 36333                           intcon3	equ	0xFF0
 36334                           indf0	equ	0xFEF
 36335                           postinc0	equ	0xFEE
 36336                           plusw0	equ	0xFEB
 36337                           fsr0h	equ	0xFEA
 36338                           fsr0l	equ	0xFE9
 36339                           wreg	equ	0xFE8
 36340                           postinc1	equ	0xFE6
 36341                           postdec1	equ	0xFE5
 36342                           plusw1	equ	0xFE3
 36343                           fsr1h	equ	0xFE2
 36344                           fsr1l	equ	0xFE1
 36345                           indf2	equ	0xFDF
 36346                           postinc2	equ	0xFDE
 36347                           postdec2	equ	0xFDD
 36348                           plusw2	equ	0xFDB
 36349                           fsr2h	equ	0xFDA
 36350                           fsr2l	equ	0xFD9
 36351                           status	equ	0xFD8
 36352                           
 36353 ;; *************** function _SwTimerSetTimeout *****************
 36354 ;; Defined at:
 36355 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36356 ;; Parameters:    Size  Location     Type
 36357 ;;  timerId         1    wreg     unsigned char 
 36358 ;;  timeout         4   17[BANK0 ] unsigned long 
 36359 ;; Auto vars:     Size  Location     Type
 36360 ;;  timerId         1   25[BANK0 ] unsigned char 
 36361 ;; Return value:  Size  Location     Type
 36362 ;;                  1    wreg      void 
 36363 ;; Registers used:
 36364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36365 ;; Tracked objects:
 36366 ;;		On entry : C/2
 36367 ;;		On exit  : F/0
 36368 ;;		Unchanged: 0/0
 36369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36372 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36373 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36374 ;;Total ram usage:        9 bytes
 36375 ;; Hardware stack levels used:    1
 36376 ;; Hardware stack levels required when called:    7
 36377 ;; This function calls:
 36378 ;;		Nothing
 36379 ;; This function is called by:
 36380 ;;		_RADIO_Transmit
 36381 ;;		_RADIO_ReceiveStart
 36382 ;;		_LORAWAN_TxDone
 36383 ;;		_LORAWAN_RxTimeout
 36384 ;;		_StartReTxTimer
 36385 ;;		_DutyCycleCallback
 36386 ;;		_LORAWAN_Join
 36387 ;;		_LORAWAN_LinkCheckConfigure
 36388 ;;		_LORAWAN_LinkCheckCallback
 36389 ;;		_UpdateRetransmissionAckTimeoutState
 36390 ;;		_UpdateJoinSuccessState
 36391 ;; This function uses a non-reentrant model
 36392 ;;
 36393                           
 36394                           	psect	text194
 36395  006CEA                     __ptext194:
 36396                           	opt stack 0
 36397  006CEA                     _SwTimerSetTimeout:
 36398                           	opt stack 20
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;incstack = 0
 36402                           ;SwTimerSetTimeout@timerId stored from wreg
 36403  006CEA  0100               	movlb	0	; () banked
 36404  006CEC  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 36405                           
 36406                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 36407  006CEE  9EF2               	bcf	intcon,7,c	;volatile
 36408                           
 36409                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 36410  006CF0  0EE0               	movlw	224
 36411  006CF2  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 36412  006CF4  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 36413  006CF6  0EFF               	movlw	255
 36414  006CF8  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 36415  006CFA  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 36416  006CFC  0EFF               	movlw	255
 36417  006CFE  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 36418  006D00  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 36419  006D02  0EFF               	movlw	255
 36420  006D04  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 36421  006D06  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 36422  006D08  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 36423  006D0A  0D08               	mullw	8
 36424  006D0C  0E00               	movlw	low _swTimers
 36425  006D0E  24F3               	addwf	prodl,w,c
 36426  006D10  6ED9               	movwf	fsr2l,c
 36427  006D12  0E03               	movlw	high _swTimers
 36428  006D14  20F4               	addwfc	prodh,w,c
 36429  006D16  6EDA               	movwf	fsr2h,c
 36430  006D18  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 36431  006D1C  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 36432  006D20  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 36433  006D24  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 36434                           
 36435                           ; BSR set to: 0
 36436                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 36437  006D28  8EF2               	bsf	intcon,7,c	;volatile
 36438                           
 36439                           ; BSR set to: 0
 36440  006D2A  0012               	return		;funcret
 36441  006D2C                     __end_of_SwTimerSetTimeout:
 36442                           	opt stack 0
 36443                           tosu	equ	0xFFF
 36444                           tosh	equ	0xFFE
 36445                           tosl	equ	0xFFD
 36446                           pclath	equ	0xFFA
 36447                           tblptru	equ	0xFF8
 36448                           tblptrh	equ	0xFF7
 36449                           tblptrl	equ	0xFF6
 36450                           tablat	equ	0xFF5
 36451                           prodh	equ	0xFF4
 36452                           prodl	equ	0xFF3
 36453                           intcon	equ	0xFF2
 36454                           intcon2	equ	0xFF1
 36455                           intcon3	equ	0xFF0
 36456                           indf0	equ	0xFEF
 36457                           postinc0	equ	0xFEE
 36458                           plusw0	equ	0xFEB
 36459                           fsr0h	equ	0xFEA
 36460                           fsr0l	equ	0xFE9
 36461                           wreg	equ	0xFE8
 36462                           postinc1	equ	0xFE6
 36463                           postdec1	equ	0xFE5
 36464                           plusw1	equ	0xFE3
 36465                           fsr1h	equ	0xFE2
 36466                           fsr1l	equ	0xFE1
 36467                           indf2	equ	0xFDF
 36468                           postinc2	equ	0xFDE
 36469                           postdec2	equ	0xFDD
 36470                           plusw2	equ	0xFDB
 36471                           fsr2h	equ	0xFDA
 36472                           fsr2l	equ	0xFD9
 36473                           status	equ	0xFD8
 36474                           
 36475 ;; *************** function _InitDefault868Channels *****************
 36476 ;; Defined at:
 36477 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36478 ;; Parameters:    Size  Location     Type
 36479 ;;		None
 36480 ;; Auto vars:     Size  Location     Type
 36481 ;;  i               1   14[BANK0 ] unsigned char 
 36482 ;; Return value:  Size  Location     Type
 36483 ;;                  1    wreg      void 
 36484 ;; Registers used:
 36485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36486 ;; Tracked objects:
 36487 ;;		On entry : F/1
 36488 ;;		On exit  : F/0
 36489 ;;		Unchanged: 0/0
 36490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36492 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36494 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36495 ;;Total ram usage:        1 bytes
 36496 ;; Hardware stack levels used:    1
 36497 ;; Hardware stack levels required when called:    8
 36498 ;; This function calls:
 36499 ;;		_memcpy
 36500 ;;		_memset
 36501 ;; This function is called by:
 36502 ;;		_LORAWAN_Reset
 36503 ;; This function uses a non-reentrant model
 36504 ;;
 36505                           
 36506                           	psect	text195
 36507  00639E                     __ptext195:
 36508                           	opt stack 0
 36509  00639E                     _InitDefault868Channels:
 36510                           	opt stack 20
 36511                           
 36512                           ; BSR set to: 1
 36513                           ;lorawan_eu.c: 981: uint8_t i;
 36514                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 36515                           
 36516                           ; BSR set to: 0
 36517                           ;incstack = 0
 36518  00639E  0E00               	movlw	low _Channels
 36519  0063A0  0100               	movlb	0	; () banked
 36520  0063A2  6F64               	movwf	memset@p1& (0+255),b
 36521  0063A4  0E04               	movlw	high _Channels
 36522  0063A6  6F65               	movwf	(memset@p1+1)& (0+255),b
 36523  0063A8  6B67               	clrf	(memset@c+1)& (0+255),b
 36524  0063AA  6B66               	clrf	memset@c& (0+255),b
 36525  0063AC  6B69               	clrf	(memset@n+1)& (0+255),b
 36526  0063AE  0EE0               	movlw	224
 36527  0063B0  6F68               	movwf	memset@n& (0+255),b
 36528  0063B2  EC21  F039         	call	_memset	;wreg free
 36529                           
 36530                           ; BSR set to: 0
 36531                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 36532  0063B6  0E00               	movlw	low _Channels
 36533  0063B8  6F64               	movwf	memcpy@d1& (0+255),b
 36534  0063BA  0E04               	movlw	high _Channels
 36535  0063BC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36536  0063BE  0ED2               	movlw	low _DefaultChannels868
 36537  0063C0  6F66               	movwf	memcpy@s1& (0+255),b
 36538  0063C2  0EFF               	movlw	high _DefaultChannels868
 36539  0063C4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36540  0063C6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36541  0063C8  0E2A               	movlw	42
 36542  0063CA  6F68               	movwf	memcpy@n& (0+255),b
 36543  0063CC  EC14  F034         	call	_memcpy	;wreg free
 36544                           
 36545                           ; BSR set to: 0
 36546                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 36547  0063D0  0E03               	movlw	3
 36548  0063D2  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 36549  0063D4                     l14974:
 36550                           
 36551                           ; BSR set to: 0
 36552                           ;lorawan_eu.c: 986: {
 36553                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 36554  0063D4  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36555  0063D6  0D0E               	mullw	14
 36556  0063D8  0E06               	movlw	low (_Channels+6)
 36557  0063DA  24F3               	addwf	prodl,w,c
 36558  0063DC  6ED9               	movwf	fsr2l,c
 36559  0063DE  0E04               	movlw	high (_Channels+6)
 36560  0063E0  20F4               	addwfc	prodh,w,c
 36561  0063E2  6EDA               	movwf	fsr2h,c
 36562  0063E4  68DE               	setf	postinc2,c
 36563  0063E6  68DD               	setf	postdec2,c
 36564                           
 36565                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 36566  0063E8  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36567  0063EA  0D0E               	mullw	14
 36568  0063EC  0E05               	movlw	low (_Channels+5)
 36569  0063EE  24F3               	addwf	prodl,w,c
 36570  0063F0  6ED9               	movwf	fsr2l,c
 36571  0063F2  0E04               	movlw	high (_Channels+5)
 36572  0063F4  20F4               	addwfc	prodh,w,c
 36573  0063F6  6EDA               	movwf	fsr2h,c
 36574  0063F8  68DF               	setf	indf2,c
 36575                           
 36576                           ; BSR set to: 0
 36577  0063FA  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 36578                           
 36579                           ; BSR set to: 0
 36580  0063FC  0E0F               	movlw	15
 36581  0063FE  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 36582  006400  D7E9               	goto	l14974
 36583  006402  0C0F               	retlw	15
 36584  006404                     __end_of_InitDefault868Channels:
 36585                           	opt stack 0
 36586                           tosu	equ	0xFFF
 36587                           tosh	equ	0xFFE
 36588                           tosl	equ	0xFFD
 36589                           pclath	equ	0xFFA
 36590                           tblptru	equ	0xFF8
 36591                           tblptrh	equ	0xFF7
 36592                           tblptrl	equ	0xFF6
 36593                           tablat	equ	0xFF5
 36594                           prodh	equ	0xFF4
 36595                           prodl	equ	0xFF3
 36596                           intcon	equ	0xFF2
 36597                           intcon2	equ	0xFF1
 36598                           intcon3	equ	0xFF0
 36599                           indf0	equ	0xFEF
 36600                           postinc0	equ	0xFEE
 36601                           plusw0	equ	0xFEB
 36602                           fsr0h	equ	0xFEA
 36603                           fsr0l	equ	0xFE9
 36604                           wreg	equ	0xFE8
 36605                           postinc1	equ	0xFE6
 36606                           postdec1	equ	0xFE5
 36607                           plusw1	equ	0xFE3
 36608                           fsr1h	equ	0xFE2
 36609                           fsr1l	equ	0xFE1
 36610                           indf2	equ	0xFDF
 36611                           postinc2	equ	0xFDE
 36612                           postdec2	equ	0xFDD
 36613                           plusw2	equ	0xFDB
 36614                           fsr2h	equ	0xFDA
 36615                           fsr2l	equ	0xFD9
 36616                           status	equ	0xFD8
 36617                           
 36618 ;; *************** function _InitDefault433Channels *****************
 36619 ;; Defined at:
 36620 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36621 ;; Parameters:    Size  Location     Type
 36622 ;;		None
 36623 ;; Auto vars:     Size  Location     Type
 36624 ;;  i               1   14[BANK0 ] unsigned char 
 36625 ;; Return value:  Size  Location     Type
 36626 ;;                  1    wreg      void 
 36627 ;; Registers used:
 36628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36629 ;; Tracked objects:
 36630 ;;		On entry : F/1
 36631 ;;		On exit  : F/0
 36632 ;;		Unchanged: 0/0
 36633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36637 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36638 ;;Total ram usage:        1 bytes
 36639 ;; Hardware stack levels used:    1
 36640 ;; Hardware stack levels required when called:    8
 36641 ;; This function calls:
 36642 ;;		_memcpy
 36643 ;;		_memset
 36644 ;; This function is called by:
 36645 ;;		_LORAWAN_Reset
 36646 ;; This function uses a non-reentrant model
 36647 ;;
 36648                           
 36649                           	psect	text196
 36650  006404                     __ptext196:
 36651                           	opt stack 0
 36652  006404                     _InitDefault433Channels:
 36653                           	opt stack 20
 36654                           
 36655                           ; BSR set to: 1
 36656                           ;lorawan_eu.c: 996: uint8_t i;
 36657                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 36658                           
 36659                           ; BSR set to: 0
 36660                           ;incstack = 0
 36661  006404  0E00               	movlw	low _Channels
 36662  006406  0100               	movlb	0	; () banked
 36663  006408  6F64               	movwf	memset@p1& (0+255),b
 36664  00640A  0E04               	movlw	high _Channels
 36665  00640C  6F65               	movwf	(memset@p1+1)& (0+255),b
 36666  00640E  6B67               	clrf	(memset@c+1)& (0+255),b
 36667  006410  6B66               	clrf	memset@c& (0+255),b
 36668  006412  6B69               	clrf	(memset@n+1)& (0+255),b
 36669  006414  0EE0               	movlw	224
 36670  006416  6F68               	movwf	memset@n& (0+255),b
 36671  006418  EC21  F039         	call	_memset	;wreg free
 36672                           
 36673                           ; BSR set to: 0
 36674                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 36675  00641C  0E00               	movlw	low _Channels
 36676  00641E  6F64               	movwf	memcpy@d1& (0+255),b
 36677  006420  0E04               	movlw	high _Channels
 36678  006422  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36679  006424  0EA8               	movlw	low _DefaultChannels433
 36680  006426  6F66               	movwf	memcpy@s1& (0+255),b
 36681  006428  0EFF               	movlw	high _DefaultChannels433
 36682  00642A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36683  00642C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36684  00642E  0E2A               	movlw	42
 36685  006430  6F68               	movwf	memcpy@n& (0+255),b
 36686  006432  EC14  F034         	call	_memcpy	;wreg free
 36687                           
 36688                           ; BSR set to: 0
 36689                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 36690  006436  0E03               	movlw	3
 36691  006438  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 36692  00643A                     l14990:
 36693                           
 36694                           ; BSR set to: 0
 36695                           ;lorawan_eu.c: 1001: {
 36696                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 36697  00643A  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36698  00643C  0D0E               	mullw	14
 36699  00643E  0E06               	movlw	low (_Channels+6)
 36700  006440  24F3               	addwf	prodl,w,c
 36701  006442  6ED9               	movwf	fsr2l,c
 36702  006444  0E04               	movlw	high (_Channels+6)
 36703  006446  20F4               	addwfc	prodh,w,c
 36704  006448  6EDA               	movwf	fsr2h,c
 36705  00644A  68DE               	setf	postinc2,c
 36706  00644C  68DD               	setf	postdec2,c
 36707                           
 36708                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 36709  00644E  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36710  006450  0D0E               	mullw	14
 36711  006452  0E05               	movlw	low (_Channels+5)
 36712  006454  24F3               	addwf	prodl,w,c
 36713  006456  6ED9               	movwf	fsr2l,c
 36714  006458  0E04               	movlw	high (_Channels+5)
 36715  00645A  20F4               	addwfc	prodh,w,c
 36716  00645C  6EDA               	movwf	fsr2h,c
 36717  00645E  68DF               	setf	indf2,c
 36718                           
 36719                           ; BSR set to: 0
 36720  006460  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 36721                           
 36722                           ; BSR set to: 0
 36723  006462  0E0F               	movlw	15
 36724  006464  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 36725  006466  D7E9               	goto	l14990
 36726  006468  0C0F               	retlw	15
 36727  00646A                     __end_of_InitDefault433Channels:
 36728                           	opt stack 0
 36729                           tosu	equ	0xFFF
 36730                           tosh	equ	0xFFE
 36731                           tosl	equ	0xFFD
 36732                           pclath	equ	0xFFA
 36733                           tblptru	equ	0xFF8
 36734                           tblptrh	equ	0xFF7
 36735                           tblptrl	equ	0xFF6
 36736                           tablat	equ	0xFF5
 36737                           prodh	equ	0xFF4
 36738                           prodl	equ	0xFF3
 36739                           intcon	equ	0xFF2
 36740                           intcon2	equ	0xFF1
 36741                           intcon3	equ	0xFF0
 36742                           indf0	equ	0xFEF
 36743                           postinc0	equ	0xFEE
 36744                           plusw0	equ	0xFEB
 36745                           fsr0h	equ	0xFEA
 36746                           fsr0l	equ	0xFE9
 36747                           wreg	equ	0xFE8
 36748                           postinc1	equ	0xFE6
 36749                           postdec1	equ	0xFE5
 36750                           plusw1	equ	0xFE3
 36751                           fsr1h	equ	0xFE2
 36752                           fsr1l	equ	0xFE1
 36753                           indf2	equ	0xFDF
 36754                           postinc2	equ	0xFDE
 36755                           postdec2	equ	0xFDD
 36756                           plusw2	equ	0xFDB
 36757                           fsr2h	equ	0xFDA
 36758                           fsr2l	equ	0xFD9
 36759                           status	equ	0xFD8
 36760                           
 36761 ;; *************** function _memset *****************
 36762 ;; Defined at:
 36763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 36764 ;; Parameters:    Size  Location     Type
 36765 ;;  p1              2    4[BANK0 ] PTR void 
 36766 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36767 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36768 ;;  c               2    6[BANK0 ] int 
 36769 ;;  n               2    8[BANK0 ] unsigned int 
 36770 ;; Auto vars:     Size  Location     Type
 36771 ;;  p               2   10[BANK0 ] PTR unsigned char 
 36772 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36773 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36774 ;; Return value:  Size  Location     Type
 36775 ;;                  2    4[BANK0 ] PTR void 
 36776 ;; Registers used:
 36777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36778 ;; Tracked objects:
 36779 ;;		On entry : F/0
 36780 ;;		On exit  : F/0
 36781 ;;		Unchanged: 0/0
 36782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36783 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36786 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36787 ;;Total ram usage:        8 bytes
 36788 ;; Hardware stack levels used:    1
 36789 ;; Hardware stack levels required when called:    7
 36790 ;; This function calls:
 36791 ;;		Nothing
 36792 ;; This function is called by:
 36793 ;;		_LORAWAN_Reset
 36794 ;;		_InitDefault868Channels
 36795 ;;		_InitDefault433Channels
 36796 ;;		_AESCmac
 36797 ;;		_GenerateSubkey
 36798 ;;		_AssemblePacket
 36799 ;;		_PrepareJoinRequestFrame
 36800 ;;		_PrepareSessionKeys
 36801 ;;		_AssembleEncryptionBlock
 36802 ;; This function uses a non-reentrant model
 36803 ;;
 36804                           
 36805                           	psect	text197
 36806  007242                     __ptext197:
 36807                           	opt stack 0
 36808  007242                     _memset:
 36809                           	opt stack 20
 36810                           
 36811                           ; BSR set to: 0
 36812                           
 36813                           ; BSR set to: 0
 36814                           ;incstack = 0
 36815  007242  C064  F06A         	movff	memset@p1,memset@p
 36816  007246  C065  F06B         	movff	memset@p1+1,memset@p+1
 36817  00724A  D008               	goto	l12364
 36818  00724C                     l12360:
 36819                           
 36820                           ; BSR set to: 0
 36821  00724C  C06A  FFD9         	movff	memset@p,fsr2l
 36822  007250  C06B  FFDA         	movff	memset@p+1,fsr2h
 36823  007254  C066  FFDF         	movff	memset@c,indf2
 36824                           
 36825                           ; BSR set to: 0
 36826  007258  4B6A               	infsnz	memset@p& (0+255),f,b
 36827  00725A  2B6B               	incf	(memset@p+1)& (0+255),f,b
 36828  00725C                     l12364:
 36829                           
 36830                           ; BSR set to: 0
 36831  00725C  0768               	decf	memset@n& (0+255),f,b
 36832  00725E  A0D8               	btfss	status,0,c
 36833  007260  0769               	decf	(memset@n+1)& (0+255),f,b
 36834  007262  2968               	incf	memset@n& (0+255),w,b
 36835  007264  E1F3               	bnz	l12360
 36836  007266  2969               	incf	(memset@n+1)& (0+255),w,b
 36837  007268  E1F1               	bnz	l12360
 36838                           
 36839                           ; BSR set to: 0
 36840  00726A  0012               	return		;funcret
 36841  00726C                     __end_of_memset:
 36842                           	opt stack 0
 36843                           tosu	equ	0xFFF
 36844                           tosh	equ	0xFFE
 36845                           tosl	equ	0xFFD
 36846                           pclath	equ	0xFFA
 36847                           tblptru	equ	0xFF8
 36848                           tblptrh	equ	0xFF7
 36849                           tblptrl	equ	0xFF6
 36850                           tablat	equ	0xFF5
 36851                           prodh	equ	0xFF4
 36852                           prodl	equ	0xFF3
 36853                           intcon	equ	0xFF2
 36854                           intcon2	equ	0xFF1
 36855                           intcon3	equ	0xFF0
 36856                           indf0	equ	0xFEF
 36857                           postinc0	equ	0xFEE
 36858                           plusw0	equ	0xFEB
 36859                           fsr0h	equ	0xFEA
 36860                           fsr0l	equ	0xFE9
 36861                           wreg	equ	0xFE8
 36862                           postinc1	equ	0xFE6
 36863                           postdec1	equ	0xFE5
 36864                           plusw1	equ	0xFE3
 36865                           fsr1h	equ	0xFE2
 36866                           fsr1l	equ	0xFE1
 36867                           indf2	equ	0xFDF
 36868                           postinc2	equ	0xFDE
 36869                           postdec2	equ	0xFDD
 36870                           plusw2	equ	0xFDB
 36871                           fsr2h	equ	0xFDA
 36872                           fsr2l	equ	0xFD9
 36873                           status	equ	0xFD8
 36874                           
 36875 ;; *************** function _memcpy *****************
 36876 ;; Defined at:
 36877 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 36878 ;; Parameters:    Size  Location     Type
 36879 ;;  d1              2    4[BANK0 ] PTR void 
 36880 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36881 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36882 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36883 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36884 ;;  s1              2    6[BANK0 ] PTR const void 
 36885 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36886 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36887 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36888 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36889 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36890 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36891 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36892 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36893 ;;		 -> NULL(0), 
 36894 ;;  n               2    8[BANK0 ] unsigned int 
 36895 ;; Auto vars:     Size  Location     Type
 36896 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 36897 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36898 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36899 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36900 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36901 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36902 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36903 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36904 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36905 ;;		 -> NULL(0), 
 36906 ;;  d               2   10[BANK0 ] PTR unsigned char 
 36907 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36908 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36909 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36910 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36911 ;; Return value:  Size  Location     Type
 36912 ;;                  2    4[BANK0 ] PTR void 
 36913 ;; Registers used:
 36914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36915 ;; Tracked objects:
 36916 ;;		On entry : F/0
 36917 ;;		On exit  : F/0
 36918 ;;		Unchanged: 0/0
 36919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36920 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36921 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36923 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36924 ;;Total ram usage:       10 bytes
 36925 ;; Hardware stack levels used:    1
 36926 ;; Hardware stack levels required when called:    7
 36927 ;; This function calls:
 36928 ;;		Nothing
 36929 ;; This function is called by:
 36930 ;;		_RADIO_SetFSKSyncWord
 36931 ;;		_UpdateCfList
 36932 ;;		_InitDefault868Channels
 36933 ;;		_InitDefault433Channels
 36934 ;;		_AESCmac
 36935 ;;		_LORAWAN_SetNetworkSessionKey
 36936 ;;		_LORAWAN_SetApplicationSessionKey
 36937 ;;		_LORAWAN_RxDone
 36938 ;;		_AssemblePacket
 36939 ;;		_PrepareJoinRequestFrame
 36940 ;;		_PrepareSessionKeys
 36941 ;;		_AssembleEncryptionBlock
 36942 ;;		_ExtractMic
 36943 ;;		_ComputeMic
 36944 ;;		_AESEncodeLoRa
 36945 ;; This function uses a non-reentrant model
 36946 ;;
 36947                           
 36948                           	psect	text198
 36949  006828                     __ptext198:
 36950                           	opt stack 0
 36951  006828                     _memcpy:
 36952                           	opt stack 17
 36953                           
 36954                           ; BSR set to: 0
 36955                           
 36956                           ; BSR set to: 0
 36957                           ;incstack = 0
 36958  006828  C066  F06C         	movff	memcpy@s1,memcpy@s
 36959  00682C  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 36960  006830  C064  F06A         	movff	memcpy@d1,memcpy@d
 36961  006834  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 36962  006838  D01B               	goto	l12006
 36963  00683A                     l12000:
 36964                           
 36965                           ; BSR set to: 0
 36966  00683A  C06C  FFF6         	movff	memcpy@s,tblptrl
 36967  00683E  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 36968  006842  0E00               	movlw	low (__mediumconst shr (0+16))
 36969  006844  6EF8               	movwf	tblptru,c
 36970  006846  C06A  FFD9         	movff	memcpy@d,fsr2l
 36971  00684A  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 36972  00684E  0E0F               	movlw	(high __ramtop+-1)
 36973  006850  64F7               	cpfsgt	tblptrh,c
 36974  006852  D003               	bra	u12627
 36975  006854  0008               	tblrd		*
 36976  006856  50F5               	movf	tablat,w,c
 36977  006858  D005               	bra	u12620
 36978  00685A                     u12627:
 36979  00685A  CFF6 FFE9          	movff	tblptrl,fsr0l
 36980  00685E  CFF7 FFEA          	movff	tblptrh,fsr0h
 36981  006862  50EF               	movf	indf0,w,c
 36982  006864                     u12620:
 36983  006864  6EDF               	movwf	indf2,c
 36984  006866  0100               	movlb	0	; () banked
 36985  006868  4B6C               	infsnz	memcpy@s& (0+255),f,b
 36986  00686A  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 36987                           
 36988                           ; BSR set to: 0
 36989  00686C  4B6A               	infsnz	memcpy@d& (0+255),f,b
 36990  00686E  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 36991  006870                     l12006:
 36992                           
 36993                           ; BSR set to: 0
 36994  006870  0768               	decf	memcpy@n& (0+255),f,b
 36995  006872  A0D8               	btfss	status,0,c
 36996  006874  0769               	decf	(memcpy@n+1)& (0+255),f,b
 36997  006876  2968               	incf	memcpy@n& (0+255),w,b
 36998  006878  E1E0               	bnz	l12000
 36999  00687A  2969               	incf	(memcpy@n+1)& (0+255),w,b
 37000  00687C  E1DE               	bnz	l12000
 37001                           
 37002                           ; BSR set to: 0
 37003  00687E  0012               	return		;funcret
 37004  006880                     __end_of_memcpy:
 37005                           	opt stack 0
 37006                           tosu	equ	0xFFF
 37007                           tosh	equ	0xFFE
 37008                           tosl	equ	0xFFD
 37009                           pclath	equ	0xFFA
 37010                           tblptru	equ	0xFF8
 37011                           tblptrh	equ	0xFF7
 37012                           tblptrl	equ	0xFF6
 37013                           tablat	equ	0xFF5
 37014                           prodh	equ	0xFF4
 37015                           prodl	equ	0xFF3
 37016                           intcon	equ	0xFF2
 37017                           intcon2	equ	0xFF1
 37018                           intcon3	equ	0xFF0
 37019                           indf0	equ	0xFEF
 37020                           postinc0	equ	0xFEE
 37021                           plusw0	equ	0xFEB
 37022                           fsr0h	equ	0xFEA
 37023                           fsr0l	equ	0xFE9
 37024                           wreg	equ	0xFE8
 37025                           postinc1	equ	0xFE6
 37026                           postdec1	equ	0xFE5
 37027                           plusw1	equ	0xFE3
 37028                           fsr1h	equ	0xFE2
 37029                           fsr1l	equ	0xFE1
 37030                           indf2	equ	0xFDF
 37031                           postinc2	equ	0xFDE
 37032                           postdec2	equ	0xFDD
 37033                           plusw2	equ	0xFDB
 37034                           fsr2h	equ	0xFDA
 37035                           fsr2l	equ	0xFD9
 37036                           status	equ	0xFD8
 37037                           
 37038 ;; *************** function _CreateAllSoftwareTimers *****************
 37039 ;; Defined at:
 37040 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37041 ;; Parameters:    Size  Location     Type
 37042 ;;		None
 37043 ;; Auto vars:     Size  Location     Type
 37044 ;;		None
 37045 ;; Return value:  Size  Location     Type
 37046 ;;                  1    wreg      void 
 37047 ;; Registers used:
 37048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37049 ;; Tracked objects:
 37050 ;;		On entry : F/2
 37051 ;;		On exit  : F/2
 37052 ;;		Unchanged: 0/0
 37053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37058 ;;Total ram usage:        0 bytes
 37059 ;; Hardware stack levels used:    1
 37060 ;; Hardware stack levels required when called:    8
 37061 ;; This function calls:
 37062 ;;		_SwTimerCreate
 37063 ;; This function is called by:
 37064 ;;		_LORAWAN_Init
 37065 ;; This function uses a non-reentrant model
 37066 ;;
 37067                           
 37068                           	psect	text199
 37069  006924                     __ptext199:
 37070                           	opt stack 0
 37071  006924                     _CreateAllSoftwareTimers:
 37072                           	opt stack 21
 37073                           
 37074                           ; BSR set to: 2
 37075                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 37076                           
 37077                           ; BSR set to: 0
 37078                           ;incstack = 0
 37079  006924  EC34  F031         	call	_SwTimerCreate	;wreg free
 37080  006928  0102               	movlb	2	; () banked
 37081  00692A  6FE2               	movwf	(_loRa+226)& (0+255),b
 37082                           
 37083                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 37084  00692C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37085  006930  0102               	movlb	2	; () banked
 37086  006932  6FE3               	movwf	(_loRa+227)& (0+255),b
 37087                           
 37088                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 37089  006934  EC34  F031         	call	_SwTimerCreate	;wreg free
 37090  006938  0102               	movlb	2	; () banked
 37091  00693A  6FE4               	movwf	(_loRa+228)& (0+255),b
 37092                           
 37093                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 37094  00693C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37095  006940  0102               	movlb	2	; () banked
 37096  006942  6FE5               	movwf	(_loRa+229)& (0+255),b
 37097                           
 37098                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 37099  006944  EC34  F031         	call	_SwTimerCreate	;wreg free
 37100  006948  0102               	movlb	2	; () banked
 37101  00694A  6FE7               	movwf	(_loRa+231)& (0+255),b
 37102                           
 37103                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 37104  00694C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37105  006950  0102               	movlb	2	; () banked
 37106  006952  6FE8               	movwf	(_loRa+232)& (0+255),b
 37107                           
 37108                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 37109  006954  EC34  F031         	call	_SwTimerCreate	;wreg free
 37110  006958  0102               	movlb	2	; () banked
 37111  00695A  6FE6               	movwf	(_loRa+230)& (0+255),b
 37112                           
 37113                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 37114  00695C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37115  006960  0102               	movlb	2	; () banked
 37116  006962  6FEA               	movwf	(_loRa+234)& (0+255),b
 37117                           
 37118                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 37119  006964  EC34  F031         	call	_SwTimerCreate	;wreg free
 37120  006968  0102               	movlb	2	; () banked
 37121  00696A  6FF3               	movwf	(_loRa+243)& (0+255),b
 37122                           
 37123                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 37124  00696C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37125  006970  0102               	movlb	2	; () banked
 37126  006972  6FE9               	movwf	(_loRa+233)& (0+255),b
 37127                           
 37128                           ; BSR set to: 2
 37129  006974  0012               	return		;funcret
 37130  006976                     __end_of_CreateAllSoftwareTimers:
 37131                           	opt stack 0
 37132                           tosu	equ	0xFFF
 37133                           tosh	equ	0xFFE
 37134                           tosl	equ	0xFFD
 37135                           pclath	equ	0xFFA
 37136                           tblptru	equ	0xFF8
 37137                           tblptrh	equ	0xFF7
 37138                           tblptrl	equ	0xFF6
 37139                           tablat	equ	0xFF5
 37140                           prodh	equ	0xFF4
 37141                           prodl	equ	0xFF3
 37142                           intcon	equ	0xFF2
 37143                           intcon2	equ	0xFF1
 37144                           intcon3	equ	0xFF0
 37145                           indf0	equ	0xFEF
 37146                           postinc0	equ	0xFEE
 37147                           plusw0	equ	0xFEB
 37148                           fsr0h	equ	0xFEA
 37149                           fsr0l	equ	0xFE9
 37150                           wreg	equ	0xFE8
 37151                           postinc1	equ	0xFE6
 37152                           postdec1	equ	0xFE5
 37153                           plusw1	equ	0xFE3
 37154                           fsr1h	equ	0xFE2
 37155                           fsr1l	equ	0xFE1
 37156                           indf2	equ	0xFDF
 37157                           postinc2	equ	0xFDE
 37158                           postdec2	equ	0xFDD
 37159                           plusw2	equ	0xFDB
 37160                           fsr2h	equ	0xFDA
 37161                           fsr2l	equ	0xFD9
 37162                           status	equ	0xFD8
 37163                           
 37164 ;; *************** function _SwTimerCreate *****************
 37165 ;; Defined at:
 37166 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37167 ;; Parameters:    Size  Location     Type
 37168 ;;		None
 37169 ;; Auto vars:     Size  Location     Type
 37170 ;;  retVal          1    4[BANK0 ] unsigned char 
 37171 ;; Return value:  Size  Location     Type
 37172 ;;                  1    wreg      unsigned char 
 37173 ;; Registers used:
 37174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37175 ;; Tracked objects:
 37176 ;;		On entry : C/1
 37177 ;;		On exit  : F/0
 37178 ;;		Unchanged: 0/0
 37179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37183 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37184 ;;Total ram usage:        1 bytes
 37185 ;; Hardware stack levels used:    1
 37186 ;; Hardware stack levels required when called:    7
 37187 ;; This function calls:
 37188 ;;		Nothing
 37189 ;; This function is called by:
 37190 ;;		_RADIO_Init
 37191 ;;		_CreateAllSoftwareTimers
 37192 ;; This function uses a non-reentrant model
 37193 ;;
 37194                           
 37195                           	psect	text200
 37196  006268                     __ptext200:
 37197                           	opt stack 0
 37198  006268                     _SwTimerCreate:
 37199                           	opt stack 21
 37200                           
 37201                           ;sw_timer.c: 156: uint8_t retVal;
 37202                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 37203                           
 37204                           ; BSR set to: 2
 37205                           ;incstack = 0
 37206  006268  0E14               	movlw	20
 37207  00626A  0100               	movlb	0	; () banked
 37208  00626C  61EF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 37209  00626E  D02E               	goto	l126
 37210                           
 37211                           ; BSR set to: 0
 37212                           ;sw_timer.c: 158: {
 37213                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 37214  006270  9EF2               	bcf	intcon,7,c	;volatile
 37215                           
 37216                           ;sw_timer.c: 160: retVal = allocatedTimers;
 37217  006272  C0EF  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 37218                           
 37219                           ; BSR set to: 0
 37220                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 37221  006276  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37222  006278  0D08               	mullw	8
 37223  00627A  0E04               	movlw	low (_swTimers+4)
 37224  00627C  24F3               	addwf	prodl,w,c
 37225  00627E  6ED9               	movwf	fsr2l,c
 37226  006280  0E03               	movlw	high (_swTimers+4)
 37227  006282  20F4               	addwfc	prodh,w,c
 37228  006284  6EDA               	movwf	fsr2h,c
 37229  006286  6ADF               	clrf	indf2,c
 37230                           
 37231                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 37232  006288  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37233  00628A  0D08               	mullw	8
 37234  00628C  0E00               	movlw	low _swTimers
 37235  00628E  24F3               	addwf	prodl,w,c
 37236  006290  6ED9               	movwf	fsr2l,c
 37237  006292  0E03               	movlw	high _swTimers
 37238  006294  20F4               	addwfc	prodh,w,c
 37239  006296  6EDA               	movwf	fsr2h,c
 37240  006298  6ADE               	clrf	postinc2,c
 37241  00629A  6ADE               	clrf	postinc2,c
 37242  00629C  6ADE               	clrf	postinc2,c
 37243  00629E  6ADD               	clrf	postdec2,c
 37244                           
 37245                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 37246  0062A0  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37247  0062A2  0D08               	mullw	8
 37248  0062A4  0E05               	movlw	low (_swTimers+5)
 37249  0062A6  24F3               	addwf	prodl,w,c
 37250  0062A8  6ED9               	movwf	fsr2l,c
 37251  0062AA  0E03               	movlw	high (_swTimers+5)
 37252  0062AC  20F4               	addwfc	prodh,w,c
 37253  0062AE  6EDA               	movwf	fsr2h,c
 37254  0062B0  6ADF               	clrf	indf2,c
 37255                           
 37256                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 37257  0062B2  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37258  0062B4  0D08               	mullw	8
 37259  0062B6  0E06               	movlw	low (_swTimers+6)
 37260  0062B8  24F3               	addwf	prodl,w,c
 37261  0062BA  6ED9               	movwf	fsr2l,c
 37262  0062BC  0E03               	movlw	high (_swTimers+6)
 37263  0062BE  20F4               	addwfc	prodh,w,c
 37264  0062C0  6EDA               	movwf	fsr2h,c
 37265  0062C2  6ADE               	clrf	postinc2,c
 37266  0062C4  6ADD               	clrf	postdec2,c
 37267                           
 37268                           ; BSR set to: 0
 37269                           ;sw_timer.c: 165: allocatedTimers++;
 37270  0062C6  2BEF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 37271                           
 37272                           ; BSR set to: 0
 37273                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 37274  0062C8  8EF2               	bsf	intcon,7,c	;volatile
 37275                           
 37276                           ;sw_timer.c: 167: }
 37277  0062CA  D001               	goto	l9986
 37278  0062CC                     l126:
 37279  0062CC  D7FF               	goto	l126
 37280  0062CE                     l9986:
 37281                           
 37282                           ; BSR set to: 0
 37283                           ;sw_timer.c: 175: }
 37284                           ;sw_timer.c: 176: }
 37285                           ;sw_timer.c: 177: return retVal;
 37286  0062CE  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37287                           
 37288                           ; BSR set to: 0
 37289  0062D0  0012               	return		;funcret
 37290  0062D2                     __end_of_SwTimerCreate:
 37291                           	opt stack 0
 37292                           tosu	equ	0xFFF
 37293                           tosh	equ	0xFFE
 37294                           tosl	equ	0xFFD
 37295                           pclath	equ	0xFFA
 37296                           tblptru	equ	0xFF8
 37297                           tblptrh	equ	0xFF7
 37298                           tblptrl	equ	0xFF6
 37299                           tablat	equ	0xFF5
 37300                           prodh	equ	0xFF4
 37301                           prodl	equ	0xFF3
 37302                           intcon	equ	0xFF2
 37303                           intcon2	equ	0xFF1
 37304                           intcon3	equ	0xFF0
 37305                           indf0	equ	0xFEF
 37306                           postinc0	equ	0xFEE
 37307                           plusw0	equ	0xFEB
 37308                           fsr0h	equ	0xFEA
 37309                           fsr0l	equ	0xFE9
 37310                           wreg	equ	0xFE8
 37311                           postinc1	equ	0xFE6
 37312                           postdec1	equ	0xFE5
 37313                           plusw1	equ	0xFE3
 37314                           fsr1h	equ	0xFE2
 37315                           fsr1l	equ	0xFE1
 37316                           indf2	equ	0xFDF
 37317                           postinc2	equ	0xFDE
 37318                           postdec2	equ	0xFDD
 37319                           plusw2	equ	0xFDB
 37320                           fsr2h	equ	0xFDA
 37321                           fsr2l	equ	0xFD9
 37322                           status	equ	0xFD8
 37323                           
 37324 ;; *************** function _LORAWAN_GetState *****************
 37325 ;; Defined at:
 37326 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37327 ;; Parameters:    Size  Location     Type
 37328 ;;		None
 37329 ;; Auto vars:     Size  Location     Type
 37330 ;;		None
 37331 ;; Return value:  Size  Location     Type
 37332 ;;                  1    wreg      unsigned char 
 37333 ;; Registers used:
 37334 ;;		wreg, status,2, status,0
 37335 ;; Tracked objects:
 37336 ;;		On entry : F/1
 37337 ;;		On exit  : F/2
 37338 ;;		Unchanged: 0/0
 37339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37344 ;;Total ram usage:        0 bytes
 37345 ;; Hardware stack levels used:    1
 37346 ;; Hardware stack levels required when called:    7
 37347 ;; This function calls:
 37348 ;;		Nothing
 37349 ;; This function is called by:
 37350 ;;		_main
 37351 ;; This function uses a non-reentrant model
 37352 ;;
 37353                           
 37354                           	psect	text201
 37355  0078F0                     __ptext201:
 37356                           	opt stack 0
 37357  0078F0                     _LORAWAN_GetState:
 37358                           	opt stack 23
 37359                           
 37360                           ; BSR set to: 1
 37361                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 37362                           
 37363                           ; BSR set to: 0
 37364                           ;incstack = 0
 37365  0078F0  0102               	movlb	2	; () banked
 37366  0078F2  5102               	movf	(_loRa+2)& (0+255),w,b
 37367  0078F4  0B0F               	andlw	15
 37368                           
 37369                           ; BSR set to: 2
 37370  0078F6  0012               	return		;funcret
 37371  0078F8                     __end_of_LORAWAN_GetState:
 37372                           	opt stack 0
 37373                           tosu	equ	0xFFF
 37374                           tosh	equ	0xFFE
 37375                           tosl	equ	0xFFD
 37376                           pclath	equ	0xFFA
 37377                           tblptru	equ	0xFF8
 37378                           tblptrh	equ	0xFF7
 37379                           tblptrl	equ	0xFF6
 37380                           tablat	equ	0xFF5
 37381                           prodh	equ	0xFF4
 37382                           prodl	equ	0xFF3
 37383                           intcon	equ	0xFF2
 37384                           intcon2	equ	0xFF1
 37385                           intcon3	equ	0xFF0
 37386                           indf0	equ	0xFEF
 37387                           postinc0	equ	0xFEE
 37388                           plusw0	equ	0xFEB
 37389                           fsr0h	equ	0xFEA
 37390                           fsr0l	equ	0xFE9
 37391                           wreg	equ	0xFE8
 37392                           postinc1	equ	0xFE6
 37393                           postdec1	equ	0xFE5
 37394                           plusw1	equ	0xFE3
 37395                           fsr1h	equ	0xFE2
 37396                           fsr1l	equ	0xFE1
 37397                           indf2	equ	0xFDF
 37398                           postinc2	equ	0xFDE
 37399                           postdec2	equ	0xFDD
 37400                           plusw2	equ	0xFDB
 37401                           fsr2h	equ	0xFDA
 37402                           fsr2l	equ	0xFD9
 37403                           status	equ	0xFD8
 37404                           
 37405 ;; *************** function _IO_pins_init *****************
 37406 ;; Defined at:
 37407 ;;		line 131 in file "main.c"
 37408 ;; Parameters:    Size  Location     Type
 37409 ;;		None
 37410 ;; Auto vars:     Size  Location     Type
 37411 ;;		None
 37412 ;; Return value:  Size  Location     Type
 37413 ;;                  1    wreg      void 
 37414 ;; Registers used:
 37415 ;;		None
 37416 ;; Tracked objects:
 37417 ;;		On entry : F/F
 37418 ;;		On exit  : F/F
 37419 ;;		Unchanged: 0/0
 37420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37425 ;;Total ram usage:        0 bytes
 37426 ;; Hardware stack levels used:    1
 37427 ;; Hardware stack levels required when called:    7
 37428 ;; This function calls:
 37429 ;;		Nothing
 37430 ;; This function is called by:
 37431 ;;		_main
 37432 ;; This function uses a non-reentrant model
 37433 ;;
 37434                           
 37435                           	psect	text202
 37436  00776A                     __ptext202:
 37437                           	opt stack 0
 37438  00776A                     _IO_pins_init:
 37439                           	opt stack 23
 37440                           
 37441                           ; BSR set to: 15
 37442                           ;main.c: 133: TRISCbits.TRISC5 = 0;
 37443                           
 37444                           ; BSR set to: 2
 37445                           ;incstack = 0
 37446  00776A  9A94               	bcf	3988,5,c	;volatile
 37447                           
 37448                           ;main.c: 134: TRISDbits.TRISD5 = 0;
 37449  00776C  9A95               	bcf	3989,5,c	;volatile
 37450                           
 37451                           ;main.c: 135: TRISDbits.TRISD6 = 1;
 37452  00776E  8C95               	bsf	3989,6,c	;volatile
 37453                           
 37454                           ;main.c: 136: TRISDbits.TRISD7 = 1;
 37455  007770  8E95               	bsf	3989,7,c	;volatile
 37456                           
 37457                           ;main.c: 138: ANSELCbits.ANSC5 = 0;
 37458  007772  9B3A               	bcf	58,5,b	;volatile
 37459                           
 37460                           ;main.c: 139: ANSELDbits.ANSD5 = 0;
 37461  007774  9B3B               	bcf	59,5,b	;volatile
 37462                           
 37463                           ;main.c: 140: ANSELDbits.ANSD6 = 1;
 37464  007776  8D3B               	bsf	59,6,b	;volatile
 37465                           
 37466                           ;main.c: 141: ANSELDbits.ANSD7 = 1;
 37467  007778  8F3B               	bsf	59,7,b	;volatile
 37468                           
 37469                           ; BSR set to: 15
 37470  00777A  0012               	return		;funcret
 37471  00777C                     __end_of_IO_pins_init:
 37472                           	opt stack 0
 37473                           tosu	equ	0xFFF
 37474                           tosh	equ	0xFFE
 37475                           tosl	equ	0xFFD
 37476                           pclath	equ	0xFFA
 37477                           tblptru	equ	0xFF8
 37478                           tblptrh	equ	0xFF7
 37479                           tblptrl	equ	0xFF6
 37480                           tablat	equ	0xFF5
 37481                           prodh	equ	0xFF4
 37482                           prodl	equ	0xFF3
 37483                           intcon	equ	0xFF2
 37484                           intcon2	equ	0xFF1
 37485                           intcon3	equ	0xFF0
 37486                           indf0	equ	0xFEF
 37487                           postinc0	equ	0xFEE
 37488                           plusw0	equ	0xFEB
 37489                           fsr0h	equ	0xFEA
 37490                           fsr0l	equ	0xFE9
 37491                           wreg	equ	0xFE8
 37492                           postinc1	equ	0xFE6
 37493                           postdec1	equ	0xFE5
 37494                           plusw1	equ	0xFE3
 37495                           fsr1h	equ	0xFE2
 37496                           fsr1l	equ	0xFE1
 37497                           indf2	equ	0xFDF
 37498                           postinc2	equ	0xFDE
 37499                           postdec2	equ	0xFDD
 37500                           plusw2	equ	0xFDB
 37501                           fsr2h	equ	0xFDA
 37502                           fsr2l	equ	0xFD9
 37503                           status	equ	0xFD8
 37504                           
 37505 ;; *************** function _ADC_Init *****************
 37506 ;; Defined at:
 37507 ;;		line 159 in file "main.c"
 37508 ;; Parameters:    Size  Location     Type
 37509 ;;		None
 37510 ;; Auto vars:     Size  Location     Type
 37511 ;;		None
 37512 ;; Return value:  Size  Location     Type
 37513 ;;                  1    wreg      void 
 37514 ;; Registers used:
 37515 ;;		wreg, status,2
 37516 ;; Tracked objects:
 37517 ;;		On entry : F/F
 37518 ;;		On exit  : F/F
 37519 ;;		Unchanged: E/0
 37520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37525 ;;Total ram usage:        0 bytes
 37526 ;; Hardware stack levels used:    1
 37527 ;; Hardware stack levels required when called:    7
 37528 ;; This function calls:
 37529 ;;		Nothing
 37530 ;; This function is called by:
 37531 ;;		_main
 37532 ;; This function uses a non-reentrant model
 37533 ;;
 37534                           
 37535                           	psect	text203
 37536  0077C4                     __ptext203:
 37537                           	opt stack 0
 37538  0077C4                     _ADC_Init:
 37539                           	opt stack 23
 37540                           
 37541                           ; BSR set to: 15
 37542                           ;main.c: 160: ADCON0bits.GO = 0;
 37543                           
 37544                           ; BSR set to: 15
 37545                           ;incstack = 0
 37546  0077C4  92C2               	bcf	4034,1,c	;volatile
 37547                           
 37548                           ;main.c: 161: ADCON2bits.ADFM = 1;
 37549  0077C6  8EC0               	bsf	4032,7,c	;volatile
 37550                           
 37551                           ; BSR set to: 15
 37552                           ;main.c: 162: ADCON2bits.ADCS = 3;
 37553  0077C8  50C0               	movf	4032,w,c	;volatile
 37554  0077CA  0BF8               	andlw	-8
 37555  0077CC  0903               	iorlw	3
 37556  0077CE  6EC0               	movwf	4032,c	;volatile
 37557                           
 37558                           ; BSR set to: 15
 37559  0077D0  0012               	return		;funcret
 37560  0077D2                     __end_of_ADC_Init:
 37561                           	opt stack 0
 37562                           tosu	equ	0xFFF
 37563                           tosh	equ	0xFFE
 37564                           tosl	equ	0xFFD
 37565                           pclath	equ	0xFFA
 37566                           tblptru	equ	0xFF8
 37567                           tblptrh	equ	0xFF7
 37568                           tblptrl	equ	0xFF6
 37569                           tablat	equ	0xFF5
 37570                           prodh	equ	0xFF4
 37571                           prodl	equ	0xFF3
 37572                           intcon	equ	0xFF2
 37573                           intcon2	equ	0xFF1
 37574                           intcon3	equ	0xFF0
 37575                           indf0	equ	0xFEF
 37576                           postinc0	equ	0xFEE
 37577                           plusw0	equ	0xFEB
 37578                           fsr0h	equ	0xFEA
 37579                           fsr0l	equ	0xFE9
 37580                           wreg	equ	0xFE8
 37581                           postinc1	equ	0xFE6
 37582                           postdec1	equ	0xFE5
 37583                           plusw1	equ	0xFE3
 37584                           fsr1h	equ	0xFE2
 37585                           fsr1l	equ	0xFE1
 37586                           indf2	equ	0xFDF
 37587                           postinc2	equ	0xFDE
 37588                           postdec2	equ	0xFDD
 37589                           plusw2	equ	0xFDB
 37590                           fsr2h	equ	0xFDA
 37591                           fsr2l	equ	0xFD9
 37592                           status	equ	0xFD8
 37593                           
 37594 ;; *************** function _INTERRUPT_InterruptManager *****************
 37595 ;; Defined at:
 37596 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 37597 ;; Parameters:    Size  Location     Type
 37598 ;;		None
 37599 ;; Auto vars:     Size  Location     Type
 37600 ;;		None
 37601 ;; Return value:  Size  Location     Type
 37602 ;;                  1    wreg      void 
 37603 ;; Registers used:
 37604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37605 ;; Tracked objects:
 37606 ;;		On entry : 0/0
 37607 ;;		On exit  : 0/0
 37608 ;;		Unchanged: 0/0
 37609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37612 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37613 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37614 ;;Total ram usage:        8 bytes
 37615 ;; Hardware stack levels used:    1
 37616 ;; Hardware stack levels required when called:    6
 37617 ;; This function calls:
 37618 ;;		_INT1_ISR
 37619 ;;		_INT2_ISR
 37620 ;;		_PIN_MANAGER_IOC
 37621 ;;		_TMR1_ISR
 37622 ;;		_TMR3_ISR
 37623 ;; This function is called by:
 37624 ;;		Interrupt level 2
 37625 ;; This function uses a non-reentrant model
 37626 ;;
 37627                           
 37628                           	psect	intcode
 37629  000008                     __pintcode:
 37630                           	opt stack 0
 37631  000008                     _INTERRUPT_InterruptManager:
 37632                           	opt stack 12
 37633                           
 37634                           ; BSR set to: 15
 37635                           ;incstack = 0
 37636  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 37637  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 37638  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 37639  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 37640  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 37641  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 37642  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 37643  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 37644  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 37645                           
 37646                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 37647  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 37648  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 37649  000030  D003               	goto	i2l2497
 37650                           
 37651                           ;interrupt_manager.c: 61: {
 37652                           ;interrupt_manager.c: 62: INT1_ISR();
 37653  000032  EC94  F03C         	call	_INT1_ISR	;wreg free
 37654                           
 37655                           ;interrupt_manager.c: 63: }
 37656  000036  D01B               	goto	i2l2507
 37657  000038                     i2l2497:
 37658                           
 37659                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 37660  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 37661  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 37662  00003C  D003               	goto	i2l2499
 37663                           
 37664                           ;interrupt_manager.c: 65: {
 37665                           ;interrupt_manager.c: 66: INT2_ISR();
 37666  00003E  EC8E  F03C         	call	_INT2_ISR	;wreg free
 37667                           
 37668                           ;interrupt_manager.c: 67: }
 37669  000042  D015               	goto	i2l2507
 37670  000044                     i2l2499:
 37671                           
 37672                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE2bits.TMR3IE == 1 && PIR2bi
      +                          ts.TMR3IF == 1)
 37673  000044  BCF2               	btfsc	intcon,6,c	;volatile
 37674  000046  A2A0               	btfss	4000,1,c	;volatile
 37675  000048  D005               	goto	i2l2501
 37676  00004A  A2A1               	btfss	4001,1,c	;volatile
 37677  00004C  D003               	goto	i2l2501
 37678                           
 37679                           ;interrupt_manager.c: 69: {
 37680                           ;interrupt_manager.c: 70: TMR3_ISR();
 37681  00004E  ECE9  F03B         	call	_TMR3_ISR	;wreg free
 37682                           
 37683                           ;interrupt_manager.c: 71: }
 37684  000052  D00D               	goto	i2l2507
 37685  000054                     i2l2501:
 37686                           
 37687                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 37688  000054  BCF2               	btfsc	intcon,6,c	;volatile
 37689  000056  A09D               	btfss	3997,0,c	;volatile
 37690  000058  D005               	goto	i2l2503
 37691  00005A  A09E               	btfss	3998,0,c	;volatile
 37692  00005C  D003               	goto	i2l2503
 37693                           
 37694                           ;interrupt_manager.c: 73: {
 37695                           ;interrupt_manager.c: 74: TMR1_ISR();
 37696  00005E  ECF0  F03B         	call	_TMR1_ISR	;wreg free
 37697                           
 37698                           ;interrupt_manager.c: 75: }
 37699  000062  D005               	goto	i2l2507
 37700  000064                     i2l2503:
 37701                           
 37702                           ;interrupt_manager.c: 76: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 37703  000064  B6F2               	btfsc	intcon,3,c	;volatile
 37704  000066  A0F2               	btfss	intcon,0,c	;volatile
 37705  000068  D002               	goto	i2l2507
 37706                           
 37707                           ;interrupt_manager.c: 77: {
 37708                           ;interrupt_manager.c: 78: PIN_MANAGER_IOC();
 37709  00006A  EC52  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 37710  00006E                     i2l2507:
 37711  00006E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37712  000072  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37713  000076  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37714  00007A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37715  00007E  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37716  000082  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37717  000086  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37718  00008A  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37719  00008E  0011               	retfie		f
 37720  000090                     __end_of_INTERRUPT_InterruptManager:
 37721                           	opt stack 0
 37722                           tosu	equ	0xFFF
 37723                           tosh	equ	0xFFE
 37724                           tosl	equ	0xFFD
 37725                           pclatu	equ	0xFFB
 37726                           pclath	equ	0xFFA
 37727                           tblptru	equ	0xFF8
 37728                           tblptrh	equ	0xFF7
 37729                           tblptrl	equ	0xFF6
 37730                           tablat	equ	0xFF5
 37731                           prodh	equ	0xFF4
 37732                           prodl	equ	0xFF3
 37733                           intcon	equ	0xFF2
 37734                           intcon2	equ	0xFF1
 37735                           intcon3	equ	0xFF0
 37736                           indf0	equ	0xFEF
 37737                           postinc0	equ	0xFEE
 37738                           plusw0	equ	0xFEB
 37739                           fsr0h	equ	0xFEA
 37740                           fsr0l	equ	0xFE9
 37741                           wreg	equ	0xFE8
 37742                           postinc1	equ	0xFE6
 37743                           postdec1	equ	0xFE5
 37744                           plusw1	equ	0xFE3
 37745                           fsr1h	equ	0xFE2
 37746                           fsr1l	equ	0xFE1
 37747                           indf2	equ	0xFDF
 37748                           postinc2	equ	0xFDE
 37749                           postdec2	equ	0xFDD
 37750                           plusw2	equ	0xFDB
 37751                           fsr2h	equ	0xFDA
 37752                           fsr2l	equ	0xFD9
 37753                           status	equ	0xFD8
 37754                           
 37755 ;; *************** function _TMR3_ISR *****************
 37756 ;; Defined at:
 37757 ;;		line 159 in file "mcc_generated_files/tmr3.c"
 37758 ;; Parameters:    Size  Location     Type
 37759 ;;		None
 37760 ;; Auto vars:     Size  Location     Type
 37761 ;;		None
 37762 ;; Return value:  Size  Location     Type
 37763 ;;                  1    wreg      void 
 37764 ;; Registers used:
 37765 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37766 ;; Tracked objects:
 37767 ;;		On entry : 0/0
 37768 ;;		On exit  : 0/0
 37769 ;;		Unchanged: 0/0
 37770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37775 ;;Total ram usage:        0 bytes
 37776 ;; Hardware stack levels used:    1
 37777 ;; Hardware stack levels required when called:    2
 37778 ;; This function calls:
 37779 ;;		_TMR3_CallBack
 37780 ;; This function is called by:
 37781 ;;		_INTERRUPT_InterruptManager
 37782 ;; This function uses a non-reentrant model
 37783 ;;
 37784                           
 37785                           	psect	text205
 37786  0077D2                     __ptext205:
 37787                           	opt stack 0
 37788  0077D2                     _TMR3_ISR:
 37789                           	opt stack 15
 37790                           
 37791                           ;tmr3.c: 163: PIR2bits.TMR3IF = 0;
 37792                           
 37793                           ;incstack = 0
 37794  0077D2  92A1               	bcf	4001,1,c	;volatile
 37795                           
 37796                           ;tmr3.c: 166: TMR3H = (timer3ReloadVal >> 8);
 37797  0077D4  C05E  FFB3         	movff	_timer3ReloadVal+1,4019	;volatile
 37798                           
 37799                           ;tmr3.c: 167: TMR3L = (uint8_t) timer3ReloadVal;
 37800  0077D8  C05D  FFB2         	movff	_timer3ReloadVal,4018	;volatile
 37801                           
 37802                           ;tmr3.c: 171: TMR3_CallBack();
 37803  0077DC  EFB8  F03A         	goto	_TMR3_CallBack	;wreg free
 37804  0077E0                     __end_of_TMR3_ISR:
 37805                           	opt stack 0
 37806                           tosu	equ	0xFFF
 37807                           tosh	equ	0xFFE
 37808                           tosl	equ	0xFFD
 37809                           pclatu	equ	0xFFB
 37810                           pclath	equ	0xFFA
 37811                           tblptru	equ	0xFF8
 37812                           tblptrh	equ	0xFF7
 37813                           tblptrl	equ	0xFF6
 37814                           tablat	equ	0xFF5
 37815                           prodh	equ	0xFF4
 37816                           prodl	equ	0xFF3
 37817                           intcon	equ	0xFF2
 37818                           intcon2	equ	0xFF1
 37819                           intcon3	equ	0xFF0
 37820                           indf0	equ	0xFEF
 37821                           postinc0	equ	0xFEE
 37822                           plusw0	equ	0xFEB
 37823                           fsr0h	equ	0xFEA
 37824                           fsr0l	equ	0xFE9
 37825                           wreg	equ	0xFE8
 37826                           postinc1	equ	0xFE6
 37827                           postdec1	equ	0xFE5
 37828                           plusw1	equ	0xFE3
 37829                           fsr1h	equ	0xFE2
 37830                           fsr1l	equ	0xFE1
 37831                           indf2	equ	0xFDF
 37832                           postinc2	equ	0xFDE
 37833                           postdec2	equ	0xFDD
 37834                           plusw2	equ	0xFDB
 37835                           fsr2h	equ	0xFDA
 37836                           fsr2l	equ	0xFD9
 37837                           status	equ	0xFD8
 37838                           
 37839 ;; *************** function _TMR3_CallBack *****************
 37840 ;; Defined at:
 37841 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 37842 ;; Parameters:    Size  Location     Type
 37843 ;;		None
 37844 ;; Auto vars:     Size  Location     Type
 37845 ;;		None
 37846 ;; Return value:  Size  Location     Type
 37847 ;;                  1    wreg      void 
 37848 ;; Registers used:
 37849 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37850 ;; Tracked objects:
 37851 ;;		On entry : 0/0
 37852 ;;		On exit  : 0/0
 37853 ;;		Unchanged: 0/0
 37854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37859 ;;Total ram usage:        0 bytes
 37860 ;; Hardware stack levels used:    1
 37861 ;; Hardware stack levels required when called:    1
 37862 ;; This function calls:
 37863 ;;		Absolute function
 37864 ;;		_TMR3_DefaultInterruptHandler
 37865 ;;		_handle16sInterrupt
 37866 ;; This function is called by:
 37867 ;;		_TMR3_ISR
 37868 ;; This function uses a non-reentrant model
 37869 ;;
 37870                           
 37871                           	psect	text206
 37872  007570                     __ptext206:
 37873                           	opt stack 0
 37874  007570                     _TMR3_CallBack:
 37875                           	opt stack 15
 37876                           
 37877                           ;tmr3.c: 177: if(TMR3_InterruptHandler)
 37878                           
 37879                           ;incstack = 0
 37880  007570  0101               	movlb	1	; () banked
 37881  007572  51EC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37882  007574  11ED               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37883  007576  B4D8               	btfsc	status,2,c
 37884  007578  0012               	return	
 37885                           
 37886                           ; BSR set to: 1
 37887                           ;tmr3.c: 178: {
 37888                           ;tmr3.c: 179: TMR3_InterruptHandler();
 37889  00757A  0005               	push	
 37890  00757C  6EFA               	movwf	pclath,c
 37891  00757E  51EC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37892  007580  6EFD               	movwf	tosl,c
 37893  007582  51ED               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37894  007584  6EFE               	movwf	tosh,c
 37895  007586  6AFF               	clrf	tosu,c
 37896  007588  50FA               	movf	pclath,w,c
 37897  00758A  0012               	return		;indir
 37898  00758C                     __end_of_TMR3_CallBack:
 37899                           	opt stack 0
 37900                           tosu	equ	0xFFF
 37901                           tosh	equ	0xFFE
 37902                           tosl	equ	0xFFD
 37903                           pclatu	equ	0xFFB
 37904                           pclath	equ	0xFFA
 37905                           tblptru	equ	0xFF8
 37906                           tblptrh	equ	0xFF7
 37907                           tblptrl	equ	0xFF6
 37908                           tablat	equ	0xFF5
 37909                           prodh	equ	0xFF4
 37910                           prodl	equ	0xFF3
 37911                           intcon	equ	0xFF2
 37912                           intcon2	equ	0xFF1
 37913                           intcon3	equ	0xFF0
 37914                           indf0	equ	0xFEF
 37915                           postinc0	equ	0xFEE
 37916                           plusw0	equ	0xFEB
 37917                           fsr0h	equ	0xFEA
 37918                           fsr0l	equ	0xFE9
 37919                           wreg	equ	0xFE8
 37920                           postinc1	equ	0xFE6
 37921                           postdec1	equ	0xFE5
 37922                           plusw1	equ	0xFE3
 37923                           fsr1h	equ	0xFE2
 37924                           fsr1l	equ	0xFE1
 37925                           indf2	equ	0xFDF
 37926                           postinc2	equ	0xFDE
 37927                           postdec2	equ	0xFDD
 37928                           plusw2	equ	0xFDB
 37929                           fsr2h	equ	0xFDA
 37930                           fsr2l	equ	0xFD9
 37931                           status	equ	0xFD8
 37932                           
 37933 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37934 ;; Defined at:
 37935 ;;		line 187 in file "mcc_generated_files/tmr3.c"
 37936 ;; Parameters:    Size  Location     Type
 37937 ;;		None
 37938 ;; Auto vars:     Size  Location     Type
 37939 ;;		None
 37940 ;; Return value:  Size  Location     Type
 37941 ;;                  1    wreg      void 
 37942 ;; Registers used:
 37943 ;;		None
 37944 ;; Tracked objects:
 37945 ;;		On entry : F/1
 37946 ;;		On exit  : F/1
 37947 ;;		Unchanged: F/0
 37948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37953 ;;Total ram usage:        0 bytes
 37954 ;; Hardware stack levels used:    1
 37955 ;; This function calls:
 37956 ;;		Nothing
 37957 ;; This function is called by:
 37958 ;;		_TMR3_Initialize
 37959 ;;		_TMR3_CallBack
 37960 ;; This function uses a non-reentrant model
 37961 ;;
 37962                           
 37963                           	psect	text207
 37964  00795E                     __ptext207:
 37965                           	opt stack 0
 37966  00795E                     _TMR3_DefaultInterruptHandler:
 37967                           	opt stack 15
 37968                           
 37969                           ; BSR set to: 1
 37970                           
 37971                           ;incstack = 0
 37972  00795E  0012               	return		;funcret
 37973  007960                     __end_of_TMR3_DefaultInterruptHandler:
 37974                           	opt stack 0
 37975                           tosu	equ	0xFFF
 37976                           tosh	equ	0xFFE
 37977                           tosl	equ	0xFFD
 37978                           pclatu	equ	0xFFB
 37979                           pclath	equ	0xFFA
 37980                           tblptru	equ	0xFF8
 37981                           tblptrh	equ	0xFF7
 37982                           tblptrl	equ	0xFF6
 37983                           tablat	equ	0xFF5
 37984                           prodh	equ	0xFF4
 37985                           prodl	equ	0xFF3
 37986                           intcon	equ	0xFF2
 37987                           intcon2	equ	0xFF1
 37988                           intcon3	equ	0xFF0
 37989                           indf0	equ	0xFEF
 37990                           postinc0	equ	0xFEE
 37991                           plusw0	equ	0xFEB
 37992                           fsr0h	equ	0xFEA
 37993                           fsr0l	equ	0xFE9
 37994                           wreg	equ	0xFE8
 37995                           postinc1	equ	0xFE6
 37996                           postdec1	equ	0xFE5
 37997                           plusw1	equ	0xFE3
 37998                           fsr1h	equ	0xFE2
 37999                           fsr1l	equ	0xFE1
 38000                           indf2	equ	0xFDF
 38001                           postinc2	equ	0xFDE
 38002                           postdec2	equ	0xFDD
 38003                           plusw2	equ	0xFDB
 38004                           fsr2h	equ	0xFDA
 38005                           fsr2l	equ	0xFD9
 38006                           status	equ	0xFD8
 38007                           
 38008 ;; *************** function _handle16sInterrupt *****************
 38009 ;; Defined at:
 38010 ;;		line 91 in file "main.c"
 38011 ;; Parameters:    Size  Location     Type
 38012 ;;		None
 38013 ;; Auto vars:     Size  Location     Type
 38014 ;;		None
 38015 ;; Return value:  Size  Location     Type
 38016 ;;                  1    wreg      void 
 38017 ;; Registers used:
 38018 ;;		wreg, status,2, status,0
 38019 ;; Tracked objects:
 38020 ;;		On entry : F/1
 38021 ;;		On exit  : 0/0
 38022 ;;		Unchanged: 0/0
 38023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38028 ;;Total ram usage:        0 bytes
 38029 ;; Hardware stack levels used:    1
 38030 ;; This function calls:
 38031 ;;		Nothing
 38032 ;; This function is called by:
 38033 ;;		_main
 38034 ;;		_TMR3_CallBack
 38035 ;; This function uses a non-reentrant model
 38036 ;;
 38037                           
 38038                           	psect	text208
 38039  007744                     __ptext208:
 38040                           	opt stack 0
 38041  007744                     _handle16sInterrupt:
 38042                           	opt stack 15
 38043                           
 38044                           ; BSR set to: 1
 38045                           ;main.c: 93: static volatile uint8_t counterSleepTimeout = 0;
 38046                           ;main.c: 94: if( ++counterSleepTimeout == ONE_HOUR_TIMEOUT_COUNTS )
 38047                           
 38048                           ; BSR set to: 1
 38049                           ;incstack = 0
 38050  007744  2A45               	incf	handle16sInterrupt@counterSleepTimeout,f,c	;volatile
 38051  007746  505A               	movf	_ONE_HOUR_TIMEOUT_COUNTS,w,c
 38052  007748  1845               	xorwf	handle16sInterrupt@counterSleepTimeout,w,c	;volatile
 38053  00774A  E104               	bnz	i2l2724
 38054                           
 38055                           ; BSR set to: 1
 38056                           ;main.c: 95: {
 38057                           ;main.c: 97: TimeToSend = 1;
 38058  00774C  0E01               	movlw	1
 38059  00774E  6FC3               	movwf	_TimeToSend& (0+255),b
 38060                           
 38061                           ; BSR set to: 1
 38062                           ;main.c: 98: counterSleepTimeout = 0;
 38063  007750  6A45               	clrf	handle16sInterrupt@counterSleepTimeout,c	;volatile
 38064                           
 38065                           ;main.c: 99: }
 38066  007752  0012               	return	
 38067  007754                     i2l2724:
 38068                           
 38069                           ; BSR set to: 1
 38070  007754  0003               	sleep		;# 
 38071  007756  0012               	return		;funcret
 38072  007758                     __end_of_handle16sInterrupt:
 38073                           	opt stack 0
 38074                           tosu	equ	0xFFF
 38075                           tosh	equ	0xFFE
 38076                           tosl	equ	0xFFD
 38077                           pclatu	equ	0xFFB
 38078                           pclath	equ	0xFFA
 38079                           tblptru	equ	0xFF8
 38080                           tblptrh	equ	0xFF7
 38081                           tblptrl	equ	0xFF6
 38082                           tablat	equ	0xFF5
 38083                           prodh	equ	0xFF4
 38084                           prodl	equ	0xFF3
 38085                           intcon	equ	0xFF2
 38086                           intcon2	equ	0xFF1
 38087                           intcon3	equ	0xFF0
 38088                           indf0	equ	0xFEF
 38089                           postinc0	equ	0xFEE
 38090                           plusw0	equ	0xFEB
 38091                           fsr0h	equ	0xFEA
 38092                           fsr0l	equ	0xFE9
 38093                           wreg	equ	0xFE8
 38094                           postinc1	equ	0xFE6
 38095                           postdec1	equ	0xFE5
 38096                           plusw1	equ	0xFE3
 38097                           fsr1h	equ	0xFE2
 38098                           fsr1l	equ	0xFE1
 38099                           indf2	equ	0xFDF
 38100                           postinc2	equ	0xFDE
 38101                           postdec2	equ	0xFDD
 38102                           plusw2	equ	0xFDB
 38103                           fsr2h	equ	0xFDA
 38104                           fsr2l	equ	0xFD9
 38105                           status	equ	0xFD8
 38106                           
 38107 ;; *************** function _TMR1_ISR *****************
 38108 ;; Defined at:
 38109 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 38110 ;; Parameters:    Size  Location     Type
 38111 ;;		None
 38112 ;; Auto vars:     Size  Location     Type
 38113 ;;		None
 38114 ;; Return value:  Size  Location     Type
 38115 ;;                  1    wreg      void 
 38116 ;; Registers used:
 38117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38118 ;; Tracked objects:
 38119 ;;		On entry : 0/0
 38120 ;;		On exit  : 0/0
 38121 ;;		Unchanged: 0/0
 38122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38127 ;;Total ram usage:        0 bytes
 38128 ;; Hardware stack levels used:    1
 38129 ;; Hardware stack levels required when called:    5
 38130 ;; This function calls:
 38131 ;;		_TMR1_CallBack
 38132 ;; This function is called by:
 38133 ;;		_INTERRUPT_InterruptManager
 38134 ;; This function uses a non-reentrant model
 38135 ;;
 38136                           
 38137                           	psect	text209
 38138  0077E0                     __ptext209:
 38139                           	opt stack 0
 38140  0077E0                     _TMR1_ISR:
 38141                           	opt stack 12
 38142                           
 38143                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 38144                           
 38145                           ;incstack = 0
 38146  0077E0  909E               	bcf	3998,0,c	;volatile
 38147                           
 38148                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 38149  0077E2  C05C  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 38150                           
 38151                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 38152  0077E6  C05B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 38153                           
 38154                           ;tmr1.c: 171: TMR1_CallBack();
 38155  0077EA  EFC6  F03A         	goto	_TMR1_CallBack	;wreg free
 38156  0077EE                     __end_of_TMR1_ISR:
 38157                           	opt stack 0
 38158                           tosu	equ	0xFFF
 38159                           tosh	equ	0xFFE
 38160                           tosl	equ	0xFFD
 38161                           pclatu	equ	0xFFB
 38162                           pclath	equ	0xFFA
 38163                           tblptru	equ	0xFF8
 38164                           tblptrh	equ	0xFF7
 38165                           tblptrl	equ	0xFF6
 38166                           tablat	equ	0xFF5
 38167                           prodh	equ	0xFF4
 38168                           prodl	equ	0xFF3
 38169                           intcon	equ	0xFF2
 38170                           intcon2	equ	0xFF1
 38171                           intcon3	equ	0xFF0
 38172                           indf0	equ	0xFEF
 38173                           postinc0	equ	0xFEE
 38174                           plusw0	equ	0xFEB
 38175                           fsr0h	equ	0xFEA
 38176                           fsr0l	equ	0xFE9
 38177                           wreg	equ	0xFE8
 38178                           postinc1	equ	0xFE6
 38179                           postdec1	equ	0xFE5
 38180                           plusw1	equ	0xFE3
 38181                           fsr1h	equ	0xFE2
 38182                           fsr1l	equ	0xFE1
 38183                           indf2	equ	0xFDF
 38184                           postinc2	equ	0xFDE
 38185                           postdec2	equ	0xFDD
 38186                           plusw2	equ	0xFDB
 38187                           fsr2h	equ	0xFDA
 38188                           fsr2l	equ	0xFD9
 38189                           status	equ	0xFD8
 38190                           
 38191 ;; *************** function _TMR1_CallBack *****************
 38192 ;; Defined at:
 38193 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 38194 ;; Parameters:    Size  Location     Type
 38195 ;;		None
 38196 ;; Auto vars:     Size  Location     Type
 38197 ;;		None
 38198 ;; Return value:  Size  Location     Type
 38199 ;;                  1    wreg      void 
 38200 ;; Registers used:
 38201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38202 ;; Tracked objects:
 38203 ;;		On entry : 0/0
 38204 ;;		On exit  : 0/0
 38205 ;;		Unchanged: 0/0
 38206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38211 ;;Total ram usage:        0 bytes
 38212 ;; Hardware stack levels used:    1
 38213 ;; Hardware stack levels required when called:    4
 38214 ;; This function calls:
 38215 ;;		Absolute function
 38216 ;;		_TMR1_DefaultInterruptHandler
 38217 ;;		_TMR_ISR_lora
 38218 ;; This function is called by:
 38219 ;;		_TMR1_ISR
 38220 ;; This function uses a non-reentrant model
 38221 ;;
 38222                           
 38223                           	psect	text210
 38224  00758C                     __ptext210:
 38225                           	opt stack 0
 38226  00758C                     _TMR1_CallBack:
 38227                           	opt stack 12
 38228                           
 38229                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 38230                           
 38231                           ;incstack = 0
 38232  00758C  0101               	movlb	1	; () banked
 38233  00758E  51EA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38234  007590  11EB               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38235  007592  B4D8               	btfsc	status,2,c
 38236  007594  0012               	return	
 38237                           
 38238                           ; BSR set to: 1
 38239                           ;tmr1.c: 178: {
 38240                           ;tmr1.c: 179: TMR1_InterruptHandler();
 38241  007596  0005               	push	
 38242  007598  6EFA               	movwf	pclath,c
 38243  00759A  51EA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38244  00759C  6EFD               	movwf	tosl,c
 38245  00759E  51EB               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38246  0075A0  6EFE               	movwf	tosh,c
 38247  0075A2  6AFF               	clrf	tosu,c
 38248  0075A4  50FA               	movf	pclath,w,c
 38249  0075A6  0012               	return		;indir
 38250  0075A8                     __end_of_TMR1_CallBack:
 38251                           	opt stack 0
 38252                           tosu	equ	0xFFF
 38253                           tosh	equ	0xFFE
 38254                           tosl	equ	0xFFD
 38255                           pclatu	equ	0xFFB
 38256                           pclath	equ	0xFFA
 38257                           tblptru	equ	0xFF8
 38258                           tblptrh	equ	0xFF7
 38259                           tblptrl	equ	0xFF6
 38260                           tablat	equ	0xFF5
 38261                           prodh	equ	0xFF4
 38262                           prodl	equ	0xFF3
 38263                           intcon	equ	0xFF2
 38264                           intcon2	equ	0xFF1
 38265                           intcon3	equ	0xFF0
 38266                           indf0	equ	0xFEF
 38267                           postinc0	equ	0xFEE
 38268                           plusw0	equ	0xFEB
 38269                           fsr0h	equ	0xFEA
 38270                           fsr0l	equ	0xFE9
 38271                           wreg	equ	0xFE8
 38272                           postinc1	equ	0xFE6
 38273                           postdec1	equ	0xFE5
 38274                           plusw1	equ	0xFE3
 38275                           fsr1h	equ	0xFE2
 38276                           fsr1l	equ	0xFE1
 38277                           indf2	equ	0xFDF
 38278                           postinc2	equ	0xFDE
 38279                           postdec2	equ	0xFDD
 38280                           plusw2	equ	0xFDB
 38281                           fsr2h	equ	0xFDA
 38282                           fsr2l	equ	0xFD9
 38283                           status	equ	0xFD8
 38284                           
 38285 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38286 ;; Defined at:
 38287 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 38288 ;; Parameters:    Size  Location     Type
 38289 ;;		None
 38290 ;; Auto vars:     Size  Location     Type
 38291 ;;		None
 38292 ;; Return value:  Size  Location     Type
 38293 ;;                  1    wreg      void 
 38294 ;; Registers used:
 38295 ;;		None
 38296 ;; Tracked objects:
 38297 ;;		On entry : F/1
 38298 ;;		On exit  : F/1
 38299 ;;		Unchanged: F/0
 38300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38305 ;;Total ram usage:        0 bytes
 38306 ;; Hardware stack levels used:    1
 38307 ;; This function calls:
 38308 ;;		Nothing
 38309 ;; This function is called by:
 38310 ;;		_TMR1_Initialize
 38311 ;;		_TMR1_CallBack
 38312 ;; This function uses a non-reentrant model
 38313 ;;
 38314                           
 38315                           	psect	text211
 38316  007960                     __ptext211:
 38317                           	opt stack 0
 38318  007960                     _TMR1_DefaultInterruptHandler:
 38319                           	opt stack 15
 38320                           
 38321                           ; BSR set to: 1
 38322                           
 38323                           ;incstack = 0
 38324  007960  0012               	return		;funcret
 38325  007962                     __end_of_TMR1_DefaultInterruptHandler:
 38326                           	opt stack 0
 38327                           tosu	equ	0xFFF
 38328                           tosh	equ	0xFFE
 38329                           tosl	equ	0xFFD
 38330                           pclatu	equ	0xFFB
 38331                           pclath	equ	0xFFA
 38332                           tblptru	equ	0xFF8
 38333                           tblptrh	equ	0xFF7
 38334                           tblptrl	equ	0xFF6
 38335                           tablat	equ	0xFF5
 38336                           prodh	equ	0xFF4
 38337                           prodl	equ	0xFF3
 38338                           intcon	equ	0xFF2
 38339                           intcon2	equ	0xFF1
 38340                           intcon3	equ	0xFF0
 38341                           indf0	equ	0xFEF
 38342                           postinc0	equ	0xFEE
 38343                           plusw0	equ	0xFEB
 38344                           fsr0h	equ	0xFEA
 38345                           fsr0l	equ	0xFE9
 38346                           wreg	equ	0xFE8
 38347                           postinc1	equ	0xFE6
 38348                           postdec1	equ	0xFE5
 38349                           plusw1	equ	0xFE3
 38350                           fsr1h	equ	0xFE2
 38351                           fsr1l	equ	0xFE1
 38352                           indf2	equ	0xFDF
 38353                           postinc2	equ	0xFDE
 38354                           postdec2	equ	0xFDD
 38355                           plusw2	equ	0xFDB
 38356                           fsr2h	equ	0xFDA
 38357                           fsr2l	equ	0xFD9
 38358                           status	equ	0xFD8
 38359                           
 38360 ;; *************** function _TMR_ISR_lora *****************
 38361 ;; Defined at:
 38362 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38363 ;; Parameters:    Size  Location     Type
 38364 ;;		None
 38365 ;; Auto vars:     Size  Location     Type
 38366 ;;		None
 38367 ;; Return value:  Size  Location     Type
 38368 ;;                  1    wreg      void 
 38369 ;; Registers used:
 38370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38371 ;; Tracked objects:
 38372 ;;		On entry : F/1
 38373 ;;		On exit  : 0/0
 38374 ;;		Unchanged: 0/0
 38375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38380 ;;Total ram usage:        0 bytes
 38381 ;; Hardware stack levels used:    1
 38382 ;; Hardware stack levels required when called:    3
 38383 ;; This function calls:
 38384 ;;		i2_SwTimersInterrupt
 38385 ;;		i2_TMR_SwapTimer
 38386 ;; This function is called by:
 38387 ;;		_TMR_ISR_Lora_Init
 38388 ;;		_TMR1_CallBack
 38389 ;; This function uses a non-reentrant model
 38390 ;;
 38391                           
 38392                           	psect	text212
 38393  006A60                     __ptext212:
 38394                           	opt stack 0
 38395  006A60                     _TMR_ISR_lora:
 38396                           	opt stack 12
 38397                           
 38398                           ; BSR set to: 1
 38399                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38400                           
 38401                           ; BSR set to: 1
 38402                           ;incstack = 0
 38403  006A60  0E01               	movlw	1
 38404  006A62  0100               	movlb	0	; () banked
 38405  006A64  6FF2               	movwf	_timerOverflow& (0+255),b	;volatile
 38406                           
 38407                           ; BSR set to: 0
 38408                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38409  006A66  EC1A  F027         	call	i2_SwTimersInterrupt	;wreg free
 38410  006A6A  C019  F056         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38411  006A6E  C01A  F057         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38412  006A72  C01B  F058         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38413  006A76  C01C  F059         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38414                           
 38415                           ; BSR set to: 0
 38416                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38417  006A7A  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38418  006A7C  E117               	bnz	i2l242
 38419  006A7E  0458               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38420  006A80  B0D8               	btfsc	status,0,c
 38421  006A82  0012               	return	
 38422                           
 38423                           ; BSR set to: 0
 38424                           ;tmr_lora_addons.c: 66: {
 38425                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38426  006A84  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38427  006A86  0800               	sublw	0
 38428  006A88  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 38429  006A8A  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38430  006A8C  A0D8               	btfss	status,0,c
 38431  006A8E  2AE8               	incf	wreg,f,c
 38432  006A90  0800               	sublw	0
 38433  006A92  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38434                           
 38435                           ; BSR set to: 0
 38436                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38437  006A94  C0EC  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38438  006A98  C0ED  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38439  006A9C  ECF3  F036         	call	i2_TMR_SwapTimer	;wreg free
 38440  006AA0  C009  F03A         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38441  006AA4  C00A  F03B         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38442  006AA8  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38443  006AAA  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38444  006AAC                     i2l242:
 38445  006AAC  0012               	return		;funcret
 38446  006AAE                     __end_of_TMR_ISR_lora:
 38447                           	opt stack 0
 38448                           tosu	equ	0xFFF
 38449                           tosh	equ	0xFFE
 38450                           tosl	equ	0xFFD
 38451                           pclatu	equ	0xFFB
 38452                           pclath	equ	0xFFA
 38453                           tblptru	equ	0xFF8
 38454                           tblptrh	equ	0xFF7
 38455                           tblptrl	equ	0xFF6
 38456                           tablat	equ	0xFF5
 38457                           prodh	equ	0xFF4
 38458                           prodl	equ	0xFF3
 38459                           intcon	equ	0xFF2
 38460                           intcon2	equ	0xFF1
 38461                           intcon3	equ	0xFF0
 38462                           indf0	equ	0xFEF
 38463                           postinc0	equ	0xFEE
 38464                           plusw0	equ	0xFEB
 38465                           fsr0h	equ	0xFEA
 38466                           fsr0l	equ	0xFE9
 38467                           wreg	equ	0xFE8
 38468                           postinc1	equ	0xFE6
 38469                           postdec1	equ	0xFE5
 38470                           plusw1	equ	0xFE3
 38471                           fsr1h	equ	0xFE2
 38472                           fsr1l	equ	0xFE1
 38473                           indf2	equ	0xFDF
 38474                           postinc2	equ	0xFDE
 38475                           postdec2	equ	0xFDD
 38476                           plusw2	equ	0xFDB
 38477                           fsr2h	equ	0xFDA
 38478                           fsr2l	equ	0xFD9
 38479                           status	equ	0xFD8
 38480                           
 38481 ;; *************** function i2_TMR_SwapTimer *****************
 38482 ;; Defined at:
 38483 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38484 ;; Parameters:    Size  Location     Type
 38485 ;;  timerVal        2    8[COMRAM] unsigned int 
 38486 ;; Auto vars:     Size  Location     Type
 38487 ;;		None
 38488 ;; Return value:  Size  Location     Type
 38489 ;;                  2    8[COMRAM] unsigned int 
 38490 ;; Registers used:
 38491 ;;		wreg, status,2, status,0, cstack
 38492 ;; Tracked objects:
 38493 ;;		On entry : F/0
 38494 ;;		On exit  : 0/0
 38495 ;;		Unchanged: 0/0
 38496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38501 ;;Total ram usage:        2 bytes
 38502 ;; Hardware stack levels used:    1
 38503 ;; Hardware stack levels required when called:    1
 38504 ;; This function calls:
 38505 ;;		i2_TMR1_ReadTimer
 38506 ;;		i2_TMR1_WriteTimer
 38507 ;; This function is called by:
 38508 ;;		_TMR_ISR_lora
 38509 ;; This function uses a non-reentrant model
 38510 ;;
 38511                           
 38512                           	psect	text213
 38513  006DE6                     __ptext213:
 38514                           	opt stack 0
 38515  006DE6                     i2_TMR_SwapTimer:
 38516                           	opt stack 13
 38517                           
 38518                           ; BSR set to: 0
 38519                           ;sw_timer.c: 114: static uint16_t oldVal;
 38520                           ;sw_timer.c: 115: static uint16_t retVal;
 38521                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38522                           
 38523                           ;incstack = 0
 38524  006DE6  EC8D  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38525  006DEA  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38526  006DEE  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38527  006DF2                     i2l10626:
 38528  006DF2  EC8D  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38529  006DF6  5040               	movf	TMR_SwapTimer@oldVal,w,c
 38530  006DF8  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38531  006DFA  E103               	bnz	i2u1100_40
 38532  006DFC  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 38533  006DFE  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38534  006E00  E0F8               	bz	i2l10626
 38535  006E02                     i2u1100_40:
 38536                           
 38537                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38538  006E02  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38539  006E06  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38540  006E0A  ECD4  F03A         	call	i2_TMR1_WriteTimer	;wreg free
 38541                           
 38542                           ;sw_timer.c: 128: oldVal++;
 38543  006E0E  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 38544  006E10  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 38545                           
 38546                           ;sw_timer.c: 130: retVal = oldVal;
 38547  006E12  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38548  006E16  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38549                           
 38550                           ;sw_timer.c: 132: return retVal;
 38551  006E1A  C042  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38552  006E1E  C043  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38553  006E22  0012               	return		;funcret
 38554  006E24                     __end_ofi2_TMR_SwapTimer:
 38555                           	opt stack 0
 38556                           tosu	equ	0xFFF
 38557                           tosh	equ	0xFFE
 38558                           tosl	equ	0xFFD
 38559                           pclatu	equ	0xFFB
 38560                           pclath	equ	0xFFA
 38561                           tblptru	equ	0xFF8
 38562                           tblptrh	equ	0xFF7
 38563                           tblptrl	equ	0xFF6
 38564                           tablat	equ	0xFF5
 38565                           prodh	equ	0xFF4
 38566                           prodl	equ	0xFF3
 38567                           intcon	equ	0xFF2
 38568                           intcon2	equ	0xFF1
 38569                           intcon3	equ	0xFF0
 38570                           indf0	equ	0xFEF
 38571                           postinc0	equ	0xFEE
 38572                           plusw0	equ	0xFEB
 38573                           fsr0h	equ	0xFEA
 38574                           fsr0l	equ	0xFE9
 38575                           wreg	equ	0xFE8
 38576                           postinc1	equ	0xFE6
 38577                           postdec1	equ	0xFE5
 38578                           plusw1	equ	0xFE3
 38579                           fsr1h	equ	0xFE2
 38580                           fsr1l	equ	0xFE1
 38581                           indf2	equ	0xFDF
 38582                           postinc2	equ	0xFDE
 38583                           postdec2	equ	0xFDD
 38584                           plusw2	equ	0xFDB
 38585                           fsr2h	equ	0xFDA
 38586                           fsr2l	equ	0xFD9
 38587                           status	equ	0xFD8
 38588                           
 38589 ;; *************** function i2_TMR1_WriteTimer *****************
 38590 ;; Defined at:
 38591 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 38592 ;; Parameters:    Size  Location     Type
 38593 ;;  timerVal        2    0[COMRAM] unsigned int 
 38594 ;; Auto vars:     Size  Location     Type
 38595 ;;		None
 38596 ;; Return value:  Size  Location     Type
 38597 ;;                  1    wreg      void 
 38598 ;; Registers used:
 38599 ;;		None
 38600 ;; Tracked objects:
 38601 ;;		On entry : 0/0
 38602 ;;		On exit  : 0/0
 38603 ;;		Unchanged: 0/0
 38604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38609 ;;Total ram usage:        2 bytes
 38610 ;; Hardware stack levels used:    1
 38611 ;; This function calls:
 38612 ;;		Nothing
 38613 ;; This function is called by:
 38614 ;;		i2_TMR_SwapTimer
 38615 ;; This function uses a non-reentrant model
 38616 ;;
 38617                           
 38618                           	psect	text214
 38619  0075A8                     __ptext214:
 38620                           	opt stack 0
 38621  0075A8                     i2_TMR1_WriteTimer:
 38622                           	opt stack 13
 38623                           
 38624                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 38625                           
 38626                           ;incstack = 0
 38627  0075A8  A4CD               	btfss	4045,2,c	;volatile
 38628  0075AA  D007               	goto	i2l1347
 38629                           
 38630                           ;tmr1.c: 123: {
 38631                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 38632  0075AC  90CD               	bcf	4045,0,c	;volatile
 38633                           
 38634                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 38635  0075AE  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38636                           
 38637                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 38638  0075B2  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38639                           
 38640                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 38641  0075B6  80CD               	bsf	4045,0,c	;volatile
 38642                           
 38643                           ;tmr1.c: 133: }
 38644  0075B8  0012               	return	
 38645  0075BA                     i2l1347:
 38646                           
 38647                           ;tmr1.c: 134: else
 38648                           ;tmr1.c: 135: {
 38649                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 38650  0075BA  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38651                           
 38652                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 38653  0075BE  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38654  0075C2  0012               	return		;funcret
 38655  0075C4                     __end_ofi2_TMR1_WriteTimer:
 38656                           	opt stack 0
 38657                           tosu	equ	0xFFF
 38658                           tosh	equ	0xFFE
 38659                           tosl	equ	0xFFD
 38660                           pclatu	equ	0xFFB
 38661                           pclath	equ	0xFFA
 38662                           tblptru	equ	0xFF8
 38663                           tblptrh	equ	0xFF7
 38664                           tblptrl	equ	0xFF6
 38665                           tablat	equ	0xFF5
 38666                           prodh	equ	0xFF4
 38667                           prodl	equ	0xFF3
 38668                           intcon	equ	0xFF2
 38669                           intcon2	equ	0xFF1
 38670                           intcon3	equ	0xFF0
 38671                           indf0	equ	0xFEF
 38672                           postinc0	equ	0xFEE
 38673                           plusw0	equ	0xFEB
 38674                           fsr0h	equ	0xFEA
 38675                           fsr0l	equ	0xFE9
 38676                           wreg	equ	0xFE8
 38677                           postinc1	equ	0xFE6
 38678                           postdec1	equ	0xFE5
 38679                           plusw1	equ	0xFE3
 38680                           fsr1h	equ	0xFE2
 38681                           fsr1l	equ	0xFE1
 38682                           indf2	equ	0xFDF
 38683                           postinc2	equ	0xFDE
 38684                           postdec2	equ	0xFDD
 38685                           plusw2	equ	0xFDB
 38686                           fsr2h	equ	0xFDA
 38687                           fsr2l	equ	0xFD9
 38688                           status	equ	0xFD8
 38689                           
 38690 ;; *************** function i2_SwTimersInterrupt *****************
 38691 ;; Defined at:
 38692 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38693 ;; Parameters:    Size  Location     Type
 38694 ;;		None
 38695 ;; Auto vars:     Size  Location     Type
 38696 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 38697 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 38698 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 38699 ;; Return value:  Size  Location     Type
 38700 ;;                  4   24[COMRAM] unsigned long 
 38701 ;; Registers used:
 38702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38703 ;; Tracked objects:
 38704 ;;		On entry : F/0
 38705 ;;		On exit  : F/0
 38706 ;;		Unchanged: 0/0
 38707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38709 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38711 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38712 ;;Total ram usage:       17 bytes
 38713 ;; Hardware stack levels used:    1
 38714 ;; Hardware stack levels required when called:    2
 38715 ;; This function calls:
 38716 ;;		i2_TMR_GetDeltaTime
 38717 ;; This function is called by:
 38718 ;;		_TMR_ISR_lora
 38719 ;; This function uses a non-reentrant model
 38720 ;;
 38721                           
 38722                           	psect	text215
 38723  004E34                     __ptext215:
 38724                           	opt stack 0
 38725  004E34                     i2_SwTimersInterrupt:
 38726                           	opt stack 12
 38727                           
 38728                           ; BSR set to: 0
 38729                           ;sw_timer.c: 289: uint8_t i;
 38730                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38731                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38732                           
 38733                           ;incstack = 0
 38734  004E34  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 38735  004E36  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 38736  004E38  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 38737  004E3A  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 38738                           
 38739                           ; BSR set to: 0
 38740                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38741  004E3C  EC2D  F026         	call	i2_TMR_GetDeltaTime	;wreg free
 38742  004E40  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 38743  004E44  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 38744  004E48  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 38745  004E4C  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 38746                           
 38747                           ; BSR set to: 0
 38748                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38749  004E50  6A29               	clrf	i2SwTimersInterrupt@i,c
 38750  004E52  D05A               	goto	i2l10656
 38751  004E54                     i2l10644:
 38752                           
 38753                           ; BSR set to: 0
 38754                           ;sw_timer.c: 298: {
 38755                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38756  004E54  5029               	movf	i2SwTimersInterrupt@i,w,c
 38757  004E56  0D08               	mullw	8
 38758  004E58  0E04               	movlw	low (_swTimers+4)
 38759  004E5A  24F3               	addwf	prodl,w,c
 38760  004E5C  6ED9               	movwf	fsr2l,c
 38761  004E5E  0E03               	movlw	high (_swTimers+4)
 38762  004E60  20F4               	addwfc	prodh,w,c
 38763  004E62  6EDA               	movwf	fsr2h,c
 38764  004E64  04DE               	decf	postinc2,w,c
 38765  004E66  E14F               	bnz	i2l10654
 38766                           
 38767                           ; BSR set to: 0
 38768                           ;sw_timer.c: 302: {
 38769                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38770  004E68  5029               	movf	i2SwTimersInterrupt@i,w,c
 38771  004E6A  0D08               	mullw	8
 38772  004E6C  0E00               	movlw	low _swTimers
 38773  004E6E  24F3               	addwf	prodl,w,c
 38774  004E70  6ED9               	movwf	fsr2l,c
 38775  004E72  0E03               	movlw	high _swTimers
 38776  004E74  20F4               	addwfc	prodh,w,c
 38777  004E76  6EDA               	movwf	fsr2h,c
 38778  004E78  50DE               	movf	postinc2,w,c
 38779  004E7A  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 38780  004E7C  50DE               	movf	postinc2,w,c
 38781  004E7E  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 38782  004E80  50DE               	movf	postinc2,w,c
 38783  004E82  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 38784  004E84  50DE               	movf	postinc2,w,c
 38785  004E86  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 38786  004E88  E30D               	bnc	i2l10650
 38787                           
 38788                           ; BSR set to: 0
 38789                           ;sw_timer.c: 304: {
 38790                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38791  004E8A  5029               	movf	i2SwTimersInterrupt@i,w,c
 38792  004E8C  0D08               	mullw	8
 38793  004E8E  0E00               	movlw	low _swTimers
 38794  004E90  24F3               	addwf	prodl,w,c
 38795  004E92  6ED9               	movwf	fsr2l,c
 38796  004E94  0E03               	movlw	high _swTimers
 38797  004E96  20F4               	addwfc	prodh,w,c
 38798  004E98  6EDA               	movwf	fsr2h,c
 38799  004E9A  6ADE               	clrf	postinc2,c
 38800  004E9C  6ADE               	clrf	postinc2,c
 38801  004E9E  6ADE               	clrf	postinc2,c
 38802  004EA0  6ADD               	clrf	postdec2,c
 38803                           
 38804                           ;sw_timer.c: 306: }
 38805  004EA2  D031               	goto	i2l10654
 38806  004EA4                     i2l10650:
 38807                           
 38808                           ; BSR set to: 0
 38809                           ;sw_timer.c: 307: else
 38810                           ;sw_timer.c: 308: {
 38811                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38812  004EA4  5029               	movf	i2SwTimersInterrupt@i,w,c
 38813  004EA6  0D08               	mullw	8
 38814  004EA8  0E00               	movlw	low _swTimers
 38815  004EAA  24F3               	addwf	prodl,w,c
 38816  004EAC  6ED9               	movwf	fsr2l,c
 38817  004EAE  0E03               	movlw	high _swTimers
 38818  004EB0  20F4               	addwfc	prodh,w,c
 38819  004EB2  6EDA               	movwf	fsr2h,c
 38820  004EB4  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 38821  004EB6  5EDE               	subwf	postinc2,f,c
 38822  004EB8  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 38823  004EBA  5ADE               	subwfb	postinc2,f,c
 38824  004EBC  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 38825  004EBE  5ADE               	subwfb	postinc2,f,c
 38826  004EC0  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 38827  004EC2  5ADE               	subwfb	postinc2,f,c
 38828                           
 38829                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38830  004EC4  5029               	movf	i2SwTimersInterrupt@i,w,c
 38831  004EC6  0D08               	mullw	8
 38832  004EC8  0E00               	movlw	low _swTimers
 38833  004ECA  24F3               	addwf	prodl,w,c
 38834  004ECC  6ED9               	movwf	fsr2l,c
 38835  004ECE  0E03               	movlw	high _swTimers
 38836  004ED0  20F4               	addwfc	prodh,w,c
 38837  004ED2  6EDA               	movwf	fsr2h,c
 38838  004ED4  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 38839  004ED6  5CDE               	subwf	postinc2,w,c
 38840  004ED8  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 38841  004EDA  58DE               	subwfb	postinc2,w,c
 38842  004EDC  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 38843  004EDE  58DE               	subwfb	postinc2,w,c
 38844  004EE0  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 38845  004EE2  58DE               	subwfb	postinc2,w,c
 38846  004EE4  E210               	bc	i2l10654
 38847                           
 38848                           ; BSR set to: 0
 38849                           ;sw_timer.c: 313: {
 38850                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38851  004EE6  5029               	movf	i2SwTimersInterrupt@i,w,c
 38852  004EE8  0D08               	mullw	8
 38853  004EEA  0E00               	movlw	low _swTimers
 38854  004EEC  24F3               	addwf	prodl,w,c
 38855  004EEE  6ED9               	movwf	fsr2l,c
 38856  004EF0  0E03               	movlw	high _swTimers
 38857  004EF2  20F4               	addwfc	prodh,w,c
 38858  004EF4  6EDA               	movwf	fsr2h,c
 38859  004EF6  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 38860  004EFA  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 38861  004EFE  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 38862  004F02  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 38863  004F06                     i2l10654:
 38864                           
 38865                           ; BSR set to: 0
 38866  004F06  2A29               	incf	i2SwTimersInterrupt@i,f,c
 38867  004F08                     i2l10656:
 38868                           
 38869                           ; BSR set to: 0
 38870  004F08  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38871  004F0A  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 38872  004F0C  E3A3               	bnc	i2l10644
 38873                           
 38874                           ; BSR set to: 0
 38875                           ;sw_timer.c: 315: }
 38876                           ;sw_timer.c: 316: }
 38877                           ;sw_timer.c: 317: }
 38878                           ;sw_timer.c: 318: }
 38879                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38880  004F0E  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 38881  004F12  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 38882  004F16  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 38883  004F1A  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 38884                           
 38885                           ; BSR set to: 0
 38886  004F1E  0012               	return		;funcret
 38887  004F20                     __end_ofi2_SwTimersInterrupt:
 38888                           	opt stack 0
 38889                           tosu	equ	0xFFF
 38890                           tosh	equ	0xFFE
 38891                           tosl	equ	0xFFD
 38892                           pclatu	equ	0xFFB
 38893                           pclath	equ	0xFFA
 38894                           tblptru	equ	0xFF8
 38895                           tblptrh	equ	0xFF7
 38896                           tblptrl	equ	0xFF6
 38897                           tablat	equ	0xFF5
 38898                           prodh	equ	0xFF4
 38899                           prodl	equ	0xFF3
 38900                           intcon	equ	0xFF2
 38901                           intcon2	equ	0xFF1
 38902                           intcon3	equ	0xFF0
 38903                           indf0	equ	0xFEF
 38904                           postinc0	equ	0xFEE
 38905                           plusw0	equ	0xFEB
 38906                           fsr0h	equ	0xFEA
 38907                           fsr0l	equ	0xFE9
 38908                           wreg	equ	0xFE8
 38909                           postinc1	equ	0xFE6
 38910                           postdec1	equ	0xFE5
 38911                           plusw1	equ	0xFE3
 38912                           fsr1h	equ	0xFE2
 38913                           fsr1l	equ	0xFE1
 38914                           indf2	equ	0xFDF
 38915                           postinc2	equ	0xFDE
 38916                           postdec2	equ	0xFDD
 38917                           plusw2	equ	0xFDB
 38918                           fsr2h	equ	0xFDA
 38919                           fsr2l	equ	0xFD9
 38920                           status	equ	0xFD8
 38921                           
 38922 ;; *************** function i2_TMR_GetDeltaTime *****************
 38923 ;; Defined at:
 38924 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38925 ;; Parameters:    Size  Location     Type
 38926 ;;		None
 38927 ;; Auto vars:     Size  Location     Type
 38928 ;;		None
 38929 ;; Return value:  Size  Location     Type
 38930 ;;                  4    8[COMRAM] unsigned long 
 38931 ;; Registers used:
 38932 ;;		wreg, status,2, status,0, cstack
 38933 ;; Tracked objects:
 38934 ;;		On entry : F/0
 38935 ;;		On exit  : F/0
 38936 ;;		Unchanged: 0/0
 38937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38940 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38941 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38942 ;;Total ram usage:       16 bytes
 38943 ;; Hardware stack levels used:    1
 38944 ;; Hardware stack levels required when called:    1
 38945 ;; This function calls:
 38946 ;;		i2_TMR1_ReadTimer
 38947 ;; This function is called by:
 38948 ;;		i2_SwTimersInterrupt
 38949 ;; This function uses a non-reentrant model
 38950 ;;
 38951                           
 38952                           	psect	text216
 38953  004C5A                     __ptext216:
 38954                           	opt stack 0
 38955  004C5A                     i2_TMR_GetDeltaTime:
 38956                           	opt stack 12
 38957                           
 38958                           ; BSR set to: 0
 38959                           ;sw_timer.c: 90: static uint32_t retVal;
 38960                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38961                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38962                           
 38963                           ; BSR set to: 0
 38964                           ;incstack = 0
 38965  004C5A  EC8D  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38966  004C5E  C001  F03E         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38967  004C62  C002  F03F         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38968                           
 38969                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38970  004C66  0100               	movlb	0	; () banked
 38971  004C68  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 38972  004C6A  E13D               	bnz	i2l9962
 38973                           
 38974                           ; BSR set to: 0
 38975                           ;sw_timer.c: 96: {
 38976                           ;sw_timer.c: 97: timerOverflow = 0;
 38977  004C6C  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 38978                           
 38979                           ; BSR set to: 0
 38980                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38981  004C6E  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38982  004C70  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38983  004C72  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38984  004C74  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38985  004C76  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38986  004C78  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38987  004C7A  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38988  004C7C  A0D8               	btfss	status,0,c
 38989  004C7E  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 38990  004C80  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 38991  004C82  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38992  004C84  5036               	movf	_ticksAccounted,w,c	;volatile
 38993  004C86  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38994  004C88  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38995  004C8A  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38996  004C8C  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38997  004C8E  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38998  004C90  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38999  004C92  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 39000  004C94  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 39001  004C96  5039               	movf	_ticksAccounted+3,w,c	;volatile
 39002  004C98  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39003  004C9A  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39004  004C9C  503A               	movf	_ticksAdded,w,c	;volatile
 39005  004C9E  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39006  004CA0  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 39007  004CA2  503B               	movf	_ticksAdded+1,w,c	;volatile
 39008  004CA4  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39009  004CA6  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 39010  004CA8  503C               	movf	_ticksAdded+2,w,c	;volatile
 39011  004CAA  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39012  004CAC  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 39013  004CAE  503D               	movf	_ticksAdded+3,w,c	;volatile
 39014  004CB0  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39015  004CB2  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 39016  004CB4  0E00               	movlw	0
 39017  004CB6  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 39018  004CB8  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39019  004CBA  0E00               	movlw	0
 39020  004CBC  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 39021  004CBE  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39022  004CC0  0E01               	movlw	1
 39023  004CC2  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 39024  004CC4  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39025  004CC6  0E00               	movlw	0
 39026  004CC8  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 39027  004CCA  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39028                           
 39029                           ; BSR set to: 0
 39030                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 39031  004CCC  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 39032  004CD0  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 39033  004CD4  6A38               	clrf	_ticksAccounted+2,c	;volatile
 39034  004CD6  6A39               	clrf	_ticksAccounted+3,c	;volatile
 39035                           
 39036                           ; BSR set to: 0
 39037                           ;sw_timer.c: 100: ticksAdded = 0;
 39038  004CD8  6A3A               	clrf	_ticksAdded,c	;volatile
 39039  004CDA  6A3B               	clrf	_ticksAdded+1,c	;volatile
 39040  004CDC  6A3C               	clrf	_ticksAdded+2,c	;volatile
 39041  004CDE  6A3D               	clrf	_ticksAdded+3,c	;volatile
 39042                           
 39043                           ; BSR set to: 0
 39044                           ;sw_timer.c: 101: reloadVal = 0;
 39045  004CE0  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 39046  004CE2  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 39047                           
 39048                           ;sw_timer.c: 102: }
 39049  004CE4  D028               	goto	i2l9964
 39050  004CE6                     i2l9962:
 39051                           
 39052                           ; BSR set to: 0
 39053                           ;sw_timer.c: 103: else
 39054                           ;sw_timer.c: 104: {
 39055                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 39056  004CE6  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 39057  004CE8  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 39058  004CEA  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 39059  004CEC  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 39060  004CEE  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 39061  004CF0  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 39062  004CF2  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 39063  004CF4  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 39064  004CF6  5036               	movf	_ticksAccounted,w,c	;volatile
 39065  004CF8  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 39066  004CFA  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 39067  004CFC  5037               	movf	_ticksAccounted+1,w,c	;volatile
 39068  004CFE  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 39069  004D00  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 39070  004D02  5038               	movf	_ticksAccounted+2,w,c	;volatile
 39071  004D04  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 39072  004D06  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 39073  004D08  5039               	movf	_ticksAccounted+3,w,c	;volatile
 39074  004D0A  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39075  004D0C  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39076  004D0E  503A               	movf	_ticksAdded,w,c	;volatile
 39077  004D10  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39078  004D12  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39079  004D14  503B               	movf	_ticksAdded+1,w,c	;volatile
 39080  004D16  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39081  004D18  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39082  004D1A  503C               	movf	_ticksAdded+2,w,c	;volatile
 39083  004D1C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39084  004D1E  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39085  004D20  503D               	movf	_ticksAdded+3,w,c	;volatile
 39086  004D22  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39087  004D24  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39088                           
 39089                           ;sw_timer.c: 106: ticksAccounted += retVal;
 39090  004D26  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 39091  004D28  2636               	addwf	_ticksAccounted,f,c	;volatile
 39092  004D2A  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 39093  004D2C  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 39094  004D2E  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 39095  004D30  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 39096  004D32  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 39097  004D34  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 39098  004D36                     i2l9964:
 39099                           
 39100                           ; BSR set to: 0
 39101                           ;sw_timer.c: 107: }
 39102                           ;sw_timer.c: 109: return retVal;
 39103  004D36  C032  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 39104  004D3A  C033  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 39105  004D3E  C034  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 39106  004D42  C035  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 39107                           
 39108                           ; BSR set to: 0
 39109  004D46  0012               	return		;funcret
 39110  004D48                     __end_ofi2_TMR_GetDeltaTime:
 39111                           	opt stack 0
 39112                           tosu	equ	0xFFF
 39113                           tosh	equ	0xFFE
 39114                           tosl	equ	0xFFD
 39115                           pclatu	equ	0xFFB
 39116                           pclath	equ	0xFFA
 39117                           tblptru	equ	0xFF8
 39118                           tblptrh	equ	0xFF7
 39119                           tblptrl	equ	0xFF6
 39120                           tablat	equ	0xFF5
 39121                           prodh	equ	0xFF4
 39122                           prodl	equ	0xFF3
 39123                           intcon	equ	0xFF2
 39124                           intcon2	equ	0xFF1
 39125                           intcon3	equ	0xFF0
 39126                           indf0	equ	0xFEF
 39127                           postinc0	equ	0xFEE
 39128                           plusw0	equ	0xFEB
 39129                           fsr0h	equ	0xFEA
 39130                           fsr0l	equ	0xFE9
 39131                           wreg	equ	0xFE8
 39132                           postinc1	equ	0xFE6
 39133                           postdec1	equ	0xFE5
 39134                           plusw1	equ	0xFE3
 39135                           fsr1h	equ	0xFE2
 39136                           fsr1l	equ	0xFE1
 39137                           indf2	equ	0xFDF
 39138                           postinc2	equ	0xFDE
 39139                           postdec2	equ	0xFDD
 39140                           plusw2	equ	0xFDB
 39141                           fsr2h	equ	0xFDA
 39142                           fsr2l	equ	0xFD9
 39143                           status	equ	0xFD8
 39144                           
 39145 ;; *************** function i2_TMR1_ReadTimer *****************
 39146 ;; Defined at:
 39147 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 39148 ;; Parameters:    Size  Location     Type
 39149 ;;		None
 39150 ;; Auto vars:     Size  Location     Type
 39151 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 39152 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 39153 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 39154 ;; Return value:  Size  Location     Type
 39155 ;;                  2    0[COMRAM] unsigned int 
 39156 ;; Registers used:
 39157 ;;		wreg, status,2
 39158 ;; Tracked objects:
 39159 ;;		On entry : 0/0
 39160 ;;		On exit  : 0/0
 39161 ;;		Unchanged: 0/0
 39162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39164 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39166 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39167 ;;Total ram usage:        8 bytes
 39168 ;; Hardware stack levels used:    1
 39169 ;; This function calls:
 39170 ;;		Nothing
 39171 ;; This function is called by:
 39172 ;;		i2_TMR_GetDeltaTime
 39173 ;;		i2_TMR_SwapTimer
 39174 ;; This function uses a non-reentrant model
 39175 ;;
 39176                           
 39177                           	psect	text217
 39178  00751A                     __ptext217:
 39179                           	opt stack 0
 39180  00751A                     i2_TMR1_ReadTimer:
 39181                           	opt stack 13
 39182                           
 39183                           ;tmr1.c: 108: uint16_t readVal;
 39184                           ;tmr1.c: 109: uint8_t readValHigh;
 39185                           ;tmr1.c: 110: uint8_t readValLow;
 39186                           ;tmr1.c: 112: readValLow = TMR1L;
 39187                           
 39188                           ; BSR set to: 0
 39189                           ;incstack = 0
 39190  00751A  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39191                           
 39192                           ;tmr1.c: 113: readValHigh = TMR1H;
 39193  00751E  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39194                           
 39195                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39196  007522  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39197  007524  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39198  007526  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39199  007528  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39200  00752A  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39201                           
 39202                           ;tmr1.c: 117: return readVal;
 39203  00752E  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39204  007532  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39205  007536  0012               	return		;funcret
 39206  007538                     __end_ofi2_TMR1_ReadTimer:
 39207                           	opt stack 0
 39208                           tosu	equ	0xFFF
 39209                           tosh	equ	0xFFE
 39210                           tosl	equ	0xFFD
 39211                           pclatu	equ	0xFFB
 39212                           pclath	equ	0xFFA
 39213                           tblptru	equ	0xFF8
 39214                           tblptrh	equ	0xFF7
 39215                           tblptrl	equ	0xFF6
 39216                           tablat	equ	0xFF5
 39217                           prodh	equ	0xFF4
 39218                           prodl	equ	0xFF3
 39219                           intcon	equ	0xFF2
 39220                           intcon2	equ	0xFF1
 39221                           intcon3	equ	0xFF0
 39222                           indf0	equ	0xFEF
 39223                           postinc0	equ	0xFEE
 39224                           plusw0	equ	0xFEB
 39225                           fsr0h	equ	0xFEA
 39226                           fsr0l	equ	0xFE9
 39227                           wreg	equ	0xFE8
 39228                           postinc1	equ	0xFE6
 39229                           postdec1	equ	0xFE5
 39230                           plusw1	equ	0xFE3
 39231                           fsr1h	equ	0xFE2
 39232                           fsr1l	equ	0xFE1
 39233                           indf2	equ	0xFDF
 39234                           postinc2	equ	0xFDE
 39235                           postdec2	equ	0xFDD
 39236                           plusw2	equ	0xFDB
 39237                           fsr2h	equ	0xFDA
 39238                           fsr2l	equ	0xFD9
 39239                           status	equ	0xFD8
 39240                           
 39241 ;; *************** function _PIN_MANAGER_IOC *****************
 39242 ;; Defined at:
 39243 ;;		line 103 in file "mcc_generated_files/pin_manager.c"
 39244 ;; Parameters:    Size  Location     Type
 39245 ;;		None
 39246 ;; Auto vars:     Size  Location     Type
 39247 ;;		None
 39248 ;; Return value:  Size  Location     Type
 39249 ;;                  1    wreg      void 
 39250 ;; Registers used:
 39251 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39252 ;; Tracked objects:
 39253 ;;		On entry : 0/0
 39254 ;;		On exit  : 0/0
 39255 ;;		Unchanged: 0/0
 39256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39261 ;;Total ram usage:        0 bytes
 39262 ;; Hardware stack levels used:    1
 39263 ;; Hardware stack levels required when called:    2
 39264 ;; This function calls:
 39265 ;;		_IOCB4_ISR
 39266 ;; This function is called by:
 39267 ;;		_INTERRUPT_InterruptManager
 39268 ;; This function uses a non-reentrant model
 39269 ;;
 39270                           
 39271                           	psect	text218
 39272  0078A4                     __ptext218:
 39273                           	opt stack 0
 39274  0078A4                     _PIN_MANAGER_IOC:
 39275                           	opt stack 15
 39276                           
 39277                           ;pin_manager.c: 106: if(IOCBbits.IOCB4 == 1)
 39278                           
 39279                           ;incstack = 0
 39280  0078A4  B862               	btfsc	3938,4,c	;volatile
 39281                           
 39282                           ;pin_manager.c: 107: {
 39283                           ;pin_manager.c: 108: IOCB4_ISR();
 39284  0078A6  ECE2  F03A         	call	_IOCB4_ISR	;wreg free
 39285                           
 39286                           ;pin_manager.c: 109: }
 39287                           ;pin_manager.c: 112: INTCONbits.RBIF = 0;
 39288  0078AA  90F2               	bcf	intcon,0,c	;volatile
 39289  0078AC  0012               	return		;funcret
 39290  0078AE                     __end_of_PIN_MANAGER_IOC:
 39291                           	opt stack 0
 39292                           tosu	equ	0xFFF
 39293                           tosh	equ	0xFFE
 39294                           tosl	equ	0xFFD
 39295                           pclatu	equ	0xFFB
 39296                           pclath	equ	0xFFA
 39297                           tblptru	equ	0xFF8
 39298                           tblptrh	equ	0xFF7
 39299                           tblptrl	equ	0xFF6
 39300                           tablat	equ	0xFF5
 39301                           prodh	equ	0xFF4
 39302                           prodl	equ	0xFF3
 39303                           intcon	equ	0xFF2
 39304                           intcon2	equ	0xFF1
 39305                           intcon3	equ	0xFF0
 39306                           indf0	equ	0xFEF
 39307                           postinc0	equ	0xFEE
 39308                           plusw0	equ	0xFEB
 39309                           fsr0h	equ	0xFEA
 39310                           fsr0l	equ	0xFE9
 39311                           wreg	equ	0xFE8
 39312                           postinc1	equ	0xFE6
 39313                           postdec1	equ	0xFE5
 39314                           plusw1	equ	0xFE3
 39315                           fsr1h	equ	0xFE2
 39316                           fsr1l	equ	0xFE1
 39317                           indf2	equ	0xFDF
 39318                           postinc2	equ	0xFDE
 39319                           postdec2	equ	0xFDD
 39320                           plusw2	equ	0xFDB
 39321                           fsr2h	equ	0xFDA
 39322                           fsr2l	equ	0xFD9
 39323                           status	equ	0xFD8
 39324                           
 39325 ;; *************** function _IOCB4_ISR *****************
 39326 ;; Defined at:
 39327 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
 39328 ;; Parameters:    Size  Location     Type
 39329 ;;		None
 39330 ;; Auto vars:     Size  Location     Type
 39331 ;;		None
 39332 ;; Return value:  Size  Location     Type
 39333 ;;                  1    wreg      void 
 39334 ;; Registers used:
 39335 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39336 ;; Tracked objects:
 39337 ;;		On entry : 0/0
 39338 ;;		On exit  : 0/0
 39339 ;;		Unchanged: 0/0
 39340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39345 ;;Total ram usage:        0 bytes
 39346 ;; Hardware stack levels used:    1
 39347 ;; Hardware stack levels required when called:    1
 39348 ;; This function calls:
 39349 ;;		Absolute function
 39350 ;;		_DIO2_ISR_Lora
 39351 ;;		_IOCB4_DefaultInterruptHandler
 39352 ;; This function is called by:
 39353 ;;		_PIN_MANAGER_IOC
 39354 ;; This function uses a non-reentrant model
 39355 ;;
 39356                           
 39357                           	psect	text219
 39358  0075C4                     __ptext219:
 39359                           	opt stack 0
 39360  0075C4                     _IOCB4_ISR:
 39361                           	opt stack 15
 39362                           
 39363                           ;pin_manager.c: 124: if(IOCB4_InterruptHandler)
 39364                           
 39365                           ;incstack = 0
 39366  0075C4  0101               	movlb	1	; () banked
 39367  0075C6  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39368  0075C8  11E9               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39369  0075CA  B4D8               	btfsc	status,2,c
 39370  0075CC  0012               	return	
 39371                           
 39372                           ; BSR set to: 1
 39373                           ;pin_manager.c: 125: {
 39374                           ;pin_manager.c: 126: IOCB4_InterruptHandler();
 39375  0075CE  0005               	push	
 39376  0075D0  6EFA               	movwf	pclath,c
 39377  0075D2  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39378  0075D4  6EFD               	movwf	tosl,c
 39379  0075D6  51E9               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39380  0075D8  6EFE               	movwf	tosh,c
 39381  0075DA  6AFF               	clrf	tosu,c
 39382  0075DC  50FA               	movf	pclath,w,c
 39383  0075DE  0012               	return		;indir
 39384  0075E0                     __end_of_IOCB4_ISR:
 39385                           	opt stack 0
 39386                           tosu	equ	0xFFF
 39387                           tosh	equ	0xFFE
 39388                           tosl	equ	0xFFD
 39389                           pclatu	equ	0xFFB
 39390                           pclath	equ	0xFFA
 39391                           tblptru	equ	0xFF8
 39392                           tblptrh	equ	0xFF7
 39393                           tblptrl	equ	0xFF6
 39394                           tablat	equ	0xFF5
 39395                           prodh	equ	0xFF4
 39396                           prodl	equ	0xFF3
 39397                           intcon	equ	0xFF2
 39398                           intcon2	equ	0xFF1
 39399                           intcon3	equ	0xFF0
 39400                           indf0	equ	0xFEF
 39401                           postinc0	equ	0xFEE
 39402                           plusw0	equ	0xFEB
 39403                           fsr0h	equ	0xFEA
 39404                           fsr0l	equ	0xFE9
 39405                           wreg	equ	0xFE8
 39406                           postinc1	equ	0xFE6
 39407                           postdec1	equ	0xFE5
 39408                           plusw1	equ	0xFE3
 39409                           fsr1h	equ	0xFE2
 39410                           fsr1l	equ	0xFE1
 39411                           indf2	equ	0xFDF
 39412                           postinc2	equ	0xFDE
 39413                           postdec2	equ	0xFDD
 39414                           plusw2	equ	0xFDB
 39415                           fsr2h	equ	0xFDA
 39416                           fsr2l	equ	0xFD9
 39417                           status	equ	0xFD8
 39418                           
 39419 ;; *************** function _DIO2_ISR_Lora *****************
 39420 ;; Defined at:
 39421 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39422 ;; Parameters:    Size  Location     Type
 39423 ;;		None
 39424 ;; Auto vars:     Size  Location     Type
 39425 ;;		None
 39426 ;; Return value:  Size  Location     Type
 39427 ;;                  1    wreg      void 
 39428 ;; Registers used:
 39429 ;;		status,2, status,0
 39430 ;; Tracked objects:
 39431 ;;		On entry : F/1
 39432 ;;		On exit  : F/0
 39433 ;;		Unchanged: 0/0
 39434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39439 ;;Total ram usage:        0 bytes
 39440 ;; Hardware stack levels used:    1
 39441 ;; This function calls:
 39442 ;;		Nothing
 39443 ;; This function is called by:
 39444 ;;		_DIO2_ISR_Lora_Init
 39445 ;;		_IOCB4_ISR
 39446 ;; This function uses a non-reentrant model
 39447 ;;
 39448                           
 39449                           	psect	text220
 39450  007916                     __ptext220:
 39451                           	opt stack 0
 39452  007916                     _DIO2_ISR_Lora:
 39453                           	opt stack 15
 39454                           
 39455                           ; BSR set to: 1
 39456                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39457                           
 39458                           ;incstack = 0
 39459  007916  0100               	movlb	0	; () banked
 39460  007918  85F0               	bsf	_dioStatus& (0+255),2,b	;volatile
 39461                           
 39462                           ; BSR set to: 0
 39463  00791A  0012               	return		;funcret
 39464  00791C                     __end_of_DIO2_ISR_Lora:
 39465                           	opt stack 0
 39466                           tosu	equ	0xFFF
 39467                           tosh	equ	0xFFE
 39468                           tosl	equ	0xFFD
 39469                           pclatu	equ	0xFFB
 39470                           pclath	equ	0xFFA
 39471                           tblptru	equ	0xFF8
 39472                           tblptrh	equ	0xFF7
 39473                           tblptrl	equ	0xFF6
 39474                           tablat	equ	0xFF5
 39475                           prodh	equ	0xFF4
 39476                           prodl	equ	0xFF3
 39477                           intcon	equ	0xFF2
 39478                           intcon2	equ	0xFF1
 39479                           intcon3	equ	0xFF0
 39480                           indf0	equ	0xFEF
 39481                           postinc0	equ	0xFEE
 39482                           plusw0	equ	0xFEB
 39483                           fsr0h	equ	0xFEA
 39484                           fsr0l	equ	0xFE9
 39485                           wreg	equ	0xFE8
 39486                           postinc1	equ	0xFE6
 39487                           postdec1	equ	0xFE5
 39488                           plusw1	equ	0xFE3
 39489                           fsr1h	equ	0xFE2
 39490                           fsr1l	equ	0xFE1
 39491                           indf2	equ	0xFDF
 39492                           postinc2	equ	0xFDE
 39493                           postdec2	equ	0xFDD
 39494                           plusw2	equ	0xFDB
 39495                           fsr2h	equ	0xFDA
 39496                           fsr2l	equ	0xFD9
 39497                           status	equ	0xFD8
 39498                           
 39499 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 39500 ;; Defined at:
 39501 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 39502 ;; Parameters:    Size  Location     Type
 39503 ;;		None
 39504 ;; Auto vars:     Size  Location     Type
 39505 ;;		None
 39506 ;; Return value:  Size  Location     Type
 39507 ;;                  1    wreg      void 
 39508 ;; Registers used:
 39509 ;;		None
 39510 ;; Tracked objects:
 39511 ;;		On entry : F/1
 39512 ;;		On exit  : F/1
 39513 ;;		Unchanged: F/0
 39514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39519 ;;Total ram usage:        0 bytes
 39520 ;; Hardware stack levels used:    1
 39521 ;; This function calls:
 39522 ;;		Nothing
 39523 ;; This function is called by:
 39524 ;;		_PIN_MANAGER_Initialize
 39525 ;;		_IOCB4_ISR
 39526 ;; This function uses a non-reentrant model
 39527 ;;
 39528                           
 39529                           	psect	text221
 39530  007962                     __ptext221:
 39531                           	opt stack 0
 39532  007962                     _IOCB4_DefaultInterruptHandler:
 39533                           	opt stack 15
 39534                           
 39535                           ; BSR set to: 1
 39536                           
 39537                           ; BSR set to: 0
 39538                           ;incstack = 0
 39539  007962  0012               	return		;funcret
 39540  007964                     __end_of_IOCB4_DefaultInterruptHandler:
 39541                           	opt stack 0
 39542                           tosu	equ	0xFFF
 39543                           tosh	equ	0xFFE
 39544                           tosl	equ	0xFFD
 39545                           pclatu	equ	0xFFB
 39546                           pclath	equ	0xFFA
 39547                           tblptru	equ	0xFF8
 39548                           tblptrh	equ	0xFF7
 39549                           tblptrl	equ	0xFF6
 39550                           tablat	equ	0xFF5
 39551                           prodh	equ	0xFF4
 39552                           prodl	equ	0xFF3
 39553                           intcon	equ	0xFF2
 39554                           intcon2	equ	0xFF1
 39555                           intcon3	equ	0xFF0
 39556                           indf0	equ	0xFEF
 39557                           postinc0	equ	0xFEE
 39558                           plusw0	equ	0xFEB
 39559                           fsr0h	equ	0xFEA
 39560                           fsr0l	equ	0xFE9
 39561                           wreg	equ	0xFE8
 39562                           postinc1	equ	0xFE6
 39563                           postdec1	equ	0xFE5
 39564                           plusw1	equ	0xFE3
 39565                           fsr1h	equ	0xFE2
 39566                           fsr1l	equ	0xFE1
 39567                           indf2	equ	0xFDF
 39568                           postinc2	equ	0xFDE
 39569                           postdec2	equ	0xFDD
 39570                           plusw2	equ	0xFDB
 39571                           fsr2h	equ	0xFDA
 39572                           fsr2l	equ	0xFD9
 39573                           status	equ	0xFD8
 39574                           
 39575 ;; *************** function _INT2_ISR *****************
 39576 ;; Defined at:
 39577 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 39578 ;; Parameters:    Size  Location     Type
 39579 ;;		None
 39580 ;; Auto vars:     Size  Location     Type
 39581 ;;		None
 39582 ;; Return value:  Size  Location     Type
 39583 ;;                  1    wreg      void 
 39584 ;; Registers used:
 39585 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39586 ;; Tracked objects:
 39587 ;;		On entry : 0/0
 39588 ;;		On exit  : 0/0
 39589 ;;		Unchanged: 0/0
 39590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39595 ;;Total ram usage:        0 bytes
 39596 ;; Hardware stack levels used:    1
 39597 ;; Hardware stack levels required when called:    2
 39598 ;; This function calls:
 39599 ;;		_INT2_CallBack
 39600 ;; This function is called by:
 39601 ;;		_INTERRUPT_InterruptManager
 39602 ;; This function uses a non-reentrant model
 39603 ;;
 39604                           
 39605                           	psect	text222
 39606  00791C                     __ptext222:
 39607                           	opt stack 0
 39608  00791C                     _INT2_ISR:
 39609                           	opt stack 15
 39610                           
 39611                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 39612                           
 39613                           ; BSR set to: 1
 39614                           ;incstack = 0
 39615  00791C  92F0               	bcf	intcon3,1,c	;volatile
 39616                           
 39617                           ;ext_int.c: 95: INT2_CallBack();
 39618  00791E  EFF0  F03A         	goto	_INT2_CallBack	;wreg free
 39619  007922                     __end_of_INT2_ISR:
 39620                           	opt stack 0
 39621                           tosu	equ	0xFFF
 39622                           tosh	equ	0xFFE
 39623                           tosl	equ	0xFFD
 39624                           pclatu	equ	0xFFB
 39625                           pclath	equ	0xFFA
 39626                           tblptru	equ	0xFF8
 39627                           tblptrh	equ	0xFF7
 39628                           tblptrl	equ	0xFF6
 39629                           tablat	equ	0xFF5
 39630                           prodh	equ	0xFF4
 39631                           prodl	equ	0xFF3
 39632                           intcon	equ	0xFF2
 39633                           intcon2	equ	0xFF1
 39634                           intcon3	equ	0xFF0
 39635                           indf0	equ	0xFEF
 39636                           postinc0	equ	0xFEE
 39637                           plusw0	equ	0xFEB
 39638                           fsr0h	equ	0xFEA
 39639                           fsr0l	equ	0xFE9
 39640                           wreg	equ	0xFE8
 39641                           postinc1	equ	0xFE6
 39642                           postdec1	equ	0xFE5
 39643                           plusw1	equ	0xFE3
 39644                           fsr1h	equ	0xFE2
 39645                           fsr1l	equ	0xFE1
 39646                           indf2	equ	0xFDF
 39647                           postinc2	equ	0xFDE
 39648                           postdec2	equ	0xFDD
 39649                           plusw2	equ	0xFDB
 39650                           fsr2h	equ	0xFDA
 39651                           fsr2l	equ	0xFD9
 39652                           status	equ	0xFD8
 39653                           
 39654 ;; *************** function _INT2_CallBack *****************
 39655 ;; Defined at:
 39656 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 39657 ;; Parameters:    Size  Location     Type
 39658 ;;		None
 39659 ;; Auto vars:     Size  Location     Type
 39660 ;;		None
 39661 ;; Return value:  Size  Location     Type
 39662 ;;                  1    wreg      void 
 39663 ;; Registers used:
 39664 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39665 ;; Tracked objects:
 39666 ;;		On entry : 0/0
 39667 ;;		On exit  : 0/0
 39668 ;;		Unchanged: 0/0
 39669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39674 ;;Total ram usage:        0 bytes
 39675 ;; Hardware stack levels used:    1
 39676 ;; Hardware stack levels required when called:    1
 39677 ;; This function calls:
 39678 ;;		Absolute function
 39679 ;;		_DIO1_ISR_Lora
 39680 ;;		_INT2_DefaultInterruptHandler
 39681 ;; This function is called by:
 39682 ;;		_INT2_ISR
 39683 ;; This function uses a non-reentrant model
 39684 ;;
 39685                           
 39686                           	psect	text223
 39687  0075E0                     __ptext223:
 39688                           	opt stack 0
 39689  0075E0                     _INT2_CallBack:
 39690                           	opt stack 15
 39691                           
 39692                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 39693                           
 39694                           ;incstack = 0
 39695  0075E0  0101               	movlb	1	; () banked
 39696  0075E2  51E6               	movf	_INT2_InterruptHandler& (0+255),w,b
 39697  0075E4  11E7               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39698  0075E6  B4D8               	btfsc	status,2,c
 39699  0075E8  0012               	return	
 39700                           
 39701                           ; BSR set to: 1
 39702                           ;ext_int.c: 105: {
 39703                           ;ext_int.c: 106: INT2_InterruptHandler();
 39704  0075EA  0005               	push	
 39705  0075EC  6EFA               	movwf	pclath,c
 39706  0075EE  51E6               	movf	_INT2_InterruptHandler& (0+255),w,b
 39707  0075F0  6EFD               	movwf	tosl,c
 39708  0075F2  51E7               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39709  0075F4  6EFE               	movwf	tosh,c
 39710  0075F6  6AFF               	clrf	tosu,c
 39711  0075F8  50FA               	movf	pclath,w,c
 39712  0075FA  0012               	return		;indir
 39713  0075FC                     __end_of_INT2_CallBack:
 39714                           	opt stack 0
 39715                           tosu	equ	0xFFF
 39716                           tosh	equ	0xFFE
 39717                           tosl	equ	0xFFD
 39718                           pclatu	equ	0xFFB
 39719                           pclath	equ	0xFFA
 39720                           tblptru	equ	0xFF8
 39721                           tblptrh	equ	0xFF7
 39722                           tblptrl	equ	0xFF6
 39723                           tablat	equ	0xFF5
 39724                           prodh	equ	0xFF4
 39725                           prodl	equ	0xFF3
 39726                           intcon	equ	0xFF2
 39727                           intcon2	equ	0xFF1
 39728                           intcon3	equ	0xFF0
 39729                           indf0	equ	0xFEF
 39730                           postinc0	equ	0xFEE
 39731                           plusw0	equ	0xFEB
 39732                           fsr0h	equ	0xFEA
 39733                           fsr0l	equ	0xFE9
 39734                           wreg	equ	0xFE8
 39735                           postinc1	equ	0xFE6
 39736                           postdec1	equ	0xFE5
 39737                           plusw1	equ	0xFE3
 39738                           fsr1h	equ	0xFE2
 39739                           fsr1l	equ	0xFE1
 39740                           indf2	equ	0xFDF
 39741                           postinc2	equ	0xFDE
 39742                           postdec2	equ	0xFDD
 39743                           plusw2	equ	0xFDB
 39744                           fsr2h	equ	0xFDA
 39745                           fsr2l	equ	0xFD9
 39746                           status	equ	0xFD8
 39747                           
 39748 ;; *************** function _DIO1_ISR_Lora *****************
 39749 ;; Defined at:
 39750 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39751 ;; Parameters:    Size  Location     Type
 39752 ;;		None
 39753 ;; Auto vars:     Size  Location     Type
 39754 ;;		None
 39755 ;; Return value:  Size  Location     Type
 39756 ;;                  1    wreg      void 
 39757 ;; Registers used:
 39758 ;;		status,2, status,0
 39759 ;; Tracked objects:
 39760 ;;		On entry : F/1
 39761 ;;		On exit  : F/0
 39762 ;;		Unchanged: 0/0
 39763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39768 ;;Total ram usage:        0 bytes
 39769 ;; Hardware stack levels used:    1
 39770 ;; This function calls:
 39771 ;;		Nothing
 39772 ;; This function is called by:
 39773 ;;		_DIO1_ISR_Lora_Init
 39774 ;;		_INT2_CallBack
 39775 ;; This function uses a non-reentrant model
 39776 ;;
 39777                           
 39778                           	psect	text224
 39779  007922                     __ptext224:
 39780                           	opt stack 0
 39781  007922                     _DIO1_ISR_Lora:
 39782                           	opt stack 15
 39783                           
 39784                           ; BSR set to: 1
 39785                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 39786                           
 39787                           ;incstack = 0
 39788  007922  0100               	movlb	0	; () banked
 39789  007924  83F0               	bsf	_dioStatus& (0+255),1,b	;volatile
 39790                           
 39791                           ; BSR set to: 0
 39792  007926  0012               	return		;funcret
 39793  007928                     __end_of_DIO1_ISR_Lora:
 39794                           	opt stack 0
 39795                           tosu	equ	0xFFF
 39796                           tosh	equ	0xFFE
 39797                           tosl	equ	0xFFD
 39798                           pclatu	equ	0xFFB
 39799                           pclath	equ	0xFFA
 39800                           tblptru	equ	0xFF8
 39801                           tblptrh	equ	0xFF7
 39802                           tblptrl	equ	0xFF6
 39803                           tablat	equ	0xFF5
 39804                           prodh	equ	0xFF4
 39805                           prodl	equ	0xFF3
 39806                           intcon	equ	0xFF2
 39807                           intcon2	equ	0xFF1
 39808                           intcon3	equ	0xFF0
 39809                           indf0	equ	0xFEF
 39810                           postinc0	equ	0xFEE
 39811                           plusw0	equ	0xFEB
 39812                           fsr0h	equ	0xFEA
 39813                           fsr0l	equ	0xFE9
 39814                           wreg	equ	0xFE8
 39815                           postinc1	equ	0xFE6
 39816                           postdec1	equ	0xFE5
 39817                           plusw1	equ	0xFE3
 39818                           fsr1h	equ	0xFE2
 39819                           fsr1l	equ	0xFE1
 39820                           indf2	equ	0xFDF
 39821                           postinc2	equ	0xFDE
 39822                           postdec2	equ	0xFDD
 39823                           plusw2	equ	0xFDB
 39824                           fsr2h	equ	0xFDA
 39825                           fsr2l	equ	0xFD9
 39826                           status	equ	0xFD8
 39827                           
 39828 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39829 ;; Defined at:
 39830 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 39831 ;; Parameters:    Size  Location     Type
 39832 ;;		None
 39833 ;; Auto vars:     Size  Location     Type
 39834 ;;		None
 39835 ;; Return value:  Size  Location     Type
 39836 ;;                  1    wreg      void 
 39837 ;; Registers used:
 39838 ;;		None
 39839 ;; Tracked objects:
 39840 ;;		On entry : F/1
 39841 ;;		On exit  : F/1
 39842 ;;		Unchanged: F/0
 39843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39848 ;;Total ram usage:        0 bytes
 39849 ;; Hardware stack levels used:    1
 39850 ;; This function calls:
 39851 ;;		Nothing
 39852 ;; This function is called by:
 39853 ;;		_EXT_INT_Initialize
 39854 ;;		_INT2_CallBack
 39855 ;; This function uses a non-reentrant model
 39856 ;;
 39857                           
 39858                           	psect	text225
 39859  007964                     __ptext225:
 39860                           	opt stack 0
 39861  007964                     _INT2_DefaultInterruptHandler:
 39862                           	opt stack 15
 39863                           
 39864                           ; BSR set to: 1
 39865                           
 39866                           ; BSR set to: 0
 39867                           ;incstack = 0
 39868  007964  0012               	return		;funcret
 39869  007966                     __end_of_INT2_DefaultInterruptHandler:
 39870                           	opt stack 0
 39871                           tosu	equ	0xFFF
 39872                           tosh	equ	0xFFE
 39873                           tosl	equ	0xFFD
 39874                           pclatu	equ	0xFFB
 39875                           pclath	equ	0xFFA
 39876                           tblptru	equ	0xFF8
 39877                           tblptrh	equ	0xFF7
 39878                           tblptrl	equ	0xFF6
 39879                           tablat	equ	0xFF5
 39880                           prodh	equ	0xFF4
 39881                           prodl	equ	0xFF3
 39882                           intcon	equ	0xFF2
 39883                           intcon2	equ	0xFF1
 39884                           intcon3	equ	0xFF0
 39885                           indf0	equ	0xFEF
 39886                           postinc0	equ	0xFEE
 39887                           plusw0	equ	0xFEB
 39888                           fsr0h	equ	0xFEA
 39889                           fsr0l	equ	0xFE9
 39890                           wreg	equ	0xFE8
 39891                           postinc1	equ	0xFE6
 39892                           postdec1	equ	0xFE5
 39893                           plusw1	equ	0xFE3
 39894                           fsr1h	equ	0xFE2
 39895                           fsr1l	equ	0xFE1
 39896                           indf2	equ	0xFDF
 39897                           postinc2	equ	0xFDE
 39898                           postdec2	equ	0xFDD
 39899                           plusw2	equ	0xFDB
 39900                           fsr2h	equ	0xFDA
 39901                           fsr2l	equ	0xFD9
 39902                           status	equ	0xFD8
 39903                           
 39904 ;; *************** function _INT1_ISR *****************
 39905 ;; Defined at:
 39906 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 39907 ;; Parameters:    Size  Location     Type
 39908 ;;		None
 39909 ;; Auto vars:     Size  Location     Type
 39910 ;;		None
 39911 ;; Return value:  Size  Location     Type
 39912 ;;                  1    wreg      void 
 39913 ;; Registers used:
 39914 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39915 ;; Tracked objects:
 39916 ;;		On entry : 0/0
 39917 ;;		On exit  : 0/0
 39918 ;;		Unchanged: 0/0
 39919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39924 ;;Total ram usage:        0 bytes
 39925 ;; Hardware stack levels used:    1
 39926 ;; Hardware stack levels required when called:    2
 39927 ;; This function calls:
 39928 ;;		_INT1_CallBack
 39929 ;; This function is called by:
 39930 ;;		_INTERRUPT_InterruptManager
 39931 ;; This function uses a non-reentrant model
 39932 ;;
 39933                           
 39934                           	psect	text226
 39935  007928                     __ptext226:
 39936                           	opt stack 0
 39937  007928                     _INT1_ISR:
 39938                           	opt stack 15
 39939                           
 39940                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 39941                           
 39942                           ; BSR set to: 1
 39943                           ;incstack = 0
 39944  007928  90F0               	bcf	intcon3,0,c	;volatile
 39945                           
 39946                           ;ext_int.c: 54: INT1_CallBack();
 39947  00792A  EFFE  F03A         	goto	_INT1_CallBack	;wreg free
 39948  00792E                     __end_of_INT1_ISR:
 39949                           	opt stack 0
 39950                           tosu	equ	0xFFF
 39951                           tosh	equ	0xFFE
 39952                           tosl	equ	0xFFD
 39953                           pclatu	equ	0xFFB
 39954                           pclath	equ	0xFFA
 39955                           tblptru	equ	0xFF8
 39956                           tblptrh	equ	0xFF7
 39957                           tblptrl	equ	0xFF6
 39958                           tablat	equ	0xFF5
 39959                           prodh	equ	0xFF4
 39960                           prodl	equ	0xFF3
 39961                           intcon	equ	0xFF2
 39962                           intcon2	equ	0xFF1
 39963                           intcon3	equ	0xFF0
 39964                           indf0	equ	0xFEF
 39965                           postinc0	equ	0xFEE
 39966                           plusw0	equ	0xFEB
 39967                           fsr0h	equ	0xFEA
 39968                           fsr0l	equ	0xFE9
 39969                           wreg	equ	0xFE8
 39970                           postinc1	equ	0xFE6
 39971                           postdec1	equ	0xFE5
 39972                           plusw1	equ	0xFE3
 39973                           fsr1h	equ	0xFE2
 39974                           fsr1l	equ	0xFE1
 39975                           indf2	equ	0xFDF
 39976                           postinc2	equ	0xFDE
 39977                           postdec2	equ	0xFDD
 39978                           plusw2	equ	0xFDB
 39979                           fsr2h	equ	0xFDA
 39980                           fsr2l	equ	0xFD9
 39981                           status	equ	0xFD8
 39982                           
 39983 ;; *************** function _INT1_CallBack *****************
 39984 ;; Defined at:
 39985 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 39986 ;; Parameters:    Size  Location     Type
 39987 ;;		None
 39988 ;; Auto vars:     Size  Location     Type
 39989 ;;		None
 39990 ;; Return value:  Size  Location     Type
 39991 ;;                  1    wreg      void 
 39992 ;; Registers used:
 39993 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39994 ;; Tracked objects:
 39995 ;;		On entry : 0/0
 39996 ;;		On exit  : 0/0
 39997 ;;		Unchanged: 0/0
 39998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40003 ;;Total ram usage:        0 bytes
 40004 ;; Hardware stack levels used:    1
 40005 ;; Hardware stack levels required when called:    1
 40006 ;; This function calls:
 40007 ;;		Absolute function
 40008 ;;		_DIO0_ISR_Lora
 40009 ;;		_INT1_DefaultInterruptHandler
 40010 ;; This function is called by:
 40011 ;;		_INT1_ISR
 40012 ;; This function uses a non-reentrant model
 40013 ;;
 40014                           
 40015                           	psect	text227
 40016  0075FC                     __ptext227:
 40017                           	opt stack 0
 40018  0075FC                     _INT1_CallBack:
 40019                           	opt stack 15
 40020                           
 40021                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 40022                           
 40023                           ;incstack = 0
 40024  0075FC  0101               	movlb	1	; () banked
 40025  0075FE  51E4               	movf	_INT1_InterruptHandler& (0+255),w,b
 40026  007600  11E5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40027  007602  B4D8               	btfsc	status,2,c
 40028  007604  0012               	return	
 40029                           
 40030                           ; BSR set to: 1
 40031                           ;ext_int.c: 64: {
 40032                           ;ext_int.c: 65: INT1_InterruptHandler();
 40033  007606  0005               	push	
 40034  007608  6EFA               	movwf	pclath,c
 40035  00760A  51E4               	movf	_INT1_InterruptHandler& (0+255),w,b
 40036  00760C  6EFD               	movwf	tosl,c
 40037  00760E  51E5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40038  007610  6EFE               	movwf	tosh,c
 40039  007612  6AFF               	clrf	tosu,c
 40040  007614  50FA               	movf	pclath,w,c
 40041  007616  0012               	return		;indir
 40042  007618                     __end_of_INT1_CallBack:
 40043                           	opt stack 0
 40044                           tosu	equ	0xFFF
 40045                           tosh	equ	0xFFE
 40046                           tosl	equ	0xFFD
 40047                           pclatu	equ	0xFFB
 40048                           pclath	equ	0xFFA
 40049                           tblptru	equ	0xFF8
 40050                           tblptrh	equ	0xFF7
 40051                           tblptrl	equ	0xFF6
 40052                           tablat	equ	0xFF5
 40053                           prodh	equ	0xFF4
 40054                           prodl	equ	0xFF3
 40055                           intcon	equ	0xFF2
 40056                           intcon2	equ	0xFF1
 40057                           intcon3	equ	0xFF0
 40058                           indf0	equ	0xFEF
 40059                           postinc0	equ	0xFEE
 40060                           plusw0	equ	0xFEB
 40061                           fsr0h	equ	0xFEA
 40062                           fsr0l	equ	0xFE9
 40063                           wreg	equ	0xFE8
 40064                           postinc1	equ	0xFE6
 40065                           postdec1	equ	0xFE5
 40066                           plusw1	equ	0xFE3
 40067                           fsr1h	equ	0xFE2
 40068                           fsr1l	equ	0xFE1
 40069                           indf2	equ	0xFDF
 40070                           postinc2	equ	0xFDE
 40071                           postdec2	equ	0xFDD
 40072                           plusw2	equ	0xFDB
 40073                           fsr2h	equ	0xFDA
 40074                           fsr2l	equ	0xFD9
 40075                           status	equ	0xFD8
 40076                           
 40077 ;; *************** function _DIO0_ISR_Lora *****************
 40078 ;; Defined at:
 40079 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 40080 ;; Parameters:    Size  Location     Type
 40081 ;;		None
 40082 ;; Auto vars:     Size  Location     Type
 40083 ;;		None
 40084 ;; Return value:  Size  Location     Type
 40085 ;;                  1    wreg      void 
 40086 ;; Registers used:
 40087 ;;		status,2, status,0
 40088 ;; Tracked objects:
 40089 ;;		On entry : F/1
 40090 ;;		On exit  : F/0
 40091 ;;		Unchanged: 0/0
 40092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40097 ;;Total ram usage:        0 bytes
 40098 ;; Hardware stack levels used:    1
 40099 ;; This function calls:
 40100 ;;		Nothing
 40101 ;; This function is called by:
 40102 ;;		_DIO0_ISR_Lora_Init
 40103 ;;		_INT1_CallBack
 40104 ;; This function uses a non-reentrant model
 40105 ;;
 40106                           
 40107                           	psect	text228
 40108  00792E                     __ptext228:
 40109                           	opt stack 0
 40110  00792E                     _DIO0_ISR_Lora:
 40111                           	opt stack 15
 40112                           
 40113                           ; BSR set to: 1
 40114                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 40115                           
 40116                           ;incstack = 0
 40117  00792E  0100               	movlb	0	; () banked
 40118  007930  81F0               	bsf	_dioStatus& (0+255),0,b	;volatile
 40119                           
 40120                           ; BSR set to: 0
 40121  007932  0012               	return		;funcret
 40122  007934                     __end_of_DIO0_ISR_Lora:
 40123                           	opt stack 0
 40124                           tosu	equ	0xFFF
 40125                           tosh	equ	0xFFE
 40126                           tosl	equ	0xFFD
 40127                           pclatu	equ	0xFFB
 40128                           pclath	equ	0xFFA
 40129                           tblptru	equ	0xFF8
 40130                           tblptrh	equ	0xFF7
 40131                           tblptrl	equ	0xFF6
 40132                           tablat	equ	0xFF5
 40133                           prodh	equ	0xFF4
 40134                           prodl	equ	0xFF3
 40135                           intcon	equ	0xFF2
 40136                           intcon2	equ	0xFF1
 40137                           intcon3	equ	0xFF0
 40138                           indf0	equ	0xFEF
 40139                           postinc0	equ	0xFEE
 40140                           plusw0	equ	0xFEB
 40141                           fsr0h	equ	0xFEA
 40142                           fsr0l	equ	0xFE9
 40143                           wreg	equ	0xFE8
 40144                           postinc1	equ	0xFE6
 40145                           postdec1	equ	0xFE5
 40146                           plusw1	equ	0xFE3
 40147                           fsr1h	equ	0xFE2
 40148                           fsr1l	equ	0xFE1
 40149                           indf2	equ	0xFDF
 40150                           postinc2	equ	0xFDE
 40151                           postdec2	equ	0xFDD
 40152                           plusw2	equ	0xFDB
 40153                           fsr2h	equ	0xFDA
 40154                           fsr2l	equ	0xFD9
 40155                           status	equ	0xFD8
 40156                           
 40157 ;; *************** function _INT1_DefaultInterruptHandler *****************
 40158 ;; Defined at:
 40159 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 40160 ;; Parameters:    Size  Location     Type
 40161 ;;		None
 40162 ;; Auto vars:     Size  Location     Type
 40163 ;;		None
 40164 ;; Return value:  Size  Location     Type
 40165 ;;                  1    wreg      void 
 40166 ;; Registers used:
 40167 ;;		None
 40168 ;; Tracked objects:
 40169 ;;		On entry : F/1
 40170 ;;		On exit  : F/1
 40171 ;;		Unchanged: F/0
 40172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40177 ;;Total ram usage:        0 bytes
 40178 ;; Hardware stack levels used:    1
 40179 ;; This function calls:
 40180 ;;		Nothing
 40181 ;; This function is called by:
 40182 ;;		_EXT_INT_Initialize
 40183 ;;		_INT1_CallBack
 40184 ;; This function uses a non-reentrant model
 40185 ;;
 40186                           
 40187                           	psect	text229
 40188  007966                     __ptext229:
 40189                           	opt stack 0
 40190  007966                     _INT1_DefaultInterruptHandler:
 40191                           	opt stack 15
 40192                           
 40193                           ; BSR set to: 1
 40194                           
 40195                           ; BSR set to: 0
 40196                           ;incstack = 0
 40197  007966  0012               	return		;funcret
 40198  007968                     __end_of_INT1_DefaultInterruptHandler:
 40199                           	opt stack 0
 40200                           tosu	equ	0xFFF
 40201                           tosh	equ	0xFFE
 40202                           tosl	equ	0xFFD
 40203                           pclatu	equ	0xFFB
 40204                           pclath	equ	0xFFA
 40205                           tblptru	equ	0xFF8
 40206                           tblptrh	equ	0xFF7
 40207                           tblptrl	equ	0xFF6
 40208                           tablat	equ	0xFF5
 40209                           prodh	equ	0xFF4
 40210                           prodl	equ	0xFF3
 40211                           intcon	equ	0xFF2
 40212                           intcon2	equ	0xFF1
 40213                           intcon3	equ	0xFF0
 40214                           indf0	equ	0xFEF
 40215                           postinc0	equ	0xFEE
 40216                           plusw0	equ	0xFEB
 40217                           fsr0h	equ	0xFEA
 40218                           fsr0l	equ	0xFE9
 40219                           wreg	equ	0xFE8
 40220                           postinc1	equ	0xFE6
 40221                           postdec1	equ	0xFE5
 40222                           plusw1	equ	0xFE3
 40223                           fsr1h	equ	0xFE2
 40224                           fsr1l	equ	0xFE1
 40225                           indf2	equ	0xFDF
 40226                           postinc2	equ	0xFDE
 40227                           postdec2	equ	0xFDD
 40228                           plusw2	equ	0xFDB
 40229                           fsr2h	equ	0xFDA
 40230                           fsr2l	equ	0xFD9
 40231                           status	equ	0xFD8
 40232                           tosu	equ	0xFFF
 40233                           tosh	equ	0xFFE
 40234                           tosl	equ	0xFFD
 40235                           pclatu	equ	0xFFB
 40236                           pclath	equ	0xFFA
 40237                           tblptru	equ	0xFF8
 40238                           tblptrh	equ	0xFF7
 40239                           tblptrl	equ	0xFF6
 40240                           tablat	equ	0xFF5
 40241                           prodh	equ	0xFF4
 40242                           prodl	equ	0xFF3
 40243                           intcon	equ	0xFF2
 40244                           intcon2	equ	0xFF1
 40245                           intcon3	equ	0xFF0
 40246                           indf0	equ	0xFEF
 40247                           postinc0	equ	0xFEE
 40248                           plusw0	equ	0xFEB
 40249                           fsr0h	equ	0xFEA
 40250                           fsr0l	equ	0xFE9
 40251                           wreg	equ	0xFE8
 40252                           postinc1	equ	0xFE6
 40253                           postdec1	equ	0xFE5
 40254                           plusw1	equ	0xFE3
 40255                           fsr1h	equ	0xFE2
 40256                           fsr1l	equ	0xFE1
 40257                           indf2	equ	0xFDF
 40258                           postinc2	equ	0xFDE
 40259                           postdec2	equ	0xFDD
 40260                           plusw2	equ	0xFDB
 40261                           fsr2h	equ	0xFDA
 40262                           fsr2l	equ	0xFD9
 40263                           status	equ	0xFD8
 40264                           
 40265                           	psect	text230
 40266  000000                     __ptext230:
 40267                           	opt stack 0
 40268                           tosu	equ	0xFFF
 40269                           tosh	equ	0xFFE
 40270                           tosl	equ	0xFFD
 40271                           pclatu	equ	0xFFB
 40272                           pclath	equ	0xFFA
 40273                           tblptru	equ	0xFF8
 40274                           tblptrh	equ	0xFF7
 40275                           tblptrl	equ	0xFF6
 40276                           tablat	equ	0xFF5
 40277                           prodh	equ	0xFF4
 40278                           prodl	equ	0xFF3
 40279                           intcon	equ	0xFF2
 40280                           intcon2	equ	0xFF1
 40281                           intcon3	equ	0xFF0
 40282                           indf0	equ	0xFEF
 40283                           postinc0	equ	0xFEE
 40284                           plusw0	equ	0xFEB
 40285                           fsr0h	equ	0xFEA
 40286                           fsr0l	equ	0xFE9
 40287                           wreg	equ	0xFE8
 40288                           postinc1	equ	0xFE6
 40289                           postdec1	equ	0xFE5
 40290                           plusw1	equ	0xFE3
 40291                           fsr1h	equ	0xFE2
 40292                           fsr1l	equ	0xFE1
 40293                           indf2	equ	0xFDF
 40294                           postinc2	equ	0xFDE
 40295                           postdec2	equ	0xFDD
 40296                           plusw2	equ	0xFDB
 40297                           fsr2h	equ	0xFDA
 40298                           fsr2l	equ	0xFD9
 40299                           status	equ	0xFD8
 40300                           
 40301                           	psect	rparam
 40302  0000                     tosu	equ	0xFFF
 40303                           tosh	equ	0xFFE
 40304                           tosl	equ	0xFFD
 40305                           pclatu	equ	0xFFB
 40306                           pclath	equ	0xFFA
 40307                           tblptru	equ	0xFF8
 40308                           tblptrh	equ	0xFF7
 40309                           tblptrl	equ	0xFF6
 40310                           tablat	equ	0xFF5
 40311                           prodh	equ	0xFF4
 40312                           prodl	equ	0xFF3
 40313                           intcon	equ	0xFF2
 40314                           intcon2	equ	0xFF1
 40315                           intcon3	equ	0xFF0
 40316                           indf0	equ	0xFEF
 40317                           postinc0	equ	0xFEE
 40318                           plusw0	equ	0xFEB
 40319                           fsr0h	equ	0xFEA
 40320                           fsr0l	equ	0xFE9
 40321                           wreg	equ	0xFE8
 40322                           postinc1	equ	0xFE6
 40323                           postdec1	equ	0xFE5
 40324                           plusw1	equ	0xFE3
 40325                           fsr1h	equ	0xFE2
 40326                           fsr1l	equ	0xFE1
 40327                           indf2	equ	0xFDF
 40328                           postinc2	equ	0xFDE
 40329                           postdec2	equ	0xFDD
 40330                           plusw2	equ	0xFDB
 40331                           fsr2h	equ	0xFDA
 40332                           fsr2l	equ	0xFD9
 40333                           status	equ	0xFD8
 40334                           
 40335                           	psect	temp
 40336  000046                     btemp:
 40337                           	opt stack 0
 40338  000046                     	ds	12
 40339                           tosu	equ	0xFFF
 40340                           tosh	equ	0xFFE
 40341                           tosl	equ	0xFFD
 40342                           pclatu	equ	0xFFB
 40343                           pclath	equ	0xFFA
 40344                           tblptru	equ	0xFF8
 40345                           tblptrh	equ	0xFF7
 40346                           tblptrl	equ	0xFF6
 40347                           tablat	equ	0xFF5
 40348                           prodh	equ	0xFF4
 40349                           prodl	equ	0xFF3
 40350                           intcon	equ	0xFF2
 40351                           intcon2	equ	0xFF1
 40352                           intcon3	equ	0xFF0
 40353                           indf0	equ	0xFEF
 40354                           postinc0	equ	0xFEE
 40355                           plusw0	equ	0xFEB
 40356                           fsr0h	equ	0xFEA
 40357                           fsr0l	equ	0xFE9
 40358                           wreg	equ	0xFE8
 40359                           postinc1	equ	0xFE6
 40360                           postdec1	equ	0xFE5
 40361                           plusw1	equ	0xFE3
 40362                           fsr1h	equ	0xFE2
 40363                           fsr1l	equ	0xFE1
 40364                           indf2	equ	0xFDF
 40365                           postinc2	equ	0xFDE
 40366                           postdec2	equ	0xFDD
 40367                           plusw2	equ	0xFDB
 40368                           fsr2h	equ	0xFDA
 40369                           fsr2l	equ	0xFD9
 40370                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    402
    Data        58
    BSS         1276
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      82
    BANK0           160    136     147
    BANK1           256    105     238
    BANK2           256      0     245
    BANK3           256     20     180
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1658$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[4]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK3[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1658$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1658$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S983$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S983$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RxDataDone->_LORAWAN_SetCurrentDataRate
    _LORAWAN_SetCurrentDataRate->_ValidateDataRate
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6571498
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
           _TMR3_SetInterruptHandler
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          0     0      0  311853
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      68
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2178
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     200
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     989
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     189
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     589
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     189
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5815090
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2272914
                                            125 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  148400
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  665021
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  490519
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153169
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9360
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9803
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  311785
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  158351
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  536425
                                             80 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  500071
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2939774
                                            132 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  200722
                                            114 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1036670
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     389
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1501171
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  474640
                                             71 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  316728
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1010491
                                            125 BANK0      5     5      0
                                            102 BANK1      3     0      3
                                              0 BANK3     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9221
                                             54 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9258
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9512
                                             54 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  163593
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  311785
                                            118 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151121
                                            106 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   43958
                                             52 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37564
                                             52 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  191170
                                            114 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  174697
                                             64 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             45 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      45
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  158364
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           5     1      4    5229
                                              7 BANK0      5     1      4
         _LORAWAN_SetCurrentDataRate
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_SetCurrentDataRate                           1     1      0     223
                                              6 BANK0      1     1      0
              _UpdateCurrentDataRate
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (6) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122779
                                             54 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248062
                                            124 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19265
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4535
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123906
                                             54 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101368
                                            115 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3326
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             18 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   80839
                                            106 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   66989
                                             92 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26238
                                             52 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19756
                                             32 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           23    20      3    4744
                                             10 BANK0     22    19      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  167548
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   92735
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   45810
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     662
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9554
                                             54 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1430
                                             45 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     811
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     546
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             28 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                             12 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             41 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                 _handle16sInterrupt *
 ---------------------------------------------------------------------------------
 (16) _handle16sInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     547
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
   _SysConfigSleep
   _TMR3_SetInterruptHandler
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _handle16sInterrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      B4      11       70.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      93       5       91.9%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      52       1       98.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45C      12        0.0%
DATA                 0      0     67C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Aug 21 12:59:27 2022

                                        ??_LORAWAN_TxDone 00A2  
                              __end_of_DIO3_ISR_Lora_Init 795C  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 76DC  
                         __size_of_UpdateJoinSuccessState 012C  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6A60  
                                   __end_of_AESEncodeLoRa 72E4  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A7  
                                                     l126 62CC  
                                                     l192 7784  
                                                     l460 1548  
                                                     l453 14C0  
                                                     l382 510C  
                                                     l447 14F8  
                                                     l466 1732  
                                             ?_RADIO_Init 007D  
                                                     l670 6FA8  
                                                     l479 1804  
                                                     l592 7160  
                                                     l673 6C92  
                                                     l690 5E2E  
                                                     l676 6CA4  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 66B8  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 6658  
                                  _ExecuteRxParamSetupReq 42A8  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 7806  
                                      __size_of_AESEncode 02DA  
                                         _timer1ReloadVal 005B  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 618E  
                                   _RADIO_SetLoRaSyncWord 7890  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B34  
                                 __end_of_SwTimersExecute 5862  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00DC  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 59BA  
                     __end_of_RADIO_SetFrequencyHopPeriod 7890  
                             _RADIO_SetFrequencyHopPeriod 7886  
                                              _CheckFlags 66B8  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 75FC  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 001C  
                                                    l1110 3452  
                                                    l1031 1212  
                                                    l1204 4A0A  
                                                    l2012 5670  
                                                    l1133 4F3A  
                                                    l2014 56F2  
                                                    l1215 4812  
                                                    l1231 67CC  
                                                    l1223 7718  
                                                    l1127 437E  
                                                    l1151 31C4  
                                                    l1063 2806  
                                                    l1136 4FC8  
                                                    l2121 010E  
                                                    l1049 2716  
                                                    l2017 5406  
                                                    l2041 414A  
                                                    l1146 4FFC  
                                                    l1250 76D8  
                                                    l2026 5416  
                                                    l1091 69B0  
                                                    l1083 73DE  
                                                    l1244 74BC  
                                                    l2133 0266  
                                                    l1238 6FDE  
                                                    l2150 054A  
                                                    l1079 772C  
                                                    l2231 1E92  
                                                    l2151 0552  
                                                    l2063 4B66  
                                                    l3104 6098  
                                                    l2232 1F38  
                                                    l1264 6F14  
                                                    l2241 1F46  
                                                    l2233 1F36  
                                                    l3114 6646  
                                                    l2090 4646  
                                                    l1347 7566  
                                                    l1099 3614  
                                                    l2307 634E  
                                                    l2171 0996  
                                         _timer3ReloadVal 005D  
                                                    l2236 1F32  
                                                    l2069 6334  
                                                    l1454 1884  
                                                    l2095 5756  
                                                    l1279 67FE  
                                                    l1297 23FE  
                                                    l2522 2436  
                                                    l2283 1DB4  
                                                    l2292 5928  
                                                    l1469 19EC  
                                                    l1717 5C38  
                                                    l1718 5C80  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l3167 6D9E  
                                                    l1746 54C8  
                                                    l2745 6F50  
                                                    l1993 37D0  
                                                    l9618 773C  
                                        _RADIO_WritePower 5284  
                                                    l9986 62CE  
                            ??_LORAWAN_SetCurrentDataRate 0066  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 4650  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1196 00A1  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    _TMR1 000FCE  
                                                    _TMR3 000FB2  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 75E0  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 5F3C  
                                                    _loRa 0200  
                                                    _main 5AFA  
                                                    _rand 69C4  
                          __end_of_UpdateMinMaxChDataRate 57B0  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 0046  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00CF  
                                           ComputeMic@key 00CA  
                               __end_of_LORAWAN_RxTimeout 2980  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0048  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init 77D2  
                                        __end_of_ADC_Read 6F78  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6A60  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0090  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5592  
                                         _TMR3_Initialize 726C  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00CF  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 7904  
                                            ___param_bank 000010  
                                              _GetRx1Freq 7758  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 6976  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 6594  
                                __size_of_SystemTimerInit 0004  
                                        __end_of_INT1_ISR 792E  
                                        __end_of_INT2_ISR 7922  
                          __size_of_OSCILLATOR_Initialize 000C  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 77FA  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l12000 683A  
                                                   l12006 6870  
                                                   l12104 604C  
                                                   l12016 2412  
                                                   l10600 68A6  
                                                   l12106 6058  
                                                   l12210 516E  
                                                   l12050 254A  
                                                   l12042 248A  
                                                   l12026 2438  
                                                   l12116 608A  
                                                   l12108 605C  
                                                   l12132 6638  
                                                   l12124 6606  
                                                   l12212 5172  
                                                   l12052 2554  
                                                   l13100 19CE  
                                                   l12300 5302  
                                                   l13012 4FCC  
                                                   l13020 4FE2  
                                                   l10620 68CE  
                                                   l10612 68C0  
                                                   l10604 68AC  
                                                   l12126 6612  
                                                   l12214 517C  
                                                   l12062 25A2  
                                                   l13022 4FE6  
                                                   l10606 68B0  
                                                   l12160 4BDE  
                                                   l12128 6616  
                                                   l12224 519C  
                                                   l12064 25AC  
                                                   l12056 2576  
                                                   l12320 5330  
                                                   l13016 4FD6  
                                                   l13008 4FC6  
                                                   l10616 68C8  
                                                   l12154 4B8E  
                                                   l12226 51A6  
                                                   l12082 26B4  
                                                   l12058 2580  
                                                   l12074 26AA  
                                                   l12314 5328  
                                                   l13026 4FF8  
                                         __end_of___abdiv 68D2  
                                                   l12164 4C40  
                                                   l12412 6B86  
                                                   l13124 1AC6  
                                                   l13108 19F0  
                                                   l13220 4298  
                                                   l12166 4C42  
                                                   l12190 512E  
                                                   l12182 510E  
                                                   l12174 50F4  
                                                   l13118 1A8E  
                                                   l13062 1896  
                                                   l13070 190A  
                                                   l12430 6D82  
                                                   l12334 5DE4  
                                                   l13230 5582  
                                                   l13214 4252  
                                                   l13206 4206  
                                                   l13310 1D46  
                                                   l13302 1D1C  
                                                   l14110 2EA4  
                                                   l12360 724C  
                                                   l12408 6B4E  
                                                   l13080 195A  
                                                   l13056 1870  
                                                   l12272 52A8  
                                                   l12600 17BE  
                                                   l14040 60E0  
                                                   l13224 54DE  
                                                   l13232 5584  
                                                   l13152 5980  
                                                   l13144 592C  
                                                   l13320 1D8C  
                                                   l14120 2F12  
                                                   l14112 2EBA  
                                                   l14104 2DE0  
                                                   l12194 5138  
                                                   l12434 6D94  
                                                   l12426 6D76  
                                                   l12610 17FA  
                                                   l12514 158E  
                                                   l12338 5E08  
                                                   l12354 71A4  
                                                   l13234 558E  
                                                   l13154 5982  
                                                   l13162 599C  
                                                   l13170 59B4  
                                                   l13306 1D2E  
                                                   l14122 2F28  
                                                   l14114 2ED0  
                                                   l10594 689A  
                                                   l12364 725C  
                                                   l12452 5D0C  
                                                   l15020 381A  
                                                   l15012 37C0  
                                                   l12196 5140  
                                                   l13084 1978  
                                                   l13076 1930  
                                                   l13068 18D2  
                                                   l12428 6D7E  
                                                   l12292 52EA  
                                                   l12268 529C  
                                                   l12604 17DA  
                                                   l12524 15B8  
                                                   l12532 15D4  
                                                   l13404 3098  
                                                   l13228 5546  
                                                   l13156 598C  
                                                   l13252 1BC6  
                                                   l13244 1B42  
                                                   l13340 1E14  
                                                   l12380 47C4  
                                                   l13180 6B34  
                                                   l14124 2F3E  
                                                   l14116 2EE6  
                                                   l14108 2E90  
                                                   l14132 2F50  
                                                   l14140 2F9C  
                                                   l14220 024C  
                                                   l10588 6890  
                                                   l15100 4012  
                                                   l15006 3794  
                                                   l15014 37C4  
                                                   l12198 514A  
                                                   l11902 2A7A  
                                                   l12702 4912  
                                                   l13094 1990  
                                                   l13086 1986  
                                                   l12286 52D0  
                                                   l12470 146A  
                                                   l14054 6106  
                                                   l13166 59AC  
                                                   l13326 1DBA  
                                                   l13270 1C5A  
                                                   l13262 1C0C  
                                                   l13342 1E20  
                                                   l12390 485C  
                                                   l12630 74B8  
                                                   l14118 2EFC  
                                                   l14134 2F7E  
                                                   l14310 0498  
                                                   l14302 0472  
                                                   l10944 5708  
                                                   l11904 2A84  
                                                   l12296 52F6  
                                                   l12288 52DC  
                                                   l12480 1502  
                                                   l12472 148C  
                                                   l13432 313A  
                                                   l13408 30AE  
                                                   l13360 2FD6  
                                                   l14048 60F4  
                                                   l13272 1C60  
                                                   l13336 1DDE  
                                                   l12392 4860  
                                                   l13600 3524  
                                                   l14144 2FBA  
                                                   l14400 075A  
                                                   l14232 02B8  
                                                   l10954 57A0  
                                                   l12714 4950  
                                                   l12706 4936  
                                                   l12650 5C16  
                                                   l12802 2CA4  
                                                   l13282 1CA6  
                                                   l13338 1E12  
                                                   l13266 1C32  
                                                   l12378 47C0  
                                                   l13602 352E  
                                                   l14306 048A  
                                                   l14170 00D0  
                                                   l15122 40B4  
                                                   l15106 402E  
                                                   l11932 6DB4  
                                                   l10956 57A4  
                                                   l12492 153E  
                                                   l12468 1448  
                                                   l12476 14CC  
                                                   l12820 2DCC  
                                                   l14092 66E4  
                                                   l13196 419C  
                                                   l13188 4164  
                                                   l13292 1CE4  
                                                   l13268 1C48  
                                                   l12660 67EA  
                                                   l13524 35F4  
                                                   l13516 35C4  
                                                   l13604 3532  
                                                   l14076 6386  
                                                   l14420 07AE  
                                                   l15108 403A  
                                                   l15116 405E  
                                                   l15044 220A  
                                                   l15036 2150  
                                                   l16020 57B8  
                                                   l12582 171A  
                                                   l12574 16E8  
                                                   l12566 16A4  
                                                   l12494 1544  
                                                   l12478 14DE  
                                                   l13438 31AA  
                                                   l13374 3004  
                                                   l13366 2FEC  
                                                   l12814 2D5C  
                                                   l12750 58C0  
                                                   l13286 1CCC  
                                                   l13702 1EFC  
                                                   l12398 4876  
                                                   l12670 6816  
                                                   l12662 67F2  
                                                   l13550 36E4  
                                                   l14078 638A  
                                                   l14510 0A40  
                                                   l14430 07B4  
                                                   l14342 05B6  
                                                   l14350 05C2  
                                                   l14270 0420  
                                                   l14238 02C6  
                                                   l15230 6492  
                                                   l15046 2224  
                                                   l15054 22BC  
                                                   l16030 5852  
                                                   l11960 4E22  
                                                   l12576 16F4  
                                                   l12488 1532  
                                                   l12584 173C  
                                                   l13392 3064  
                                                   l12808 2D0E  
                                                   l12728 7192  
                                                   l14096 66FA  
                                                   l14088 66CE  
                                                   l13720 1F58  
                                                   l12656 67DC  
                                                   l13544 3696  
                                                   l12904 6EE6  
                                                   l12840 67A2  
                                                   l13624 433A  
                                                   l14504 0A12  
                                                   l14512 0A46  
                                                   l14408 0796  
                                                   l14272 0438  
                                                   l14176 0110  
                                                   l14600 27F8  
                                                   l15240 64B8  
                                                   l15152 4B0A  
                                                   l16032 5854  
                                                   l11970 7236  
                                                   l13394 3078  
                                                   l12754 58E0  
                                                   l13722 1F60  
                                                   l12674 6820  
                                                   l12930 73D2  
                                                   l13546 36AA  
                                                   l12842 67A8  
                                                   l13642 43E6  
                                                   l14530 0A94  
                                                   l14522 0A84  
                                                   l14514 0A4C  
                                                   l14442 081E  
                                                   l14434 07C2  
                                                   l14418 079C  
                                                   l14370 06BA  
                                                   l14290 045E  
                                                   l14258 0406  
                                                   l14338 058A  
                                                   l14194 01A0  
                                                   l15234 6498  
                                                   l15250 64C8  
                                                   l15082 5672  
                                                   l15162 4B2C  
                                                   l15066 2360  
                                                   l16034 5858  
                                                   l15316 5EEC  
                                                   l12596 17AE  
                                                   l13476 66B2  
                                                   l12772 2BE6  
                                                   l12748 58BA  
                                                   l13724 1F6E  
                                                   l13492 69BA  
                                                   l12668 680E  
                                                   l12932 73DA  
                                                   l13548 36AE  
                                                   l13580 341E  
                                                   l13628 435C  
                                                   l13900 43FE  
                                                   l14508 0A3A  
                                                   l14460 0900  
                                                   l14444 0828  
                                                   l14620 28C0  
                                                   l15236 64AA  
                                                   l15260 6E7C  
                                                   l15156 4B10  
                                                   l15172 4B62  
                                                   l11958 4DD2  
                                                   l11966 721A  
                                                   l13398 3088  
                                                   l12790 2C6C  
                                                   l12782 2C10  
                                                   l14710 12D0  
                                                   l13750 203A  
                                                   l13654 6AD4  
                                                   l12862 6FDA  
                                                   l13582 3432  
                                                   l14470 099E  
                                                   l14198 01B0  
                                                   l14606 280A  
                                                   l14630 295A  
                                                   l15246 64C2  
                                                   l15182 6308  
                                                   l15078 5660  
                                                   l16150 5B70  
                                                   l15336 3EAC  
                                                   l15520 6730  
                                                   l12696 48EE  
                                                   l12688 48D6  
                                                   l12784 2C1C  
                                                   l13656 6AF4  
                                                   l13912 44B0  
                                                   l14384 073C  
                                                   l14624 2930  
                                                   l15264 6E82  
                                                   l15280 6C04  
                                                   l16160 5B86  
                                                   l12778 2BFC  
                                                   l14722 1354  
                                                   l13738 1FC4  
                                                   l13594 34CA  
                                                   l13914 44B4  
                                                   l14554 0AF6  
                                                   l14618 28BC  
                                                   l14802 5214  
                                                   l13850 540E  
                                                   l13842 53F0  
                                                   l12788 2C44  
                                                   l14716 133E  
                                                   l14660 0E6E  
                                                   l14652 0D68  
                                                   l13756 2090  
                                                   l13676 1E8A  
                                                   l13940 5442  
                                                   l12964 6F32  
                                                   l12876 49BC  
                                                   l13596 34D4  
                                                   l14548 0ABE  
                                                   l15268 6E94  
                                                   l15276 6BFE  
                                                   l15518 672C  
                                                   l12798 2C8C  
                                                   l14726 137C  
                                                   l14670 1076  
                                                   l14662 0FA2  
                                                   l13950 5464  
                                                   l12894 4A6E  
                                                   l12886 4A54  
                                                   l14494 0A00  
                                                   l14398 0742  
                                                   l14582 2792  
                                                   l14566 2708  
                                                   l14806 522E  
                                                   l13846 53FE  
                                                   l15480 46C2  
                                                   l14680 1142  
                                                   l13944 5458  
                                                   l13936 5434  
                                                   l12888 4A58  
                                                   l14816 525E  
                                                   l14690 11FA  
                                                   l14674 1140  
                                                   l14914 3AEC  
                                                   l13962 547E  
                                                   l14586 27A0  
                                                   l14842 5AAC  
                                                   l14818 5262  
                                                   l15468 4684  
                                                   l12996 4F3E  
                                                   l13884 3360  
                                                   l14588 27BA  
                                                   l14766 3964  
                                                   l15398 3F5C  
                                                   l13958 5472  
                                                   l13886 336A  
                                                   l13894 7626  
                                                   l14862 5AE4  
                                                   l14838 5A92  
                                                   l14926 73AE  
                                  __end_of_SysConfigSleep 61FE  
                                                   l14776 39AC  
                                                   l14768 397A  
                                                   l14856 5ADA  
                                                   l13992 4592  
                                                   l14698 1274  
                                                   l14858 5AE0  
                                                   l14794 51F0  
                                                   l14892 3C7E  
                                                   l14990 643A  
                                                   l14974 63D4  
                                                   l13998 4628  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                              _FillSubKey 6B44  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer 7938  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler 7854  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 60AA  
                                         RADIO_Transmit@i 00A6  
                                                   _IDLEN 007E9F  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 6658  
                                                   u13330 14F2  
                                                   u12620 6864  
                                       ??_EnableChannels1 006D  
                                                   u13335 14E8  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _T3CON 000FB1  
                                                   _LATD1 007C61  
                                    RxJoinResponse@status 0001  
                                                   u12627 685A  
                                                   u13435 15EC  
                                                   _LATD3 007C63  
                                                   u12580 6DC4  
                                                   _LATD4 007C64  
                                                   u14245 1854  
                                                   u16200 04D6  
                       __end_of_AckRetransmissionCallback 4B6C  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u13651 488C  
                                                   u16051 02A2  
                                                   u13820 2D2A  
                                                   u13805 2CC2  
                                                   u12790 5FC8  
                                                   u16230 05B2  
                                                   u16128 041E  
                                                   u17105 12E2  
                                                   u15505 44D6  
                                                   u14570 1BC4  
                                                   u16250 06B4  
                                                   u13835 2D4C  
                                                   u16308 072A  
                                                   u16228 0578  
                                                   u17300 3C08  
                                                   u15348 53DE  
                                                   u14805 314C  
                                                   u13845 2D6E  
                                                   u17310 3D04  
                                                   u17080 12A0  
                                                   u17305 3BFE  
                                                   u18025 6476  
                                                   u17315 3CFA  
                                                   u14780 3108  
                                                   u17340 3A60  
                                                   u15708 4634  
                                                   u15660 4550  
                                                   u15645 621C  
                                                   u17350 3A76  
                                                   u16390 0860  
                                          __CFG_DEBUG$OFF 000000  
                                                   u17095 12C0  
                                                   u17360 3B72  
                                                   u14864 69A0  
                                                   u16528 0A72  
                                                   u17505 380A  
                                                   u14865 699A  
                                                   u16458 09EE  
                                                   u17290 3BF2  
                                                   u17515 382C  
                                                   u14795 312A  
                                                   u17355 3A6C  
                                                   u16715 2746  
                                                   u15675 4582  
                                                   u15828 6374  
                                                   u17365 3B68  
                                                   u15685 45A4  
                                                   u17605 2350  
                                                   u17615 237A  
                                                   u17720 4072  
                                                   u17490 37E8  
                                                   u15970 017E  
                                                   u16915 0B7C  
                                                   u17820 4B04  
                                                   u16925 0BF6  
                                                   u16845 28DA  
                                                   u17590 2310  
                                                   u16935 0D9C  
                                                   u17735 40A4  
                                                   u16945 0E16  
                                                   u17745 40C6  
                                                   u16970 0FE2  
                                                   u16980 1000  
                                                   u16990 1104  
                                                   u17928 6322  
                                                   u17848 4B2A  
                                                   u16985 0FF6  
                                                   u19378 5840  
                                                   u16995 10FA  
                                                   u17888 4B50  
                                                   u19667 7220  
                                         __end_of___lwmod 6DA8  
                                                   i2l242 6AAC  
                                           ?_RADIO_RxDone 0001  
                     __size_of_LORAWAN_SetCurrentDataRate 002C  
                             __size_of_RADIO_ReceiveStart 0200  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR3H 000FB3  
                                                   _TMR1L 000FCE  
                                                   _TMR3L 000FB2  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 0028  
                                              _LoRaWakeUp 78B8  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                       __size_of_TMR3_SetInterruptHandler 000A  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 7944  
                                 ?_SetReceptionNotOkState 0001  
                               ?_TMR3_SetInterruptHandler 0064  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 77EE  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                        __end_of_TMR3_ISR 77E0  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00AB  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 00EE  
                          ??_TMR3_DefaultInterruptHandler 0001  
                                 __end_of_PIN_MANAGER_IOC 78AE  
                            ??_IncludeMacCommandsResponse 0068  
                           __end_of_RADIO_WatchdogTimeout 6CA8  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0052  
                          LORAWAN_RxDone@frmPayloadLength 03B1  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 77B6  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 03AF  
                                  _UpdateJoinSuccessState 4524  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 785E  
                                              _ComputeMic 68D2  
                                 __end_of_TMR1_Initialize 730A  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 78D0  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 4882  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2DD4  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 7554  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 03A0  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 26E2  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 1818  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 59BA  
                            __size_ofi2_SwTimersInterrupt 00EC  
                                        LORAWAN_Send@port 00D6  
                             __size_of_DIO1_ISR_Lora_Init 000C  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 777C  
                                            __end_of_main 5B96  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 6A12  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5F3C  
                                        _SetJoinFailState 7356  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 7632  
                                    _ExecuteRxTimingSetup 737A  
                                       __end_of_IOCB4_ISR 75E0  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00BE  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 78D8  
                                               ??_AESCmac 00C3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00E8  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00E2  
                                          ??_RADIO_TxDone 00D2  
                                         _TMR3_StartTimer 7934  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 7948  
                                   _TMR3_InterruptHandler 01EC  
                       __end_of_LORAWAN_LinkCheckCallback 4154  
                          __end_of_SetReceptionNotOkState 639E  
                             __end_of_UpdateReceiveDelays 6B44  
                         __end_of_AssembleEncryptionBlock 5914  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0096  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6DA8  
                                              _RxDataDone 611C  
                                          _EnableChannels 76F2  
                                      __size_of_LoRaSleep 0020  
                               ??_PrepareJoinRequestFrame 00D3  
                                          _HALSPICSAssert 794C  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00A0  
                                              _ExtractMic 6CA8  
                         __size_of_SearchAvailableChannel 00E0  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 7730  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 56FC  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B4  
                          _LORAWAN_ReceiveWindow1Callback 5648  
                                _RADIO_FSKPacketSent$1215 00DA  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 73C0  
                                                  _T1GCON 000FCC  
                                                  _T3GCON 000FB4  
                                 SwTimerReadValue@timerId 0095  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 353C  
                                 __end_of_TMR3_Initialize 7294  
                  __end_of_LORAWAN_ReceiveWindow2Callback 541A  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback 5352  
                                                  i2l1347 75BA  
                                                  i2l2501 0054  
                                                  i2l2503 0064  
                                                  i2l2507 006E  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2724 7754  
                                                  i2l2497 0038  
                                                  i2l2499 0044  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  i2l9962 4CE6  
                                                  i2l9964 4D36  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 0018  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00D6  
                         __size_of_AutomaticReplyCallback 001E  
                              __size_of_LORAWAN_RxTimeout 029E  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 782A  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable FE6D  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C5  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 778C  
                                     LORAWAN_TxDone@found 00C4  
                                         _CheckMcastFlags 60AA  
                                     LORAWAN_TxDone@minim 00CD  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 73E2  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C9  
                                              _TimeToSend 01C3  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 7962  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 7960  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 713E  
                                               ??___abdiv 0065  
                                                  ___lmul 5D38  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 793C  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0096  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 5914  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009E  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 6828  
                                                  _memset 7242  
                                                  clear_0 5A02  
                                                  clear_1 5A14  
                                                  clear_2 5A20  
                                                  clear_3 5A2C  
                                                  clear_4 5A38  
                                                  clear_5 5A44  
                                                  clear_6 5A50  
                                 SwTimerIsRunning@timerId 0064  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 7708  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 7966  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 7964  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 7950  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 008D  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE6C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0091  
                                         _UpdateDataRange 4984  
                                  __end_of_ExecuteLinkAdr 36EE  
                                      ??_ExecuteDutyCycle 0066  
                      __end_of_LORAWAN_SetCurrentDataRate 7198  
                              _LORAWAN_SetCurrentDataRate 716C  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR3_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 6F0A  
                              _LORAWAN_SetChannelIdStatus 6ED2  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007D  
                                           AESEncode@aux2 007C  
                                           AESEncode@aux3 007E  
                                 __end_of_TMR1_WriteTimer 7570  
                                   __end_of_SwTimerCreate 62D2  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 00CA  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 75A8  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00B0  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 7404  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DC  
                                          ??_LORAWAN_Send 00DA  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 5A56  
                           __end_of_RADIO_FSKPayloadReady 5AFA  
                                          _RADIO_Transmit 2FC4  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 730A  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6C1E  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 03A9  
                                          _maxPayloadSize FF6D  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                                   __end_of_TMR3_CallBack 758C  
                               ExecuteLinkAdr@channelMask 0074  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend 78A4  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 7464  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 4F20  
                              __end_of_handle16sInterrupt 7758  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 70DE  
                                     ??_SYSTEM_Initialize 0066  
                                 __end_of_TMR3_StartTimer 7938  
                              __end_of_DIO4_ISR_Lora_Init 795A  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                               ?_TMR3_ISR 0001  
                                _RADIO_WriteConfiguration 13A0  
                                    __size_of_readAndSend 0032  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF9B  
                               __size_of_LORAWAN_Mainloop 003A  
                                        ??_EncKeySchedule 0065  
                   __end_of_IOCB4_DefaultInterruptHandler 7964  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 7962  
                                __end_of_RADIO_WritePower 5352  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 77C4  
                                       LORAWAN_RxDone@hdr 03B2  
                                            ??_RADIO_DIO0 00E4  
                                            ??_RADIO_DIO1 00B0  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 6404  
                                         _UpdateFrequency 6E98  
                                  _AutomaticReplyCallback 7484  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 03A1  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 002E  
                                         _UpdateDutyCycle 7048  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 73E2  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 795A  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput 7958  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 785E  
                                        RADIO_DIO0@opMode 00E7  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0067  
                      __end_of_IncludeMacCommandsResponse 1E2C  
                              _IncludeMacCommandsResponse 1B34  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                                   LORAWAN_Send@confirmed 00DC  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 771C  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 7424  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                  __end_of_RADIO_Transmit 31B2  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3E9E  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00E8  
                                              __pbssBANK1 0169  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 7554  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 611C  
                                        ?_TMR3_Initialize 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF75  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 008C  
                                    _RADIO_SetOutputPower 78D0  
                                              __pnvCOMRAM 005B  
                                    __end_of_RADIO_SetCRC 7886  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 5284  
                              __end_of_RADIO_RxFSKTimeout 6FAE  
                                    __end_of_RADIO_TxDone 3D3C  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 64CE  
                                      __end_of_RADIO_DIO1 6E98  
                                      __end_of_RADIO_DIO2 6C1E  
                                      __end_of_RADIO_DIO3 76C4  
                                      __end_of_RADIO_DIO4 76AC  
                                      __end_of_RADIO_DIO5 7694  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init 3A20  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00A0  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 751A  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 67D0  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                     __size_of_LoRaWakeUp 0008  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 43F0  
                        __end_of_TMR3_SetInterruptHandler 7840  
                                      ??_CountfOptsLength 0064  
                                  __size_of_DIO2_ISR_Lora 0006  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00A8  
                                      EncryptFRMPayload@j 00A9  
                                      EncryptFRMPayload@k 00A7  
                                              ??_TMR1_ISR 002A  
                                              ??_TMR3_ISR 0001  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 7618  
                                        _ValidateRxOffset 7708  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 77FA  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0052  
                                  RADIO_Transmit@regValue 00A5  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A20  
                                                 _AESCmac 1818  
                                  ComputeMic@bufferLength 00CE  
                                 __size_of_ADC_SelChannel 0018  
                                 __end_of_UpdateDataRange 4A7A  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10650 4EA4  
                                                 i2l10626 6DF2  
                                                 i2l10644 4E54  
                                                 i2l10654 4F06  
                                                 i2l10656 4F08  
                                    EncryptFRMPayload@dir 0097  
                                      _RADIO_GetPacketSnr 78FE  
                                    EncryptFRMPayload@key 009C  
                                   __end_of_UpdateTxPower 78C8  
                                     _RADIO_SetIQInverted 7872  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 008E  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 00EE  
                                     i2_SwTimersInterrupt 4E34  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF94  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 737A  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0096  
                                 _ValidateChannelMaskCntl 76C4  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 009A  
                              AssemblePacket@bufferLength 00CD  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 5E40  
                             PrepareJoinRequestFrame@iCtr 00DB  
                               _IOCB4_SetInterruptHandler 784A  
                       __end_of_SetCallbackSoftwareTimers 5648  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4A7A  
                             PrepareJoinRequestFrame@mhdr 00D9  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 0036  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00BC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FFA2  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D5  
                                  _InitDefault868Channels 639E  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00D9  
                                   _StopAllSoftwareTimers 6A12  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0019  
                                 __end_of_UpdateFrequency 6ED2  
                                     AssemblePacket@fCtrl 00D3  
                                                 ___abdiv 6880  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 0072  
                                              AESEncode@i 007F  
                                               _AESEncode 2408  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 7806  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 000C  
                                        ?_TMR3_StartTimer 0001  
                                 __end_of_UpdateDutyCycle 707A  
                                                 ___lldiv 6034  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 65F6  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6D6A  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 59BA  
                      __size_of_LORAWAN_GetMaxPayloadSize 004C  
                                                 _appSKey 01C4  
                                         __size_of_memcpy 0058  
                              __end_of_RADIO_ReceiveStart 2DD4  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00A1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 5AFA  
                                                 __ptext1 7016  
                                                 __ptext2 6F42  
                                                 __ptext3 764C  
                                                 __ptext4 618E  
                                                 __ptext5 7404  
                                                 __ptext6 726C  
                                                 __ptext7 7934  
                                                 __ptext8 7836  
                                                 __ptext9 72E4  
                                    __end_of_LORAWAN_Init 6774  
                                    __end_of_LORAWAN_Join 5CB0  
                                    __end_of_LORAWAN_Send 54D6  
                                           _DIO0_ISR_Lora 792E  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D3C  
                                               _IOCB4_ISR 75C4  
                              ExecuteNewChannel@frequency 0073  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0086  
                                 __size_of_LORAWAN_RxDone 0A80  
                                   _OSCILLATOR_Initialize 77EE  
                          __end_of_UpdateJoinSuccessState 4650  
                                 __size_of_LORAWAN_TxDone 0888  
                              __end_of_RADIO_SetBandwidth 78F0  
                                         _RADIO_GetStatus 7904  
                                               _T3CONbits 000FB1  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF9B  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 7922  
                                             _SwTimerStop 7538  
                                                 _payload 01AF  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01D4  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 337A  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                           _DIO2_ISR_Lora 7916  
                              __size_of_SYSTEM_Initialize 0020  
                    __end_of_LORAWAN_SetNetworkSessionKey 71EE  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 71C4  
                                      ?_ExecuteNewChannel 0070  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00CC  
                                    end_of_initialization 5A56  
                                 _CreateAllSoftwareTimers 6924  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 7854  
                                   ??_RADIO_FSKPacketSent 00D2  
                                          _GenerateSubkey 4882  
                                   _RADIO_WatchdogTimeout 6C66  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF75  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 6828  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 3FFC  
                                               i2u1100_40 6E02  
                                          ??_SwTimerStart 008D  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 78C8  
                                   _UpdateChannelIdStatus 477C  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 781E  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 6F0A  
                                              _ticksAdded 003A  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 001D  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 0094  
                                        _LORAWAN_GetState 78F0  
                                    _HALResetPinMakeInput 7954  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A8  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 78E0  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                                         _SystemTimerInit 793C  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 6E24  
                            __end_of_RADIO_SetFSKSyncWord 71C4  
                                      LORAWAN_Join@result 00DD  
                                      __end_of_CheckFlags 6716  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3E9E  
                                      _DIO0_ISR_Lora_Init 781E  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01E4  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                        RxDataDone@status 006A  
                                            ??_FillSubKey 0069  
                            SwTimersInterrupt@timeElapsed 0084  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 72BC  
                               __size_of_ExecuteDevStatus 000A  
                                _TMR3_SetInterruptHandler 7836  
                            __end_of_RADIO_WriteFrequency 50DC  
                              __end_of_RADIO_RegisterRead 7356  
                       __end_of_LORAWAN_GetMaxPayloadSize 6AFA  
                          __end_of_HALResetPinOutputValue 7744  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 7330  
                                __end_of_ConfigureRadioTx 6C66  
                                         _RADIO_RxTimeout 7294  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 353C  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02F4  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 6CEA  
                                          _TMR1_ReadTimer 74FC  
                                          ??_UpdateCfList 0072  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 4984  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 0036  
                                           RADIO_RxDone@i 00E3  
                                   __size_of_RADIO_SetCRC 000A  
                             ?_LORAWAN_SetCurrentDataRate 0001  
                                 AssemblePacket@macCmdIdx 00D4  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 00F1  
                                      __end_of_GetRx1Freq 776A  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00CF  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 009E  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A5  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 5EBE  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B2  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 77A8  
                                         _RADIO_WriteMode 50DC  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DE  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00D1  
                                      __end_of_FillSubKey 6B8E  
                                 _AssembleEncryptionBlock 5862  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF6D  
                                     AESEncodeLoRa@useKey 0084  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp 78C0  
                                      LORAWAN_Send@buffer 00D7  
                                          __end_of_Random 7404  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 7730  
                            __end_of_INTERRUPT_Initialize 7944  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 78FE  
                                 __end_of_RADIO_GetStatus 790A  
                                          __end_of___lmul 5DBE  
                                      LORAWAN_Send@result 00DB  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 7444  
                                           __pidataCOMRAM 78AE  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0080  
                                       __size_of_TMR1_ISR 000E  
                                       __size_of_TMR3_ISR 000E  
                                          _ADC_SelChannel 764C  
                                      __end_of_ComputeMic 6924  
                                               Random@max 0077  
                                          __end_of_memcpy 6880  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6D2C  
                                  __end_of_TMR1_ReadTimer 751A  
                                          __end_of_memset 726C  
                                         _SPI2_Initialize 782A  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 787C  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                            _RADIO_RxDone 51B4  
                                            _RADIO_TxDone 3BB2  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 59BA  
                                      _handle16sInterrupt 7744  
                                          _ConfigureRadio 5B96  
                                      LORAWAN_RxDone@mhdr 03A2  
                                      LORAWAN_RxDone@temp 03A8  
                                            ??_RxDataDone 006B  
                                      _DIO4_ISR_Lora_Init 7958  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer 7538  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 74DE  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0069  
                         __size_of_PIN_MANAGER_Initialize 0048  
                           __end_of_TMR_OverrideRemaining 6034  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 7618  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 009F  
                                            AESCmac@input 00C0  
                        __end_of_LORAWAN_SetDeviceAddress 767C  
                                         ?_GenerateSubkey 0094  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00D1  
                                   LORAWAN_Init@RxPayload 00A6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                 _ONE_HOUR_TIMEOUT_COUNTS 005A  
                                   __end_of_INT2_CallBack 75FC  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 7632  
                              SwTimerStart@ticksRemaining 0091  
                                  RADIO_WriteMode@newMode 006E  
                                     ?_handle16sInterrupt 0001  
                                __end_of_ValidateRxOffset 771C  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 78E0  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 5000  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 6DE6  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 7940  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0040  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0042  
                                   _RADIO_FSKPayloadReady 5A5C  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 7954  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00DD  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0091  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 646A  
                          __end_of_AutomaticReplyCallback 74A2  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0026  
                                    _macEndDevCmdReplyLen FF94  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00F2  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00BC  
                                 __end_of_RADIO_RxTimeout 72BC  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 618E  
                                ??_SetReceptionNotOkState 00A0  
                                          ??_TMR_ISR_lora 002A  
                                  __end_of_ADC_SelChannel 7664  
                                         ??_DIO0_ISR_Lora 0001  
                                    ??_handle16sInterrupt 0001  
                                             __pdataBANK1 01B3  
                                       _ValidateDataRange 6FAE  
                                      __end_of_ExtractMic 6CEA  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
                  SwTimersInterrupt@ticksToNextTimerEvent 0088  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 006A  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 713E  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 74A2  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor 78D8  
                                      _RADIO_RxFSKTimeout 6F78  
                                                ?_AESCmac 00BC  
                                  __size_of_TMR1_CallBack 001C  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 007B  
                                            AESEncode@key 006C  
                                  TMR_GetDeltaTime@retVal 0032  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 5C24  
                                          _LORAWAN_RxDone 0098  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 003E  
                                          _LORAWAN_TxDone 0B18  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5D38  
                  __end_of_LORAWAN_EnterContinuousReceive 6594  
                 __size_of_LORAWAN_EnterContinuousReceive 0062  
                          _LORAWAN_EnterContinuousReceive 6532  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00BC  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0032  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 0099  
                        __end_of_INT0_SetInterruptHandler 795E  
                                      LORAWAN_RxTimeout@i 00AF  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                           __pcstackBANK3 03A0  
                                  __size_of_TMR3_CallBack 001C  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4D48  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 51B4  
                 __end_of_UnconfirmedTransmissionCallback 6338  
                __size_of_UnconfirmedTransmissionCallback 0066  
                         _UnconfirmedTransmissionCallback 62D2  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                                 _RADIO_ReceiveStart$1199 009C  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 019F  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0095  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 7198  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 70DE  
       __end_of_ResetParametersForUnconfirmedTransmission 779A  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 778C  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01E6  
                                               _bandwidth FF8D  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 6716  
                                            _LORAWAN_Join 5C24  
                                            _LORAWAN_Send 541A  
                                  RADIO_FSKPayloadReady@i 00E3  
                                       _ValidateFrequency 6774  
                                               __pnvBANK1 01E4  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 5000  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 7948  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 7016  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 6B8E  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 337A  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                __size_of_TMR3_Initialize 0028  
                                               _macBuffer 04E0  
                                               _dioStatus 00F0  
                               __end_of_ValidateDataRange 6FE2  
                           RADIO_FSKPayloadReady@irqFlags 00E2  
                                       _SwTimersInterrupt 4B6C  
                                       ??_SwTimersExecute 00DD  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 784A  
                                           __pmediumconst FE6C  
                                 RADIO_Transmit@bufferLen 0098  
                                 __end_of_SPI2_Initialize 7836  
                                               __ptext100 5914  
                                               __ptext101 4154  
                                               __ptext110 0B18  
                                               __ptext102 5862  
                               __end_of_ValidateChannelId 74C0  
                                               __ptext111 6D2C  
                                               __ptext103 54D6  
                                               __ptext200 6268  
                                               __ptext120 779A  
                                               __ptext112 7464  
                                               __ptext104 6CA8  
                                               __ptext201 78F0  
                                               __ptext121 790A  
                                               __ptext113 7904  
                                               __ptext105 5E40  
                                               __ptext210 758C  
                                               __ptext202 776A  
                                               __ptext130 6C1E  
                                               __ptext122 74C0  
                                               __ptext114 6532  
                                               __ptext106 5F3C  
                                               __ptext211 7960  
                                               __ptext203 77C4  
                                               __ptext131 78D0  
                                               __ptext123 2BD4  
                                               __ptext115 611C  
                                               __ptext107 60AA  
                                               __ptext220 7916  
                                               __ptext212 6A60  
                                               __ptext140 78E8  
                                               __ptext132 7872  
                                               __ptext124 730A  
                                               __ptext116 716C  
                                               __ptext108 66B8  
                                               __ptext221 7962  
                                               __ptext213 6DE6  
                                               __ptext205 77D2  
                                               __ptext141 2FC4  
                                               __ptext133 787C  
                                               __ptext125 77A8  
                                               __ptext117 771C  
                                               __ptext109 3A20  
                                               __ptext230 0000  
                                               __ptext222 791C  
                                               __ptext214 75A8  
                                               __ptext206 7570  
                                               __ptext150 6D6A  
                                               __ptext142 13A0  
                                               __ptext134 5B96  
                                               __ptext126 5C24  
                                               __ptext118 78C8  
                                               __ptext223 75E0  
                                               __ptext215 4E34  
                                               __ptext207 795E  
                                               __ptext151 68D2  
                                               __ptext143 5284  
                                               __ptext135 78D8  
                                               __ptext127 7632  
                                               __ptext119 778C  
                                               __ptext224 7922  
                                               __ptext216 4C5A  
                                               __ptext208 7744  
                                               __ptext160 77B6  
                                               __ptext152 1818  
                                               __ptext144 64CE  
                                               __ptext136 78E0  
                                               __ptext128 6658  
                                               __ptext225 7964  
                                               __ptext217 751A  
                                               __ptext209 77E0  
                                               __ptext161 5592  
                                               __ptext153 4882  
                                               __ptext145 6594  
                                               __ptext137 7886  
                                               __ptext129 4F20  
                                               __ptext226 7928  
                                               __ptext218 78A4  
                                               __ptext170 7330  
                                               __ptext162 5EBE  
                                               __ptext154 6B44  
                                               __ptext146 4650  
                                               __ptext138 7198  
                                               __ptext227 75FC  
                                               __ptext219 75C4  
                                               __ptext171 7910  
                                               __ptext163 3E9E  
                                               __ptext155 72BC  
                                               __ptext147 73E2  
                                               __ptext139 5DBE  
                                               __ptext228 792E  
                                               __ptext180 7218  
                                               __ptext172 5000  
                                               __ptext164 56FC  
                                               __ptext156 2408  
                                               __ptext148 69C4  
                                               __ptext229 7966  
                                               __ptext181 7730  
                                               __ptext173 65F6  
                                               __ptext165 6A12  
                                               __ptext157 3D3C  
                                               __ptext149 5D38  
                                               __ptext190 7554  
                                               __ptext182 7950  
                                               __ptext174 74DE  
                                               __ptext166 7890  
                                               __ptext158 2980  
                                               __ptext191 4B6C  
                                               __ptext183 7954  
                                               __ptext175 789A  
                                               __ptext167 388A  
                                               __ptext159 6716  
                                               __ptext192 4D48  
                                               __ptext184 36EE  
                                               __ptext176 777C  
                                               __ptext168 70AC  
                                               __ptext193 74FC  
                                               __ptext185 6034  
                                               __ptext177 7948  
                                               __ptext169 50DC  
                                               __ptext194 6CEA  
                                               __ptext186 7538  
                                               __ptext178 794C  
                                               __ptext195 639E  
                                               __ptext187 5CB0  
                                               __ptext179 6FE2  
                                               __ptext196 6404  
                                               __ptext188 5FB8  
                                               __ptext197 7242  
                                               __ptext189 6DA8  
                                               __ptext198 6828  
                                               __ptext199 6924  
                                       _EncryptFRMPayload 4154  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D6  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0084  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 477C  
                                                ?___lwmod 0072  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 007C  
                               _RADIO_SetChannelFrequency 5DBE  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 5592  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0B18  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 13A0  
                                      ?_EncryptFRMPayload 0094  
                                     __end_of_readAndSend 7048  
                            ??_INTERRUPT_InterruptManager 002A  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 7444  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 7868  
                           __end_of_RADIO_SetLoRaSyncWord 789A  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1E2C  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00D5  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 4D48  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0080  
                                    RADIO_DIO0@dioMapping 00E6  
                                       _DutyCycleCallback 2120  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6DE6  
                                                _ADC_Init 77C4  
                                                _ADC_Read 6F42  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00A2  
                                __end_of_LORAWAN_GetState 78F8  
                                 __end_ofi2_TMR_SwapTimer 6E24  
                                 __size_of_EncKeySchedule 0254  
                                      AssemblePacket@mhdr 00D2  
                                      AssemblePacket@port 00CA  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2BD4  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 6E5E  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 7940  
                                           _SwTimerCreate 6268  
                          __end_of_InitDefault868Channels 6404  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 758C  
                      LORAWAN_SetCurrentDataRate@valueNew 0066  
                               __end_of_ValidateFrequency 67D0  
                                        _SwTimerIsRunning 7464  
                                        _ExecuteLinkCheck 707A  
                                    i2SwTimersInterrupt@i 0029  
                                                _INT1_ISR 7928  
                                _LORAWAN_SetDeviceAddress 7664  
                                                _INT2_ISR 791C  
                                       EncKeySchedule@key 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 78E8  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF8D  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00EC  
                                     ?_RADIO_ReceiveStart 0096  
                                        _SwTimerReadValue 6D2C  
                                                _PIE1bits 000F9D  
                                                _PIE2bits 000FA0  
                                        _ExecuteDutyCycle 6976  
                                         _HALDIO5PinValue 7910  
                                    RADIO_DIO1@dioMapping 00B1  
                               __end_of_SwTimersInterrupt 4C5A  
                                __size_of_TMR1_WriteTimer 001C  
                     __size_of_INTERRUPT_InterruptManager 0088  
                              __end_of_DIO2_ISR_Lora_Init 7812  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0096  
                                        GenerateSubkey@k2 0098  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0076  
                              ??_TMR3_SetInterruptHandler 0066  
                                           _TMR3_CallBack 7570  
                               __end_of_EncryptFRMPayload 42A8  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 03A7  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 65F6  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0067  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 00E8  
                                    __end_of_IO_pins_init 777C  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 56FC  
                           EncryptFRMPayload@bufferLength 0096  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 77E0  
                                ConfigureRadioTx@dataRate 007A  
                                                _TMR3_ISR 77D2  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F8  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0098  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6AFA  
                         __size_of_SetReceptionNotOkState 0066  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2120  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00A0  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0068  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init 7812  
                               __end_of_DutyCycleCallback 2408  
                                        __size_of_AESCmac 031C  
                                    ??_RADIO_ReceiveStart 0098  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 5FB8  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                __size_of_TMR3_StartTimer 0004  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0080  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3BB2  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 03AB  
                                       ___lmul@multiplier 0064  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 59CE  
                                               copy_data1 59EE  
                                   ?_INTERRUPT_Initialize 0001  
                                     _EncKeySchedule$4148 0068  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                _INT0_SetInterruptHandler 795C  
                             __end_of_RADIO_SetIQInverted 787C  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 6AAE  
                                             _RADIO_Reset 6FE2  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0021  
                                      _RADIO_RegisterRead 7330  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 43F0  
                             __end_ofi2_SwTimersInterrupt 4F20  
                               _LORAWAN_GetMaxPayloadSize 6AAE  
                              LORAWAN_RxDone@extractedMic 03A3  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0098  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00C2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                   handle16sInterrupt@counterSleepTimeout 0045  
                                          ?_TMR3_CallBack 0001  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 7242  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 75A8  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 7016  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0072  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 0056  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 5E40  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 00CA  
                                    AssemblePacket@buffer 00CB  
                                        SwTimersExecute@i 00E1  
                                      ??_ValidateDataRate 0064  
                                       ??_TMR3_Initialize 0066  
                                _TMR1_SetInterruptHandler 7840  
                                  _IOCB4_InterruptHandler 01E8  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 77A8  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 779A  
                                   _TMR1_InterruptHandler 01EA  
                                        ??_GenerateSubkey 009A  
                                        _CountfOptsLength 54D6  
                                              _HALSPISend 789A  
                                     ?_ComputeSessionKeys 0094  
                                          _rxWindowOffset FF7D  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 2FC4  
                                 __size_of_SysConfigSleep 0070  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 73C0  
                                           _UpdateTxPower 78C0  
                                    RADIO_Transmit@buffer 0096  
                         __end_of_RADIO_FHSSChangeChannel 716C  
                                         _allocatedTimers 00EF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 77B6  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 78F8  
                                                __ptext10 7938  
                                                __ptext11 6B8E  
                                                __ptext20 7806  
                                                __ptext12 77EE  
                                                __ptext21 784A  
                                                __ptext13 7424  
                                                __ptext30 782A  
                                                __ptext22 7812  
                                                __ptext14 77FA  
                                                __ptext31 7444  
                                                __ptext23 781E  
                                                __ptext15 7840  
                                                __ptext40 4A7A  
                                                __ptext32 71C4  
                                                __ptext24 7940  
                                                __ptext16 793C  
                                                __ptext41 3FFC  
                                                __ptext33 7664  
                                                __ptext25 7110  
                                                __ptext17 78F8  
                                                __ptext50 76AC  
                                                __ptext42 5648  
                                                __ptext34 71EE  
                                                __ptext26 7854  
                                                __ptext18 7958  
                                                __ptext51 6BD6  
                                                __ptext43 5352  
                                                __ptext35 6E24  
                                                __ptext27 785E  
                                                __ptext19 795A  
                                                __ptext60 5A5C  
                                                __ptext52 6E5E  
                                                __ptext44 6C66  
                                                __ptext36 57B0  
                                                __ptext28 795C  
                                                __ptext61 26E2  
                                                __ptext53 7294  
                                                __ptext45 6F78  
                                                __ptext37 2120  
                                                __ptext29 78B8  
                                                __ptext70 2DD4  
                                                __ptext62 0098  
                                                __ptext54 713E  
                                                __ptext46 62D2  
                                                __ptext38 4524  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 737A  
                                                __ptext63 61FE  
                                                __ptext55 646A  
                                                __ptext47 7758  
                                                __ptext39 7484  
                                                __ptext80 7048  
                                                __ptext72 6AFA  
                                                __ptext64 7618  
                                                __ptext56 739E  
                                                __ptext48 767C  
                                                __ptext81 4984  
                                                __ptext73 42A8  
                                                __ptext65 31B2  
                                                __ptext57 3BB2  
                                                __ptext49 7694  
                                                __ptext90 76F2  
                                                __ptext82 6ED2  
                                                __ptext74 7708  
                                                __ptext66 43F0  
                                                __ptext58 51B4  
                                                __ptext91 67D0  
                                                __ptext83 74A2  
                                                __ptext75 76DC  
                                                __ptext67 6338  
                                                __ptext59 6880  
                                                __ptext92 477C  
                                                __ptext84 707A  
                                                __ptext76 337A  
                                                __ptext68 7356  
                                                __ptext93 6976  
                                                __ptext85 353C  
                                                __ptext77 6774  
                                                __ptext69 7944  
                                                __ptext94 7868  
                                                __ptext86 73C0  
                                                __ptext78 6FAE  
                                                __ptext95 541A  
                                                __ptext87 76C4  
                                                __ptext79 6E98  
                                                __ptext96 6AAE  
                                                __ptext88 6F0A  
                                                __ptext97 1E2C  
                                                __ptext89 78C0  
                                                __ptext98 1B34  
                                                __ptext99 78FE  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 3FFC  
                                  __end_of_StartReTxTimer 4524  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 6338  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01B3  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 7916  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012C  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 009C  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 74C0  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 7424  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 75C4  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 0096  
                                           _timerOverflow 00F2  
                                            _SwTimerStart 5CB0  
                              __size_of_SwTimersInterrupt 00EE  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D6  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 000C  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00BB  
                                         GenerateSubkey@l 00AB  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 4E34  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00E2  
                             __end_of_ValidateChannelMask 6F42  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 0090  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 790A  
                                       ??_TMR1_WriteTimer 0066  
                    __end_of_TMR3_DefaultInterruptHandler 7960  
                   __size_of_TMR3_DefaultInterruptHandler 0002  
                            _TMR3_DefaultInterruptHandler 795E  
                                              _RADIO_DIO0 646A  
                                              _RADIO_DIO1 6E5E  
                                              _RADIO_DIO2 6BD6  
                                              _RADIO_DIO3 76AC  
                                              _RADIO_DIO4 7694  
                                              _RADIO_DIO5 767C  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 7968  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 7966  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset FF85  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 0094  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation FF7D  
                                              _RADIO_Init 388A  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0044  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 794C  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 2980  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 31B2  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 002A  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 5EBE  
                                       _RADIO_TxDone$1211 00DA  
                                      _EXT_INT_Initialize 7110  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 5FB8  
                                       ??_TMR3_StartTimer 0064  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0096  
                               __end_of_RADIO_ReceiveStop 74DE  
                                         _SwTimersExecute 57B0  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 7872  
                                 ?_PIN_MANAGER_Initialize 0001  
                                         ??_TMR3_CallBack 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0012  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 009B  
                         __size_of_ExecuteRxParamSetupReq 0148  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2092 00BC  
                                     _LORAWAN_TxDone$2093 00C0  
                      __end_of_LORAWAN_LinkCheckConfigure 388A  
                               __end_of_RADIO_ReleaseData 7910  
                              _LORAWAN_LinkCheckConfigure 36EE  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 7950  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001C  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0082  
                               __size_of_SetJoinFailState 0024  
                        LORAWAN_LinkCheckConfigure@period 0096  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 70AC  
             __end_of_UpdateRetransmissionAckTimeoutState 6268  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0096  
                     _UpdateRetransmissionAckTimeoutState 61FE  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                             __size_of_handle16sInterrupt 0014  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001C  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$4143 0075  
                                          _AESEncode$4144 0077  
                                          _AESEncode$4145 0079  
                                   __end_of_DIO0_ISR_Lora 7934  
                                __end_of_SwTimerIsRunning 7484  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 70AC  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                           ?_TMR3_DefaultInterruptHandler 0001  
                                            _rxWindowSize FF85  
                                  __end_of_EncKeySchedule 2BD4  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 7928  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6D6A  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 69C4  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 76F2  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 76DC  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3502 00A0  
                        __end_of_INT1_SetInterruptHandler 7868  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00DE  
                                   __size_of_TMR_ISR_lora 004E  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 791C  
                                    _SystemBlockingWaitMs 7218  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 0094  
                                 __size_of_EnableChannels 0016  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress 764C  
                            __end_of_ExecuteRxTimingSetup 739E  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init 776A  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 6532  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 64CE  
                __end_of_LORAWAN_SetApplicationSessionKey 7218  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 71EE  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00E2  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 739E  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6BD6  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 74FC  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4C5A  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 78A4  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00E8  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 72E4  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0169  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 26E2  
                             __end_of_RADIO_SetModulation 78E8  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00DD  
                                     ?i2_TMR_GetDeltaTime 0009  
