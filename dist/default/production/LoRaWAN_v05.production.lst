

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Sun Aug 21 12:57:52 2022

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	text225,global,reloc=2,class=CODE,delta=1
   250                           	psect	text226,global,reloc=2,class=CODE,delta=1
   251                           	psect	text227,global,reloc=2,class=CODE,delta=1
   252                           	psect	text228,global,reloc=2,class=CODE,delta=1
   253                           	psect	text229,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258  0000                     
   259 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   260  0000                     
   261 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   262  0000                     
   263 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   264 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   265 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   266 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   267 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   268 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   269 ;;_LORAWAN_LinkCheckCallback$3516	offset	0
   270 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   271 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   272 ;;_DutyCycleCallback$2268	offset	0
   273 ;;DutyCycleCallback@minim	offset	4
   274 ;;DutyCycleCallback@i	offset	8
   275 ;;DutyCycleCallback@found	offset	9
   276 ;;DutyCycleCallback@param	offset=-1 (param)
   277 ;;AutomaticReplyCallback@param	offset=-1 (param)
   278 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   279 ;;AckRetransmissionCallback@param	offset=-1 (param)
   280 ;;_param	offset=-1 (param)
   281 ;;_UpdateJoinSuccessState$3533	offset	0
   282 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   283                           
   284                           	psect	idataCOMRAM
   285  0078AC                     __pidataCOMRAM:
   286                           	opt stack 0
   287                           
   288                           ;initializer for _randx
   289  0078AC  0001               	dw	1
   290  0078AE  0000               	dw	0
   291                           
   292                           ;initializer for _ticksToScheduledInterrupt
   293  0078B0  FFFF               	dw	65535
   294  0078B2  FFFF               	dw	65535
   295                           
   296                           ;initializer for _ONE_HOUR_TIMEOUT_COUNTS
   297  0078B4  04                 	db	4
   298                           
   299                           	psect	idataBANK1
   300  0070DE                     __pidataBANK1:
   301                           	opt stack 0
   302                           
   303                           ;initializer for GenerateSubkey@F7870
   304  0070DE  00                 	db	0
   305  0070DF  00                 	db	0
   306  0070E0  00                 	db	0
   307  0070E1  00                 	db	0
   308  0070E2  00                 	db	0
   309  0070E3  00                 	db	0
   310  0070E4  00                 	db	0
   311  0070E5  00                 	db	0
   312  0070E6  00                 	db	0
   313  0070E7  00                 	db	0
   314  0070E8  00                 	db	0
   315  0070E9  00                 	db	0
   316  0070EA  00                 	db	0
   317  0070EB  00                 	db	0
   318  0070EC  00                 	db	0
   319  0070ED  87                 	db	135
   320                           
   321                           ;initializer for _appSKey
   322  0070EE  DD                 	db	221
   323  0070EF  32                 	db	50
   324  0070F0  54                 	db	84
   325  0070F1  F0                 	db	240
   326  0070F2  8D                 	db	141
   327  0070F3  55                 	db	85
   328  0070F4  D6                 	db	214
   329  0070F5  52                 	db	82
   330  0070F6  E7                 	db	231
   331  0070F7  73                 	db	115
   332  0070F8  0B                 	db	11
   333  0070F9  BC                 	db	188
   334  0070FA  26                 	db	38
   335  0070FB  3E                 	db	62
   336  0070FC  0A                 	db	10
   337  0070FD  DA                 	db	218
   338                           
   339                           ;initializer for _nwkSKey
   340  0070FE  75                 	db	117
   341  0070FF  E0                 	db	224
   342  007100  66                 	db	102
   343  007101  1A                 	db	26
   344  007102  A0                 	db	160
   345  007103  BC                 	db	188
   346  007104  21                 	db	33
   347  007105  E4                 	db	228
   348  007106  4B                 	db	75
   349  007107  57                 	db	87
   350  007108  21                 	db	33
   351  007109  B0                 	db	176
   352  00710A  D6                 	db	214
   353  00710B  30                 	db	48
   354  00710C  F7                 	db	247
   355  00710D  B2                 	db	178
   356                           
   357                           	psect	mediumconst
   358  00FE6C                     __pmediumconst:
   359                           	opt stack 0
   360  00FE6C  00                 	db	0
   361  00FE6D                     _STable:
   362                           	opt stack 0
   363  00FE6D  63                 	db	99
   364  00FE6E  7C                 	db	124
   365  00FE6F  77                 	db	119
   366  00FE70  7B                 	db	123
   367  00FE71  F2                 	db	242
   368  00FE72  6B                 	db	107
   369  00FE73  6F                 	db	111
   370  00FE74  C5                 	db	197
   371  00FE75  30                 	db	48
   372  00FE76  01                 	db	1
   373  00FE77  67                 	db	103
   374  00FE78  2B                 	db	43
   375  00FE79  FE                 	db	254
   376  00FE7A  D7                 	db	215
   377  00FE7B  AB                 	db	171
   378  00FE7C  76                 	db	118
   379  00FE7D  CA                 	db	202
   380  00FE7E  82                 	db	130
   381  00FE7F  C9                 	db	201
   382  00FE80  7D                 	db	125
   383  00FE81  FA                 	db	250
   384  00FE82  59                 	db	89
   385  00FE83  47                 	db	71
   386  00FE84  F0                 	db	240
   387  00FE85  AD                 	db	173
   388  00FE86  D4                 	db	212
   389  00FE87  A2                 	db	162
   390  00FE88  AF                 	db	175
   391  00FE89  9C                 	db	156
   392  00FE8A  A4                 	db	164
   393  00FE8B  72                 	db	114
   394  00FE8C  C0                 	db	192
   395  00FE8D  B7                 	db	183
   396  00FE8E  FD                 	db	253
   397  00FE8F  93                 	db	147
   398  00FE90  26                 	db	38
   399  00FE91  36                 	db	54
   400  00FE92  3F                 	db	63
   401  00FE93  F7                 	db	247
   402  00FE94  CC                 	db	204
   403  00FE95  34                 	db	52
   404  00FE96  A5                 	db	165
   405  00FE97  E5                 	db	229
   406  00FE98  F1                 	db	241
   407  00FE99  71                 	db	113
   408  00FE9A  D8                 	db	216
   409  00FE9B  31                 	db	49
   410  00FE9C  15                 	db	21
   411  00FE9D  04                 	db	4
   412  00FE9E  C7                 	db	199
   413  00FE9F  23                 	db	35
   414  00FEA0  C3                 	db	195
   415  00FEA1  18                 	db	24
   416  00FEA2  96                 	db	150
   417  00FEA3  05                 	db	5
   418  00FEA4  9A                 	db	154
   419  00FEA5  07                 	db	7
   420  00FEA6  12                 	db	18
   421  00FEA7  80                 	db	128
   422  00FEA8  E2                 	db	226
   423  00FEA9  EB                 	db	235
   424  00FEAA  27                 	db	39
   425  00FEAB  B2                 	db	178
   426  00FEAC  75                 	db	117
   427  00FEAD  09                 	db	9
   428  00FEAE  83                 	db	131
   429  00FEAF  2C                 	db	44
   430  00FEB0  1A                 	db	26
   431  00FEB1  1B                 	db	27
   432  00FEB2  6E                 	db	110
   433  00FEB3  5A                 	db	90
   434  00FEB4  A0                 	db	160
   435  00FEB5  52                 	db	82
   436  00FEB6  3B                 	db	59
   437  00FEB7  D6                 	db	214
   438  00FEB8  B3                 	db	179
   439  00FEB9  29                 	db	41
   440  00FEBA  E3                 	db	227
   441  00FEBB  2F                 	db	47
   442  00FEBC  84                 	db	132
   443  00FEBD  53                 	db	83
   444  00FEBE  D1                 	db	209
   445  00FEBF  00                 	db	0
   446  00FEC0  ED                 	db	237
   447  00FEC1  20                 	db	32
   448  00FEC2  FC                 	db	252
   449  00FEC3  B1                 	db	177
   450  00FEC4  5B                 	db	91
   451  00FEC5  6A                 	db	106
   452  00FEC6  CB                 	db	203
   453  00FEC7  BE                 	db	190
   454  00FEC8  39                 	db	57
   455  00FEC9  4A                 	db	74
   456  00FECA  4C                 	db	76
   457  00FECB  58                 	db	88
   458  00FECC  CF                 	db	207
   459  00FECD  D0                 	db	208
   460  00FECE  EF                 	db	239
   461  00FECF  AA                 	db	170
   462  00FED0  FB                 	db	251
   463  00FED1  43                 	db	67
   464  00FED2  4D                 	db	77
   465  00FED3  33                 	db	51
   466  00FED4  85                 	db	133
   467  00FED5  45                 	db	69
   468  00FED6  F9                 	db	249
   469  00FED7  02                 	db	2
   470  00FED8  7F                 	db	127
   471  00FED9  50                 	db	80
   472  00FEDA  3C                 	db	60
   473  00FEDB  9F                 	db	159
   474  00FEDC  A8                 	db	168
   475  00FEDD  51                 	db	81
   476  00FEDE  A3                 	db	163
   477  00FEDF  40                 	db	64
   478  00FEE0  8F                 	db	143
   479  00FEE1  92                 	db	146
   480  00FEE2  9D                 	db	157
   481  00FEE3  38                 	db	56
   482  00FEE4  F5                 	db	245
   483  00FEE5  BC                 	db	188
   484  00FEE6  B6                 	db	182
   485  00FEE7  DA                 	db	218
   486  00FEE8  21                 	db	33
   487  00FEE9  10                 	db	16
   488  00FEEA  FF                 	db	255
   489  00FEEB  F3                 	db	243
   490  00FEEC  D2                 	db	210
   491  00FEED  CD                 	db	205
   492  00FEEE  0C                 	db	12
   493  00FEEF  13                 	db	19
   494  00FEF0  EC                 	db	236
   495  00FEF1  5F                 	db	95
   496  00FEF2  97                 	db	151
   497  00FEF3  44                 	db	68
   498  00FEF4  17                 	db	23
   499  00FEF5  C4                 	db	196
   500  00FEF6  A7                 	db	167
   501  00FEF7  7E                 	db	126
   502  00FEF8  3D                 	db	61
   503  00FEF9  64                 	db	100
   504  00FEFA  5D                 	db	93
   505  00FEFB  19                 	db	25
   506  00FEFC  73                 	db	115
   507  00FEFD  60                 	db	96
   508  00FEFE  81                 	db	129
   509  00FEFF  4F                 	db	79
   510  00FF00  DC                 	db	220
   511  00FF01  22                 	db	34
   512  00FF02  2A                 	db	42
   513  00FF03  90                 	db	144
   514  00FF04  88                 	db	136
   515  00FF05  46                 	db	70
   516  00FF06  EE                 	db	238
   517  00FF07  B8                 	db	184
   518  00FF08  14                 	db	20
   519  00FF09  DE                 	db	222
   520  00FF0A  5E                 	db	94
   521  00FF0B  0B                 	db	11
   522  00FF0C  DB                 	db	219
   523  00FF0D  E0                 	db	224
   524  00FF0E  32                 	db	50
   525  00FF0F  3A                 	db	58
   526  00FF10  0A                 	db	10
   527  00FF11  49                 	db	73
   528  00FF12  06                 	db	6
   529  00FF13  24                 	db	36
   530  00FF14  5C                 	db	92
   531  00FF15  C2                 	db	194
   532  00FF16  D3                 	db	211
   533  00FF17  AC                 	db	172
   534  00FF18  62                 	db	98
   535  00FF19  91                 	db	145
   536  00FF1A  95                 	db	149
   537  00FF1B  E4                 	db	228
   538  00FF1C  79                 	db	121
   539  00FF1D  E7                 	db	231
   540  00FF1E  C8                 	db	200
   541  00FF1F  37                 	db	55
   542  00FF20  6D                 	db	109
   543  00FF21  8D                 	db	141
   544  00FF22  D5                 	db	213
   545  00FF23  4E                 	db	78
   546  00FF24  A9                 	db	169
   547  00FF25  6C                 	db	108
   548  00FF26  56                 	db	86
   549  00FF27  F4                 	db	244
   550  00FF28  EA                 	db	234
   551  00FF29  65                 	db	101
   552  00FF2A  7A                 	db	122
   553  00FF2B  AE                 	db	174
   554  00FF2C  08                 	db	8
   555  00FF2D  BA                 	db	186
   556  00FF2E  78                 	db	120
   557  00FF2F  25                 	db	37
   558  00FF30  2E                 	db	46
   559  00FF31  1C                 	db	28
   560  00FF32  A6                 	db	166
   561  00FF33  B4                 	db	180
   562  00FF34  C6                 	db	198
   563  00FF35  E8                 	db	232
   564  00FF36  DD                 	db	221
   565  00FF37  74                 	db	116
   566  00FF38  1F                 	db	31
   567  00FF39  4B                 	db	75
   568  00FF3A  BD                 	db	189
   569  00FF3B  8B                 	db	139
   570  00FF3C  8A                 	db	138
   571  00FF3D  70                 	db	112
   572  00FF3E  3E                 	db	62
   573  00FF3F  B5                 	db	181
   574  00FF40  66                 	db	102
   575  00FF41  48                 	db	72
   576  00FF42  03                 	db	3
   577  00FF43  F6                 	db	246
   578  00FF44  0E                 	db	14
   579  00FF45  61                 	db	97
   580  00FF46  35                 	db	53
   581  00FF47  57                 	db	87
   582  00FF48  B9                 	db	185
   583  00FF49  86                 	db	134
   584  00FF4A  C1                 	db	193
   585  00FF4B  1D                 	db	29
   586  00FF4C  9E                 	db	158
   587  00FF4D  E1                 	db	225
   588  00FF4E  F8                 	db	248
   589  00FF4F  98                 	db	152
   590  00FF50  11                 	db	17
   591  00FF51  69                 	db	105
   592  00FF52  D9                 	db	217
   593  00FF53  8E                 	db	142
   594  00FF54  94                 	db	148
   595  00FF55  9B                 	db	155
   596  00FF56  1E                 	db	30
   597  00FF57  87                 	db	135
   598  00FF58  E9                 	db	233
   599  00FF59  CE                 	db	206
   600  00FF5A  55                 	db	85
   601  00FF5B  28                 	db	40
   602  00FF5C  DF                 	db	223
   603  00FF5D  8C                 	db	140
   604  00FF5E  A1                 	db	161
   605  00FF5F  89                 	db	137
   606  00FF60  0D                 	db	13
   607  00FF61  BF                 	db	191
   608  00FF62  E6                 	db	230
   609  00FF63  42                 	db	66
   610  00FF64  68                 	db	104
   611  00FF65  41                 	db	65
   612  00FF66  99                 	db	153
   613  00FF67  2D                 	db	45
   614  00FF68  0F                 	db	15
   615  00FF69  B0                 	db	176
   616  00FF6A  54                 	db	84
   617  00FF6B  BB                 	db	187
   618  00FF6C  16                 	db	22
   619  00FF6D                     __end_of_STable:
   620                           	opt stack 0
   621  00FF6D                     _maxPayloadSize:
   622                           	opt stack 0
   623  00FF6D  33                 	db	51
   624  00FF6E  33                 	db	51
   625  00FF6F  33                 	db	51
   626  00FF70  73                 	db	115
   627  00FF71  F2                 	db	242
   628  00FF72  F2                 	db	242
   629  00FF73  F2                 	db	242
   630  00FF74  38                 	db	56
   631  00FF75                     __end_of_maxPayloadSize:
   632                           	opt stack 0
   633  00FF75                     _modulation:
   634                           	opt stack 0
   635  00FF75  01                 	db	1
   636  00FF76  01                 	db	1
   637  00FF77  01                 	db	1
   638  00FF78  01                 	db	1
   639  00FF79  01                 	db	1
   640  00FF7A  01                 	db	1
   641  00FF7B  01                 	db	1
   642  00FF7C  00                 	db	0
   643  00FF7D                     __end_of_modulation:
   644                           	opt stack 0
   645  00FF7D                     _rxWindowOffset:
   646                           	opt stack 0
   647  00FF7D  DF                 	db	223
   648  00FF7E  CE                 	db	206
   649  00FF7F  C6                 	db	198
   650  00FF80  C2                 	db	194
   651  00FF81  BE                 	db	190
   652  00FF82  BC                 	db	188
   653  00FF83  F1                 	db	241
   654  00FF84  FE                 	db	254
   655  00FF85                     __end_of_rxWindowOffset:
   656                           	opt stack 0
   657  00FF85                     _rxWindowSize:
   658                           	opt stack 0
   659  00FF85  08                 	db	8
   660  00FF86  0A                 	db	10
   661  00FF87  0E                 	db	14
   662  00FF88  1A                 	db	26
   663  00FF89  31                 	db	49
   664  00FF8A  58                 	db	88
   665  00FF8B  3C                 	db	60
   666  00FF8C  08                 	db	8
   667  00FF8D                     __end_of_rxWindowSize:
   668                           	opt stack 0
   669  00FF8D                     _bandwidth:
   670                           	opt stack 0
   671  00FF8D  07                 	db	7
   672  00FF8E  07                 	db	7
   673  00FF8F  07                 	db	7
   674  00FF90  07                 	db	7
   675  00FF91  07                 	db	7
   676  00FF92  07                 	db	7
   677  00FF93  08                 	db	8
   678  00FF94                     __end_of_bandwidth:
   679                           	opt stack 0
   680  00FF94                     _macEndDevCmdReplyLen:
   681                           	opt stack 0
   682  00FF94  01                 	db	1
   683  00FF95  02                 	db	2
   684  00FF96  01                 	db	1
   685  00FF97  02                 	db	2
   686  00FF98  03                 	db	3
   687  00FF99  02                 	db	2
   688  00FF9A  01                 	db	1
   689  00FF9B                     __end_of_macEndDevCmdReplyLen:
   690                           	opt stack 0
   691  00FF9B                     _spreadingFactor:
   692                           	opt stack 0
   693  00FF9B  0C                 	db	12
   694  00FF9C  0B                 	db	11
   695  00FF9D  0A                 	db	10
   696  00FF9E  09                 	db	9
   697  00FF9F  08                 	db	8
   698  00FFA0  07                 	db	7
   699  00FFA1  07                 	db	7
   700  00FFA2                     __end_of_spreadingFactor:
   701                           	opt stack 0
   702  00FFA2                     _txPower868:
   703                           	opt stack 0
   704  00FFA2  14                 	db	20
   705  00FFA3  0E                 	db	14
   706  00FFA4  0B                 	db	11
   707  00FFA5  08                 	db	8
   708  00FFA6  05                 	db	5
   709  00FFA7  02                 	db	2
   710  00FFA8                     __end_of_txPower868:
   711                           	opt stack 0
   712  00FFA8                     _DefaultChannels433:
   713                           	opt stack 0
   714  00FFA8  B9D8               	dw	47576
   715  00FFAA  19D1               	dw	6609
   716  00FFAC  01                 	db	1
   717  00FFAD  50                 	db	80
   718  00FFAE  012E               	dw	302
   719  00FFB0  0000               	dw	0
   720  00FFB2  0000               	dw	0
   721  00FFB4  01                 	db	1
   722  00FFB5  FF                 	db	255
   723  00FFB6  C718               	dw	50968
   724  00FFB8  19D4               	dw	6612
   725  00FFBA  01                 	db	1
   726  00FFBB  50                 	db	80
   727  00FFBC  012E               	dw	302
   728  00FFBE  0000               	dw	0
   729  00FFC0  0000               	dw	0
   730  00FFC2  01                 	db	1
   731  00FFC3  FF                 	db	255
   732  00FFC4  D458               	dw	54360
   733  00FFC6  19D7               	dw	6615
   734  00FFC8  01                 	db	1
   735  00FFC9  50                 	db	80
   736  00FFCA  012E               	dw	302
   737  00FFCC  0000               	dw	0
   738  00FFCE  0000               	dw	0
   739  00FFD0  01                 	db	1
   740  00FFD1  FF                 	db	255
   741  00FFD2                     __end_of_DefaultChannels433:
   742                           	opt stack 0
   743  00FFD2                     _DefaultChannels868:
   744                           	opt stack 0
   745  00FFD2  27A0               	dw	10144
   746  00FFD4  33BE               	dw	13246
   747  00FFD6  01                 	db	1
   748  00FFD7  50                 	db	80
   749  00FFD8  012E               	dw	302
   750  00FFDA  0000               	dw	0
   751  00FFDC  0000               	dw	0
   752  00FFDE  01                 	db	1
   753  00FFDF  FF                 	db	255
   754  00FFE0  34E0               	dw	13536
   755  00FFE2  33C1               	dw	13249
   756  00FFE4  01                 	db	1
   757  00FFE5  50                 	db	80
   758  00FFE6  012E               	dw	302
   759  00FFE8  0000               	dw	0
   760  00FFEA  0000               	dw	0
   761  00FFEC  01                 	db	1
   762  00FFED  FF                 	db	255
   763  00FFEE  4220               	dw	16928
   764  00FFF0  33C4               	dw	13252
   765  00FFF2  01                 	db	1
   766  00FFF3  50                 	db	80
   767  00FFF4  012E               	dw	302
   768  00FFF6  0000               	dw	0
   769  00FFF8  0000               	dw	0
   770  00FFFA  01                 	db	1
   771  00FFFB  FF                 	db	255
   772  00FFFC                     __end_of_DefaultChannels868:
   773                           	opt stack 0
   774  00FFFC                     _FskSyncWordBuff:
   775                           	opt stack 0
   776  00FFFC  C1                 	db	193
   777  00FFFD  94                 	db	148
   778  00FFFE  C1                 	db	193
   779  00FFFF                     __end_of_FskSyncWordBuff:
   780                           	opt stack 0
   781  00FFFF  00                 	db	0	; dummy byte at the end
   782  0000                     
   783                           	psect	nvCOMRAM
   784  00005B                     __pnvCOMRAM:
   785                           	opt stack 0
   786  00005B                     _timer1ReloadVal:
   787                           	opt stack 0
   788  00005B                     	ds	2
   789  00005D                     _timer3ReloadVal:
   790                           	opt stack 0
   791  00005D                     	ds	2
   792                           
   793                           	psect	nvBANK1
   794  0001E4                     __pnvBANK1:
   795                           	opt stack 0
   796  0001E4                     _INT1_InterruptHandler:
   797                           	opt stack 0
   798  0001E4                     	ds	2
   799  0001E6                     _INT2_InterruptHandler:
   800                           	opt stack 0
   801  0001E6                     	ds	2
   802  0001E8                     _IOCB4_InterruptHandler:
   803                           	opt stack 0
   804  0001E8                     	ds	2
   805  0001EA                     _TMR1_InterruptHandler:
   806                           	opt stack 0
   807  0001EA                     	ds	2
   808  0001EC                     _TMR3_InterruptHandler:
   809                           	opt stack 0
   810  0001EC                     	ds	2
   811  0000                     _ANSELA	set	3896
   812  0000                     _ANSELB	set	3897
   813  0000                     _ANSELC	set	3898
   814  0000                     _ANSELCbits	set	3898
   815  0000                     _ANSELD	set	3899
   816  0000                     _ANSELDbits	set	3899
   817  0000                     _ANSELE	set	3900
   818  0000                     _ANSD0	set	31192
   819  0000                     _ANSD1	set	31193
   820  0000                     _ANSD3	set	31195
   821  0000                     _ANSD4	set	31196
   822  0000                     _CCP1MD	set	31216
   823  0000                     _CCP2MD	set	31217
   824  0000                     _CCP3MD	set	31218
   825  0000                     _CCP4MD	set	31219
   826  0000                     _CCP5MD	set	31220
   827  0000                     _CMP1MD	set	31209
   828  0000                     _CMP2MD	set	31210
   829  0000                     _CTMUMD	set	31211
   830  0000                     _MSSP1MD	set	31222
   831  0000                     _MSSP2MD	set	31223
   832  0000                     _TMR2MD	set	31225
   833  0000                     _TMR4MD	set	31227
   834  0000                     _TMR5MD	set	31228
   835  0000                     _TMR6MD	set	31229
   836  0000                     _UART1MD	set	31230
   837  0000                     _UART2MD	set	31231
   838  0000                     _TMR1	set	4046
   839  0000                     _TMR3	set	4018
   840  0000                     _ADCON0bits	set	4034
   841  0000                     _ADCON2bits	set	4032
   842  0000                     _ADRESH	set	4036
   843  0000                     _ADRESL	set	4035
   844  0000                     _INTCON2bits	set	4081
   845  0000                     _INTCON3bits	set	4080
   846  0000                     _INTCONbits	set	4082
   847  0000                     _IOCBbits	set	3938
   848  0000                     _LATA	set	3977
   849  0000                     _LATB	set	3978
   850  0000                     _LATBbits	set	3978
   851  0000                     _LATC	set	3979
   852  0000                     _LATCbits	set	3979
   853  0000                     _LATD	set	3980
   854  0000                     _LATDbits	set	3980
   855  0000                     _LATE	set	3981
   856  0000                     _LATEbits	set	3981
   857  0000                     _OSCCON	set	4051
   858  0000                     _OSCCON2	set	4050
   859  0000                     _OSCTUNE	set	3995
   860  0000                     _PIE1bits	set	3997
   861  0000                     _PIE2bits	set	4000
   862  0000                     _PIR1bits	set	3998
   863  0000                     _PIR2bits	set	4001
   864  0000                     _PORTBbits	set	3969
   865  0000                     _PORTCbits	set	3970
   866  0000                     _PORTDbits	set	3971
   867  0000                     _RCONbits	set	4048
   868  0000                     _SSP2ADD	set	3950
   869  0000                     _SSP2BUF	set	3951
   870  0000                     _SSP2CON1	set	3948
   871  0000                     _SSP2CON1bits	set	3948
   872  0000                     _SSP2STAT	set	3949
   873  0000                     _SSP2STATbits	set	3949
   874  0000                     _T1CON	set	4045
   875  0000                     _T1CONbits	set	4045
   876  0000                     _T1GCON	set	4044
   877  0000                     _T3CON	set	4017
   878  0000                     _T3CONbits	set	4017
   879  0000                     _T3GCON	set	4020
   880  0000                     _TMR1H	set	4047
   881  0000                     _TMR1L	set	4046
   882  0000                     _TMR3H	set	4019
   883  0000                     _TMR3L	set	4018
   884  0000                     _TRISA	set	3986
   885  0000                     _TRISB	set	3987
   886  0000                     _TRISBbits	set	3987
   887  0000                     _TRISC	set	3988
   888  0000                     _TRISCbits	set	3988
   889  0000                     _TRISD	set	3989
   890  0000                     _TRISDbits	set	3989
   891  0000                     _TRISE	set	3990
   892  0000                     _TRISEbits	set	3990
   893  0000                     _WPUB	set	3937
   894  0000                     _IDLEN	set	32415
   895  0000                     _LATC2	set	31834
   896  0000                     _LATD0	set	31840
   897  0000                     _LATD1	set	31841
   898  0000                     _LATD3	set	31843
   899  0000                     _LATD4	set	31844
   900  0000                     _TRISC2	set	31906
   901  0000                     _TRISD0	set	31912
   902  0000                     _TRISD1	set	31913
   903  0000                     _TRISD3	set	31915
   904  0000                     _TRISD4	set	31916
   905                           
   906                           ; #config settings
   907  0000                     
   908                           	psect	cinit
   909  0059BA                     __pcinit:
   910                           	opt stack 0
   911  0059BA                     start_initialization:
   912                           	opt stack 0
   913  0059BA                     __initialization:
   914                           	opt stack 0
   915                           
   916                           ; Initialize objects allocated to BANK1 (48 bytes)
   917                           ; load TBLPTR registers with __pidataBANK1
   918  0059BA  0EDE               	movlw	low __pidataBANK1
   919  0059BC  6EF6               	movwf	tblptrl,c
   920  0059BE  0E70               	movlw	high __pidataBANK1
   921  0059C0  6EF7               	movwf	tblptrh,c
   922  0059C2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   923  0059C4  6EF8               	movwf	tblptru,c
   924  0059C6  EE01  F0B4         	lfsr	0,__pdataBANK1
   925  0059CA  EE20 F030          	lfsr	2,48
   926  0059CE                     copy_data0:
   927  0059CE  0009               	tblrd		*+
   928  0059D0  CFF5 FFEE          	movff	tablat,postinc0
   929  0059D4  50DD               	movf	postdec2,w,c
   930  0059D6  50D9               	movf	fsr2l,w,c
   931  0059D8  E1FA               	bnz	copy_data0
   932                           
   933                           ; Initialize objects allocated to COMRAM (9 bytes)
   934                           ; load TBLPTR registers with __pidataCOMRAM
   935  0059DA  0EAC               	movlw	low __pidataCOMRAM
   936  0059DC  6EF6               	movwf	tblptrl,c
   937  0059DE  0E78               	movlw	high __pidataCOMRAM
   938  0059E0  6EF7               	movwf	tblptrh,c
   939  0059E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   940  0059E4  6EF8               	movwf	tblptru,c
   941  0059E6  EE00  F052         	lfsr	0,__pdataCOMRAM
   942  0059EA  EE20 F009          	lfsr	2,9
   943  0059EE                     copy_data1:
   944  0059EE  0009               	tblrd		*+
   945  0059F0  CFF5 FFEE          	movff	tablat,postinc0
   946  0059F4  50DD               	movf	postdec2,w,c
   947  0059F6  50D9               	movf	fsr2l,w,c
   948  0059F8  E1FA               	bnz	copy_data1
   949                           
   950                           ; Clear objects allocated to BIGRAM (542 bytes)
   951  0059FA  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   952  0059FE  EE22 F01E          	lfsr	2,542
   953  005A02                     clear_0:
   954  005A02  6AEE               	clrf	postinc0,c
   955  005A04  50DD               	movf	postdec2,w,c
   956  005A06  50D9               	movf	fsr2l,w,c
   957  005A08  E1FC               	bnz	clear_0
   958  005A0A  50DA               	movf	fsr2h,w,c
   959  005A0C  E1FA               	bnz	clear_0
   960                           
   961                           ; Clear objects allocated to BANK4 (224 bytes)
   962  005A0E  EE04  F000         	lfsr	0,__pbssBANK4
   963  005A12  0EE0               	movlw	224
   964  005A14                     clear_1:
   965  005A14  6AEE               	clrf	postinc0,c
   966  005A16  06E8               	decf	wreg,f,c
   967  005A18  E1FD               	bnz	clear_1
   968                           
   969                           ; Clear objects allocated to BANK3 (160 bytes)
   970  005A1A  EE03  F000         	lfsr	0,__pbssBANK3
   971  005A1E  0EA0               	movlw	160
   972  005A20                     clear_2:
   973  005A20  6AEE               	clrf	postinc0,c
   974  005A22  06E8               	decf	wreg,f,c
   975  005A24  E1FD               	bnz	clear_2
   976                           
   977                           ; Clear objects allocated to BANK2 (245 bytes)
   978  005A26  EE02  F000         	lfsr	0,__pbssBANK2
   979  005A2A  0EF5               	movlw	245
   980  005A2C                     clear_3:
   981  005A2C  6AEE               	clrf	postinc0,c
   982  005A2E  06E8               	decf	wreg,f,c
   983  005A30  E1FD               	bnz	clear_3
   984                           
   985                           ; Clear objects allocated to BANK1 (75 bytes)
   986  005A32  EE01  F069         	lfsr	0,__pbssBANK1
   987  005A36  0E4B               	movlw	75
   988  005A38                     clear_4:
   989  005A38  6AEE               	clrf	postinc0,c
   990  005A3A  06E8               	decf	wreg,f,c
   991  005A3C  E1FD               	bnz	clear_4
   992                           
   993                           ; Clear objects allocated to BANK0 (11 bytes)
   994  005A3E  EE00  F0E8         	lfsr	0,__pbssBANK0
   995  005A42  0E0B               	movlw	11
   996  005A44                     clear_5:
   997  005A44  6AEE               	clrf	postinc0,c
   998  005A46  06E8               	decf	wreg,f,c
   999  005A48  E1FD               	bnz	clear_5
  1000                           
  1001                           ; Clear objects allocated to COMRAM (20 bytes)
  1002  005A4A  EE00  F032         	lfsr	0,__pbssCOMRAM
  1003  005A4E  0E14               	movlw	20
  1004  005A50                     clear_6:
  1005  005A50  6AEE               	clrf	postinc0,c
  1006  005A52  06E8               	decf	wreg,f,c
  1007  005A54  E1FD               	bnz	clear_6
  1008  005A56                     end_of_initialization:
  1009                           	opt stack 0
  1010  005A56                     __end_of__initialization:
  1011                           	opt stack 0
  1012  005A56  0100               	movlb	0
  1013  005A58  EF7D  F02D         	goto	_main	;jump to C main() function
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec2	equ	0xFDD
  1021                           fsr2h	equ	0xFDA
  1022                           fsr2l	equ	0xFD9
  1023                           
  1024                           	psect	bssCOMRAM
  1025  000032                     __pbssCOMRAM:
  1026                           	opt stack 0
  1027  000032                     TMR_GetDeltaTime@retVal:
  1028                           	opt stack 0
  1029  000032                     	ds	4
  1030  000036                     _ticksAccounted:
  1031                           	opt stack 0
  1032  000036                     	ds	4
  1033  00003A                     _ticksAdded:
  1034                           	opt stack 0
  1035  00003A                     	ds	4
  1036  00003E                     TMR_GetDeltaTime@tmrVal:
  1037                           	opt stack 0
  1038  00003E                     	ds	2
  1039  000040                     TMR_SwapTimer@oldVal:
  1040                           	opt stack 0
  1041  000040                     	ds	2
  1042  000042                     TMR_SwapTimer@retVal:
  1043                           	opt stack 0
  1044  000042                     	ds	2
  1045  000044                     __roundCounter:
  1046                           	opt stack 0
  1047  000044                     	ds	1
  1048  000045                     handle16sInterrupt@counterSleepTimeout:
  1049                           	opt stack 0
  1050  000045                     	ds	1
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           postdec2	equ	0xFDD
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           
  1061                           	psect	dataCOMRAM
  1062  000052                     __pdataCOMRAM:
  1063                           	opt stack 0
  1064  000052                     _randx:
  1065                           	opt stack 0
  1066  000052                     	ds	4
  1067  000056                     _ticksToScheduledInterrupt:
  1068                           	opt stack 0
  1069  000056                     	ds	4
  1070  00005A                     _ONE_HOUR_TIMEOUT_COUNTS:
  1071                           	opt stack 0
  1072  00005A                     	ds	1
  1073                           tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec2	equ	0xFDD
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           
  1083                           	psect	bssBANK0
  1084  0000E8                     __pbssBANK0:
  1085                           	opt stack 0
  1086  0000E8                     _rxPayload:
  1087                           	opt stack 0
  1088  0000E8                     	ds	4
  1089  0000EC                     _reloadVal:
  1090                           	opt stack 0
  1091  0000EC                     	ds	2
  1092  0000EE                     __rcon:
  1093                           	opt stack 0
  1094  0000EE                     	ds	1
  1095  0000EF                     _allocatedTimers:
  1096                           	opt stack 0
  1097  0000EF                     	ds	1
  1098  0000F0                     _dioStatus:
  1099                           	opt stack 0
  1100  0000F0                     	ds	1
  1101  0000F1                     _localDioStatus:
  1102                           	opt stack 0
  1103  0000F1                     	ds	1
  1104  0000F2                     _timerOverflow:
  1105                           	opt stack 0
  1106  0000F2                     	ds	1
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           postinc0	equ	0xFEE
  1112                           wreg	equ	0xFE8
  1113                           postdec2	equ	0xFDD
  1114                           fsr2h	equ	0xFDA
  1115                           fsr2l	equ	0xFD9
  1116                           
  1117                           	psect	bssBANK1
  1118  000169                     __pbssBANK1:
  1119                           	opt stack 0
  1120  000169                     _TimeToSend:
  1121                           	opt stack 0
  1122  000169                     	ds	1
  1123  00016A                     _RadioConfiguration:
  1124                           	opt stack 0
  1125  00016A                     	ds	54
  1126  0001A0                     _aesBuffer:
  1127                           	opt stack 0
  1128  0001A0                     	ds	16
  1129  0001B0                     _payload:
  1130                           	opt stack 0
  1131  0001B0                     	ds	4
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec2	equ	0xFDD
  1139                           fsr2h	equ	0xFDA
  1140                           fsr2l	equ	0xFD9
  1141                           
  1142                           	psect	dataBANK1
  1143  0001B4                     __pdataBANK1:
  1144                           	opt stack 0
  1145  0001B4                     GenerateSubkey@F7870:
  1146                           	opt stack 0
  1147  0001B4                     	ds	16
  1148  0001C4                     _appSKey:
  1149                           	opt stack 0
  1150  0001C4                     	ds	16
  1151  0001D4                     _nwkSKey:
  1152                           	opt stack 0
  1153  0001D4                     	ds	16
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           postdec2	equ	0xFDD
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           
  1164                           	psect	bssBANK2
  1165  000200                     __pbssBANK2:
  1166                           	opt stack 0
  1167  000200                     _loRa:
  1168                           	opt stack 0
  1169  000200                     	ds	245
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec2	equ	0xFDD
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           
  1180                           	psect	bssBANK3
  1181  000300                     __pbssBANK3:
  1182                           	opt stack 0
  1183  000300                     _swTimers:
  1184                           	opt stack 0
  1185  000300                     	ds	160
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec2	equ	0xFDD
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           
  1196                           	psect	bssBANK4
  1197  000400                     __pbssBANK4:
  1198                           	opt stack 0
  1199  000400                     _Channels:
  1200                           	opt stack 0
  1201  000400                     	ds	224
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec2	equ	0xFDD
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           
  1212                           	psect	bssBIGRAM
  1213  0004E0                     __pbssBIGRAM:
  1214                           	opt stack 0
  1215  0004E0                     _macBuffer:
  1216                           	opt stack 0
  1217  0004E0                     	ds	271
  1218  0005EF                     _radioBuffer:
  1219                           	opt stack 0
  1220  0005EF                     	ds	271
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec2	equ	0xFDD
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           
  1231                           	psect	cstackBANK3
  1232  0003A0                     __pcstackBANK3:
  1233                           	opt stack 0
  1234  0003A0                     LORAWAN_RxDone@fPort:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x0
  1238  0003A0                     	ds	1
  1239  0003A1                     LORAWAN_RxDone@channelIndex:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x1
  1243  0003A1                     	ds	1
  1244  0003A2                     LORAWAN_RxDone@mhdr:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x2
  1248  0003A2                     	ds	1
  1249  0003A3                     LORAWAN_RxDone@extractedMic:
  1250                           	opt stack 0
  1251                           
  1252                           ; 4 bytes @ 0x3
  1253  0003A3                     	ds	4
  1254  0003A7                     LORAWAN_RxDone@bufferIndex:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x7
  1258  0003A7                     	ds	1
  1259  0003A8                     LORAWAN_RxDone@temp:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x8
  1263  0003A8                     	ds	1
  1264  0003A9                     LORAWAN_RxDone@packet:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x9
  1268  0003A9                     	ds	2
  1269  0003AB                     LORAWAN_RxDone@computedMic:
  1270                           	opt stack 0
  1271                           
  1272                           ; 4 bytes @ 0xB
  1273  0003AB                     	ds	4
  1274  0003AF                     LORAWAN_RxDone@joinAccept:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0xF
  1278  0003AF                     	ds	2
  1279  0003B1                     LORAWAN_RxDone@frmPayloadLength:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x11
  1283  0003B1                     	ds	1
  1284  0003B2                     LORAWAN_RxDone@hdr:
  1285                           	opt stack 0
  1286                           
  1287                           ; 2 bytes @ 0x12
  1288  0003B2                     	ds	2
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           postinc0	equ	0xFEE
  1294                           wreg	equ	0xFE8
  1295                           postdec2	equ	0xFDD
  1296                           fsr2h	equ	0xFDA
  1297                           fsr2l	equ	0xFD9
  1298                           
  1299                           	psect	cstackBANK1
  1300  000100                     __pcstackBANK1:
  1301                           	opt stack 0
  1302  000100                     AESCmac@k2:
  1303                           	opt stack 0
  1304                           
  1305                           ; 16 bytes @ 0x0
  1306  000100                     	ds	16
  1307  000110                     AESCmac@k1:
  1308                           	opt stack 0
  1309                           
  1310                           ; 16 bytes @ 0x10
  1311  000110                     	ds	16
  1312  000120                     AESCmac@mLast:
  1313                           	opt stack 0
  1314                           
  1315                           ; 16 bytes @ 0x20
  1316  000120                     	ds	16
  1317  000130                     AESCmac@padded:
  1318                           	opt stack 0
  1319                           
  1320                           ; 16 bytes @ 0x30
  1321  000130                     	ds	16
  1322  000140                     AESCmac@y:
  1323                           	opt stack 0
  1324                           
  1325                           ; 16 bytes @ 0x40
  1326  000140                     	ds	16
  1327  000150                     AESCmac@x:
  1328                           	opt stack 0
  1329                           
  1330                           ; 16 bytes @ 0x50
  1331  000150                     	ds	16
  1332  000160                     AESCmac@ptr:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x60
  1336  000160                     	ds	2
  1337  000162                     AESCmac@flag:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x62
  1341  000162                     	ds	1
  1342  000163                     AESCmac@n:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x63
  1346  000163                     	ds	1
  1347  000164                     AESCmac@j:
  1348                           	opt stack 0
  1349                           
  1350                           ; 1 bytes @ 0x64
  1351  000164                     	ds	1
  1352  000165                     AESCmac@i:
  1353                           	opt stack 0
  1354                           
  1355                           ; 1 bytes @ 0x65
  1356  000165                     	ds	1
  1357  000166                     LORAWAN_RxDone@buffer:
  1358                           	opt stack 0
  1359                           
  1360                           ; 2 bytes @ 0x66
  1361  000166                     	ds	2
  1362  000168                     LORAWAN_RxDone@bufferLength:
  1363                           	opt stack 0
  1364                           
  1365                           ; 1 bytes @ 0x68
  1366  000168                     	ds	1
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           postdec2	equ	0xFDD
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           
  1377                           	psect	cstackBANK0
  1378  000060                     __pcstackBANK0:
  1379                           	opt stack 0
  1380  000060                     	ds	4
  1381  000064                     ??_UpdateMinMaxChDataRate:
  1382  000064                     ??_FindSmallestDataRate:
  1383  000064                     ??_UpdateReceiveDelays:
  1384  000064                     ??_CountfOptsLength:
  1385  000064                     ??_ADC_SelChannel:
  1386  000064                     ?_TMR1_ReadTimer:
  1387                           	opt stack 0
  1388  000064                     ?_ExecuteLinkCheck:
  1389                           	opt stack 0
  1390  000064                     ?_ExecuteDutyCycle:
  1391                           	opt stack 0
  1392  000064                     ?_ExecuteDevStatus:
  1393                           	opt stack 0
  1394  000064                     ?_GetRx1Freq:
  1395                           	opt stack 0
  1396  000064                     ?___lmul:
  1397                           	opt stack 0
  1398  000064                     ?___lldiv:
  1399                           	opt stack 0
  1400  000064                     ?___llmod:
  1401                           	opt stack 0
  1402  000064                     SwTimerCreate@retVal:
  1403                           	opt stack 0
  1404  000064                     SwTimerIsRunning@timerId:
  1405                           	opt stack 0
  1406  000064                     SwTimerStop@timerId:
  1407                           	opt stack 0
  1408  000064                     SPI2_Exchange8bit@data:
  1409                           	opt stack 0
  1410  000064                     HALResetPinOutputValue@value:
  1411                           	opt stack 0
  1412  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1413                           	opt stack 0
  1414  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1415                           	opt stack 0
  1416  000064                     RADIO_SetOutputPower@power:
  1417                           	opt stack 0
  1418  000064                     RADIO_SetCRC@crc:
  1419                           	opt stack 0
  1420  000064                     RADIO_SetIQInverted@iqInverted:
  1421                           	opt stack 0
  1422  000064                     RADIO_SetBandwidth@bandwidth:
  1423                           	opt stack 0
  1424  000064                     RADIO_SetModulation@modulation:
  1425                           	opt stack 0
  1426  000064                     ValidateDataRate@dataRate:
  1427                           	opt stack 0
  1428  000064                     ValidateTxPower@result:
  1429                           	opt stack 0
  1430  000064                     UpdateDLSettings@dlRx1DrOffset:
  1431                           	opt stack 0
  1432  000064                     UpdateDataRange@dataRangeNew:
  1433                           	opt stack 0
  1434  000064                     UpdateChannelIdStatus@statusNew:
  1435                           	opt stack 0
  1436  000064                     ValidateRxOffset@rxOffset:
  1437                           	opt stack 0
  1438  000064                     ValidateChannelId@allowedForDefaultChannels:
  1439                           	opt stack 0
  1440  000064                     ValidateChannelMaskCntl@result:
  1441                           	opt stack 0
  1442  000064                     UpdateCurrentDataRate@valueNew:
  1443                           	opt stack 0
  1444  000064                     UpdateTxPower@txPowerNew:
  1445                           	opt stack 0
  1446  000064                     UpdateJoinInProgress@state:
  1447                           	opt stack 0
  1448  000064                     INTERRUPT_GetDioStatus@a:
  1449                           	opt stack 0
  1450  000064                     EncKeySchedule@key:
  1451                           	opt stack 0
  1452  000064                     ___abdiv@divisor:
  1453                           	opt stack 0
  1454  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1455                           	opt stack 0
  1456  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1457                           	opt stack 0
  1458  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1459                           	opt stack 0
  1460  000064                     SwTimerSetCallback@callback:
  1461                           	opt stack 0
  1462  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1463                           	opt stack 0
  1464  000064                     ExecuteDutyCycle@ptr:
  1465                           	opt stack 0
  1466  000064                     ExecuteDevStatus@ptr:
  1467                           	opt stack 0
  1468  000064                     UpdateDutyCycle@dutyCycleNew:
  1469                           	opt stack 0
  1470  000064                     ValidateChannelMask@channelMask:
  1471                           	opt stack 0
  1472  000064                     TMR1_WriteTimer@timerVal:
  1473                           	opt stack 0
  1474  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1475                           	opt stack 0
  1476  000064                     TMR3_SetInterruptHandler@InterruptHandler:
  1477                           	opt stack 0
  1478  000064                     FillSubKey@source:
  1479                           	opt stack 0
  1480  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1481                           	opt stack 0
  1482  000064                     ExecuteLinkCheck@ptr:
  1483                           	opt stack 0
  1484  000064                     IncludeMacCommandsResponse@macBuffer:
  1485                           	opt stack 0
  1486  000064                     CheckFlags@hdr:
  1487                           	opt stack 0
  1488  000064                     CheckMcastFlags@hdr:
  1489                           	opt stack 0
  1490  000064                     EncodeShiftRow@stateTable:
  1491                           	opt stack 0
  1492  000064                     memcpy@d1:
  1493                           	opt stack 0
  1494  000064                     memset@p1:
  1495                           	opt stack 0
  1496  000064                     SystemBlockingWaitMs@ms:
  1497                           	opt stack 0
  1498  000064                     RADIO_SetChannelFrequency@frequency:
  1499                           	opt stack 0
  1500  000064                     ValidateFrequency@frequencyNew:
  1501                           	opt stack 0
  1502  000064                     UpdateFrequency@frequencyNew:
  1503                           	opt stack 0
  1504  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1505                           	opt stack 0
  1506  000064                     UpdateReceiveWindow2Parameters@frequency:
  1507                           	opt stack 0
  1508  000064                     ___lmul@multiplier:
  1509                           	opt stack 0
  1510  000064                     ___lldiv@dividend:
  1511                           	opt stack 0
  1512  000064                     ___llmod@dividend:
  1513                           	opt stack 0
  1514                           
  1515                           ; 4 bytes @ 0x4
  1516  000064                     	ds	1
  1517  000065                     ??_UpdateDataRange:
  1518  000065                     ??_UpdateChannelIdStatus:
  1519  000065                     ??_EncKeySchedule:
  1520  000065                     SwTimerIsRunning@isRunning:
  1521                           	opt stack 0
  1522  000065                     HALSPISend@data:
  1523                           	opt stack 0
  1524  000065                     ValidateDataRate@result:
  1525                           	opt stack 0
  1526  000065                     ValidateTxPower@txPowerNew:
  1527                           	opt stack 0
  1528  000065                     UpdateDLSettings@dlRx2Dr:
  1529                           	opt stack 0
  1530  000065                     ValidateRxOffset@result:
  1531                           	opt stack 0
  1532  000065                     ValidateChannelId@result:
  1533                           	opt stack 0
  1534  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1535                           	opt stack 0
  1536  000065                     UpdateMinMaxChDataRate@i:
  1537                           	opt stack 0
  1538  000065                     FindSmallestDataRate@found:
  1539                           	opt stack 0
  1540  000065                     ADC_SelChannel@c:
  1541                           	opt stack 0
  1542  000065                     ___abdiv@counter:
  1543                           	opt stack 0
  1544                           
  1545                           ; 1 bytes @ 0x5
  1546  000065                     	ds	1
  1547  000066                     ??_TMR1_ReadTimer:
  1548  000066                     ??_ExecuteDutyCycle:
  1549  000066                     ?_ADC_Read:
  1550                           	opt stack 0
  1551  000066                     SwTimerSetCallback@callbackParameter:
  1552                           	opt stack 0
  1553  000066                     RADIO_RegisterWrite@value:
  1554                           	opt stack 0
  1555  000066                     RADIO_RegisterRead@reg:
  1556                           	opt stack 0
  1557  000066                     UpdateDataRange@channelId:
  1558                           	opt stack 0
  1559  000066                     UpdateChannelIdStatus@channelId:
  1560                           	opt stack 0
  1561  000066                     ValidateDataRange@result:
  1562                           	opt stack 0
  1563  000066                     ValidateChannelId@channelId:
  1564                           	opt stack 0
  1565  000066                     UpdateDutyCycle@channelId:
  1566                           	opt stack 0
  1567  000066                     ValidateChannelMask@i:
  1568                           	opt stack 0
  1569  000066                     LORAWAN_SetCurrentDataRate@valueNew:
  1570                           	opt stack 0
  1571  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1572                           	opt stack 0
  1573  000066                     FindSmallestDataRate@i:
  1574                           	opt stack 0
  1575  000066                     EncodeShiftRow@temp:
  1576                           	opt stack 0
  1577  000066                     ___abdiv@sign:
  1578                           	opt stack 0
  1579  000066                     FillSubKey@key:
  1580                           	opt stack 0
  1581  000066                     memcpy@s1:
  1582                           	opt stack 0
  1583  000066                     memset@c:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x6
  1587  000066                     	ds	1
  1588  000067                     SwTimerSetCallback@timerId:
  1589                           	opt stack 0
  1590  000067                     RADIO_RegisterWrite@reg:
  1591                           	opt stack 0
  1592  000067                     RADIO_RegisterRead@readValue:
  1593                           	opt stack 0
  1594  000067                     UpdateDataRange@i:
  1595                           	opt stack 0
  1596  000067                     UpdateChannelIdStatus@i:
  1597                           	opt stack 0
  1598  000067                     ValidateDataRange@dataRangeNew:
  1599                           	opt stack 0
  1600  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  1601                           	opt stack 0
  1602  000067                     FindSmallestDataRate@dataRate:
  1603                           	opt stack 0
  1604  000067                     ___abdiv@quotient:
  1605                           	opt stack 0
  1606  000067                     RxDataDone@pData:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0x7
  1610  000067                     	ds	1
  1611  000068                     ??_IncludeMacCommandsResponse:
  1612  000068                     ??_ADC_Read:
  1613  000068                     ??_SystemBlockingWaitMs:
  1614  000068                     RADIO_WritePower@ocp:
  1615                           	opt stack 0
  1616  000068                     RADIO_UnhandledInterrupt@modulation:
  1617                           	opt stack 0
  1618  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1619                           	opt stack 0
  1620  000068                     ValidateFrequency@result:
  1621                           	opt stack 0
  1622  000068                     ValidateDataRange@dataRateMax:
  1623                           	opt stack 0
  1624  000068                     UpdateFrequency@channelId:
  1625                           	opt stack 0
  1626  000068                     FillSubKey@size:
  1627                           	opt stack 0
  1628  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1629                           	opt stack 0
  1630  000068                     UpdateReceiveDelays@delay:
  1631                           	opt stack 0
  1632  000068                     ___abdiv@dividend:
  1633                           	opt stack 0
  1634  000068                     EnableChannels1@channelMask:
  1635                           	opt stack 0
  1636  000068                     TMR1_ReadTimer@readVal:
  1637                           	opt stack 0
  1638  000068                     _EncKeySchedule$4148:
  1639                           	opt stack 0
  1640  000068                     memcpy@n:
  1641                           	opt stack 0
  1642  000068                     memset@n:
  1643                           	opt stack 0
  1644  000068                     ___lmul@multiplicand:
  1645                           	opt stack 0
  1646  000068                     ___lldiv@divisor:
  1647                           	opt stack 0
  1648  000068                     ___llmod@divisor:
  1649                           	opt stack 0
  1650                           
  1651                           ; 4 bytes @ 0x8
  1652  000068                     	ds	1
  1653  000069                     ??_FillSubKey:
  1654  000069                     ??_RADIO_DIO3:
  1655  000069                     ??_RADIO_DIO4:
  1656  000069                     ??_RADIO_DIO5:
  1657  000069                     ?_ExecuteRxTimingSetup:
  1658                           	opt stack 0
  1659  000069                     RADIO_WriteMode@newModulation:
  1660                           	opt stack 0
  1661  000069                     RADIO_WritePower@paDac:
  1662                           	opt stack 0
  1663  000069                     ExecuteDutyCycle@maxDCycle:
  1664                           	opt stack 0
  1665  000069                     ValidateDataRange@dataRateMin:
  1666                           	opt stack 0
  1667  000069                     RxDataDone@dataLength:
  1668                           	opt stack 0
  1669  000069                     ExecuteRxTimingSetup@ptr:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x9
  1673  000069                     	ds	1
  1674  00006A                     RADIO_WriteMode@blocking:
  1675                           	opt stack 0
  1676  00006A                     RADIO_WritePower@power:
  1677                           	opt stack 0
  1678  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1679                           	opt stack 0
  1680  00006A                     EnableChannels1@channelMaskCntl:
  1681                           	opt stack 0
  1682  00006A                     TMR1_ReadTimer@readValHigh:
  1683                           	opt stack 0
  1684  00006A                     FillSubKey@carry:
  1685                           	opt stack 0
  1686  00006A                     CountfOptsLength@macCommandLength:
  1687                           	opt stack 0
  1688  00006A                     RxDataDone@status:
  1689                           	opt stack 0
  1690  00006A                     ADC_Read@channel:
  1691                           	opt stack 0
  1692  00006A                     AESEncode@block:
  1693                           	opt stack 0
  1694  00006A                     memcpy@d:
  1695                           	opt stack 0
  1696  00006A                     memset@p:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0xA
  1700  00006A                     	ds	1
  1701  00006B                     ??_RxDataDone:
  1702  00006B                     RADIO_WriteMode@currentModulation:
  1703                           	opt stack 0
  1704  00006B                     EnableChannels1@channelIndexMin:
  1705                           	opt stack 0
  1706  00006B                     TMR1_ReadTimer@readValLow:
  1707                           	opt stack 0
  1708  00006B                     FillSubKey@i:
  1709                           	opt stack 0
  1710  00006B                     ExecuteRxTimingSetup@delay:
  1711                           	opt stack 0
  1712  00006B                     CountfOptsLength@i:
  1713                           	opt stack 0
  1714  00006B                     ADC_Read@result:
  1715                           	opt stack 0
  1716                           
  1717                           ; 2 bytes @ 0xB
  1718  00006B                     	ds	1
  1719  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1720  00006C                     ?_TMR_SwapTimer:
  1721                           	opt stack 0
  1722  00006C                     ?_TMR_GetDeltaTime:
  1723                           	opt stack 0
  1724  00006C                     RADIO_WriteMode@dioMapping:
  1725                           	opt stack 0
  1726  00006C                     EnableChannels1@channelIndexMax:
  1727                           	opt stack 0
  1728  00006C                     AESEncode@key:
  1729                           	opt stack 0
  1730  00006C                     ___llmod@counter:
  1731                           	opt stack 0
  1732  00006C                     TMR_SwapTimer@timerVal:
  1733                           	opt stack 0
  1734  00006C                     memcpy@s:
  1735                           	opt stack 0
  1736  00006C                     ___lmul@product:
  1737                           	opt stack 0
  1738  00006C                     ___lldiv@quotient:
  1739                           	opt stack 0
  1740                           
  1741                           ; 4 bytes @ 0xC
  1742  00006C                     	ds	1
  1743  00006D                     ??_AESEncode:
  1744  00006D                     RADIO_WriteMode@currentMode:
  1745                           	opt stack 0
  1746  00006D                     EnableChannels1@i:
  1747                           	opt stack 0
  1748  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1749                           	opt stack 0
  1750                           
  1751                           ; 1 bytes @ 0xD
  1752  00006D                     	ds	1
  1753  00006E                     ?_ExtractMic:
  1754                           	opt stack 0
  1755  00006E                     RADIO_WriteMode@newMode:
  1756                           	opt stack 0
  1757  00006E                     InitDefault868Channels@i:
  1758                           	opt stack 0
  1759  00006E                     InitDefault433Channels@i:
  1760                           	opt stack 0
  1761  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1762                           	opt stack 0
  1763  00006E                     IncludeMacCommandsResponse@i:
  1764                           	opt stack 0
  1765  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1766                           	opt stack 0
  1767  00006E                     EnableChannels@channelMask:
  1768                           	opt stack 0
  1769  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1770                           	opt stack 0
  1771  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1772                           	opt stack 0
  1773  00006E                     PrepareSessionKeys@sessionKey:
  1774                           	opt stack 0
  1775  00006E                     ExtractMic@buffer:
  1776                           	opt stack 0
  1777  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1778                           	opt stack 0
  1779  00006E                     AssembleEncryptionBlock@frameCounter:
  1780                           	opt stack 0
  1781                           
  1782                           ; 4 bytes @ 0xE
  1783  00006E                     	ds	1
  1784  00006F                     RADIO_WriteMode@opMode:
  1785                           	opt stack 0
  1786  00006F                     IncludeMacCommandsResponse@bufferIndex:
  1787                           	opt stack 0
  1788                           
  1789                           ; 1 bytes @ 0xF
  1790  00006F                     	ds	1
  1791  000070                     ??_TMR_GetDeltaTime:
  1792  000070                     ?_rand:
  1793                           	opt stack 0
  1794  000070                     ?_RADIO_ReadRandom:
  1795                           	opt stack 0
  1796  000070                     ?_ExecuteNewChannel:
  1797                           	opt stack 0
  1798  000070                     ?_ExecuteRxParamSetupReq:
  1799                           	opt stack 0
  1800  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1801                           	opt stack 0
  1802  000070                     EnableChannels@channelMaskCntl:
  1803                           	opt stack 0
  1804  000070                     ExtractMic@bufferLength:
  1805                           	opt stack 0
  1806  000070                     ___lldiv@counter:
  1807                           	opt stack 0
  1808  000070                     ExecuteNewChannel@ptr:
  1809                           	opt stack 0
  1810  000070                     ExecuteRxParamSetupReq@ptr:
  1811                           	opt stack 0
  1812  000070                     UpdateCfList@joinAccept:
  1813                           	opt stack 0
  1814  000070                     PrepareSessionKeys@appNonce:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x10
  1818  000070                     	ds	1
  1819  000071                     ?_ExecuteLinkAdr:
  1820                           	opt stack 0
  1821  000071                     ExecuteLinkAdr@ptr:
  1822                           	opt stack 0
  1823  000071                     SwTimerSetTimeout@timeout:
  1824                           	opt stack 0
  1825  000071                     RADIO_WriteFrequency@frequency:
  1826                           	opt stack 0
  1827  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1828                           	opt stack 0
  1829  000071                     RADIO_WriteFSKBitRate@bitRate:
  1830                           	opt stack 0
  1831  000071                     ConfigureRadio@freq:
  1832                           	opt stack 0
  1833                           
  1834                           ; 4 bytes @ 0x11
  1835  000071                     	ds	1
  1836  000072                     ??_ExtractMic:
  1837  000072                     ??_TMR_OverrideRemaining:
  1838  000072                     ??_UpdateCfList:
  1839  000072                     ?___lwmod:
  1840                           	opt stack 0
  1841  000072                     ExecuteNewChannel@drRange:
  1842                           	opt stack 0
  1843  000072                     AssembleEncryptionBlock@blockId:
  1844                           	opt stack 0
  1845  000072                     RADIO_ReadRandom@retVal:
  1846                           	opt stack 0
  1847  000072                     PrepareSessionKeys@networkId:
  1848                           	opt stack 0
  1849  000072                     ___lwmod@dividend:
  1850                           	opt stack 0
  1851  000072                     ExecuteRxParamSetupReq@frequency:
  1852                           	opt stack 0
  1853                           
  1854                           ; 4 bytes @ 0x12
  1855  000072                     	ds	1
  1856  000073                     ??_ExecuteLinkAdr:
  1857  000073                     AssembleEncryptionBlock@firstByte:
  1858                           	opt stack 0
  1859  000073                     ExecuteNewChannel@frequency:
  1860                           	opt stack 0
  1861                           
  1862                           ; 4 bytes @ 0x13
  1863  000073                     	ds	1
  1864  000074                     RADIO_ReadRandom@i:
  1865                           	opt stack 0
  1866  000074                     UpdateCfList@bufferLength:
  1867                           	opt stack 0
  1868  000074                     PrepareSessionKeys@index:
  1869                           	opt stack 0
  1870  000074                     AssembleEncryptionBlock@multicastStatus:
  1871                           	opt stack 0
  1872  000074                     TMR_OverrideRemaining@tmrVal:
  1873                           	opt stack 0
  1874  000074                     ExecuteLinkAdr@channelMask:
  1875                           	opt stack 0
  1876  000074                     ___lwmod@divisor:
  1877                           	opt stack 0
  1878  000074                     ExtractMic@mic:
  1879                           	opt stack 0
  1880                           
  1881                           ; 4 bytes @ 0x14
  1882  000074                     	ds	1
  1883  000075                     ??_SwTimerSetTimeout:
  1884  000075                     ConfigureRadio@dataRate:
  1885                           	opt stack 0
  1886  000075                     AssembleEncryptionBlock@dir:
  1887                           	opt stack 0
  1888  000075                     _AESEncode$4143:
  1889                           	opt stack 0
  1890  000075                     srand@x:
  1891                           	opt stack 0
  1892  000075                     RADIO_WriteFrequency@num_mod:
  1893                           	opt stack 0
  1894  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1895                           	opt stack 0
  1896  000075                     RADIO_WriteFSKBitRate@num:
  1897                           	opt stack 0
  1898  000075                     UpdateCfList@frequency:
  1899                           	opt stack 0
  1900                           
  1901                           ; 4 bytes @ 0x15
  1902  000075                     	ds	1
  1903  000076                     ExecuteLinkAdr@txPower:
  1904                           	opt stack 0
  1905  000076                     ExecuteRxParamSetupReq@dlSettings:
  1906                           	opt stack 0
  1907  000076                     AssembleEncryptionBlock@bufferIndex:
  1908                           	opt stack 0
  1909  000076                     ___lwmod@counter:
  1910                           	opt stack 0
  1911  000076                     TMR_OverrideRemaining@oldReloadVal:
  1912                           	opt stack 0
  1913  000076                     ConfigureRadioTx@freq:
  1914                           	opt stack 0
  1915  000076                     ConfigureRadioRx@freq:
  1916                           	opt stack 0
  1917                           
  1918                           ; 4 bytes @ 0x16
  1919  000076                     	ds	1
  1920  000077                     ?_Random:
  1921                           	opt stack 0
  1922  000077                     ExecuteNewChannel@channelIndex:
  1923                           	opt stack 0
  1924  000077                     ExecuteLinkAdr@redundancy:
  1925                           	opt stack 0
  1926  000077                     Random@max:
  1927                           	opt stack 0
  1928  000077                     _AESEncode$4144:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x17
  1932  000077                     	ds	2
  1933  000079                     SwTimerSetTimeout@timerId:
  1934                           	opt stack 0
  1935  000079                     ExecuteLinkAdr@dataRate:
  1936                           	opt stack 0
  1937  000079                     SearchAvailableChannel@transmissionType:
  1938                           	opt stack 0
  1939  000079                     UpdateCfList@channelIndex:
  1940                           	opt stack 0
  1941  000079                     _AESEncode$4145:
  1942                           	opt stack 0
  1943  000079                     RADIO_WriteFrequency@num:
  1944                           	opt stack 0
  1945                           
  1946                           ; 4 bytes @ 0x19
  1947  000079                     	ds	1
  1948  00007A                     ?_MacExecuteCommands:
  1949                           	opt stack 0
  1950  00007A                     UpdateCfList@i:
  1951                           	opt stack 0
  1952  00007A                     ConfigureRadioTx@dataRate:
  1953                           	opt stack 0
  1954  00007A                     ConfigureRadioRx@dataRate:
  1955                           	opt stack 0
  1956  00007A                     SearchAvailableChannel@channelIndex:
  1957                           	opt stack 0
  1958  00007A                     MacExecuteCommands@buffer:
  1959                           	opt stack 0
  1960                           
  1961                           ; 2 bytes @ 0x1A
  1962  00007A                     	ds	1
  1963  00007B                     ConfigureRadioTx@txPower:
  1964                           	opt stack 0
  1965  00007B                     AESEncode@aux:
  1966                           	opt stack 0
  1967                           
  1968                           ; 1 bytes @ 0x1B
  1969  00007B                     	ds	1
  1970  00007C                     ??_SearchAvailableChannel:
  1971  00007C                     ?_SwTimersInterrupt:
  1972                           	opt stack 0
  1973  00007C                     MacExecuteCommands@fOptsLen:
  1974                           	opt stack 0
  1975  00007C                     AESEncode@aux2:
  1976                           	opt stack 0
  1977                           
  1978                           ; 1 bytes @ 0x1C
  1979  00007C                     	ds	1
  1980  00007D                     ??_MacExecuteCommands:
  1981  00007D                     ??_RADIO_DIO2:
  1982  00007D                     AESEncode@aux1:
  1983                           	opt stack 0
  1984  00007D                     RADIO_Init@radioBuffer:
  1985                           	opt stack 0
  1986  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  1987                           	opt stack 0
  1988                           
  1989                           ; 2 bytes @ 0x1D
  1990  00007D                     	ds	1
  1991  00007E                     RADIO_DIO2@dioMapping:
  1992                           	opt stack 0
  1993  00007E                     AESEncode@aux3:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0x1E
  1997  00007E                     	ds	1
  1998  00007F                     ??_RADIO_WriteConfiguration:
  1999  00007F                     MacExecuteCommands@done:
  2000                           	opt stack 0
  2001  00007F                     AESEncode@i:
  2002                           	opt stack 0
  2003  00007F                     RADIO_Init@frequency:
  2004                           	opt stack 0
  2005                           
  2006                           ; 4 bytes @ 0x1F
  2007  00007F                     	ds	1
  2008  000080                     SearchAvailableChannel@randomNumberCopy:
  2009                           	opt stack 0
  2010  000080                     MacExecuteCommands@ptr:
  2011                           	opt stack 0
  2012  000080                     AESEncodeLoRa@block:
  2013                           	opt stack 0
  2014                           
  2015                           ; 2 bytes @ 0x20
  2016  000080                     	ds	1
  2017  000081                     RADIO_WriteConfiguration@i:
  2018                           	opt stack 0
  2019  000081                     SearchAvailableChannel@result:
  2020                           	opt stack 0
  2021                           
  2022                           ; 1 bytes @ 0x21
  2023  000081                     	ds	1
  2024  000082                     SearchAvailableChannel@maxChannels:
  2025                           	opt stack 0
  2026  000082                     AESEncodeLoRa@key:
  2027                           	opt stack 0
  2028  000082                     RADIO_WriteConfiguration@tempValue:
  2029                           	opt stack 0
  2030                           
  2031                           ; 4 bytes @ 0x22
  2032  000082                     	ds	1
  2033  000083                     ??_RADIO_Init:
  2034  000083                     SearchAvailableChannel@randomNumber:
  2035                           	opt stack 0
  2036                           
  2037                           ; 1 bytes @ 0x23
  2038  000083                     	ds	1
  2039  000084                     SearchAvailableChannel@i:
  2040                           	opt stack 0
  2041  000084                     SwTimersInterrupt@timeElapsed:
  2042                           	opt stack 0
  2043  000084                     AESEncodeLoRa@useKey:
  2044                           	opt stack 0
  2045                           
  2046                           ; 16 bytes @ 0x24
  2047  000084                     	ds	1
  2048  000085                     SelectChannelForTransmission@transmissionType:
  2049                           	opt stack 0
  2050                           
  2051                           ; 1 bytes @ 0x25
  2052  000085                     	ds	1
  2053  000086                     RADIO_WriteConfiguration@regValue:
  2054                           	opt stack 0
  2055  000086                     SelectChannelForTransmission@result:
  2056                           	opt stack 0
  2057                           
  2058                           ; 1 bytes @ 0x26
  2059  000086                     	ds	1
  2060  000087                     SelectChannelForTransmission@channelIndex:
  2061                           	opt stack 0
  2062                           
  2063                           ; 1 bytes @ 0x27
  2064  000087                     	ds	1
  2065  000088                     SwTimersInterrupt@ticksToNextTimerEvent:
  2066                           	opt stack 0
  2067                           
  2068                           ; 4 bytes @ 0x28
  2069  000088                     	ds	4
  2070  00008C                     SwTimersInterrupt@i:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x2C
  2074  00008C                     	ds	1
  2075  00008D                     ?_SwTimerReadValue:
  2076                           	opt stack 0
  2077                           
  2078                           ; 4 bytes @ 0x2D
  2079  00008D                     	ds	4
  2080  000091                     SwTimerReadValue@ticksCount:
  2081                           	opt stack 0
  2082  000091                     SwTimerStart@ticksRemaining:
  2083                           	opt stack 0
  2084                           
  2085                           ; 4 bytes @ 0x31
  2086  000091                     	ds	3
  2087  000094                     GenerateSubkey@key:
  2088                           	opt stack 0
  2089  000094                     ComputeSessionKeys@joinAcceptBuffer:
  2090                           	opt stack 0
  2091  000094                     EncryptFRMPayload@buffer:
  2092                           	opt stack 0
  2093                           
  2094                           ; 2 bytes @ 0x34
  2095  000094                     	ds	1
  2096  000095                     SwTimerReadValue@timerId:
  2097                           	opt stack 0
  2098  000095                     SwTimerStart@timerId:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x35
  2102  000095                     	ds	1
  2103  000096                     ??_UpdateRetransmissionAckTimeoutState:
  2104  000096                     ??_StartReTxTimer:
  2105  000096                     ?_RADIO_Transmit:
  2106                           	opt stack 0
  2107  000096                     ?_RADIO_ReceiveStart:
  2108                           	opt stack 0
  2109  000096                     EncryptFRMPayload@bufferLength:
  2110                           	opt stack 0
  2111  000096                     RADIO_Transmit@buffer:
  2112                           	opt stack 0
  2113  000096                     RADIO_ReceiveStart@rxWindowSize:
  2114                           	opt stack 0
  2115  000096                     GenerateSubkey@k1:
  2116                           	opt stack 0
  2117  000096                     LORAWAN_LinkCheckConfigure@period:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x36
  2121  000096                     	ds	1
  2122  000097                     EncryptFRMPayload@dir:
  2123                           	opt stack 0
  2124                           
  2125                           ; 1 bytes @ 0x37
  2126  000097                     	ds	1
  2127  000098                     ??_LORAWAN_LinkCheckConfigure:
  2128  000098                     ??_RADIO_ReceiveStart:
  2129  000098                     RADIO_Transmit@bufferLen:
  2130                           	opt stack 0
  2131  000098                     GenerateSubkey@k2:
  2132                           	opt stack 0
  2133  000098                     EncryptFRMPayload@frameCounter:
  2134                           	opt stack 0
  2135                           
  2136                           ; 4 bytes @ 0x38
  2137  000098                     	ds	1
  2138  000099                     ??_RADIO_Transmit:
  2139                           
  2140                           ; 1 bytes @ 0x39
  2141  000099                     	ds	1
  2142  00009A                     ??_GenerateSubkey:
  2143  00009A                     StartReTxTimer@minim:
  2144                           	opt stack 0
  2145                           
  2146                           ; 4 bytes @ 0x3A
  2147  00009A                     	ds	1
  2148  00009B                     GenerateSubkey@const_Rb:
  2149                           	opt stack 0
  2150                           
  2151                           ; 16 bytes @ 0x3B
  2152  00009B                     	ds	1
  2153  00009C                     EncryptFRMPayload@key:
  2154                           	opt stack 0
  2155  00009C                     _RADIO_ReceiveStart$1199:
  2156                           	opt stack 0
  2157                           
  2158                           ; 4 bytes @ 0x3C
  2159  00009C                     	ds	2
  2160  00009E                     StartReTxTimer@i:
  2161                           	opt stack 0
  2162  00009E                     EncryptFRMPayload@macBufferIndex:
  2163                           	opt stack 0
  2164                           
  2165                           ; 1 bytes @ 0x3E
  2166  00009E                     	ds	1
  2167  00009F                     EncryptFRMPayload@bufferToBeEncrypted:
  2168                           	opt stack 0
  2169                           
  2170                           ; 2 bytes @ 0x3F
  2171  00009F                     	ds	1
  2172  0000A0                     LORAWAN_TxDone@timeOnAir:
  2173                           	opt stack 0
  2174  0000A0                     _LORAWAN_LinkCheckConfigure$3502:
  2175                           	opt stack 0
  2176                           
  2177                           ; 4 bytes @ 0x40
  2178  0000A0                     	ds	1
  2179  0000A1                     EncryptFRMPayload@multicastStatus:
  2180                           	opt stack 0
  2181  0000A1                     _RADIO_Transmit$1196:
  2182                           	opt stack 0
  2183                           
  2184                           ; 4 bytes @ 0x41
  2185  0000A1                     	ds	1
  2186  0000A2                     ??_LORAWAN_TxDone:
  2187  0000A2                     ??_EncryptFRMPayload:
  2188                           
  2189                           ; 1 bytes @ 0x42
  2190  0000A2                     	ds	2
  2191  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  2192                           	opt stack 0
  2193                           
  2194                           ; 1 bytes @ 0x44
  2195  0000A4                     	ds	1
  2196  0000A5                     RADIO_Transmit@regValue:
  2197                           	opt stack 0
  2198  0000A5                     LORAWAN_Reset@ismBandNew:
  2199                           	opt stack 0
  2200                           
  2201                           ; 1 bytes @ 0x45
  2202  0000A5                     	ds	1
  2203  0000A6                     RADIO_Transmit@i:
  2204                           	opt stack 0
  2205  0000A6                     LORAWAN_Init@RxPayload:
  2206                           	opt stack 0
  2207                           
  2208                           ; 2 bytes @ 0x46
  2209  0000A6                     	ds	1
  2210  0000A7                     ??_LORAWAN_RxTimeout:
  2211  0000A7                     EncryptFRMPayload@k:
  2212                           	opt stack 0
  2213                           
  2214                           ; 1 bytes @ 0x47
  2215  0000A7                     	ds	1
  2216  0000A8                     EncryptFRMPayload@i:
  2217                           	opt stack 0
  2218  0000A8                     LORAWAN_Init@RxJoinResponse:
  2219                           	opt stack 0
  2220                           
  2221                           ; 2 bytes @ 0x48
  2222  0000A8                     	ds	1
  2223  0000A9                     EncryptFRMPayload@j:
  2224                           	opt stack 0
  2225                           
  2226                           ; 1 bytes @ 0x49
  2227  0000A9                     	ds	1
  2228  0000AA                     
  2229                           ; 1 bytes @ 0x4A
  2230  0000AA                     	ds	1
  2231  0000AB                     LORAWAN_RxTimeout@minim:
  2232                           	opt stack 0
  2233  0000AB                     GenerateSubkey@l:
  2234                           	opt stack 0
  2235                           
  2236                           ; 16 bytes @ 0x4B
  2237  0000AB                     	ds	4
  2238  0000AF                     LORAWAN_RxTimeout@i:
  2239                           	opt stack 0
  2240                           
  2241                           ; 1 bytes @ 0x4F
  2242  0000AF                     	ds	1
  2243  0000B0                     ??_RADIO_DIO1:
  2244                           
  2245                           ; 1 bytes @ 0x50
  2246  0000B0                     	ds	1
  2247  0000B1                     RADIO_DIO1@dioMapping:
  2248                           	opt stack 0
  2249                           
  2250                           ; 1 bytes @ 0x51
  2251  0000B1                     	ds	10
  2252  0000BB                     GenerateSubkey@i:
  2253                           	opt stack 0
  2254                           
  2255                           ; 1 bytes @ 0x5B
  2256  0000BB                     	ds	1
  2257  0000BC                     AESCmac@key:
  2258                           	opt stack 0
  2259  0000BC                     _LORAWAN_TxDone$2092:
  2260                           	opt stack 0
  2261                           
  2262                           ; 4 bytes @ 0x5C
  2263  0000BC                     	ds	2
  2264  0000BE                     AESCmac@output:
  2265                           	opt stack 0
  2266                           
  2267                           ; 2 bytes @ 0x5E
  2268  0000BE                     	ds	2
  2269  0000C0                     AESCmac@input:
  2270                           	opt stack 0
  2271  0000C0                     _LORAWAN_TxDone$2093:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x60
  2275  0000C0                     	ds	2
  2276  0000C2                     AESCmac@size:
  2277                           	opt stack 0
  2278                           
  2279                           ; 1 bytes @ 0x62
  2280  0000C2                     	ds	1
  2281  0000C3                     ??_AESCmac:
  2282                           
  2283                           ; 1 bytes @ 0x63
  2284  0000C3                     	ds	1
  2285  0000C4                     LORAWAN_TxDone@found:
  2286                           	opt stack 0
  2287                           
  2288                           ; 1 bytes @ 0x64
  2289  0000C4                     	ds	1
  2290  0000C5                     LORAWAN_TxDone@delta:
  2291                           	opt stack 0
  2292                           
  2293                           ; 4 bytes @ 0x65
  2294  0000C5                     	ds	4
  2295  0000C9                     LORAWAN_TxDone@ticks:
  2296                           	opt stack 0
  2297                           
  2298                           ; 4 bytes @ 0x69
  2299  0000C9                     	ds	1
  2300  0000CA                     ?_ComputeMic:
  2301                           	opt stack 0
  2302  0000CA                     AssemblePacket@port:
  2303                           	opt stack 0
  2304  0000CA                     ComputeMic@key:
  2305                           	opt stack 0
  2306                           
  2307                           ; 2 bytes @ 0x6A
  2308  0000CA                     	ds	1
  2309  0000CB                     AssemblePacket@buffer:
  2310                           	opt stack 0
  2311                           
  2312                           ; 2 bytes @ 0x6B
  2313  0000CB                     	ds	1
  2314  0000CC                     ComputeMic@buffer:
  2315                           	opt stack 0
  2316                           
  2317                           ; 2 bytes @ 0x6C
  2318  0000CC                     	ds	1
  2319  0000CD                     AssemblePacket@bufferLength:
  2320                           	opt stack 0
  2321  0000CD                     LORAWAN_TxDone@minim:
  2322                           	opt stack 0
  2323                           
  2324                           ; 4 bytes @ 0x6D
  2325  0000CD                     	ds	1
  2326  0000CE                     ComputeMic@bufferLength:
  2327                           	opt stack 0
  2328                           
  2329                           ; 1 bytes @ 0x6E
  2330  0000CE                     	ds	1
  2331  0000CF                     ??_AssemblePacket:
  2332  0000CF                     ComputeMic@mic:
  2333                           	opt stack 0
  2334                           
  2335                           ; 4 bytes @ 0x6F
  2336  0000CF                     	ds	2
  2337  0000D1                     LORAWAN_TxDone@i:
  2338                           	opt stack 0
  2339  0000D1                     AssemblePacket@confirmed:
  2340                           	opt stack 0
  2341                           
  2342                           ; 1 bytes @ 0x71
  2343  0000D1                     	ds	1
  2344  0000D2                     ??_RADIO_TxDone:
  2345  0000D2                     ??_RADIO_FSKPacketSent:
  2346  0000D2                     AssemblePacket@mhdr:
  2347                           	opt stack 0
  2348                           
  2349                           ; 1 bytes @ 0x72
  2350  0000D2                     	ds	1
  2351  0000D3                     ??_PrepareJoinRequestFrame:
  2352  0000D3                     AssemblePacket@fCtrl:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x73
  2356  0000D3                     	ds	1
  2357  0000D4                     AssemblePacket@macCmdIdx:
  2358                           	opt stack 0
  2359                           
  2360                           ; 1 bytes @ 0x74
  2361  0000D4                     	ds	1
  2362  0000D5                     AssemblePacket@bufferIndex:
  2363                           	opt stack 0
  2364  0000D5                     PrepareJoinRequestFrame@mic:
  2365                           	opt stack 0
  2366                           
  2367                           ; 4 bytes @ 0x75
  2368  0000D5                     	ds	1
  2369  0000D6                     LORAWAN_Send@port:
  2370                           	opt stack 0
  2371  0000D6                     RADIO_TxDone@timeOnAir:
  2372                           	opt stack 0
  2373  0000D6                     RADIO_FSKPacketSent@timeOnAir:
  2374                           	opt stack 0
  2375                           
  2376                           ; 4 bytes @ 0x76
  2377  0000D6                     	ds	1
  2378  0000D7                     LORAWAN_Send@buffer:
  2379                           	opt stack 0
  2380                           
  2381                           ; 2 bytes @ 0x77
  2382  0000D7                     	ds	2
  2383  0000D9                     LORAWAN_Send@bufferLength:
  2384                           	opt stack 0
  2385  0000D9                     PrepareJoinRequestFrame@mhdr:
  2386                           	opt stack 0
  2387                           
  2388                           ; 1 bytes @ 0x79
  2389  0000D9                     	ds	1
  2390  0000DA                     ??_LORAWAN_Send:
  2391  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2392                           	opt stack 0
  2393  0000DA                     _RADIO_TxDone$1211:
  2394                           	opt stack 0
  2395  0000DA                     _RADIO_FSKPacketSent$1215:
  2396                           	opt stack 0
  2397                           
  2398                           ; 4 bytes @ 0x7A
  2399  0000DA                     	ds	1
  2400  0000DB                     LORAWAN_Send@result:
  2401                           	opt stack 0
  2402  0000DB                     PrepareJoinRequestFrame@iCtr:
  2403                           	opt stack 0
  2404                           
  2405                           ; 1 bytes @ 0x7B
  2406  0000DB                     	ds	1
  2407  0000DC                     LORAWAN_Join@bufferIndex:
  2408                           	opt stack 0
  2409  0000DC                     LORAWAN_Send@confirmed:
  2410                           	opt stack 0
  2411                           
  2412                           ; 1 bytes @ 0x7C
  2413  0000DC                     	ds	1
  2414  0000DD                     ??_LORAWAN_RxDone:
  2415  0000DD                     ??_SwTimersExecute:
  2416  0000DD                     LORAWAN_Join@result:
  2417                           	opt stack 0
  2418                           
  2419                           ; 1 bytes @ 0x7D
  2420  0000DD                     	ds	1
  2421  0000DE                     RADIO_FSKPacketSent@irqFlags:
  2422                           	opt stack 0
  2423  0000DE                     LORAWAN_Join@activationTypeNew:
  2424                           	opt stack 0
  2425                           
  2426                           ; 1 bytes @ 0x7E
  2427  0000DE                     	ds	3
  2428  0000E1                     SwTimersExecute@i:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x81
  2432  0000E1                     	ds	1
  2433  0000E2                     RADIO_RxDone@irqFlags:
  2434                           	opt stack 0
  2435  0000E2                     RADIO_FSKPayloadReady@irqFlags:
  2436                           	opt stack 0
  2437                           
  2438                           ; 1 bytes @ 0x82
  2439  0000E2                     	ds	1
  2440  0000E3                     RADIO_RxDone@i:
  2441                           	opt stack 0
  2442  0000E3                     RADIO_FSKPayloadReady@i:
  2443                           	opt stack 0
  2444                           
  2445                           ; 1 bytes @ 0x83
  2446  0000E3                     	ds	1
  2447  0000E4                     ??_RADIO_DIO0:
  2448                           
  2449                           ; 1 bytes @ 0x84
  2450  0000E4                     	ds	2
  2451  0000E6                     RADIO_DIO0@dioMapping:
  2452                           	opt stack 0
  2453                           
  2454                           ; 1 bytes @ 0x86
  2455  0000E6                     	ds	1
  2456  0000E7                     RADIO_DIO0@opMode:
  2457                           	opt stack 0
  2458                           
  2459                           ; 1 bytes @ 0x87
  2460  0000E7                     	ds	1
  2461  0000E8                     tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           postinc0	equ	0xFEE
  2466                           wreg	equ	0xFE8
  2467                           postdec2	equ	0xFDD
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           
  2471                           ; 1 bytes @ 0x88
  2472                           
  2473                           	psect	cstackCOMRAM
  2474  000001                     __pcstackCOMRAM:
  2475                           	opt stack 0
  2476  000001                     ?i2_TMR1_ReadTimer:
  2477                           	opt stack 0
  2478  000001                     i2TMR1_WriteTimer@timerVal:
  2479                           	opt stack 0
  2480                           
  2481                           ; 2 bytes @ 0x0
  2482  000001                     	ds	2
  2483  000003                     ??i2_TMR1_ReadTimer:
  2484  000003                     
  2485                           ; 1 bytes @ 0x2
  2486  000003                     	ds	2
  2487  000005                     i2TMR1_ReadTimer@readVal:
  2488                           	opt stack 0
  2489                           
  2490                           ; 2 bytes @ 0x4
  2491  000005                     	ds	2
  2492  000007                     i2TMR1_ReadTimer@readValHigh:
  2493                           	opt stack 0
  2494                           
  2495                           ; 1 bytes @ 0x6
  2496  000007                     	ds	1
  2497  000008                     i2TMR1_ReadTimer@readValLow:
  2498                           	opt stack 0
  2499                           
  2500                           ; 1 bytes @ 0x7
  2501  000008                     	ds	1
  2502  000009                     ?i2_TMR_SwapTimer:
  2503                           	opt stack 0
  2504  000009                     ?i2_TMR_GetDeltaTime:
  2505                           	opt stack 0
  2506  000009                     i2TMR_SwapTimer@timerVal:
  2507                           	opt stack 0
  2508                           
  2509                           ; 2 bytes @ 0x8
  2510  000009                     	ds	2
  2511  00000B                     
  2512                           ; 1 bytes @ 0xA
  2513  00000B                     	ds	2
  2514  00000D                     ??i2_TMR_GetDeltaTime:
  2515                           
  2516                           ; 1 bytes @ 0xC
  2517  00000D                     	ds	12
  2518  000019                     ?i2_SwTimersInterrupt:
  2519                           	opt stack 0
  2520                           
  2521                           ; 4 bytes @ 0x18
  2522  000019                     	ds	4
  2523  00001D                     
  2524                           ; 1 bytes @ 0x1C
  2525  00001D                     	ds	4
  2526  000021                     i2SwTimersInterrupt@timeElapsed:
  2527                           	opt stack 0
  2528                           
  2529                           ; 4 bytes @ 0x20
  2530  000021                     	ds	4
  2531  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2532                           	opt stack 0
  2533                           
  2534                           ; 4 bytes @ 0x24
  2535  000025                     	ds	4
  2536  000029                     i2SwTimersInterrupt@i:
  2537                           	opt stack 0
  2538                           
  2539                           ; 1 bytes @ 0x28
  2540  000029                     	ds	1
  2541  00002A                     ??_INTERRUPT_InterruptManager:
  2542                           
  2543                           ; 1 bytes @ 0x29
  2544  00002A                     	ds	8
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           postinc0	equ	0xFEE
  2550                           wreg	equ	0xFE8
  2551                           postdec2	equ	0xFDD
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           
  2555 ;;
  2556 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2557 ;;
  2558 ;; *************** function _main *****************
  2559 ;; Defined at:
  2560 ;;		line 50 in file "main.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels required when called:   19
  2580 ;; This function calls:
  2581 ;;		_ADC_Init
  2582 ;;		_IO_pins_init
  2583 ;;		_LORAWAN_GetState
  2584 ;;		_LORAWAN_Init
  2585 ;;		_LORAWAN_Join
  2586 ;;		_LORAWAN_Mainloop
  2587 ;;		_LORAWAN_SetApplicationSessionKey
  2588 ;;		_LORAWAN_SetDeviceAddress
  2589 ;;		_LORAWAN_SetNetworkSessionKey
  2590 ;;		_LoRaSleep
  2591 ;;		_LoRaWakeUp
  2592 ;;		_SYSTEM_Initialize
  2593 ;;		_SysConfigSleep
  2594 ;;		_TMR3_SetInterruptHandler
  2595 ;;		_readAndSend
  2596 ;; This function is called by:
  2597 ;;		Startup code after reset
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text0
  2602  005AFA                     __ptext0:
  2603                           	opt stack 0
  2604  005AFA                     _main:
  2605                           	opt stack 12
  2606                           
  2607                           ;main.c: 52: SYSTEM_Initialize();
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;incstack = 0
  2611  005AFA  EC01  F03A         	call	_SYSTEM_Initialize	;wreg free
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;main.c: 53: PORTCbits.RC5 = 1;
  2615  005AFE  8A82               	bsf	3970,5,c	;volatile
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;main.c: 56: (INTCONbits.GIE = 1);
  2619  005B00  8EF2               	bsf	intcon,7,c	;volatile
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;main.c: 57: (INTCONbits.PEIE = 1);
  2623  005B02  8CF2               	bsf	intcon,6,c	;volatile
  2624                           
  2625                           ;main.c: 58: TMR3_SetInterruptHandler(handle16sInterrupt);
  2626  005B04  0E42               	movlw	low _handle16sInterrupt
  2627  005B06  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  2628  005B08  0E77               	movlw	high _handle16sInterrupt
  2629  005B0A  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2630  005B0C  EC1A  F03C         	call	_TMR3_SetInterruptHandler	;wreg free
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;main.c: 59: SysConfigSleep();
  2634  005B10  ECC7  F030         	call	_SysConfigSleep	;wreg free
  2635                           
  2636                           ; BSR set to: 15
  2637                           ;main.c: 60: ADC_Init();
  2638  005B14  ECE1  F03B         	call	_ADC_Init	;wreg free
  2639                           
  2640                           ; BSR set to: 15
  2641                           ;main.c: 61: IO_pins_init();
  2642  005B18  ECB4  F03B         	call	_IO_pins_init	;wreg free
  2643                           
  2644                           ; BSR set to: 15
  2645                           ;main.c: 63: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2646  005B1C  0E1C               	movlw	low _RxDataDone
  2647  005B1E  0100               	movlb	0	; () banked
  2648  005B20  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2649  005B22  0E61               	movlw	high _RxDataDone
  2650  005B24  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2651  005B26  0E42               	movlw	low _RxJoinResponse
  2652  005B28  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2653  005B2A  0E79               	movlw	high _RxJoinResponse
  2654  005B2C  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2655  005B2E  EC8B  F033         	call	_LORAWAN_Init	;wreg free
  2656                           
  2657                           ;main.c: 64: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2658  005B32  0ED4               	movlw	low _nwkSKey
  2659  005B34  0100               	movlb	0	; () banked
  2660  005B36  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2661  005B38  0E01               	movlw	high _nwkSKey
  2662  005B3A  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2663  005B3C  ECE1  F038         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2664                           
  2665                           ;main.c: 65: LORAWAN_SetApplicationSessionKey(appSKey);
  2666  005B40  0EC4               	movlw	low _appSKey
  2667  005B42  0100               	movlb	0	; () banked
  2668  005B44  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2669  005B46  0E01               	movlw	high _appSKey
  2670  005B48  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2671  005B4A  ECF6  F038         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2672                           
  2673                           ;main.c: 66: LORAWAN_SetDeviceAddress(devAddr);
  2674  005B4E  0E78               	movlw	120
  2675  005B50  0100               	movlb	0	; () banked
  2676  005B52  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  2677  005B54  0E56               	movlw	86
  2678  005B56  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  2679  005B58  0E34               	movlw	52
  2680  005B5A  6F66               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  2681  005B5C  0E12               	movlw	18
  2682  005B5E  6F67               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  2683  005B60  EC31  F03B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2684                           
  2685                           ; BSR set to: 2
  2686                           ;main.c: 67: LORAWAN_Join(ABP);
  2687  005B64  0E01               	movlw	1
  2688  005B66  EC12  F02E         	call	_LORAWAN_Join
  2689                           
  2690                           ;main.c: 70: TimeToSend = 1;
  2691  005B6A  0E01               	movlw	1
  2692  005B6C  0101               	movlb	1	; () banked
  2693  005B6E  6F69               	movwf	_TimeToSend& (0+255),b
  2694  005B70                     l16150:
  2695                           
  2696                           ;main.c: 73: {
  2697                           ;main.c: 74: LORAWAN_Mainloop();
  2698  005B70  EC12  F037         	call	_LORAWAN_Mainloop	;wreg free
  2699                           
  2700                           ;main.c: 76: if(TimeToSend){
  2701  005B74  0101               	movlb	1	; () banked
  2702  005B76  5169               	movf	_TimeToSend& (0+255),w,b
  2703  005B78  E006               	bz	l16160
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;main.c: 77: LoRaWakeUp();
  2707  005B7A  EC5B  F03C         	call	_LoRaWakeUp	;wreg free
  2708                           
  2709                           ;main.c: 78: readAndSend();
  2710  005B7E  EC0B  F038         	call	_readAndSend	;wreg free
  2711                           
  2712                           ;main.c: 79: TimeToSend = 0;
  2713  005B82  0101               	movlb	1	; () banked
  2714  005B84  6B69               	clrf	_TimeToSend& (0+255),b
  2715  005B86                     l16160:
  2716                           
  2717                           ; BSR set to: 1
  2718                           ;main.c: 81: }
  2719                           ;main.c: 83: if(LORAWAN_GetState() == IDLE){
  2720  005B86  EC77  F03C         	call	_LORAWAN_GetState	;wreg free
  2721  005B8A  0900               	iorlw	0
  2722  005B8C  E1F1               	bnz	l16150
  2723                           
  2724                           ; BSR set to: 2
  2725                           ;main.c: 84: LoRaSleep();
  2726  005B8E  EC21  F03A         	call	_LoRaSleep	;wreg free
  2727  005B92  0003               	sleep		;# 
  2728  005B94  D7ED               	goto	l16150
  2729  005B96                     __end_of_main:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           postdec2	equ	0xFDD
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           
  2742 ;; *************** function _readAndSend *****************
  2743 ;; Defined at:
  2744 ;;		line 124 in file "main.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/1
  2755 ;;		On exit  : D/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:   14
  2765 ;; This function calls:
  2766 ;;		_ADC_Read
  2767 ;;		_LORAWAN_Send
  2768 ;; This function is called by:
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text1
  2774  007016                     __ptext1:
  2775                           	opt stack 0
  2776  007016                     _readAndSend:
  2777                           	opt stack 16
  2778                           
  2779                           ;main.c: 125: payload[0] = ADC_Read(27);
  2780                           
  2781                           ;incstack = 0
  2782  007016  0E1B               	movlw	27
  2783  007018  ECA1  F037         	call	_ADC_Read
  2784  00701C  C066  F1B0         	movff	?_ADC_Read,_payload
  2785  007020  C067  F1B1         	movff	?_ADC_Read+1,_payload+1
  2786                           
  2787                           ;main.c: 126: payload[1] = ADC_Read(26);
  2788  007024  0E1A               	movlw	26
  2789  007026  ECA1  F037         	call	_ADC_Read
  2790  00702A  C066  F1B2         	movff	?_ADC_Read,_payload+2
  2791  00702E  C067  F1B3         	movff	?_ADC_Read+1,_payload+3
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;main.c: 127: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  2795  007032  0E02               	movlw	2
  2796  007034  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  2797  007036  0EB0               	movlw	low _payload
  2798  007038  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  2799  00703A  0E01               	movlw	high _payload
  2800  00703C  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2801  00703E  0E04               	movlw	4
  2802  007040  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2803  007042  0E00               	movlw	0
  2804  007044  EF0D  F02A         	goto	_LORAWAN_Send
  2805  007048                     __end_of_readAndSend:
  2806                           	opt stack 0
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           intcon	equ	0xFF2
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           postdec2	equ	0xFDD
  2815                           fsr2h	equ	0xFDA
  2816                           fsr2l	equ	0xFD9
  2817                           
  2818 ;; *************** function _ADC_Read *****************
  2819 ;; Defined at:
  2820 ;;		line 148 in file "main.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  channel         1    wreg     unsigned char 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  channel         1   10[BANK0 ] unsigned char 
  2825 ;;  result          2   11[BANK0 ] unsigned int 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  2    6[BANK0 ] unsigned int 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/1
  2832 ;;		On exit  : F/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;Total ram usage:        7 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    8
  2842 ;; This function calls:
  2843 ;;		_ADC_SelChannel
  2844 ;; This function is called by:
  2845 ;;		_readAndSend
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text2
  2850  006F42                     __ptext2:
  2851                           	opt stack 0
  2852  006F42                     _ADC_Read:
  2853                           	opt stack 21
  2854                           
  2855                           ;incstack = 0
  2856                           ;ADC_Read@channel stored from wreg
  2857  006F42  0100               	movlb	0	; () banked
  2858  006F44  6F6A               	movwf	ADC_Read@channel& (0+255),b
  2859                           
  2860                           ;main.c: 150: ADCON0bits.ADON = 1;
  2861  006F46  80C2               	bsf	4034,0,c	;volatile
  2862                           
  2863                           ;main.c: 151: ADC_SelChannel(channel);
  2864  006F48  516A               	movf	ADC_Read@channel& (0+255),w,b
  2865  006F4A  EC25  F03B         	call	_ADC_SelChannel
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;main.c: 152: ADCON0bits.GO = 1;
  2869  006F4E  82C2               	bsf	4034,1,c	;volatile
  2870  006F50                     l2745:
  2871  006F50  B2C2               	btfsc	4034,1,c	;volatile
  2872  006F52  D7FE               	goto	l2745
  2873                           
  2874                           ;main.c: 154: result = (ADRESH<<8) | ADRESL;
  2875  006F54  50C3               	movf	4035,w,c	;volatile
  2876  006F56  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  2877  006F5A  0100               	movlb	0	; () banked
  2878  006F5C  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  2879  006F5E  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  2880  006F62  6B68               	clrf	??_ADC_Read& (0+255),b
  2881  006F64  1168               	iorwf	??_ADC_Read& (0+255),w,b
  2882  006F66  6F6B               	movwf	ADC_Read@result& (0+255),b
  2883  006F68  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  2884  006F6A  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;main.c: 155: ADCON0bits.ADON = 0;
  2888  006F6C  90C2               	bcf	4034,0,c	;volatile
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;main.c: 156: return result;
  2892  006F6E  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  2893  006F72  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  2894                           
  2895                           ; BSR set to: 0
  2896  006F76  0012               	return		;funcret
  2897  006F78                     __end_of_ADC_Read:
  2898                           	opt stack 0
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           intcon	equ	0xFF2
  2904                           postinc0	equ	0xFEE
  2905                           wreg	equ	0xFE8
  2906                           postdec2	equ	0xFDD
  2907                           fsr2h	equ	0xFDA
  2908                           fsr2l	equ	0xFD9
  2909                           
  2910 ;; *************** function _ADC_SelChannel *****************
  2911 ;; Defined at:
  2912 ;;		line 143 in file "main.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  c               1    wreg     unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  c               1    5[BANK0 ] unsigned char 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : F/0
  2923 ;;		On exit  : F/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;Total ram usage:        2 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    7
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_ADC_Read
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text3
  2941  00764A                     __ptext3:
  2942                           	opt stack 0
  2943  00764A                     _ADC_SelChannel:
  2944                           	opt stack 21
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;incstack = 0
  2948                           ;ADC_SelChannel@c stored from wreg
  2949  00764A  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  2950                           
  2951                           ;main.c: 144: ADCON0bits.CHS = c;
  2952  00764C  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  2953  007650  0100               	movlb	0	; () banked
  2954  007652  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2955  007654  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2956  007656  50C2               	movf	4034,w,c	;volatile
  2957  007658  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2958  00765A  0B83               	andlw	-125
  2959  00765C  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2960  00765E  6EC2               	movwf	4034,c	;volatile
  2961                           
  2962                           ; BSR set to: 0
  2963  007660  0012               	return		;funcret
  2964  007662                     __end_of_ADC_SelChannel:
  2965                           	opt stack 0
  2966                           tblptru	equ	0xFF8
  2967                           tblptrh	equ	0xFF7
  2968                           tblptrl	equ	0xFF6
  2969                           tablat	equ	0xFF5
  2970                           intcon	equ	0xFF2
  2971                           postinc0	equ	0xFEE
  2972                           wreg	equ	0xFE8
  2973                           postdec2	equ	0xFDD
  2974                           fsr2h	equ	0xFDA
  2975                           fsr2l	equ	0xFD9
  2976                           
  2977 ;; *************** function _SysConfigSleep *****************
  2978 ;; Defined at:
  2979 ;;		line 166 in file "main.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		None
  2988 ;; Tracked objects:
  2989 ;;		On entry : F/0
  2990 ;;		On exit  : F/F
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    7
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text4
  3008  00618E                     __ptext4:
  3009                           	opt stack 0
  3010  00618E                     _SysConfigSleep:
  3011                           	opt stack 23
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;main.c: 169: UART2MD = 1;
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;incstack = 0
  3018  00618E  010F               	movlb	15	; () banked
  3019  006190  8F3F               	bsf	63,7,b	;volatile
  3020                           
  3021                           ;main.c: 170: UART1MD = 1;
  3022  006192  8D3F               	bsf	63,6,b	;volatile
  3023                           
  3024                           ;main.c: 171: TMR6MD = 1;
  3025  006194  8B3F               	bsf	63,5,b	;volatile
  3026                           
  3027                           ;main.c: 172: TMR5MD = 1;
  3028  006196  893F               	bsf	63,4,b	;volatile
  3029                           
  3030                           ;main.c: 173: TMR4MD = 1;
  3031  006198  873F               	bsf	63,3,b	;volatile
  3032                           
  3033                           ;main.c: 174: TMR2MD = 1;
  3034  00619A  833F               	bsf	63,1,b	;volatile
  3035                           
  3036                           ;main.c: 175: MSSP1MD = 1;
  3037  00619C  8D3E               	bsf	62,6,b	;volatile
  3038                           
  3039                           ;main.c: 176: CCP5MD = 1;
  3040  00619E  893E               	bsf	62,4,b	;volatile
  3041                           
  3042                           ;main.c: 177: CCP4MD = 1;
  3043  0061A0  873E               	bsf	62,3,b	;volatile
  3044                           
  3045                           ;main.c: 178: CCP3MD = 1;
  3046  0061A2  853E               	bsf	62,2,b	;volatile
  3047                           
  3048                           ;main.c: 179: CCP2MD = 1;
  3049  0061A4  833E               	bsf	62,1,b	;volatile
  3050                           
  3051                           ;main.c: 180: CCP1MD = 1;
  3052  0061A6  813E               	bsf	62,0,b	;volatile
  3053                           
  3054                           ;main.c: 181: CTMUMD = 1;
  3055  0061A8  873D               	bsf	61,3,b	;volatile
  3056                           
  3057                           ;main.c: 182: CMP2MD = 1;
  3058  0061AA  853D               	bsf	61,2,b	;volatile
  3059                           
  3060                           ;main.c: 183: CMP1MD = 1;
  3061  0061AC  833D               	bsf	61,1,b	;volatile
  3062                           
  3063                           ;main.c: 186: IDLEN = 0;
  3064  0061AE  9ED3               	bcf	4051,7,c	;volatile
  3065                           
  3066                           ;main.c: 190: TRISA = 0x00;
  3067  0061B0  6A92               	clrf	3986,c	;volatile
  3068                           
  3069                           ;main.c: 191: LATA = 0x00;
  3070  0061B2  6A89               	clrf	3977,c	;volatile
  3071                           
  3072                           ;main.c: 194: TRISBbits.RB4 = 0;
  3073  0061B4  9893               	bcf	3987,4,c	;volatile
  3074                           
  3075                           ;main.c: 195: TRISBbits.RB5 = 0;
  3076  0061B6  9A93               	bcf	3987,5,c	;volatile
  3077                           
  3078                           ;main.c: 196: TRISBbits.RB6 = 0;
  3079  0061B8  9C93               	bcf	3987,6,c	;volatile
  3080                           
  3081                           ;main.c: 197: TRISBbits.RB7 = 0;
  3082  0061BA  9E93               	bcf	3987,7,c	;volatile
  3083                           
  3084                           ;main.c: 198: LATBbits.LATB4 = 0;
  3085  0061BC  988A               	bcf	3978,4,c	;volatile
  3086                           
  3087                           ;main.c: 199: LATBbits.LATB5 = 0;
  3088  0061BE  9A8A               	bcf	3978,5,c	;volatile
  3089                           
  3090                           ;main.c: 200: LATBbits.LATB6 = 0;
  3091  0061C0  9C8A               	bcf	3978,6,c	;volatile
  3092                           
  3093                           ;main.c: 201: LATBbits.LATB7 = 0;
  3094  0061C2  9E8A               	bcf	3978,7,c	;volatile
  3095                           
  3096                           ;main.c: 204: TRISCbits.RC0 = 0;
  3097  0061C4  9094               	bcf	3988,0,c	;volatile
  3098                           
  3099                           ;main.c: 205: TRISCbits.RC1 = 0;
  3100  0061C6  9294               	bcf	3988,1,c	;volatile
  3101                           
  3102                           ;main.c: 206: TRISCbits.RC3 = 0;
  3103  0061C8  9694               	bcf	3988,3,c	;volatile
  3104                           
  3105                           ;main.c: 207: TRISCbits.RC4 = 0;
  3106  0061CA  9894               	bcf	3988,4,c	;volatile
  3107                           
  3108                           ;main.c: 209: TRISCbits.RC6 = 0;
  3109  0061CC  9C94               	bcf	3988,6,c	;volatile
  3110                           
  3111                           ;main.c: 210: TRISCbits.RC7 = 0;
  3112  0061CE  9E94               	bcf	3988,7,c	;volatile
  3113                           
  3114                           ;main.c: 211: LATCbits.LATC0 = 0;
  3115  0061D0  908B               	bcf	3979,0,c	;volatile
  3116                           
  3117                           ;main.c: 212: LATCbits.LATC1 = 0;
  3118  0061D2  928B               	bcf	3979,1,c	;volatile
  3119                           
  3120                           ;main.c: 213: LATCbits.LATC3 = 0;
  3121  0061D4  968B               	bcf	3979,3,c	;volatile
  3122                           
  3123                           ;main.c: 214: LATCbits.LATC4 = 0;
  3124  0061D6  988B               	bcf	3979,4,c	;volatile
  3125                           
  3126                           ;main.c: 216: LATCbits.LATC6 = 0;
  3127  0061D8  9C8B               	bcf	3979,6,c	;volatile
  3128                           
  3129                           ;main.c: 217: LATCbits.LATC7 = 0;
  3130  0061DA  9E8B               	bcf	3979,7,c	;volatile
  3131                           
  3132                           ;main.c: 220: TRISDbits.RD0 = 0;
  3133  0061DC  9095               	bcf	3989,0,c	;volatile
  3134                           
  3135                           ;main.c: 221: TRISDbits.RD1 = 0;
  3136  0061DE  9295               	bcf	3989,1,c	;volatile
  3137                           
  3138                           ;main.c: 222: TRISDbits.RD2 = 0;
  3139  0061E0  9495               	bcf	3989,2,c	;volatile
  3140                           
  3141                           ;main.c: 223: TRISDbits.RD4 = 0;
  3142  0061E2  9895               	bcf	3989,4,c	;volatile
  3143                           
  3144                           ;main.c: 224: TRISDbits.RD5 = 0;
  3145  0061E4  9A95               	bcf	3989,5,c	;volatile
  3146                           
  3147                           ;main.c: 225: TRISDbits.RD7 = 0;
  3148  0061E6  9E95               	bcf	3989,7,c	;volatile
  3149                           
  3150                           ;main.c: 226: LATDbits.LATD0 = 0;
  3151  0061E8  908C               	bcf	3980,0,c	;volatile
  3152                           
  3153                           ;main.c: 227: LATDbits.LATD1 = 0;
  3154  0061EA  928C               	bcf	3980,1,c	;volatile
  3155                           
  3156                           ;main.c: 228: LATDbits.LATD2 = 0;
  3157  0061EC  948C               	bcf	3980,2,c	;volatile
  3158                           
  3159                           ;main.c: 229: LATDbits.LATD4 = 0;
  3160  0061EE  988C               	bcf	3980,4,c	;volatile
  3161                           
  3162                           ;main.c: 234: TRISEbits.RE0 = 0;
  3163  0061F0  9096               	bcf	3990,0,c	;volatile
  3164                           
  3165                           ;main.c: 235: TRISEbits.RE1 = 0;
  3166  0061F2  9296               	bcf	3990,1,c	;volatile
  3167                           
  3168                           ;main.c: 236: TRISEbits.RE2 = 0;
  3169  0061F4  9496               	bcf	3990,2,c	;volatile
  3170                           
  3171                           ;main.c: 237: LATEbits.LATE0 = 0;
  3172  0061F6  908D               	bcf	3981,0,c	;volatile
  3173                           
  3174                           ;main.c: 238: LATEbits.LATE1 = 0;
  3175  0061F8  928D               	bcf	3981,1,c	;volatile
  3176                           
  3177                           ;main.c: 239: LATEbits.LATE2 = 0;
  3178  0061FA  948D               	bcf	3981,2,c	;volatile
  3179                           
  3180                           ; BSR set to: 15
  3181  0061FC  0012               	return		;funcret
  3182  0061FE                     __end_of_SysConfigSleep:
  3183                           	opt stack 0
  3184                           tblptru	equ	0xFF8
  3185                           tblptrh	equ	0xFF7
  3186                           tblptrl	equ	0xFF6
  3187                           tablat	equ	0xFF5
  3188                           intcon	equ	0xFF2
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           postdec2	equ	0xFDD
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           
  3195 ;; *************** function _SYSTEM_Initialize *****************
  3196 ;; Defined at:
  3197 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : F/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:   10
  3218 ;; This function calls:
  3219 ;;		_EXT_INT_Initialize
  3220 ;;		_INTERRUPT_Initialize
  3221 ;;		_LORAWAN_PlatformInit
  3222 ;;		_OSCILLATOR_Initialize
  3223 ;;		_PIN_MANAGER_Initialize
  3224 ;;		_SPI2_Initialize
  3225 ;;		_TMR1_Initialize
  3226 ;;		_TMR3_Initialize
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text5
  3233  007402                     __ptext5:
  3234                           	opt stack 0
  3235  007402                     _SYSTEM_Initialize:
  3236                           	opt stack 20
  3237                           
  3238                           ;mcc.c: 114: INTERRUPT_Initialize();
  3239                           
  3240                           ; BSR set to: 15
  3241                           ;incstack = 0
  3242  007402  EC9F  F03C         	call	_INTERRUPT_Initialize	;wreg free
  3243                           
  3244                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3245  007406  ECC7  F035         	call	_PIN_MANAGER_Initialize	;wreg free
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3249  00740A  ECF6  F03B         	call	_OSCILLATOR_Initialize	;wreg free
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;mcc.c: 117: SPI2_Initialize();
  3253  00740E  EC14  F03C         	call	_SPI2_Initialize	;wreg free
  3254                           
  3255                           ;mcc.c: 118: TMR3_Initialize();
  3256  007412  EC35  F039         	call	_TMR3_Initialize	;wreg free
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;mcc.c: 119: EXT_INT_Initialize();
  3260  007416  EC87  F038         	call	_EXT_INT_Initialize	;wreg free
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;mcc.c: 120: TMR1_Initialize();
  3264  00741A  EC71  F039         	call	_TMR1_Initialize	;wreg free
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;mcc.c: 121: LORAWAN_PlatformInit();
  3268  00741E  EF11  F03A         	goto	_LORAWAN_PlatformInit	;wreg free
  3269  007422                     __end_of_SYSTEM_Initialize:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           intcon	equ	0xFF2
  3276                           postinc0	equ	0xFEE
  3277                           wreg	equ	0xFE8
  3278                           postdec2	equ	0xFDD
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           
  3282 ;; *************** function _TMR3_Initialize *****************
  3283 ;; Defined at:
  3284 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : F/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;Total ram usage:        0 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    8
  3305 ;; This function calls:
  3306 ;;		_TMR3_SetInterruptHandler
  3307 ;;		_TMR3_StartTimer
  3308 ;; This function is called by:
  3309 ;;		_SYSTEM_Initialize
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text6
  3314  00726A                     __ptext6:
  3315                           	opt stack 0
  3316  00726A                     _TMR3_Initialize:
  3317                           	opt stack 21
  3318                           
  3319                           ;tmr3.c: 67: T3CON = 0xBC;
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;incstack = 0
  3323  00726A  0EBC               	movlw	188
  3324  00726C  6EB1               	movwf	4017,c	;volatile
  3325                           
  3326                           ;tmr3.c: 70: T3GCON = 0x00;
  3327  00726E  6AB4               	clrf	4020,c	;volatile
  3328                           
  3329                           ;tmr3.c: 73: TMR3H = 0x00;
  3330  007270  6AB3               	clrf	4019,c	;volatile
  3331                           
  3332                           ;tmr3.c: 76: TMR3L = 0x00;
  3333  007272  6AB2               	clrf	4018,c	;volatile
  3334                           
  3335                           ;tmr3.c: 79: timer3ReloadVal=TMR3;
  3336  007274  CFB2 F05D          	movff	4018,_timer3ReloadVal	;volatile
  3337  007278  CFB3 F05E          	movff	4019,_timer3ReloadVal+1	;volatile
  3338                           
  3339                           ;tmr3.c: 82: PIR2bits.TMR3IF = 0;
  3340  00727C  92A1               	bcf	4001,1,c	;volatile
  3341                           
  3342                           ;tmr3.c: 85: PIE2bits.TMR3IE = 1;
  3343  00727E  82A0               	bsf	4000,1,c	;volatile
  3344                           
  3345                           ;tmr3.c: 88: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  3346  007280  0E5C               	movlw	low _TMR3_DefaultInterruptHandler
  3347  007282  0100               	movlb	0	; () banked
  3348  007284  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3349  007286  0E79               	movlw	high _TMR3_DefaultInterruptHandler
  3350  007288  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3351  00728A  EC1A  F03C         	call	_TMR3_SetInterruptHandler	;wreg free
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;tmr3.c: 91: TMR3_StartTimer();
  3355  00728E  EF99  F03C         	goto	_TMR3_StartTimer	;wreg free
  3356  007292                     __end_of_TMR3_Initialize:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           intcon	equ	0xFF2
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           
  3369 ;; *************** function _TMR3_StartTimer *****************
  3370 ;; Defined at:
  3371 ;;		line 94 in file "mcc_generated_files/tmr3.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		None
  3380 ;; Tracked objects:
  3381 ;;		On entry : F/0
  3382 ;;		On exit  : F/0
  3383 ;;		Unchanged: F/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    7
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_TMR3_Initialize
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text7
  3400  007932                     __ptext7:
  3401                           	opt stack 0
  3402  007932                     _TMR3_StartTimer:
  3403                           	opt stack 21
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;tmr3.c: 97: T3CONbits.TMR3ON = 1;
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;incstack = 0
  3410  007932  80B1               	bsf	4017,0,c	;volatile
  3411                           
  3412                           ; BSR set to: 0
  3413  007934  0012               	return		;funcret
  3414  007936                     __end_of_TMR3_StartTimer:
  3415                           	opt stack 0
  3416                           tblptru	equ	0xFF8
  3417                           tblptrh	equ	0xFF7
  3418                           tblptrl	equ	0xFF6
  3419                           tablat	equ	0xFF5
  3420                           intcon	equ	0xFF2
  3421                           postinc0	equ	0xFEE
  3422                           wreg	equ	0xFE8
  3423                           postdec2	equ	0xFDD
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           
  3427 ;; *************** function _TMR3_SetInterruptHandler *****************
  3428 ;; Defined at:
  3429 ;;		line 183 in file "mcc_generated_files/tmr3.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3432 ;;		 -> handle16sInterrupt(1), TMR3_DefaultInterruptHandler(1), 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : F/0
  3441 ;;		On exit  : F/0
  3442 ;;		Unchanged: F/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;Total ram usage:        2 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    7
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_TMR3_Initialize
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text8
  3460  007834                     __ptext8:
  3461                           	opt stack 0
  3462  007834                     _TMR3_SetInterruptHandler:
  3463                           	opt stack 23
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;tmr3.c: 184: TMR3_InterruptHandler = InterruptHandler;
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;incstack = 0
  3470  007834  C064  F1EC         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3471  007838  C065  F1ED         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3472                           
  3473                           ; BSR set to: 0
  3474  00783C  0012               	return		;funcret
  3475  00783E                     __end_of_TMR3_SetInterruptHandler:
  3476                           	opt stack 0
  3477                           tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           intcon	equ	0xFF2
  3482                           postinc0	equ	0xFEE
  3483                           wreg	equ	0xFE8
  3484                           postdec2	equ	0xFDD
  3485                           fsr2h	equ	0xFDA
  3486                           fsr2l	equ	0xFD9
  3487                           
  3488 ;; *************** function _TMR1_Initialize *****************
  3489 ;; Defined at:
  3490 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : F/0
  3501 ;;		On exit  : F/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    8
  3511 ;; This function calls:
  3512 ;;		_TMR1_SetInterruptHandler
  3513 ;;		_TMR1_StartTimer
  3514 ;; This function is called by:
  3515 ;;		_SYSTEM_Initialize
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text9
  3520  0072E2                     __ptext9:
  3521                           	opt stack 0
  3522  0072E2                     _TMR1_Initialize:
  3523                           	opt stack 21
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;tmr1.c: 67: T1CON = 0x8C;
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;incstack = 0
  3530  0072E2  0E8C               	movlw	140
  3531  0072E4  6ECD               	movwf	4045,c	;volatile
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;tmr1.c: 70: T1GCON = 0x00;
  3535  0072E6  6ACC               	clrf	4044,c	;volatile
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;tmr1.c: 73: TMR1H = 0x00;
  3539  0072E8  6ACF               	clrf	4047,c	;volatile
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;tmr1.c: 76: TMR1L = 0x00;
  3543  0072EA  6ACE               	clrf	4046,c	;volatile
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3547  0072EC  CFCE F05B          	movff	4046,_timer1ReloadVal	;volatile
  3548  0072F0  CFCF F05C          	movff	4047,_timer1ReloadVal+1	;volatile
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3552  0072F4  909E               	bcf	3998,0,c	;volatile
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3556  0072F6  809D               	bsf	3997,0,c	;volatile
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3560  0072F8  0E5E               	movlw	low _TMR1_DefaultInterruptHandler
  3561  0072FA  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3562  0072FC  0E79               	movlw	high _TMR1_DefaultInterruptHandler
  3563  0072FE  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3564  007300  EC1F  F03C         	call	_TMR1_SetInterruptHandler	;wreg free
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;tmr1.c: 91: TMR1_StartTimer();
  3568  007304  EF9B  F03C         	goto	_TMR1_StartTimer	;wreg free
  3569  007308                     __end_of_TMR1_Initialize:
  3570                           	opt stack 0
  3571                           tblptru	equ	0xFF8
  3572                           tblptrh	equ	0xFF7
  3573                           tblptrl	equ	0xFF6
  3574                           tablat	equ	0xFF5
  3575                           intcon	equ	0xFF2
  3576                           postinc0	equ	0xFEE
  3577                           wreg	equ	0xFE8
  3578                           postdec2	equ	0xFDD
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           
  3582 ;; *************** function _TMR1_StartTimer *****************
  3583 ;; Defined at:
  3584 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		None
  3593 ;; Tracked objects:
  3594 ;;		On entry : F/0
  3595 ;;		On exit  : F/0
  3596 ;;		Unchanged: F/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    7
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_TMR1_Initialize
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text10
  3613  007936                     __ptext10:
  3614                           	opt stack 0
  3615  007936                     _TMR1_StartTimer:
  3616                           	opt stack 21
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;incstack = 0
  3623  007936  80CD               	bsf	4045,0,c	;volatile
  3624                           
  3625                           ; BSR set to: 0
  3626  007938  0012               	return		;funcret
  3627  00793A                     __end_of_TMR1_StartTimer:
  3628                           	opt stack 0
  3629                           tblptru	equ	0xFF8
  3630                           tblptrh	equ	0xFF7
  3631                           tblptrl	equ	0xFF6
  3632                           tablat	equ	0xFF5
  3633                           intcon	equ	0xFF2
  3634                           postinc0	equ	0xFEE
  3635                           wreg	equ	0xFE8
  3636                           postdec2	equ	0xFDD
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           
  3640 ;; *************** function _PIN_MANAGER_Initialize *****************
  3641 ;; Defined at:
  3642 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : F/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    8
  3663 ;; This function calls:
  3664 ;;		_IOCB4_SetInterruptHandler
  3665 ;; This function is called by:
  3666 ;;		_SYSTEM_Initialize
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text11
  3671  006B8E                     __ptext11:
  3672                           	opt stack 0
  3673  006B8E                     _PIN_MANAGER_Initialize:
  3674                           	opt stack 21
  3675                           
  3676                           ;pin_manager.c: 57: LATE = 0x00;
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;incstack = 0
  3680  006B8E  6A8D               	clrf	3981,c	;volatile
  3681                           
  3682                           ;pin_manager.c: 58: LATD = 0x00;
  3683  006B90  6A8C               	clrf	3980,c	;volatile
  3684                           
  3685                           ;pin_manager.c: 59: LATA = 0x00;
  3686  006B92  6A89               	clrf	3977,c	;volatile
  3687                           
  3688                           ;pin_manager.c: 60: LATB = 0x00;
  3689  006B94  6A8A               	clrf	3978,c	;volatile
  3690                           
  3691                           ;pin_manager.c: 61: LATC = 0x00;
  3692  006B96  6A8B               	clrf	3979,c	;volatile
  3693                           
  3694                           ;pin_manager.c: 66: TRISE = 0x07;
  3695  006B98  0E07               	movlw	7
  3696  006B9A  6E96               	movwf	3990,c	;volatile
  3697                           
  3698                           ;pin_manager.c: 67: TRISA = 0xFF;
  3699  006B9C  6892               	setf	3986,c	;volatile
  3700                           
  3701                           ;pin_manager.c: 68: TRISB = 0xFF;
  3702  006B9E  6893               	setf	3987,c	;volatile
  3703                           
  3704                           ;pin_manager.c: 69: TRISC = 0xFE;
  3705  006BA0  0EFE               	movlw	254
  3706  006BA2  6E94               	movwf	3988,c	;volatile
  3707                           
  3708                           ;pin_manager.c: 70: TRISD = 0xE6;
  3709  006BA4  0EE6               	movlw	230
  3710  006BA6  6E95               	movwf	3989,c	;volatile
  3711                           
  3712                           ;pin_manager.c: 75: ANSELC = 0xF8;
  3713  006BA8  0EF8               	movlw	248
  3714  006BAA  010F               	movlb	15	; () banked
  3715  006BAC  6F3A               	movwf	58,b	;volatile
  3716                           
  3717                           ;pin_manager.c: 76: ANSELB = 0x28;
  3718  006BAE  0E28               	movlw	40
  3719  006BB0  6F39               	movwf	57,b	;volatile
  3720                           
  3721                           ;pin_manager.c: 77: ANSELD = 0xE4;
  3722  006BB2  0EE4               	movlw	228
  3723  006BB4  6F3B               	movwf	59,b	;volatile
  3724                           
  3725                           ;pin_manager.c: 78: ANSELE = 0x07;
  3726  006BB6  0E07               	movlw	7
  3727  006BB8  6F3C               	movwf	60,b	;volatile
  3728                           
  3729                           ;pin_manager.c: 79: ANSELA = 0x2F;
  3730  006BBA  0E2F               	movlw	47
  3731  006BBC  6F38               	movwf	56,b	;volatile
  3732                           
  3733                           ; BSR set to: 15
  3734                           ;pin_manager.c: 84: WPUB = 0xFF;
  3735  006BBE  6861               	setf	3937,c	;volatile
  3736                           
  3737                           ; BSR set to: 15
  3738                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  3739  006BC0  9EF1               	bcf	intcon2,7,c	;volatile
  3740                           
  3741                           ; BSR set to: 15
  3742                           ;pin_manager.c: 93: IOCBbits.IOCB4 = 1;
  3743  006BC2  8862               	bsf	3938,4,c	;volatile
  3744                           
  3745                           ; BSR set to: 15
  3746                           ;pin_manager.c: 96: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3747  006BC4  0E60               	movlw	low _IOCB4_DefaultInterruptHandler
  3748  006BC6  0100               	movlb	0	; () banked
  3749  006BC8  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3750  006BCA  0E79               	movlw	high _IOCB4_DefaultInterruptHandler
  3751  006BCC  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3752  006BCE  EC24  F03C         	call	_IOCB4_SetInterruptHandler	;wreg free
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;pin_manager.c: 99: INTCONbits.RBIE = 1;
  3756  006BD2  86F2               	bsf	intcon,3,c	;volatile
  3757                           
  3758                           ; BSR set to: 0
  3759  006BD4  0012               	return		;funcret
  3760  006BD6                     __end_of_PIN_MANAGER_Initialize:
  3761                           	opt stack 0
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           intcon	equ	0xFF2
  3767                           intcon2	equ	0xFF1
  3768                           postinc0	equ	0xFEE
  3769                           wreg	equ	0xFE8
  3770                           postdec2	equ	0xFDD
  3771                           fsr2h	equ	0xFDA
  3772                           fsr2l	equ	0xFD9
  3773                           
  3774 ;; *************** function _OSCILLATOR_Initialize *****************
  3775 ;; Defined at:
  3776 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2
  3785 ;; Tracked objects:
  3786 ;;		On entry : F/0
  3787 ;;		On exit  : F/0
  3788 ;;		Unchanged: F/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;Total ram usage:        0 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    7
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_SYSTEM_Initialize
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text12
  3805  0077EC                     __ptext12:
  3806                           	opt stack 0
  3807  0077EC                     _OSCILLATOR_Initialize:
  3808                           	opt stack 22
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;mcc.c: 127: OSCCON = 0x70;
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;incstack = 0
  3815  0077EC  0E70               	movlw	112
  3816  0077EE  6ED3               	movwf	4051,c	;volatile
  3817                           
  3818                           ;mcc.c: 129: OSCCON2 = 0x04;
  3819  0077F0  0E04               	movlw	4
  3820  0077F2  6ED2               	movwf	4050,c	;volatile
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;mcc.c: 131: OSCTUNE = 0x00;
  3824  0077F4  6A9B               	clrf	3995,c	;volatile
  3825                           
  3826                           ; BSR set to: 0
  3827  0077F6  0012               	return		;funcret
  3828  0077F8                     __end_of_OSCILLATOR_Initialize:
  3829                           	opt stack 0
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           intcon	equ	0xFF2
  3835                           intcon2	equ	0xFF1
  3836                           postinc0	equ	0xFEE
  3837                           wreg	equ	0xFE8
  3838                           postdec2	equ	0xFDD
  3839                           fsr2h	equ	0xFDA
  3840                           fsr2l	equ	0xFD9
  3841                           
  3842 ;; *************** function _LORAWAN_PlatformInit *****************
  3843 ;; Defined at:
  3844 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : F/0
  3855 ;;		On exit  : F/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    9
  3865 ;; This function calls:
  3866 ;;		_DIO0_ISR_Lora_Init
  3867 ;;		_DIO1_ISR_Lora_Init
  3868 ;;		_DIO2_ISR_Lora_Init
  3869 ;;		_DIO3_ISR_Lora_Init
  3870 ;;		_DIO4_ISR_Lora_Init
  3871 ;;		_DIO5_ISR_Lora_Init
  3872 ;;		_SystemTimerInit
  3873 ;;		_TMR_ISR_Lora_Init
  3874 ;; This function is called by:
  3875 ;;		_SYSTEM_Initialize
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text13
  3880  007422                     __ptext13:
  3881                           	opt stack 0
  3882  007422                     _LORAWAN_PlatformInit:
  3883                           	opt stack 20
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;incstack = 0
  3890  007422  ECFC  F03B         	call	_TMR_ISR_Lora_Init	;wreg free
  3891                           
  3892                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3893  007426  EC0E  F03C         	call	_DIO0_ISR_Lora_Init	;wreg free
  3894                           
  3895                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3896  00742A  EC08  F03C         	call	_DIO1_ISR_Lora_Init	;wreg free
  3897                           
  3898                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3899  00742E  EC02  F03C         	call	_DIO2_ISR_Lora_Init	;wreg free
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3903  007432  ECAC  F03C         	call	_DIO3_ISR_Lora_Init	;wreg free
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3907  007436  ECAB  F03C         	call	_DIO4_ISR_Lora_Init	;wreg free
  3908                           
  3909                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3910  00743A  EC7B  F03C         	call	_DIO5_ISR_Lora_Init	;wreg free
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;lorawan_init.c: 81: SystemTimerInit();
  3914  00743E  EF9D  F03C         	goto	_SystemTimerInit	;wreg free
  3915  007442                     __end_of_LORAWAN_PlatformInit:
  3916                           	opt stack 0
  3917                           tblptru	equ	0xFF8
  3918                           tblptrh	equ	0xFF7
  3919                           tblptrl	equ	0xFF6
  3920                           tablat	equ	0xFF5
  3921                           intcon	equ	0xFF2
  3922                           intcon2	equ	0xFF1
  3923                           postinc0	equ	0xFEE
  3924                           wreg	equ	0xFE8
  3925                           postdec2	equ	0xFDD
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           
  3929 ;; *************** function _TMR_ISR_Lora_Init *****************
  3930 ;; Defined at:
  3931 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : F/0
  3942 ;;		On exit  : F/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;Total ram usage:        0 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    8
  3952 ;; This function calls:
  3953 ;;		_TMR1_SetInterruptHandler
  3954 ;; This function is called by:
  3955 ;;		_LORAWAN_PlatformInit
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text14
  3960  0077F8                     __ptext14:
  3961                           	opt stack 0
  3962  0077F8                     _TMR_ISR_Lora_Init:
  3963                           	opt stack 20
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;incstack = 0
  3970  0077F8  0E60               	movlw	low _TMR_ISR_lora
  3971  0077FA  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3972  0077FC  0E6A               	movlw	high _TMR_ISR_lora
  3973  0077FE  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3974  007800  EF1F  F03C         	goto	_TMR1_SetInterruptHandler	;wreg free
  3975  007804                     __end_of_TMR_ISR_Lora_Init:
  3976                           	opt stack 0
  3977                           tblptru	equ	0xFF8
  3978                           tblptrh	equ	0xFF7
  3979                           tblptrl	equ	0xFF6
  3980                           tablat	equ	0xFF5
  3981                           intcon	equ	0xFF2
  3982                           intcon2	equ	0xFF1
  3983                           postinc0	equ	0xFEE
  3984                           wreg	equ	0xFE8
  3985                           postdec2	equ	0xFDD
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           
  3989 ;; *************** function _TMR1_SetInterruptHandler *****************
  3990 ;; Defined at:
  3991 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3994 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : F/0
  4003 ;;		On exit  : F/0
  4004 ;;		Unchanged: F/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;Total ram usage:        2 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    7
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_TMR_ISR_Lora_Init
  4017 ;;		_TMR1_Initialize
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text15
  4022  00783E                     __ptext15:
  4023                           	opt stack 0
  4024  00783E                     _TMR1_SetInterruptHandler:
  4025                           	opt stack 21
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;incstack = 0
  4032  00783E  C064  F1EA         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4033  007842  C065  F1EB         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4034                           
  4035                           ; BSR set to: 0
  4036  007846  0012               	return		;funcret
  4037  007848                     __end_of_TMR1_SetInterruptHandler:
  4038                           	opt stack 0
  4039                           tblptru	equ	0xFF8
  4040                           tblptrh	equ	0xFF7
  4041                           tblptrl	equ	0xFF6
  4042                           tablat	equ	0xFF5
  4043                           intcon	equ	0xFF2
  4044                           intcon2	equ	0xFF1
  4045                           postinc0	equ	0xFEE
  4046                           wreg	equ	0xFE8
  4047                           postdec2	equ	0xFDD
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           
  4051 ;; *************** function _SystemTimerInit *****************
  4052 ;; Defined at:
  4053 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		None
  4062 ;; Tracked objects:
  4063 ;;		On entry : F/0
  4064 ;;		On exit  : F/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    7
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_LORAWAN_PlatformInit
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text16
  4082  00793A                     __ptext16:
  4083                           	opt stack 0
  4084  00793A                     _SystemTimerInit:
  4085                           	opt stack 21
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;sw_timer.c: 137: allocatedTimers = 0;
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;incstack = 0
  4092  00793A  6BEF               	clrf	_allocatedTimers& (0+255),b	;volatile
  4093                           
  4094                           ; BSR set to: 0
  4095  00793C  0012               	return		;funcret
  4096  00793E                     __end_of_SystemTimerInit:
  4097                           	opt stack 0
  4098                           tblptru	equ	0xFF8
  4099                           tblptrh	equ	0xFF7
  4100                           tblptrl	equ	0xFF6
  4101                           tablat	equ	0xFF5
  4102                           intcon	equ	0xFF2
  4103                           intcon2	equ	0xFF1
  4104                           postinc0	equ	0xFEE
  4105                           wreg	equ	0xFE8
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           
  4110 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4111 ;; Defined at:
  4112 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : F/0
  4123 ;;		On exit  : F/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    8
  4133 ;; This function calls:
  4134 ;;		_INT0_SetInterruptHandler
  4135 ;; This function is called by:
  4136 ;;		_LORAWAN_PlatformInit
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text17
  4141  0078F6                     __ptext17:
  4142                           	opt stack 0
  4143  0078F6                     _DIO5_ISR_Lora_Init:
  4144                           	opt stack 20
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;incstack = 0
  4151  0078F6  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4152  0078F8  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4153  0078FA  0C00               	retlw	0	;wreg free
  4154  0078FC                     __end_of_DIO5_ISR_Lora_Init:
  4155                           	opt stack 0
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           intcon	equ	0xFF2
  4161                           intcon2	equ	0xFF1
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           postdec2	equ	0xFDD
  4165                           fsr2h	equ	0xFDA
  4166                           fsr2l	equ	0xFD9
  4167                           
  4168 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4169 ;; Defined at:
  4170 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		None
  4179 ;; Tracked objects:
  4180 ;;		On entry : F/0
  4181 ;;		On exit  : F/0
  4182 ;;		Unchanged: F/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;Total ram usage:        0 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    7
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_LORAWAN_PlatformInit
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text18
  4199  007956                     __ptext18:
  4200                           	opt stack 0
  4201  007956                     _DIO4_ISR_Lora_Init:
  4202                           	opt stack 21
  4203                           
  4204                           ; BSR set to: 0
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;incstack = 0
  4208  007956  0012               	return		;funcret
  4209  007958                     __end_of_DIO4_ISR_Lora_Init:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           intcon	equ	0xFF2
  4216                           intcon2	equ	0xFF1
  4217                           postinc0	equ	0xFEE
  4218                           wreg	equ	0xFE8
  4219                           postdec2	equ	0xFDD
  4220                           fsr2h	equ	0xFDA
  4221                           fsr2l	equ	0xFD9
  4222                           
  4223 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4224 ;; Defined at:
  4225 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		None
  4234 ;; Tracked objects:
  4235 ;;		On entry : F/0
  4236 ;;		On exit  : F/0
  4237 ;;		Unchanged: F/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    7
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_LORAWAN_PlatformInit
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text19
  4254  007958                     __ptext19:
  4255                           	opt stack 0
  4256  007958                     _DIO3_ISR_Lora_Init:
  4257                           	opt stack 21
  4258                           
  4259                           ; BSR set to: 0
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;incstack = 0
  4263  007958  0012               	return		;funcret
  4264  00795A                     __end_of_DIO3_ISR_Lora_Init:
  4265                           	opt stack 0
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           intcon	equ	0xFF2
  4271                           intcon2	equ	0xFF1
  4272                           postinc0	equ	0xFEE
  4273                           wreg	equ	0xFE8
  4274                           postdec2	equ	0xFDD
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           
  4278 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4279 ;; Defined at:
  4280 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : F/0
  4291 ;;		On exit  : F/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    8
  4301 ;; This function calls:
  4302 ;;		_IOCB4_SetInterruptHandler
  4303 ;; This function is called by:
  4304 ;;		_LORAWAN_PlatformInit
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text20
  4309  007804                     __ptext20:
  4310                           	opt stack 0
  4311  007804                     _DIO2_ISR_Lora_Init:
  4312                           	opt stack 20
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;incstack = 0
  4319  007804  0E14               	movlw	low _DIO2_ISR_Lora
  4320  007806  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4321  007808  0E79               	movlw	high _DIO2_ISR_Lora
  4322  00780A  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4323  00780C  EF24  F03C         	goto	_IOCB4_SetInterruptHandler	;wreg free
  4324  007810                     __end_of_DIO2_ISR_Lora_Init:
  4325                           	opt stack 0
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           intcon	equ	0xFF2
  4331                           intcon2	equ	0xFF1
  4332                           postinc0	equ	0xFEE
  4333                           wreg	equ	0xFE8
  4334                           postdec2	equ	0xFDD
  4335                           fsr2h	equ	0xFDA
  4336                           fsr2l	equ	0xFD9
  4337                           
  4338 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4339 ;; Defined at:
  4340 ;;		line 133 in file "mcc_generated_files/pin_manager.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4343 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : F/0
  4352 ;;		On exit  : F/0
  4353 ;;		Unchanged: F/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        2 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    7
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_PIN_MANAGER_Initialize
  4366 ;;		_DIO2_ISR_Lora_Init
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text21
  4371  007848                     __ptext21:
  4372                           	opt stack 0
  4373  007848                     _IOCB4_SetInterruptHandler:
  4374                           	opt stack 21
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;pin_manager.c: 134: IOCB4_InterruptHandler = InterruptHandler;
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;incstack = 0
  4381  007848  C064  F1E8         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4382  00784C  C065  F1E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4383                           
  4384                           ; BSR set to: 0
  4385  007850  0012               	return		;funcret
  4386  007852                     __end_of_IOCB4_SetInterruptHandler:
  4387                           	opt stack 0
  4388                           tblptru	equ	0xFF8
  4389                           tblptrh	equ	0xFF7
  4390                           tblptrl	equ	0xFF6
  4391                           tablat	equ	0xFF5
  4392                           intcon	equ	0xFF2
  4393                           intcon2	equ	0xFF1
  4394                           postinc0	equ	0xFEE
  4395                           wreg	equ	0xFE8
  4396                           postdec2	equ	0xFDD
  4397                           fsr2h	equ	0xFDA
  4398                           fsr2l	equ	0xFD9
  4399                           
  4400 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4401 ;; Defined at:
  4402 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : F/0
  4413 ;;		On exit  : F/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    8
  4423 ;; This function calls:
  4424 ;;		_INT2_SetInterruptHandler
  4425 ;; This function is called by:
  4426 ;;		_LORAWAN_PlatformInit
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text22
  4431  007810                     __ptext22:
  4432                           	opt stack 0
  4433  007810                     _DIO1_ISR_Lora_Init:
  4434                           	opt stack 20
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;incstack = 0
  4441  007810  0E20               	movlw	low _DIO1_ISR_Lora
  4442  007812  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4443  007814  0E79               	movlw	high _DIO1_ISR_Lora
  4444  007816  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4445  007818  EF29  F03C         	goto	_INT2_SetInterruptHandler	;wreg free
  4446  00781C                     __end_of_DIO1_ISR_Lora_Init:
  4447                           	opt stack 0
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           intcon	equ	0xFF2
  4453                           intcon2	equ	0xFF1
  4454                           postinc0	equ	0xFEE
  4455                           wreg	equ	0xFE8
  4456                           postdec2	equ	0xFDD
  4457                           fsr2h	equ	0xFDA
  4458                           fsr2l	equ	0xFD9
  4459                           
  4460 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4461 ;; Defined at:
  4462 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : F/0
  4473 ;;		On exit  : F/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    8
  4483 ;; This function calls:
  4484 ;;		_INT1_SetInterruptHandler
  4485 ;; This function is called by:
  4486 ;;		_LORAWAN_PlatformInit
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text23
  4491  00781C                     __ptext23:
  4492                           	opt stack 0
  4493  00781C                     _DIO0_ISR_Lora_Init:
  4494                           	opt stack 20
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;incstack = 0
  4501  00781C  0E2C               	movlw	low _DIO0_ISR_Lora
  4502  00781E  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4503  007820  0E79               	movlw	high _DIO0_ISR_Lora
  4504  007822  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4505  007824  EF2E  F03C         	goto	_INT1_SetInterruptHandler	;wreg free
  4506  007828                     __end_of_DIO0_ISR_Lora_Init:
  4507                           	opt stack 0
  4508                           tblptru	equ	0xFF8
  4509                           tblptrh	equ	0xFF7
  4510                           tblptrl	equ	0xFF6
  4511                           tablat	equ	0xFF5
  4512                           intcon	equ	0xFF2
  4513                           intcon2	equ	0xFF1
  4514                           postinc0	equ	0xFEE
  4515                           wreg	equ	0xFE8
  4516                           postdec2	equ	0xFDD
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           
  4520 ;; *************** function _INTERRUPT_Initialize *****************
  4521 ;; Defined at:
  4522 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;		None
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		None
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;Total ram usage:        0 bytes
  4541 ;; Hardware stack levels used:    1
  4542 ;; Hardware stack levels required when called:    7
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		_SYSTEM_Initialize
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text24
  4551  00793E                     __ptext24:
  4552                           	opt stack 0
  4553  00793E                     _INTERRUPT_Initialize:
  4554                           	opt stack 22
  4555                           
  4556                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;incstack = 0
  4560  00793E  9ED0               	bcf	4048,7,c	;volatile
  4561  007940  0012               	return		;funcret
  4562  007942                     __end_of_INTERRUPT_Initialize:
  4563                           	opt stack 0
  4564                           tblptru	equ	0xFF8
  4565                           tblptrh	equ	0xFF7
  4566                           tblptrl	equ	0xFF6
  4567                           tablat	equ	0xFF5
  4568                           intcon	equ	0xFF2
  4569                           intcon2	equ	0xFF1
  4570                           postinc0	equ	0xFEE
  4571                           wreg	equ	0xFE8
  4572                           postdec2	equ	0xFDD
  4573                           fsr2h	equ	0xFDA
  4574                           fsr2l	equ	0xFD9
  4575                           
  4576 ;; *************** function _EXT_INT_Initialize *****************
  4577 ;; Defined at:
  4578 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : F/0
  4589 ;;		On exit  : F/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;Total ram usage:        0 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    8
  4599 ;; This function calls:
  4600 ;;		_INT0_SetInterruptHandler
  4601 ;;		_INT1_SetInterruptHandler
  4602 ;;		_INT2_SetInterruptHandler
  4603 ;; This function is called by:
  4604 ;;		_SYSTEM_Initialize
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text25
  4609  00710E                     __ptext25:
  4610                           	opt stack 0
  4611  00710E                     _EXT_INT_Initialize:
  4612                           	opt stack 21
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4616                           
  4617                           ;incstack = 0
  4618  00710E  90F0               	bcf	intcon3,0,c	;volatile
  4619                           
  4620                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4621  007110  8AF1               	bsf	intcon2,5,c	;volatile
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4625  007112  0E64               	movlw	low _INT1_DefaultInterruptHandler
  4626  007114  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4627  007116  0E79               	movlw	high _INT1_DefaultInterruptHandler
  4628  007118  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4629  00711A  EC2E  F03C         	call	_INT1_SetInterruptHandler	;wreg free
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4633  00711E  86F0               	bsf	intcon3,3,c	;volatile
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4637  007120  92F0               	bcf	intcon3,1,c	;volatile
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4641  007122  88F1               	bsf	intcon2,4,c	;volatile
  4642                           
  4643                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4644  007124  0E62               	movlw	low _INT2_DefaultInterruptHandler
  4645  007126  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4646  007128  0E79               	movlw	high _INT2_DefaultInterruptHandler
  4647  00712A  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4648  00712C  EC29  F03C         	call	_INT2_SetInterruptHandler	;wreg free
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4652  007130  88F0               	bsf	intcon3,4,c	;volatile
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4656  007132  92F2               	bcf	intcon,1,c	;volatile
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4660  007134  8CF1               	bsf	intcon2,6,c	;volatile
  4661                           
  4662                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4663  007136  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4664  007138  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4665  00713A  0C00               	retlw	0	;wreg free
  4666  00713C                     __end_of_EXT_INT_Initialize:
  4667                           	opt stack 0
  4668                           tblptru	equ	0xFF8
  4669                           tblptrh	equ	0xFF7
  4670                           tblptrl	equ	0xFF6
  4671                           tablat	equ	0xFF5
  4672                           intcon	equ	0xFF2
  4673                           intcon2	equ	0xFF1
  4674                           intcon3	equ	0xFF0
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           postdec2	equ	0xFDD
  4678                           fsr2h	equ	0xFDA
  4679                           fsr2l	equ	0xFD9
  4680                           
  4681 ;; *************** function _INT2_SetInterruptHandler *****************
  4682 ;; Defined at:
  4683 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4686 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0
  4693 ;; Tracked objects:
  4694 ;;		On entry : F/0
  4695 ;;		On exit  : F/0
  4696 ;;		Unchanged: F/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;Total ram usage:        2 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    7
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_EXT_INT_Initialize
  4709 ;;		_DIO1_ISR_Lora_Init
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text26
  4714  007852                     __ptext26:
  4715                           	opt stack 0
  4716  007852                     _INT2_SetInterruptHandler:
  4717                           	opt stack 20
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;incstack = 0
  4724  007852  C064  F1E6         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4725  007856  C065  F1E7         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4726                           
  4727                           ; BSR set to: 0
  4728  00785A  0012               	return		;funcret
  4729  00785C                     __end_of_INT2_SetInterruptHandler:
  4730                           	opt stack 0
  4731                           tblptru	equ	0xFF8
  4732                           tblptrh	equ	0xFF7
  4733                           tblptrl	equ	0xFF6
  4734                           tablat	equ	0xFF5
  4735                           intcon	equ	0xFF2
  4736                           intcon2	equ	0xFF1
  4737                           intcon3	equ	0xFF0
  4738                           postinc0	equ	0xFEE
  4739                           wreg	equ	0xFE8
  4740                           postdec2	equ	0xFDD
  4741                           fsr2h	equ	0xFDA
  4742                           fsr2l	equ	0xFD9
  4743                           
  4744 ;; *************** function _INT1_SetInterruptHandler *****************
  4745 ;; Defined at:
  4746 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4749 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0
  4756 ;; Tracked objects:
  4757 ;;		On entry : F/0
  4758 ;;		On exit  : F/0
  4759 ;;		Unchanged: F/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;Total ram usage:        2 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    7
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_EXT_INT_Initialize
  4772 ;;		_DIO0_ISR_Lora_Init
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text27
  4777  00785C                     __ptext27:
  4778                           	opt stack 0
  4779  00785C                     _INT1_SetInterruptHandler:
  4780                           	opt stack 20
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;incstack = 0
  4787  00785C  C064  F1E4         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4788  007860  C065  F1E5         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4789                           
  4790                           ; BSR set to: 0
  4791  007864  0012               	return		;funcret
  4792  007866                     __end_of_INT1_SetInterruptHandler:
  4793                           	opt stack 0
  4794                           tblptru	equ	0xFF8
  4795                           tblptrh	equ	0xFF7
  4796                           tblptrl	equ	0xFF6
  4797                           tablat	equ	0xFF5
  4798                           intcon	equ	0xFF2
  4799                           intcon2	equ	0xFF1
  4800                           intcon3	equ	0xFF0
  4801                           postinc0	equ	0xFEE
  4802                           wreg	equ	0xFE8
  4803                           postdec2	equ	0xFDD
  4804                           fsr2h	equ	0xFDA
  4805                           fsr2l	equ	0xFD9
  4806                           
  4807 ;; *************** function _INT0_SetInterruptHandler *****************
  4808 ;; Defined at:
  4809 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4812 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;		None
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  1    wreg      void 
  4817 ;; Registers used:
  4818 ;;		None
  4819 ;; Tracked objects:
  4820 ;;		On entry : F/0
  4821 ;;		On exit  : F/0
  4822 ;;		Unchanged: F/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;Total ram usage:        2 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    7
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_EXT_INT_Initialize
  4835 ;;		_DIO5_ISR_Lora_Init
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text28
  4840  00795A                     __ptext28:
  4841                           	opt stack 0
  4842  00795A                     _INT0_SetInterruptHandler:
  4843                           	opt stack 20
  4844                           
  4845                           ; BSR set to: 0
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;incstack = 0
  4849  00795A  0012               	return		;funcret
  4850  00795C                     __end_of_INT0_SetInterruptHandler:
  4851                           	opt stack 0
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           intcon	equ	0xFF2
  4857                           intcon2	equ	0xFF1
  4858                           intcon3	equ	0xFF0
  4859                           postinc0	equ	0xFEE
  4860                           wreg	equ	0xFE8
  4861                           postdec2	equ	0xFDD
  4862                           fsr2h	equ	0xFDA
  4863                           fsr2l	equ	0xFD9
  4864                           
  4865 ;; *************** function _LoRaWakeUp *****************
  4866 ;; Defined at:
  4867 ;;		line 273 in file "main.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : F/1
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    8
  4888 ;; This function calls:
  4889 ;;		_SPI2_Initialize
  4890 ;; This function is called by:
  4891 ;;		_main
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text29
  4896  0078B6                     __ptext29:
  4897                           	opt stack 0
  4898  0078B6                     _LoRaWakeUp:
  4899                           	opt stack 22
  4900                           
  4901                           ; BSR set to: 1
  4902                           ;main.c: 275: MSSP2MD = 0;
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;incstack = 0
  4906  0078B6  010F               	movlb	15	; () banked
  4907  0078B8  9F3E               	bcf	62,7,b	;volatile
  4908                           
  4909                           ; BSR set to: 15
  4910                           ;main.c: 276: SPI2_Initialize();
  4911  0078BA  EF14  F03C         	goto	_SPI2_Initialize	;wreg free
  4912  0078BE                     __end_of_LoRaWakeUp:
  4913                           	opt stack 0
  4914                           tblptru	equ	0xFF8
  4915                           tblptrh	equ	0xFF7
  4916                           tblptrl	equ	0xFF6
  4917                           tablat	equ	0xFF5
  4918                           intcon	equ	0xFF2
  4919                           intcon2	equ	0xFF1
  4920                           intcon3	equ	0xFF0
  4921                           postinc0	equ	0xFEE
  4922                           wreg	equ	0xFE8
  4923                           postdec2	equ	0xFDD
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           
  4927 ;; *************** function _SPI2_Initialize *****************
  4928 ;; Defined at:
  4929 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:        0 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    7
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_SYSTEM_Initialize
  4954 ;;		_LoRaWakeUp
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text30
  4959  007828                     __ptext30:
  4960                           	opt stack 0
  4961  007828                     _SPI2_Initialize:
  4962                           	opt stack 22
  4963                           
  4964                           ;spi2.c: 68: SSP2STAT = 0x40;
  4965                           
  4966                           ;incstack = 0
  4967  007828  0E40               	movlw	64
  4968  00782A  6E6D               	movwf	3949,c	;volatile
  4969                           
  4970                           ;spi2.c: 71: SSP2CON1 = 0x20;
  4971  00782C  0E20               	movlw	32
  4972  00782E  6E6C               	movwf	3948,c	;volatile
  4973                           
  4974                           ;spi2.c: 74: SSP2ADD = 0x00;
  4975  007830  6A6E               	clrf	3950,c	;volatile
  4976  007832  0012               	return		;funcret
  4977  007834                     __end_of_SPI2_Initialize:
  4978                           	opt stack 0
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           intcon	equ	0xFF2
  4984                           intcon2	equ	0xFF1
  4985                           intcon3	equ	0xFF0
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           
  4992 ;; *************** function _LoRaSleep *****************
  4993 ;; Defined at:
  4994 ;;		line 243 in file "main.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		None
  5003 ;; Tracked objects:
  5004 ;;		On entry : F/2
  5005 ;;		On exit  : F/F
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:        0 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:    7
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text31
  5023  007442                     __ptext31:
  5024                           	opt stack 0
  5025  007442                     _LoRaSleep:
  5026                           	opt stack 23
  5027                           
  5028                           ; BSR set to: 2
  5029                           ;main.c: 246: SSP2CON1 = 0x00;
  5030                           
  5031                           ;incstack = 0
  5032  007442  6A6C               	clrf	3948,c	;volatile
  5033                           
  5034                           ;main.c: 249: MSSP2MD = 1;
  5035  007444  010F               	movlb	15	; () banked
  5036  007446  8F3E               	bsf	62,7,b	;volatile
  5037                           
  5038                           ;main.c: 253: ANSD3 = 0;
  5039  007448  973B               	bcf	59,3,b	;volatile
  5040                           
  5041                           ;main.c: 254: TRISD3 = 0;
  5042  00744A  9695               	bcf	3989,3,c	;volatile
  5043                           
  5044                           ;main.c: 255: LATD3 = 1;
  5045  00744C  868C               	bsf	3980,3,c	;volatile
  5046                           
  5047                           ;main.c: 258: ANSD1 = 0;
  5048  00744E  933B               	bcf	59,1,b	;volatile
  5049                           
  5050                           ;main.c: 259: TRISD1 = 0;
  5051  007450  9295               	bcf	3989,1,c	;volatile
  5052                           
  5053                           ;main.c: 260: LATD1 = 0;
  5054  007452  928C               	bcf	3980,1,c	;volatile
  5055                           
  5056                           ;main.c: 263: ANSD4 = 0;
  5057  007454  993B               	bcf	59,4,b	;volatile
  5058                           
  5059                           ;main.c: 264: TRISD4 = 0;
  5060  007456  9895               	bcf	3989,4,c	;volatile
  5061                           
  5062                           ;main.c: 265: LATD4 = 0;
  5063  007458  988C               	bcf	3980,4,c	;volatile
  5064                           
  5065                           ;main.c: 268: ANSD0 = 0;
  5066  00745A  913B               	bcf	59,0,b	;volatile
  5067                           
  5068                           ;main.c: 269: TRISD0 = 0;
  5069  00745C  9095               	bcf	3989,0,c	;volatile
  5070                           
  5071                           ;main.c: 270: LATD0 = 0;
  5072  00745E  908C               	bcf	3980,0,c	;volatile
  5073                           
  5074                           ; BSR set to: 15
  5075  007460  0012               	return		;funcret
  5076  007462                     __end_of_LoRaSleep:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           intcon	equ	0xFF2
  5083                           intcon2	equ	0xFF1
  5084                           intcon3	equ	0xFF0
  5085                           postinc0	equ	0xFEE
  5086                           wreg	equ	0xFE8
  5087                           postdec2	equ	0xFDD
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           
  5091 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5092 ;; Defined at:
  5093 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5096 ;;		 -> nwkSKey(16), 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5103 ;; Tracked objects:
  5104 ;;		On entry : F/0
  5105 ;;		On exit  : D/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    8
  5115 ;; This function calls:
  5116 ;;		_memcpy
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text32
  5123  0071C2                     __ptext32:
  5124                           	opt stack 0
  5125  0071C2                     _LORAWAN_SetNetworkSessionKey:
  5126                           	opt stack 22
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5130                           
  5131                           ; BSR set to: 15
  5132                           ;incstack = 0
  5133  0071C2  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5134  0071C4  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5135  0071C6  B4D8               	btfsc	status,2,c
  5136  0071C8  0012               	return	
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;lorawan.c: 382: {
  5140                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5141  0071CA  0E22               	movlw	low (_loRa+34)
  5142  0071CC  6F64               	movwf	memcpy@d1& (0+255),b
  5143  0071CE  0E02               	movlw	high (_loRa+34)
  5144  0071D0  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5145  0071D2  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5146  0071D6  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5147  0071DA  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5148  0071DC  0E10               	movlw	16
  5149  0071DE  6F68               	movwf	memcpy@n& (0+255),b
  5150  0071E0  EC14  F034         	call	_memcpy	;wreg free
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5154  0071E4  0102               	movlb	2	; () banked
  5155  0071E6  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5156                           
  5157                           ; BSR set to: 2
  5158                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5159  0071E8  9902               	bcf	(_loRa+2)& (0+255),4,b
  5160  0071EA  0012               	return		;funcret
  5161  0071EC                     __end_of_LORAWAN_SetNetworkSessionKey:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           intcon	equ	0xFF2
  5168                           intcon2	equ	0xFF1
  5169                           intcon3	equ	0xFF0
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           postdec2	equ	0xFDD
  5173                           fsr2h	equ	0xFDA
  5174                           fsr2l	equ	0xFD9
  5175                           status	equ	0xFD8
  5176                           
  5177 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5178 ;; Defined at:
  5179 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		None
  5188 ;; Tracked objects:
  5189 ;;		On entry : F/0
  5190 ;;		On exit  : F/2
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:        4 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    7
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text33
  5208  007662                     __ptext33:
  5209                           	opt stack 0
  5210  007662                     _LORAWAN_SetDeviceAddress:
  5211                           	opt stack 23
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5215                           
  5216                           ;incstack = 0
  5217  007662  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5218  007666  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5219  00766A  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5220  00766E  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5221                           
  5222                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5223  007672  0102               	movlb	2	; () banked
  5224  007674  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5225                           
  5226                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5227  007676  9902               	bcf	(_loRa+2)& (0+255),4,b
  5228                           
  5229                           ; BSR set to: 2
  5230  007678  0012               	return		;funcret
  5231  00767A                     __end_of_LORAWAN_SetDeviceAddress:
  5232                           	opt stack 0
  5233                           tblptru	equ	0xFF8
  5234                           tblptrh	equ	0xFF7
  5235                           tblptrl	equ	0xFF6
  5236                           tablat	equ	0xFF5
  5237                           intcon	equ	0xFF2
  5238                           intcon2	equ	0xFF1
  5239                           intcon3	equ	0xFF0
  5240                           postinc0	equ	0xFEE
  5241                           wreg	equ	0xFE8
  5242                           postdec2	equ	0xFDD
  5243                           fsr2h	equ	0xFDA
  5244                           fsr2l	equ	0xFD9
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5248 ;; Defined at:
  5249 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5252 ;;		 -> appSKey(16), 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : F/0
  5261 ;;		On exit  : D/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:        2 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    8
  5271 ;; This function calls:
  5272 ;;		_memcpy
  5273 ;; This function is called by:
  5274 ;;		_main
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text34
  5279  0071EC                     __ptext34:
  5280                           	opt stack 0
  5281  0071EC                     _LORAWAN_SetApplicationSessionKey:
  5282                           	opt stack 22
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5286                           
  5287                           ; BSR set to: 2
  5288                           ;incstack = 0
  5289  0071EC  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5290  0071EE  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5291  0071F0  B4D8               	btfsc	status,2,c
  5292  0071F2  0012               	return	
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;lorawan.c: 397: {
  5296                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5297  0071F4  0E32               	movlw	low (_loRa+50)
  5298  0071F6  6F64               	movwf	memcpy@d1& (0+255),b
  5299  0071F8  0E02               	movlw	high (_loRa+50)
  5300  0071FA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5301  0071FC  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5302  007200  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5303  007204  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5304  007206  0E10               	movlw	16
  5305  007208  6F68               	movwf	memcpy@n& (0+255),b
  5306  00720A  EC14  F034         	call	_memcpy	;wreg free
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5310  00720E  0102               	movlb	2	; () banked
  5311  007210  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5312                           
  5313                           ; BSR set to: 2
  5314                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5315  007212  9902               	bcf	(_loRa+2)& (0+255),4,b
  5316  007214  0012               	return		;funcret
  5317  007216                     __end_of_LORAWAN_SetApplicationSessionKey:
  5318                           	opt stack 0
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           intcon	equ	0xFF2
  5324                           intcon2	equ	0xFF1
  5325                           intcon3	equ	0xFF0
  5326                           postinc0	equ	0xFEE
  5327                           wreg	equ	0xFE8
  5328                           postdec2	equ	0xFDD
  5329                           fsr2h	equ	0xFDA
  5330                           fsr2l	equ	0xFD9
  5331                           status	equ	0xFD8
  5332                           
  5333 ;; *************** function _LORAWAN_Mainloop *****************
  5334 ;; Defined at:
  5335 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/1
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;Total ram usage:        0 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; Hardware stack levels required when called:   18
  5356 ;; This function calls:
  5357 ;;		_INTERRUPT_GetDioStatus
  5358 ;;		_RADIO_DIO0
  5359 ;;		_RADIO_DIO1
  5360 ;;		_RADIO_DIO2
  5361 ;;		_RADIO_DIO3
  5362 ;;		_RADIO_DIO4
  5363 ;;		_RADIO_DIO5
  5364 ;;		_SwTimersExecute
  5365 ;; This function is called by:
  5366 ;;		_main
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text35
  5371  006E24                     __ptext35:
  5372                           	opt stack 0
  5373  006E24                     _LORAWAN_Mainloop:
  5374                           	opt stack 12
  5375                           
  5376                           ;lorawan.c: 2240: SwTimersExecute();
  5377                           
  5378                           ;incstack = 0
  5379  006E24  ECD8  F02B         	call	_SwTimersExecute	;wreg free
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5383  006E28  ECD3  F03B         	call	_INTERRUPT_GetDioStatus	;wreg free
  5384  006E2C  6FF1               	movwf	_localDioStatus& (0+255),b
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5388  006E2E  B1F1               	btfsc	_localDioStatus& (0+255),0,b
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;lorawan.c: 2246: {
  5392                           ;lorawan.c: 2247: RADIO_DIO0();
  5393  006E30  EC35  F032         	call	_RADIO_DIO0	;wreg free
  5394                           
  5395                           ;lorawan.c: 2248: }
  5396                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5397  006E34  0100               	movlb	0	; () banked
  5398  006E36  B3F1               	btfsc	_localDioStatus& (0+255),1,b
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;lorawan.c: 2250: {
  5402                           ;lorawan.c: 2251: RADIO_DIO1();
  5403  006E38  EC2F  F037         	call	_RADIO_DIO1	;wreg free
  5404                           
  5405                           ;lorawan.c: 2252: }
  5406                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5407  006E3C  0100               	movlb	0	; () banked
  5408  006E3E  B5F1               	btfsc	_localDioStatus& (0+255),2,b
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;lorawan.c: 2254: {
  5412                           ;lorawan.c: 2255: RADIO_DIO2();
  5413  006E40  ECEB  F035         	call	_RADIO_DIO2	;wreg free
  5414                           
  5415                           ;lorawan.c: 2256: }
  5416                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5417  006E44  0100               	movlb	0	; () banked
  5418  006E46  B7F1               	btfsc	_localDioStatus& (0+255),3,b
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;lorawan.c: 2258: {
  5422                           ;lorawan.c: 2259: RADIO_DIO3();
  5423  006E48  EC55  F03B         	call	_RADIO_DIO3	;wreg free
  5424                           
  5425                           ;lorawan.c: 2260: }
  5426                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5427  006E4C  0100               	movlb	0	; () banked
  5428  006E4E  B9F1               	btfsc	_localDioStatus& (0+255),4,b
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;lorawan.c: 2262: {
  5432                           ;lorawan.c: 2263: RADIO_DIO4();
  5433  006E50  EC49  F03B         	call	_RADIO_DIO4	;wreg free
  5434                           
  5435                           ;lorawan.c: 2264: }
  5436                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5437  006E54  0100               	movlb	0	; () banked
  5438  006E56  BBF1               	btfsc	_localDioStatus& (0+255),5,b
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;lorawan.c: 2266: {
  5442                           ;lorawan.c: 2267: RADIO_DIO5();
  5443  006E58  EC3D  F03B         	call	_RADIO_DIO5	;wreg free
  5444  006E5C  0012               	return		;funcret
  5445  006E5E                     __end_of_LORAWAN_Mainloop:
  5446                           	opt stack 0
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           intcon	equ	0xFF2
  5452                           intcon2	equ	0xFF1
  5453                           intcon3	equ	0xFF0
  5454                           postinc0	equ	0xFEE
  5455                           wreg	equ	0xFE8
  5456                           postdec2	equ	0xFDD
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function _SwTimersExecute *****************
  5462 ;; Defined at:
  5463 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  i               1  129[BANK0 ] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/1
  5474 ;;		On exit  : F/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;Total ram usage:        5 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:   17
  5484 ;; This function calls:
  5485 ;;		Absolute function
  5486 ;;		_AckRetransmissionCallback
  5487 ;;		_AutomaticReplyCallback
  5488 ;;		_DutyCycleCallback
  5489 ;;		_LORAWAN_LinkCheckCallback
  5490 ;;		_LORAWAN_ReceiveWindow1Callback
  5491 ;;		_LORAWAN_ReceiveWindow2Callback
  5492 ;;		_RADIO_RxFSKTimeout
  5493 ;;		_RADIO_WatchdogTimeout
  5494 ;;		_UnconfirmedTransmissionCallback
  5495 ;;		_UpdateJoinSuccessState
  5496 ;; This function is called by:
  5497 ;;		_LORAWAN_Mainloop
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text36
  5502  0057B0                     __ptext36:
  5503                           	opt stack 0
  5504  0057B0                     _SwTimersExecute:
  5505                           	opt stack 12
  5506                           
  5507                           ;sw_timer.c: 262: uint8_t i;
  5508                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5509                           
  5510                           ;incstack = 0
  5511  0057B0  9EF2               	bcf	intcon,7,c	;volatile
  5512                           
  5513                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5514  0057B2  0100               	movlb	0	; () banked
  5515  0057B4  6BE1               	clrf	SwTimersExecute@i& (0+255),b
  5516  0057B6  D050               	goto	l16034
  5517  0057B8                     l16020:
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;sw_timer.c: 266: {
  5521                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5522  0057B8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5523  0057BA  0D08               	mullw	8
  5524  0057BC  0E04               	movlw	low (_swTimers+4)
  5525  0057BE  24F3               	addwf	prodl,w,c
  5526  0057C0  6ED9               	movwf	fsr2l,c
  5527  0057C2  0E03               	movlw	high (_swTimers+4)
  5528  0057C4  20F4               	addwfc	prodh,w,c
  5529  0057C6  6EDA               	movwf	fsr2h,c
  5530  0057C8  04DE               	decf	postinc2,w,c
  5531  0057CA  E144               	bnz	l16032
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;sw_timer.c: 270: {
  5535                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5536  0057CC  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5537  0057CE  0D08               	mullw	8
  5538  0057D0  0E00               	movlw	low _swTimers
  5539  0057D2  24F3               	addwf	prodl,w,c
  5540  0057D4  6ED9               	movwf	fsr2l,c
  5541  0057D6  0E03               	movlw	high _swTimers
  5542  0057D8  20F4               	addwfc	prodh,w,c
  5543  0057DA  6EDA               	movwf	fsr2h,c
  5544  0057DC  50DE               	movf	postinc2,w,c
  5545  0057DE  10DE               	iorwf	postinc2,w,c
  5546  0057E0  10DE               	iorwf	postinc2,w,c
  5547  0057E2  10DE               	iorwf	postinc2,w,c
  5548  0057E4  E137               	bnz	l16032
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;sw_timer.c: 272: {
  5552                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5553  0057E6  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5554  0057E8  0D08               	mullw	8
  5555  0057EA  0E04               	movlw	low (_swTimers+4)
  5556  0057EC  24F3               	addwf	prodl,w,c
  5557  0057EE  6ED9               	movwf	fsr2l,c
  5558  0057F0  0E03               	movlw	high (_swTimers+4)
  5559  0057F2  20F4               	addwfc	prodh,w,c
  5560  0057F4  6EDA               	movwf	fsr2h,c
  5561  0057F6  6ADF               	clrf	indf2,c
  5562                           
  5563                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5564  0057F8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5565  0057FA  0D08               	mullw	8
  5566  0057FC  0E06               	movlw	low (_swTimers+6)
  5567  0057FE  24F3               	addwf	prodl,w,c
  5568  005800  6ED9               	movwf	fsr2l,c
  5569  005802  0E03               	movlw	high (_swTimers+6)
  5570  005804  20F4               	addwfc	prodh,w,c
  5571  005806  6EDA               	movwf	fsr2h,c
  5572  005808  50DE               	movf	postinc2,w,c
  5573  00580A  10DE               	iorwf	postinc2,w,c
  5574  00580C  E023               	bz	l16032
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;sw_timer.c: 275: {
  5578                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5579  00580E  8EF2               	bsf	intcon,7,c	;volatile
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5583  005810  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5584  005812  0D08               	mullw	8
  5585  005814  0E05               	movlw	low (_swTimers+5)
  5586  005816  24F3               	addwf	prodl,w,c
  5587  005818  6ED9               	movwf	fsr2l,c
  5588  00581A  0E03               	movlw	high (_swTimers+5)
  5589  00581C  20F4               	addwfc	prodh,w,c
  5590  00581E  6EDA               	movwf	fsr2h,c
  5591  005820  50DF               	movf	indf2,w,c
  5592  005822  6EE6               	movwf	postinc1,c
  5593  005824  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5594  005826  0D08               	mullw	8
  5595  005828  0E06               	movlw	low (_swTimers+6)
  5596  00582A  24F3               	addwf	prodl,w,c
  5597  00582C  6ED9               	movwf	fsr2l,c
  5598  00582E  0E03               	movlw	high (_swTimers+6)
  5599  005830  20F4               	addwfc	prodh,w,c
  5600  005832  6EDA               	movwf	fsr2h,c
  5601  005834  CFDE F0DD          	movff	postinc2,??_SwTimersExecute
  5602  005838  CFDD F0DE          	movff	postdec2,??_SwTimersExecute+1
  5603  00583C  D801               	call	u19378
  5604  00583E  D009               	goto	l16030
  5605  005840                     u19378:
  5606  005840  0005               	push	
  5607  005842  6EFA               	movwf	pclath,c
  5608  005844  51DD               	movf	??_SwTimersExecute& (0+255),w,b
  5609  005846  6EFD               	movwf	tosl,c
  5610  005848  51DE               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5611  00584A  6EFE               	movwf	tosh,c
  5612  00584C  6AFF               	clrf	tosu,c
  5613  00584E  50FA               	movf	pclath,w,c
  5614  005850  0012               	return		;indir
  5615  005852                     l16030:
  5616                           
  5617                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5618  005852  9EF2               	bcf	intcon,7,c	;volatile
  5619  005854                     l16032:
  5620  005854  0100               	movlb	0	; () banked
  5621  005856  2BE1               	incf	SwTimersExecute@i& (0+255),f,b
  5622  005858                     l16034:
  5623                           
  5624                           ; BSR set to: 0
  5625  005858  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5626  00585A  5DE1               	subwf	SwTimersExecute@i& (0+255),w,b
  5627  00585C  E3AD               	bnc	l16020
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;sw_timer.c: 279: }
  5631                           ;sw_timer.c: 280: }
  5632                           ;sw_timer.c: 281: }
  5633                           ;sw_timer.c: 282: }
  5634                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5635  00585E  8EF2               	bsf	intcon,7,c	;volatile
  5636                           
  5637                           ; BSR set to: 0
  5638  005860  0012               	return		;funcret
  5639  005862                     __end_of_SwTimersExecute:
  5640                           	opt stack 0
  5641                           tosu	equ	0xFFF
  5642                           tosh	equ	0xFFE
  5643                           tosl	equ	0xFFD
  5644                           pclath	equ	0xFFA
  5645                           tblptru	equ	0xFF8
  5646                           tblptrh	equ	0xFF7
  5647                           tblptrl	equ	0xFF6
  5648                           tablat	equ	0xFF5
  5649                           prodh	equ	0xFF4
  5650                           prodl	equ	0xFF3
  5651                           intcon	equ	0xFF2
  5652                           intcon2	equ	0xFF1
  5653                           intcon3	equ	0xFF0
  5654                           postinc0	equ	0xFEE
  5655                           wreg	equ	0xFE8
  5656                           postinc1	equ	0xFE6
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function _DutyCycleCallback *****************
  5665 ;; Defined at:
  5666 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  param           1  [STACK] unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  minim           4  [STACK] unsigned long 
  5671 ;;  i               1  [STACK] unsigned char 
  5672 ;;  found           1  [STACK] unsigned char 
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1  [STACK] void 
  5675 ;; Registers used:
  5676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  5677 ;; Tracked objects:
  5678 ;;		On entry : F/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used:    1
  5688 ;; Hardware stack levels required when called:   11
  5689 ;; This function calls:
  5690 ;;		_SwTimerSetTimeout
  5691 ;;		_SwTimerStart
  5692 ;;		___lldiv
  5693 ;; This function is called by:
  5694 ;;		_SetCallbackSoftwareTimers
  5695 ;;		_SwTimersExecute
  5696 ;; This function uses a reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text37
  5700  002120                     __ptext37:
  5701                           	opt stack 0
  5702  002120                     _DutyCycleCallback:
  5703                           	opt stack 0
  5704                           
  5705                           ; BSR set to: 0
  5706                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5707  002120  0E0A               	movlw	10
  5708  002122  26E1               	addwf	fsr1l,f,c
  5709  002124  0E00               	movlw	0
  5710  002126  22E2               	addwfc	fsr1h,f,c
  5711                           
  5712                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5713                           
  5714                           ;incstack = 0
  5715  002128  684E               	setf	btemp+8,c
  5716  00212A  684F               	setf	btemp+9,c
  5717  00212C  6850               	setf	btemp+10,c
  5718  00212E  6851               	setf	btemp+11,c
  5719                           
  5720                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5721  002130  0EFA               	movlw	-6
  5722  002132  C04E  FFE3         	movff	btemp+8,plusw1
  5723  002136  0EFB               	movlw	-5
  5724  002138  C04F  FFE3         	movff	btemp+9,plusw1
  5725  00213C  0EFC               	movlw	-4
  5726  00213E  C050  FFE3         	movff	btemp+10,plusw1
  5727  002142  0EFD               	movlw	-3
  5728  002144  C051  FFE3         	movff	btemp+11,plusw1
  5729                           
  5730                           ;lorawan_eu.c: 1224: bool found = 0;
  5731                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5732  002148  0EFF               	movlw	-1
  5733  00214A  6AE3               	clrf	plusw1,c
  5734                           
  5735                           ;lorawan_eu.c: 1225: uint8_t i;
  5736                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5737                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5738  00214C  0EFE               	movlw	-2
  5739  00214E  6AE3               	clrf	plusw1,c
  5740  002150                     l15036:
  5741                           
  5742                           ;lorawan_eu.c: 1228: {
  5743                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5744                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5745  002150  0EFE               	movlw	-2
  5746  002152  50E3               	movf	plusw1,w,c
  5747  002154  0D0E               	mullw	14
  5748  002156  0E04               	movlw	low (_Channels+4)
  5749  002158  24F3               	addwf	prodl,w,c
  5750  00215A  6ED9               	movwf	fsr2l,c
  5751  00215C  0E04               	movlw	high (_Channels+4)
  5752  00215E  20F4               	addwfc	prodh,w,c
  5753  002160  6EDA               	movwf	fsr2h,c
  5754  002162  04DE               	decf	postinc2,w,c
  5755  002164  E001 D0AA          	bnz	l15054
  5756                           
  5757                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5758  002168  0EFE               	movlw	-2
  5759  00216A  50E3               	movf	plusw1,w,c
  5760  00216C  0D0E               	mullw	14
  5761  00216E  0E08               	movlw	low (_Channels+8)
  5762  002170  24F3               	addwf	prodl,w,c
  5763  002172  6ED9               	movwf	fsr2l,c
  5764  002174  0E04               	movlw	high (_Channels+8)
  5765  002176  20F4               	addwfc	prodh,w,c
  5766  002178  6EDA               	movwf	fsr2h,c
  5767  00217A  50DE               	movf	postinc2,w,c
  5768  00217C  10DE               	iorwf	postinc2,w,c
  5769  00217E  10DE               	iorwf	postinc2,w,c
  5770  002180  10DE               	iorwf	postinc2,w,c
  5771  002182  E101 D09B          	bz	l15054
  5772                           
  5773                           ;lorawan_eu.c: 1231: {
  5774                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5775                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5776  002186  0EFE               	movlw	-2
  5777  002188  50E3               	movf	plusw1,w,c
  5778  00218A  0D0E               	mullw	14
  5779  00218C  0E08               	movlw	low (_Channels+8)
  5780  00218E  24F3               	addwf	prodl,w,c
  5781  002190  6ED9               	movwf	fsr2l,c
  5782  002192  0E04               	movlw	high (_Channels+8)
  5783  002194  20F4               	addwfc	prodh,w,c
  5784  002196  6EDA               	movwf	fsr2h,c
  5785  002198  50DE               	movf	postinc2,w,c
  5786  00219A  0102               	movlb	2	; () banked
  5787  00219C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5788  00219E  50DE               	movf	postinc2,w,c
  5789  0021A0  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5790  0021A2  50DE               	movf	postinc2,w,c
  5791  0021A4  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5792  0021A6  50DE               	movf	postinc2,w,c
  5793  0021A8  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5794  0021AA  E22F               	bc	l15044
  5795                           
  5796                           ; BSR set to: 2
  5797                           ;lorawan_eu.c: 1233: {
  5798                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5799                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5800  0021AC  0EFE               	movlw	-2
  5801  0021AE  50E3               	movf	plusw1,w,c
  5802  0021B0  0D0E               	mullw	14
  5803  0021B2  0E08               	movlw	low (_Channels+8)
  5804  0021B4  24F3               	addwf	prodl,w,c
  5805  0021B6  6ED9               	movwf	fsr2l,c
  5806  0021B8  0E04               	movlw	high (_Channels+8)
  5807  0021BA  20F4               	addwfc	prodh,w,c
  5808  0021BC  6EDA               	movwf	fsr2h,c
  5809  0021BE  CFDE F04E          	movff	postinc2,btemp+8
  5810  0021C2  CFDE F04F          	movff	postinc2,btemp+9
  5811  0021C6  CFDE F050          	movff	postinc2,btemp+10
  5812  0021CA  CFDE F051          	movff	postinc2,btemp+11
  5813  0021CE  51C8               	movf	(_loRa+200)& (0+255),w,b
  5814  0021D0  5C4E               	subwf	btemp+8,w,c
  5815  0021D2  6E4A               	movwf	btemp+4,c
  5816  0021D4  51C9               	movf	(_loRa+201)& (0+255),w,b
  5817  0021D6  584F               	subwfb	btemp+9,w,c
  5818  0021D8  6E4B               	movwf	btemp+5,c
  5819  0021DA  51CA               	movf	(_loRa+202)& (0+255),w,b
  5820  0021DC  5850               	subwfb	btemp+10,w,c
  5821  0021DE  6E4C               	movwf	btemp+6,c
  5822  0021E0  51CB               	movf	(_loRa+203)& (0+255),w,b
  5823  0021E2  5851               	subwfb	btemp+11,w,c
  5824  0021E4  6E4D               	movwf	btemp+7,c
  5825                           
  5826                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5827  0021E6  0EFE               	movlw	-2
  5828  0021E8  50E3               	movf	plusw1,w,c
  5829  0021EA  0D0E               	mullw	14
  5830  0021EC  0E08               	movlw	low (_Channels+8)
  5831  0021EE  24F3               	addwf	prodl,w,c
  5832  0021F0  6ED9               	movwf	fsr2l,c
  5833  0021F2  0E04               	movlw	high (_Channels+8)
  5834  0021F4  20F4               	addwfc	prodh,w,c
  5835  0021F6  6EDA               	movwf	fsr2h,c
  5836  0021F8  C04A  FFDE         	movff	btemp+4,postinc2
  5837  0021FC  C04B  FFDE         	movff	btemp+5,postinc2
  5838  002200  C04C  FFDE         	movff	btemp+6,postinc2
  5839  002204  C04D  FFDE         	movff	btemp+7,postinc2
  5840                           
  5841                           ;lorawan_eu.c: 1235: }
  5842  002208  D00D               	goto	l15046
  5843  00220A                     l15044:
  5844                           
  5845                           ; BSR set to: 2
  5846                           ;lorawan_eu.c: 1236: else
  5847                           ;lorawan_eu.c: 1237: {
  5848                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5849                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5850  00220A  0EFE               	movlw	-2
  5851  00220C  50E3               	movf	plusw1,w,c
  5852  00220E  0D0E               	mullw	14
  5853  002210  0E08               	movlw	low (_Channels+8)
  5854  002212  24F3               	addwf	prodl,w,c
  5855  002214  6ED9               	movwf	fsr2l,c
  5856  002216  0E04               	movlw	high (_Channels+8)
  5857  002218  20F4               	addwfc	prodh,w,c
  5858  00221A  6EDA               	movwf	fsr2h,c
  5859  00221C  6ADE               	clrf	postinc2,c
  5860  00221E  6ADE               	clrf	postinc2,c
  5861  002220  6ADE               	clrf	postinc2,c
  5862  002222  6ADD               	clrf	postdec2,c
  5863  002224                     l15046:
  5864                           
  5865                           ; BSR set to: 2
  5866                           ;lorawan_eu.c: 1239: }
  5867                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5868                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5869  002224  0EFE               	movlw	-2
  5870  002226  50E3               	movf	plusw1,w,c
  5871  002228  0D0E               	mullw	14
  5872  00222A  0E08               	movlw	low (_Channels+8)
  5873  00222C  24F3               	addwf	prodl,w,c
  5874  00222E  6ED9               	movwf	fsr2l,c
  5875  002230  0E04               	movlw	high (_Channels+8)
  5876  002232  20F4               	addwfc	prodh,w,c
  5877  002234  6EDA               	movwf	fsr2h,c
  5878                           
  5879                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5880  002236  0EFA               	movlw	-6
  5881  002238  CFE3 F047          	movff	plusw1,btemp+1
  5882  00223C  50DE               	movf	postinc2,w,c
  5883  00223E  5C47               	subwf	btemp+1,w,c
  5884  002240  0EFB               	movlw	-5
  5885  002242  CFE3 F047          	movff	plusw1,btemp+1
  5886  002246  50DE               	movf	postinc2,w,c
  5887  002248  5847               	subwfb	btemp+1,w,c
  5888  00224A  0EFC               	movlw	-4
  5889  00224C  CFE3 F047          	movff	plusw1,btemp+1
  5890  002250  50DE               	movf	postinc2,w,c
  5891  002252  5847               	subwfb	btemp+1,w,c
  5892  002254  0EFD               	movlw	-3
  5893  002256  CFE3 F047          	movff	plusw1,btemp+1
  5894  00225A  50DE               	movf	postinc2,w,c
  5895  00225C  5847               	subwfb	btemp+1,w,c
  5896  00225E  E32E               	bnc	l15054
  5897                           
  5898                           ; BSR set to: 2
  5899                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5900  002260  0EFE               	movlw	-2
  5901  002262  50E3               	movf	plusw1,w,c
  5902  002264  0D0E               	mullw	14
  5903  002266  0E08               	movlw	low (_Channels+8)
  5904  002268  24F3               	addwf	prodl,w,c
  5905  00226A  6ED9               	movwf	fsr2l,c
  5906  00226C  0E04               	movlw	high (_Channels+8)
  5907  00226E  20F4               	addwfc	prodh,w,c
  5908  002270  6EDA               	movwf	fsr2h,c
  5909  002272  50DE               	movf	postinc2,w,c
  5910  002274  10DE               	iorwf	postinc2,w,c
  5911  002276  10DE               	iorwf	postinc2,w,c
  5912  002278  10DE               	iorwf	postinc2,w,c
  5913  00227A  E020               	bz	l15054
  5914                           
  5915                           ; BSR set to: 2
  5916                           ;lorawan_eu.c: 1241: {
  5917                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5918                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5919  00227C  0EFE               	movlw	-2
  5920  00227E  50E3               	movf	plusw1,w,c
  5921  002280  0D0E               	mullw	14
  5922  002282  0E08               	movlw	low (_Channels+8)
  5923  002284  24F3               	addwf	prodl,w,c
  5924  002286  6ED9               	movwf	fsr2l,c
  5925  002288  0E04               	movlw	high (_Channels+8)
  5926  00228A  20F4               	addwfc	prodh,w,c
  5927  00228C  6EDA               	movwf	fsr2h,c
  5928  00228E  CFDE F04E          	movff	postinc2,btemp+8
  5929  002292  CFDE F04F          	movff	postinc2,btemp+9
  5930  002296  CFDE F050          	movff	postinc2,btemp+10
  5931  00229A  CFDE F051          	movff	postinc2,btemp+11
  5932                           
  5933                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5934  00229E  0EFA               	movlw	-6
  5935  0022A0  C04E  FFE3         	movff	btemp+8,plusw1
  5936  0022A4  0EFB               	movlw	-5
  5937  0022A6  C04F  FFE3         	movff	btemp+9,plusw1
  5938  0022AA  0EFC               	movlw	-4
  5939  0022AC  C050  FFE3         	movff	btemp+10,plusw1
  5940  0022B0  0EFD               	movlw	-3
  5941  0022B2  C051  FFE3         	movff	btemp+11,plusw1
  5942                           
  5943                           ; BSR set to: 2
  5944                           ;lorawan_eu.c: 1243: found = 1;
  5945                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5946  0022B6  0EFF               	movlw	-1
  5947  0022B8  6AE3               	clrf	plusw1,c
  5948  0022BA  2AE3               	incf	plusw1,f,c
  5949  0022BC                     l15054:
  5950                           
  5951                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5952  0022BC  0EFE               	movlw	-2
  5953  0022BE  2AE3               	incf	plusw1,f,c
  5954                           
  5955                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5956  0022C0  CFE3 F047          	movff	plusw1,btemp+1
  5957  0022C4  0E0F               	movlw	15
  5958  0022C6  6447               	cpfsgt	btemp+1,c
  5959  0022C8  D743               	goto	l15036
  5960                           
  5961                           ;lorawan_eu.c: 1244: }
  5962                           ;lorawan_eu.c: 1245: }
  5963                           ;lorawan_eu.c: 1246: }
  5964                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5965                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5966  0022CA  0EFF               	movlw	-1
  5967  0022CC  04E3               	decf	plusw1,w,c
  5968  0022CE  E001 D096          	bnz	l1297
  5969                           
  5970                           ;lorawan_eu.c: 1248: {
  5971                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  5972                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5973  0022D2  50E1               	movf	fsr1l,w,c
  5974  0022D4  0FFA               	addlw	-6
  5975  0022D6  6ED9               	movwf	fsr2l,c
  5976  0022D8  50E2               	movf	fsr1h,w,c
  5977  0022DA  6EDA               	movwf	fsr2h,c
  5978  0022DC  0EFF               	movlw	255
  5979  0022DE  22DA               	addwfc	fsr2h,f,c
  5980  0022E0  CFDE F2C8          	movff	postinc2,_loRa+200
  5981  0022E4  CFDE F2C9          	movff	postinc2,_loRa+201
  5982  0022E8  CFDE F2CA          	movff	postinc2,_loRa+202
  5983  0022EC  CFDE F2CB          	movff	postinc2,_loRa+203
  5984                           
  5985                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  5986                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5987  0022F0  0EFD               	movlw	-3
  5988  0022F2  50E3               	movf	plusw1,w,c
  5989  0022F4  E10D               	bnz	u17590
  5990  0022F6  0EFA               	movlw	-6
  5991  0022F8  28E3               	incf	plusw1,w,c
  5992  0022FA  0EFB               	movlw	-5
  5993  0022FC  CFE3 F047          	movff	plusw1,btemp+1
  5994  002300  0EFF               	movlw	255
  5995  002302  5A47               	subwfb	btemp+1,f,c
  5996  002304  0EFC               	movlw	-4
  5997  002306  CFE3 F047          	movff	plusw1,btemp+1
  5998  00230A  0E0F               	movlw	15
  5999  00230C  5A47               	subwfb	btemp+1,f,c
  6000  00230E  E328               	bnc	l15066
  6001  002310                     u17590:
  6002                           
  6003                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6004  002310  50E1               	movf	fsr1l,w,c
  6005  002312  0FFA               	addlw	-6
  6006  002314  6ED9               	movwf	fsr2l,c
  6007  002316  50E2               	movf	fsr1h,w,c
  6008  002318  6EDA               	movwf	fsr2h,c
  6009  00231A  0EFF               	movlw	255
  6010  00231C  22DA               	addwfc	fsr2h,f,c
  6011  00231E  CFDE F064          	movff	postinc2,___lldiv@dividend
  6012  002322  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6013  002326  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6014  00232A  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6015  00232E  0E7D               	movlw	125
  6016  002330  0100               	movlb	0	; () banked
  6017  002332  6F68               	movwf	___lldiv@divisor& (0+255),b
  6018  002334  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6019  002336  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6020  002338  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6021  00233A  EC1A  F030         	call	___lldiv	;wreg free
  6022  00233E  C064  F04E         	movff	?___lldiv,btemp+8
  6023  002342  C065  F04F         	movff	?___lldiv+1,btemp+9
  6024  002346  C066  F050         	movff	?___lldiv+2,btemp+10
  6025  00234A  C067  F051         	movff	?___lldiv+3,btemp+11
  6026  00234E  0E0C               	movlw	12
  6027  002350                     u17605:
  6028  002350  90D8               	bcf	status,0,c
  6029  002352  364E               	rlcf	btemp+8,f,c
  6030  002354  364F               	rlcf	btemp+9,f,c
  6031  002356  3650               	rlcf	btemp+10,f,c
  6032  002358  3651               	rlcf	btemp+11,f,c
  6033  00235A  2EE8               	decfsz	wreg,f,c
  6034  00235C  D7F9               	goto	u17605
  6035  00235E  D02C               	goto	L1
  6036  002360                     l15066:
  6037                           
  6038                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6039  002360  0EFA               	movlw	-6
  6040  002362  CFE3 F04E          	movff	plusw1,btemp+8
  6041  002366  0EFB               	movlw	-5
  6042  002368  CFE3 F04F          	movff	plusw1,btemp+9
  6043  00236C  0EFC               	movlw	-4
  6044  00236E  CFE3 F050          	movff	plusw1,btemp+10
  6045  002372  0EFD               	movlw	-3
  6046  002374  CFE3 F051          	movff	plusw1,btemp+11
  6047  002378  0E0C               	movlw	12
  6048  00237A                     u17615:
  6049  00237A  90D8               	bcf	status,0,c
  6050  00237C  364E               	rlcf	btemp+8,f,c
  6051  00237E  364F               	rlcf	btemp+9,f,c
  6052  002380  3650               	rlcf	btemp+10,f,c
  6053  002382  3651               	rlcf	btemp+11,f,c
  6054  002384  2EE8               	decfsz	wreg,f,c
  6055  002386  D7F9               	goto	u17615
  6056  002388  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6057  00238C  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6058  002390  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6059  002394  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6060  002398  0E7D               	movlw	125
  6061  00239A  0100               	movlb	0	; () banked
  6062  00239C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6063  00239E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6064  0023A0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6065  0023A2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6066  0023A4  EC1A  F030         	call	___lldiv	;wreg free
  6067  0023A8  C064  F04E         	movff	?___lldiv,btemp+8
  6068  0023AC  C065  F04F         	movff	?___lldiv+1,btemp+9
  6069  0023B0  C066  F050         	movff	?___lldiv+2,btemp+10
  6070  0023B4  C067  F051         	movff	?___lldiv+3,btemp+11
  6071  0023B8                     L1:
  6072                           
  6073                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6074  0023B8  0EF6               	movlw	-10
  6075  0023BA  C04E  FFE3         	movff	btemp+8,plusw1
  6076  0023BE  0EF7               	movlw	-9
  6077  0023C0  C04F  FFE3         	movff	btemp+9,plusw1
  6078  0023C4  0EF8               	movlw	-8
  6079  0023C6  C050  FFE3         	movff	btemp+10,plusw1
  6080  0023CA  0EF9               	movlw	-7
  6081  0023CC  C051  FFE3         	movff	btemp+11,plusw1
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6085  0023D0  50E1               	movf	fsr1l,w,c
  6086  0023D2  0FF6               	addlw	-10
  6087  0023D4  6ED9               	movwf	fsr2l,c
  6088  0023D6  50E2               	movf	fsr1h,w,c
  6089  0023D8  6EDA               	movwf	fsr2h,c
  6090  0023DA  0EFF               	movlw	255
  6091  0023DC  22DA               	addwfc	fsr2h,f,c
  6092  0023DE  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6093  0023E2  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6094  0023E6  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6095  0023EA  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6096  0023EE  0102               	movlb	2	; () banked
  6097  0023F0  51E9               	movf	(_loRa+233)& (0+255),w,b
  6098  0023F2  EC75  F036         	call	_SwTimerSetTimeout
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6102  0023F6  0102               	movlb	2	; () banked
  6103  0023F8  51E9               	movf	(_loRa+233)& (0+255),w,b
  6104  0023FA  EC58  F02E         	call	_SwTimerStart
  6105  0023FE                     l1297:
  6106                           
  6107                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6108  0023FE  0EF5               	movlw	245
  6109  002400  26E1               	addwf	fsr1l,f,c
  6110  002402  0EFF               	movlw	255
  6111  002404  22E2               	addwfc	fsr1h,f,c
  6112  002406  0CFF               	retlw	255	;funcret
  6113  002408                     __end_of_DutyCycleCallback:
  6114                           	opt stack 0
  6115                           tosu	equ	0xFFF
  6116                           tosh	equ	0xFFE
  6117                           tosl	equ	0xFFD
  6118                           pclath	equ	0xFFA
  6119                           tblptru	equ	0xFF8
  6120                           tblptrh	equ	0xFF7
  6121                           tblptrl	equ	0xFF6
  6122                           tablat	equ	0xFF5
  6123                           prodh	equ	0xFF4
  6124                           prodl	equ	0xFF3
  6125                           intcon	equ	0xFF2
  6126                           intcon2	equ	0xFF1
  6127                           intcon3	equ	0xFF0
  6128                           postinc0	equ	0xFEE
  6129                           wreg	equ	0xFE8
  6130                           postinc1	equ	0xFE6
  6131                           plusw1	equ	0xFE3
  6132                           fsr1h	equ	0xFE2
  6133                           fsr1l	equ	0xFE1
  6134                           indf2	equ	0xFDF
  6135                           postinc2	equ	0xFDE
  6136                           postdec2	equ	0xFDD
  6137                           fsr2h	equ	0xFDA
  6138                           fsr2l	equ	0xFD9
  6139                           status	equ	0xFD8
  6140                           
  6141 ;; *************** function _UpdateJoinSuccessState *****************
  6142 ;; Defined at:
  6143 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  param           1  [STACK] unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1  [STACK] void 
  6150 ;; Registers used:
  6151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6152 ;; Tracked objects:
  6153 ;;		On entry : F/0
  6154 ;;		On exit  : F/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;Total ram usage:        0 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:   11
  6164 ;; This function calls:
  6165 ;;		_RxJoinResponse
  6166 ;;		_SwTimerSetTimeout
  6167 ;;		_SwTimerStart
  6168 ;;		___lldiv
  6169 ;; This function is called by:
  6170 ;;		_SetCallbackSoftwareTimers
  6171 ;;		_LORAWAN_RxDone
  6172 ;;		_SwTimersExecute
  6173 ;; This function uses a reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text38
  6177  004524                     __ptext38:
  6178                           	opt stack 0
  6179  004524                     _UpdateJoinSuccessState:
  6180                           	opt stack 0
  6181                           
  6182                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6183  004524  52E6               	movf	postinc1,f,c
  6184  004526  52E6               	movf	postinc1,f,c
  6185  004528  52E6               	movf	postinc1,f,c
  6186  00452A  52E6               	movf	postinc1,f,c
  6187                           
  6188                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6189                           
  6190                           ;incstack = 0
  6191  00452C  0102               	movlb	2	; () banked
  6192  00452E  9500               	bcf	_loRa& (0+255),2,b
  6193                           
  6194                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6195  004530  8902               	bsf	(_loRa+2)& (0+255),4,b
  6196                           
  6197                           ; BSR set to: 2
  6198                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6199  004532  0EF0               	movlw	-16
  6200  004534  1702               	andwf	(_loRa+2)& (0+255),f,b
  6201                           
  6202                           ; BSR set to: 2
  6203                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6204  004536  6BD0               	clrf	(_loRa+208)& (0+255),b
  6205  004538  6BD1               	clrf	(_loRa+209)& (0+255),b
  6206                           
  6207                           ; BSR set to: 2
  6208                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6209  00453A  6BEE               	clrf	(_loRa+238)& (0+255),b
  6210                           
  6211                           ; BSR set to: 2
  6212                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6213  00453C  A503               	btfss	(_loRa+3)& (0+255),2,b
  6214  00453E  D074               	goto	l13998
  6215                           
  6216                           ; BSR set to: 2
  6217                           ;lorawan.c: 1052: {
  6218                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6219  004540  51CF               	movf	(_loRa+207)& (0+255),w,b
  6220  004542  E106               	bnz	u15660
  6221  004544  29CC               	incf	(_loRa+204)& (0+255),w,b
  6222  004546  0EFF               	movlw	255
  6223  004548  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6224  00454A  0E0F               	movlw	15
  6225  00454C  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6226  00454E  E321               	bnc	l13992
  6227  004550                     u15660:
  6228                           
  6229                           ; BSR set to: 2
  6230  004550  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6231  004554  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6232  004558  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6233  00455C  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6234  004560  0E7D               	movlw	125
  6235  004562  0100               	movlb	0	; () banked
  6236  004564  6F68               	movwf	___lldiv@divisor& (0+255),b
  6237  004566  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6238  004568  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6239  00456A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6240  00456C  EC1A  F030         	call	___lldiv	;wreg free
  6241  004570  C064  F04E         	movff	?___lldiv,btemp+8
  6242  004574  C065  F04F         	movff	?___lldiv+1,btemp+9
  6243  004578  C066  F050         	movff	?___lldiv+2,btemp+10
  6244  00457C  C067  F051         	movff	?___lldiv+3,btemp+11
  6245  004580  0E0C               	movlw	12
  6246  004582                     u15675:
  6247  004582  90D8               	bcf	status,0,c
  6248  004584  364E               	rlcf	btemp+8,f,c
  6249  004586  364F               	rlcf	btemp+9,f,c
  6250  004588  3650               	rlcf	btemp+10,f,c
  6251  00458A  3651               	rlcf	btemp+11,f,c
  6252  00458C  2EE8               	decfsz	wreg,f,c
  6253  00458E  D7F9               	goto	u15675
  6254  004590  D028               	goto	L2
  6255  004592                     l13992:
  6256                           
  6257                           ; BSR set to: 2
  6258  004592  C2CC  F04E         	movff	_loRa+204,btemp+8
  6259  004596  C2CD  F04F         	movff	_loRa+205,btemp+9
  6260  00459A  C2CE  F050         	movff	_loRa+206,btemp+10
  6261  00459E  C2CF  F051         	movff	_loRa+207,btemp+11
  6262  0045A2  0E0C               	movlw	12
  6263  0045A4                     u15685:
  6264  0045A4  90D8               	bcf	status,0,c
  6265  0045A6  364E               	rlcf	btemp+8,f,c
  6266  0045A8  364F               	rlcf	btemp+9,f,c
  6267  0045AA  3650               	rlcf	btemp+10,f,c
  6268  0045AC  3651               	rlcf	btemp+11,f,c
  6269  0045AE  2EE8               	decfsz	wreg,f,c
  6270  0045B0  D7F9               	goto	u15685
  6271  0045B2  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6272  0045B6  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6273  0045BA  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6274  0045BE  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6275  0045C2  0E7D               	movlw	125
  6276  0045C4  0100               	movlb	0	; () banked
  6277  0045C6  6F68               	movwf	___lldiv@divisor& (0+255),b
  6278  0045C8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6279  0045CA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6280  0045CC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6281  0045CE  EC1A  F030         	call	___lldiv	;wreg free
  6282  0045D2  C064  F04E         	movff	?___lldiv,btemp+8
  6283  0045D6  C065  F04F         	movff	?___lldiv+1,btemp+9
  6284  0045DA  C066  F050         	movff	?___lldiv+2,btemp+10
  6285  0045DE  C067  F051         	movff	?___lldiv+3,btemp+11
  6286  0045E2                     L2:
  6287                           
  6288                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6289  0045E2  0EFC               	movlw	-4
  6290  0045E4  C04E  FFE3         	movff	btemp+8,plusw1
  6291  0045E8  0EFD               	movlw	-3
  6292  0045EA  C04F  FFE3         	movff	btemp+9,plusw1
  6293  0045EE  0EFE               	movlw	-2
  6294  0045F0  C050  FFE3         	movff	btemp+10,plusw1
  6295  0045F4  0EFF               	movlw	-1
  6296  0045F6  C051  FFE3         	movff	btemp+11,plusw1
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6300  0045FA  50E1               	movf	fsr1l,w,c
  6301  0045FC  0FFC               	addlw	-4
  6302  0045FE  6ED9               	movwf	fsr2l,c
  6303  004600  50E2               	movf	fsr1h,w,c
  6304  004602  6EDA               	movwf	fsr2h,c
  6305  004604  0EFF               	movlw	255
  6306  004606  22DA               	addwfc	fsr2h,f,c
  6307  004608  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6308  00460C  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6309  004610  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6310  004614  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6311  004618  0102               	movlb	2	; () banked
  6312  00461A  51E7               	movf	(_loRa+231)& (0+255),w,b
  6313  00461C  EC75  F036         	call	_SwTimerSetTimeout
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6317  004620  0102               	movlb	2	; () banked
  6318  004622  51E7               	movf	(_loRa+231)& (0+255),w,b
  6319  004624  EC58  F02E         	call	_SwTimerStart
  6320  004628                     l13998:
  6321                           
  6322                           ;lorawan.c: 1055: }
  6323                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6324  004628  0100               	movlb	0	; () banked
  6325  00462A  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6326  00462C  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
  6327  00462E  E00B               	bz	l2090
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;lorawan.c: 1058: {
  6331                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6332  004630  D801               	call	u15708
  6333  004632  D009               	goto	l2090
  6334  004634                     u15708:
  6335  004634  0005               	push	
  6336  004636  6EFA               	movwf	pclath,c
  6337  004638  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6338  00463A  6EFD               	movwf	tosl,c
  6339  00463C  51EB               	movf	(_rxPayload+3)& (0+255),w,b
  6340  00463E  6EFE               	movwf	tosh,c
  6341  004640  6AFF               	clrf	tosu,c
  6342  004642  50FA               	movf	pclath,w,c
  6343  004644  0C01               	retlw	1	;indir
  6344  004646                     l2090:
  6345                           
  6346                           ; BSR set to: 0
  6347                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6348  004646  0EFB               	movlw	251
  6349  004648  26E1               	addwf	fsr1l,f,c
  6350  00464A  0EFF               	movlw	255
  6351  00464C  22E2               	addwfc	fsr1h,f,c
  6352  00464E  0CFF               	retlw	255	;funcret
  6353  004650                     __end_of_UpdateJoinSuccessState:
  6354                           	opt stack 0
  6355                           tosu	equ	0xFFF
  6356                           tosh	equ	0xFFE
  6357                           tosl	equ	0xFFD
  6358                           pclath	equ	0xFFA
  6359                           tblptru	equ	0xFF8
  6360                           tblptrh	equ	0xFF7
  6361                           tblptrl	equ	0xFF6
  6362                           tablat	equ	0xFF5
  6363                           prodh	equ	0xFF4
  6364                           prodl	equ	0xFF3
  6365                           intcon	equ	0xFF2
  6366                           intcon2	equ	0xFF1
  6367                           intcon3	equ	0xFF0
  6368                           postinc0	equ	0xFEE
  6369                           wreg	equ	0xFE8
  6370                           postinc1	equ	0xFE6
  6371                           plusw1	equ	0xFE3
  6372                           fsr1h	equ	0xFE2
  6373                           fsr1l	equ	0xFE1
  6374                           indf2	equ	0xFDF
  6375                           postinc2	equ	0xFDE
  6376                           postdec2	equ	0xFDD
  6377                           fsr2h	equ	0xFDA
  6378                           fsr2l	equ	0xFD9
  6379                           status	equ	0xFD8
  6380                           
  6381 ;; *************** function _AutomaticReplyCallback *****************
  6382 ;; Defined at:
  6383 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  param           1  [STACK] unsigned char 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1  [STACK] void 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : F/0
  6394 ;;		On exit  : F/2
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;Total ram usage:        0 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:   14
  6404 ;; This function calls:
  6405 ;;		_LORAWAN_Send
  6406 ;; This function is called by:
  6407 ;;		_SetCallbackSoftwareTimers
  6408 ;;		_SwTimersExecute
  6409 ;; This function uses a reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text39
  6413  007482                     __ptext39:
  6414                           	opt stack 0
  6415  007482                     _AutomaticReplyCallback:
  6416                           	opt stack 14
  6417                           
  6418                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6419                           
  6420                           ; BSR set to: 0
  6421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6422                           ;incstack = 0
  6423  007482  0EF0               	movlw	-16
  6424  007484  0102               	movlb	2	; () banked
  6425  007486  1702               	andwf	(_loRa+2)& (0+255),f,b
  6426                           
  6427                           ; BSR set to: 2
  6428                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6429  007488  0E00               	movlw	0
  6430  00748A  0100               	movlb	0	; () banked
  6431  00748C  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  6432  00748E  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  6433  007490  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6434  007492  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6435  007494  EC0D  F02A         	call	_LORAWAN_Send
  6436                           
  6437                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6438  007498  0102               	movlb	2	; () banked
  6439  00749A  9700               	bcf	_loRa& (0+255),3,b
  6440                           
  6441                           ; BSR set to: 2
  6442                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6443  00749C  52E5               	movf	postdec1,f,c
  6444  00749E  0012               	return		;funcret
  6445  0074A0                     __end_of_AutomaticReplyCallback:
  6446                           	opt stack 0
  6447                           tosu	equ	0xFFF
  6448                           tosh	equ	0xFFE
  6449                           tosl	equ	0xFFD
  6450                           pclath	equ	0xFFA
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           intcon2	equ	0xFF1
  6459                           intcon3	equ	0xFF0
  6460                           postinc0	equ	0xFEE
  6461                           wreg	equ	0xFE8
  6462                           postinc1	equ	0xFE6
  6463                           postdec1	equ	0xFE5
  6464                           plusw1	equ	0xFE3
  6465                           fsr1h	equ	0xFE2
  6466                           fsr1l	equ	0xFE1
  6467                           indf2	equ	0xFDF
  6468                           postinc2	equ	0xFDE
  6469                           postdec2	equ	0xFDD
  6470                           fsr2h	equ	0xFDA
  6471                           fsr2l	equ	0xFD9
  6472                           status	equ	0xFD8
  6473                           
  6474 ;; *************** function _AckRetransmissionCallback *****************
  6475 ;; Defined at:
  6476 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  param           1  [STACK] unsigned char 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  maximumPacke    1  [STACK] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1  [STACK] void 
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : F/0
  6487 ;;		On exit  : D/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:   13
  6497 ;; This function calls:
  6498 ;;		_FindSmallestDataRate
  6499 ;;		_LORAWAN_GetMaxPayloadSize
  6500 ;;		_RADIO_Transmit
  6501 ;;		_ResetParametersForConfirmedTransmission
  6502 ;;		_RxDataDone
  6503 ;;		_SelectChannelForTransmission
  6504 ;;		_UpdateRetransmissionAckTimeoutState
  6505 ;; This function is called by:
  6506 ;;		_SetCallbackSoftwareTimers
  6507 ;;		_SwTimersExecute
  6508 ;; This function uses a reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text40
  6512  004A7A                     __ptext40:
  6513                           	opt stack 0
  6514  004A7A                     _AckRetransmissionCallback:
  6515                           	opt stack 0
  6516                           
  6517                           ; BSR set to: 2
  6518                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6519  004A7A  52E6               	movf	postinc1,f,c
  6520                           
  6521                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6522                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6523                           
  6524                           ;incstack = 0
  6525  004A7C  0102               	movlb	2	; () banked
  6526  004A7E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6527  004A80  D070               	goto	l15172
  6528                           
  6529                           ; BSR set to: 2
  6530                           ;lorawan.c: 939: {
  6531                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6532  004A82  51D9               	movf	(_loRa+217)& (0+255),w,b
  6533  004A84  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6534  004A86  E352               	bnc	l15162
  6535                           
  6536                           ; BSR set to: 2
  6537                           ;lorawan.c: 941: {
  6538                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6539  004A88  EC57  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6540  004A8C  6E51               	movwf	btemp+11,c
  6541  004A8E  0E0D               	movlw	13
  6542  004A90  2651               	addwf	btemp+11,f,c
  6543                           
  6544                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6545  004A92  0EFF               	movlw	-1
  6546  004A94  C051  FFE3         	movff	btemp+11,plusw1
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6550                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6551  004A98  50E3               	movf	plusw1,w,c
  6552  004A9A  6E47               	movwf	btemp+1,c
  6553  004A9C  6A48               	clrf	btemp+2,c
  6554  004A9E  0102               	movlb	2	; () banked
  6555  004AA0  51D4               	movf	(_loRa+212)& (0+255),w,b
  6556  004AA2  5C47               	subwf	btemp+1,w,c
  6557  004AA4  51D5               	movf	(_loRa+213)& (0+255),w,b
  6558  004AA6  5848               	subwfb	btemp+2,w,c
  6559  004AA8  E333               	bnc	l15156
  6560                           
  6561                           ; BSR set to: 2
  6562                           ;lorawan.c: 946: {
  6563                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6564  004AAA  0E01               	movlw	1
  6565  004AAC  EC2C  F033         	call	_SelectChannelForTransmission
  6566  004AB0  0900               	iorlw	0
  6567  004AB2  E12B               	bnz	l15152
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;lorawan.c: 948: {
  6571                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6572  004AB4  0EF0               	movlw	low (_macBuffer+16)
  6573  004AB6  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  6574  004AB8  0E04               	movlw	high (_macBuffer+16)
  6575  004ABA  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6576  004ABC  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6577  004AC0  ECE2  F017         	call	_RADIO_Transmit	;wreg free
  6578  004AC4  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  6579  004AC8  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  6580  004ACC  5047               	movf	btemp+1,w,c
  6581  004ACE  1048               	iorwf	btemp+2,w,c
  6582  004AD0  E11C               	bnz	l15152
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;lorawan.c: 951: {
  6586                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6587  004AD2  0102               	movlb	2	; () banked
  6588  004AD4  5102               	movf	(_loRa+2)& (0+255),w,b
  6589  004AD6  0BF0               	andlw	-16
  6590  004AD8  0901               	iorlw	1
  6591  004ADA  6F02               	movwf	(_loRa+2)& (0+255),b
  6592                           
  6593                           ; BSR set to: 2
  6594                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6595  004ADC  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6596                           
  6597                           ; BSR set to: 2
  6598                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6599  004ADE  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6600  004AE0  D042               	goto	l2063
  6601                           
  6602                           ; BSR set to: 2
  6603  004AE2  51DF               	movf	(_loRa+223)& (0+255),w,b
  6604  004AE4  E040               	bz	l2063
  6605                           
  6606                           ; BSR set to: 2
  6607  004AE6  51D9               	movf	(_loRa+217)& (0+255),w,b
  6608  004AE8  6E47               	movwf	btemp+1,c
  6609  004AEA  6A48               	clrf	btemp+2,c
  6610  004AEC  51D7               	movf	(_loRa+215)& (0+255),w,b
  6611  004AEE  6E50               	movwf	btemp+10,c
  6612  004AF0  6A51               	clrf	btemp+11,c
  6613  004AF2  2A50               	incf	btemp+10,f,c
  6614  004AF4  0E00               	movlw	0
  6615  004AF6  2251               	addwfc	btemp+11,f,c
  6616  004AF8  5047               	movf	btemp+1,w,c
  6617  004AFA  1850               	xorwf	btemp+10,w,c
  6618  004AFC  E103               	bnz	u17820
  6619  004AFE  5048               	movf	btemp+2,w,c
  6620  004B00  1851               	xorwf	btemp+11,w,c
  6621  004B02  E031               	bz	l2063
  6622  004B04                     u17820:
  6623                           
  6624                           ; BSR set to: 2
  6625                           ;lorawan.c: 957: {
  6626                           ;lorawan.c: 958: FindSmallestDataRate();
  6627  004B04  EC8A  F02C         	call	_FindSmallestDataRate	;wreg free
  6628  004B08  D02E               	goto	l2063
  6629  004B0A                     l15152:
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;lorawan.c: 961: else
  6633                           ;lorawan.c: 962: {
  6634                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6635  004B0A  ECFF  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6636  004B0E  D02B               	goto	l2063
  6637  004B10                     l15156:
  6638                           
  6639                           ; BSR set to: 2
  6640                           ;lorawan.c: 973: else
  6641                           ;lorawan.c: 974: {
  6642                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6643  004B10  ECCC  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6644                           
  6645                           ; BSR set to: 2
  6646                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6647  004B14  0100               	movlb	0	; () banked
  6648  004B16  51E8               	movf	_rxPayload& (0+255),w,b
  6649  004B18  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6650  004B1A  E025               	bz	l2063
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;lorawan.c: 977: {
  6654                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6655  004B1C  6B67               	clrf	RxDataDone@pData& (0+255),b
  6656  004B1E  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  6657  004B20  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  6658  004B22  0E04               	movlw	4
  6659  004B24  6F6A               	movwf	RxDataDone@status& (0+255),b
  6660  004B26  D801               	call	u17848
  6661  004B28  D01E               	goto	l2063
  6662  004B2A                     u17848:
  6663  004B2A  D012               	goto	u17888
  6664  004B2C                     l15162:
  6665                           
  6666                           ; BSR set to: 2
  6667                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6668  004B2C  51D9               	movf	(_loRa+217)& (0+255),w,b
  6669  004B2E  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6670  004B30  E21A               	bc	l2063
  6671                           
  6672                           ; BSR set to: 2
  6673  004B32  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6674  004B34  D018               	goto	l2063
  6675                           
  6676                           ; BSR set to: 2
  6677                           ;lorawan.c: 983: {
  6678                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6679  004B36  ECCC  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6680                           
  6681                           ; BSR set to: 2
  6682                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6683  004B3A  0100               	movlb	0	; () banked
  6684  004B3C  51E8               	movf	_rxPayload& (0+255),w,b
  6685  004B3E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6686  004B40  E012               	bz	l2063
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;lorawan.c: 986: {
  6690                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6691  004B42  0E00               	movlw	0
  6692  004B44  6B67               	clrf	RxDataDone@pData& (0+255),b
  6693  004B46  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  6694  004B48  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  6695  004B4A  6B6A               	clrf	RxDataDone@status& (0+255),b
  6696  004B4C  D801               	call	u17888
  6697  004B4E  D00B               	goto	l2063
  6698  004B50                     u17888:
  6699  004B50  0005               	push	
  6700  004B52  6EFA               	movwf	pclath,c
  6701  004B54  51E8               	movf	_rxPayload& (0+255),w,b
  6702  004B56  6EFD               	movwf	tosl,c
  6703  004B58  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  6704  004B5A  6EFE               	movwf	tosh,c
  6705  004B5C  6AFF               	clrf	tosu,c
  6706  004B5E  50FA               	movf	pclath,w,c
  6707  004B60  0012               	return		;indir
  6708  004B62                     l15172:
  6709                           
  6710                           ; BSR set to: 2
  6711                           ;lorawan.c: 991: else
  6712                           ;lorawan.c: 992: {
  6713                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6714  004B62  ECCC  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6715  004B66                     l2063:
  6716                           
  6717                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6718  004B66  52E5               	movf	postdec1,f,c
  6719  004B68  52E5               	movf	postdec1,f,c
  6720  004B6A  0012               	return		;funcret
  6721  004B6C                     __end_of_AckRetransmissionCallback:
  6722                           	opt stack 0
  6723                           tosu	equ	0xFFF
  6724                           tosh	equ	0xFFE
  6725                           tosl	equ	0xFFD
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           intcon2	equ	0xFF1
  6735                           intcon3	equ	0xFF0
  6736                           postinc0	equ	0xFEE
  6737                           wreg	equ	0xFE8
  6738                           postinc1	equ	0xFE6
  6739                           postdec1	equ	0xFE5
  6740                           plusw1	equ	0xFE3
  6741                           fsr1h	equ	0xFE2
  6742                           fsr1l	equ	0xFE1
  6743                           indf2	equ	0xFDF
  6744                           postinc2	equ	0xFDE
  6745                           postdec2	equ	0xFDD
  6746                           fsr2h	equ	0xFDA
  6747                           fsr2l	equ	0xFD9
  6748                           status	equ	0xFD8
  6749                           
  6750 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6751 ;; Defined at:
  6752 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  param           1  [STACK] unsigned char 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  iCtr            1  [STACK] unsigned char 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1  [STACK] void 
  6759 ;; Registers used:
  6760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  6761 ;; Tracked objects:
  6762 ;;		On entry : F/0
  6763 ;;		On exit  : D/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:   11
  6773 ;; This function calls:
  6774 ;;		_SwTimerSetTimeout
  6775 ;;		_SwTimerStart
  6776 ;;		___lldiv
  6777 ;; This function is called by:
  6778 ;;		_SetCallbackSoftwareTimers
  6779 ;;		_SwTimersExecute
  6780 ;; This function uses a reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text41
  6784  003FFC                     __ptext41:
  6785                           	opt stack 0
  6786  003FFC                     _LORAWAN_LinkCheckCallback:
  6787                           	opt stack 0
  6788                           
  6789                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6790  003FFC  0E05               	movlw	5
  6791  003FFE  26E1               	addwf	fsr1l,f,c
  6792  004000  0E00               	movlw	0
  6793  004002  22E2               	addwfc	fsr1h,f,c
  6794                           
  6795                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6796                           
  6797                           ;incstack = 0
  6798  004004  0102               	movlb	2	; () banked
  6799  004006  A103               	btfss	(_loRa+3)& (0+255),0,b
  6800                           
  6801                           ; BSR set to: 2
  6802  004008  A503               	btfss	(_loRa+3)& (0+255),2,b
  6803  00400A  D029               	goto	l15116
  6804                           
  6805                           ; BSR set to: 2
  6806                           ;lorawan.c: 886: {
  6807                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6808                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6809  00400C  0EFF               	movlw	-1
  6810  00400E  6AE3               	clrf	plusw1,c
  6811  004010  D00E               	goto	l15106
  6812  004012                     l15100:
  6813                           
  6814                           ; BSR set to: 2
  6815                           ;lorawan.c: 889: {
  6816                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6817                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6818  004012  0EFF               	movlw	-1
  6819  004014  50E3               	movf	plusw1,w,c
  6820  004016  0D02               	mullw	2
  6821  004018  0EA8               	movlw	low (_loRa+168)
  6822  00401A  24F3               	addwf	prodl,w,c
  6823  00401C  6ED9               	movwf	fsr2l,c
  6824  00401E  0E02               	movlw	high (_loRa+168)
  6825  004020  20F4               	addwfc	prodh,w,c
  6826  004022  6EDA               	movwf	fsr2h,c
  6827  004024  0E02               	movlw	2
  6828  004026  18DE               	xorwf	postinc2,w,c
  6829  004028  E008               	bz	l15108
  6830                           
  6831                           ; BSR set to: 2
  6832                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6833  00402A  0EFF               	movlw	-1
  6834  00402C  2AE3               	incf	plusw1,f,c
  6835  00402E                     l15106:
  6836                           
  6837                           ; BSR set to: 2
  6838                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6839  00402E  0EFF               	movlw	-1
  6840  004030  CFE3 F047          	movff	plusw1,btemp+1
  6841  004034  51A7               	movf	(_loRa+167)& (0+255),w,b
  6842  004036  5C47               	subwf	btemp+1,w,c
  6843  004038  E3EC               	bnc	l15100
  6844  00403A                     l15108:
  6845                           
  6846                           ; BSR set to: 2
  6847                           ;lorawan.c: 893: }
  6848                           ;lorawan.c: 894: }
  6849                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6850                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6851  00403A  0EFF               	movlw	-1
  6852  00403C  50E3               	movf	plusw1,w,c
  6853  00403E  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6854  004040  E10E               	bnz	l15116
  6855                           
  6856                           ; BSR set to: 2
  6857                           ;lorawan.c: 897: {
  6858                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6859  004042  51A7               	movf	(_loRa+167)& (0+255),w,b
  6860  004044  0D02               	mullw	2
  6861  004046  0EA8               	movlw	low (_loRa+168)
  6862  004048  24F3               	addwf	prodl,w,c
  6863  00404A  6ED9               	movwf	fsr2l,c
  6864  00404C  0E02               	movlw	high (_loRa+168)
  6865  00404E  20F4               	addwfc	prodh,w,c
  6866  004050  6EDA               	movwf	fsr2h,c
  6867  004052  0E02               	movlw	2
  6868  004054  6EDF               	movwf	indf2,c
  6869                           
  6870                           ; BSR set to: 2
  6871                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6872  004056  0E10               	movlw	16
  6873  004058  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6874  00405A  D001               	goto	l15116
  6875                           
  6876                           ; BSR set to: 2
  6877                           ;lorawan.c: 901: {
  6878                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6879  00405C  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6880  00405E                     l15116:
  6881                           
  6882                           ; BSR set to: 2
  6883                           ;lorawan.c: 903: }
  6884                           ;lorawan.c: 904: }
  6885                           ;lorawan.c: 905: }
  6886                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6887  00405E  A503               	btfss	(_loRa+3)& (0+255),2,b
  6888  004060  D074               	goto	l2041
  6889                           
  6890                           ; BSR set to: 2
  6891                           ;lorawan.c: 909: {
  6892                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6893  004062  51CF               	movf	(_loRa+207)& (0+255),w,b
  6894  004064  E106               	bnz	u17720
  6895  004066  29CC               	incf	(_loRa+204)& (0+255),w,b
  6896  004068  0EFF               	movlw	255
  6897  00406A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6898  00406C  0E0F               	movlw	15
  6899  00406E  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6900  004070  E321               	bnc	l15122
  6901  004072                     u17720:
  6902                           
  6903                           ; BSR set to: 2
  6904  004072  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6905  004076  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6906  00407A  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6907  00407E  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6908  004082  0E7D               	movlw	125
  6909  004084  0100               	movlb	0	; () banked
  6910  004086  6F68               	movwf	___lldiv@divisor& (0+255),b
  6911  004088  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6912  00408A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6913  00408C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6914  00408E  EC1A  F030         	call	___lldiv	;wreg free
  6915  004092  C064  F04E         	movff	?___lldiv,btemp+8
  6916  004096  C065  F04F         	movff	?___lldiv+1,btemp+9
  6917  00409A  C066  F050         	movff	?___lldiv+2,btemp+10
  6918  00409E  C067  F051         	movff	?___lldiv+3,btemp+11
  6919  0040A2  0E0C               	movlw	12
  6920  0040A4                     u17735:
  6921  0040A4  90D8               	bcf	status,0,c
  6922  0040A6  364E               	rlcf	btemp+8,f,c
  6923  0040A8  364F               	rlcf	btemp+9,f,c
  6924  0040AA  3650               	rlcf	btemp+10,f,c
  6925  0040AC  3651               	rlcf	btemp+11,f,c
  6926  0040AE  2EE8               	decfsz	wreg,f,c
  6927  0040B0  D7F9               	goto	u17735
  6928  0040B2  D028               	goto	L3
  6929  0040B4                     l15122:
  6930                           
  6931                           ; BSR set to: 2
  6932  0040B4  C2CC  F04E         	movff	_loRa+204,btemp+8
  6933  0040B8  C2CD  F04F         	movff	_loRa+205,btemp+9
  6934  0040BC  C2CE  F050         	movff	_loRa+206,btemp+10
  6935  0040C0  C2CF  F051         	movff	_loRa+207,btemp+11
  6936  0040C4  0E0C               	movlw	12
  6937  0040C6                     u17745:
  6938  0040C6  90D8               	bcf	status,0,c
  6939  0040C8  364E               	rlcf	btemp+8,f,c
  6940  0040CA  364F               	rlcf	btemp+9,f,c
  6941  0040CC  3650               	rlcf	btemp+10,f,c
  6942  0040CE  3651               	rlcf	btemp+11,f,c
  6943  0040D0  2EE8               	decfsz	wreg,f,c
  6944  0040D2  D7F9               	goto	u17745
  6945  0040D4  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6946  0040D8  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6947  0040DC  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6948  0040E0  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6949  0040E4  0E7D               	movlw	125
  6950  0040E6  0100               	movlb	0	; () banked
  6951  0040E8  6F68               	movwf	___lldiv@divisor& (0+255),b
  6952  0040EA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6953  0040EC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6954  0040EE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6955  0040F0  EC1A  F030         	call	___lldiv	;wreg free
  6956  0040F4  C064  F04E         	movff	?___lldiv,btemp+8
  6957  0040F8  C065  F04F         	movff	?___lldiv+1,btemp+9
  6958  0040FC  C066  F050         	movff	?___lldiv+2,btemp+10
  6959  004100  C067  F051         	movff	?___lldiv+3,btemp+11
  6960  004104                     L3:
  6961                           
  6962                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6963  004104  0EFB               	movlw	-5
  6964  004106  C04E  FFE3         	movff	btemp+8,plusw1
  6965  00410A  0EFC               	movlw	-4
  6966  00410C  C04F  FFE3         	movff	btemp+9,plusw1
  6967  004110  0EFD               	movlw	-3
  6968  004112  C050  FFE3         	movff	btemp+10,plusw1
  6969  004116  0EFE               	movlw	-2
  6970  004118  C051  FFE3         	movff	btemp+11,plusw1
  6971                           
  6972                           ; BSR set to: 0
  6973                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6974  00411C  50E1               	movf	fsr1l,w,c
  6975  00411E  0FFB               	addlw	-5
  6976  004120  6ED9               	movwf	fsr2l,c
  6977  004122  50E2               	movf	fsr1h,w,c
  6978  004124  6EDA               	movwf	fsr2h,c
  6979  004126  0EFF               	movlw	255
  6980  004128  22DA               	addwfc	fsr2h,f,c
  6981  00412A  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6982  00412E  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6983  004132  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6984  004136  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6985  00413A  0102               	movlb	2	; () banked
  6986  00413C  51E7               	movf	(_loRa+231)& (0+255),w,b
  6987  00413E  EC75  F036         	call	_SwTimerSetTimeout
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  6991  004142  0102               	movlb	2	; () banked
  6992  004144  51E7               	movf	(_loRa+231)& (0+255),w,b
  6993  004146  EC58  F02E         	call	_SwTimerStart
  6994  00414A                     l2041:
  6995                           
  6996                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6997  00414A  0EFA               	movlw	250
  6998  00414C  26E1               	addwf	fsr1l,f,c
  6999  00414E  0EFF               	movlw	255
  7000  004150  22E2               	addwfc	fsr1h,f,c
  7001  004152  0CFF               	retlw	255	;funcret
  7002  004154                     __end_of_LORAWAN_LinkCheckCallback:
  7003                           	opt stack 0
  7004                           tosu	equ	0xFFF
  7005                           tosh	equ	0xFFE
  7006                           tosl	equ	0xFFD
  7007                           pclath	equ	0xFFA
  7008                           tblptru	equ	0xFF8
  7009                           tblptrh	equ	0xFF7
  7010                           tblptrl	equ	0xFF6
  7011                           tablat	equ	0xFF5
  7012                           prodh	equ	0xFF4
  7013                           prodl	equ	0xFF3
  7014                           intcon	equ	0xFF2
  7015                           intcon2	equ	0xFF1
  7016                           intcon3	equ	0xFF0
  7017                           postinc0	equ	0xFEE
  7018                           wreg	equ	0xFE8
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           plusw1	equ	0xFE3
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7032 ;; Defined at:
  7033 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  param           1  [STACK] unsigned char 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  freq            4  [STACK] unsigned long 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1  [STACK] void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : F/0
  7044 ;;		On exit  : D/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;Total ram usage:        0 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:   13
  7054 ;; This function calls:
  7055 ;;		_ConfigureRadioRx
  7056 ;;		_GetRx1Freq
  7057 ;;		_RADIO_ReceiveStart
  7058 ;;		_RADIO_ReceiveStop
  7059 ;;		_RADIO_ReleaseData
  7060 ;; This function is called by:
  7061 ;;		_SetCallbackSoftwareTimers
  7062 ;;		_SwTimersExecute
  7063 ;; This function uses a reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text42
  7067  005648                     __ptext42:
  7068                           	opt stack 0
  7069  005648                     _LORAWAN_ReceiveWindow1Callback:
  7070                           	opt stack 0
  7071                           
  7072                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7073  005648  52E6               	movf	postinc1,f,c
  7074  00564A  52E6               	movf	postinc1,f,c
  7075  00564C  52E6               	movf	postinc1,f,c
  7076  00564E  52E6               	movf	postinc1,f,c
  7077                           
  7078                           ;lorawan.c: 798: uint32_t freq;
  7079                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7080                           
  7081                           ;incstack = 0
  7082  005650  0102               	movlb	2	; () banked
  7083  005652  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7084  005654  D04E               	goto	l2014
  7085                           
  7086                           ; BSR set to: 2
  7087                           ;lorawan.c: 801: {
  7088                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7089  005656  0E02               	movlw	2
  7090  005658  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7091  00565A  E102               	bnz	l15078
  7092                           
  7093                           ; BSR set to: 2
  7094                           ;lorawan.c: 803: {
  7095                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7096  00565C  EC5F  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7097  005660                     l15078:
  7098                           
  7099                           ;lorawan.c: 805: }
  7100                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7101  005660  0102               	movlb	2	; () banked
  7102  005662  51EF               	movf	(_loRa+239)& (0+255),w,b
  7103  005664  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7104  005666  E304               	bnc	l2012
  7105                           
  7106                           ; BSR set to: 2
  7107                           ;lorawan.c: 807: {
  7108                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7109  005668  51EF               	movf	(_loRa+239)& (0+255),w,b
  7110  00566A  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7111  00566C  6F17               	movwf	(_loRa+23)& (0+255),b
  7112                           
  7113                           ;lorawan.c: 809: }
  7114  00566E  D001               	goto	l15082
  7115  005670                     l2012:
  7116                           
  7117                           ; BSR set to: 2
  7118                           ;lorawan.c: 810: else
  7119                           ;lorawan.c: 811: {
  7120                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7121  005670  6B17               	clrf	(_loRa+23)& (0+255),b
  7122  005672                     l15082:
  7123                           
  7124                           ; BSR set to: 2
  7125                           ;lorawan.c: 813: }
  7126                           ;lorawan.c: 815: freq = GetRx1Freq();
  7127  005672  ECAB  F03B         	call	_GetRx1Freq	;wreg free
  7128  005676  C064  F04E         	movff	?_GetRx1Freq,btemp+8
  7129  00567A  C065  F04F         	movff	?_GetRx1Freq+1,btemp+9
  7130  00567E  C066  F050         	movff	?_GetRx1Freq+2,btemp+10
  7131  005682  C067  F051         	movff	?_GetRx1Freq+3,btemp+11
  7132                           
  7133                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7134  005686  0EFC               	movlw	-4
  7135  005688  C04E  FFE3         	movff	btemp+8,plusw1
  7136  00568C  0EFD               	movlw	-3
  7137  00568E  C04F  FFE3         	movff	btemp+9,plusw1
  7138  005692  0EFE               	movlw	-2
  7139  005694  C050  FFE3         	movff	btemp+10,plusw1
  7140  005698  0EFF               	movlw	-1
  7141  00569A  C051  FFE3         	movff	btemp+11,plusw1
  7142                           
  7143                           ; BSR set to: 2
  7144                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7145  00569E  5102               	movf	(_loRa+2)& (0+255),w,b
  7146  0056A0  0BF0               	andlw	-16
  7147  0056A2  0903               	iorlw	3
  7148  0056A4  6F02               	movwf	(_loRa+2)& (0+255),b
  7149                           
  7150                           ; BSR set to: 2
  7151                           ;lorawan.c: 819: RADIO_ReleaseData();
  7152  0056A6  EC84  F03C         	call	_RADIO_ReleaseData	;wreg free
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7156                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7157  0056AA  50E1               	movf	fsr1l,w,c
  7158  0056AC  0FFC               	addlw	-4
  7159  0056AE  6ED9               	movwf	fsr2l,c
  7160  0056B0  50E2               	movf	fsr1h,w,c
  7161  0056B2  6EDA               	movwf	fsr2h,c
  7162  0056B4  0EFF               	movlw	255
  7163  0056B6  22DA               	addwfc	fsr2h,f,c
  7164  0056B8  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7165  0056BC  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7166  0056C0  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7167  0056C4  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7168  0056C8  0102               	movlb	2	; () banked
  7169  0056CA  5117               	movf	(_loRa+23)& (0+255),w,b
  7170  0056CC  EC84  F039         	call	_ConfigureRadioRx
  7171                           
  7172                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7173  0056D0  0E85               	movlw	low _rxWindowSize
  7174  0056D2  0102               	movlb	2	; () banked
  7175  0056D4  2517               	addwf	(_loRa+23)& (0+255),w,b
  7176  0056D6  6EF6               	movwf	tblptrl,c
  7177  0056D8  6AF7               	clrf	tblptrh,c
  7178  0056DA  0EFF               	movlw	high _rxWindowSize
  7179  0056DC  22F7               	addwfc	tblptrh,f,c
  7180  0056DE                     	if	1	;There are 3 active tblptr bytes
  7181  0056DE  6AF8               	clrf	tblptru,c
  7182  0056E0  0E00               	movlw	low (__mediumconst shr (0+16))
  7183  0056E2  22F8               	addwfc	tblptru,f,c
  7184  0056E4                     	endif
  7185  0056E4  0008               	tblrd		*
  7186  0056E6  50F5               	movf	tablat,w,c
  7187  0056E8  0100               	movlb	0	; () banked
  7188  0056EA  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7189  0056EC  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7190  0056EE  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
  7191  0056F2                     l2014:
  7192                           
  7193                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7194  0056F2  0EFB               	movlw	251
  7195  0056F4  26E1               	addwf	fsr1l,f,c
  7196  0056F6  0EFF               	movlw	255
  7197  0056F8  22E2               	addwfc	fsr1h,f,c
  7198  0056FA  0CFF               	retlw	255	;funcret
  7199  0056FC                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7200                           	opt stack 0
  7201                           tosu	equ	0xFFF
  7202                           tosh	equ	0xFFE
  7203                           tosl	equ	0xFFD
  7204                           pclath	equ	0xFFA
  7205                           tblptru	equ	0xFF8
  7206                           tblptrh	equ	0xFF7
  7207                           tblptrl	equ	0xFF6
  7208                           tablat	equ	0xFF5
  7209                           prodh	equ	0xFF4
  7210                           prodl	equ	0xFF3
  7211                           intcon	equ	0xFF2
  7212                           intcon2	equ	0xFF1
  7213                           intcon3	equ	0xFF0
  7214                           postinc0	equ	0xFEE
  7215                           wreg	equ	0xFE8
  7216                           postinc1	equ	0xFE6
  7217                           postdec1	equ	0xFE5
  7218                           plusw1	equ	0xFE3
  7219                           fsr1h	equ	0xFE2
  7220                           fsr1l	equ	0xFE1
  7221                           indf2	equ	0xFDF
  7222                           postinc2	equ	0xFDE
  7223                           postdec2	equ	0xFDD
  7224                           fsr2h	equ	0xFDA
  7225                           fsr2l	equ	0xFD9
  7226                           status	equ	0xFD8
  7227                           
  7228 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7229 ;; Defined at:
  7230 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  param           1  [STACK] unsigned char 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;		None
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  1  [STACK] void 
  7237 ;; Registers used:
  7238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : D/0
  7241 ;;		On exit  : D/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;Total ram usage:        0 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:   14
  7251 ;; This function calls:
  7252 ;;		_ConfigureRadioRx
  7253 ;;		_LORAWAN_EnterContinuousReceive
  7254 ;;		_RADIO_GetStatus
  7255 ;;		_RADIO_ReceiveStart
  7256 ;;		_RADIO_ReceiveStop
  7257 ;;		_RADIO_ReleaseData
  7258 ;;		_ResetParametersForConfirmedTransmission
  7259 ;;		_ResetParametersForUnconfirmedTransmission
  7260 ;;		_RxDataDone
  7261 ;; This function is called by:
  7262 ;;		_LORAWAN_RxTimeout
  7263 ;;		_SetCallbackSoftwareTimers
  7264 ;;		_SwTimersExecute
  7265 ;; This function uses a reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text43
  7269  005352                     __ptext43:
  7270                           	opt stack 0
  7271  005352                     _LORAWAN_ReceiveWindow2Callback:
  7272                           	opt stack 12
  7273                           
  7274                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7275                           
  7276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7277                           ;incstack = 0
  7278  005352  0102               	movlb	2	; () banked
  7279  005354  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7280  005356  D057               	goto	l2017
  7281                           
  7282                           ; BSR set to: 2
  7283                           ;lorawan.c: 831: {
  7284                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7285  005358  EC81  F03C         	call	_RADIO_GetStatus	;wreg free
  7286  00535C  6E51               	movwf	btemp+11,c
  7287  00535E  B251               	btfsc	btemp+11,1,c
  7288  005360  D04E               	goto	l13846
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;lorawan.c: 833: {
  7292                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7293  005362  0102               	movlb	2	; () banked
  7294  005364  5102               	movf	(_loRa+2)& (0+255),w,b
  7295  005366  0BF0               	andlw	-16
  7296  005368  0905               	iorlw	5
  7297  00536A  6F02               	movwf	(_loRa+2)& (0+255),b
  7298                           
  7299                           ; BSR set to: 2
  7300                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7301  00536C  EC5F  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;lorawan.c: 837: RADIO_ReleaseData();
  7305  005370  EC84  F03C         	call	_RADIO_ReleaseData	;wreg free
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7309  005374  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7310  005378  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7311  00537C  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7312  005380  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7313  005384  0102               	movlb	2	; () banked
  7314  005386  511C               	movf	(_loRa+28)& (0+255),w,b
  7315  005388  EC84  F039         	call	_ConfigureRadioRx
  7316                           
  7317                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7318  00538C  0102               	movlb	2	; () banked
  7319  00538E  5112               	movf	(_loRa+18)& (0+255),w,b
  7320  005390  E12F               	bnz	l13842
  7321                           
  7322                           ; BSR set to: 2
  7323                           ;lorawan.c: 842: {
  7324                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7325  005392  0E85               	movlw	low _rxWindowSize
  7326  005394  251C               	addwf	(_loRa+28)& (0+255),w,b
  7327  005396  6EF6               	movwf	tblptrl,c
  7328  005398  6AF7               	clrf	tblptrh,c
  7329  00539A  0EFF               	movlw	high _rxWindowSize
  7330  00539C  22F7               	addwfc	tblptrh,f,c
  7331  00539E                     	if	1	;There are 3 active tblptr bytes
  7332  00539E  6AF8               	clrf	tblptru,c
  7333  0053A0  0E00               	movlw	low (__mediumconst shr (0+16))
  7334  0053A2  22F8               	addwfc	tblptru,f,c
  7335  0053A4                     	endif
  7336  0053A4  0008               	tblrd		*
  7337  0053A6  50F5               	movf	tablat,w,c
  7338  0053A8  0100               	movlb	0	; () banked
  7339  0053AA  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7340  0053AC  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7341  0053AE  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
  7342  0053B2  C096  F047         	movff	?_RADIO_ReceiveStart,btemp+1
  7343  0053B6  C097  F048         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7344  0053BA  5047               	movf	btemp+1,w,c
  7345  0053BC  1048               	iorwf	btemp+2,w,c
  7346  0053BE  E02B               	bz	l2026
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;lorawan.c: 844: {
  7350                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7351  0053C0  ECCC  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7352                           
  7353                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7354  0053C4  ECC5  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7355                           
  7356                           ; BSR set to: 2
  7357                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7358  0053C8  0100               	movlb	0	; () banked
  7359  0053CA  51E8               	movf	_rxPayload& (0+255),w,b
  7360  0053CC  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7361  0053CE  E023               	bz	l2026
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;lorawan.c: 848: {
  7365                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7366  0053D0  0E00               	movlw	0
  7367  0053D2  6B67               	clrf	RxDataDone@pData& (0+255),b
  7368  0053D4  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  7369  0053D6  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  7370  0053D8  6B6A               	clrf	RxDataDone@status& (0+255),b
  7371  0053DA  D801               	call	u15348
  7372  0053DC  D01C               	goto	l2026
  7373  0053DE                     u15348:
  7374  0053DE  0005               	push	
  7375  0053E0  6EFA               	movwf	pclath,c
  7376  0053E2  51E8               	movf	_rxPayload& (0+255),w,b
  7377  0053E4  6EFD               	movwf	tosl,c
  7378  0053E6  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7379  0053E8  6EFE               	movwf	tosh,c
  7380  0053EA  6AFF               	clrf	tosu,c
  7381  0053EC  50FA               	movf	pclath,w,c
  7382  0053EE  0012               	return		;indir
  7383  0053F0                     l13842:
  7384                           
  7385                           ; BSR set to: 2
  7386                           ;lorawan.c: 853: else
  7387                           ;lorawan.c: 854: {
  7388                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7389  0053F0  5102               	movf	(_loRa+2)& (0+255),w,b
  7390  0053F2  0BF0               	andlw	-16
  7391  0053F4  0909               	iorlw	9
  7392  0053F6  6F02               	movwf	(_loRa+2)& (0+255),b
  7393                           
  7394                           ; BSR set to: 2
  7395                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7396  0053F8  EC99  F032         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7397  0053FC  D00C               	goto	l2026
  7398  0053FE                     l13846:
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;lorawan.c: 859: else
  7402                           ;lorawan.c: 860: {
  7403                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7404  0053FE  0E01               	movlw	1
  7405  005400  0102               	movlb	2	; () banked
  7406  005402  6FF1               	movwf	(_loRa+241)& (0+255),b
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;lorawan.c: 864: }
  7410                           ;lorawan.c: 865: }
  7411  005404  D008               	goto	l2026
  7412  005406                     l2017:
  7413                           
  7414                           ; BSR set to: 2
  7415                           ;lorawan.c: 866: else
  7416                           ;lorawan.c: 867: {
  7417                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7418  005406  A500               	btfss	_loRa& (0+255),2,b
  7419  005408  D002               	goto	l13850
  7420                           
  7421                           ; BSR set to: 2
  7422                           ;lorawan.c: 871: {
  7423                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7424  00540A  9500               	bcf	_loRa& (0+255),2,b
  7425                           
  7426                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7427  00540C  9902               	bcf	(_loRa+2)& (0+255),4,b
  7428  00540E                     l13850:
  7429                           
  7430                           ; BSR set to: 2
  7431                           ;lorawan.c: 874: }
  7432                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7433  00540E  ECC5  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7434                           
  7435                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7436  005412  ECCC  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7437  005416                     l2026:
  7438                           
  7439                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7440  005416  52E5               	movf	postdec1,f,c
  7441  005418  0012               	return		;funcret
  7442  00541A                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7443                           	opt stack 0
  7444                           tosu	equ	0xFFF
  7445                           tosh	equ	0xFFE
  7446                           tosl	equ	0xFFD
  7447                           pclath	equ	0xFFA
  7448                           tblptru	equ	0xFF8
  7449                           tblptrh	equ	0xFF7
  7450                           tblptrl	equ	0xFF6
  7451                           tablat	equ	0xFF5
  7452                           prodh	equ	0xFF4
  7453                           prodl	equ	0xFF3
  7454                           intcon	equ	0xFF2
  7455                           intcon2	equ	0xFF1
  7456                           intcon3	equ	0xFF0
  7457                           postinc0	equ	0xFEE
  7458                           wreg	equ	0xFE8
  7459                           postinc1	equ	0xFE6
  7460                           postdec1	equ	0xFE5
  7461                           plusw1	equ	0xFE3
  7462                           fsr1h	equ	0xFE2
  7463                           fsr1l	equ	0xFE1
  7464                           indf2	equ	0xFDF
  7465                           postinc2	equ	0xFDE
  7466                           postdec2	equ	0xFDD
  7467                           fsr2h	equ	0xFDA
  7468                           fsr2l	equ	0xFD9
  7469                           status	equ	0xFD8
  7470                           
  7471 ;; *************** function _RADIO_WatchdogTimeout *****************
  7472 ;; Defined at:
  7473 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  param           1  [STACK] unsigned char 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;		None
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1  [STACK] void 
  7480 ;; Registers used:
  7481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : F/0
  7484 ;;		On exit  : C/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;Total ram usage:        0 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:   16
  7494 ;; This function calls:
  7495 ;;		_LORAWAN_RxTimeout
  7496 ;;		_LORAWAN_TxDone
  7497 ;;		_RADIO_WriteMode
  7498 ;; This function is called by:
  7499 ;;		_RADIO_Init
  7500 ;;		_SwTimersExecute
  7501 ;; This function uses a reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text44
  7505  006C66                     __ptext44:
  7506                           	opt stack 0
  7507  006C66                     _RADIO_WatchdogTimeout:
  7508                           	opt stack 12
  7509                           
  7510                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7511                           
  7512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7513                           ;incstack = 0
  7514  006C66  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7515  006C6A  0E01               	movlw	1
  7516  006C6C  0100               	movlb	0	; () banked
  7517  006C6E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7518  006C70  EC6E  F028         	call	_RADIO_WriteMode
  7519                           
  7520                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7521  006C74  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7522  006C78  0E00               	movlw	0
  7523  006C7A  0100               	movlb	0	; () banked
  7524  006C7C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7525  006C7E  EC6E  F028         	call	_RADIO_WriteMode
  7526                           
  7527                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7528  006C82  0101               	movlb	1	; () banked
  7529  006C84  898D               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7530                           
  7531                           ; BSR set to: 1
  7532                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7533  006C86  A38D               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7534  006C88  D004               	goto	l673
  7535                           
  7536                           ; BSR set to: 1
  7537                           ;radio_driver_SX1276.c: 1414: {
  7538                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7539  006C8A  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7540                           
  7541                           ; BSR set to: 1
  7542                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7543  006C8C  EC71  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7544                           
  7545                           ;radio_driver_SX1276.c: 1417: }
  7546  006C90  D009               	goto	l676
  7547  006C92                     l673:
  7548                           
  7549                           ; BSR set to: 1
  7550                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7551  006C92  A18D               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7552  006C94  D007               	goto	l676
  7553                           
  7554                           ; BSR set to: 1
  7555                           ;radio_driver_SX1276.c: 1419: {
  7556                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7557  006C96  918D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7561  006C98  C194  F0A0         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7562  006C9C  C195  F0A1         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7563  006CA0  EC8C  F005         	call	_LORAWAN_TxDone	;wreg free
  7564  006CA4                     l676:
  7565                           
  7566                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7567  006CA4  52E5               	movf	postdec1,f,c
  7568  006CA6  0012               	return		;funcret
  7569  006CA8                     __end_of_RADIO_WatchdogTimeout:
  7570                           	opt stack 0
  7571                           tosu	equ	0xFFF
  7572                           tosh	equ	0xFFE
  7573                           tosl	equ	0xFFD
  7574                           pclath	equ	0xFFA
  7575                           tblptru	equ	0xFF8
  7576                           tblptrh	equ	0xFF7
  7577                           tblptrl	equ	0xFF6
  7578                           tablat	equ	0xFF5
  7579                           prodh	equ	0xFF4
  7580                           prodl	equ	0xFF3
  7581                           intcon	equ	0xFF2
  7582                           intcon2	equ	0xFF1
  7583                           intcon3	equ	0xFF0
  7584                           postinc0	equ	0xFEE
  7585                           wreg	equ	0xFE8
  7586                           postinc1	equ	0xFE6
  7587                           postdec1	equ	0xFE5
  7588                           plusw1	equ	0xFE3
  7589                           fsr1h	equ	0xFE2
  7590                           fsr1l	equ	0xFE1
  7591                           indf2	equ	0xFDF
  7592                           postinc2	equ	0xFDE
  7593                           postdec2	equ	0xFDD
  7594                           fsr2h	equ	0xFDA
  7595                           fsr2l	equ	0xFD9
  7596                           status	equ	0xFD8
  7597                           
  7598 ;; *************** function _RADIO_RxFSKTimeout *****************
  7599 ;; Defined at:
  7600 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  param           1  [STACK] unsigned char 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  irqFlags        1  [STACK] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1  [STACK] void 
  7607 ;; Registers used:
  7608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : F/0
  7611 ;;		On exit  : D/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;Total ram usage:        0 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:   16
  7621 ;; This function calls:
  7622 ;;		_LORAWAN_RxTimeout
  7623 ;;		_RADIO_RegisterRead
  7624 ;;		_RADIO_WriteMode
  7625 ;;		_SwTimerStop
  7626 ;; This function is called by:
  7627 ;;		_RADIO_Init
  7628 ;;		_SwTimersExecute
  7629 ;; This function uses a reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text45
  7633  006F78                     __ptext45:
  7634                           	opt stack 0
  7635  006F78                     _RADIO_RxFSKTimeout:
  7636                           	opt stack 0
  7637                           
  7638                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7639  006F78  52E6               	movf	postinc1,f,c
  7640                           
  7641                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7642                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7643                           
  7644                           ;incstack = 0
  7645  006F7A  0E3E               	movlw	62
  7646  006F7C  EC97  F039         	call	_RADIO_RegisterRead
  7647  006F80  6E51               	movwf	btemp+11,c
  7648                           
  7649                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7650  006F82  0EFF               	movlw	-1
  7651  006F84  C051  FFE3         	movff	btemp+11,plusw1
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7655                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7656  006F88  B0E3               	btfsc	plusw1,0,c
  7657  006F8A  D00E               	goto	l670
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;radio_driver_SX1276.c: 1397: {
  7661                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7662  006F8C  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7663  006F90  0E00               	movlw	0
  7664  006F92  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7665  006F94  EC6E  F028         	call	_RADIO_WriteMode
  7666                           
  7667                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7668  006F98  0101               	movlb	1	; () banked
  7669  006F9A  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7670  006F9C  EC9B  F03A         	call	_SwTimerStop
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7674  006FA0  0101               	movlb	1	; () banked
  7675  006FA2  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7676                           
  7677                           ; BSR set to: 1
  7678                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7679  006FA4  EC71  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7680  006FA8                     l670:
  7681                           
  7682                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7683  006FA8  52E5               	movf	postdec1,f,c
  7684  006FAA  52E5               	movf	postdec1,f,c
  7685  006FAC  0012               	return		;funcret
  7686  006FAE                     __end_of_RADIO_RxFSKTimeout:
  7687                           	opt stack 0
  7688                           tosu	equ	0xFFF
  7689                           tosh	equ	0xFFE
  7690                           tosl	equ	0xFFD
  7691                           pclath	equ	0xFFA
  7692                           tblptru	equ	0xFF8
  7693                           tblptrh	equ	0xFF7
  7694                           tblptrl	equ	0xFF6
  7695                           tablat	equ	0xFF5
  7696                           prodh	equ	0xFF4
  7697                           prodl	equ	0xFF3
  7698                           intcon	equ	0xFF2
  7699                           intcon2	equ	0xFF1
  7700                           intcon3	equ	0xFF0
  7701                           postinc0	equ	0xFEE
  7702                           wreg	equ	0xFE8
  7703                           postinc1	equ	0xFE6
  7704                           postdec1	equ	0xFE5
  7705                           plusw1	equ	0xFE3
  7706                           fsr1h	equ	0xFE2
  7707                           fsr1l	equ	0xFE1
  7708                           indf2	equ	0xFDF
  7709                           postinc2	equ	0xFDE
  7710                           postdec2	equ	0xFDD
  7711                           fsr2h	equ	0xFDA
  7712                           fsr2l	equ	0xFD9
  7713                           status	equ	0xFD8
  7714                           
  7715 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7716 ;; Defined at:
  7717 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  param           1  [STACK] unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1  [STACK] void 
  7724 ;; Registers used:
  7725 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : F/0
  7728 ;;		On exit  : D/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;Total ram usage:        0 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:   13
  7738 ;; This function calls:
  7739 ;;		_RADIO_Transmit
  7740 ;;		_ResetParametersForUnconfirmedTransmission
  7741 ;;		_RxDataDone
  7742 ;;		_SelectChannelForTransmission
  7743 ;; This function is called by:
  7744 ;;		_SetCallbackSoftwareTimers
  7745 ;;		_SwTimersExecute
  7746 ;; This function uses a reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text46
  7750  0062D2                     __ptext46:
  7751                           	opt stack 0
  7752  0062D2                     _UnconfirmedTransmissionCallback:
  7753                           	opt stack 15
  7754                           
  7755                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7756                           
  7757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7758                           ;incstack = 0
  7759  0062D2  0E01               	movlw	1
  7760  0062D4  EC2C  F033         	call	_SelectChannelForTransmission
  7761  0062D8  0900               	iorlw	0
  7762  0062DA  E116               	bnz	l15182
  7763                           
  7764                           ; BSR set to: 0
  7765  0062DC  0EF0               	movlw	low (_macBuffer+16)
  7766  0062DE  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  7767  0062E0  0E04               	movlw	high (_macBuffer+16)
  7768  0062E2  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7769  0062E4  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7770  0062E8  ECE2  F017         	call	_RADIO_Transmit	;wreg free
  7771  0062EC  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  7772  0062F0  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  7773  0062F4  5047               	movf	btemp+1,w,c
  7774  0062F6  1048               	iorwf	btemp+2,w,c
  7775  0062F8  E107               	bnz	l15182
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;lorawan.c: 1001: {
  7779                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7780  0062FA  0102               	movlb	2	; () banked
  7781  0062FC  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7782                           
  7783                           ; BSR set to: 2
  7784                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7785  0062FE  5102               	movf	(_loRa+2)& (0+255),w,b
  7786  006300  0BF0               	andlw	-16
  7787  006302  0901               	iorlw	1
  7788  006304  6F02               	movwf	(_loRa+2)& (0+255),b
  7789                           
  7790                           ;lorawan.c: 1005: }
  7791  006306  D016               	goto	l2069
  7792  006308                     l15182:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;lorawan.c: 1006: else
  7796                           ;lorawan.c: 1008: {
  7797                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7798  006308  ECC5  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7799                           
  7800                           ; BSR set to: 2
  7801                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7802  00630C  0100               	movlb	0	; () banked
  7803  00630E  51E8               	movf	_rxPayload& (0+255),w,b
  7804  006310  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7805  006312  E010               	bz	l2069
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;lorawan.c: 1011: {
  7809                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7810  006314  0E00               	movlw	0
  7811  006316  6B67               	clrf	RxDataDone@pData& (0+255),b
  7812  006318  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  7813  00631A  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  7814  00631C  6B6A               	clrf	RxDataDone@status& (0+255),b
  7815  00631E  D801               	call	u17928
  7816  006320  D009               	goto	l2069
  7817  006322                     u17928:
  7818  006322  0005               	push	
  7819  006324  6EFA               	movwf	pclath,c
  7820  006326  51E8               	movf	_rxPayload& (0+255),w,b
  7821  006328  6EFD               	movwf	tosl,c
  7822  00632A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7823  00632C  6EFE               	movwf	tosh,c
  7824  00632E  6AFF               	clrf	tosu,c
  7825  006330  50FA               	movf	pclath,w,c
  7826  006332  0012               	return		;indir
  7827  006334                     l2069:
  7828                           
  7829                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7830  006334  52E5               	movf	postdec1,f,c
  7831  006336  0012               	return		;funcret
  7832  006338                     __end_of_UnconfirmedTransmissionCallback:
  7833                           	opt stack 0
  7834                           tosu	equ	0xFFF
  7835                           tosh	equ	0xFFE
  7836                           tosl	equ	0xFFD
  7837                           pclath	equ	0xFFA
  7838                           tblptru	equ	0xFF8
  7839                           tblptrh	equ	0xFF7
  7840                           tblptrl	equ	0xFF6
  7841                           tablat	equ	0xFF5
  7842                           prodh	equ	0xFF4
  7843                           prodl	equ	0xFF3
  7844                           intcon	equ	0xFF2
  7845                           intcon2	equ	0xFF1
  7846                           intcon3	equ	0xFF0
  7847                           postinc0	equ	0xFEE
  7848                           wreg	equ	0xFE8
  7849                           postinc1	equ	0xFE6
  7850                           postdec1	equ	0xFE5
  7851                           plusw1	equ	0xFE3
  7852                           fsr1h	equ	0xFE2
  7853                           fsr1l	equ	0xFE1
  7854                           indf2	equ	0xFDF
  7855                           postinc2	equ	0xFDE
  7856                           postdec2	equ	0xFDD
  7857                           fsr2h	equ	0xFDA
  7858                           fsr2l	equ	0xFD9
  7859                           status	equ	0xFD8
  7860                           
  7861 ;; *************** function _GetRx1Freq *****************
  7862 ;; Defined at:
  7863 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4    4[BANK0 ] unsigned long 
  7870 ;; Registers used:
  7871 ;;		None
  7872 ;; Tracked objects:
  7873 ;;		On entry : F/2
  7874 ;;		On exit  : F/2
  7875 ;;		Unchanged: F/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7877 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;Total ram usage:        4 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    7
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_LORAWAN_ReceiveWindow1Callback
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text47
  7892  007756                     __ptext47:
  7893                           	opt stack 0
  7894  007756                     _GetRx1Freq:
  7895                           	opt stack 20
  7896                           
  7897                           ; BSR set to: 2
  7898                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7899                           
  7900                           ;incstack = 0
  7901  007756  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  7902  00775A  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  7903  00775E  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  7904  007762  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  7905                           
  7906                           ; BSR set to: 2
  7907  007766  0012               	return		;funcret
  7908  007768                     __end_of_GetRx1Freq:
  7909                           	opt stack 0
  7910                           tosu	equ	0xFFF
  7911                           tosh	equ	0xFFE
  7912                           tosl	equ	0xFFD
  7913                           pclath	equ	0xFFA
  7914                           tblptru	equ	0xFF8
  7915                           tblptrh	equ	0xFF7
  7916                           tblptrl	equ	0xFF6
  7917                           tablat	equ	0xFF5
  7918                           prodh	equ	0xFF4
  7919                           prodl	equ	0xFF3
  7920                           intcon	equ	0xFF2
  7921                           intcon2	equ	0xFF1
  7922                           intcon3	equ	0xFF0
  7923                           postinc0	equ	0xFEE
  7924                           wreg	equ	0xFE8
  7925                           postinc1	equ	0xFE6
  7926                           postdec1	equ	0xFE5
  7927                           plusw1	equ	0xFE3
  7928                           fsr1h	equ	0xFE2
  7929                           fsr1l	equ	0xFE1
  7930                           indf2	equ	0xFDF
  7931                           postinc2	equ	0xFDE
  7932                           postdec2	equ	0xFDD
  7933                           fsr2h	equ	0xFDA
  7934                           fsr2l	equ	0xFD9
  7935                           status	equ	0xFD8
  7936                           
  7937 ;; *************** function _RADIO_DIO5 *****************
  7938 ;; Defined at:
  7939 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  dioMapping      1    0        unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : F/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;Total ram usage:        1 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:   11
  7960 ;; This function calls:
  7961 ;;		_RADIO_RegisterRead
  7962 ;;		_RADIO_UnhandledInterrupt
  7963 ;; This function is called by:
  7964 ;;		_LORAWAN_Mainloop
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           	psect	text48
  7969  00767A                     __ptext48:
  7970                           	opt stack 0
  7971  00767A                     _RADIO_DIO5:
  7972                           	opt stack 18
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  7976                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  7977                           
  7978                           ; BSR set to: 2
  7979                           ;incstack = 0
  7980  00767A  0E41               	movlw	65
  7981  00767C  EC97  F039         	call	_RADIO_RegisterRead
  7982                           
  7983                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  7984  007680  0E01               	movlw	1
  7985  007682  EC97  F039         	call	_RADIO_RegisterRead
  7986  007686  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  7987  007688  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  7988  00768A  0012               	return	
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  7992  00768C  0E01               	movlw	1
  7993  00768E  EFCE  F039         	goto	_RADIO_UnhandledInterrupt
  7994  007692                     __end_of_RADIO_DIO5:
  7995                           	opt stack 0
  7996                           tosu	equ	0xFFF
  7997                           tosh	equ	0xFFE
  7998                           tosl	equ	0xFFD
  7999                           pclath	equ	0xFFA
  8000                           tblptru	equ	0xFF8
  8001                           tblptrh	equ	0xFF7
  8002                           tblptrl	equ	0xFF6
  8003                           tablat	equ	0xFF5
  8004                           prodh	equ	0xFF4
  8005                           prodl	equ	0xFF3
  8006                           intcon	equ	0xFF2
  8007                           intcon2	equ	0xFF1
  8008                           intcon3	equ	0xFF0
  8009                           postinc0	equ	0xFEE
  8010                           wreg	equ	0xFE8
  8011                           postinc1	equ	0xFE6
  8012                           postdec1	equ	0xFE5
  8013                           plusw1	equ	0xFE3
  8014                           fsr1h	equ	0xFE2
  8015                           fsr1l	equ	0xFE1
  8016                           indf2	equ	0xFDF
  8017                           postinc2	equ	0xFDE
  8018                           postdec2	equ	0xFDD
  8019                           fsr2h	equ	0xFDA
  8020                           fsr2l	equ	0xFD9
  8021                           status	equ	0xFD8
  8022                           
  8023 ;; *************** function _RADIO_DIO4 *****************
  8024 ;; Defined at:
  8025 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;		None
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  dioMapping      1    0        unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2, status,0, cstack
  8034 ;; Tracked objects:
  8035 ;;		On entry : F/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8043 ;;Total ram usage:        1 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:   11
  8046 ;; This function calls:
  8047 ;;		_RADIO_RegisterRead
  8048 ;;		_RADIO_UnhandledInterrupt
  8049 ;; This function is called by:
  8050 ;;		_LORAWAN_Mainloop
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text49
  8055  007692                     __ptext49:
  8056                           	opt stack 0
  8057  007692                     _RADIO_DIO4:
  8058                           	opt stack 18
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8062                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8063                           
  8064                           ;incstack = 0
  8065  007692  0E41               	movlw	65
  8066  007694  EC97  F039         	call	_RADIO_RegisterRead
  8067                           
  8068                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8069  007698  0E01               	movlw	1
  8070  00769A  EC97  F039         	call	_RADIO_RegisterRead
  8071  00769E  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8072  0076A0  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8073  0076A2  0012               	return	
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8077  0076A4  0E01               	movlw	1
  8078  0076A6  EFCE  F039         	goto	_RADIO_UnhandledInterrupt
  8079  0076AA                     __end_of_RADIO_DIO4:
  8080                           	opt stack 0
  8081                           tosu	equ	0xFFF
  8082                           tosh	equ	0xFFE
  8083                           tosl	equ	0xFFD
  8084                           pclath	equ	0xFFA
  8085                           tblptru	equ	0xFF8
  8086                           tblptrh	equ	0xFF7
  8087                           tblptrl	equ	0xFF6
  8088                           tablat	equ	0xFF5
  8089                           prodh	equ	0xFF4
  8090                           prodl	equ	0xFF3
  8091                           intcon	equ	0xFF2
  8092                           intcon2	equ	0xFF1
  8093                           intcon3	equ	0xFF0
  8094                           postinc0	equ	0xFEE
  8095                           wreg	equ	0xFE8
  8096                           postinc1	equ	0xFE6
  8097                           postdec1	equ	0xFE5
  8098                           plusw1	equ	0xFE3
  8099                           fsr1h	equ	0xFE2
  8100                           fsr1l	equ	0xFE1
  8101                           indf2	equ	0xFDF
  8102                           postinc2	equ	0xFDE
  8103                           postdec2	equ	0xFDD
  8104                           fsr2h	equ	0xFDA
  8105                           fsr2l	equ	0xFD9
  8106                           status	equ	0xFD8
  8107                           
  8108 ;; *************** function _RADIO_DIO3 *****************
  8109 ;; Defined at:
  8110 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  dioMapping      1    0        unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : F/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;Total ram usage:        1 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:   11
  8131 ;; This function calls:
  8132 ;;		_RADIO_RegisterRead
  8133 ;;		_RADIO_UnhandledInterrupt
  8134 ;; This function is called by:
  8135 ;;		_LORAWAN_Mainloop
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text50
  8140  0076AA                     __ptext50:
  8141                           	opt stack 0
  8142  0076AA                     _RADIO_DIO3:
  8143                           	opt stack 18
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8147                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8148                           
  8149                           ;incstack = 0
  8150  0076AA  0E40               	movlw	64
  8151  0076AC  EC97  F039         	call	_RADIO_RegisterRead
  8152                           
  8153                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8154  0076B0  0E01               	movlw	1
  8155  0076B2  EC97  F039         	call	_RADIO_RegisterRead
  8156  0076B6  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8157  0076B8  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8158  0076BA  0012               	return	
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8162  0076BC  0E01               	movlw	1
  8163  0076BE  EFCE  F039         	goto	_RADIO_UnhandledInterrupt
  8164  0076C2                     __end_of_RADIO_DIO3:
  8165                           	opt stack 0
  8166                           tosu	equ	0xFFF
  8167                           tosh	equ	0xFFE
  8168                           tosl	equ	0xFFD
  8169                           pclath	equ	0xFFA
  8170                           tblptru	equ	0xFF8
  8171                           tblptrh	equ	0xFF7
  8172                           tblptrl	equ	0xFF6
  8173                           tablat	equ	0xFF5
  8174                           prodh	equ	0xFF4
  8175                           prodl	equ	0xFF3
  8176                           intcon	equ	0xFF2
  8177                           intcon2	equ	0xFF1
  8178                           intcon3	equ	0xFF0
  8179                           postinc0	equ	0xFEE
  8180                           wreg	equ	0xFE8
  8181                           postinc1	equ	0xFE6
  8182                           postdec1	equ	0xFE5
  8183                           plusw1	equ	0xFE3
  8184                           fsr1h	equ	0xFE2
  8185                           fsr1l	equ	0xFE1
  8186                           indf2	equ	0xFDF
  8187                           postinc2	equ	0xFDE
  8188                           postdec2	equ	0xFDD
  8189                           fsr2h	equ	0xFDA
  8190                           fsr2l	equ	0xFD9
  8191                           status	equ	0xFD8
  8192                           
  8193 ;; *************** function _RADIO_DIO2 *****************
  8194 ;; Defined at:
  8195 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;		None
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8200 ;;  opMode          1    0        unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0, cstack
  8205 ;; Tracked objects:
  8206 ;;		On entry : F/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8212 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8213 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8214 ;;Total ram usage:        2 bytes
  8215 ;; Hardware stack levels used:    1
  8216 ;; Hardware stack levels required when called:   12
  8217 ;; This function calls:
  8218 ;;		_RADIO_FHSSChangeChannel
  8219 ;;		_RADIO_RegisterRead
  8220 ;;		_RADIO_UnhandledInterrupt
  8221 ;; This function is called by:
  8222 ;;		_LORAWAN_Mainloop
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text51
  8227  006BD6                     __ptext51:
  8228                           	opt stack 0
  8229  006BD6                     _RADIO_DIO2:
  8230                           	opt stack 17
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8234                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8235                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8236                           
  8237                           ;incstack = 0
  8238  006BD6  0E40               	movlw	64
  8239  006BD8  EC97  F039         	call	_RADIO_RegisterRead
  8240  006BDC  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8241  006BDE  90D8               	bcf	status,0,c
  8242  006BE0  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8243  006BE2  90D8               	bcf	status,0,c
  8244  006BE4  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8245  006BE6  0B03               	andlw	3
  8246  006BE8  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8247                           
  8248                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8249  006BEA  0E01               	movlw	1
  8250  006BEC  EC97  F039         	call	_RADIO_RegisterRead
  8251                           
  8252                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8253  006BF0  0E01               	movlw	1
  8254  006BF2  EC97  F039         	call	_RADIO_RegisterRead
  8255  006BF6  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8256  006BF8  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8257  006BFA  0012               	return	
  8258  006BFC  D003               	goto	l15280
  8259  006BFE                     l15276:
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8263  006BFE  0E01               	movlw	1
  8264  006C00  EFCE  F039         	goto	_RADIO_UnhandledInterrupt
  8265  006C04                     l15280:
  8266                           
  8267                           ; BSR set to: 0
  8268  006C04  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8269                           
  8270                           ; Switch size 1, requested type "speed"
  8271                           ; Number of cases is 3, Range of values is 0 to 2
  8272                           ; switch strategies available:
  8273                           ; Name         Instructions Cycles
  8274                           ; simple_byte           10     6 (average)
  8275                           ;	Chosen strategy is simple_byte
  8276  006C06  E102 EF9E  F038    	bz	_RADIO_FHSSChangeChannel
  8277  006C0C  0A01               	xorlw	1	; case 1
  8278  006C0E  E102 EF9E  F038    	bz	_RADIO_FHSSChangeChannel
  8279  006C14  0A03               	xorlw	3	; case 2
  8280  006C16  E102 EF9E  F038    	bz	_RADIO_FHSSChangeChannel
  8281  006C1C  D7F0               	goto	l15276
  8282  006C1E                     __end_of_RADIO_DIO2:
  8283                           	opt stack 0
  8284                           tosu	equ	0xFFF
  8285                           tosh	equ	0xFFE
  8286                           tosl	equ	0xFFD
  8287                           pclath	equ	0xFFA
  8288                           tblptru	equ	0xFF8
  8289                           tblptrh	equ	0xFF7
  8290                           tblptrl	equ	0xFF6
  8291                           tablat	equ	0xFF5
  8292                           prodh	equ	0xFF4
  8293                           prodl	equ	0xFF3
  8294                           intcon	equ	0xFF2
  8295                           intcon2	equ	0xFF1
  8296                           intcon3	equ	0xFF0
  8297                           postinc0	equ	0xFEE
  8298                           wreg	equ	0xFE8
  8299                           postinc1	equ	0xFE6
  8300                           postdec1	equ	0xFE5
  8301                           plusw1	equ	0xFE3
  8302                           fsr1h	equ	0xFE2
  8303                           fsr1l	equ	0xFE1
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           fsr2h	equ	0xFDA
  8308                           fsr2l	equ	0xFD9
  8309                           status	equ	0xFD8
  8310                           
  8311 ;; *************** function _RADIO_DIO1 *****************
  8312 ;; Defined at:
  8313 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;  dioMapping      1   81[BANK0 ] unsigned char 
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  1    wreg      void 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8322 ;; Tracked objects:
  8323 ;;		On entry : F/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8331 ;;Total ram usage:        2 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; Hardware stack levels required when called:   17
  8334 ;; This function calls:
  8335 ;;		_RADIO_FHSSChangeChannel
  8336 ;;		_RADIO_RegisterRead
  8337 ;;		_RADIO_RxTimeout
  8338 ;;		_RADIO_UnhandledInterrupt
  8339 ;; This function is called by:
  8340 ;;		_LORAWAN_Mainloop
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text52
  8345  006E5E                     __ptext52:
  8346                           	opt stack 0
  8347  006E5E                     _RADIO_DIO1:
  8348                           	opt stack 12
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8352                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8353                           
  8354                           ;incstack = 0
  8355  006E5E  0E40               	movlw	64
  8356  006E60  EC97  F039         	call	_RADIO_RegisterRead
  8357  006E64  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8358  006E66  39B0               	swapf	??_RADIO_DIO1& (0+255),w,b
  8359  006E68  0B0F               	andlw	15
  8360  006E6A  0B03               	andlw	3
  8361  006E6C  6FB1               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8362                           
  8363                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8364  006E6E  0E01               	movlw	1
  8365  006E70  EC97  F039         	call	_RADIO_RegisterRead
  8366  006E74  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8367  006E76  AFB0               	btfss	??_RADIO_DIO1& (0+255),7,b
  8368  006E78  D00D               	goto	l15268
  8369  006E7A  D003               	goto	l15264
  8370  006E7C                     l15260:
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8374  006E7C  0E01               	movlw	1
  8375  006E7E  EFCE  F039         	goto	_RADIO_UnhandledInterrupt
  8376  006E82                     l15264:
  8377                           
  8378                           ; BSR set to: 0
  8379  006E82  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8380                           
  8381                           ; Switch size 1, requested type "speed"
  8382                           ; Number of cases is 2, Range of values is 0 to 1
  8383                           ; switch strategies available:
  8384                           ; Name         Instructions Cycles
  8385                           ; simple_byte            7     4 (average)
  8386                           ;	Chosen strategy is simple_byte
  8387  006E84  E102 EF49  F039    	bz	_RADIO_RxTimeout
  8388  006E8A  0A01               	xorlw	1	; case 1
  8389  006E8C  E102 EF9E  F038    	bz	_RADIO_FHSSChangeChannel
  8390  006E92  D7F4               	goto	l15260
  8391  006E94                     l15268:
  8392                           
  8393                           ; BSR set to: 0
  8394  006E94  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8395                           
  8396                           ; Switch size 1, requested type "speed"
  8397                           ; Number of cases is 1, Range of values is 0 to 0
  8398                           ; switch strategies available:
  8399                           ; Name         Instructions Cycles
  8400                           ; simple_byte            4     3 (average)
  8401                           ;	Chosen strategy is simple_byte
  8402  006E96  0012               	return	
  8403  006E98                     __end_of_RADIO_DIO1:
  8404                           	opt stack 0
  8405                           tosu	equ	0xFFF
  8406                           tosh	equ	0xFFE
  8407                           tosl	equ	0xFFD
  8408                           pclath	equ	0xFFA
  8409                           tblptru	equ	0xFF8
  8410                           tblptrh	equ	0xFF7
  8411                           tblptrl	equ	0xFF6
  8412                           tablat	equ	0xFF5
  8413                           prodh	equ	0xFF4
  8414                           prodl	equ	0xFF3
  8415                           intcon	equ	0xFF2
  8416                           intcon2	equ	0xFF1
  8417                           intcon3	equ	0xFF0
  8418                           postinc0	equ	0xFEE
  8419                           wreg	equ	0xFE8
  8420                           postinc1	equ	0xFE6
  8421                           postdec1	equ	0xFE5
  8422                           plusw1	equ	0xFE3
  8423                           fsr1h	equ	0xFE2
  8424                           fsr1l	equ	0xFE1
  8425                           indf2	equ	0xFDF
  8426                           postinc2	equ	0xFDE
  8427                           postdec2	equ	0xFDD
  8428                           fsr2h	equ	0xFDA
  8429                           fsr2l	equ	0xFD9
  8430                           status	equ	0xFD8
  8431                           
  8432 ;; *************** function _RADIO_RxTimeout *****************
  8433 ;; Defined at:
  8434 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;		None
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;		None
  8439 ;; Return value:  Size  Location     Type
  8440 ;;                  1    wreg      void 
  8441 ;; Registers used:
  8442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8443 ;; Tracked objects:
  8444 ;;		On entry : F/0
  8445 ;;		On exit  : D/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;Total ram usage:        0 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; Hardware stack levels required when called:   16
  8455 ;; This function calls:
  8456 ;;		_LORAWAN_RxTimeout
  8457 ;;		_RADIO_RegisterWrite
  8458 ;;		_RADIO_WriteMode
  8459 ;;		_SwTimerStop
  8460 ;; This function is called by:
  8461 ;;		_RADIO_DIO1
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text53
  8466  007292                     __ptext53:
  8467                           	opt stack 0
  8468  007292                     _RADIO_RxTimeout:
  8469                           	opt stack 12
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8473                           
  8474                           ;incstack = 0
  8475  007292  0101               	movlb	1	; () banked
  8476  007294  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8477  007296  EC9B  F03A         	call	_SwTimerStop
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8481  00729A  0E80               	movlw	128
  8482  00729C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8483  00729E  0E12               	movlw	18
  8484  0072A0  EC6E  F03A         	call	_RADIO_RegisterWrite
  8485                           
  8486                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8487  0072A4  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8488  0072A8  0E00               	movlw	0
  8489  0072AA  0100               	movlb	0	; () banked
  8490  0072AC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8491  0072AE  EC6E  F028         	call	_RADIO_WriteMode
  8492                           
  8493                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8494  0072B2  0101               	movlb	1	; () banked
  8495  0072B4  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8496                           
  8497                           ; BSR set to: 1
  8498                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8499  0072B6  EF71  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8500  0072BA                     __end_of_RADIO_RxTimeout:
  8501                           	opt stack 0
  8502                           tosu	equ	0xFFF
  8503                           tosh	equ	0xFFE
  8504                           tosl	equ	0xFFD
  8505                           pclath	equ	0xFFA
  8506                           tblptru	equ	0xFF8
  8507                           tblptrh	equ	0xFF7
  8508                           tblptrl	equ	0xFF6
  8509                           tablat	equ	0xFF5
  8510                           prodh	equ	0xFF4
  8511                           prodl	equ	0xFF3
  8512                           intcon	equ	0xFF2
  8513                           intcon2	equ	0xFF1
  8514                           intcon3	equ	0xFF0
  8515                           postinc0	equ	0xFEE
  8516                           wreg	equ	0xFE8
  8517                           postinc1	equ	0xFE6
  8518                           postdec1	equ	0xFE5
  8519                           plusw1	equ	0xFE3
  8520                           fsr1h	equ	0xFE2
  8521                           fsr1l	equ	0xFE1
  8522                           indf2	equ	0xFDF
  8523                           postinc2	equ	0xFDE
  8524                           postdec2	equ	0xFDD
  8525                           fsr2h	equ	0xFDA
  8526                           fsr2l	equ	0xFD9
  8527                           status	equ	0xFD8
  8528                           
  8529 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8530 ;; Defined at:
  8531 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;		None
  8534 ;; Auto vars:     Size  Location     Type
  8535 ;;  irqFlags        1    0        unsigned char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  1    wreg      void 
  8538 ;; Registers used:
  8539 ;;		wreg, status,2, status,0, cstack
  8540 ;; Tracked objects:
  8541 ;;		On entry : F/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;Total ram usage:        0 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:   11
  8552 ;; This function calls:
  8553 ;;		_RADIO_RegisterRead
  8554 ;;		_RADIO_RegisterWrite
  8555 ;;		_RADIO_WriteFrequency
  8556 ;; This function is called by:
  8557 ;;		_RADIO_DIO1
  8558 ;;		_RADIO_DIO2
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text54
  8563  00713C                     __ptext54:
  8564                           	opt stack 0
  8565  00713C                     _RADIO_FHSSChangeChannel:
  8566                           	opt stack 17
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8570                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8571                           
  8572                           ;incstack = 0
  8573  00713C  0E12               	movlw	18
  8574  00713E  EC97  F039         	call	_RADIO_RegisterRead
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8578  007142  0101               	movlb	1	; () banked
  8579  007144  5188               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8580  007146  1189               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8581  007148  E00A               	bz	l592
  8582                           
  8583                           ; BSR set to: 1
  8584                           ;radio_driver_SX1276.c: 1164: {
  8585                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8586  00714A  5199               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8587  00714C  119A               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8588  00714E  E007               	bz	l592
  8589                           
  8590                           ; BSR set to: 1
  8591                           ;radio_driver_SX1276.c: 1166: {
  8592                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8593  007150  0100               	movlb	0	; () banked
  8594  007152  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8595  007154  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8596  007156  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8597  007158  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8598  00715A  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
  8599  00715E                     l592:
  8600                           
  8601                           ;radio_driver_SX1276.c: 1168: }
  8602                           ;radio_driver_SX1276.c: 1169: }
  8603                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8604  00715E  0E02               	movlw	2
  8605  007160  0100               	movlb	0	; () banked
  8606  007162  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8607  007164  0E12               	movlw	18
  8608  007166  EF6E  F03A         	goto	_RADIO_RegisterWrite
  8609  00716A                     __end_of_RADIO_FHSSChangeChannel:
  8610                           	opt stack 0
  8611                           tosu	equ	0xFFF
  8612                           tosh	equ	0xFFE
  8613                           tosl	equ	0xFFD
  8614                           pclath	equ	0xFFA
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           intcon2	equ	0xFF1
  8623                           intcon3	equ	0xFF0
  8624                           postinc0	equ	0xFEE
  8625                           wreg	equ	0xFE8
  8626                           postinc1	equ	0xFE6
  8627                           postdec1	equ	0xFE5
  8628                           plusw1	equ	0xFE3
  8629                           fsr1h	equ	0xFE2
  8630                           fsr1l	equ	0xFE1
  8631                           indf2	equ	0xFDF
  8632                           postinc2	equ	0xFDE
  8633                           postdec2	equ	0xFDD
  8634                           fsr2h	equ	0xFDA
  8635                           fsr2l	equ	0xFD9
  8636                           status	equ	0xFD8
  8637                           
  8638 ;; *************** function _RADIO_DIO0 *****************
  8639 ;; Defined at:
  8640 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  opMode          1  135[BANK0 ] unsigned char 
  8645 ;;  dioMapping      1  134[BANK0 ] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      void 
  8648 ;; Registers used:
  8649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : F/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8658 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8659 ;;Total ram usage:        4 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:   17
  8662 ;; This function calls:
  8663 ;;		_RADIO_FSKPacketSent
  8664 ;;		_RADIO_FSKPayloadReady
  8665 ;;		_RADIO_RegisterRead
  8666 ;;		_RADIO_RxDone
  8667 ;;		_RADIO_TxDone
  8668 ;;		_RADIO_UnhandledInterrupt
  8669 ;; This function is called by:
  8670 ;;		_LORAWAN_Mainloop
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text55
  8675  00646A                     __ptext55:
  8676                           	opt stack 0
  8677  00646A                     _RADIO_DIO0:
  8678                           	opt stack 12
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8682                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8683                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8684                           
  8685                           ;incstack = 0
  8686  00646A  0E40               	movlw	64
  8687  00646C  EC97  F039         	call	_RADIO_RegisterRead
  8688  006470  6FE4               	movwf	??_RADIO_DIO0& (0+255),b
  8689  006472  0E06               	movlw	6
  8690  006474  6FE5               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8691  006476                     u18025:
  8692  006476  90D8               	bcf	status,0,c
  8693  006478  33E4               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8694  00647A  2FE5               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8695  00647C  D7FC               	goto	u18025
  8696  00647E  51E4               	movf	??_RADIO_DIO0& (0+255),w,b
  8697  006480  0B03               	andlw	3
  8698  006482  6FE6               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8699                           
  8700                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8701  006484  0E01               	movlw	1
  8702  006486  EC97  F039         	call	_RADIO_RegisterRead
  8703  00648A  6FE7               	movwf	RADIO_DIO0@opMode& (0+255),b
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8707  00648C  AFE7               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  8708  00648E  D01C               	goto	l15250
  8709  006490  D003               	goto	l15234
  8710  006492                     l15230:
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8714  006492  0E01               	movlw	1
  8715  006494  EFCE  F039         	goto	_RADIO_UnhandledInterrupt
  8716  006498                     l15234:
  8717                           
  8718                           ; BSR set to: 0
  8719  006498  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8720                           
  8721                           ; Switch size 1, requested type "speed"
  8722                           ; Number of cases is 2, Range of values is 0 to 1
  8723                           ; switch strategies available:
  8724                           ; Name         Instructions Cycles
  8725                           ; simple_byte            7     4 (average)
  8726                           ;	Chosen strategy is simple_byte
  8727  00649A  E102 EFDA  F028    	bz	_RADIO_RxDone
  8728  0064A0  0A01               	xorlw	1	; case 1
  8729  0064A2  E102 EFD9  F01D    	bz	_RADIO_TxDone
  8730  0064A8  D7F4               	goto	l15230
  8731  0064AA                     l15236:
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8735  0064AA  0E07               	movlw	7
  8736  0064AC  17E7               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8737                           
  8738                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8739  0064AE  0E03               	movlw	3
  8740  0064B0  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8741  0064B2  E102               	bnz	l15240
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;radio_driver_SX1276.c: 1209: {
  8745                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8746  0064B4  EF10  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  8747  0064B8                     l15240:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8751  0064B8  0E05               	movlw	5
  8752  0064BA  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8753  0064BC  E102               	bnz	l15246
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;radio_driver_SX1276.c: 1214: {
  8757                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8758  0064BE  EF2E  F02D         	goto	_RADIO_FSKPayloadReady	;wreg free
  8759  0064C2                     l15246:
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8763  0064C2  0E00               	movlw	0
  8764  0064C4  EFCE  F039         	goto	_RADIO_UnhandledInterrupt
  8765  0064C8                     l15250:
  8766                           
  8767                           ; BSR set to: 0
  8768  0064C8  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8769                           
  8770                           ; Switch size 1, requested type "speed"
  8771                           ; Number of cases is 1, Range of values is 0 to 0
  8772                           ; switch strategies available:
  8773                           ; Name         Instructions Cycles
  8774                           ; simple_byte            4     3 (average)
  8775                           ;	Chosen strategy is simple_byte
  8776  0064CA  E0EF               	bz	l15236
  8777  0064CC  D7FA               	goto	l15246
  8778  0064CE                     __end_of_RADIO_DIO0:
  8779                           	opt stack 0
  8780                           tosu	equ	0xFFF
  8781                           tosh	equ	0xFFE
  8782                           tosl	equ	0xFFD
  8783                           pclath	equ	0xFFA
  8784                           tblptru	equ	0xFF8
  8785                           tblptrh	equ	0xFF7
  8786                           tblptrl	equ	0xFF6
  8787                           tablat	equ	0xFF5
  8788                           prodh	equ	0xFF4
  8789                           prodl	equ	0xFF3
  8790                           intcon	equ	0xFF2
  8791                           intcon2	equ	0xFF1
  8792                           intcon3	equ	0xFF0
  8793                           postinc0	equ	0xFEE
  8794                           wreg	equ	0xFE8
  8795                           postinc1	equ	0xFE6
  8796                           postdec1	equ	0xFE5
  8797                           plusw1	equ	0xFE3
  8798                           fsr1h	equ	0xFE2
  8799                           fsr1l	equ	0xFE1
  8800                           indf2	equ	0xFDF
  8801                           postinc2	equ	0xFDE
  8802                           postdec2	equ	0xFDD
  8803                           fsr2h	equ	0xFDA
  8804                           fsr2l	equ	0xFD9
  8805                           status	equ	0xFD8
  8806                           
  8807 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8808 ;; Defined at:
  8809 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  modulation      1    wreg     enum E7751
  8812 ;; Auto vars:     Size  Location     Type
  8813 ;;  modulation      1    8[BANK0 ] enum E7751
  8814 ;; Return value:  Size  Location     Type
  8815 ;;                  1    wreg      void 
  8816 ;; Registers used:
  8817 ;;		wreg, status,2, status,0, cstack
  8818 ;; Tracked objects:
  8819 ;;		On entry : F/0
  8820 ;;		On exit  : 0/0
  8821 ;;		Unchanged: 0/0
  8822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;Total ram usage:        1 bytes
  8828 ;; Hardware stack levels used:    1
  8829 ;; Hardware stack levels required when called:   10
  8830 ;; This function calls:
  8831 ;;		_RADIO_RegisterWrite
  8832 ;; This function is called by:
  8833 ;;		_RADIO_DIO0
  8834 ;;		_RADIO_DIO1
  8835 ;;		_RADIO_DIO2
  8836 ;;		_RADIO_DIO3
  8837 ;;		_RADIO_DIO4
  8838 ;;		_RADIO_DIO5
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text56
  8843  00739C                     __ptext56:
  8844                           	opt stack 0
  8845  00739C                     _RADIO_UnhandledInterrupt:
  8846                           	opt stack 18
  8847                           
  8848                           ;incstack = 0
  8849                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8850  00739C  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8851                           
  8852                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8853  00739E  0100               	movlb	0	; () banked
  8854  0073A0  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8855  0073A2  E104               	bnz	l14926
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;radio_driver_SX1276.c: 1145: {
  8859                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8860  0073A4  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8861  0073A6  0E12               	movlw	18
  8862  0073A8  EF6E  F03A         	goto	_RADIO_RegisterWrite
  8863  0073AC                     l14926:
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;radio_driver_SX1276.c: 1148: else
  8867                           ;radio_driver_SX1276.c: 1149: {
  8868                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8869  0073AC  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8870  0073AE  0E3E               	movlw	62
  8871  0073B0  EC6E  F03A         	call	_RADIO_RegisterWrite
  8872                           
  8873                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8874  0073B4  0100               	movlb	0	; () banked
  8875  0073B6  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8876  0073B8  0E3F               	movlw	63
  8877  0073BA  EF6E  F03A         	goto	_RADIO_RegisterWrite
  8878  0073BE                     __end_of_RADIO_UnhandledInterrupt:
  8879                           	opt stack 0
  8880                           tosu	equ	0xFFF
  8881                           tosh	equ	0xFFE
  8882                           tosl	equ	0xFFD
  8883                           pclath	equ	0xFFA
  8884                           tblptru	equ	0xFF8
  8885                           tblptrh	equ	0xFF7
  8886                           tblptrl	equ	0xFF6
  8887                           tablat	equ	0xFF5
  8888                           prodh	equ	0xFF4
  8889                           prodl	equ	0xFF3
  8890                           intcon	equ	0xFF2
  8891                           intcon2	equ	0xFF1
  8892                           intcon3	equ	0xFF0
  8893                           postinc0	equ	0xFEE
  8894                           wreg	equ	0xFE8
  8895                           postinc1	equ	0xFE6
  8896                           postdec1	equ	0xFE5
  8897                           plusw1	equ	0xFE3
  8898                           fsr1h	equ	0xFE2
  8899                           fsr1l	equ	0xFE1
  8900                           indf2	equ	0xFDF
  8901                           postinc2	equ	0xFDE
  8902                           postdec2	equ	0xFDD
  8903                           fsr2h	equ	0xFDA
  8904                           fsr2l	equ	0xFD9
  8905                           status	equ	0xFD8
  8906                           
  8907 ;; *************** function _RADIO_TxDone *****************
  8908 ;; Defined at:
  8909 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;		None
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  1    wreg      void 
  8916 ;; Registers used:
  8917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8918 ;; Tracked objects:
  8919 ;;		On entry : F/0
  8920 ;;		On exit  : C/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8924 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8925 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8926 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;Total ram usage:       12 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:   15
  8930 ;; This function calls:
  8931 ;;		_LORAWAN_TxDone
  8932 ;;		_RADIO_RegisterWrite
  8933 ;;		_RADIO_WriteMode
  8934 ;;		_SwTimerReadValue
  8935 ;;		_SwTimerStop
  8936 ;; This function is called by:
  8937 ;;		_RADIO_DIO0
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text57
  8942  003BB2                     __ptext57:
  8943                           	opt stack 0
  8944  003BB2                     _RADIO_TxDone:
  8945                           	opt stack 13
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8949                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8950                           
  8951                           ;incstack = 0
  8952  003BB2  0101               	movlb	1	; () banked
  8953  003BB4  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8954  003BB6  EC9B  F03A         	call	_SwTimerStop
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8958  003BBA  0E08               	movlw	8
  8959  003BBC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8960  003BBE  0E12               	movlw	18
  8961  003BC0  EC6E  F03A         	call	_RADIO_RegisterWrite
  8962                           
  8963                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8964  003BC4  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8965  003BC8  0E00               	movlw	0
  8966  003BCA  0100               	movlb	0	; () banked
  8967  003BCC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8968  003BCE  EC6E  F028         	call	_RADIO_WriteMode
  8969                           
  8970                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  8971  003BD2  0101               	movlb	1	; () banked
  8972  003BD4  918D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  8973                           
  8974                           ; BSR set to: 1
  8975                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  8976  003BD6  B98D               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  8977  003BD8  0012               	return	
  8978                           
  8979                           ; BSR set to: 1
  8980                           ;radio_driver_SX1276.c: 1087: {
  8981                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  8982  003BDA  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8983  003BDC  EC96  F036         	call	_SwTimerReadValue
  8984  003BE0  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  8985  003BE2  E107               	bnz	u17290
  8986  003BE4  0E1F               	movlw	31
  8987  003BE6  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
  8988  003BE8  0EAC               	movlw	172
  8989  003BEA  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  8990  003BEC  0EDF               	movlw	223
  8991  003BEE  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  8992  003BF0  E346               	bnc	l14892
  8993  003BF2                     u17290:
  8994                           
  8995                           ; BSR set to: 0
  8996  003BF2  0101               	movlb	1	; () banked
  8997  003BF4  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
  8998  003BF6  EC96  F036         	call	_SwTimerReadValue
  8999  003BFA  0E0D               	movlw	13
  9000  003BFC  D005               	goto	u17300
  9001  003BFE                     u17305:
  9002  003BFE  90D8               	bcf	status,0,c
  9003  003C00  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9004  003C02  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9005  003C04  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9006  003C06  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9007  003C08                     u17300:
  9008  003C08  2EE8               	decfsz	wreg,f,c
  9009  003C0A  D7F9               	goto	u17305
  9010  003C0C  0E7D               	movlw	125
  9011  003C0E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9012  003C10  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9013  003C14  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9014  003C18  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9015  003C1A  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9016  003C1C  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9017  003C1E  50F3               	movf	prodl,w,c
  9018  003C20  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9019  003C22  50F4               	movf	prodh,w,c
  9020  003C24  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9021  003C26  0E00               	movlw	0
  9022  003C28  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9023  003C2A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9024  003C2C  50F3               	movf	prodl,w,c
  9025  003C2E  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9026  003C30  50F4               	movf	prodh,w,c
  9027  003C32  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9028  003C34  0E00               	movlw	0
  9029  003C36  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9030  003C38  0E7D               	movlw	125
  9031  003C3A  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9032  003C3C  50F3               	movf	prodl,w,c
  9033  003C3E  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9034  003C40  50F4               	movf	prodh,w,c
  9035  003C42  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9036  003C44  0E00               	movlw	0
  9037  003C46  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9038  003C48  50F3               	movf	prodl,w,c
  9039  003C4A  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9040  003C4C  50F4               	movf	prodh,w,c
  9041  003C4E  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9042  003C50  0E00               	movlw	0
  9043  003C52  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9044  003C54  50F3               	movf	prodl,w,c
  9045  003C56  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9046  003C58  50F4               	movf	prodh,w,c
  9047  003C5A  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9048  003C5C  0E7D               	movlw	125
  9049  003C5E  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9050  003C60  50F3               	movf	prodl,w,c
  9051  003C62  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9052  003C64  0E00               	movlw	0
  9053  003C66  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9054  003C68  50F3               	movf	prodl,w,c
  9055  003C6A  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9056  003C6C  0E00               	movlw	0
  9057  003C6E  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9058  003C70  50F3               	movf	prodl,w,c
  9059  003C72  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9060  003C74  0E00               	movlw	0
  9061  003C76  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9062  003C78  50F3               	movf	prodl,w,c
  9063  003C7A  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9064  003C7C  D045               	goto	L4
  9065  003C7E                     l14892:
  9066                           
  9067                           ; BSR set to: 0
  9068  003C7E  0101               	movlb	1	; () banked
  9069  003C80  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9070  003C82  EC96  F036         	call	_SwTimerReadValue
  9071  003C86  0E7D               	movlw	125
  9072  003C88  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9073  003C8A  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9074  003C8E  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9075  003C92  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9076  003C94  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9077  003C96  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9078  003C98  50F3               	movf	prodl,w,c
  9079  003C9A  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9080  003C9C  50F4               	movf	prodh,w,c
  9081  003C9E  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9082  003CA0  0E00               	movlw	0
  9083  003CA2  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9084  003CA4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9085  003CA6  50F3               	movf	prodl,w,c
  9086  003CA8  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9087  003CAA  50F4               	movf	prodh,w,c
  9088  003CAC  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9089  003CAE  0E00               	movlw	0
  9090  003CB0  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9091  003CB2  0E7D               	movlw	125
  9092  003CB4  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9093  003CB6  50F3               	movf	prodl,w,c
  9094  003CB8  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9095  003CBA  50F4               	movf	prodh,w,c
  9096  003CBC  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9097  003CBE  0E00               	movlw	0
  9098  003CC0  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9099  003CC2  50F3               	movf	prodl,w,c
  9100  003CC4  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9101  003CC6  50F4               	movf	prodh,w,c
  9102  003CC8  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9103  003CCA  0E00               	movlw	0
  9104  003CCC  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9105  003CCE  50F3               	movf	prodl,w,c
  9106  003CD0  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9107  003CD2  50F4               	movf	prodh,w,c
  9108  003CD4  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9109  003CD6  0E7D               	movlw	125
  9110  003CD8  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9111  003CDA  50F3               	movf	prodl,w,c
  9112  003CDC  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9113  003CDE  0E00               	movlw	0
  9114  003CE0  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9115  003CE2  50F3               	movf	prodl,w,c
  9116  003CE4  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9117  003CE6  0E00               	movlw	0
  9118  003CE8  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9119  003CEA  50F3               	movf	prodl,w,c
  9120  003CEC  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9121  003CEE  0E00               	movlw	0
  9122  003CF0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9123  003CF2  50F3               	movf	prodl,w,c
  9124  003CF4  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9125  003CF6  0E0D               	movlw	13
  9126  003CF8  D005               	goto	u17310
  9127  003CFA                     u17315:
  9128  003CFA  90D8               	bcf	status,0,c
  9129  003CFC  33D5               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9130  003CFE  33D4               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9131  003D00  33D3               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9132  003D02  33D2               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9133  003D04                     u17310:
  9134  003D04  2EE8               	decfsz	wreg,f,c
  9135  003D06  D7F9               	goto	u17315
  9136  003D08                     L4:
  9137  003D08  C0D2  F0DA         	movff	??_RADIO_TxDone,_RADIO_TxDone$1211
  9138  003D0C  C0D3  F0DB         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1211+1
  9139  003D10  C0D4  F0DC         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1211+2
  9140  003D14  C0D5  F0DD         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1211+3
  9141                           
  9142                           ; BSR set to: 0
  9143  003D18  51DA               	movf	_RADIO_TxDone$1211& (0+255),w,b
  9144  003D1A  0820               	sublw	32
  9145  003D1C  6FD6               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9146  003D1E  0E4E               	movlw	78
  9147  003D20  55DB               	subfwb	(_RADIO_TxDone$1211+1)& (0+255),w,b
  9148  003D22  6FD7               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9149  003D24  0E00               	movlw	0
  9150  003D26  55DC               	subfwb	(_RADIO_TxDone$1211+2)& (0+255),w,b
  9151  003D28  6FD8               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9152  003D2A  0E00               	movlw	0
  9153  003D2C  55DD               	subfwb	(_RADIO_TxDone$1211+3)& (0+255),w,b
  9154  003D2E  6FD9               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9158  003D30  C0D6  F0A0         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9159  003D34  C0D7  F0A1         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9160  003D38  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
  9161  003D3C                     __end_of_RADIO_TxDone:
  9162                           	opt stack 0
  9163                           tosu	equ	0xFFF
  9164                           tosh	equ	0xFFE
  9165                           tosl	equ	0xFFD
  9166                           pclath	equ	0xFFA
  9167                           tblptru	equ	0xFF8
  9168                           tblptrh	equ	0xFF7
  9169                           tblptrl	equ	0xFF6
  9170                           tablat	equ	0xFF5
  9171                           prodh	equ	0xFF4
  9172                           prodl	equ	0xFF3
  9173                           intcon	equ	0xFF2
  9174                           intcon2	equ	0xFF1
  9175                           intcon3	equ	0xFF0
  9176                           postinc0	equ	0xFEE
  9177                           wreg	equ	0xFE8
  9178                           postinc1	equ	0xFE6
  9179                           postdec1	equ	0xFE5
  9180                           plusw1	equ	0xFE3
  9181                           fsr1h	equ	0xFE2
  9182                           fsr1l	equ	0xFE1
  9183                           indf2	equ	0xFDF
  9184                           postinc2	equ	0xFDE
  9185                           postdec2	equ	0xFDD
  9186                           fsr2h	equ	0xFDA
  9187                           fsr2l	equ	0xFD9
  9188                           status	equ	0xFD8
  9189                           
  9190 ;; *************** function _RADIO_RxDone *****************
  9191 ;; Defined at:
  9192 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  i               1  131[BANK0 ] unsigned char 
  9197 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9202 ;; Tracked objects:
  9203 ;;		On entry : F/0
  9204 ;;		On exit  : D/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;Total ram usage:        2 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:   16
  9214 ;; This function calls:
  9215 ;;		_HALSPICSAssert
  9216 ;;		_HALSPICSDeassert
  9217 ;;		_HALSPISend
  9218 ;;		_LORAWAN_RxDone
  9219 ;;		_RADIO_RegisterRead
  9220 ;;		_RADIO_RegisterWrite
  9221 ;;		_RADIO_WriteMode
  9222 ;;		_SwTimerStop
  9223 ;;		___abdiv
  9224 ;; This function is called by:
  9225 ;;		_RADIO_DIO0
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           	psect	text58
  9230  0051B4                     __ptext58:
  9231                           	opt stack 0
  9232  0051B4                     _RADIO_RxDone:
  9233                           	opt stack 12
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9237                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9238                           
  9239                           ;incstack = 0
  9240  0051B4  0E12               	movlw	18
  9241  0051B6  EC97  F039         	call	_RADIO_RegisterRead
  9242  0051BA  6FE2               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9243                           
  9244                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9245  0051BC  0E70               	movlw	112
  9246  0051BE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9247  0051C0  0E12               	movlw	18
  9248  0051C2  EC6E  F03A         	call	_RADIO_RegisterWrite
  9249                           
  9250                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9251  0051C6  0100               	movlb	0	; () banked
  9252  0051C8  51E2               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9253  0051CA  0B50               	andlw	80
  9254  0051CC  0A50               	xorlw	80
  9255  0051CE  A4D8               	btfss	status,2,c
  9256  0051D0  0012               	return	
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;radio_driver_SX1276.c: 969: {
  9260                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9261  0051D2  0101               	movlb	1	; () banked
  9262  0051D4  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9263  0051D6  EC9B  F03A         	call	_SwTimerStop
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9267  0051DA  0E1C               	movlw	28
  9268  0051DC  EC97  F039         	call	_RADIO_RegisterRead
  9269  0051E0  6FE3               	movwf	RADIO_RxDone@i& (0+255),b
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9273  0051E2  0101               	movlb	1	; () banked
  9274  0051E4  5186               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9275  0051E6  E004               	bz	l14794
  9276                           
  9277                           ; BSR set to: 1
  9278  0051E8  0100               	movlb	0	; () banked
  9279  0051EA  ABE2               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9280                           
  9281                           ; BSR set to: 0
  9282  0051EC  ADE3               	btfss	RADIO_RxDone@i& (0+255),6,b
  9283  0051EE  D037               	goto	l14816
  9284  0051F0                     l14794:
  9285                           
  9286                           ;radio_driver_SX1276.c: 976: {
  9287                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9288  0051F0  0E13               	movlw	19
  9289  0051F2  EC97  F039         	call	_RADIO_RegisterRead
  9290  0051F6  0101               	movlb	1	; () banked
  9291  0051F8  6F8E               	movwf	(_RadioConfiguration+36)& (0+255),b
  9292                           
  9293                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9294  0051FA  0100               	movlb	0	; () banked
  9295  0051FC  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9296  0051FE  0E0D               	movlw	13
  9297  005200  EC6E  F03A         	call	_RADIO_RegisterWrite
  9298                           
  9299                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9300  005204  ECA5  F03C         	call	_HALSPICSAssert	;wreg free
  9301                           
  9302                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9303  005208  0E00               	movlw	0
  9304  00520A  EC4C  F03C         	call	_HALSPISend
  9305                           
  9306                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9307  00520E  0100               	movlb	0	; () banked
  9308  005210  6BE3               	clrf	RADIO_RxDone@i& (0+255),b
  9309  005212  D00D               	goto	l14806
  9310  005214                     l14802:
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;radio_driver_SX1276.c: 990: {
  9314                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9315  005214  51E3               	movf	RADIO_RxDone@i& (0+255),w,b
  9316  005216  0101               	movlb	1	; () banked
  9317  005218  258F               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9318  00521A  6ED9               	movwf	fsr2l,c
  9319  00521C  0E00               	movlw	0
  9320  00521E  2190               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9321  005220  6EDA               	movwf	fsr2h,c
  9322  005222  0EFF               	movlw	255
  9323  005224  EC4C  F03C         	call	_HALSPISend
  9324  005228  6EDF               	movwf	indf2,c
  9325  00522A  0100               	movlb	0	; () banked
  9326  00522C  2BE3               	incf	RADIO_RxDone@i& (0+255),f,b
  9327  00522E                     l14806:
  9328                           
  9329                           ; BSR set to: 0
  9330  00522E  0101               	movlb	1	; () banked
  9331  005230  518E               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9332  005232  0100               	movlb	0	; () banked
  9333  005234  5DE3               	subwf	RADIO_RxDone@i& (0+255),w,b
  9334  005236  E3EE               	bnc	l14802
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;radio_driver_SX1276.c: 992: }
  9338                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9339  005238  ECA3  F03C         	call	_HALSPICSDeassert	;wreg free
  9340                           
  9341                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9342  00523C  0101               	movlb	1	; () banked
  9343  00523E  858D               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9344                           
  9345                           ; BSR set to: 1
  9346                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9347  005240  0E19               	movlw	25
  9348  005242  EC97  F039         	call	_RADIO_RegisterRead
  9349  005246  0101               	movlb	1	; () banked
  9350  005248  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
  9351                           
  9352                           ; BSR set to: 1
  9353                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9354  00524A  0E04               	movlw	4
  9355  00524C  0100               	movlb	0	; () banked
  9356  00524E  6F64               	movwf	___abdiv@divisor& (0+255),b
  9357  005250  0101               	movlb	1	; () banked
  9358  005252  519C               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9359  005254  EC40  F034         	call	___abdiv
  9360  005258  0101               	movlb	1	; () banked
  9361  00525A  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
  9362                           
  9363                           ;radio_driver_SX1276.c: 998: }
  9364  00525C  D002               	goto	l14818
  9365  00525E                     l14816:
  9366                           
  9367                           ; BSR set to: 0
  9368                           ;radio_driver_SX1276.c: 999: else
  9369                           ;radio_driver_SX1276.c: 1000: {
  9370                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9371  00525E  0101               	movlb	1	; () banked
  9372  005260  878D               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9373  005262                     l14818:
  9374                           
  9375                           ; BSR set to: 1
  9376                           ;radio_driver_SX1276.c: 1003: }
  9377                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9378  005262  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9379  005266  0E00               	movlw	0
  9380  005268  0100               	movlb	0	; () banked
  9381  00526A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9382  00526C  EC6E  F028         	call	_RADIO_WriteMode
  9383                           
  9384                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9385  005270  0101               	movlb	1	; () banked
  9386  005272  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9387                           
  9388                           ; BSR set to: 1
  9389                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9390  005274  C18F  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9391  005278  C190  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9392  00527C  C18E  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9393  005280  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9394  005284                     __end_of_RADIO_RxDone:
  9395                           	opt stack 0
  9396                           tosu	equ	0xFFF
  9397                           tosh	equ	0xFFE
  9398                           tosl	equ	0xFFD
  9399                           pclath	equ	0xFFA
  9400                           tblptru	equ	0xFF8
  9401                           tblptrh	equ	0xFF7
  9402                           tblptrl	equ	0xFF6
  9403                           tablat	equ	0xFF5
  9404                           prodh	equ	0xFF4
  9405                           prodl	equ	0xFF3
  9406                           intcon	equ	0xFF2
  9407                           intcon2	equ	0xFF1
  9408                           intcon3	equ	0xFF0
  9409                           postinc0	equ	0xFEE
  9410                           wreg	equ	0xFE8
  9411                           postinc1	equ	0xFE6
  9412                           postdec1	equ	0xFE5
  9413                           plusw1	equ	0xFE3
  9414                           fsr1h	equ	0xFE2
  9415                           fsr1l	equ	0xFE1
  9416                           indf2	equ	0xFDF
  9417                           postinc2	equ	0xFDE
  9418                           postdec2	equ	0xFDD
  9419                           fsr2h	equ	0xFDA
  9420                           fsr2l	equ	0xFD9
  9421                           status	equ	0xFD8
  9422                           
  9423 ;; *************** function ___abdiv *****************
  9424 ;; Defined at:
  9425 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  dividend        1    wreg     char 
  9428 ;;  divisor         1    4[BANK0 ] char 
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;  dividend        1    8[BANK0 ] char 
  9431 ;;  quotient        1    7[BANK0 ] char 
  9432 ;;  sign            1    6[BANK0 ] unsigned char 
  9433 ;;  counter         1    5[BANK0 ] unsigned char 
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      char 
  9436 ;; Registers used:
  9437 ;;		wreg, status,2, status,0
  9438 ;; Tracked objects:
  9439 ;;		On entry : F/1
  9440 ;;		On exit  : F/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9443 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9446 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9447 ;;Total ram usage:        5 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    7
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_RADIO_RxDone
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           	psect	text59
  9458  006880                     __ptext59:
  9459                           	opt stack 0
  9460  006880                     ___abdiv:
  9461                           	opt stack 20
  9462                           
  9463                           ;incstack = 0
  9464                           ;___abdiv@dividend stored from wreg
  9465  006880  0100               	movlb	0	; () banked
  9466  006882  6F68               	movwf	___abdiv@dividend& (0+255),b
  9467  006884  6B66               	clrf	___abdiv@sign& (0+255),b
  9468                           
  9469                           ; BSR set to: 0
  9470  006886  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9471  006888  D003               	goto	l10588
  9472                           
  9473                           ; BSR set to: 0
  9474  00688A  6D64               	negf	___abdiv@divisor& (0+255),b
  9475                           
  9476                           ; BSR set to: 0
  9477  00688C  0E01               	movlw	1
  9478  00688E  6F66               	movwf	___abdiv@sign& (0+255),b
  9479  006890                     l10588:
  9480                           
  9481                           ; BSR set to: 0
  9482  006890  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9483  006892  D003               	goto	l10594
  9484                           
  9485                           ; BSR set to: 0
  9486  006894  6D68               	negf	___abdiv@dividend& (0+255),b
  9487                           
  9488                           ; BSR set to: 0
  9489  006896  0E01               	movlw	1
  9490  006898  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9491  00689A                     l10594:
  9492                           
  9493                           ; BSR set to: 0
  9494  00689A  6B67               	clrf	___abdiv@quotient& (0+255),b
  9495                           
  9496                           ; BSR set to: 0
  9497  00689C  5164               	movf	___abdiv@divisor& (0+255),w,b
  9498  00689E  E014               	bz	l10616
  9499                           
  9500                           ; BSR set to: 0
  9501  0068A0  0E01               	movlw	1
  9502  0068A2  6F65               	movwf	___abdiv@counter& (0+255),b
  9503  0068A4  D003               	goto	l10604
  9504  0068A6                     l10600:
  9505                           
  9506                           ; BSR set to: 0
  9507  0068A6  90D8               	bcf	status,0,c
  9508  0068A8  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9509                           
  9510                           ; BSR set to: 0
  9511  0068AA  2B65               	incf	___abdiv@counter& (0+255),f,b
  9512  0068AC                     l10604:
  9513                           
  9514                           ; BSR set to: 0
  9515  0068AC  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9516  0068AE  D7FB               	goto	l10600
  9517  0068B0                     l10606:
  9518                           
  9519                           ; BSR set to: 0
  9520  0068B0  90D8               	bcf	status,0,c
  9521  0068B2  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9522  0068B4  5164               	movf	___abdiv@divisor& (0+255),w,b
  9523  0068B6  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9524  0068B8  E303               	bnc	l10612
  9525                           
  9526                           ; BSR set to: 0
  9527  0068BA  5164               	movf	___abdiv@divisor& (0+255),w,b
  9528  0068BC  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9529                           
  9530                           ; BSR set to: 0
  9531  0068BE  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9532  0068C0                     l10612:
  9533                           
  9534                           ; BSR set to: 0
  9535  0068C0  90D8               	bcf	status,0,c
  9536  0068C2  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9537                           
  9538                           ; BSR set to: 0
  9539  0068C4  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9540  0068C6  D7F4               	goto	l10606
  9541  0068C8                     l10616:
  9542                           
  9543                           ; BSR set to: 0
  9544  0068C8  5166               	movf	___abdiv@sign& (0+255),w,b
  9545  0068CA  E001               	bz	l10620
  9546                           
  9547                           ; BSR set to: 0
  9548  0068CC  6D67               	negf	___abdiv@quotient& (0+255),b
  9549  0068CE                     l10620:
  9550                           
  9551                           ; BSR set to: 0
  9552  0068CE  5167               	movf	___abdiv@quotient& (0+255),w,b
  9553                           
  9554                           ; BSR set to: 0
  9555  0068D0  0012               	return		;funcret
  9556  0068D2                     __end_of___abdiv:
  9557                           	opt stack 0
  9558                           tosu	equ	0xFFF
  9559                           tosh	equ	0xFFE
  9560                           tosl	equ	0xFFD
  9561                           pclath	equ	0xFFA
  9562                           tblptru	equ	0xFF8
  9563                           tblptrh	equ	0xFF7
  9564                           tblptrl	equ	0xFF6
  9565                           tablat	equ	0xFF5
  9566                           prodh	equ	0xFF4
  9567                           prodl	equ	0xFF3
  9568                           intcon	equ	0xFF2
  9569                           intcon2	equ	0xFF1
  9570                           intcon3	equ	0xFF0
  9571                           postinc0	equ	0xFEE
  9572                           wreg	equ	0xFE8
  9573                           postinc1	equ	0xFE6
  9574                           postdec1	equ	0xFE5
  9575                           plusw1	equ	0xFE3
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           indf2	equ	0xFDF
  9579                           postinc2	equ	0xFDE
  9580                           postdec2	equ	0xFDD
  9581                           fsr2h	equ	0xFDA
  9582                           fsr2l	equ	0xFD9
  9583                           status	equ	0xFD8
  9584                           
  9585 ;; *************** function _RADIO_FSKPayloadReady *****************
  9586 ;; Defined at:
  9587 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;		None
  9590 ;; Auto vars:     Size  Location     Type
  9591 ;;  i               1  131[BANK0 ] unsigned char 
  9592 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  1    wreg      void 
  9595 ;; Registers used:
  9596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9597 ;; Tracked objects:
  9598 ;;		On entry : F/0
  9599 ;;		On exit  : D/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;Total ram usage:        2 bytes
  9607 ;; Hardware stack levels used:    1
  9608 ;; Hardware stack levels required when called:   16
  9609 ;; This function calls:
  9610 ;;		_HALSPICSAssert
  9611 ;;		_HALSPICSDeassert
  9612 ;;		_HALSPISend
  9613 ;;		_LORAWAN_RxDone
  9614 ;;		_LORAWAN_RxTimeout
  9615 ;;		_RADIO_RegisterRead
  9616 ;;		_RADIO_WriteMode
  9617 ;;		_SwTimerStop
  9618 ;; This function is called by:
  9619 ;;		_RADIO_DIO0
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text60
  9624  005A5C                     __ptext60:
  9625                           	opt stack 0
  9626  005A5C                     _RADIO_FSKPayloadReady:
  9627                           	opt stack 12
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9631                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9632                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;incstack = 0
  9636  005A5C  0E3F               	movlw	63
  9637  005A5E  EC97  F039         	call	_RADIO_RegisterRead
  9638  005A62  6FE2               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9642  005A64  A5E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9643  005A66  0012               	return	
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;radio_driver_SX1276.c: 1017: {
  9647                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9648  005A68  0101               	movlb	1	; () banked
  9649  005A6A  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9650  005A6C  EC9B  F03A         	call	_SwTimerStop
  9651                           
  9652                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9653  005A70  0101               	movlb	1	; () banked
  9654  005A72  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9655  005A74  EC9B  F03A         	call	_SwTimerStop
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9659  005A78  ECA5  F03C         	call	_HALSPICSAssert	;wreg free
  9660                           
  9661                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9662  005A7C  0E00               	movlw	0
  9663  005A7E  EC4C  F03C         	call	_HALSPISend
  9664                           
  9665                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9666  005A82  0EFF               	movlw	255
  9667  005A84  EC4C  F03C         	call	_HALSPISend
  9668  005A88  0101               	movlb	1	; () banked
  9669  005A8A  6F8E               	movwf	(_RadioConfiguration+36)& (0+255),b
  9670                           
  9671                           ; BSR set to: 1
  9672                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9673  005A8C  0100               	movlb	0	; () banked
  9674  005A8E  6BE3               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
  9675  005A90  D00D               	goto	l14842
  9676  005A92                     l14838:
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;radio_driver_SX1276.c: 1029: {
  9680                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9681  005A92  51E3               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9682  005A94  0101               	movlb	1	; () banked
  9683  005A96  258F               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9684  005A98  6ED9               	movwf	fsr2l,c
  9685  005A9A  0E00               	movlw	0
  9686  005A9C  2190               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9687  005A9E  6EDA               	movwf	fsr2h,c
  9688  005AA0  0EFF               	movlw	255
  9689  005AA2  EC4C  F03C         	call	_HALSPISend
  9690  005AA6  6EDF               	movwf	indf2,c
  9691  005AA8  0100               	movlb	0	; () banked
  9692  005AAA  2BE3               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9693  005AAC                     l14842:
  9694                           
  9695                           ; BSR set to: 0
  9696  005AAC  0101               	movlb	1	; () banked
  9697  005AAE  518E               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9698  005AB0  0100               	movlb	0	; () banked
  9699  005AB2  5DE3               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9700  005AB4  E3EE               	bnc	l14838
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;radio_driver_SX1276.c: 1031: }
  9704                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9705  005AB6  ECA3  F03C         	call	_HALSPICSDeassert	;wreg free
  9706                           
  9707                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9708  005ABA  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9709  005ABE  0E00               	movlw	0
  9710  005AC0  0100               	movlb	0	; () banked
  9711  005AC2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9712  005AC4  EC6E  F028         	call	_RADIO_WriteMode
  9713                           
  9714                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9715  005AC8  0101               	movlb	1	; () banked
  9716  005ACA  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9717                           
  9718                           ; BSR set to: 1
  9719                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9720  005ACC  0E80               	movlw	128
  9721  005ACE  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
  9722                           
  9723                           ; BSR set to: 1
  9724                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9725  005AD0  0586               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9726  005AD2  E103               	bnz	l14856
  9727                           
  9728                           ; BSR set to: 1
  9729                           ;radio_driver_SX1276.c: 1040: {
  9730                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9731  005AD4  0100               	movlb	0	; () banked
  9732  005AD6  A3E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9733  005AD8  D003               	goto	l14858
  9734  005ADA                     l14856:
  9735                           
  9736                           ;radio_driver_SX1276.c: 1042: {
  9737                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9738  005ADA  0101               	movlb	1	; () banked
  9739  005ADC  858D               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9740                           
  9741                           ;radio_driver_SX1276.c: 1044: }
  9742  005ADE  D002               	goto	l14862
  9743  005AE0                     l14858:
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;radio_driver_SX1276.c: 1045: else
  9747                           ;radio_driver_SX1276.c: 1046: {
  9748                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9749  005AE0  0101               	movlb	1	; () banked
  9750  005AE2  958D               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9751  005AE4                     l14862:
  9752                           
  9753                           ; BSR set to: 1
  9754                           ;radio_driver_SX1276.c: 1053: }
  9755                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9756  005AE4  A58D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9757  005AE6  EF71  F013         	goto	_LORAWAN_RxTimeout
  9758                           
  9759                           ; BSR set to: 1
  9760                           ;radio_driver_SX1276.c: 1056: {
  9761                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9762  005AEA  C18F  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9763  005AEE  C190  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9764  005AF2  C18E  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9765  005AF6  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9766  005AFA                     __end_of_RADIO_FSKPayloadReady:
  9767                           	opt stack 0
  9768                           tosu	equ	0xFFF
  9769                           tosh	equ	0xFFE
  9770                           tosl	equ	0xFFD
  9771                           pclath	equ	0xFFA
  9772                           tblptru	equ	0xFF8
  9773                           tblptrh	equ	0xFF7
  9774                           tblptrl	equ	0xFF6
  9775                           tablat	equ	0xFF5
  9776                           prodh	equ	0xFF4
  9777                           prodl	equ	0xFF3
  9778                           intcon	equ	0xFF2
  9779                           intcon2	equ	0xFF1
  9780                           intcon3	equ	0xFF0
  9781                           postinc0	equ	0xFEE
  9782                           wreg	equ	0xFE8
  9783                           postinc1	equ	0xFE6
  9784                           postdec1	equ	0xFE5
  9785                           plusw1	equ	0xFE3
  9786                           fsr1h	equ	0xFE2
  9787                           fsr1l	equ	0xFE1
  9788                           indf2	equ	0xFDF
  9789                           postinc2	equ	0xFDE
  9790                           postdec2	equ	0xFDD
  9791                           fsr2h	equ	0xFDA
  9792                           fsr2l	equ	0xFD9
  9793                           status	equ	0xFD8
  9794                           
  9795 ;; *************** function _LORAWAN_RxTimeout *****************
  9796 ;; Defined at:
  9797 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;		None
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;  minim           4   75[BANK0 ] unsigned long 
  9802 ;;  i               1   79[BANK0 ] unsigned char 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      void 
  9805 ;; Registers used:
  9806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9807 ;; Tracked objects:
  9808 ;;		On entry : F/1
  9809 ;;		On exit  : D/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9813 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9815 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9816 ;;Total ram usage:        9 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:   15
  9819 ;; This function calls:
  9820 ;;		_LORAWAN_ReceiveWindow2Callback
  9821 ;;		_RADIO_Transmit
  9822 ;;		_ResetParametersForConfirmedTransmission
  9823 ;;		_ResetParametersForUnconfirmedTransmission
  9824 ;;		_RxDataDone
  9825 ;;		_SelectChannelForTransmission
  9826 ;;		_SetJoinFailState
  9827 ;;		_SwTimerSetTimeout
  9828 ;;		_SwTimerStart
  9829 ;;		___lldiv
  9830 ;; This function is called by:
  9831 ;;		_RADIO_FSKPayloadReady
  9832 ;;		_RADIO_RxTimeout
  9833 ;;		_RADIO_RxFSKTimeout
  9834 ;;		_RADIO_WatchdogTimeout
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text61
  9839  0026E2                     __ptext61:
  9840                           	opt stack 0
  9841  0026E2                     _LORAWAN_RxTimeout:
  9842                           	opt stack 12
  9843                           
  9844                           ; BSR set to: 1
  9845                           ;lorawan_eu.c: 466: uint8_t i;
  9846                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9847                           
  9848                           ;incstack = 0
  9849  0026E2  0100               	movlb	0	; () banked
  9850  0026E4  69AB               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9851  0026E6  69AC               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9852  0026E8  69AD               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9853  0026EA  69AE               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9854                           
  9855                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9856  0026EC  0102               	movlb	2	; () banked
  9857  0026EE  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9858  0026F0  D134               	goto	l14630
  9859                           
  9860                           ; BSR set to: 2
  9861                           ;lorawan_eu.c: 470: {
  9862                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9863  0026F2  5102               	movf	(_loRa+2)& (0+255),w,b
  9864  0026F4  0B0F               	andlw	15
  9865  0026F6  0A03               	xorlw	3
  9866  0026F8  E10E               	bnz	l1049
  9867                           
  9868                           ; BSR set to: 2
  9869                           ;lorawan_eu.c: 473: {
  9870                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9871  0026FA  5112               	movf	(_loRa+18)& (0+255),w,b
  9872  0026FC  E105               	bnz	l14566
  9873                           
  9874                           ; BSR set to: 2
  9875                           ;lorawan_eu.c: 475: {
  9876                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9877  0026FE  5102               	movf	(_loRa+2)& (0+255),w,b
  9878  002700  0BF0               	andlw	-16
  9879  002702  0904               	iorlw	4
  9880  002704  6F02               	movwf	(_loRa+2)& (0+255),b
  9881                           
  9882                           ;lorawan_eu.c: 477: }
  9883  002706  0012               	return	
  9884  002708                     l14566:
  9885                           
  9886                           ; BSR set to: 2
  9887                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9888  002708  0E02               	movlw	2
  9889  00270A  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9890  00270C  A4D8               	btfss	status,2,c
  9891  00270E  0012               	return	
  9892                           
  9893                           ; BSR set to: 2
  9894                           ;lorawan_eu.c: 479: {
  9895                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9896  002710  6AE6               	clrf	postinc1,c
  9897  002712  EFA9  F029         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9898  002716                     l1049:
  9899                           
  9900                           ; BSR set to: 2
  9901                           ;lorawan_eu.c: 483: else
  9902                           ;lorawan_eu.c: 484: {
  9903                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9904  002716  B500               	btfsc	_loRa& (0+255),2,b
  9905                           
  9906                           ; BSR set to: 2
  9907                           ;lorawan_eu.c: 487: {
  9908                           ;lorawan_eu.c: 488: SetJoinFailState();
  9909  002718  EFAA  F039         	goto	_SetJoinFailState	;wreg free
  9910                           
  9911                           ; BSR set to: 2
  9912                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9913                           
  9914                           ;lorawan_eu.c: 489: }
  9915  00271C  A902               	btfss	(_loRa+2)& (0+255),4,b
  9916  00271E  0012               	return	
  9917                           
  9918                           ; BSR set to: 2
  9919                           ;lorawan_eu.c: 492: {
  9920                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9921  002720  A100               	btfss	_loRa& (0+255),0,b
  9922  002722  D04B               	goto	l14588
  9923                           
  9924                           ; BSR set to: 2
  9925                           ;lorawan_eu.c: 494: {
  9926                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9927  002724  51D9               	movf	(_loRa+217)& (0+255),w,b
  9928  002726  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9929  002728  E334               	bnc	l14582
  9930                           
  9931                           ; BSR set to: 2
  9932                           ;lorawan_eu.c: 496: {
  9933                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9934  00272A  5102               	movf	(_loRa+2)& (0+255),w,b
  9935  00272C  0BF0               	andlw	-16
  9936  00272E  0906               	iorlw	6
  9937  002730  6F02               	movwf	(_loRa+2)& (0+255),b
  9938                           
  9939                           ; BSR set to: 2
  9940                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9941  002732  51A0               	movf	(_loRa+160)& (0+255),w,b
  9942  002734  0100               	movlb	0	; () banked
  9943  002736  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9944  002738  0102               	movlb	2	; () banked
  9945  00273A  51A1               	movf	(_loRa+161)& (0+255),w,b
  9946  00273C  0100               	movlb	0	; () banked
  9947  00273E  6FA8               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9948  002740  6BA9               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9949  002742  6BAA               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9950  002744  0E0C               	movlw	12
  9951  002746                     u16715:
  9952  002746  90D8               	bcf	status,0,c
  9953  002748  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9954  00274A  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9955  00274C  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9956  00274E  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9957  002750  2EE8               	decfsz	wreg,f,c
  9958  002752  D7F9               	goto	u16715
  9959  002754  C0A7  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9960  002758  C0A8  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9961  00275C  C0A9  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9962  002760  C0AA  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9963  002764  0E7D               	movlw	125
  9964  002766  6F68               	movwf	___lldiv@divisor& (0+255),b
  9965  002768  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  9966  00276A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  9967  00276C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  9968  00276E  EC1A  F030         	call	___lldiv	;wreg free
  9969  002772  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9970  002776  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9971  00277A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9972  00277E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9973  002782  0102               	movlb	2	; () banked
  9974  002784  51E8               	movf	(_loRa+232)& (0+255),w,b
  9975  002786  EC75  F036         	call	_SwTimerSetTimeout
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  9979  00278A  0102               	movlb	2	; () banked
  9980  00278C  51E8               	movf	(_loRa+232)& (0+255),w,b
  9981  00278E  EF58  F02E         	goto	_SwTimerStart
  9982  002792                     l14582:
  9983                           
  9984                           ; BSR set to: 2
  9985                           ;lorawan_eu.c: 501: else
  9986                           ;lorawan_eu.c: 502: {
  9987                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
  9988  002792  ECCC  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9989                           
  9990                           ; BSR set to: 2
  9991                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
  9992  002796  0100               	movlb	0	; () banked
  9993  002798  51E8               	movf	_rxPayload& (0+255),w,b
  9994  00279A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  9995  00279C  B4D8               	btfsc	status,2,c
  9996  00279E  0012               	return	
  9997  0027A0                     l14586:
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;lorawan_eu.c: 505: {
 10001                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10002  0027A0  6B67               	clrf	RxDataDone@pData& (0+255),b
 10003  0027A2  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10004  0027A4  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10005  0027A6  6B6A               	clrf	RxDataDone@status& (0+255),b
 10006  0027A8  0005               	push	
 10007  0027AA  6AFA               	clrf	pclath,c
 10008  0027AC  51E8               	movf	_rxPayload& (0+255),w,b
 10009  0027AE  6EFD               	movwf	tosl,c
 10010  0027B0  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10011  0027B2  6EFE               	movwf	tosh,c
 10012  0027B4  6AFF               	clrf	tosu,c
 10013  0027B6  50FA               	movf	pclath,w,c
 10014  0027B8  0012               	return		;indir
 10015  0027BA                     l14588:
 10016                           
 10017                           ; BSR set to: 2
 10018                           ;lorawan_eu.c: 511: else
 10019                           ;lorawan_eu.c: 512: {
 10020                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10021  0027BA  51D8               	movf	(_loRa+216)& (0+255),w,b
 10022  0027BC  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10023  0027BE  E201 D0B7          	bnc	l14624
 10024                           
 10025                           ; BSR set to: 2
 10026                           ;lorawan_eu.c: 514: {
 10027                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10028  0027C2  5102               	movf	(_loRa+2)& (0+255),w,b
 10029  0027C4  0BF0               	andlw	-16
 10030  0027C6  0906               	iorlw	6
 10031  0027C8  6F02               	movwf	(_loRa+2)& (0+255),b
 10032                           
 10033                           ; BSR set to: 2
 10034                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10035  0027CA  0E01               	movlw	1
 10036  0027CC  EC2C  F033         	call	_SelectChannelForTransmission
 10037  0027D0  0900               	iorlw	0
 10038  0027D2  E119               	bnz	l1063
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;lorawan_eu.c: 517: {
 10042                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10043  0027D4  0EF0               	movlw	low (_macBuffer+16)
 10044  0027D6  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 10045  0027D8  0E04               	movlw	high (_macBuffer+16)
 10046  0027DA  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10047  0027DC  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10048  0027E0  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 10049  0027E4  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 10050  0027E6  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10051  0027E8  E107               	bnz	l14600
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;lorawan_eu.c: 520: {
 10055                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10056  0027EA  0102               	movlb	2	; () banked
 10057  0027EC  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10058                           
 10059                           ; BSR set to: 2
 10060                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10061  0027EE  5102               	movf	(_loRa+2)& (0+255),w,b
 10062  0027F0  0BF0               	andlw	-16
 10063  0027F2  0901               	iorlw	1
 10064  0027F4  6F02               	movwf	(_loRa+2)& (0+255),b
 10065                           
 10066                           ;lorawan_eu.c: 523: }
 10067  0027F6  0012               	return	
 10068  0027F8                     l14600:
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;lorawan_eu.c: 524: else
 10072                           ;lorawan_eu.c: 526: {
 10073                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10074  0027F8  ECC5  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10075                           
 10076                           ; BSR set to: 2
 10077                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10078  0027FC  0100               	movlb	0	; () banked
 10079  0027FE  51E8               	movf	_rxPayload& (0+255),w,b
 10080  002800  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10081  002802  E1CE               	bnz	l14586
 10082  002804  0012               	return	
 10083  002806                     l1063:
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;lorawan_eu.c: 534: else
 10087                           ;lorawan_eu.c: 535: {
 10088                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10089  002806  6BAF               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10090  002808  D05B               	goto	l14620
 10091  00280A                     l14606:
 10092                           
 10093                           ; BSR set to: 2
 10094                           ;lorawan_eu.c: 538: {
 10095                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10096  00280A  0100               	movlb	0	; () banked
 10097  00280C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10098  00280E  0D0E               	mullw	14
 10099  002810  0E04               	movlw	low (_Channels+4)
 10100  002812  24F3               	addwf	prodl,w,c
 10101  002814  6ED9               	movwf	fsr2l,c
 10102  002816  0E04               	movlw	high (_Channels+4)
 10103  002818  20F4               	addwfc	prodh,w,c
 10104  00281A  6EDA               	movwf	fsr2h,c
 10105  00281C  04DE               	decf	postinc2,w,c
 10106  00281E  E14E               	bnz	l14618
 10107                           
 10108                           ; BSR set to: 0
 10109  002820  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10110  002822  0D0E               	mullw	14
 10111  002824  0E08               	movlw	low (_Channels+8)
 10112  002826  24F3               	addwf	prodl,w,c
 10113  002828  6ED9               	movwf	fsr2l,c
 10114  00282A  0E04               	movlw	high (_Channels+8)
 10115  00282C  20F4               	addwfc	prodh,w,c
 10116  00282E  6EDA               	movwf	fsr2h,c
 10117  002830  50DE               	movf	postinc2,w,c
 10118  002832  10DE               	iorwf	postinc2,w,c
 10119  002834  10DE               	iorwf	postinc2,w,c
 10120  002836  10DE               	iorwf	postinc2,w,c
 10121  002838  E041               	bz	l14618
 10122                           
 10123                           ; BSR set to: 0
 10124  00283A  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10125  00283C  0D0E               	mullw	14
 10126  00283E  0E08               	movlw	low (_Channels+8)
 10127  002840  24F3               	addwf	prodl,w,c
 10128  002842  6ED9               	movwf	fsr2l,c
 10129  002844  0E04               	movlw	high (_Channels+8)
 10130  002846  20F4               	addwfc	prodh,w,c
 10131  002848  6EDA               	movwf	fsr2h,c
 10132  00284A  50DE               	movf	postinc2,w,c
 10133  00284C  5DAB               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10134  00284E  50DE               	movf	postinc2,w,c
 10135  002850  59AC               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10136  002852  50DE               	movf	postinc2,w,c
 10137  002854  59AD               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10138  002856  50DE               	movf	postinc2,w,c
 10139  002858  59AE               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10140  00285A  E330               	bnc	l14618
 10141                           
 10142                           ; BSR set to: 0
 10143  00285C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10144  00285E  0D0E               	mullw	14
 10145  002860  0E05               	movlw	low (_Channels+5)
 10146  002862  24F3               	addwf	prodl,w,c
 10147  002864  6ED9               	movwf	fsr2l,c
 10148  002866  0E04               	movlw	high (_Channels+5)
 10149  002868  20F4               	addwfc	prodh,w,c
 10150  00286A  6EDA               	movwf	fsr2h,c
 10151  00286C  50DF               	movf	223,w,c
 10152  00286E  0B0F               	andlw	15
 10153  002870  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10154  002872  51A7               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10155  002874  0102               	movlb	2	; () banked
 10156  002876  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10157  002878  E321               	bnc	l14618
 10158                           
 10159                           ; BSR set to: 2
 10160  00287A  0100               	movlb	0	; () banked
 10161  00287C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10162  00287E  0D0E               	mullw	14
 10163  002880  0E05               	movlw	low (_Channels+5)
 10164  002882  24F3               	addwf	prodl,w,c
 10165  002884  6ED9               	movwf	fsr2l,c
 10166  002886  0E04               	movlw	high (_Channels+5)
 10167  002888  20F4               	addwfc	prodh,w,c
 10168  00288A  6EDA               	movwf	fsr2h,c
 10169  00288C  38DF               	swapf	223,w,c
 10170  00288E  0B0F               	andlw	15
 10171  002890  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10172  002892  0102               	movlb	2	; () banked
 10173  002894  51DF               	movf	(_loRa+223)& (0+255),w,b
 10174  002896  0100               	movlb	0	; () banked
 10175  002898  5DA7               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10176  00289A  E310               	bnc	l14618
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;lorawan_eu.c: 540: {
 10180                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10181  00289C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10182  00289E  0D0E               	mullw	14
 10183  0028A0  0E08               	movlw	low (_Channels+8)
 10184  0028A2  24F3               	addwf	prodl,w,c
 10185  0028A4  6ED9               	movwf	fsr2l,c
 10186  0028A6  0E04               	movlw	high (_Channels+8)
 10187  0028A8  20F4               	addwfc	prodh,w,c
 10188  0028AA  6EDA               	movwf	fsr2h,c
 10189  0028AC  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim
 10190  0028B0  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10191  0028B4  CFDE F0AD          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10192  0028B8  CFDE F0AE          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10193  0028BC                     l14618:
 10194  0028BC  0100               	movlb	0	; () banked
 10195  0028BE  2BAF               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10196  0028C0                     l14620:
 10197                           
 10198                           ; BSR set to: 0
 10199  0028C0  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10200  0028C2  0102               	movlb	2	; () banked
 10201  0028C4  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10202  0028C6  E2A1               	bc	l14606
 10203                           
 10204                           ; BSR set to: 2
 10205                           ;lorawan_eu.c: 542: }
 10206                           ;lorawan_eu.c: 543: }
 10207                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10208  0028C8  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10209  0028CC  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10210  0028D0  C0AD  F0A9         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10211  0028D4  C0AE  F0AA         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10212  0028D8  0E0C               	movlw	12
 10213  0028DA                     u16845:
 10214  0028DA  90D8               	bcf	status,0,c
 10215  0028DC  0100               	movlb	0	; () banked
 10216  0028DE  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10217  0028E0  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10218  0028E2  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10219  0028E4  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10220  0028E6  2EE8               	decfsz	wreg,f,c
 10221  0028E8  D7F8               	goto	u16845
 10222  0028EA  0E00               	movlw	0
 10223  0028EC  25A7               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10224  0028EE  6F64               	movwf	___lldiv@dividend& (0+255),b
 10225  0028F0  0E20               	movlw	32
 10226  0028F2  21A8               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10227  0028F4  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10228  0028F6  0E03               	movlw	3
 10229  0028F8  21A9               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10230  0028FA  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10231  0028FC  0E00               	movlw	0
 10232  0028FE  21AA               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10233  002900  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10234  002902  0E7D               	movlw	125
 10235  002904  6F68               	movwf	___lldiv@divisor& (0+255),b
 10236  002906  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10237  002908  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10238  00290A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10239  00290C  EC1A  F030         	call	___lldiv	;wreg free
 10240  002910  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10241  002914  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10242  002918  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10243  00291C  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10244  002920  0102               	movlb	2	; () banked
 10245  002922  51EA               	movf	(_loRa+234)& (0+255),w,b
 10246  002924  EC75  F036         	call	_SwTimerSetTimeout
 10247                           
 10248                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10249  002928  0102               	movlb	2	; () banked
 10250  00292A  51EA               	movf	(_loRa+234)& (0+255),w,b
 10251  00292C  EF58  F02E         	goto	_SwTimerStart
 10252  002930                     l14624:
 10253                           
 10254                           ; BSR set to: 2
 10255                           ;lorawan_eu.c: 548: else
 10256                           ;lorawan_eu.c: 549: {
 10257                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10258  002930  ECC5  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10259                           
 10260                           ; BSR set to: 2
 10261                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10262  002934  0100               	movlb	0	; () banked
 10263  002936  51E8               	movf	_rxPayload& (0+255),w,b
 10264  002938  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10265  00293A  B4D8               	btfsc	status,2,c
 10266  00293C  0012               	return	
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;lorawan_eu.c: 552: {
 10270                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10271  00293E  6B67               	clrf	RxDataDone@pData& (0+255),b
 10272  002940  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10273  002942  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10274  002944  0E01               	movlw	1
 10275  002946  6F6A               	movwf	RxDataDone@status& (0+255),b
 10276  002948  0005               	push	
 10277  00294A  6EFA               	movwf	pclath,c
 10278  00294C  51E8               	movf	_rxPayload& (0+255),w,b
 10279  00294E  6EFD               	movwf	tosl,c
 10280  002950  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10281  002952  6EFE               	movwf	tosh,c
 10282  002954  6AFF               	clrf	tosu,c
 10283  002956  50FA               	movf	pclath,w,c
 10284  002958  0012               	return		;indir
 10285  00295A                     l14630:
 10286                           
 10287                           ; BSR set to: 2
 10288                           ;lorawan_eu.c: 560: else
 10289                           ;lorawan_eu.c: 561: {
 10290                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10291  00295A  0100               	movlb	0	; () banked
 10292  00295C  51E8               	movf	_rxPayload& (0+255),w,b
 10293  00295E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10294  002960  B4D8               	btfsc	status,2,c
 10295  002962  0012               	return	
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;lorawan_eu.c: 564: {
 10299                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10300  002964  6B67               	clrf	RxDataDone@pData& (0+255),b
 10301  002966  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10302  002968  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10303  00296A  0E02               	movlw	2
 10304  00296C  6F6A               	movwf	RxDataDone@status& (0+255),b
 10305  00296E  0005               	push	
 10306  002970  6EFA               	movwf	pclath,c
 10307  002972  51E8               	movf	_rxPayload& (0+255),w,b
 10308  002974  6EFD               	movwf	tosl,c
 10309  002976  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10310  002978  6EFE               	movwf	tosh,c
 10311  00297A  6AFF               	clrf	tosu,c
 10312  00297C  50FA               	movf	pclath,w,c
 10313  00297E  0012               	return		;indir
 10314  002980                     __end_of_LORAWAN_RxTimeout:
 10315                           	opt stack 0
 10316                           tosu	equ	0xFFF
 10317                           tosh	equ	0xFFE
 10318                           tosl	equ	0xFFD
 10319                           pclath	equ	0xFFA
 10320                           tblptru	equ	0xFF8
 10321                           tblptrh	equ	0xFF7
 10322                           tblptrl	equ	0xFF6
 10323                           tablat	equ	0xFF5
 10324                           prodh	equ	0xFF4
 10325                           prodl	equ	0xFF3
 10326                           intcon	equ	0xFF2
 10327                           intcon2	equ	0xFF1
 10328                           intcon3	equ	0xFF0
 10329                           postinc0	equ	0xFEE
 10330                           wreg	equ	0xFE8
 10331                           postinc1	equ	0xFE6
 10332                           postdec1	equ	0xFE5
 10333                           plusw1	equ	0xFE3
 10334                           fsr1h	equ	0xFE2
 10335                           fsr1l	equ	0xFE1
 10336                           indf2	equ	0xFDF
 10337                           postinc2	equ	0xFDE
 10338                           postdec2	equ	0xFDD
 10339                           fsr2h	equ	0xFDA
 10340                           fsr2l	equ	0xFD9
 10341                           status	equ	0xFD8
 10342                           
 10343 ;; *************** function _LORAWAN_RxDone *****************
 10344 ;; Defined at:
 10345 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10348 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10349 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  hdr             2   18[BANK3 ] PTR struct .
 10352 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10353 ;;  joinAccept      2   15[BANK3 ] PTR struct .
 10354 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10355 ;;  computedMic     4   11[BANK3 ] unsigned long 
 10356 ;;  extractedMic    4    3[BANK3 ] unsigned long 
 10357 ;;  packet          2    9[BANK3 ] PTR unsigned char 
 10358 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10359 ;;  frmPayloadLe    1   17[BANK3 ] unsigned char 
 10360 ;;  temp            1    8[BANK3 ] unsigned char 
 10361 ;;  bufferIndex     1    7[BANK3 ] unsigned char 
 10362 ;;  mhdr            1    2[BANK3 ] struct .
 10363 ;;  channelIndex    1    1[BANK3 ] unsigned char 
 10364 ;;  fPort           1    0[BANK3 ] unsigned char 
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      enum E8191
 10367 ;; Registers used:
 10368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10369 ;; Tracked objects:
 10370 ;;		On entry : F/1
 10371 ;;		On exit  : D/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10374 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10375 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10376 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10377 ;;      Totals:         0       5       3       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10378 ;;Total ram usage:       28 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:   15
 10381 ;; This function calls:
 10382 ;;		_AESCmac
 10383 ;;		_AESEncodeLoRa
 10384 ;;		_AssembleEncryptionBlock
 10385 ;;		_CheckFlags
 10386 ;;		_CheckMcastFlags
 10387 ;;		_ComputeMic
 10388 ;;		_ComputeSessionKeys
 10389 ;;		_EncryptFRMPayload
 10390 ;;		_ExtractMic
 10391 ;;		_LORAWAN_EnterContinuousReceive
 10392 ;;		_LORAWAN_Send
 10393 ;;		_MacExecuteCommands
 10394 ;;		_RADIO_GetStatus
 10395 ;;		_RADIO_ReleaseData
 10396 ;;		_RxDataDone
 10397 ;;		_SearchAvailableChannel
 10398 ;;		_SetJoinFailState
 10399 ;;		_SetReceptionNotOkState
 10400 ;;		_StartReTxTimer
 10401 ;;		_SwTimerStop
 10402 ;;		_UpdateCfList
 10403 ;;		_UpdateDLSettings
 10404 ;;		_UpdateJoinSuccessState
 10405 ;;		_UpdateReceiveDelays
 10406 ;;		_UpdateRetransmissionAckTimeoutState
 10407 ;;		_memcpy
 10408 ;; This function is called by:
 10409 ;;		_RADIO_RxDone
 10410 ;;		_RADIO_FSKPayloadReady
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           	psect	text62
 10415  000098                     __ptext62:
 10416                           	opt stack 0
 10417  000098                     _LORAWAN_RxDone:
 10418                           	opt stack 12
 10419                           
 10420                           ; BSR set to: 1
 10421                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10422                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10423                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10424                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10425                           ;lorawan.c: 1127: uint8_t *packet;
 10426                           ;lorawan.c: 1128: uint8_t temp;
 10427                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10428                           
 10429                           ;incstack = 0
 10430  000098  EC84  F03C         	call	_RADIO_ReleaseData	;wreg free
 10431                           
 10432                           ; BSR set to: 1
 10433                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10434  00009C  0102               	movlb	2	; () banked
 10435  00009E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10436  0000A0  EF5F  F005         	goto	l14548
 10437                           
 10438                           ; BSR set to: 2
 10439                           ;lorawan.c: 1133: {
 10440                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10441  0000A4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10442  0000A8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10443  0000AC  50DF               	movf	indf2,w,c
 10444  0000AE  0103               	movlb	3	; () banked
 10445  0000B0  6FA2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10446                           
 10447                           ; BSR set to: 3
 10448                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10449  0000B2  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10450  0000B4  32E8               	rrcf	wreg,f,c
 10451  0000B6  0B07               	andlw	7
 10452  0000B8  06E8               	decf	wreg,f,c
 10453  0000BA  E001 D0C7          	bnz	l14220
 10454                           
 10455                           ; BSR set to: 3
 10456  0000BE  0102               	movlb	2	; () banked
 10457  0000C0  511D               	movf	(_loRa+29)& (0+255),w,b
 10458  0000C2  E001 D0C3          	bnz	l14220
 10459                           
 10460                           ; BSR set to: 2
 10461                           ;lorawan.c: 1136: {
 10462                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10463  0000C6  0101               	movlb	1	; () banked
 10464  0000C8  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10465  0000CA  0103               	movlb	3	; () banked
 10466  0000CC  6FA8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10467                           
 10468                           ;lorawan.c: 1138: while (temp > 0)
 10469  0000CE  D020               	goto	l14176
 10470  0000D0                     l14170:
 10471                           
 10472                           ; BSR set to: 3
 10473                           ;lorawan.c: 1139: {
 10474                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10475  0000D0  0101               	movlb	1	; () banked
 10476  0000D2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10477  0000D4  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10478  0000D6  0100               	movlb	0	; () banked
 10479  0000D8  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 10480  0000DA  0E00               	movlw	0
 10481  0000DC  0101               	movlb	1	; () banked
 10482  0000DE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10483  0000E0  0100               	movlb	0	; () banked
 10484  0000E2  6FDE               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10485  0000E4  0103               	movlb	3	; () banked
 10486  0000E6  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10487  0000E8  0100               	movlb	0	; () banked
 10488  0000EA  5DDD               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10489  0000EC  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 10490  0000EE  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10491  0000F0  A0D8               	btfss	status,0,c
 10492  0000F2  05DE               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10493  0000F4  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10494  0000F6  0E42               	movlw	low (_loRa+66)
 10495  0000F8  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 10496  0000FA  0E02               	movlw	high (_loRa+66)
 10497  0000FC  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10498  0000FE  EC5D  F039         	call	_AESEncodeLoRa	;wreg free
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;lorawan.c: 1142: if (temp > 16)
 10502  000102  0E10               	movlw	16
 10503  000104  0103               	movlb	3	; () banked
 10504  000106  65A8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10505  000108  D002               	goto	l2121
 10506                           
 10507                           ; BSR set to: 3
 10508                           ;lorawan.c: 1143: {
 10509                           ;lorawan.c: 1144: temp -= 16;
 10510  00010A  5FA8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10511                           
 10512                           ;lorawan.c: 1145: }
 10513  00010C  D001               	goto	l14176
 10514  00010E                     l2121:
 10515                           
 10516                           ; BSR set to: 3
 10517                           ;lorawan.c: 1146: else
 10518                           ;lorawan.c: 1147: {
 10519                           ;lorawan.c: 1148: temp = 0;
 10520  00010E  6BA8               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10521  000110                     l14176:
 10522                           
 10523                           ; BSR set to: 3
 10524  000110  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10525  000112  E1DE               	bnz	l14170
 10526                           
 10527                           ; BSR set to: 3
 10528                           ;lorawan.c: 1149: }
 10529                           ;lorawan.c: 1150: }
 10530                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10531  000114  0E42               	movlw	low (_loRa+66)
 10532  000116  0100               	movlb	0	; () banked
 10533  000118  6FCA               	movwf	ComputeMic@key& (0+255),b
 10534  00011A  0E02               	movlw	high (_loRa+66)
 10535  00011C  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 10536  00011E  C166  F0CC         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10537  000122  C167  F0CD         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10538  000126  0101               	movlb	1	; () banked
 10539  000128  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10540  00012A  0FFC               	addlw	252
 10541  00012C  0100               	movlb	0	; () banked
 10542  00012E  6FCE               	movwf	ComputeMic@bufferLength& (0+255),b
 10543  000130  EC69  F034         	call	_ComputeMic	;wreg free
 10544  000134  C0CA  F3AB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10545  000138  C0CB  F3AC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10546  00013C  C0CC  F3AD         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10547  000140  C0CD  F3AE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10548                           
 10549                           ; BSR set to: 0
 10550                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10551  000144  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10552  000148  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10553  00014C  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10554  000150  EC54  F036         	call	_ExtractMic	;wreg free
 10555  000154  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10556  000158  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10557  00015C  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10558  000160  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10562  000164  0103               	movlb	3	; () banked
 10563  000166  51AB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10564  000168  19A3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10565  00016A  E109               	bnz	u15970
 10566  00016C  51AC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10567  00016E  19A4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10568  000170  E106               	bnz	u15970
 10569  000172  51AD               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10570  000174  19A5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10571  000176  E103               	bnz	u15970
 10572  000178  51AE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10573  00017A  19A6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10574  00017C  E011               	bz	l14194
 10575  00017E                     u15970:
 10576                           
 10577                           ; BSR set to: 3
 10578                           ;lorawan.c: 1156: {
 10579                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10580  00017E  0102               	movlb	2	; () banked
 10581  000180  5102               	movf	(_loRa+2)& (0+255),w,b
 10582  000182  0B0F               	andlw	15
 10583  000184  0A05               	xorlw	5
 10584  000186  E102 EFAA  F039    	bz	_SetJoinFailState
 10585                           
 10586                           ; BSR set to: 2
 10587  00018C  5102               	movf	(_loRa+2)& (0+255),w,b
 10588  00018E  0B0F               	andlw	15
 10589  000190  0A03               	xorlw	3
 10590  000192  A4D8               	btfss	status,2,c
 10591  000194  0012               	return	
 10592                           
 10593                           ; BSR set to: 2
 10594  000196  51F1               	movf	(_loRa+241)& (0+255),w,b
 10595  000198  B4D8               	btfsc	status,2,c
 10596  00019A  0012               	return	
 10597                           
 10598                           ; BSR set to: 2
 10599                           ;lorawan.c: 1158: {
 10600                           ;lorawan.c: 1159: SetJoinFailState();
 10601  00019C  EFAA  F039         	goto	_SetJoinFailState	;wreg free
 10602  0001A0                     l14194:
 10603                           
 10604                           ; BSR set to: 3
 10605                           ;lorawan.c: 1163: }
 10606                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10607  0001A0  0102               	movlb	2	; () banked
 10608  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
 10609  0001A4  0B0F               	andlw	15
 10610  0001A6  0A03               	xorlw	3
 10611  0001A8  E103               	bnz	l14198
 10612                           
 10613                           ; BSR set to: 2
 10614                           ;lorawan.c: 1167: {
 10615                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10616  0001AA  51E3               	movf	(_loRa+227)& (0+255),w,b
 10617  0001AC  EC9B  F03A         	call	_SwTimerStop
 10618  0001B0                     l14198:
 10619                           
 10620                           ;lorawan.c: 1169: }
 10621                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10622                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10623  0001B0  C166  F3AF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10624  0001B4  C167  F3B0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10625                           
 10626                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10627  0001B8  0103               	movlb	3	; () banked
 10628  0001BA  EE20 F007          	lfsr	2,7
 10629  0001BE  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10630  0001C0  26D9               	addwf	fsr2l,f,c
 10631  0001C2  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10632  0001C4  22DA               	addwfc	fsr2h,f,c
 10633  0001C6  CFDE F21E          	movff	postinc2,_loRa+30
 10634  0001CA  CFDE F21F          	movff	postinc2,_loRa+31
 10635  0001CE  CFDE F220          	movff	postinc2,_loRa+32
 10636  0001D2  CFDE F221          	movff	postinc2,_loRa+33
 10637                           
 10638                           ; BSR set to: 3
 10639                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10640  0001D6  EE20 F00C          	lfsr	2,12
 10641  0001DA  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10642  0001DC  26D9               	addwf	fsr2l,f,c
 10643  0001DE  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10644  0001E0  22DA               	addwfc	fsr2h,f,c
 10645  0001E2  50DF               	movf	indf2,w,c
 10646  0001E4  0B0F               	andlw	15
 10647  0001E6  EC7D  F035         	call	_UpdateReceiveDelays
 10648                           
 10649                           ; BSR set to: 2
 10650                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10651  0001EA  0103               	movlb	3	; () banked
 10652  0001EC  EE20 F00B          	lfsr	2,11
 10653  0001F0  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10654  0001F2  26D9               	addwf	fsr2l,f,c
 10655  0001F4  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10656  0001F6  22DA               	addwfc	fsr2h,f,c
 10657  0001F8  38DF               	swapf	223,w,c
 10658  0001FA  0B07               	andlw	7
 10659  0001FC  0100               	movlb	0	; () banked
 10660  0001FE  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10661  000200  0103               	movlb	3	; () banked
 10662  000202  EE20 F00B          	lfsr	2,11
 10663  000206  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10664  000208  26D9               	addwf	fsr2l,f,c
 10665  00020A  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10666  00020C  22DA               	addwfc	fsr2h,f,c
 10667  00020E  50DF               	movf	223,w,c
 10668  000210  0B0F               	andlw	15
 10669  000212  EC0B  F03B         	call	_UpdateDLSettings
 10670                           
 10671                           ; BSR set to: 0
 10672                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10673  000216  C3AF  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10674  00021A  C3B0  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10675  00021E  0101               	movlb	1	; () banked
 10676  000220  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10677  000222  ECD9  F018         	call	_UpdateCfList
 10678                           
 10679                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10680  000226  C3AF  F094         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10681  00022A  C3B0  F095         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10682  00022E  EC20  F02F         	call	_ComputeSessionKeys	;wreg free
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10686  000232  6AE6               	clrf	postinc1,c
 10687  000234  EC92  F022         	call	_UpdateJoinSuccessState	;wreg free
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10691  000238  0102               	movlb	2	; () banked
 10692  00023A  6B06               	clrf	(_loRa+6)& (0+255),b
 10693  00023C  6B07               	clrf	(_loRa+7)& (0+255),b
 10694  00023E  6B08               	clrf	(_loRa+8)& (0+255),b
 10695  000240  6B09               	clrf	(_loRa+9)& (0+255),b
 10696                           
 10697                           ; BSR set to: 2
 10698                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10699  000242  6B0A               	clrf	(_loRa+10)& (0+255),b
 10700  000244  6B0B               	clrf	(_loRa+11)& (0+255),b
 10701  000246  6B0C               	clrf	(_loRa+12)& (0+255),b
 10702  000248  6B0D               	clrf	(_loRa+13)& (0+255),b
 10703  00024A  0012               	return	
 10704  00024C                     l14220:
 10705                           
 10706                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10707  00024C  0103               	movlb	3	; () banked
 10708  00024E  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10709  000250  32E8               	rrcf	wreg,f,c
 10710  000252  0B07               	andlw	7
 10711  000254  0A03               	xorlw	3
 10712  000256  E007               	bz	l2133
 10713                           
 10714                           ; BSR set to: 3
 10715  000258  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10716  00025A  32E8               	rrcf	wreg,f,c
 10717  00025C  0B07               	andlw	7
 10718  00025E  0A05               	xorlw	5
 10719  000260  E002 EF9C  F031    	bnz	_SetReceptionNotOkState
 10720  000266                     l2133:
 10721                           
 10722                           ; BSR set to: 3
 10723                           ;lorawan.c: 1192: {
 10724                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10725  000266  0102               	movlb	2	; () banked
 10726  000268  6BA7               	clrf	(_loRa+167)& (0+255),b
 10727                           
 10728                           ; BSR set to: 2
 10729                           ;lorawan.c: 1195: Hdr_t *hdr;
 10730                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10731  00026A  C166  F3B2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10732  00026E  C167  F3B3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10733                           
 10734                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10735  000272  0E02               	movlw	2
 10736  000274  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10737  000276  E001 D188          	bnz	l14338
 10738                           
 10739                           ; BSR set to: 2
 10740  00027A  0103               	movlb	3	; () banked
 10741  00027C  EE20 F001          	lfsr	2,1
 10742  000280  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10743  000282  26D9               	addwf	fsr2l,f,c
 10744  000284  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10745  000286  22DA               	addwfc	fsr2h,f,c
 10746  000288  0102               	movlb	2	; () banked
 10747  00028A  5162               	movf	(_loRa+98)& (0+255),w,b
 10748  00028C  18DE               	xorwf	postinc2,w,c
 10749  00028E  E109               	bnz	u16051
 10750  000290  5163               	movf	(_loRa+99)& (0+255),w,b
 10751  000292  18DE               	xorwf	postinc2,w,c
 10752  000294  E106               	bnz	u16051
 10753  000296  5164               	movf	(_loRa+100)& (0+255),w,b
 10754  000298  18DE               	xorwf	postinc2,w,c
 10755  00029A  E103               	bnz	u16051
 10756  00029C  5165               	movf	(_loRa+101)& (0+255),w,b
 10757  00029E  18DE               	xorwf	postinc2,w,c
 10758  0002A0  A4D8               	btfss	status,2,c
 10759  0002A2                     u16051:
 10760  0002A2  D173               	goto	l14338
 10761                           
 10762                           ; BSR set to: 2
 10763  0002A4  A504               	btfss	(_loRa+4)& (0+255),2,b
 10764  0002A6  D171               	goto	l14338
 10765                           
 10766                           ; BSR set to: 2
 10767                           ;lorawan.c: 1200: {
 10768                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10769  0002A8  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10770  0002AC  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10771  0002B0  EC55  F030         	call	_CheckMcastFlags	;wreg free
 10772  0002B4  0900               	iorlw	0
 10773  0002B6  E107               	bnz	l14238
 10774  0002B8                     l14232:
 10775                           
 10776                           ;lorawan.c: 1203: {
 10777                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10778  0002B8  0102               	movlb	2	; () banked
 10779  0002BA  5102               	movf	(_loRa+2)& (0+255),w,b
 10780  0002BC  0BF0               	andlw	-16
 10781  0002BE  0909               	iorlw	9
 10782  0002C0  6F02               	movwf	(_loRa+2)& (0+255),b
 10783                           
 10784                           ; BSR set to: 2
 10785                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10786  0002C2  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 10787  0002C6                     l14238:
 10788                           
 10789                           ;lorawan.c: 1207: }
 10790                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10791  0002C6  0103               	movlb	3	; () banked
 10792  0002C8  EE20 F006          	lfsr	2,6
 10793  0002CC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10794  0002CE  26D9               	addwf	fsr2l,f,c
 10795  0002D0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10796  0002D2  22DA               	addwfc	fsr2h,f,c
 10797  0002D4  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10798  0002D8  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10799  0002DC  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10800  0002E0  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10801  0002E4  0100               	movlb	0	; () banked
 10802  0002E6  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10803  0002E8  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10804  0002EA  0101               	movlb	1	; () banked
 10805  0002EC  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10806  0002EE  0FFC               	addlw	252
 10807  0002F0  0100               	movlb	0	; () banked
 10808  0002F2  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10809  0002F4  0E49               	movlw	73
 10810  0002F6  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10811  0002F8  0E01               	movlw	1
 10812  0002FA  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10813  0002FC  EC31  F02C         	call	_AssembleEncryptionBlock
 10814                           
 10815                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10816  000300  0EEF               	movlw	low _radioBuffer
 10817  000302  6F64               	movwf	memcpy@d1& (0+255),b
 10818  000304  0E05               	movlw	high _radioBuffer
 10819  000306  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10820  000308  0EA0               	movlw	low _aesBuffer
 10821  00030A  6F66               	movwf	memcpy@s1& (0+255),b
 10822  00030C  0E01               	movlw	high _aesBuffer
 10823  00030E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10824  000310  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10825  000312  0E10               	movlw	16
 10826  000314  6F68               	movwf	memcpy@n& (0+255),b
 10827  000316  EC14  F034         	call	_memcpy	;wreg free
 10828                           
 10829                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10830  00031A  0EFF               	movlw	low (_radioBuffer+16)
 10831  00031C  6F64               	movwf	memcpy@d1& (0+255),b
 10832  00031E  0E05               	movlw	high (_radioBuffer+16)
 10833  000320  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10834  000322  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10835  000326  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10836  00032A  0EFC               	movlw	252
 10837  00032C  0101               	movlb	1	; () banked
 10838  00032E  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10839  000330  0100               	movlb	0	; () banked
 10840  000332  6F68               	movwf	memcpy@n& (0+255),b
 10841  000334  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10842  000336  0EFF               	movlw	255
 10843  000338  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 10844  00033A  EC14  F034         	call	_memcpy	;wreg free
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10848  00033E  0E66               	movlw	low (_loRa+102)
 10849  000340  6FBC               	movwf	AESCmac@key& (0+255),b
 10850  000342  0E02               	movlw	high (_loRa+102)
 10851  000344  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 10852  000346  0EA0               	movlw	low _aesBuffer
 10853  000348  6FBE               	movwf	AESCmac@output& (0+255),b
 10854  00034A  0E01               	movlw	high _aesBuffer
 10855  00034C  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 10856  00034E  0EEF               	movlw	low _radioBuffer
 10857  000350  6FC0               	movwf	AESCmac@input& (0+255),b
 10858  000352  0E05               	movlw	high _radioBuffer
 10859  000354  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 10860  000356  0101               	movlb	1	; () banked
 10861  000358  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10862  00035A  0F0C               	addlw	12
 10863  00035C  0100               	movlb	0	; () banked
 10864  00035E  6FC2               	movwf	AESCmac@size& (0+255),b
 10865  000360  EC0C  F00C         	call	_AESCmac	;wreg free
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10869  000364  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 10870  000366  6F64               	movwf	memcpy@d1& (0+255),b
 10871  000368  0E03               	movlw	high LORAWAN_RxDone@computedMic
 10872  00036A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10873  00036C  0EA0               	movlw	low _aesBuffer
 10874  00036E  6F66               	movwf	memcpy@s1& (0+255),b
 10875  000370  0E01               	movlw	high _aesBuffer
 10876  000372  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10877  000374  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10878  000376  0E04               	movlw	4
 10879  000378  6F68               	movwf	memcpy@n& (0+255),b
 10880  00037A  EC14  F034         	call	_memcpy	;wreg free
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10884  00037E  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10885  000382  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10886  000386  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10887  00038A  EC54  F036         	call	_ExtractMic	;wreg free
 10888  00038E  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10889  000392  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10890  000396  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10891  00039A  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10895  00039E  0103               	movlb	3	; () banked
 10896  0003A0  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10897  0003A2  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10898  0003A4  E189               	bnz	l14232
 10899  0003A6  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10900  0003A8  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10901  0003AA  E186               	bnz	l14232
 10902  0003AC  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10903  0003AE  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10904  0003B0  E183               	bnz	l14232
 10905  0003B2  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10906  0003B4  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10907  0003B6  E180               	bnz	l14232
 10908                           
 10909                           ; BSR set to: 3
 10910                           ;lorawan.c: 1222: }
 10911                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10912  0003B8  EE20 F006          	lfsr	2,6
 10913  0003BC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10914  0003BE  26D9               	addwf	fsr2l,f,c
 10915  0003C0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10916  0003C2  22DA               	addwfc	fsr2h,f,c
 10917  0003C4  0102               	movlb	2	; () banked
 10918  0003C6  510E               	movf	(_loRa+14)& (0+255),w,b
 10919  0003C8  5CDE               	subwf	postinc2,w,c
 10920  0003CA  510F               	movf	(_loRa+15)& (0+255),w,b
 10921  0003CC  58DE               	subwfb	postinc2,w,c
 10922  0003CE  E334               	bnc	l14272
 10923                           
 10924                           ; BSR set to: 2
 10925                           ;lorawan.c: 1225: {
 10926                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10927  0003D0  0103               	movlb	3	; () banked
 10928  0003D2  EE20 F006          	lfsr	2,6
 10929  0003D6  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10930  0003D8  26D9               	addwf	fsr2l,f,c
 10931  0003DA  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10932  0003DC  22DA               	addwfc	fsr2h,f,c
 10933  0003DE  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10934  0003E2  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10935  0003E6  0102               	movlb	2	; () banked
 10936  0003E8  510E               	movf	(_loRa+14)& (0+255),w,b
 10937  0003EA  0100               	movlb	0	; () banked
 10938  0003EC  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 10939  0003EE  0102               	movlb	2	; () banked
 10940  0003F0  510F               	movf	(_loRa+15)& (0+255),w,b
 10941  0003F2  0100               	movlb	0	; () banked
 10942  0003F4  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10943  0003F6  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10944  0003F8  0102               	movlb	2	; () banked
 10945  0003FA  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10946  0003FC  0100               	movlb	0	; () banked
 10947  0003FE  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10948  000400  0102               	movlb	2	; () banked
 10949  000402  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10950  000404  E20D               	bc	l14270
 10951  000406                     l14258:
 10952                           
 10953                           ; BSR set to: 2
 10954                           ;lorawan.c: 1227: {
 10955                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10956  000406  0100               	movlb	0	; () banked
 10957  000408  51E8               	movf	_rxPayload& (0+255),w,b
 10958  00040A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10959  00040C  E101 D754          	bz	l14232
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;lorawan.c: 1229: {
 10963                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10964  000410  6B67               	clrf	RxDataDone@pData& (0+255),b
 10965  000412  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10966  000414  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10967  000416  0E05               	movlw	5
 10968  000418  6F6A               	movwf	RxDataDone@status& (0+255),b
 10969  00041A  D801               	call	u16128
 10970  00041C  D74D               	goto	l14232
 10971  00041E                     u16128:
 10972  00041E  D0AC               	goto	u16228
 10973  000420                     l14270:
 10974                           
 10975                           ; BSR set to: 2
 10976                           ;lorawan.c: 1237: else
 10977                           ;lorawan.c: 1238: {
 10978                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 10979  000420  0103               	movlb	3	; () banked
 10980  000422  EE20 F006          	lfsr	2,6
 10981  000426  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10982  000428  26D9               	addwf	fsr2l,f,c
 10983  00042A  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10984  00042C  22DA               	addwfc	fsr2h,f,c
 10985  00042E  CFDE F20E          	movff	postinc2,_loRa+14
 10986  000432  CFDD F20F          	movff	postdec2,_loRa+15
 10987  000436  D013               	goto	l14290
 10988  000438                     l14272:
 10989                           
 10990                           ; BSR set to: 2
 10991                           ;lorawan.c: 1242: else
 10992                           ;lorawan.c: 1243: {
 10993                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 10994  000438  0103               	movlb	3	; () banked
 10995  00043A  EE20 F006          	lfsr	2,6
 10996  00043E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10997  000440  26D9               	addwf	fsr2l,f,c
 10998  000442  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10999  000444  22DA               	addwfc	fsr2h,f,c
 11000  000446  50DE               	movf	postinc2,w,c
 11001  000448  10DE               	iorwf	postinc2,w,c
 11002  00044A  E1DD               	bnz	l14258
 11003                           
 11004                           ; BSR set to: 3
 11005  00044C  0102               	movlb	2	; () banked
 11006  00044E  290E               	incf	(_loRa+14)& (0+255),w,b
 11007  000450  E1DA               	bnz	l14258
 11008  000452  290F               	incf	(_loRa+15)& (0+255),w,b
 11009  000454  E1D8               	bnz	l14258
 11010                           
 11011                           ; BSR set to: 2
 11012                           ;lorawan.c: 1245: {
 11013                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11014  000456  6B0E               	clrf	(_loRa+14)& (0+255),b
 11015  000458  6B0F               	clrf	(_loRa+15)& (0+255),b
 11016                           
 11017                           ; BSR set to: 2
 11018                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11019  00045A  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11020  00045C  2B11               	incf	(_loRa+17)& (0+255),f,b
 11021  00045E                     l14290:
 11022                           
 11023                           ;lorawan.c: 1259: }
 11024                           ;lorawan.c: 1260: }
 11025                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11026  00045E  0102               	movlb	2	; () banked
 11027  000460  290E               	incf	(_loRa+14)& (0+255),w,b
 11028  000462  E107               	bnz	l14302
 11029  000464  290F               	incf	(_loRa+15)& (0+255),w,b
 11030  000466  E105               	bnz	l14302
 11031  000468  2910               	incf	(_loRa+16)& (0+255),w,b
 11032  00046A  E103               	bnz	l14302
 11033  00046C  2911               	incf	(_loRa+17)& (0+255),w,b
 11034  00046E  E101               	bnz	l14302
 11035  000470  D7CA               	goto	l14258
 11036  000472                     l14302:
 11037                           
 11038                           ; BSR set to: 2
 11039                           ;lorawan.c: 1272: }
 11040                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11041  000472  5102               	movf	(_loRa+2)& (0+255),w,b
 11042  000474  0B0F               	andlw	15
 11043  000476  0A08               	xorlw	8
 11044  000478  E108               	bnz	l14306
 11045                           
 11046                           ; BSR set to: 2
 11047                           ;lorawan.c: 1275: {
 11048                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11049  00047A  51E4               	movf	(_loRa+228)& (0+255),w,b
 11050  00047C  EC9B  F03A         	call	_SwTimerStop
 11051                           
 11052                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11053  000480  0102               	movlb	2	; () banked
 11054  000482  51E5               	movf	(_loRa+229)& (0+255),w,b
 11055  000484  EC9B  F03A         	call	_SwTimerStop
 11056                           
 11057                           ;lorawan.c: 1278: }
 11058  000488  D007               	goto	l14310
 11059  00048A                     l14306:
 11060                           
 11061                           ; BSR set to: 2
 11062                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11063  00048A  5102               	movf	(_loRa+2)& (0+255),w,b
 11064  00048C  0B0F               	andlw	15
 11065  00048E  0A03               	xorlw	3
 11066  000490  E103               	bnz	l14310
 11067                           
 11068                           ; BSR set to: 2
 11069                           ;lorawan.c: 1280: {
 11070                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11071  000492  51E5               	movf	(_loRa+229)& (0+255),w,b
 11072  000494  EC9B  F03A         	call	_SwTimerStop
 11073  000498                     l14310:
 11074                           
 11075                           ;lorawan.c: 1282: }
 11076                           ;lorawan.c: 1284: buffer = buffer + 8;
 11077  000498  0E08               	movlw	8
 11078  00049A  0101               	movlb	1	; () banked
 11079  00049C  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11080  00049E  0E00               	movlw	0
 11081  0004A0  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11082                           
 11083                           ; BSR set to: 1
 11084                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11085  0004A2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11086  0004A4  0100               	movlb	0	; () banked
 11087  0004A6  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11088  0004A8  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11089  0004AA  0103               	movlb	3	; () banked
 11090  0004AC  EE20 F005          	lfsr	2,5
 11091  0004B0  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11092  0004B2  26D9               	addwf	fsr2l,f,c
 11093  0004B4  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11094  0004B6  22DA               	addwfc	fsr2h,f,c
 11095  0004B8  50DF               	movf	223,w,c
 11096  0004BA  0B0F               	andlw	15
 11097  0004BC  0100               	movlb	0	; () banked
 11098  0004BE  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11099  0004C0  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11100  0004C2  0E0C               	movlw	12
 11101  0004C4  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11102  0004C6  0E00               	movlw	0
 11103  0004C8  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11104  0004CA  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11105  0004CC  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11106  0004CE  E103               	bnz	u16200
 11107  0004D0  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11108  0004D2  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11109  0004D4  E03A               	bz	l2150
 11110  0004D6                     u16200:
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;lorawan.c: 1287: {
 11114                           ;lorawan.c: 1288: fPort = *(buffer++);
 11115  0004D6  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11116  0004DA  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11117  0004DE  50DF               	movf	indf2,w,c
 11118  0004E0  0103               	movlb	3	; () banked
 11119  0004E2  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11120                           
 11121                           ; BSR set to: 3
 11122  0004E4  0101               	movlb	1	; () banked
 11123  0004E6  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11124  0004E8  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11125                           
 11126                           ; BSR set to: 1
 11127                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11128  0004EA  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11129  0004EC  0FF4               	addlw	244
 11130  0004EE  0103               	movlb	3	; () banked
 11131  0004F0  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11132                           
 11133                           ; BSR set to: 3
 11134                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11135  0004F2  0E19               	movlw	25
 11136  0004F4  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11137                           
 11138                           ; BSR set to: 3
 11139                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11140  0004F6  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11141  0004FA  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11142  0004FE  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11143  000500  0100               	movlb	0	; () banked
 11144  000502  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11145  000504  0E01               	movlw	1
 11146  000506  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11147  000508  C20E  F098         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11148  00050C  C20F  F099         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11149  000510  C210  F09A         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11150  000514  C211  F09B         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11151  000518  0E76               	movlw	low (_loRa+118)
 11152  00051A  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11153  00051C  0E02               	movlw	high (_loRa+118)
 11154  00051E  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11155  000520  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11156  000524  0EEF               	movlw	low _radioBuffer
 11157  000526  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11158  000528  0E05               	movlw	high _radioBuffer
 11159  00052A  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11160  00052C  0E01               	movlw	1
 11161  00052E  6FA1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11162  000530  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;lorawan.c: 1294: packet = buffer - 1;
 11166  000534  0EFF               	movlw	255
 11167  000536  0101               	movlb	1	; () banked
 11168  000538  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11169  00053A  0103               	movlb	3	; () banked
 11170  00053C  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11171  00053E  0EFF               	movlw	255
 11172  000540  0101               	movlb	1	; () banked
 11173  000542  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11174  000544  0103               	movlb	3	; () banked
 11175  000546  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11176                           
 11177                           ;lorawan.c: 1295: }
 11178  000548  D004               	goto	l2151
 11179  00054A                     l2150:
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;lorawan.c: 1296: else
 11183                           ;lorawan.c: 1297: {
 11184                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11185  00054A  0103               	movlb	3	; () banked
 11186  00054C  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11187                           
 11188                           ;lorawan.c: 1299: packet = (0);
 11189  00054E  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11190  000550  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11191  000552                     l2151:
 11192                           
 11193                           ; BSR set to: 3
 11194                           ;lorawan.c: 1300: }
 11195                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11196  000552  0102               	movlb	2	; () banked
 11197  000554  8303               	bsf	(_loRa+3)& (0+255),1,b
 11198                           
 11199                           ; BSR set to: 2
 11200                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11201  000556  0EF0               	movlw	-16
 11202  000558  1702               	andwf	(_loRa+2)& (0+255),f,b
 11203                           
 11204                           ; BSR set to: 2
 11205                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11206  00055A  0100               	movlb	0	; () banked
 11207  00055C  51E8               	movf	_rxPayload& (0+255),w,b
 11208  00055E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11209  000560  E101 D6AA          	bz	l14232
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;lorawan.c: 1306: {
 11213                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11214  000564  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11215  000568  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11216  00056C  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11217  000570  0E01               	movlw	1
 11218  000572  6F6A               	movwf	RxDataDone@status& (0+255),b
 11219  000574  D801               	call	u16228
 11220  000576  D6A0               	goto	l14232
 11221  000578                     u16228:
 11222  000578  0005               	push	
 11223  00057A  6EFA               	movwf	pclath,c
 11224  00057C  51E8               	movf	_rxPayload& (0+255),w,b
 11225  00057E  6EFD               	movwf	tosl,c
 11226  000580  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11227  000582  6EFE               	movwf	tosh,c
 11228  000584  6AFF               	clrf	tosu,c
 11229  000586  50FA               	movf	pclath,w,c
 11230  000588  0012               	return		;indir
 11231  00058A                     l14338:
 11232                           
 11233                           ; BSR set to: 2
 11234                           ;lorawan.c: 1313: }
 11235                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11236  00058A  0103               	movlb	3	; () banked
 11237  00058C  EE20 F001          	lfsr	2,1
 11238  000590  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11239  000592  26D9               	addwf	fsr2l,f,c
 11240  000594  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11241  000596  22DA               	addwfc	fsr2h,f,c
 11242  000598  0102               	movlb	2	; () banked
 11243  00059A  511E               	movf	(_loRa+30)& (0+255),w,b
 11244  00059C  18DE               	xorwf	postinc2,w,c
 11245  00059E  E109               	bnz	u16230
 11246  0005A0  511F               	movf	(_loRa+31)& (0+255),w,b
 11247  0005A2  18DE               	xorwf	postinc2,w,c
 11248  0005A4  E106               	bnz	u16230
 11249  0005A6  5120               	movf	(_loRa+32)& (0+255),w,b
 11250  0005A8  18DE               	xorwf	postinc2,w,c
 11251  0005AA  E103               	bnz	u16230
 11252  0005AC  5121               	movf	(_loRa+33)& (0+255),w,b
 11253  0005AE  18DE               	xorwf	postinc2,w,c
 11254  0005B0  E008               	bz	l14350
 11255  0005B2                     u16230:
 11256                           
 11257                           ; BSR set to: 2
 11258                           ;lorawan.c: 1317: {
 11259                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11260  0005B2  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11261  0005B6                     l14342:
 11262                           
 11263                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11264  0005B6  0E02               	movlw	2
 11265  0005B8  0102               	movlb	2	; () banked
 11266  0005BA                     L5:
 11267  0005BA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11268  0005BC  E101 D67C          	bz	l14232
 11269  0005C0  0012               	return	
 11270  0005C2                     l14350:
 11271                           
 11272                           ; BSR set to: 2
 11273                           ;lorawan.c: 1325: }
 11274                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11275  0005C2  0103               	movlb	3	; () banked
 11276  0005C4  EE20 F006          	lfsr	2,6
 11277  0005C8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11278  0005CA  26D9               	addwf	fsr2l,f,c
 11279  0005CC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11280  0005CE  22DA               	addwfc	fsr2h,f,c
 11281  0005D0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11282  0005D4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11283  0005D8  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11284  0005DC  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11285  0005E0  0100               	movlb	0	; () banked
 11286  0005E2  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11287  0005E4  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11288  0005E6  0101               	movlb	1	; () banked
 11289  0005E8  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11290  0005EA  0FFC               	addlw	252
 11291  0005EC  0100               	movlb	0	; () banked
 11292  0005EE  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11293  0005F0  0E49               	movlw	73
 11294  0005F2  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11295  0005F4  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11296  0005F6  0E01               	movlw	1
 11297  0005F8  EC31  F02C         	call	_AssembleEncryptionBlock
 11298                           
 11299                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11300  0005FC  0EEF               	movlw	low _radioBuffer
 11301  0005FE  6F64               	movwf	memcpy@d1& (0+255),b
 11302  000600  0E05               	movlw	high _radioBuffer
 11303  000602  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11304  000604  0EA0               	movlw	low _aesBuffer
 11305  000606  6F66               	movwf	memcpy@s1& (0+255),b
 11306  000608  0E01               	movlw	high _aesBuffer
 11307  00060A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11308  00060C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11309  00060E  0E10               	movlw	16
 11310  000610  6F68               	movwf	memcpy@n& (0+255),b
 11311  000612  EC14  F034         	call	_memcpy	;wreg free
 11312                           
 11313                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11314  000616  0EFF               	movlw	low (_radioBuffer+16)
 11315  000618  6F64               	movwf	memcpy@d1& (0+255),b
 11316  00061A  0E05               	movlw	high (_radioBuffer+16)
 11317  00061C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11318  00061E  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11319  000622  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11320  000626  0EFC               	movlw	252
 11321  000628  0101               	movlb	1	; () banked
 11322  00062A  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11323  00062C  0100               	movlb	0	; () banked
 11324  00062E  6F68               	movwf	memcpy@n& (0+255),b
 11325  000630  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11326  000632  0EFF               	movlw	255
 11327  000634  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11328  000636  EC14  F034         	call	_memcpy	;wreg free
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11332  00063A  0E22               	movlw	low (_loRa+34)
 11333  00063C  6FBC               	movwf	AESCmac@key& (0+255),b
 11334  00063E  0E02               	movlw	high (_loRa+34)
 11335  000640  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 11336  000642  0EA0               	movlw	low _aesBuffer
 11337  000644  6FBE               	movwf	AESCmac@output& (0+255),b
 11338  000646  0E01               	movlw	high _aesBuffer
 11339  000648  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 11340  00064A  0EEF               	movlw	low _radioBuffer
 11341  00064C  6FC0               	movwf	AESCmac@input& (0+255),b
 11342  00064E  0E05               	movlw	high _radioBuffer
 11343  000650  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 11344  000652  0101               	movlb	1	; () banked
 11345  000654  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11346  000656  0F0C               	addlw	12
 11347  000658  0100               	movlb	0	; () banked
 11348  00065A  6FC2               	movwf	AESCmac@size& (0+255),b
 11349  00065C  EC0C  F00C         	call	_AESCmac	;wreg free
 11350                           
 11351                           ; BSR set to: 0
 11352                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11353  000660  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 11354  000662  6F64               	movwf	memcpy@d1& (0+255),b
 11355  000664  0E03               	movlw	high LORAWAN_RxDone@computedMic
 11356  000666  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11357  000668  0EA0               	movlw	low _aesBuffer
 11358  00066A  6F66               	movwf	memcpy@s1& (0+255),b
 11359  00066C  0E01               	movlw	high _aesBuffer
 11360  00066E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11361  000670  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11362  000672  0E04               	movlw	4
 11363  000674  6F68               	movwf	memcpy@n& (0+255),b
 11364  000676  EC14  F034         	call	_memcpy	;wreg free
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11368  00067A  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11369  00067E  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11370  000682  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11371  000686  EC54  F036         	call	_ExtractMic	;wreg free
 11372  00068A  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11373  00068E  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11374  000692  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11375  000696  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11379  00069A  0103               	movlb	3	; () banked
 11380  00069C  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11381  00069E  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11382  0006A0  E109               	bnz	u16250
 11383  0006A2  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11384  0006A4  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11385  0006A6  E106               	bnz	u16250
 11386  0006A8  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11387  0006AA  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11388  0006AC  E103               	bnz	u16250
 11389  0006AE  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11390  0006B0  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11391  0006B2  E003               	bz	l14370
 11392  0006B4                     u16250:
 11393                           
 11394                           ; BSR set to: 3
 11395                           ;lorawan.c: 1337: {
 11396                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11397  0006B4  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11398  0006B8  D77E               	goto	l14342
 11399  0006BA                     l14370:
 11400                           
 11401                           ; BSR set to: 3
 11402                           ;lorawan.c: 1345: }
 11403                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11404  0006BA  EE20 F006          	lfsr	2,6
 11405  0006BE  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11406  0006C0  26D9               	addwf	fsr2l,f,c
 11407  0006C2  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11408  0006C4  22DA               	addwfc	fsr2h,f,c
 11409  0006C6  0102               	movlb	2	; () banked
 11410  0006C8  510A               	movf	(_loRa+10)& (0+255),w,b
 11411  0006CA  5CDE               	subwf	postinc2,w,c
 11412  0006CC  510B               	movf	(_loRa+11)& (0+255),w,b
 11413  0006CE  58DE               	subwfb	postinc2,w,c
 11414  0006D0  E344               	bnc	l14400
 11415                           
 11416                           ; BSR set to: 2
 11417                           ;lorawan.c: 1349: {
 11418                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11419  0006D2  0103               	movlb	3	; () banked
 11420  0006D4  EE20 F006          	lfsr	2,6
 11421  0006D8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11422  0006DA  26D9               	addwf	fsr2l,f,c
 11423  0006DC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11424  0006DE  22DA               	addwfc	fsr2h,f,c
 11425  0006E0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11426  0006E4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11427  0006E8  0102               	movlb	2	; () banked
 11428  0006EA  510A               	movf	(_loRa+10)& (0+255),w,b
 11429  0006EC  0100               	movlb	0	; () banked
 11430  0006EE  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11431  0006F0  0102               	movlb	2	; () banked
 11432  0006F2  510B               	movf	(_loRa+11)& (0+255),w,b
 11433  0006F4  0100               	movlb	0	; () banked
 11434  0006F6  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11435  0006F8  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11436  0006FA  0102               	movlb	2	; () banked
 11437  0006FC  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11438  0006FE  0100               	movlb	0	; () banked
 11439  000700  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11440  000702  0102               	movlb	2	; () banked
 11441  000704  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11442  000706  E21D               	bc	l14398
 11443                           
 11444                           ; BSR set to: 2
 11445                           ;lorawan.c: 1351: {
 11446                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11447  000708  9100               	bcf	_loRa& (0+255),0,b
 11448                           
 11449                           ; BSR set to: 2
 11450                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11451  00070A  0EF0               	movlw	-16
 11452  00070C  1702               	andwf	(_loRa+2)& (0+255),f,b
 11453                           
 11454                           ; BSR set to: 2
 11455                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11456  00070E  0100               	movlb	0	; () banked
 11457  000710  51E8               	movf	_rxPayload& (0+255),w,b
 11458  000712  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11459  000714  E013               	bz	l14384
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;lorawan.c: 1355: {
 11463                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11464  000716  0102               	movlb	2	; () banked
 11465  000718  9B00               	bcf	_loRa& (0+255),5,b
 11466                           
 11467                           ; BSR set to: 2
 11468                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11469  00071A  0E00               	movlw	0
 11470  00071C  0100               	movlb	0	; () banked
 11471  00071E  6B67               	clrf	RxDataDone@pData& (0+255),b
 11472  000720  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 11473  000722  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 11474  000724  6B6A               	clrf	RxDataDone@status& (0+255),b
 11475  000726  D801               	call	u16308
 11476  000728  D009               	goto	l14384
 11477  00072A                     u16308:
 11478  00072A  0005               	push	
 11479  00072C  6EFA               	movwf	pclath,c
 11480  00072E  51E8               	movf	_rxPayload& (0+255),w,b
 11481  000730  6EFD               	movwf	tosl,c
 11482  000732  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11483  000734  6EFE               	movwf	tosh,c
 11484  000736  6AFF               	clrf	tosu,c
 11485  000738  50FA               	movf	pclath,w,c
 11486  00073A  0012               	return		;indir
 11487  00073C                     l14384:
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;lorawan.c: 1358: }
 11491                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11492  00073C  0102               	movlb	2	; () banked
 11493  00073E  9303               	bcf	(_loRa+3)& (0+255),1,b
 11494  000740  D036               	goto	l14420
 11495  000742                     l14398:
 11496                           
 11497                           ; BSR set to: 2
 11498                           ;lorawan.c: 1370: else
 11499                           ;lorawan.c: 1371: {
 11500                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11501  000742  0103               	movlb	3	; () banked
 11502  000744  EE20 F006          	lfsr	2,6
 11503  000748  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11504  00074A  26D9               	addwf	fsr2l,f,c
 11505  00074C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11506  00074E  22DA               	addwfc	fsr2h,f,c
 11507  000750  CFDE F20A          	movff	postinc2,_loRa+10
 11508  000754  CFDD F20B          	movff	postdec2,_loRa+11
 11509  000758  D021               	goto	l14418
 11510  00075A                     l14400:
 11511                           
 11512                           ; BSR set to: 2
 11513                           ;lorawan.c: 1375: else
 11514                           ;lorawan.c: 1376: {
 11515                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11516  00075A  0103               	movlb	3	; () banked
 11517  00075C  EE20 F006          	lfsr	2,6
 11518  000760  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11519  000762  26D9               	addwf	fsr2l,f,c
 11520  000764  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11521  000766  22DA               	addwfc	fsr2h,f,c
 11522  000768  50DE               	movf	postinc2,w,c
 11523  00076A  10DE               	iorwf	postinc2,w,c
 11524  00076C  E114               	bnz	l14408
 11525                           
 11526                           ; BSR set to: 3
 11527  00076E  0102               	movlb	2	; () banked
 11528  000770  290A               	incf	(_loRa+10)& (0+255),w,b
 11529  000772  E111               	bnz	l14408
 11530  000774  290B               	incf	(_loRa+11)& (0+255),w,b
 11531  000776  E10F               	bnz	l14408
 11532                           
 11533                           ; BSR set to: 2
 11534                           ;lorawan.c: 1378: {
 11535                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11536  000778  0103               	movlb	3	; () banked
 11537  00077A  EE20 F006          	lfsr	2,6
 11538  00077E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11539  000780  26D9               	addwf	fsr2l,f,c
 11540  000782  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11541  000784  22DA               	addwfc	fsr2h,f,c
 11542  000786  CFDE F20A          	movff	postinc2,_loRa+10
 11543  00078A  CFDD F20B          	movff	postdec2,_loRa+11
 11544                           
 11545                           ; BSR set to: 3
 11546                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11547  00078E  0102               	movlb	2	; () banked
 11548  000790  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11549  000792  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11550                           
 11551                           ;lorawan.c: 1382: }
 11552  000794  D003               	goto	l14418
 11553  000796                     l14408:
 11554                           
 11555                           ;lorawan.c: 1383: else
 11556                           ;lorawan.c: 1384: {
 11557                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11558  000796  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11559  00079A  D70D               	goto	l14342
 11560  00079C                     l14418:
 11561                           
 11562                           ;lorawan.c: 1393: }
 11563                           ;lorawan.c: 1394: }
 11564                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11565  00079C  0102               	movlb	2	; () banked
 11566  00079E  290A               	incf	(_loRa+10)& (0+255),w,b
 11567  0007A0  E109               	bnz	l14430
 11568  0007A2  290B               	incf	(_loRa+11)& (0+255),w,b
 11569  0007A4  E107               	bnz	l14430
 11570  0007A6  290C               	incf	(_loRa+12)& (0+255),w,b
 11571  0007A8  E105               	bnz	l14430
 11572  0007AA  290D               	incf	(_loRa+13)& (0+255),w,b
 11573  0007AC  E103               	bnz	l14430
 11574  0007AE                     l14420:
 11575                           
 11576                           ; BSR set to: 2
 11577                           ;lorawan.c: 1397: {
 11578                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11579  0007AE  8304               	bsf	(_loRa+4)& (0+255),1,b
 11580                           
 11581                           ; BSR set to: 2
 11582                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11583  0007B0  0E02               	movlw	2
 11584  0007B2  D703               	goto	L5
 11585  0007B4                     l14430:
 11586                           
 11587                           ; BSR set to: 2
 11588                           ;lorawan.c: 1407: }
 11589                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11590  0007B4  5102               	movf	(_loRa+2)& (0+255),w,b
 11591  0007B6  0B0F               	andlw	15
 11592  0007B8  0A03               	xorlw	3
 11593  0007BA  E103               	bnz	l14434
 11594                           
 11595                           ; BSR set to: 2
 11596                           ;lorawan.c: 1411: {
 11597                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11598  0007BC  51E5               	movf	(_loRa+229)& (0+255),w,b
 11599  0007BE  EC9B  F03A         	call	_SwTimerStop
 11600  0007C2                     l14434:
 11601                           
 11602                           ;lorawan.c: 1413: }
 11603                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11604  0007C2  0E01               	movlw	1
 11605  0007C4  0102               	movlb	2	; () banked
 11606  0007C6  6FD8               	movwf	(_loRa+216)& (0+255),b
 11607                           
 11608                           ; BSR set to: 2
 11609                           ;lorawan.c: 1417: CheckFlags (hdr);
 11610  0007C8  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11611  0007CC  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11612  0007D0  EC5C  F033         	call	_CheckFlags	;wreg free
 11613                           
 11614                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11615  0007D4  0103               	movlb	3	; () banked
 11616  0007D6  EE20 F005          	lfsr	2,5
 11617  0007DA  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11618  0007DC  26D9               	addwf	fsr2l,f,c
 11619  0007DE  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11620  0007E0  22DA               	addwfc	fsr2h,f,c
 11621  0007E2  50DF               	movf	223,w,c
 11622  0007E4  0B0F               	andlw	15
 11623  0007E6  E01B               	bz	l14442
 11624                           
 11625                           ; BSR set to: 3
 11626                           ;lorawan.c: 1420: {
 11627                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11628  0007E8  0E08               	movlw	8
 11629  0007EA  25B2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11630  0007EC  0100               	movlb	0	; () banked
 11631  0007EE  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 11632  0007F0  0E00               	movlw	0
 11633  0007F2  0103               	movlb	3	; () banked
 11634  0007F4  21B3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11635  0007F6  0100               	movlb	0	; () banked
 11636  0007F8  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11637  0007FA  0103               	movlb	3	; () banked
 11638  0007FC  EE20 F005          	lfsr	2,5
 11639  000800  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11640  000802  26D9               	addwf	fsr2l,f,c
 11641  000804  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11642  000806  22DA               	addwfc	fsr2h,f,c
 11643  000808  50DF               	movf	223,w,c
 11644  00080A  0B0F               	andlw	15
 11645  00080C  0100               	movlb	0	; () banked
 11646  00080E  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11647  000810  ECEA  F016         	call	_MacExecuteCommands	;wreg free
 11648  000814  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11649  000818  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11650                           
 11651                           ;lorawan.c: 1422: }
 11652  00081C  D005               	goto	l14444
 11653  00081E                     l14442:
 11654                           
 11655                           ; BSR set to: 3
 11656                           ;lorawan.c: 1423: else
 11657                           ;lorawan.c: 1424: {
 11658                           ;lorawan.c: 1425: buffer = buffer + 8;
 11659  00081E  0E08               	movlw	8
 11660  000820  0101               	movlb	1	; () banked
 11661  000822  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11662  000824  0E00               	movlw	0
 11663  000826  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11664  000828                     l14444:
 11665                           
 11666                           ;lorawan.c: 1426: }
 11667                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11668  000828  0101               	movlb	1	; () banked
 11669  00082A  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11670  00082C  0100               	movlb	0	; () banked
 11671  00082E  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11672  000830  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11673  000832  0103               	movlb	3	; () banked
 11674  000834  EE20 F005          	lfsr	2,5
 11675  000838  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11676  00083A  26D9               	addwf	fsr2l,f,c
 11677  00083C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11678  00083E  22DA               	addwfc	fsr2h,f,c
 11679  000840  50DF               	movf	223,w,c
 11680  000842  0B0F               	andlw	15
 11681  000844  0100               	movlb	0	; () banked
 11682  000846  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11683  000848  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11684  00084A  0E0C               	movlw	12
 11685  00084C  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11686  00084E  0E00               	movlw	0
 11687  000850  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11688  000852  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11689  000854  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11690  000856  E104               	bnz	u16390
 11691  000858  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11692  00085A  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11693  00085C  E101 D09B          	bz	l2171
 11694  000860                     u16390:
 11695                           
 11696                           ; BSR set to: 0
 11697                           ;lorawan.c: 1428: {
 11698                           ;lorawan.c: 1429: fPort = *(buffer++);
 11699  000860  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11700  000864  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11701  000868  50DF               	movf	indf2,w,c
 11702  00086A  0103               	movlb	3	; () banked
 11703  00086C  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11704                           
 11705                           ; BSR set to: 3
 11706  00086E  0101               	movlb	1	; () banked
 11707  000870  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11708  000872  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11709                           
 11710                           ; BSR set to: 1
 11711                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11712  000874  0103               	movlb	3	; () banked
 11713  000876  EE20 F005          	lfsr	2,5
 11714  00087A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11715  00087C  26D9               	addwf	fsr2l,f,c
 11716  00087E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11717  000880  22DA               	addwfc	fsr2h,f,c
 11718  000882  50DF               	movf	223,w,c
 11719  000884  0B0F               	andlw	15
 11720  000886  0100               	movlb	0	; () banked
 11721  000888  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11722  00088A  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11723  00088C  0101               	movlb	1	; () banked
 11724  00088E  5D68               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11725  000890  0FF4               	addlw	244
 11726  000892  0103               	movlb	3	; () banked
 11727  000894  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11728                           
 11729                           ; BSR set to: 3
 11730                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11731  000896  EE20 F005          	lfsr	2,5
 11732  00089A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11733  00089C  26D9               	addwf	fsr2l,f,c
 11734  00089E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11735  0008A0  22DA               	addwfc	fsr2h,f,c
 11736  0008A2  50DF               	movf	223,w,c
 11737  0008A4  0B0F               	andlw	15
 11738  0008A6  0F19               	addlw	25
 11739  0008A8  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11740                           
 11741                           ; BSR set to: 3
 11742                           ;lorawan.c: 1434: if (fPort != 0)
 11743  0008AA  51A0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11744  0008AC  E029               	bz	l14460
 11745                           
 11746                           ; BSR set to: 3
 11747                           ;lorawan.c: 1435: {
 11748                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11749  0008AE  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11750  0008B2  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11751  0008B6  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11752  0008B8  0100               	movlb	0	; () banked
 11753  0008BA  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11754  0008BC  0E01               	movlw	1
 11755  0008BE  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11756  0008C0  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11757  0008C4  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11758  0008C8  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11759  0008CC  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11760  0008D0  0E32               	movlw	low (_loRa+50)
 11761  0008D2  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11762  0008D4  0E02               	movlw	high (_loRa+50)
 11763  0008D6  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11764  0008D8  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11765  0008DC  0EEF               	movlw	low _radioBuffer
 11766  0008DE  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11767  0008E0  0E05               	movlw	high _radioBuffer
 11768  0008E2  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11769  0008E4  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11770  0008E6  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;lorawan.c: 1437: packet = buffer - 1;
 11774  0008EA  0EFF               	movlw	255
 11775  0008EC  0101               	movlb	1	; () banked
 11776  0008EE  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11777  0008F0  0103               	movlb	3	; () banked
 11778  0008F2  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11779  0008F4  0EFF               	movlw	255
 11780  0008F6  0101               	movlb	1	; () banked
 11781  0008F8  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11782  0008FA  0103               	movlb	3	; () banked
 11783  0008FC  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11784                           
 11785                           ;lorawan.c: 1438: }
 11786  0008FE  D04F               	goto	l14470
 11787  000900                     l14460:
 11788                           
 11789                           ; BSR set to: 3
 11790                           ;lorawan.c: 1439: else
 11791                           ;lorawan.c: 1440: {
 11792                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11793  000900  0101               	movlb	1	; () banked
 11794  000902  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11795  000904  0100               	movlb	0	; () banked
 11796  000906  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11797  000908  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11798  00090A  0103               	movlb	3	; () banked
 11799  00090C  EE20 F005          	lfsr	2,5
 11800  000910  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11801  000912  26D9               	addwf	fsr2l,f,c
 11802  000914  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11803  000916  22DA               	addwfc	fsr2h,f,c
 11804  000918  50DF               	movf	223,w,c
 11805  00091A  0B0F               	andlw	15
 11806  00091C  0100               	movlb	0	; () banked
 11807  00091E  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11808  000920  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11809  000922  0E0D               	movlw	13
 11810  000924  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11811  000926  0E00               	movlw	0
 11812  000928  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11813  00092A  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11814  00092C  5DDF               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11815  00092E  51E0               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11816  000930  0A80               	xorlw	128
 11817  000932  6FE1               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11818  000934  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11819  000936  0A80               	xorlw	128
 11820  000938  59E1               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11821  00093A  E22D               	bc	l2171
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;lorawan.c: 1443: {
 11825                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11826  00093C  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11827  000940  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11828  000944  0103               	movlb	3	; () banked
 11829  000946  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11830  000948  0100               	movlb	0	; () banked
 11831  00094A  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11832  00094C  0E01               	movlw	1
 11833  00094E  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11834  000950  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11835  000954  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11836  000958  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11837  00095C  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11838  000960  0E22               	movlw	low (_loRa+34)
 11839  000962  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11840  000964  0E02               	movlw	high (_loRa+34)
 11841  000966  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11842  000968  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11843  00096C  0EEF               	movlw	low _radioBuffer
 11844  00096E  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11845  000970  0E05               	movlw	high _radioBuffer
 11846  000972  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11847  000974  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11848  000976  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11852  00097A  C166  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11853  00097E  C167  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11854  000982  0103               	movlb	3	; () banked
 11855  000984  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11856  000986  0100               	movlb	0	; () banked
 11857  000988  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11858  00098A  ECEA  F016         	call	_MacExecuteCommands	;wreg free
 11859  00098E  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11860  000992  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11861  000996                     l2171:
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;lorawan.c: 1453: else
 11865                           ;lorawan.c: 1454: {
 11866                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11867  000996  0103               	movlb	3	; () banked
 11868  000998  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11869                           
 11870                           ;lorawan.c: 1456: packet = (0);
 11871  00099A  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11872  00099C  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11873  00099E                     l14470:
 11874                           
 11875                           ; BSR set to: 3
 11876                           ;lorawan.c: 1457: }
 11877                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11878  00099E  0E01               	movlw	1
 11879  0009A0  0102               	movlb	2	; () banked
 11880  0009A2  6FD8               	movwf	(_loRa+216)& (0+255),b
 11881                           
 11882                           ; BSR set to: 2
 11883                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11884  0009A4  6BD0               	clrf	(_loRa+208)& (0+255),b
 11885  0009A6  6BD1               	clrf	(_loRa+209)& (0+255),b
 11886                           
 11887                           ; BSR set to: 2
 11888                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11889  0009A8  6BEE               	clrf	(_loRa+238)& (0+255),b
 11890                           
 11891                           ; BSR set to: 2
 11892                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11893  0009AA  9900               	bcf	_loRa& (0+255),4,b
 11894                           
 11895                           ; BSR set to: 2
 11896                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11897  0009AC  8303               	bsf	(_loRa+3)& (0+255),1,b
 11898                           
 11899                           ; BSR set to: 2
 11900                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11901  0009AE  A100               	btfss	_loRa& (0+255),0,b
 11902  0009B0  D04D               	goto	l14514
 11903                           
 11904                           ; BSR set to: 2
 11905                           ;lorawan.c: 1468: {
 11906                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11907  0009B2  0103               	movlb	3	; () banked
 11908  0009B4  EE20 F005          	lfsr	2,5
 11909  0009B8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11910  0009BA  26D9               	addwf	fsr2l,f,c
 11911  0009BC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11912  0009BE  22DA               	addwfc	fsr2h,f,c
 11913  0009C0  AADF               	btfss	indf2,5,c
 11914  0009C2  D041               	goto	l14512
 11915                           
 11916                           ; BSR set to: 3
 11917                           ;lorawan.c: 1470: {
 11918                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11919  0009C4  0102               	movlb	2	; () banked
 11920  0009C6  9100               	bcf	_loRa& (0+255),0,b
 11921                           
 11922                           ; BSR set to: 2
 11923                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11924  0009C8  0EF0               	movlw	-16
 11925  0009CA  1702               	andwf	(_loRa+2)& (0+255),f,b
 11926                           
 11927                           ; BSR set to: 2
 11928                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11929  0009CC  0100               	movlb	0	; () banked
 11930  0009CE  51E8               	movf	_rxPayload& (0+255),w,b
 11931  0009D0  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11932  0009D2  E016               	bz	l14494
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;lorawan.c: 1474: {
 11936                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11937  0009D4  0102               	movlb	2	; () banked
 11938  0009D6  9B00               	bcf	_loRa& (0+255),5,b
 11939                           
 11940                           ; BSR set to: 2
 11941                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11942  0009D8  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11943  0009DC  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11944  0009E0  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11945  0009E4  0E01               	movlw	1
 11946  0009E6  0100               	movlb	0	; () banked
 11947  0009E8  6F6A               	movwf	RxDataDone@status& (0+255),b
 11948  0009EA  D801               	call	u16458
 11949  0009EC  D009               	goto	l14494
 11950  0009EE                     u16458:
 11951  0009EE  0005               	push	
 11952  0009F0  6EFA               	movwf	pclath,c
 11953  0009F2  51E8               	movf	_rxPayload& (0+255),w,b
 11954  0009F4  6EFD               	movwf	tosl,c
 11955  0009F6  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11956  0009F8  6EFE               	movwf	tosh,c
 11957  0009FA  6AFF               	clrf	tosu,c
 11958  0009FC  50FA               	movf	pclath,w,c
 11959  0009FE  0012               	return		;indir
 11960  000A00                     l14494:
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;lorawan.c: 1477: }
 11964                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11965  000A00  0102               	movlb	2	; () banked
 11966  000A02  9303               	bcf	(_loRa+3)& (0+255),1,b
 11967                           
 11968                           ; BSR set to: 2
 11969                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 11970  000A04  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 11971                           
 11972                           ; BSR set to: 2
 11973  000A06  BB00               	btfsc	_loRa& (0+255),5,b
 11974  000A08  D5D6               	goto	l14342
 11975                           
 11976                           ; BSR set to: 2
 11977  000A0A  B300               	btfsc	_loRa& (0+255),1,b
 11978  000A0C  D002               	goto	l14504
 11979                           
 11980                           ; BSR set to: 2
 11981  000A0E  A700               	btfss	_loRa& (0+255),3,b
 11982  000A10  D5D2               	goto	l14342
 11983  000A12                     l14504:
 11984                           
 11985                           ; BSR set to: 2
 11986                           ;lorawan.c: 1480: {
 11987                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 11988  000A12  0E01               	movlw	1
 11989  000A14  0100               	movlb	0	; () banked
 11990  000A16  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 11991  000A18  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 11992  000A1A  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 11993  000A1C  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 11994  000A1E  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 11995  000A20  0102               	movlb	2	; () banked
 11996  000A22  51ED               	movf	(_loRa+237)& (0+255),w,b
 11997  000A24  EC90  F027         	call	_SearchAvailableChannel
 11998  000A28  0900               	iorlw	0
 11999  000A2A  E10A               	bnz	l14510
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;lorawan.c: 1482: {
 12003                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12004  000A2C  0E00               	movlw	0
 12005  000A2E  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12006  000A30  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12007  000A32  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12008  000A34  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12009  000A36  EC0D  F02A         	call	_LORAWAN_Send
 12010  000A3A                     l14508:
 12011                           
 12012                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12013  000A3A  0102               	movlb	2	; () banked
 12014  000A3C  9700               	bcf	_loRa& (0+255),3,b
 12015                           
 12016                           ;lorawan.c: 1485: }
 12017  000A3E  D5BB               	goto	l14342
 12018  000A40                     l14510:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;lorawan.c: 1486: else
 12022                           ;lorawan.c: 1487: {
 12023                           ;lorawan.c: 1489: StartReTxTimer();
 12024  000A40  ECF8  F021         	call	_StartReTxTimer	;wreg free
 12025  000A44  D5B8               	goto	l14342
 12026  000A46                     l14512:
 12027                           
 12028                           ; BSR set to: 3
 12029                           ;lorawan.c: 1494: else
 12030                           ;lorawan.c: 1495: {
 12031                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12032  000A46  ECFF  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12033  000A4A  D5B5               	goto	l14342
 12034  000A4C                     l14514:
 12035                           
 12036                           ; BSR set to: 2
 12037                           ;lorawan.c: 1499: else
 12038                           ;lorawan.c: 1500: {
 12039                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12040  000A4C  0EF0               	movlw	-16
 12041  000A4E  1702               	andwf	(_loRa+2)& (0+255),f,b
 12042                           
 12043                           ; BSR set to: 2
 12044                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12045  000A50  0100               	movlb	0	; () banked
 12046  000A52  51E8               	movf	_rxPayload& (0+255),w,b
 12047  000A54  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12048  000A56  E016               	bz	l14522
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;lorawan.c: 1504: {
 12052                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12053  000A58  0102               	movlb	2	; () banked
 12054  000A5A  9B00               	bcf	_loRa& (0+255),5,b
 12055                           
 12056                           ; BSR set to: 2
 12057                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12058  000A5C  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12059  000A60  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12060  000A64  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12061  000A68  0E01               	movlw	1
 12062  000A6A  0100               	movlb	0	; () banked
 12063  000A6C  6F6A               	movwf	RxDataDone@status& (0+255),b
 12064  000A6E  D801               	call	u16528
 12065  000A70  D009               	goto	l14522
 12066  000A72                     u16528:
 12067  000A72  0005               	push	
 12068  000A74  6EFA               	movwf	pclath,c
 12069  000A76  51E8               	movf	_rxPayload& (0+255),w,b
 12070  000A78  6EFD               	movwf	tosl,c
 12071  000A7A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12072  000A7C  6EFE               	movwf	tosh,c
 12073  000A7E  6AFF               	clrf	tosu,c
 12074  000A80  50FA               	movf	pclath,w,c
 12075  000A82  0012               	return		;indir
 12076  000A84                     l14522:
 12077                           
 12078                           ; BSR set to: 0
 12079                           ;lorawan.c: 1507: }
 12080                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12081  000A84  0102               	movlb	2	; () banked
 12082  000A86  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12083                           
 12084                           ; BSR set to: 2
 12085  000A88  BB00               	btfsc	_loRa& (0+255),5,b
 12086  000A8A  D595               	goto	l14342
 12087                           
 12088                           ; BSR set to: 2
 12089  000A8C  B300               	btfsc	_loRa& (0+255),1,b
 12090  000A8E  D002               	goto	l14530
 12091                           
 12092                           ; BSR set to: 2
 12093  000A90  A700               	btfss	_loRa& (0+255),3,b
 12094  000A92  D591               	goto	l14342
 12095  000A94                     l14530:
 12096                           
 12097                           ; BSR set to: 2
 12098                           ;lorawan.c: 1510: {
 12099                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12100  000A94  0E01               	movlw	1
 12101  000A96  0100               	movlb	0	; () banked
 12102  000A98  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12103  000A9A  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 12104  000A9C  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12105  000A9E  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 12106  000AA0  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12107  000AA2  0102               	movlb	2	; () banked
 12108  000AA4  51ED               	movf	(_loRa+237)& (0+255),w,b
 12109  000AA6  EC90  F027         	call	_SearchAvailableChannel
 12110  000AAA  0900               	iorlw	0
 12111  000AAC  E1C9               	bnz	l14510
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;lorawan.c: 1512: {
 12115                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12116  000AAE  0E00               	movlw	0
 12117  000AB0  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12118  000AB2  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12119  000AB4  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12120  000AB6  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12121  000AB8  EC0D  F02A         	call	_LORAWAN_Send
 12122  000ABC  D7BE               	goto	l14508
 12123  000ABE                     l14548:
 12124                           
 12125                           ; BSR set to: 2
 12126                           ;lorawan.c: 1537: else
 12127                           ;lorawan.c: 1538: {
 12128                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12129  000ABE  0100               	movlb	0	; () banked
 12130  000AC0  51E8               	movf	_rxPayload& (0+255),w,b
 12131  000AC2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12132  000AC4  B4D8               	btfsc	status,2,c
 12133  000AC6  0012               	return	
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;lorawan.c: 1541: {
 12137                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12138  000AC8  EC81  F03C         	call	_RADIO_GetStatus	;wreg free
 12139  000ACC  0100               	movlb	0	; () banked
 12140  000ACE  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 12141  000AD0  B7DD               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12142  000AD2  D011               	goto	l14554
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;lorawan.c: 1543: {
 12146                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12147  000AD4  C166  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12148  000AD8  C167  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12149  000ADC  C168  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12150  000AE0  0E03               	movlw	3
 12151  000AE2  6F6A               	movwf	RxDataDone@status& (0+255),b
 12152  000AE4  0005               	push	
 12153  000AE6  6EFA               	movwf	pclath,c
 12154  000AE8  51E8               	movf	_rxPayload& (0+255),w,b
 12155  000AEA  6EFD               	movwf	tosl,c
 12156  000AEC  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12157  000AEE  6EFE               	movwf	tosh,c
 12158  000AF0  6AFF               	clrf	tosu,c
 12159  000AF2  50FA               	movf	pclath,w,c
 12160  000AF4  0012               	return		;indir
 12161  000AF6                     l14554:
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;lorawan.c: 1546: else
 12165                           ;lorawan.c: 1547: {
 12166                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12167  000AF6  C166  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12168  000AFA  C167  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12169  000AFE  C168  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12170  000B02  0E02               	movlw	2
 12171  000B04  6F6A               	movwf	RxDataDone@status& (0+255),b
 12172  000B06  0005               	push	
 12173  000B08  6EFA               	movwf	pclath,c
 12174  000B0A  51E8               	movf	_rxPayload& (0+255),w,b
 12175  000B0C  6EFD               	movwf	tosl,c
 12176  000B0E  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12177  000B10  6EFE               	movwf	tosh,c
 12178  000B12  6AFF               	clrf	tosu,c
 12179  000B14  50FA               	movf	pclath,w,c
 12180  000B16  0012               	return		;indir
 12181  000B18                     __end_of_LORAWAN_RxDone:
 12182                           	opt stack 0
 12183                           tosu	equ	0xFFF
 12184                           tosh	equ	0xFFE
 12185                           tosl	equ	0xFFD
 12186                           pclath	equ	0xFFA
 12187                           tblptru	equ	0xFF8
 12188                           tblptrh	equ	0xFF7
 12189                           tblptrl	equ	0xFF6
 12190                           tablat	equ	0xFF5
 12191                           prodh	equ	0xFF4
 12192                           prodl	equ	0xFF3
 12193                           intcon	equ	0xFF2
 12194                           intcon2	equ	0xFF1
 12195                           intcon3	equ	0xFF0
 12196                           postinc0	equ	0xFEE
 12197                           wreg	equ	0xFE8
 12198                           postinc1	equ	0xFE6
 12199                           postdec1	equ	0xFE5
 12200                           plusw1	equ	0xFE3
 12201                           fsr1h	equ	0xFE2
 12202                           fsr1l	equ	0xFE1
 12203                           indf2	equ	0xFDF
 12204                           postinc2	equ	0xFDE
 12205                           postdec2	equ	0xFDD
 12206                           fsr2h	equ	0xFDA
 12207                           fsr2l	equ	0xFD9
 12208                           status	equ	0xFD8
 12209                           
 12210 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12211 ;; Defined at:
 12212 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;		None
 12215 ;; Auto vars:     Size  Location     Type
 12216 ;;		None
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  1    wreg      void 
 12219 ;; Registers used:
 12220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12221 ;; Tracked objects:
 12222 ;;		On entry : C/0
 12223 ;;		On exit  : F/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;Total ram usage:        4 bytes
 12231 ;; Hardware stack levels used:    1
 12232 ;; Hardware stack levels required when called:   11
 12233 ;; This function calls:
 12234 ;;		_SwTimerSetTimeout
 12235 ;;		_SwTimerStart
 12236 ;;		___lldiv
 12237 ;; This function is called by:
 12238 ;;		_AckRetransmissionCallback
 12239 ;;		_LORAWAN_RxDone
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243                           	psect	text63
 12244  0061FE                     __ptext63:
 12245                           	opt stack 0
 12246  0061FE                     _UpdateRetransmissionAckTimeoutState:
 12247                           	opt stack 16
 12248                           
 12249                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12250                           
 12251                           ;incstack = 0
 12252  0061FE  0102               	movlb	2	; () banked
 12253  006200  5102               	movf	(_loRa+2)& (0+255),w,b
 12254  006202  0BF0               	andlw	-16
 12255  006204  0906               	iorlw	6
 12256  006206  6F02               	movwf	(_loRa+2)& (0+255),b
 12257                           
 12258                           ; BSR set to: 2
 12259                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12260  006208  51A0               	movf	(_loRa+160)& (0+255),w,b
 12261  00620A  0100               	movlb	0	; () banked
 12262  00620C  6F96               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12263  00620E  0102               	movlb	2	; () banked
 12264  006210  51A1               	movf	(_loRa+161)& (0+255),w,b
 12265  006212  0100               	movlb	0	; () banked
 12266  006214  6F97               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12267  006216  6B98               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12268  006218  6B99               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12269  00621A  0E0C               	movlw	12
 12270  00621C                     u15645:
 12271  00621C  90D8               	bcf	status,0,c
 12272  00621E  3796               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12273  006220  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12274  006222  3798               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12275  006224  3799               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12276  006226  2EE8               	decfsz	wreg,f,c
 12277  006228  D7F9               	goto	u15645
 12278  00622A  C096  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12279  00622E  C097  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12280  006232  C098  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12281  006236  C099  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12282  00623A  0E7D               	movlw	125
 12283  00623C  6F68               	movwf	___lldiv@divisor& (0+255),b
 12284  00623E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12285  006240  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12286  006242  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12287  006244  EC1A  F030         	call	___lldiv	;wreg free
 12288  006248  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12289  00624C  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12290  006250  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12291  006254  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12292  006258  0102               	movlb	2	; () banked
 12293  00625A  51E8               	movf	(_loRa+232)& (0+255),w,b
 12294  00625C  EC75  F036         	call	_SwTimerSetTimeout
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12298  006260  0102               	movlb	2	; () banked
 12299  006262  51E8               	movf	(_loRa+232)& (0+255),w,b
 12300  006264  EF58  F02E         	goto	_SwTimerStart
 12301  006268                     __end_of_UpdateRetransmissionAckTimeoutState:
 12302                           	opt stack 0
 12303                           tosu	equ	0xFFF
 12304                           tosh	equ	0xFFE
 12305                           tosl	equ	0xFFD
 12306                           pclath	equ	0xFFA
 12307                           tblptru	equ	0xFF8
 12308                           tblptrh	equ	0xFF7
 12309                           tblptrl	equ	0xFF6
 12310                           tablat	equ	0xFF5
 12311                           prodh	equ	0xFF4
 12312                           prodl	equ	0xFF3
 12313                           intcon	equ	0xFF2
 12314                           intcon2	equ	0xFF1
 12315                           intcon3	equ	0xFF0
 12316                           postinc0	equ	0xFEE
 12317                           wreg	equ	0xFE8
 12318                           postinc1	equ	0xFE6
 12319                           postdec1	equ	0xFE5
 12320                           plusw1	equ	0xFE3
 12321                           fsr1h	equ	0xFE2
 12322                           fsr1l	equ	0xFE1
 12323                           indf2	equ	0xFDF
 12324                           postinc2	equ	0xFDE
 12325                           postdec2	equ	0xFDD
 12326                           fsr2h	equ	0xFDA
 12327                           fsr2l	equ	0xFD9
 12328                           status	equ	0xFD8
 12329                           
 12330 ;; *************** function _UpdateDLSettings *****************
 12331 ;; Defined at:
 12332 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;  dlRx2Dr         1    wreg     unsigned char 
 12335 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  1    wreg      void 
 12340 ;; Registers used:
 12341 ;;		wreg, status,2, status,0
 12342 ;; Tracked objects:
 12343 ;;		On entry : F/3
 12344 ;;		On exit  : F/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12347 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;Total ram usage:        2 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    7
 12354 ;; This function calls:
 12355 ;;		Nothing
 12356 ;; This function is called by:
 12357 ;;		_LORAWAN_RxDone
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           	psect	text64
 12362  007616                     __ptext64:
 12363                           	opt stack 0
 12364  007616                     _UpdateDLSettings:
 12365                           	opt stack 19
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;incstack = 0
 12369                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12370  007616  0100               	movlb	0	; () banked
 12371  007618  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12372                           
 12373                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12374  00761A  0E08               	movlw	8
 12375  00761C  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12376  00761E  D002               	goto	l13894
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;lorawan_eu.c: 891: {
 12380                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12381  007620  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12382  007624                     l13894:
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;lorawan_eu.c: 893: }
 12386                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12387  007624  0E06               	movlw	6
 12388  007626  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12389  007628  0C06               	retlw	6
 12390                           
 12391                           ; BSR set to: 0
 12392                           ;lorawan_eu.c: 896: {
 12393                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12394  00762A  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12395                           
 12396                           ; BSR set to: 0
 12397  00762E  0C06               	retlw	6	;funcret
 12398  007630                     __end_of_UpdateDLSettings:
 12399                           	opt stack 0
 12400                           tosu	equ	0xFFF
 12401                           tosh	equ	0xFFE
 12402                           tosl	equ	0xFFD
 12403                           pclath	equ	0xFFA
 12404                           tblptru	equ	0xFF8
 12405                           tblptrh	equ	0xFF7
 12406                           tblptrl	equ	0xFF6
 12407                           tablat	equ	0xFF5
 12408                           prodh	equ	0xFF4
 12409                           prodl	equ	0xFF3
 12410                           intcon	equ	0xFF2
 12411                           intcon2	equ	0xFF1
 12412                           intcon3	equ	0xFF0
 12413                           postinc0	equ	0xFEE
 12414                           wreg	equ	0xFE8
 12415                           postinc1	equ	0xFE6
 12416                           postdec1	equ	0xFE5
 12417                           plusw1	equ	0xFE3
 12418                           fsr1h	equ	0xFE2
 12419                           fsr1l	equ	0xFE1
 12420                           indf2	equ	0xFDF
 12421                           postinc2	equ	0xFDE
 12422                           postdec2	equ	0xFDD
 12423                           fsr2h	equ	0xFDA
 12424                           fsr2l	equ	0xFD9
 12425                           status	equ	0xFD8
 12426                           
 12427 ;; *************** function _UpdateCfList *****************
 12428 ;; Defined at:
 12429 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;  bufferLength    1    wreg     unsigned char 
 12432 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12433 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12436 ;;  frequency       4   21[BANK0 ] unsigned long 
 12437 ;;  i               1   26[BANK0 ] unsigned char 
 12438 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12443 ;; Tracked objects:
 12444 ;;		On entry : F/1
 12445 ;;		On exit  : D/0
 12446 ;;		Unchanged: 0/0
 12447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12449 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;Total ram usage:       11 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    9
 12455 ;; This function calls:
 12456 ;;		_LORAWAN_SetChannelIdStatus
 12457 ;;		_ValidateFrequency
 12458 ;;		___lmul
 12459 ;;		_memcpy
 12460 ;; This function is called by:
 12461 ;;		_LORAWAN_RxDone
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           	psect	text65
 12466  0031B2                     __ptext65:
 12467                           	opt stack 0
 12468  0031B2                     _UpdateCfList:
 12469                           	opt stack 17
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;incstack = 0
 12473                           ;UpdateCfList@bufferLength stored from wreg
 12474  0031B2  0100               	movlb	0	; () banked
 12475  0031B4  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12476                           
 12477                           ;lorawan_eu.c: 826: uint8_t i;
 12478                           ;lorawan_eu.c: 827: uint32_t frequency;
 12479                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12480                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12481  0031B6  0E21               	movlw	33
 12482  0031B8  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12483  0031BA  A4D8               	btfss	status,2,c
 12484  0031BC  0012               	return	
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;lorawan_eu.c: 831: {
 12488                           ;lorawan_eu.c: 833: channelIndex = 3;
 12489  0031BE  0E03               	movlw	3
 12490  0031C0  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12491                           
 12492                           ; BSR set to: 0
 12493                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12494  0031C2  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12495  0031C4                     l1151:
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;lorawan_eu.c: 836: {
 12499                           ;lorawan_eu.c: 837: frequency = 0;
 12500  0031C4  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12501  0031C6  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12502  0031C8  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12503  0031CA  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12507  0031CC  0E75               	movlw	low UpdateCfList@frequency
 12508  0031CE  6F64               	movwf	memcpy@d1& (0+255),b
 12509  0031D0  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12510  0031D2  517A               	movf	UpdateCfList@i& (0+255),w,b
 12511  0031D4  0D03               	mullw	3
 12512  0031D6  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12513  0031DA  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12514  0031DE  50F3               	movf	prodl,w,c
 12515  0031E0  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12516  0031E2  50F4               	movf	prodh,w,c
 12517  0031E4  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12518  0031E6  0E0D               	movlw	13
 12519  0031E8  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12520  0031EA  0E00               	movlw	0
 12521  0031EC  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12522  0031EE  5172               	movf	??_UpdateCfList& (0+255),w,b
 12523  0031F0  6F66               	movwf	memcpy@s1& (0+255),b
 12524  0031F2  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12525  0031F4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12526  0031F6  0E03               	movlw	3
 12527  0031F8  6F68               	movwf	memcpy@n& (0+255),b
 12528  0031FA  EC14  F034         	call	_memcpy	;wreg free
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;lorawan_eu.c: 839: frequency *= 100;
 12532  0031FE  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12533  003202  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12534  003206  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12535  00320A  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12536  00320E  0E64               	movlw	100
 12537  003210  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12538  003212  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12539  003214  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12540  003216  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12541  003218  EC9C  F02E         	call	___lmul	;wreg free
 12542  00321C  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12543  003220  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12544  003224  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12545  003228  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;lorawan_eu.c: 840: if (frequency != 0)
 12549  00322C  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12550  00322E  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12551  003230  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12552  003232  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12553  003234  E101 D094          	bz	l13884
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;lorawan_eu.c: 841: {
 12557                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12558  003238  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12559  00323C  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12560  003240  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12561  003244  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12562  003248  ECBA  F033         	call	_ValidateFrequency	;wreg free
 12563  00324C  0900               	iorlw	0
 12564  00324E  E001 D08C          	bnz	l13886
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;lorawan_eu.c: 843: {
 12568                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12569  003252  517A               	movf	UpdateCfList@i& (0+255),w,b
 12570  003254  0D0E               	mullw	14
 12571  003256  0E00               	movlw	low _Channels
 12572  003258  6F72               	movwf	??_UpdateCfList& (0+255),b
 12573  00325A  0E04               	movlw	high _Channels
 12574  00325C  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12575  00325E  50F3               	movf	prodl,w,c
 12576  003260  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12577  003262  50F4               	movf	prodh,w,c
 12578  003264  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12579  003266  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12580  003268  0D0E               	mullw	14
 12581  00326A  50F3               	movf	prodl,w,c
 12582  00326C  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12583  00326E  6ED9               	movwf	fsr2l,c
 12584  003270  50F4               	movf	prodh,w,c
 12585  003272  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12586  003274  6EDA               	movwf	fsr2h,c
 12587  003276  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 12588  00327A  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12589  00327E  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12590  003282  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12591                           
 12592                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12593  003286  517A               	movf	UpdateCfList@i& (0+255),w,b
 12594  003288  0D0E               	mullw	14
 12595  00328A  0E00               	movlw	low _Channels
 12596  00328C  6F72               	movwf	??_UpdateCfList& (0+255),b
 12597  00328E  0E04               	movlw	high _Channels
 12598  003290  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12599  003292  0E05               	movlw	5
 12600  003294  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12601  003296  0E00               	movlw	0
 12602  003298  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12603  00329A  50F3               	movf	prodl,w,c
 12604  00329C  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12605  00329E  50F4               	movf	prodh,w,c
 12606  0032A0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12607  0032A2  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12608  0032A4  0D0E               	mullw	14
 12609  0032A6  50F3               	movf	prodl,w,c
 12610  0032A8  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12611  0032AA  6ED9               	movwf	fsr2l,c
 12612  0032AC  50F4               	movf	prodh,w,c
 12613  0032AE  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12614  0032B0  6EDA               	movwf	fsr2h,c
 12615  0032B2  50DF               	movf	223,w,c
 12616  0032B4  0B0F               	andlw	-241
 12617  0032B6  0950               	iorlw	80
 12618  0032B8  6EDF               	movwf	223,c
 12619                           
 12620                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12621  0032BA  0100               	movlb	0	; () banked
 12622  0032BC  517A               	movf	UpdateCfList@i& (0+255),w,b
 12623  0032BE  0D0E               	mullw	14
 12624  0032C0  0E00               	movlw	low _Channels
 12625  0032C2  6F72               	movwf	??_UpdateCfList& (0+255),b
 12626  0032C4  0E04               	movlw	high _Channels
 12627  0032C6  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12628  0032C8  0E05               	movlw	5
 12629  0032CA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12630  0032CC  0E00               	movlw	0
 12631  0032CE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12632  0032D0  50F3               	movf	prodl,w,c
 12633  0032D2  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12634  0032D4  50F4               	movf	prodh,w,c
 12635  0032D6  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12636  0032D8  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12637  0032DA  0D0E               	mullw	14
 12638  0032DC  50F3               	movf	prodl,w,c
 12639  0032DE  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12640  0032E0  6ED9               	movwf	fsr2l,c
 12641  0032E2  50F4               	movf	prodh,w,c
 12642  0032E4  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12643  0032E6  6EDA               	movwf	fsr2h,c
 12644  0032E8  0EF0               	movlw	-16
 12645  0032EA  16DF               	andwf	223,f,c
 12646                           
 12647                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12648  0032EC  517A               	movf	UpdateCfList@i& (0+255),w,b
 12649  0032EE  0D0E               	mullw	14
 12650  0032F0  0E00               	movlw	low _Channels
 12651  0032F2  6F72               	movwf	??_UpdateCfList& (0+255),b
 12652  0032F4  0E04               	movlw	high _Channels
 12653  0032F6  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12654  0032F8  0E06               	movlw	6
 12655  0032FA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12656  0032FC  0E00               	movlw	0
 12657  0032FE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12658  003300  50F3               	movf	prodl,w,c
 12659  003302  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12660  003304  50F4               	movf	prodh,w,c
 12661  003306  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12662  003308  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12663  00330A  0D0E               	mullw	14
 12664  00330C  50F3               	movf	prodl,w,c
 12665  00330E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12666  003310  6ED9               	movwf	fsr2l,c
 12667  003312  50F4               	movf	prodh,w,c
 12668  003314  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12669  003316  6EDA               	movwf	fsr2h,c
 12670  003318  0EE7               	movlw	231
 12671  00331A  6EDE               	movwf	postinc2,c
 12672  00331C  0E03               	movlw	3
 12673  00331E  6EDD               	movwf	postdec2,c
 12674                           
 12675                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12676  003320  517A               	movf	UpdateCfList@i& (0+255),w,b
 12677  003322  0D0E               	mullw	14
 12678  003324  0E00               	movlw	low _Channels
 12679  003326  6F72               	movwf	??_UpdateCfList& (0+255),b
 12680  003328  0E04               	movlw	high _Channels
 12681  00332A  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12682  00332C  0E0D               	movlw	13
 12683  00332E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12684  003330  0E00               	movlw	0
 12685  003332  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12686  003334  50F3               	movf	prodl,w,c
 12687  003336  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12688  003338  50F4               	movf	prodh,w,c
 12689  00333A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12690  00333C  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12691  00333E  0D0E               	mullw	14
 12692  003340  50F3               	movf	prodl,w,c
 12693  003342  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12694  003344  6ED9               	movwf	fsr2l,c
 12695  003346  50F4               	movf	prodh,w,c
 12696  003348  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12697  00334A  6EDA               	movwf	fsr2h,c
 12698  00334C  68DF               	setf	indf2,c
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12702  00334E  0E01               	movlw	1
 12703  003350  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12704  003352  517A               	movf	UpdateCfList@i& (0+255),w,b
 12705  003354  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12706  003356  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 12707                           
 12708                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12709  00335A  0102               	movlb	2	; () banked
 12710  00335C  8703               	bsf	(_loRa+3)& (0+255),3,b
 12711  00335E  D005               	goto	l13886
 12712  003360                     l13884:
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;lorawan_eu.c: 853: else
 12716                           ;lorawan_eu.c: 854: {
 12717                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12718  003360  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12719  003362  517A               	movf	UpdateCfList@i& (0+255),w,b
 12720  003364  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12721  003366  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 12722  00336A                     l13886:
 12723  00336A  0100               	movlb	0	; () banked
 12724  00336C  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 12725                           
 12726                           ; BSR set to: 0
 12727  00336E  0E04               	movlw	4
 12728  003370  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 12729  003372  D728               	goto	l1151
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;lorawan_eu.c: 856: }
 12733                           ;lorawan_eu.c: 857: }
 12734                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12735  003374  0102               	movlb	2	; () banked
 12736  003376  8703               	bsf	(_loRa+3)& (0+255),3,b
 12737  003378  0C04               	retlw	4	;funcret
 12738  00337A                     __end_of_UpdateCfList:
 12739                           	opt stack 0
 12740                           tosu	equ	0xFFF
 12741                           tosh	equ	0xFFE
 12742                           tosl	equ	0xFFD
 12743                           pclath	equ	0xFFA
 12744                           tblptru	equ	0xFF8
 12745                           tblptrh	equ	0xFF7
 12746                           tblptrl	equ	0xFF6
 12747                           tablat	equ	0xFF5
 12748                           prodh	equ	0xFF4
 12749                           prodl	equ	0xFF3
 12750                           intcon	equ	0xFF2
 12751                           intcon2	equ	0xFF1
 12752                           intcon3	equ	0xFF0
 12753                           postinc0	equ	0xFEE
 12754                           wreg	equ	0xFE8
 12755                           postinc1	equ	0xFE6
 12756                           postdec1	equ	0xFE5
 12757                           plusw1	equ	0xFE3
 12758                           fsr1h	equ	0xFE2
 12759                           fsr1l	equ	0xFE1
 12760                           indf2	equ	0xFDF
 12761                           postinc2	equ	0xFDE
 12762                           postdec2	equ	0xFDD
 12763                           fsr2h	equ	0xFDA
 12764                           fsr2l	equ	0xFD9
 12765                           status	equ	0xFD8
 12766                           
 12767 ;; *************** function _StartReTxTimer *****************
 12768 ;; Defined at:
 12769 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;		None
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;  minim           4   58[BANK0 ] unsigned long 
 12774 ;;  i               1   62[BANK0 ] unsigned char 
 12775 ;; Return value:  Size  Location     Type
 12776 ;;                  1    wreg      void 
 12777 ;; Registers used:
 12778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12779 ;; Tracked objects:
 12780 ;;		On entry : E/0
 12781 ;;		On exit  : F/0
 12782 ;;		Unchanged: 0/0
 12783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12785 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12786 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12787 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12788 ;;Total ram usage:        9 bytes
 12789 ;; Hardware stack levels used:    1
 12790 ;; Hardware stack levels required when called:   11
 12791 ;; This function calls:
 12792 ;;		_SwTimerSetTimeout
 12793 ;;		_SwTimerStart
 12794 ;;		___lldiv
 12795 ;; This function is called by:
 12796 ;;		_LORAWAN_RxDone
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           	psect	text66
 12801  0043F0                     __ptext66:
 12802                           	opt stack 0
 12803  0043F0                     _StartReTxTimer:
 12804                           	opt stack 15
 12805                           
 12806                           ;lorawan_eu.c: 904: uint8_t i;
 12807                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12808                           
 12809                           ;incstack = 0
 12810  0043F0  0100               	movlb	0	; () banked
 12811  0043F2  699A               	setf	StartReTxTimer@minim& (0+255),b
 12812  0043F4  699B               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12813  0043F6  699C               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12814  0043F8  699D               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12815                           
 12816                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12817  0043FA  6B9E               	clrf	StartReTxTimer@i& (0+255),b
 12818  0043FC  D05B               	goto	l13914
 12819  0043FE                     l13900:
 12820                           
 12821                           ; BSR set to: 2
 12822                           ;lorawan_eu.c: 908: {
 12823                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12824  0043FE  0100               	movlb	0	; () banked
 12825  004400  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12826  004402  0D0E               	mullw	14
 12827  004404  0E04               	movlw	low (_Channels+4)
 12828  004406  24F3               	addwf	prodl,w,c
 12829  004408  6ED9               	movwf	fsr2l,c
 12830  00440A  0E04               	movlw	high (_Channels+4)
 12831  00440C  20F4               	addwfc	prodh,w,c
 12832  00440E  6EDA               	movwf	fsr2h,c
 12833  004410  04DE               	decf	postinc2,w,c
 12834  004412  E14E               	bnz	l13912
 12835                           
 12836                           ; BSR set to: 0
 12837  004414  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12838  004416  0D0E               	mullw	14
 12839  004418  0E08               	movlw	low (_Channels+8)
 12840  00441A  24F3               	addwf	prodl,w,c
 12841  00441C  6ED9               	movwf	fsr2l,c
 12842  00441E  0E04               	movlw	high (_Channels+8)
 12843  004420  20F4               	addwfc	prodh,w,c
 12844  004422  6EDA               	movwf	fsr2h,c
 12845  004424  50DE               	movf	postinc2,w,c
 12846  004426  10DE               	iorwf	postinc2,w,c
 12847  004428  10DE               	iorwf	postinc2,w,c
 12848  00442A  10DE               	iorwf	postinc2,w,c
 12849  00442C  E041               	bz	l13912
 12850                           
 12851                           ; BSR set to: 0
 12852  00442E  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12853  004430  0D0E               	mullw	14
 12854  004432  0E08               	movlw	low (_Channels+8)
 12855  004434  24F3               	addwf	prodl,w,c
 12856  004436  6ED9               	movwf	fsr2l,c
 12857  004438  0E04               	movlw	high (_Channels+8)
 12858  00443A  20F4               	addwfc	prodh,w,c
 12859  00443C  6EDA               	movwf	fsr2h,c
 12860  00443E  50DE               	movf	postinc2,w,c
 12861  004440  5D9A               	subwf	StartReTxTimer@minim& (0+255),w,b
 12862  004442  50DE               	movf	postinc2,w,c
 12863  004444  599B               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12864  004446  50DE               	movf	postinc2,w,c
 12865  004448  599C               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12866  00444A  50DE               	movf	postinc2,w,c
 12867  00444C  599D               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12868  00444E  E330               	bnc	l13912
 12869                           
 12870                           ; BSR set to: 0
 12871  004450  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12872  004452  0D0E               	mullw	14
 12873  004454  0E05               	movlw	low (_Channels+5)
 12874  004456  24F3               	addwf	prodl,w,c
 12875  004458  6ED9               	movwf	fsr2l,c
 12876  00445A  0E04               	movlw	high (_Channels+5)
 12877  00445C  20F4               	addwfc	prodh,w,c
 12878  00445E  6EDA               	movwf	fsr2h,c
 12879  004460  50DF               	movf	223,w,c
 12880  004462  0B0F               	andlw	15
 12881  004464  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12882  004466  5196               	movf	??_StartReTxTimer& (0+255),w,b
 12883  004468  0102               	movlb	2	; () banked
 12884  00446A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12885  00446C  E321               	bnc	l13912
 12886                           
 12887                           ; BSR set to: 2
 12888  00446E  0100               	movlb	0	; () banked
 12889  004470  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12890  004472  0D0E               	mullw	14
 12891  004474  0E05               	movlw	low (_Channels+5)
 12892  004476  24F3               	addwf	prodl,w,c
 12893  004478  6ED9               	movwf	fsr2l,c
 12894  00447A  0E04               	movlw	high (_Channels+5)
 12895  00447C  20F4               	addwfc	prodh,w,c
 12896  00447E  6EDA               	movwf	fsr2h,c
 12897  004480  38DF               	swapf	223,w,c
 12898  004482  0B0F               	andlw	15
 12899  004484  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12900  004486  0102               	movlb	2	; () banked
 12901  004488  51DF               	movf	(_loRa+223)& (0+255),w,b
 12902  00448A  0100               	movlb	0	; () banked
 12903  00448C  5D96               	subwf	??_StartReTxTimer& (0+255),w,b
 12904  00448E  E310               	bnc	l13912
 12905                           
 12906                           ; BSR set to: 0
 12907                           ;lorawan_eu.c: 910: {
 12908                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12909  004490  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12910  004492  0D0E               	mullw	14
 12911  004494  0E08               	movlw	low (_Channels+8)
 12912  004496  24F3               	addwf	prodl,w,c
 12913  004498  6ED9               	movwf	fsr2l,c
 12914  00449A  0E04               	movlw	high (_Channels+8)
 12915  00449C  20F4               	addwfc	prodh,w,c
 12916  00449E  6EDA               	movwf	fsr2h,c
 12917  0044A0  CFDE F09A          	movff	postinc2,StartReTxTimer@minim
 12918  0044A4  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+1
 12919  0044A8  CFDE F09C          	movff	postinc2,StartReTxTimer@minim+2
 12920  0044AC  CFDE F09D          	movff	postinc2,StartReTxTimer@minim+3
 12921  0044B0                     l13912:
 12922  0044B0  0100               	movlb	0	; () banked
 12923  0044B2  2B9E               	incf	StartReTxTimer@i& (0+255),f,b
 12924  0044B4                     l13914:
 12925                           
 12926                           ; BSR set to: 0
 12927  0044B4  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12928  0044B6  0102               	movlb	2	; () banked
 12929  0044B8  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12930  0044BA  E2A1               	bc	l13900
 12931                           
 12932                           ; BSR set to: 2
 12933                           ;lorawan_eu.c: 912: }
 12934                           ;lorawan_eu.c: 913: }
 12935                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12936  0044BC  5102               	movf	(_loRa+2)& (0+255),w,b
 12937  0044BE  0BF0               	andlw	-16
 12938  0044C0  0906               	iorlw	6
 12939  0044C2  6F02               	movwf	(_loRa+2)& (0+255),b
 12940                           
 12941                           ; BSR set to: 2
 12942                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12943  0044C4  C09A  F096         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12944  0044C8  C09B  F097         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12945  0044CC  C09C  F098         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12946  0044D0  C09D  F099         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12947  0044D4  0E0C               	movlw	12
 12948  0044D6                     u15505:
 12949  0044D6  90D8               	bcf	status,0,c
 12950  0044D8  0100               	movlb	0	; () banked
 12951  0044DA  3796               	rlcf	??_StartReTxTimer& (0+255),f,b
 12952  0044DC  3797               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12953  0044DE  3798               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12954  0044E0  3799               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12955  0044E2  2EE8               	decfsz	wreg,f,c
 12956  0044E4  D7F8               	goto	u15505
 12957  0044E6  C096  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 12958  0044EA  C097  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12959  0044EE  C098  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12960  0044F2  C099  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12961  0044F6  0E7D               	movlw	125
 12962  0044F8  6F68               	movwf	___lldiv@divisor& (0+255),b
 12963  0044FA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12964  0044FC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12965  0044FE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12966  004500  EC1A  F030         	call	___lldiv	;wreg free
 12967  004504  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12968  004508  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12969  00450C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12970  004510  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12971  004514  0102               	movlb	2	; () banked
 12972  004516  51E6               	movf	(_loRa+230)& (0+255),w,b
 12973  004518  EC75  F036         	call	_SwTimerSetTimeout
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 12977  00451C  0102               	movlb	2	; () banked
 12978  00451E  51E6               	movf	(_loRa+230)& (0+255),w,b
 12979  004520  EF58  F02E         	goto	_SwTimerStart
 12980  004524                     __end_of_StartReTxTimer:
 12981                           	opt stack 0
 12982                           tosu	equ	0xFFF
 12983                           tosh	equ	0xFFE
 12984                           tosl	equ	0xFFD
 12985                           pclath	equ	0xFFA
 12986                           tblptru	equ	0xFF8
 12987                           tblptrh	equ	0xFF7
 12988                           tblptrl	equ	0xFF6
 12989                           tablat	equ	0xFF5
 12990                           prodh	equ	0xFF4
 12991                           prodl	equ	0xFF3
 12992                           intcon	equ	0xFF2
 12993                           intcon2	equ	0xFF1
 12994                           intcon3	equ	0xFF0
 12995                           postinc0	equ	0xFEE
 12996                           wreg	equ	0xFE8
 12997                           postinc1	equ	0xFE6
 12998                           postdec1	equ	0xFE5
 12999                           plusw1	equ	0xFE3
 13000                           fsr1h	equ	0xFE2
 13001                           fsr1l	equ	0xFE1
 13002                           indf2	equ	0xFDF
 13003                           postinc2	equ	0xFDE
 13004                           postdec2	equ	0xFDD
 13005                           fsr2h	equ	0xFDA
 13006                           fsr2l	equ	0xFD9
 13007                           status	equ	0xFD8
 13008                           
 13009 ;; *************** function _SetReceptionNotOkState *****************
 13010 ;; Defined at:
 13011 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;		None
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;		None
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  1    wreg      void 
 13018 ;; Registers used:
 13019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13020 ;; Tracked objects:
 13021 ;;		On entry : E/2
 13022 ;;		On exit  : D/0
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13029 ;;Total ram usage:        0 bytes
 13030 ;; Hardware stack levels used:    1
 13031 ;; Hardware stack levels required when called:   14
 13032 ;; This function calls:
 13033 ;;		_LORAWAN_EnterContinuousReceive
 13034 ;;		_RxDataDone
 13035 ;; This function is called by:
 13036 ;;		_LORAWAN_RxDone
 13037 ;; This function uses a non-reentrant model
 13038 ;;
 13039                           
 13040                           	psect	text67
 13041  006338                     __ptext67:
 13042                           	opt stack 0
 13043  006338                     _SetReceptionNotOkState:
 13044                           	opt stack 12
 13045                           
 13046                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;incstack = 0
 13050  006338  0102               	movlb	2	; () banked
 13051  00633A  5102               	movf	(_loRa+2)& (0+255),w,b
 13052  00633C  0B0F               	andlw	15
 13053  00633E  0A05               	xorlw	5
 13054  006340  E006               	bz	l2307
 13055                           
 13056                           ; BSR set to: 2
 13057  006342  5102               	movf	(_loRa+2)& (0+255),w,b
 13058  006344  0B0F               	andlw	15
 13059  006346  0A03               	xorlw	3
 13060  006348  E120               	bnz	l14078
 13061                           
 13062                           ; BSR set to: 2
 13063  00634A  51F1               	movf	(_loRa+241)& (0+255),w,b
 13064  00634C  E01E               	bz	l14078
 13065  00634E                     l2307:
 13066                           
 13067                           ; BSR set to: 2
 13068                           ;lorawan.c: 2000: {
 13069                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13070  00634E  9100               	bcf	_loRa& (0+255),0,b
 13071                           
 13072                           ; BSR set to: 2
 13073                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13074  006350  0EF0               	movlw	-16
 13075  006352  1702               	andwf	(_loRa+2)& (0+255),f,b
 13076                           
 13077                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13078  006354  5112               	movf	(_loRa+18)& (0+255),w,b
 13079  006356  E117               	bnz	l14076
 13080                           
 13081                           ; BSR set to: 2
 13082  006358  0100               	movlb	0	; () banked
 13083  00635A  51E8               	movf	_rxPayload& (0+255),w,b
 13084  00635C  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 13085  00635E  E013               	bz	l14076
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;lorawan.c: 2005: {
 13089                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13090  006360  0102               	movlb	2	; () banked
 13091  006362  9B00               	bcf	_loRa& (0+255),5,b
 13092                           
 13093                           ; BSR set to: 2
 13094                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13095  006364  0E00               	movlw	0
 13096  006366  0100               	movlb	0	; () banked
 13097  006368  6B67               	clrf	RxDataDone@pData& (0+255),b
 13098  00636A  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 13099  00636C  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 13100  00636E  6B6A               	clrf	RxDataDone@status& (0+255),b
 13101  006370  D801               	call	u15828
 13102  006372  D009               	goto	l14076
 13103  006374                     u15828:
 13104  006374  0005               	push	
 13105  006376  6EFA               	movwf	pclath,c
 13106  006378  51E8               	movf	_rxPayload& (0+255),w,b
 13107  00637A  6EFD               	movwf	tosl,c
 13108  00637C  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 13109  00637E  6EFE               	movwf	tosh,c
 13110  006380  6AFF               	clrf	tosu,c
 13111  006382  50FA               	movf	pclath,w,c
 13112  006384  0012               	return		;indir
 13113  006386                     l14076:
 13114                           
 13115                           ;lorawan.c: 2008: }
 13116                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13117  006386  0102               	movlb	2	; () banked
 13118  006388  9303               	bcf	(_loRa+3)& (0+255),1,b
 13119  00638A                     l14078:
 13120                           
 13121                           ; BSR set to: 2
 13122                           ;lorawan.c: 2010: }
 13123                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13124  00638A  0E02               	movlw	2
 13125  00638C  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13126  00638E  A4D8               	btfss	status,2,c
 13127  006390  0012               	return	
 13128                           
 13129                           ; BSR set to: 2
 13130                           ;lorawan.c: 2013: {
 13131                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13132  006392  5102               	movf	(_loRa+2)& (0+255),w,b
 13133  006394  0BF0               	andlw	-16
 13134  006396  0909               	iorlw	9
 13135  006398  6F02               	movwf	(_loRa+2)& (0+255),b
 13136                           
 13137                           ; BSR set to: 2
 13138                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13139  00639A  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13140  00639E                     __end_of_SetReceptionNotOkState:
 13141                           	opt stack 0
 13142                           tosu	equ	0xFFF
 13143                           tosh	equ	0xFFE
 13144                           tosl	equ	0xFFD
 13145                           pclath	equ	0xFFA
 13146                           tblptru	equ	0xFF8
 13147                           tblptrh	equ	0xFF7
 13148                           tblptrl	equ	0xFF6
 13149                           tablat	equ	0xFF5
 13150                           prodh	equ	0xFF4
 13151                           prodl	equ	0xFF3
 13152                           intcon	equ	0xFF2
 13153                           intcon2	equ	0xFF1
 13154                           intcon3	equ	0xFF0
 13155                           postinc0	equ	0xFEE
 13156                           wreg	equ	0xFE8
 13157                           postinc1	equ	0xFE6
 13158                           postdec1	equ	0xFE5
 13159                           plusw1	equ	0xFE3
 13160                           fsr1h	equ	0xFE2
 13161                           fsr1l	equ	0xFE1
 13162                           indf2	equ	0xFDF
 13163                           postinc2	equ	0xFDE
 13164                           postdec2	equ	0xFDD
 13165                           fsr2h	equ	0xFDA
 13166                           fsr2l	equ	0xFD9
 13167                           status	equ	0xFD8
 13168                           
 13169 ;; *************** function _SetJoinFailState *****************
 13170 ;; Defined at:
 13171 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;		None
 13174 ;; Auto vars:     Size  Location     Type
 13175 ;;		None
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  1    wreg      void 
 13178 ;; Registers used:
 13179 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : F/2
 13182 ;;		On exit  : F/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13189 ;;Total ram usage:        0 bytes
 13190 ;; Hardware stack levels used:    1
 13191 ;; Hardware stack levels required when called:    8
 13192 ;; This function calls:
 13193 ;;		_RxJoinResponse
 13194 ;; This function is called by:
 13195 ;;		_LORAWAN_RxTimeout
 13196 ;;		_LORAWAN_RxDone
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text68
 13201  007354                     __ptext68:
 13202                           	opt stack 0
 13203  007354                     _SetJoinFailState:
 13204                           	opt stack 18
 13205                           
 13206                           ; BSR set to: 2
 13207                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13208                           
 13209                           ;incstack = 0
 13210  007354  9902               	bcf	(_loRa+2)& (0+255),4,b
 13211                           
 13212                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13213  007356  9500               	bcf	_loRa& (0+255),2,b
 13214                           
 13215                           ; BSR set to: 2
 13216                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13217  007358  0EF0               	movlw	-16
 13218  00735A  1702               	andwf	(_loRa+2)& (0+255),f,b
 13219                           
 13220                           ; BSR set to: 2
 13221                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13222  00735C  0100               	movlb	0	; () banked
 13223  00735E  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13224  007360  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
 13225  007362  B4D8               	btfsc	status,2,c
 13226  007364  0012               	return	
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;lorawan.c: 1110: {
 13230                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13231  007366  0005               	push	
 13232  007368  6EFA               	movwf	pclath,c
 13233  00736A  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13234  00736C  6EFD               	movwf	tosl,c
 13235  00736E  51EB               	movf	(_rxPayload+3)& (0+255),w,b
 13236  007370  6EFE               	movwf	tosh,c
 13237  007372  6AFF               	clrf	tosu,c
 13238  007374  50FA               	movf	pclath,w,c
 13239  007376  0C00               	retlw	0	;indir
 13240  007378                     __end_of_SetJoinFailState:
 13241                           	opt stack 0
 13242                           tosu	equ	0xFFF
 13243                           tosh	equ	0xFFE
 13244                           tosl	equ	0xFFD
 13245                           pclath	equ	0xFFA
 13246                           tblptru	equ	0xFF8
 13247                           tblptrh	equ	0xFF7
 13248                           tblptrl	equ	0xFF6
 13249                           tablat	equ	0xFF5
 13250                           prodh	equ	0xFF4
 13251                           prodl	equ	0xFF3
 13252                           intcon	equ	0xFF2
 13253                           intcon2	equ	0xFF1
 13254                           intcon3	equ	0xFF0
 13255                           postinc0	equ	0xFEE
 13256                           wreg	equ	0xFE8
 13257                           postinc1	equ	0xFE6
 13258                           postdec1	equ	0xFE5
 13259                           plusw1	equ	0xFE3
 13260                           fsr1h	equ	0xFE2
 13261                           fsr1l	equ	0xFE1
 13262                           indf2	equ	0xFDF
 13263                           postinc2	equ	0xFDE
 13264                           postdec2	equ	0xFDD
 13265                           fsr2h	equ	0xFDA
 13266                           fsr2l	equ	0xFD9
 13267                           status	equ	0xFD8
 13268                           
 13269 ;; *************** function _RxJoinResponse *****************
 13270 ;; Defined at:
 13271 ;;		line 119 in file "main.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  status          1    wreg     unsigned char 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;  status          1    0[COMRAM] unsigned char 
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  1    wreg      void 
 13278 ;; Registers used:
 13279 ;;		wreg
 13280 ;; Tracked objects:
 13281 ;;		On entry : F/0
 13282 ;;		On exit  : F/0
 13283 ;;		Unchanged: F/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13289 ;;Total ram usage:        0 bytes
 13290 ;; Hardware stack levels used:    1
 13291 ;; Hardware stack levels required when called:    7
 13292 ;; This function calls:
 13293 ;;		Nothing
 13294 ;; This function is called by:
 13295 ;;		_main
 13296 ;;		_SetJoinFailState
 13297 ;;		_UpdateJoinSuccessState
 13298 ;; This function uses a non-reentrant model
 13299 ;;
 13300                           
 13301                           	psect	text69
 13302  007942                     __ptext69:
 13303                           	opt stack 0
 13304  007942                     _RxJoinResponse:
 13305                           	opt stack 20
 13306                           
 13307                           ; BSR set to: 0
 13308                           ;main.c: 121: PORTCbits.RC5 = 0;
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;incstack = 0
 13312  007942  9A82               	bcf	3970,5,c	;volatile
 13313                           
 13314                           ; BSR set to: 0
 13315  007944  0012               	return		;funcret
 13316  007946                     __end_of_RxJoinResponse:
 13317                           	opt stack 0
 13318                           tosu	equ	0xFFF
 13319                           tosh	equ	0xFFE
 13320                           tosl	equ	0xFFD
 13321                           pclath	equ	0xFFA
 13322                           tblptru	equ	0xFF8
 13323                           tblptrh	equ	0xFF7
 13324                           tblptrl	equ	0xFF6
 13325                           tablat	equ	0xFF5
 13326                           prodh	equ	0xFF4
 13327                           prodl	equ	0xFF3
 13328                           intcon	equ	0xFF2
 13329                           intcon2	equ	0xFF1
 13330                           intcon3	equ	0xFF0
 13331                           postinc0	equ	0xFEE
 13332                           wreg	equ	0xFE8
 13333                           postinc1	equ	0xFE6
 13334                           postdec1	equ	0xFE5
 13335                           plusw1	equ	0xFE3
 13336                           fsr1h	equ	0xFE2
 13337                           fsr1l	equ	0xFE1
 13338                           indf2	equ	0xFDF
 13339                           postinc2	equ	0xFDE
 13340                           postdec2	equ	0xFDD
 13341                           fsr2h	equ	0xFDA
 13342                           fsr2l	equ	0xFD9
 13343                           status	equ	0xFD8
 13344                           
 13345 ;; *************** function _MacExecuteCommands *****************
 13346 ;; Defined at:
 13347 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 13350 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13351 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 13352 ;; Auto vars:     Size  Location     Type
 13353 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 13354 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13355 ;;  done            1   31[BANK0 ] unsigned char 
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  2   26[BANK0 ] PTR unsigned char 
 13358 ;; Registers used:
 13359 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13360 ;; Tracked objects:
 13361 ;;		On entry : F/0
 13362 ;;		On exit  : F/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13365 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13366 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13368 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;Total ram usage:        8 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; Hardware stack levels required when called:   11
 13372 ;; This function calls:
 13373 ;;		_ExecuteDevStatus
 13374 ;;		_ExecuteDutyCycle
 13375 ;;		_ExecuteLinkAdr
 13376 ;;		_ExecuteLinkCheck
 13377 ;;		_ExecuteNewChannel
 13378 ;;		_ExecuteRxParamSetupReq
 13379 ;;		_ExecuteRxTimingSetup
 13380 ;; This function is called by:
 13381 ;;		_LORAWAN_RxDone
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           	psect	text70
 13386  002DD4                     __ptext70:
 13387                           	opt stack 0
 13388  002DD4                     _MacExecuteCommands:
 13389                           	opt stack 15
 13390                           
 13391                           ; BSR set to: 0
 13392                           ;lorawan.c: 1577: bool done = 0;
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;incstack = 0
 13396  002DD4  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 13397                           
 13398                           ; BSR set to: 0
 13399                           ;lorawan.c: 1578: uint8_t *ptr;
 13400                           ;lorawan.c: 1579: ptr = buffer;
 13401  002DD6  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13402  002DDA  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13403                           
 13404                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13405  002DDE  D0DE               	goto	l14140
 13406  002DE0                     l14104:
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;lorawan.c: 1581: {
 13410                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13411  002DE0  0102               	movlb	2	; () banked
 13412  002DE2  51A7               	movf	(_loRa+167)& (0+255),w,b
 13413  002DE4  0D02               	mullw	2
 13414  002DE6  0EA9               	movlw	low (_loRa+169)
 13415  002DE8  24F3               	addwf	prodl,w,c
 13416  002DEA  6ED9               	movwf	fsr2l,c
 13417  002DEC  0E02               	movlw	high (_loRa+169)
 13418  002DEE  20F4               	addwfc	prodh,w,c
 13419  002DF0  6EDA               	movwf	fsr2h,c
 13420  002DF2  90DF               	bcf	indf2,0,c
 13421                           
 13422                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13423  002DF4  51A7               	movf	(_loRa+167)& (0+255),w,b
 13424  002DF6  0D02               	mullw	2
 13425  002DF8  0EA9               	movlw	low (_loRa+169)
 13426  002DFA  24F3               	addwf	prodl,w,c
 13427  002DFC  6ED9               	movwf	fsr2l,c
 13428  002DFE  0E02               	movlw	high (_loRa+169)
 13429  002E00  20F4               	addwfc	prodh,w,c
 13430  002E02  6EDA               	movwf	fsr2h,c
 13431  002E04  92DF               	bcf	indf2,1,c
 13432                           
 13433                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13434  002E06  51A7               	movf	(_loRa+167)& (0+255),w,b
 13435  002E08  0D02               	mullw	2
 13436  002E0A  0EA9               	movlw	low (_loRa+169)
 13437  002E0C  24F3               	addwf	prodl,w,c
 13438  002E0E  6ED9               	movwf	fsr2l,c
 13439  002E10  0E02               	movlw	high (_loRa+169)
 13440  002E12  20F4               	addwfc	prodh,w,c
 13441  002E14  6EDA               	movwf	fsr2h,c
 13442  002E16  94DF               	bcf	indf2,2,c
 13443                           
 13444                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13445  002E18  51A7               	movf	(_loRa+167)& (0+255),w,b
 13446  002E1A  0D02               	mullw	2
 13447  002E1C  0EA9               	movlw	low (_loRa+169)
 13448  002E1E  24F3               	addwf	prodl,w,c
 13449  002E20  6ED9               	movwf	fsr2l,c
 13450  002E22  0E02               	movlw	high (_loRa+169)
 13451  002E24  20F4               	addwfc	prodh,w,c
 13452  002E26  6EDA               	movwf	fsr2h,c
 13453  002E28  96DF               	bcf	indf2,3,c
 13454                           
 13455                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13456  002E2A  51A7               	movf	(_loRa+167)& (0+255),w,b
 13457  002E2C  0D02               	mullw	2
 13458  002E2E  0EA9               	movlw	low (_loRa+169)
 13459  002E30  24F3               	addwf	prodl,w,c
 13460  002E32  6ED9               	movwf	fsr2l,c
 13461  002E34  0E02               	movlw	high (_loRa+169)
 13462  002E36  20F4               	addwfc	prodh,w,c
 13463  002E38  6EDA               	movwf	fsr2h,c
 13464  002E3A  98DF               	bcf	indf2,4,c
 13465                           
 13466                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13467  002E3C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13468  002E3E  0D02               	mullw	2
 13469  002E40  0EA9               	movlw	low (_loRa+169)
 13470  002E42  24F3               	addwf	prodl,w,c
 13471  002E44  6ED9               	movwf	fsr2l,c
 13472  002E46  0E02               	movlw	high (_loRa+169)
 13473  002E48  20F4               	addwfc	prodh,w,c
 13474  002E4A  6EDA               	movwf	fsr2h,c
 13475  002E4C  9ADF               	bcf	indf2,5,c
 13476                           
 13477                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13478  002E4E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13479  002E50  0D02               	mullw	2
 13480  002E52  0EA9               	movlw	low (_loRa+169)
 13481  002E54  24F3               	addwf	prodl,w,c
 13482  002E56  6ED9               	movwf	fsr2l,c
 13483  002E58  0E02               	movlw	high (_loRa+169)
 13484  002E5A  20F4               	addwfc	prodh,w,c
 13485  002E5C  6EDA               	movwf	fsr2h,c
 13486  002E5E  9CDF               	bcf	indf2,6,c
 13487                           
 13488                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13489  002E60  51A7               	movf	(_loRa+167)& (0+255),w,b
 13490  002E62  0D02               	mullw	2
 13491  002E64  0EA9               	movlw	low (_loRa+169)
 13492  002E66  24F3               	addwf	prodl,w,c
 13493  002E68  6ED9               	movwf	fsr2l,c
 13494  002E6A  0E02               	movlw	high (_loRa+169)
 13495  002E6C  20F4               	addwfc	prodh,w,c
 13496  002E6E  6EDA               	movwf	fsr2h,c
 13497  002E70  9EDF               	bcf	indf2,7,c
 13498                           
 13499                           ; BSR set to: 2
 13500                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13501  002E72  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13502  002E76  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13503  002E7A  51A7               	movf	(_loRa+167)& (0+255),w,b
 13504  002E7C  0D02               	mullw	2
 13505  002E7E  0EA8               	movlw	low (_loRa+168)
 13506  002E80  24F3               	addwf	prodl,w,c
 13507  002E82  6EE9               	movwf	fsr0l,c
 13508  002E84  0E02               	movlw	high (_loRa+168)
 13509  002E86  20F4               	addwfc	prodh,w,c
 13510  002E88  6EEA               	movwf	fsr0h,c
 13511  002E8A  CFDF FFEF          	movff	indf2,indf0
 13512                           
 13513                           ;lorawan.c: 1595: switch (*ptr ++)
 13514  002E8E  D060               	goto	l14132
 13515  002E90                     l14108:
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;lorawan.c: 1598: {
 13519                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13520  002E90  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13521  002E94  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13522  002E98  EC3D  F038         	call	_ExecuteLinkCheck
 13523  002E9C  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13524  002EA0  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13525  002EA4                     l14110:
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13529  002EA4  0102               	movlb	2	; () banked
 13530  002EA6  51A7               	movf	(_loRa+167)& (0+255),w,b
 13531  002EA8  0D02               	mullw	2
 13532  002EAA  0EA8               	movlw	low (_loRa+168)
 13533  002EAC  24F3               	addwf	prodl,w,c
 13534  002EAE  6ED9               	movwf	fsr2l,c
 13535  002EB0  0E02               	movlw	high (_loRa+168)
 13536  002EB2  20F4               	addwfc	prodh,w,c
 13537  002EB4  6EDA               	movwf	fsr2h,c
 13538  002EB6  68DF               	setf	indf2,c
 13539                           
 13540                           ;lorawan.c: 1602: } break;
 13541  002EB8  D062               	goto	l14134
 13542  002EBA                     l14112:
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;lorawan.c: 1605: {
 13546                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13547  002EBA  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13548  002EBE  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13549  002EC2  EC9E  F01A         	call	_ExecuteLinkAdr	;wreg free
 13550  002EC6  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13551  002ECA  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13552                           
 13553                           ;lorawan.c: 1607: } break;
 13554  002ECE  D057               	goto	l14134
 13555  002ED0                     l14114:
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;lorawan.c: 1610: {
 13559                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13560  002ED0  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13561  002ED4  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13562  002ED8  ECBB  F034         	call	_ExecuteDutyCycle	;wreg free
 13563  002EDC  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13564  002EE0  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13565                           
 13566                           ;lorawan.c: 1612: } break;
 13567  002EE4  D04C               	goto	l14134
 13568  002EE6                     l14116:
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;lorawan.c: 1615: {
 13572                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13573  002EE6  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13574  002EEA  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13575  002EEE  EC54  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 13576  002EF2  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13577  002EF6  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13578                           
 13579                           ;lorawan.c: 1617: } break;
 13580  002EFA  D041               	goto	l14134
 13581  002EFC                     l14118:
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;lorawan.c: 1620: {
 13585                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13586  002EFC  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13587  002F00  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13588  002F04  EC33  F03C         	call	_ExecuteDevStatus	;wreg free
 13589  002F08  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13590  002F0C  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13591                           
 13592                           ;lorawan.c: 1622: } break;
 13593  002F10  D036               	goto	l14134
 13594  002F12                     l14120:
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;lorawan.c: 1625: {
 13598                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13599  002F12  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13600  002F16  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13601  002F1A  ECBD  F019         	call	_ExecuteNewChannel	;wreg free
 13602  002F1E  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13603  002F22  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13604                           
 13605                           ;lorawan.c: 1628: } break;
 13606  002F26  D02B               	goto	l14134
 13607  002F28                     l14122:
 13608                           
 13609                           ; BSR set to: 0
 13610                           ;lorawan.c: 1631: {
 13611                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13612  002F28  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13613  002F2C  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13614  002F30  ECBC  F039         	call	_ExecuteRxTimingSetup	;wreg free
 13615  002F34  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13616  002F38  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13617                           
 13618                           ;lorawan.c: 1633: } break;
 13619  002F3C  D020               	goto	l14134
 13620  002F3E                     l14124:
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;lorawan.c: 1636: {
 13624                           ;lorawan.c: 1637: done = 1;
 13625  002F3E  0E01               	movlw	1
 13626  002F40  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13630  002F42  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13631  002F44  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13632  002F46  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 13633  002F48  0E00               	movlw	0
 13634  002F4A  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13635  002F4C  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13636  002F4E  D7AA               	goto	l14110
 13637  002F50                     l14132:
 13638                           
 13639                           ; BSR set to: 2
 13640  002F50  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13641  002F54  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13642  002F58  0100               	movlb	0	; () banked
 13643  002F5A  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13644  002F5C  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13645  002F5E  50DF               	movf	indf2,w,c
 13646                           
 13647                           ; Switch size 1, requested type "speed"
 13648                           ; Number of cases is 7, Range of values is 2 to 8
 13649                           ; switch strategies available:
 13650                           ; Name         Instructions Cycles
 13651                           ; simple_byte           22    12 (average)
 13652                           ;	Chosen strategy is simple_byte
 13653  002F60  0A02               	xorlw	2	; case 2
 13654  002F62  E096               	bz	l14108
 13655  002F64  0A01               	xorlw	1	; case 3
 13656  002F66  E0A9               	bz	l14112
 13657  002F68  0A07               	xorlw	7	; case 4
 13658  002F6A  E0B2               	bz	l14114
 13659  002F6C  0A01               	xorlw	1	; case 5
 13660  002F6E  E0BB               	bz	l14116
 13661  002F70  0A03               	xorlw	3	; case 6
 13662  002F72  E0C4               	bz	l14118
 13663  002F74  0A01               	xorlw	1	; case 7
 13664  002F76  E0CD               	bz	l14120
 13665  002F78  0A0F               	xorlw	15	; case 8
 13666  002F7A  E0D6               	bz	l14122
 13667  002F7C  D7E0               	goto	l14124
 13668  002F7E                     l14134:
 13669                           
 13670                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13671                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13672  002F7E  0102               	movlb	2	; () banked
 13673  002F80  51A7               	movf	(_loRa+167)& (0+255),w,b
 13674  002F82  0D02               	mullw	2
 13675  002F84  0EA8               	movlw	low (_loRa+168)
 13676  002F86  24F3               	addwf	prodl,w,c
 13677  002F88  6ED9               	movwf	fsr2l,c
 13678  002F8A  0E02               	movlw	high (_loRa+168)
 13679  002F8C  20F4               	addwfc	prodh,w,c
 13680  002F8E  6EDA               	movwf	fsr2h,c
 13681  002F90  28DE               	incf	postinc2,w,c
 13682  002F92  E004               	bz	l14140
 13683                           
 13684                           ; BSR set to: 2
 13685  002F94  0E10               	movlw	16
 13686  002F96  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13687  002F98  D001               	goto	l14140
 13688                           
 13689                           ; BSR set to: 2
 13690                           ;lorawan.c: 1645: {
 13691                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13692  002F9A  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13693  002F9C                     l14140:
 13694  002F9C  0100               	movlb	0	; () banked
 13695  002F9E  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13696  002FA0  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13697  002FA2  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 13698  002FA4  0E00               	movlw	0
 13699  002FA6  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13700  002FA8  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13701  002FAA  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 13702  002FAC  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13703  002FAE  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13704  002FB0  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13705  002FB2  E203               	bc	l14144
 13706                           
 13707                           ; BSR set to: 0
 13708  002FB4  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 13709  002FB6  E101 D713          	bz	l14104
 13710  002FBA                     l14144:
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;lorawan.c: 1647: }
 13714                           ;lorawan.c: 1648: }
 13715                           ;lorawan.c: 1649: return ptr;
 13716  002FBA  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13717  002FBE  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13718                           
 13719                           ; BSR set to: 0
 13720  002FC2  0012               	return		;funcret
 13721  002FC4                     __end_of_MacExecuteCommands:
 13722                           	opt stack 0
 13723                           tosu	equ	0xFFF
 13724                           tosh	equ	0xFFE
 13725                           tosl	equ	0xFFD
 13726                           pclath	equ	0xFFA
 13727                           tblptru	equ	0xFF8
 13728                           tblptrh	equ	0xFF7
 13729                           tblptrl	equ	0xFF6
 13730                           tablat	equ	0xFF5
 13731                           prodh	equ	0xFF4
 13732                           prodl	equ	0xFF3
 13733                           intcon	equ	0xFF2
 13734                           intcon2	equ	0xFF1
 13735                           intcon3	equ	0xFF0
 13736                           indf0	equ	0xFEF
 13737                           postinc0	equ	0xFEE
 13738                           fsr0h	equ	0xFEA
 13739                           fsr0l	equ	0xFE9
 13740                           wreg	equ	0xFE8
 13741                           postinc1	equ	0xFE6
 13742                           postdec1	equ	0xFE5
 13743                           plusw1	equ	0xFE3
 13744                           fsr1h	equ	0xFE2
 13745                           fsr1l	equ	0xFE1
 13746                           indf2	equ	0xFDF
 13747                           postinc2	equ	0xFDE
 13748                           postdec2	equ	0xFDD
 13749                           fsr2h	equ	0xFDA
 13750                           fsr2l	equ	0xFD9
 13751                           status	equ	0xFD8
 13752                           
 13753 ;; *************** function _ExecuteRxTimingSetup *****************
 13754 ;; Defined at:
 13755 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 13758 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;  delay           1   11[BANK0 ] unsigned char 
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  2    9[BANK0 ] PTR unsigned char 
 13763 ;; Registers used:
 13764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13765 ;; Tracked objects:
 13766 ;;		On entry : F/0
 13767 ;;		On exit  : F/2
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;Total ram usage:        3 bytes
 13775 ;; Hardware stack levels used:    1
 13776 ;; Hardware stack levels required when called:    8
 13777 ;; This function calls:
 13778 ;;		_UpdateReceiveDelays
 13779 ;; This function is called by:
 13780 ;;		_MacExecuteCommands
 13781 ;; This function uses a non-reentrant model
 13782 ;;
 13783                           
 13784                           	psect	text71
 13785  007378                     __ptext71:
 13786                           	opt stack 0
 13787  007378                     _ExecuteRxTimingSetup:
 13788                           	opt stack 17
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;lorawan.c: 1661: uint8_t delay;
 13792                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13793                           
 13794                           ; BSR set to: 0
 13795                           ;incstack = 0
 13796  007378  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13797  00737C  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13798  007380  50DF               	movf	indf2,w,c
 13799  007382  0B0F               	andlw	15
 13800  007384  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;lorawan.c: 1664: ptr++;
 13804  007386  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13805  007388  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13809  00738A  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13810  00738C  EC7D  F035         	call	_UpdateReceiveDelays
 13811                           
 13812                           ; BSR set to: 2
 13813                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13814  007390  8104               	bsf	(_loRa+4)& (0+255),0,b
 13815                           
 13816                           ; BSR set to: 2
 13817                           ;lorawan.c: 1669: return ptr;
 13818  007392  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13819  007396  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13820                           
 13821                           ; BSR set to: 2
 13822  00739A  0012               	return		;funcret
 13823  00739C                     __end_of_ExecuteRxTimingSetup:
 13824                           	opt stack 0
 13825                           tosu	equ	0xFFF
 13826                           tosh	equ	0xFFE
 13827                           tosl	equ	0xFFD
 13828                           pclath	equ	0xFFA
 13829                           tblptru	equ	0xFF8
 13830                           tblptrh	equ	0xFF7
 13831                           tblptrl	equ	0xFF6
 13832                           tablat	equ	0xFF5
 13833                           prodh	equ	0xFF4
 13834                           prodl	equ	0xFF3
 13835                           intcon	equ	0xFF2
 13836                           intcon2	equ	0xFF1
 13837                           intcon3	equ	0xFF0
 13838                           indf0	equ	0xFEF
 13839                           postinc0	equ	0xFEE
 13840                           fsr0h	equ	0xFEA
 13841                           fsr0l	equ	0xFE9
 13842                           wreg	equ	0xFE8
 13843                           postinc1	equ	0xFE6
 13844                           postdec1	equ	0xFE5
 13845                           plusw1	equ	0xFE3
 13846                           fsr1h	equ	0xFE2
 13847                           fsr1l	equ	0xFE1
 13848                           indf2	equ	0xFDF
 13849                           postinc2	equ	0xFDE
 13850                           postdec2	equ	0xFDD
 13851                           fsr2h	equ	0xFDA
 13852                           fsr2l	equ	0xFD9
 13853                           status	equ	0xFD8
 13854                           
 13855 ;; *************** function _UpdateReceiveDelays *****************
 13856 ;; Defined at:
 13857 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;  delay           1    wreg     unsigned char 
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;  delay           1    8[BANK0 ] unsigned char 
 13862 ;; Return value:  Size  Location     Type
 13863 ;;                  1    wreg      void 
 13864 ;; Registers used:
 13865 ;;		wreg, status,2, status,0, prodl, prodh
 13866 ;; Tracked objects:
 13867 ;;		On entry : C/3
 13868 ;;		On exit  : F/2
 13869 ;;		Unchanged: 0/0
 13870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13873 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13875 ;;Total ram usage:        5 bytes
 13876 ;; Hardware stack levels used:    1
 13877 ;; Hardware stack levels required when called:    7
 13878 ;; This function calls:
 13879 ;;		Nothing
 13880 ;; This function is called by:
 13881 ;;		_LORAWAN_RxDone
 13882 ;;		_ExecuteRxTimingSetup
 13883 ;; This function uses a non-reentrant model
 13884 ;;
 13885                           
 13886                           	psect	text72
 13887  006AFA                     __ptext72:
 13888                           	opt stack 0
 13889  006AFA                     _UpdateReceiveDelays:
 13890                           	opt stack 19
 13891                           
 13892                           ; BSR set to: 2
 13893                           ;incstack = 0
 13894                           ;UpdateReceiveDelays@delay stored from wreg
 13895  006AFA  0100               	movlb	0	; () banked
 13896  006AFC  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13897                           
 13898                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13899  006AFE  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13900  006B00  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 13901  006B02  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 13902  006B04  0EE8               	movlw	232
 13903  006B06  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13904  006B08  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 13905  006B0C  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 13906  006B10  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 13907  006B12  50F3               	movf	prodl,w,c
 13908  006B14  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13909  006B16  0E03               	movlw	3
 13910  006B18  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13911  006B1A  50F3               	movf	prodl,w,c
 13912  006B1C  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13913  006B1E  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 13914  006B22  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 13915                           
 13916                           ; BSR set to: 0
 13917                           ;lorawan.c: 2029: if (delay == 0)
 13918  006B26  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13919  006B28  E105               	bnz	l13180
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;lorawan.c: 2030: {
 13923                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13924  006B2A  0E03               	movlw	3
 13925  006B2C  0102               	movlb	2	; () banked
 13926  006B2E  6F95               	movwf	(_loRa+149)& (0+255),b
 13927  006B30  0EE8               	movlw	232
 13928  006B32  6F94               	movwf	(_loRa+148)& (0+255),b
 13929  006B34                     l13180:
 13930                           
 13931                           ;lorawan.c: 2032: }
 13932                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13933  006B34  0EE8               	movlw	232
 13934  006B36  0102               	movlb	2	; () banked
 13935  006B38  2594               	addwf	(_loRa+148)& (0+255),w,b
 13936  006B3A  6F96               	movwf	(_loRa+150)& (0+255),b
 13937  006B3C  0E03               	movlw	3
 13938  006B3E  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13939  006B40  6F97               	movwf	(_loRa+151)& (0+255),b
 13940                           
 13941                           ; BSR set to: 2
 13942  006B42  0012               	return		;funcret
 13943  006B44                     __end_of_UpdateReceiveDelays:
 13944                           	opt stack 0
 13945                           tosu	equ	0xFFF
 13946                           tosh	equ	0xFFE
 13947                           tosl	equ	0xFFD
 13948                           pclath	equ	0xFFA
 13949                           tblptru	equ	0xFF8
 13950                           tblptrh	equ	0xFF7
 13951                           tblptrl	equ	0xFF6
 13952                           tablat	equ	0xFF5
 13953                           prodh	equ	0xFF4
 13954                           prodl	equ	0xFF3
 13955                           intcon	equ	0xFF2
 13956                           intcon2	equ	0xFF1
 13957                           intcon3	equ	0xFF0
 13958                           indf0	equ	0xFEF
 13959                           postinc0	equ	0xFEE
 13960                           fsr0h	equ	0xFEA
 13961                           fsr0l	equ	0xFE9
 13962                           wreg	equ	0xFE8
 13963                           postinc1	equ	0xFE6
 13964                           postdec1	equ	0xFE5
 13965                           plusw1	equ	0xFE3
 13966                           fsr1h	equ	0xFE2
 13967                           fsr1l	equ	0xFE1
 13968                           indf2	equ	0xFDF
 13969                           postinc2	equ	0xFDE
 13970                           postdec2	equ	0xFDD
 13971                           fsr2h	equ	0xFDA
 13972                           fsr2l	equ	0xFD9
 13973                           status	equ	0xFD8
 13974                           
 13975 ;; *************** function _ExecuteRxParamSetupReq *****************
 13976 ;; Defined at:
 13977 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 13980 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;  frequency       4   18[BANK0 ] unsigned long 
 13983 ;;  dlSettings      1   22[BANK0 ] struct .
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  2   16[BANK0 ] PTR unsigned char 
 13986 ;; Registers used:
 13987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13988 ;; Tracked objects:
 13989 ;;		On entry : F/0
 13990 ;;		On exit  : F/2
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;Total ram usage:        7 bytes
 13998 ;; Hardware stack levels used:    1
 13999 ;; Hardware stack levels required when called:    8
 14000 ;; This function calls:
 14001 ;;		_UpdateReceiveWindow2Parameters
 14002 ;;		_ValidateDataRate
 14003 ;;		_ValidateFrequency
 14004 ;;		_ValidateRxOffset
 14005 ;;		___lmul
 14006 ;; This function is called by:
 14007 ;;		_MacExecuteCommands
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text73
 14012  0042A8                     __ptext73:
 14013                           	opt stack 0
 14014  0042A8                     _ExecuteRxParamSetupReq:
 14015                           	opt stack 17
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14019                           
 14020                           ; BSR set to: 0
 14021                           
 14022                           ; BSR set to: 2
 14023                           ;incstack = 0
 14024  0042A8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14025  0042AC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14026  0042B0  50DF               	movf	indf2,w,c
 14027  0042B2  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14028                           
 14029                           ; BSR set to: 0
 14030  0042B4  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14031  0042B6  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14035  0042B8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14036  0042BC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14037  0042C0  0EFF               	movlw	255
 14038  0042C2  14DE               	andwf	postinc2,w,c
 14039  0042C4  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14040  0042C6  0EFF               	movlw	255
 14041  0042C8  14DE               	andwf	postinc2,w,c
 14042  0042CA  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14043  0042CC  0EFF               	movlw	255
 14044  0042CE  14DE               	andwf	postinc2,w,c
 14045  0042D0  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14046  0042D2  0E00               	movlw	0
 14047  0042D4  14DE               	andwf	postinc2,w,c
 14048  0042D6  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14049                           
 14050                           ; BSR set to: 0
 14051                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14052  0042D8  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14053  0042DC  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14054  0042E0  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14055  0042E4  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14056  0042E8  0E64               	movlw	100
 14057  0042EA  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14058  0042EC  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14059  0042EE  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14060  0042F0  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14061  0042F2  EC9C  F02E         	call	___lmul	;wreg free
 14062  0042F6  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14063  0042FA  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14064  0042FE  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14065  004302  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14069  004306  0E03               	movlw	3
 14070  004308  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14071  00430A  0E00               	movlw	0
 14072  00430C  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14076  00430E  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14077  004312  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14078  004316  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14079  00431A  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14080  00431E  ECBA  F033         	call	_ValidateFrequency	;wreg free
 14081  004322  0900               	iorlw	0
 14082  004324  E10A               	bnz	l13624
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;lorawan_eu.c: 754: {
 14086                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14087  004326  0102               	movlb	2	; () banked
 14088  004328  51A7               	movf	(_loRa+167)& (0+255),w,b
 14089  00432A  0D02               	mullw	2
 14090  00432C  0EA9               	movlw	low (_loRa+169)
 14091  00432E  24F3               	addwf	prodl,w,c
 14092  004330  6ED9               	movwf	fsr2l,c
 14093  004332  0E02               	movlw	high (_loRa+169)
 14094  004334  20F4               	addwfc	prodh,w,c
 14095  004336  6EDA               	movwf	fsr2h,c
 14096  004338  86DF               	bsf	indf2,3,c
 14097  00433A                     l13624:
 14098                           
 14099                           ;lorawan_eu.c: 756: }
 14100                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14101  00433A  0100               	movlb	0	; () banked
 14102  00433C  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14103  00433E  0B0F               	andlw	15
 14104  004340  EC8D  F03B         	call	_ValidateDataRate
 14105  004344  0900               	iorlw	0
 14106  004346  E10A               	bnz	l13628
 14107                           
 14108                           ; BSR set to: 0
 14109                           ;lorawan_eu.c: 759: {
 14110                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14111  004348  0102               	movlb	2	; () banked
 14112  00434A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14113  00434C  0D02               	mullw	2
 14114  00434E  0EA9               	movlw	low (_loRa+169)
 14115  004350  24F3               	addwf	prodl,w,c
 14116  004352  6ED9               	movwf	fsr2l,c
 14117  004354  0E02               	movlw	high (_loRa+169)
 14118  004356  20F4               	addwfc	prodh,w,c
 14119  004358  6EDA               	movwf	fsr2h,c
 14120  00435A  88DF               	bsf	indf2,4,c
 14121  00435C                     l13628:
 14122                           
 14123                           ;lorawan_eu.c: 761: }
 14124                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14125  00435C  0100               	movlb	0	; () banked
 14126  00435E  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14127  004360  0B07               	andlw	7
 14128  004362  EC83  F03B         	call	_ValidateRxOffset
 14129  004366  0900               	iorlw	0
 14130  004368  E10A               	bnz	l1127
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;lorawan_eu.c: 764: {
 14134                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14135  00436A  0102               	movlb	2	; () banked
 14136  00436C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14137  00436E  0D02               	mullw	2
 14138  004370  0EA9               	movlw	low (_loRa+169)
 14139  004372  24F3               	addwf	prodl,w,c
 14140  004374  6ED9               	movwf	fsr2l,c
 14141  004376  0E02               	movlw	high (_loRa+169)
 14142  004378  20F4               	addwfc	prodh,w,c
 14143  00437A  6EDA               	movwf	fsr2h,c
 14144  00437C  8ADF               	bsf	indf2,5,c
 14145  00437E                     l1127:
 14146                           
 14147                           ;lorawan_eu.c: 766: }
 14148                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14149  00437E  0102               	movlb	2	; () banked
 14150  004380  51A7               	movf	(_loRa+167)& (0+255),w,b
 14151  004382  0D02               	mullw	2
 14152  004384  0EA9               	movlw	low (_loRa+169)
 14153  004386  24F3               	addwf	prodl,w,c
 14154  004388  6ED9               	movwf	fsr2l,c
 14155  00438A  0E02               	movlw	high (_loRa+169)
 14156  00438C  20F4               	addwfc	prodh,w,c
 14157  00438E  6EDA               	movwf	fsr2h,c
 14158  004390  A8DF               	btfss	indf2,4,c
 14159  004392  D029               	goto	l13642
 14160                           
 14161                           ; BSR set to: 2
 14162  004394  51A7               	movf	(_loRa+167)& (0+255),w,b
 14163  004396  0D02               	mullw	2
 14164  004398  0EA9               	movlw	low (_loRa+169)
 14165  00439A  24F3               	addwf	prodl,w,c
 14166  00439C  6ED9               	movwf	fsr2l,c
 14167  00439E  0E02               	movlw	high (_loRa+169)
 14168  0043A0  20F4               	addwfc	prodh,w,c
 14169  0043A2  6EDA               	movwf	fsr2h,c
 14170  0043A4  A6DF               	btfss	indf2,3,c
 14171  0043A6  D01F               	goto	l13642
 14172                           
 14173                           ; BSR set to: 2
 14174  0043A8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14175  0043AA  0D02               	mullw	2
 14176  0043AC  0EA9               	movlw	low (_loRa+169)
 14177  0043AE  24F3               	addwf	prodl,w,c
 14178  0043B0  6ED9               	movwf	fsr2l,c
 14179  0043B2  0E02               	movlw	high (_loRa+169)
 14180  0043B4  20F4               	addwfc	prodh,w,c
 14181  0043B6  6EDA               	movwf	fsr2h,c
 14182  0043B8  AADF               	btfss	indf2,5,c
 14183  0043BA  D015               	goto	l13642
 14184                           
 14185                           ; BSR set to: 2
 14186                           ;lorawan_eu.c: 769: {
 14187                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14188  0043BC  0100               	movlb	0	; () banked
 14189  0043BE  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14190  0043C0  0B07               	andlw	7
 14191  0043C2  0102               	movlb	2	; () banked
 14192  0043C4  6FEF               	movwf	(_loRa+239)& (0+255),b
 14193                           
 14194                           ; BSR set to: 2
 14195                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14196  0043C6  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14197  0043CA  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14198  0043CE  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14199  0043D2  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14200  0043D6  0100               	movlb	0	; () banked
 14201  0043D8  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14202  0043DA  0B0F               	andlw	15
 14203  0043DC  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14204  0043DE  EC6D  F03B         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14208  0043E2  0102               	movlb	2	; () banked
 14209  0043E4  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14210  0043E6                     l13642:
 14211                           
 14212                           ; BSR set to: 2
 14213                           ;lorawan_eu.c: 773: }
 14214                           ;lorawan_eu.c: 775: return ptr;
 14215  0043E6  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14216  0043EA  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14217                           
 14218                           ; BSR set to: 2
 14219  0043EE  0012               	return		;funcret
 14220  0043F0                     __end_of_ExecuteRxParamSetupReq:
 14221                           	opt stack 0
 14222                           tosu	equ	0xFFF
 14223                           tosh	equ	0xFFE
 14224                           tosl	equ	0xFFD
 14225                           pclath	equ	0xFFA
 14226                           tblptru	equ	0xFF8
 14227                           tblptrh	equ	0xFF7
 14228                           tblptrl	equ	0xFF6
 14229                           tablat	equ	0xFF5
 14230                           prodh	equ	0xFF4
 14231                           prodl	equ	0xFF3
 14232                           intcon	equ	0xFF2
 14233                           intcon2	equ	0xFF1
 14234                           intcon3	equ	0xFF0
 14235                           indf0	equ	0xFEF
 14236                           postinc0	equ	0xFEE
 14237                           fsr0h	equ	0xFEA
 14238                           fsr0l	equ	0xFE9
 14239                           wreg	equ	0xFE8
 14240                           postinc1	equ	0xFE6
 14241                           postdec1	equ	0xFE5
 14242                           plusw1	equ	0xFE3
 14243                           fsr1h	equ	0xFE2
 14244                           fsr1l	equ	0xFE1
 14245                           indf2	equ	0xFDF
 14246                           postinc2	equ	0xFDE
 14247                           postdec2	equ	0xFDD
 14248                           fsr2h	equ	0xFDA
 14249                           fsr2l	equ	0xFD9
 14250                           status	equ	0xFD8
 14251                           
 14252 ;; *************** function _ValidateRxOffset *****************
 14253 ;; Defined at:
 14254 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;  rxOffset        1    wreg     unsigned char 
 14257 ;; Auto vars:     Size  Location     Type
 14258 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 14259 ;;  result          1    5[BANK0 ] enum E8016
 14260 ;; Return value:  Size  Location     Type
 14261 ;;                  1    wreg      enum E8016
 14262 ;; Registers used:
 14263 ;;		wreg, status,2, status,0
 14264 ;; Tracked objects:
 14265 ;;		On entry : F/0
 14266 ;;		On exit  : F/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14272 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14273 ;;Total ram usage:        2 bytes
 14274 ;; Hardware stack levels used:    1
 14275 ;; Hardware stack levels required when called:    7
 14276 ;; This function calls:
 14277 ;;		Nothing
 14278 ;; This function is called by:
 14279 ;;		_ExecuteRxParamSetupReq
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283                           	psect	text74
 14284  007706                     __ptext74:
 14285                           	opt stack 0
 14286  007706                     _ValidateRxOffset:
 14287                           	opt stack 17
 14288                           
 14289                           ; BSR set to: 2
 14290                           ;incstack = 0
 14291                           ;ValidateRxOffset@rxOffset stored from wreg
 14292  007706  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14293                           
 14294                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14295  007708  0100               	movlb	0	; () banked
 14296  00770A  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14300  00770C  0E05               	movlw	5
 14301  00770E  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14302  007710  D002               	goto	l1223
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;lorawan_eu.c: 1081: {
 14306                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14307  007712  0E03               	movlw	3
 14308  007714  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 14309  007716                     l1223:
 14310                           
 14311                           ; BSR set to: 0
 14312                           ;lorawan_eu.c: 1083: }
 14313                           ;lorawan_eu.c: 1085: return result;
 14314  007716  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 14315                           
 14316                           ; BSR set to: 0
 14317  007718  0012               	return		;funcret
 14318  00771A                     __end_of_ValidateRxOffset:
 14319                           	opt stack 0
 14320                           tosu	equ	0xFFF
 14321                           tosh	equ	0xFFE
 14322                           tosl	equ	0xFFD
 14323                           pclath	equ	0xFFA
 14324                           tblptru	equ	0xFF8
 14325                           tblptrh	equ	0xFF7
 14326                           tblptrl	equ	0xFF6
 14327                           tablat	equ	0xFF5
 14328                           prodh	equ	0xFF4
 14329                           prodl	equ	0xFF3
 14330                           intcon	equ	0xFF2
 14331                           intcon2	equ	0xFF1
 14332                           intcon3	equ	0xFF0
 14333                           indf0	equ	0xFEF
 14334                           postinc0	equ	0xFEE
 14335                           fsr0h	equ	0xFEA
 14336                           fsr0l	equ	0xFE9
 14337                           wreg	equ	0xFE8
 14338                           postinc1	equ	0xFE6
 14339                           postdec1	equ	0xFE5
 14340                           plusw1	equ	0xFE3
 14341                           fsr1h	equ	0xFE2
 14342                           fsr1l	equ	0xFE1
 14343                           indf2	equ	0xFDF
 14344                           postinc2	equ	0xFDE
 14345                           postdec2	equ	0xFDD
 14346                           fsr2h	equ	0xFDA
 14347                           fsr2l	equ	0xFD9
 14348                           status	equ	0xFD8
 14349                           
 14350 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14351 ;; Defined at:
 14352 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14353 ;; Parameters:    Size  Location     Type
 14354 ;;  frequency       4    4[BANK0 ] unsigned long 
 14355 ;;  dataRate        1    8[BANK0 ] unsigned char 
 14356 ;; Auto vars:     Size  Location     Type
 14357 ;;		None
 14358 ;; Return value:  Size  Location     Type
 14359 ;;                  1    wreg      void 
 14360 ;; Registers used:
 14361 ;;		None
 14362 ;; Tracked objects:
 14363 ;;		On entry : F/0
 14364 ;;		On exit  : F/0
 14365 ;;		Unchanged: F/0
 14366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14367 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14370 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14371 ;;Total ram usage:        5 bytes
 14372 ;; Hardware stack levels used:    1
 14373 ;; Hardware stack levels required when called:    7
 14374 ;; This function calls:
 14375 ;;		Nothing
 14376 ;; This function is called by:
 14377 ;;		_ExecuteRxParamSetupReq
 14378 ;; This function uses a non-reentrant model
 14379 ;;
 14380                           
 14381                           	psect	text75
 14382  0076DA                     __ptext75:
 14383                           	opt stack 0
 14384  0076DA                     _UpdateReceiveWindow2Parameters:
 14385                           	opt stack 17
 14386                           
 14387                           ; BSR set to: 0
 14388                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14389                           
 14390                           ; BSR set to: 0
 14391                           ;incstack = 0
 14392  0076DA  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14393                           
 14394                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14395  0076DE  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14396  0076E2  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14397  0076E6  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14398  0076EA  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14399                           
 14400                           ; BSR set to: 0
 14401  0076EE  0012               	return		;funcret
 14402  0076F0                     __end_of_UpdateReceiveWindow2Parameters:
 14403                           	opt stack 0
 14404                           tosu	equ	0xFFF
 14405                           tosh	equ	0xFFE
 14406                           tosl	equ	0xFFD
 14407                           pclath	equ	0xFFA
 14408                           tblptru	equ	0xFF8
 14409                           tblptrh	equ	0xFF7
 14410                           tblptrl	equ	0xFF6
 14411                           tablat	equ	0xFF5
 14412                           prodh	equ	0xFF4
 14413                           prodl	equ	0xFF3
 14414                           intcon	equ	0xFF2
 14415                           intcon2	equ	0xFF1
 14416                           intcon3	equ	0xFF0
 14417                           indf0	equ	0xFEF
 14418                           postinc0	equ	0xFEE
 14419                           fsr0h	equ	0xFEA
 14420                           fsr0l	equ	0xFE9
 14421                           wreg	equ	0xFE8
 14422                           postinc1	equ	0xFE6
 14423                           postdec1	equ	0xFE5
 14424                           plusw1	equ	0xFE3
 14425                           fsr1h	equ	0xFE2
 14426                           fsr1l	equ	0xFE1
 14427                           indf2	equ	0xFDF
 14428                           postinc2	equ	0xFDE
 14429                           postdec2	equ	0xFDD
 14430                           fsr2h	equ	0xFDA
 14431                           fsr2l	equ	0xFD9
 14432                           status	equ	0xFD8
 14433                           
 14434 ;; *************** function _ExecuteNewChannel *****************
 14435 ;; Defined at:
 14436 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14437 ;; Parameters:    Size  Location     Type
 14438 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14439 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;  frequency       4   19[BANK0 ] unsigned long 
 14442 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 14443 ;;  drRange         1   18[BANK0 ] struct .
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  2   16[BANK0 ] PTR unsigned char 
 14446 ;; Registers used:
 14447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14448 ;; Tracked objects:
 14449 ;;		On entry : F/0
 14450 ;;		On exit  : F/2
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;Total ram usage:        8 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    9
 14460 ;; This function calls:
 14461 ;;		_LORAWAN_SetChannelIdStatus
 14462 ;;		_UpdateChannelIdStatus
 14463 ;;		_UpdateDataRange
 14464 ;;		_UpdateDutyCycle
 14465 ;;		_UpdateFrequency
 14466 ;;		_ValidateChannelId
 14467 ;;		_ValidateDataRange
 14468 ;;		_ValidateFrequency
 14469 ;;		___lmul
 14470 ;; This function is called by:
 14471 ;;		_MacExecuteCommands
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           	psect	text76
 14476  00337A                     __ptext76:
 14477                           	opt stack 0
 14478  00337A                     _ExecuteNewChannel:
 14479                           	opt stack 16
 14480                           
 14481                           ; BSR set to: 0
 14482                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14483                           
 14484                           ; BSR set to: 0
 14485                           
 14486                           ; BSR set to: 0
 14487                           ;incstack = 0
 14488  00337A  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14489  00337E  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14490  003382  50DF               	movf	indf2,w,c
 14491  003384  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14492                           
 14493                           ; BSR set to: 0
 14494  003386  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14495  003388  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14496                           
 14497                           ; BSR set to: 0
 14498                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14499  00338A  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14500  00338E  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14501  003392  0EFF               	movlw	255
 14502  003394  14DE               	andwf	postinc2,w,c
 14503  003396  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14504  003398  0EFF               	movlw	255
 14505  00339A  14DE               	andwf	postinc2,w,c
 14506  00339C  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14507  00339E  0EFF               	movlw	255
 14508  0033A0  14DE               	andwf	postinc2,w,c
 14509  0033A2  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14510  0033A4  0E00               	movlw	0
 14511  0033A6  14DE               	andwf	postinc2,w,c
 14512  0033A8  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14513                           
 14514                           ; BSR set to: 0
 14515                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14516  0033AA  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14517  0033AE  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14518  0033B2  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14519  0033B6  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14520  0033BA  0E64               	movlw	100
 14521  0033BC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14522  0033BE  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14523  0033C0  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14524  0033C2  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14525  0033C4  EC9C  F02E         	call	___lmul	;wreg free
 14526  0033C8  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 14527  0033CC  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14528  0033D0  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14529  0033D4  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14533  0033D8  0E03               	movlw	3
 14534  0033DA  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 14535  0033DC  0E00               	movlw	0
 14536  0033DE  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14537                           
 14538                           ; BSR set to: 0
 14539                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14540  0033E0  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14541  0033E4  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14542  0033E8  50DF               	movf	indf2,w,c
 14543  0033EA  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14544                           
 14545                           ; BSR set to: 0
 14546  0033EC  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14547  0033EE  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14548                           
 14549                           ; BSR set to: 0
 14550                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14551  0033F0  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14552  0033F2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14553  0033F4  EC50  F03A         	call	_ValidateChannelId
 14554  0033F8  0900               	iorlw	0
 14555  0033FA  E12B               	bnz	l1110
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;lorawan_eu.c: 692: {
 14559                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14560  0033FC  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14561  003400  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14562  003404  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14563  003408  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14564  00340C  ECBA  F033         	call	_ValidateFrequency	;wreg free
 14565  003410  0900               	iorlw	0
 14566  003412  E005               	bz	l13580
 14567                           
 14568                           ; BSR set to: 0
 14569  003414  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14570  003416  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14571  003418  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14572  00341A  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14573  00341C  E10A               	bnz	l13582
 14574  00341E                     l13580:
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;lorawan_eu.c: 694: {
 14578                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14579  00341E  0102               	movlb	2	; () banked
 14580  003420  51A7               	movf	(_loRa+167)& (0+255),w,b
 14581  003422  0D02               	mullw	2
 14582  003424  0EA9               	movlw	low (_loRa+169)
 14583  003426  24F3               	addwf	prodl,w,c
 14584  003428  6ED9               	movwf	fsr2l,c
 14585  00342A  0E02               	movlw	high (_loRa+169)
 14586  00342C  20F4               	addwfc	prodh,w,c
 14587  00342E  6EDA               	movwf	fsr2h,c
 14588  003430  8EDF               	bsf	indf2,7,c
 14589  003432                     l13582:
 14590                           
 14591                           ;lorawan_eu.c: 696: }
 14592                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14593  003432  0100               	movlb	0	; () banked
 14594  003434  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14595  003436  ECD7  F037         	call	_ValidateDataRange
 14596  00343A  0900               	iorlw	0
 14597  00343C  E10A               	bnz	l1110
 14598                           
 14599                           ; BSR set to: 0
 14600                           ;lorawan_eu.c: 699: {
 14601                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14602  00343E  0102               	movlb	2	; () banked
 14603  003440  51A7               	movf	(_loRa+167)& (0+255),w,b
 14604  003442  0D02               	mullw	2
 14605  003444  0EA9               	movlw	low (_loRa+169)
 14606  003446  24F3               	addwf	prodl,w,c
 14607  003448  6ED9               	movwf	fsr2l,c
 14608  00344A  0E02               	movlw	high (_loRa+169)
 14609  00344C  20F4               	addwfc	prodh,w,c
 14610  00344E  6EDA               	movwf	fsr2h,c
 14611  003450  8CDF               	bsf	indf2,6,c
 14612  003452                     l1110:
 14613                           
 14614                           ;lorawan_eu.c: 701: }
 14615                           ;lorawan_eu.c: 702: }
 14616                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14617  003452  0102               	movlb	2	; () banked
 14618  003454  51A7               	movf	(_loRa+167)& (0+255),w,b
 14619  003456  0D02               	mullw	2
 14620  003458  0EA9               	movlw	low (_loRa+169)
 14621  00345A  24F3               	addwf	prodl,w,c
 14622  00345C  6ED9               	movwf	fsr2l,c
 14623  00345E  0E02               	movlw	high (_loRa+169)
 14624  003460  20F4               	addwfc	prodh,w,c
 14625  003462  6EDA               	movwf	fsr2h,c
 14626  003464  AEDF               	btfss	indf2,7,c
 14627  003466  D065               	goto	l13604
 14628                           
 14629                           ; BSR set to: 2
 14630  003468  51A7               	movf	(_loRa+167)& (0+255),w,b
 14631  00346A  0D02               	mullw	2
 14632  00346C  0EA9               	movlw	low (_loRa+169)
 14633  00346E  24F3               	addwf	prodl,w,c
 14634  003470  6ED9               	movwf	fsr2l,c
 14635  003472  0E02               	movlw	high (_loRa+169)
 14636  003474  20F4               	addwfc	prodh,w,c
 14637  003476  6EDA               	movwf	fsr2h,c
 14638  003478  ACDF               	btfss	indf2,6,c
 14639  00347A  D05B               	goto	l13604
 14640                           
 14641                           ; BSR set to: 2
 14642                           ;lorawan_eu.c: 705: {
 14643                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14644  00347C  0E10               	movlw	16
 14645  00347E  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14646  003480  D029               	goto	l13596
 14647                           
 14648                           ; BSR set to: 2
 14649                           ;lorawan_eu.c: 707: {
 14650                           ;lorawan_eu.c: 708: if (frequency != 0)
 14651  003482  0100               	movlb	0	; () banked
 14652  003484  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14653  003486  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14654  003488  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14655  00348A  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14656  00348C  E01E               	bz	l13594
 14657                           
 14658                           ; BSR set to: 0
 14659                           ;lorawan_eu.c: 709: {
 14660                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14661  00348E  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14662  003492  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14663  003496  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14664  00349A  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14665  00349E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14666  0034A0  EC4C  F037         	call	_UpdateFrequency
 14667                           
 14668                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14669  0034A4  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14670  0034A8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14671  0034AA  ECC2  F024         	call	_UpdateDataRange
 14672                           
 14673                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14674  0034AE  0E01               	movlw	1
 14675  0034B0  0100               	movlb	0	; () banked
 14676  0034B2  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14677  0034B4  0E2E               	movlw	46
 14678  0034B6  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14679  0034B8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14680  0034BA  EC24  F038         	call	_UpdateDutyCycle
 14681                           
 14682                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14683  0034BE  0E01               	movlw	1
 14684  0034C0  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14685  0034C2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14686  0034C4  ECBE  F023         	call	_UpdateChannelIdStatus
 14687                           
 14688                           ;lorawan_eu.c: 714: }
 14689  0034C8  D032               	goto	l13602
 14690  0034CA                     l13594:
 14691                           
 14692                           ; BSR set to: 0
 14693                           ;lorawan_eu.c: 715: else
 14694                           ;lorawan_eu.c: 716: {
 14695                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 14696  0034CA  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14697  0034CC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14698  0034CE  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 14699  0034D2  D02D               	goto	l13602
 14700  0034D4                     l13596:
 14701                           
 14702                           ; BSR set to: 2
 14703                           ;lorawan_eu.c: 720: else
 14704                           ;lorawan_eu.c: 721: {
 14705                           ;lorawan_eu.c: 722: if (frequency != 0)
 14706  0034D4  0100               	movlb	0	; () banked
 14707  0034D6  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14708  0034D8  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14709  0034DA  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14710  0034DC  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14711  0034DE  E022               	bz	l13600
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;lorawan_eu.c: 723: {
 14715                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 14716  0034E0  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14717  0034E4  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14718  0034E8  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14719  0034EC  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14720  0034F0  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14721  0034F2  0F10               	addlw	16
 14722  0034F4  EC4C  F037         	call	_UpdateFrequency
 14723                           
 14724                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 14725  0034F8  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14726  0034FC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14727  0034FE  0F10               	addlw	16
 14728  003500  ECC2  F024         	call	_UpdateDataRange
 14729                           
 14730                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 14731  003504  0E01               	movlw	1
 14732  003506  0100               	movlb	0	; () banked
 14733  003508  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14734  00350A  0E2E               	movlw	46
 14735  00350C  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14736  00350E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14737  003510  0F10               	addlw	16
 14738  003512  EC24  F038         	call	_UpdateDutyCycle
 14739                           
 14740                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 14741  003516  0E01               	movlw	1
 14742  003518  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14743  00351A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14744  00351C  0F10               	addlw	16
 14745  00351E  ECBE  F023         	call	_UpdateChannelIdStatus
 14746                           
 14747                           ;lorawan_eu.c: 728: }
 14748  003522  D005               	goto	l13602
 14749  003524                     l13600:
 14750                           
 14751                           ; BSR set to: 0
 14752                           ;lorawan_eu.c: 729: else
 14753                           ;lorawan_eu.c: 730: {
 14754                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 14755  003524  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14756  003526  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14757  003528  0F10               	addlw	16
 14758  00352A  EC69  F037         	call	_LORAWAN_SetChannelIdStatus
 14759  00352E                     l13602:
 14760                           
 14761                           ;lorawan_eu.c: 732: }
 14762                           ;lorawan_eu.c: 733: }
 14763                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 14764  00352E  0102               	movlb	2	; () banked
 14765  003530  8703               	bsf	(_loRa+3)& (0+255),3,b
 14766  003532                     l13604:
 14767                           
 14768                           ; BSR set to: 2
 14769                           ;lorawan_eu.c: 736: }
 14770                           ;lorawan_eu.c: 737: return ptr;
 14771  003532  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 14772  003536  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 14773                           
 14774                           ; BSR set to: 2
 14775  00353A  0012               	return		;funcret
 14776  00353C                     __end_of_ExecuteNewChannel:
 14777                           	opt stack 0
 14778                           tosu	equ	0xFFF
 14779                           tosh	equ	0xFFE
 14780                           tosl	equ	0xFFD
 14781                           pclath	equ	0xFFA
 14782                           tblptru	equ	0xFF8
 14783                           tblptrh	equ	0xFF7
 14784                           tblptrl	equ	0xFF6
 14785                           tablat	equ	0xFF5
 14786                           prodh	equ	0xFF4
 14787                           prodl	equ	0xFF3
 14788                           intcon	equ	0xFF2
 14789                           intcon2	equ	0xFF1
 14790                           intcon3	equ	0xFF0
 14791                           indf0	equ	0xFEF
 14792                           postinc0	equ	0xFEE
 14793                           fsr0h	equ	0xFEA
 14794                           fsr0l	equ	0xFE9
 14795                           wreg	equ	0xFE8
 14796                           postinc1	equ	0xFE6
 14797                           postdec1	equ	0xFE5
 14798                           plusw1	equ	0xFE3
 14799                           fsr1h	equ	0xFE2
 14800                           fsr1l	equ	0xFE1
 14801                           indf2	equ	0xFDF
 14802                           postinc2	equ	0xFDE
 14803                           postdec2	equ	0xFDD
 14804                           fsr2h	equ	0xFDA
 14805                           fsr2l	equ	0xFD9
 14806                           status	equ	0xFD8
 14807                           
 14808 ;; *************** function _ValidateFrequency *****************
 14809 ;; Defined at:
 14810 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;  result          1    8[BANK0 ] enum E8016
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      enum E8016
 14817 ;; Registers used:
 14818 ;;		wreg, status,2, status,0
 14819 ;; Tracked objects:
 14820 ;;		On entry : F/0
 14821 ;;		On exit  : F/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14824 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14827 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;Total ram usage:        5 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; Hardware stack levels required when called:    7
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		_ExecuteNewChannel
 14835 ;;		_ExecuteRxParamSetupReq
 14836 ;;		_UpdateCfList
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text77
 14841  006774                     __ptext77:
 14842                           	opt stack 0
 14843  006774                     _ValidateFrequency:
 14844                           	opt stack 18
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 14848                           
 14849                           ; BSR set to: 2
 14850                           ;incstack = 0
 14851  006774  6B68               	clrf	ValidateFrequency@result& (0+255),b
 14852                           
 14853                           ; BSR set to: 0
 14854                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 14855  006776  0102               	movlb	2	; () banked
 14856  006778  51A4               	movf	(_loRa+164)& (0+255),w,b
 14857  00677A  E116               	bnz	l12842
 14858                           
 14859                           ; BSR set to: 2
 14860                           ;lorawan_eu.c: 1093: {
 14861                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 14862  00677C  0E81               	movlw	129
 14863  00677E  0100               	movlb	0	; () banked
 14864  006780  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14865  006782  0E25               	movlw	37
 14866  006784  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14867  006786  0EDB               	movlw	219
 14868  006788  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14869  00678A  0E33               	movlw	51
 14870  00678C  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14871  00678E  E209               	bc	l12840
 14872                           
 14873                           ; BSR set to: 0
 14874  006790  0EC0               	movlw	192
 14875  006792  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14876  006794  0E55               	movlw	85
 14877  006796  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14878  006798  0E70               	movlw	112
 14879  00679A  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14880  00679C  0E33               	movlw	51
 14881  00679E  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14882  0067A0  E215               	bc	l1231
 14883  0067A2                     l12840:
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;lorawan_eu.c: 1095: {
 14887                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 14888  0067A2  0E03               	movlw	3
 14889  0067A4  6F68               	movwf	ValidateFrequency@result& (0+255),b
 14890  0067A6  D012               	goto	l1231
 14891  0067A8                     l12842:
 14892                           
 14893                           ; BSR set to: 2
 14894                           ;lorawan_eu.c: 1099: else
 14895                           ;lorawan_eu.c: 1100: {
 14896                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 14897  0067A8  0E71               	movlw	113
 14898  0067AA  0100               	movlb	0	; () banked
 14899  0067AC  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14900  0067AE  0E5E               	movlw	94
 14901  0067B0  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14902  0067B2  0EEA               	movlw	234
 14903  0067B4  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14904  0067B6  0E19               	movlw	25
 14905  0067B8  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14906  0067BA  E2F3               	bc	l12840
 14907                           
 14908                           ; BSR set to: 0
 14909  0067BC  0E90               	movlw	144
 14910  0067BE  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14911  0067C0  0ED1               	movlw	209
 14912  0067C2  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14913  0067C4  0ECF               	movlw	207
 14914  0067C6  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14915  0067C8  0E19               	movlw	25
 14916  0067CA  D7E9               	goto	L7
 14917  0067CC                     l1231:
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;lorawan_eu.c: 1104: }
 14921                           ;lorawan_eu.c: 1105: }
 14922                           ;lorawan_eu.c: 1107: return result;
 14923  0067CC  5168               	movf	ValidateFrequency@result& (0+255),w,b
 14924                           
 14925                           ; BSR set to: 0
 14926  0067CE  0012               	return		;funcret
 14927  0067D0                     __end_of_ValidateFrequency:
 14928                           	opt stack 0
 14929                           tosu	equ	0xFFF
 14930                           tosh	equ	0xFFE
 14931                           tosl	equ	0xFFD
 14932                           pclath	equ	0xFFA
 14933                           tblptru	equ	0xFF8
 14934                           tblptrh	equ	0xFF7
 14935                           tblptrl	equ	0xFF6
 14936                           tablat	equ	0xFF5
 14937                           prodh	equ	0xFF4
 14938                           prodl	equ	0xFF3
 14939                           intcon	equ	0xFF2
 14940                           intcon2	equ	0xFF1
 14941                           intcon3	equ	0xFF0
 14942                           indf0	equ	0xFEF
 14943                           postinc0	equ	0xFEE
 14944                           fsr0h	equ	0xFEA
 14945                           fsr0l	equ	0xFE9
 14946                           wreg	equ	0xFE8
 14947                           postinc1	equ	0xFE6
 14948                           postdec1	equ	0xFE5
 14949                           plusw1	equ	0xFE3
 14950                           fsr1h	equ	0xFE2
 14951                           fsr1l	equ	0xFE1
 14952                           indf2	equ	0xFDF
 14953                           postinc2	equ	0xFDE
 14954                           postdec2	equ	0xFDD
 14955                           fsr2h	equ	0xFDA
 14956                           fsr2l	equ	0xFD9
 14957                           status	equ	0xFD8
 14958                           
 14959 ;; *************** function _ValidateDataRange *****************
 14960 ;; Defined at:
 14961 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;  dataRangeNew    1    wreg     unsigned char 
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 14966 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 14967 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 14968 ;;  result          1    6[BANK0 ] enum E8016
 14969 ;; Return value:  Size  Location     Type
 14970 ;;                  1    wreg      enum E8016
 14971 ;; Registers used:
 14972 ;;		wreg, status,2, status,0, cstack
 14973 ;; Tracked objects:
 14974 ;;		On entry : F/0
 14975 ;;		On exit  : F/0
 14976 ;;		Unchanged: 0/0
 14977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14979 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14981 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14982 ;;Total ram usage:        4 bytes
 14983 ;; Hardware stack levels used:    1
 14984 ;; Hardware stack levels required when called:    8
 14985 ;; This function calls:
 14986 ;;		_ValidateDataRate
 14987 ;; This function is called by:
 14988 ;;		_ExecuteNewChannel
 14989 ;; This function uses a non-reentrant model
 14990 ;;
 14991                           
 14992                           	psect	text78
 14993  006FAE                     __ptext78:
 14994                           	opt stack 0
 14995  006FAE                     _ValidateDataRange:
 14996                           	opt stack 16
 14997                           
 14998                           ; BSR set to: 0
 14999                           ;incstack = 0
 15000                           ;ValidateDataRange@dataRangeNew stored from wreg
 15001  006FAE  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15002                           
 15003                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15004  006FB0  0100               	movlb	0	; () banked
 15005  006FB2  6B66               	clrf	ValidateDataRange@result& (0+255),b
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15009                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15010  006FB4  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15011  006FB6  0B0F               	andlw	15
 15012  006FB8  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15013                           
 15014                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15015  006FBA  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15016  006FBC  0B0F               	andlw	15
 15017  006FBE  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15018                           
 15019                           ; BSR set to: 0
 15020                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15021  006FC0  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15022  006FC2  EC8D  F03B         	call	_ValidateDataRate
 15023  006FC6  0900               	iorlw	0
 15024  006FC8  E108               	bnz	l12862
 15025                           
 15026                           ; BSR set to: 0
 15027  006FCA  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15028  006FCC  EC8D  F03B         	call	_ValidateDataRate
 15029  006FD0  0900               	iorlw	0
 15030  006FD2  E103               	bnz	l12862
 15031                           
 15032                           ; BSR set to: 0
 15033  006FD4  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15034  006FD6  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15035  006FD8  E202               	bc	l1238
 15036  006FDA                     l12862:
 15037                           
 15038                           ; BSR set to: 0
 15039                           ;lorawan_eu.c: 1119: {
 15040                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15041  006FDA  0E03               	movlw	3
 15042  006FDC  6F66               	movwf	ValidateDataRange@result& (0+255),b
 15043  006FDE                     l1238:
 15044                           
 15045                           ; BSR set to: 0
 15046                           ;lorawan_eu.c: 1121: }
 15047                           ;lorawan_eu.c: 1122: return result;
 15048  006FDE  5166               	movf	ValidateDataRange@result& (0+255),w,b
 15049                           
 15050                           ; BSR set to: 0
 15051  006FE0  0012               	return		;funcret
 15052  006FE2                     __end_of_ValidateDataRange:
 15053                           	opt stack 0
 15054                           tosu	equ	0xFFF
 15055                           tosh	equ	0xFFE
 15056                           tosl	equ	0xFFD
 15057                           pclath	equ	0xFFA
 15058                           tblptru	equ	0xFF8
 15059                           tblptrh	equ	0xFF7
 15060                           tblptrl	equ	0xFF6
 15061                           tablat	equ	0xFF5
 15062                           prodh	equ	0xFF4
 15063                           prodl	equ	0xFF3
 15064                           intcon	equ	0xFF2
 15065                           intcon2	equ	0xFF1
 15066                           intcon3	equ	0xFF0
 15067                           indf0	equ	0xFEF
 15068                           postinc0	equ	0xFEE
 15069                           fsr0h	equ	0xFEA
 15070                           fsr0l	equ	0xFE9
 15071                           wreg	equ	0xFE8
 15072                           postinc1	equ	0xFE6
 15073                           postdec1	equ	0xFE5
 15074                           plusw1	equ	0xFE3
 15075                           fsr1h	equ	0xFE2
 15076                           fsr1l	equ	0xFE1
 15077                           indf2	equ	0xFDF
 15078                           postinc2	equ	0xFDE
 15079                           postdec2	equ	0xFDD
 15080                           fsr2h	equ	0xFDA
 15081                           fsr2l	equ	0xFD9
 15082                           status	equ	0xFD8
 15083                           
 15084 ;; *************** function _UpdateFrequency *****************
 15085 ;; Defined at:
 15086 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15087 ;; Parameters:    Size  Location     Type
 15088 ;;  channelId       1    wreg     unsigned char 
 15089 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15090 ;; Auto vars:     Size  Location     Type
 15091 ;;  channelId       1    8[BANK0 ] unsigned char 
 15092 ;; Return value:  Size  Location     Type
 15093 ;;                  1    wreg      void 
 15094 ;; Registers used:
 15095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15096 ;; Tracked objects:
 15097 ;;		On entry : F/0
 15098 ;;		On exit  : F/0
 15099 ;;		Unchanged: 0/0
 15100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15104 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15105 ;;Total ram usage:        5 bytes
 15106 ;; Hardware stack levels used:    1
 15107 ;; Hardware stack levels required when called:    7
 15108 ;; This function calls:
 15109 ;;		Nothing
 15110 ;; This function is called by:
 15111 ;;		_ExecuteNewChannel
 15112 ;; This function uses a non-reentrant model
 15113 ;;
 15114                           
 15115                           	psect	text79
 15116  006E98                     __ptext79:
 15117                           	opt stack 0
 15118  006E98                     _UpdateFrequency:
 15119                           	opt stack 17
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;incstack = 0
 15123                           ;UpdateFrequency@channelId stored from wreg
 15124  006E98  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 15125                           
 15126                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15127  006E9A  0100               	movlb	0	; () banked
 15128  006E9C  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15129  006E9E  0D0E               	mullw	14
 15130  006EA0  0E00               	movlw	low _Channels
 15131  006EA2  24F3               	addwf	prodl,w,c
 15132  006EA4  6ED9               	movwf	fsr2l,c
 15133  006EA6  0E04               	movlw	high _Channels
 15134  006EA8  20F4               	addwfc	prodh,w,c
 15135  006EAA  6EDA               	movwf	fsr2h,c
 15136  006EAC  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15137  006EB0  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15138  006EB4  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15139  006EB8  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15140                           
 15141                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15142  006EBC  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15143  006EBE  0D0E               	mullw	14
 15144  006EC0  0E0D               	movlw	low (_Channels+13)
 15145  006EC2  24F3               	addwf	prodl,w,c
 15146  006EC4  6ED9               	movwf	fsr2l,c
 15147  006EC6  0E04               	movlw	high (_Channels+13)
 15148  006EC8  20F4               	addwfc	prodh,w,c
 15149  006ECA  6EDA               	movwf	fsr2h,c
 15150  006ECC  0E00               	movlw	0
 15151  006ECE  80DB               	bsf	plusw2,0,c
 15152                           
 15153                           ; BSR set to: 0
 15154  006ED0  0C00               	retlw	0	;funcret
 15155  006ED2                     __end_of_UpdateFrequency:
 15156                           	opt stack 0
 15157                           tosu	equ	0xFFF
 15158                           tosh	equ	0xFFE
 15159                           tosl	equ	0xFFD
 15160                           pclath	equ	0xFFA
 15161                           tblptru	equ	0xFF8
 15162                           tblptrh	equ	0xFF7
 15163                           tblptrl	equ	0xFF6
 15164                           tablat	equ	0xFF5
 15165                           prodh	equ	0xFF4
 15166                           prodl	equ	0xFF3
 15167                           intcon	equ	0xFF2
 15168                           intcon2	equ	0xFF1
 15169                           intcon3	equ	0xFF0
 15170                           indf0	equ	0xFEF
 15171                           postinc0	equ	0xFEE
 15172                           fsr0h	equ	0xFEA
 15173                           fsr0l	equ	0xFE9
 15174                           wreg	equ	0xFE8
 15175                           postinc1	equ	0xFE6
 15176                           postdec1	equ	0xFE5
 15177                           plusw1	equ	0xFE3
 15178                           fsr1h	equ	0xFE2
 15179                           fsr1l	equ	0xFE1
 15180                           indf2	equ	0xFDF
 15181                           postinc2	equ	0xFDE
 15182                           postdec2	equ	0xFDD
 15183                           plusw2	equ	0xFDB
 15184                           fsr2h	equ	0xFDA
 15185                           fsr2l	equ	0xFD9
 15186                           status	equ	0xFD8
 15187                           
 15188 ;; *************** function _UpdateDutyCycle *****************
 15189 ;; Defined at:
 15190 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;  channelId       1    wreg     unsigned char 
 15193 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  channelId       1    6[BANK0 ] unsigned char 
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  1    wreg      void 
 15198 ;; Registers used:
 15199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15200 ;; Tracked objects:
 15201 ;;		On entry : F/0
 15202 ;;		On exit  : F/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15208 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15209 ;;Total ram usage:        3 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; Hardware stack levels required when called:    7
 15212 ;; This function calls:
 15213 ;;		Nothing
 15214 ;; This function is called by:
 15215 ;;		_ExecuteNewChannel
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           	psect	text80
 15220  007048                     __ptext80:
 15221                           	opt stack 0
 15222  007048                     _UpdateDutyCycle:
 15223                           	opt stack 17
 15224                           
 15225                           ; BSR set to: 0
 15226                           ;incstack = 0
 15227                           ;UpdateDutyCycle@channelId stored from wreg
 15228  007048  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15229                           
 15230                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15231  00704A  0100               	movlb	0	; () banked
 15232  00704C  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15233  00704E  0D0E               	mullw	14
 15234  007050  0E06               	movlw	low (_Channels+6)
 15235  007052  24F3               	addwf	prodl,w,c
 15236  007054  6ED9               	movwf	fsr2l,c
 15237  007056  0E04               	movlw	high (_Channels+6)
 15238  007058  20F4               	addwfc	prodh,w,c
 15239  00705A  6EDA               	movwf	fsr2h,c
 15240  00705C  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15241  007060  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15242                           
 15243                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15244  007064  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15245  007066  0D0E               	mullw	14
 15246  007068  0E0D               	movlw	low (_Channels+13)
 15247  00706A  24F3               	addwf	prodl,w,c
 15248  00706C  6ED9               	movwf	fsr2l,c
 15249  00706E  0E04               	movlw	high (_Channels+13)
 15250  007070  20F4               	addwfc	prodh,w,c
 15251  007072  6EDA               	movwf	fsr2h,c
 15252  007074  0E00               	movlw	0
 15253  007076  84DB               	bsf	plusw2,2,c
 15254                           
 15255                           ; BSR set to: 0
 15256  007078  0C00               	retlw	0	;funcret
 15257  00707A                     __end_of_UpdateDutyCycle:
 15258                           	opt stack 0
 15259                           tosu	equ	0xFFF
 15260                           tosh	equ	0xFFE
 15261                           tosl	equ	0xFFD
 15262                           pclath	equ	0xFFA
 15263                           tblptru	equ	0xFF8
 15264                           tblptrh	equ	0xFF7
 15265                           tblptrl	equ	0xFF6
 15266                           tablat	equ	0xFF5
 15267                           prodh	equ	0xFF4
 15268                           prodl	equ	0xFF3
 15269                           intcon	equ	0xFF2
 15270                           intcon2	equ	0xFF1
 15271                           intcon3	equ	0xFF0
 15272                           indf0	equ	0xFEF
 15273                           postinc0	equ	0xFEE
 15274                           fsr0h	equ	0xFEA
 15275                           fsr0l	equ	0xFE9
 15276                           wreg	equ	0xFE8
 15277                           postinc1	equ	0xFE6
 15278                           postdec1	equ	0xFE5
 15279                           plusw1	equ	0xFE3
 15280                           fsr1h	equ	0xFE2
 15281                           fsr1l	equ	0xFE1
 15282                           indf2	equ	0xFDF
 15283                           postinc2	equ	0xFDE
 15284                           postdec2	equ	0xFDD
 15285                           plusw2	equ	0xFDB
 15286                           fsr2h	equ	0xFDA
 15287                           fsr2l	equ	0xFD9
 15288                           status	equ	0xFD8
 15289                           
 15290 ;; *************** function _UpdateDataRange *****************
 15291 ;; Defined at:
 15292 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15293 ;; Parameters:    Size  Location     Type
 15294 ;;  channelId       1    wreg     unsigned char 
 15295 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 15296 ;; Auto vars:     Size  Location     Type
 15297 ;;  channelId       1    6[BANK0 ] unsigned char 
 15298 ;;  i               1    7[BANK0 ] unsigned char 
 15299 ;; Return value:  Size  Location     Type
 15300 ;;                  1    wreg      void 
 15301 ;; Registers used:
 15302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15303 ;; Tracked objects:
 15304 ;;		On entry : F/0
 15305 ;;		On exit  : F/2
 15306 ;;		Unchanged: 0/0
 15307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15308 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15309 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15310 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15311 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15312 ;;Total ram usage:        4 bytes
 15313 ;; Hardware stack levels used:    1
 15314 ;; Hardware stack levels required when called:    7
 15315 ;; This function calls:
 15316 ;;		Nothing
 15317 ;; This function is called by:
 15318 ;;		_ExecuteNewChannel
 15319 ;; This function uses a non-reentrant model
 15320 ;;
 15321                           
 15322                           	psect	text81
 15323  004984                     __ptext81:
 15324                           	opt stack 0
 15325  004984                     _UpdateDataRange:
 15326                           	opt stack 17
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;incstack = 0
 15330                           ;UpdateDataRange@channelId stored from wreg
 15331  004984  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 15332                           
 15333                           ;lorawan_eu.c: 1011: uint8_t i;
 15334                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15335  004986  0E07               	movlw	7
 15336  004988  0102               	movlb	2	; () banked
 15337  00498A  6FEB               	movwf	(_loRa+235)& (0+255),b
 15338                           
 15339                           ; BSR set to: 2
 15340                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15341  00498C  6BEC               	clrf	(_loRa+236)& (0+255),b
 15342                           
 15343                           ; BSR set to: 2
 15344                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15345  00498E  0100               	movlb	0	; () banked
 15346  004990  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15347  004992  0D0E               	mullw	14
 15348  004994  0E05               	movlw	low (_Channels+5)
 15349  004996  24F3               	addwf	prodl,w,c
 15350  004998  6ED9               	movwf	fsr2l,c
 15351  00499A  0E04               	movlw	high (_Channels+5)
 15352  00499C  20F4               	addwfc	prodh,w,c
 15353  00499E  6EDA               	movwf	fsr2h,c
 15354  0049A0  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15355                           
 15356                           ; BSR set to: 0
 15357                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15358  0049A4  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15359  0049A6  0D0E               	mullw	14
 15360  0049A8  0E0D               	movlw	low (_Channels+13)
 15361  0049AA  24F3               	addwf	prodl,w,c
 15362  0049AC  6ED9               	movwf	fsr2l,c
 15363  0049AE  0E04               	movlw	high (_Channels+13)
 15364  0049B0  20F4               	addwfc	prodh,w,c
 15365  0049B2  6EDA               	movwf	fsr2h,c
 15366  0049B4  0E00               	movlw	0
 15367  0049B6  82DB               	bsf	plusw2,1,c
 15368                           
 15369                           ; BSR set to: 0
 15370                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15371  0049B8  6B67               	clrf	UpdateDataRange@i& (0+255),b
 15372  0049BA  D04E               	goto	l12888
 15373  0049BC                     l12876:
 15374                           
 15375                           ; BSR set to: 0
 15376                           ;lorawan_eu.c: 1020: {
 15377                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15378  0049BC  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15379  0049BE  0D0E               	mullw	14
 15380  0049C0  0E05               	movlw	low (_Channels+5)
 15381  0049C2  24F3               	addwf	prodl,w,c
 15382  0049C4  6ED9               	movwf	fsr2l,c
 15383  0049C6  0E04               	movlw	high (_Channels+5)
 15384  0049C8  20F4               	addwfc	prodh,w,c
 15385  0049CA  6EDA               	movwf	fsr2h,c
 15386  0049CC  50DF               	movf	223,w,c
 15387  0049CE  0B0F               	andlw	15
 15388  0049D0  0100               	movlb	0	; () banked
 15389  0049D2  6F65               	movwf	??_UpdateDataRange& (0+255),b
 15390  0049D4  0102               	movlb	2	; () banked
 15391  0049D6  51EB               	movf	(_loRa+235)& (0+255),w,b
 15392  0049D8  0100               	movlb	0	; () banked
 15393  0049DA  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 15394  0049DC  E216               	bc	l1204
 15395                           
 15396                           ; BSR set to: 0
 15397  0049DE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15398  0049E0  0D0E               	mullw	14
 15399  0049E2  0E04               	movlw	low (_Channels+4)
 15400  0049E4  24F3               	addwf	prodl,w,c
 15401  0049E6  6ED9               	movwf	fsr2l,c
 15402  0049E8  0E04               	movlw	high (_Channels+4)
 15403  0049EA  20F4               	addwfc	prodh,w,c
 15404  0049EC  6EDA               	movwf	fsr2h,c
 15405  0049EE  04DE               	decf	postinc2,w,c
 15406  0049F0  E10C               	bnz	l1204
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;lorawan_eu.c: 1022: {
 15410                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15411  0049F2  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15412  0049F4  0D0E               	mullw	14
 15413  0049F6  0E05               	movlw	low (_Channels+5)
 15414  0049F8  24F3               	addwf	prodl,w,c
 15415  0049FA  6ED9               	movwf	fsr2l,c
 15416  0049FC  0E04               	movlw	high (_Channels+5)
 15417  0049FE  20F4               	addwfc	prodh,w,c
 15418  004A00  6EDA               	movwf	fsr2h,c
 15419  004A02  50DF               	movf	223,w,c
 15420  004A04  0B0F               	andlw	15
 15421  004A06  0102               	movlb	2	; () banked
 15422  004A08  6FEB               	movwf	(_loRa+235)& (0+255),b
 15423  004A0A                     l1204:
 15424                           
 15425                           ;lorawan_eu.c: 1024: }
 15426                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15427  004A0A  0100               	movlb	0	; () banked
 15428  004A0C  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15429  004A0E  0D0E               	mullw	14
 15430  004A10  0E05               	movlw	low (_Channels+5)
 15431  004A12  24F3               	addwf	prodl,w,c
 15432  004A14  6ED9               	movwf	fsr2l,c
 15433  004A16  0E04               	movlw	high (_Channels+5)
 15434  004A18  20F4               	addwfc	prodh,w,c
 15435  004A1A  6EDA               	movwf	fsr2h,c
 15436  004A1C  38DF               	swapf	223,w,c
 15437  004A1E  0B0F               	andlw	15
 15438  004A20  0102               	movlb	2	; () banked
 15439  004A22  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15440  004A24  D017               	goto	l12886
 15441                           
 15442                           ; BSR set to: 2
 15443  004A26  0100               	movlb	0	; () banked
 15444  004A28  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15445  004A2A  0D0E               	mullw	14
 15446  004A2C  0E04               	movlw	low (_Channels+4)
 15447  004A2E  24F3               	addwf	prodl,w,c
 15448  004A30  6ED9               	movwf	fsr2l,c
 15449  004A32  0E04               	movlw	high (_Channels+4)
 15450  004A34  20F4               	addwfc	prodh,w,c
 15451  004A36  6EDA               	movwf	fsr2h,c
 15452  004A38  04DE               	decf	postinc2,w,c
 15453  004A3A  E10C               	bnz	l12886
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;lorawan_eu.c: 1026: {
 15457                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15458  004A3C  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15459  004A3E  0D0E               	mullw	14
 15460  004A40  0E05               	movlw	low (_Channels+5)
 15461  004A42  24F3               	addwf	prodl,w,c
 15462  004A44  6ED9               	movwf	fsr2l,c
 15463  004A46  0E04               	movlw	high (_Channels+5)
 15464  004A48  20F4               	addwfc	prodh,w,c
 15465  004A4A  6EDA               	movwf	fsr2h,c
 15466  004A4C  38DF               	swapf	223,w,c
 15467  004A4E  0B0F               	andlw	15
 15468  004A50  0102               	movlb	2	; () banked
 15469  004A52  6FEC               	movwf	(_loRa+236)& (0+255),b
 15470  004A54                     l12886:
 15471  004A54  0100               	movlb	0	; () banked
 15472  004A56  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 15473  004A58                     l12888:
 15474                           
 15475                           ; BSR set to: 0
 15476  004A58  0102               	movlb	2	; () banked
 15477  004A5A  51ED               	movf	(_loRa+237)& (0+255),w,b
 15478  004A5C  0100               	movlb	0	; () banked
 15479  004A5E  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 15480  004A60  E3AD               	bnc	l12876
 15481                           
 15482                           ; BSR set to: 0
 15483                           ;lorawan_eu.c: 1028: }
 15484                           ;lorawan_eu.c: 1029: }
 15485                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15486  004A62  0102               	movlb	2	; () banked
 15487  004A64  51DF               	movf	(_loRa+223)& (0+255),w,b
 15488  004A66  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15489  004A68  E202               	bc	l12894
 15490                           
 15491                           ; BSR set to: 2
 15492                           ;lorawan_eu.c: 1032: {
 15493                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15494  004A6A  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15495  004A6E                     l12894:
 15496                           
 15497                           ; BSR set to: 2
 15498                           ;lorawan_eu.c: 1034: }
 15499                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15500  004A6E  51EB               	movf	(_loRa+235)& (0+255),w,b
 15501  004A70  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15502  004A72  A0D8               	btfss	status,0,c
 15503                           
 15504                           ; BSR set to: 2
 15505                           ;lorawan_eu.c: 1037: {
 15506                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15507  004A74  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15508                           
 15509                           ; BSR set to: 2
 15510  004A78  0012               	return		;funcret
 15511  004A7A                     __end_of_UpdateDataRange:
 15512                           	opt stack 0
 15513                           tosu	equ	0xFFF
 15514                           tosh	equ	0xFFE
 15515                           tosl	equ	0xFFD
 15516                           pclath	equ	0xFFA
 15517                           tblptru	equ	0xFF8
 15518                           tblptrh	equ	0xFF7
 15519                           tblptrl	equ	0xFF6
 15520                           tablat	equ	0xFF5
 15521                           prodh	equ	0xFF4
 15522                           prodl	equ	0xFF3
 15523                           intcon	equ	0xFF2
 15524                           intcon2	equ	0xFF1
 15525                           intcon3	equ	0xFF0
 15526                           indf0	equ	0xFEF
 15527                           postinc0	equ	0xFEE
 15528                           fsr0h	equ	0xFEA
 15529                           fsr0l	equ	0xFE9
 15530                           wreg	equ	0xFE8
 15531                           postinc1	equ	0xFE6
 15532                           postdec1	equ	0xFE5
 15533                           plusw1	equ	0xFE3
 15534                           fsr1h	equ	0xFE2
 15535                           fsr1l	equ	0xFE1
 15536                           indf2	equ	0xFDF
 15537                           postinc2	equ	0xFDE
 15538                           postdec2	equ	0xFDD
 15539                           plusw2	equ	0xFDB
 15540                           fsr2h	equ	0xFDA
 15541                           fsr2l	equ	0xFD9
 15542                           status	equ	0xFD8
 15543                           
 15544 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15545 ;; Defined at:
 15546 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15547 ;; Parameters:    Size  Location     Type
 15548 ;;  channelId       1    wreg     unsigned char 
 15549 ;;  statusNew       1    8[BANK0 ] unsigned char 
 15550 ;; Auto vars:     Size  Location     Type
 15551 ;;  channelId       1   10[BANK0 ] unsigned char 
 15552 ;;  result          1    0        enum E8016
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  1    wreg      enum E8016
 15555 ;; Registers used:
 15556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15557 ;; Tracked objects:
 15558 ;;		On entry : F/0
 15559 ;;		On exit  : D/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15562 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15565 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;Total ram usage:        3 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; Hardware stack levels required when called:    8
 15569 ;; This function calls:
 15570 ;;		_UpdateChannelIdStatus
 15571 ;;		_ValidateChannelId
 15572 ;; This function is called by:
 15573 ;;		_ExecuteNewChannel
 15574 ;;		_UpdateCfList
 15575 ;; This function uses a non-reentrant model
 15576 ;;
 15577                           
 15578                           	psect	text82
 15579  006ED2                     __ptext82:
 15580                           	opt stack 0
 15581  006ED2                     _LORAWAN_SetChannelIdStatus:
 15582                           	opt stack 17
 15583                           
 15584                           ; BSR set to: 2
 15585                           ;incstack = 0
 15586                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15587  006ED2  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15588                           
 15589                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15590  006ED4  0E01               	movlw	1
 15591  006ED6  0100               	movlb	0	; () banked
 15592  006ED8  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15593  006EDA  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15594  006EDC  EC50  F03A         	call	_ValidateChannelId
 15595  006EE0  0900               	iorlw	0
 15596  006EE2  E001               	bz	l12904
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;lorawan_eu.c: 290: }
 15600  006EE4  0012               	return	
 15601  006EE6                     l12904:
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;lorawan_eu.c: 292: else
 15605                           ;lorawan_eu.c: 293: {
 15606                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 15607  006EE6  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15608  006EE8  0D0E               	mullw	14
 15609  006EEA  0E0D               	movlw	low (_Channels+13)
 15610  006EEC  24F3               	addwf	prodl,w,c
 15611  006EEE  6ED9               	movwf	fsr2l,c
 15612  006EF0  0E04               	movlw	high (_Channels+13)
 15613  006EF2  20F4               	addwfc	prodh,w,c
 15614  006EF4  6EDA               	movwf	fsr2h,c
 15615  006EF6  50DF               	movf	indf2,w,c
 15616  006EF8  0B07               	andlw	7
 15617  006EFA  0A07               	xorlw	7
 15618  006EFC  A4D8               	btfss	status,2,c
 15619  006EFE  0012               	return	
 15620                           
 15621                           ; BSR set to: 0
 15622                           ;lorawan_eu.c: 295: {
 15623                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 15624  006F00  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 15625  006F04  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15626  006F06  EFBE  F023         	goto	_UpdateChannelIdStatus
 15627  006F0A                     __end_of_LORAWAN_SetChannelIdStatus:
 15628                           	opt stack 0
 15629                           tosu	equ	0xFFF
 15630                           tosh	equ	0xFFE
 15631                           tosl	equ	0xFFD
 15632                           pclath	equ	0xFFA
 15633                           tblptru	equ	0xFF8
 15634                           tblptrh	equ	0xFF7
 15635                           tblptrl	equ	0xFF6
 15636                           tablat	equ	0xFF5
 15637                           prodh	equ	0xFF4
 15638                           prodl	equ	0xFF3
 15639                           intcon	equ	0xFF2
 15640                           intcon2	equ	0xFF1
 15641                           intcon3	equ	0xFF0
 15642                           indf0	equ	0xFEF
 15643                           postinc0	equ	0xFEE
 15644                           fsr0h	equ	0xFEA
 15645                           fsr0l	equ	0xFE9
 15646                           wreg	equ	0xFE8
 15647                           postinc1	equ	0xFE6
 15648                           postdec1	equ	0xFE5
 15649                           plusw1	equ	0xFE3
 15650                           fsr1h	equ	0xFE2
 15651                           fsr1l	equ	0xFE1
 15652                           indf2	equ	0xFDF
 15653                           postinc2	equ	0xFDE
 15654                           postdec2	equ	0xFDD
 15655                           plusw2	equ	0xFDB
 15656                           fsr2h	equ	0xFDA
 15657                           fsr2l	equ	0xFD9
 15658                           status	equ	0xFD8
 15659                           
 15660 ;; *************** function _ValidateChannelId *****************
 15661 ;; Defined at:
 15662 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15663 ;; Parameters:    Size  Location     Type
 15664 ;;  channelId       1    wreg     unsigned char 
 15665 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 15666 ;; Auto vars:     Size  Location     Type
 15667 ;;  channelId       1    6[BANK0 ] unsigned char 
 15668 ;;  result          1    5[BANK0 ] enum E8016
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  1    wreg      enum E8016
 15671 ;; Registers used:
 15672 ;;		wreg, status,2, status,0
 15673 ;; Tracked objects:
 15674 ;;		On entry : F/0
 15675 ;;		On exit  : F/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15678 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15681 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15682 ;;Total ram usage:        3 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; Hardware stack levels required when called:    7
 15685 ;; This function calls:
 15686 ;;		Nothing
 15687 ;; This function is called by:
 15688 ;;		_LORAWAN_SetChannelIdStatus
 15689 ;;		_ExecuteNewChannel
 15690 ;; This function uses a non-reentrant model
 15691 ;;
 15692                           
 15693                           	psect	text83
 15694  0074A0                     __ptext83:
 15695                           	opt stack 0
 15696  0074A0                     _ValidateChannelId:
 15697                           	opt stack 17
 15698                           
 15699                           ;incstack = 0
 15700                           ;ValidateChannelId@channelId stored from wreg
 15701  0074A0  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 15702                           
 15703                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 15704  0074A2  0100               	movlb	0	; () banked
 15705  0074A4  6B65               	clrf	ValidateChannelId@result& (0+255),b
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 15709  0074A6  0E10               	movlw	16
 15710  0074A8  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15711  0074AA  D005               	goto	l12630
 15712                           
 15713                           ; BSR set to: 0
 15714  0074AC  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 15715  0074AE  E105               	bnz	l1244
 15716                           
 15717                           ; BSR set to: 0
 15718  0074B0  0E03               	movlw	3
 15719  0074B2  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15720  0074B4  D002               	goto	l1244
 15721  0074B6                     l12630:
 15722                           
 15723                           ; BSR set to: 0
 15724                           ;lorawan_eu.c: 1130: {
 15725                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 15726  0074B6  0E03               	movlw	3
 15727  0074B8  6F65               	movwf	ValidateChannelId@result& (0+255),b
 15728  0074BA                     l1244:
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;lorawan_eu.c: 1132: }
 15732                           ;lorawan_eu.c: 1134: return result;
 15733  0074BA  5165               	movf	ValidateChannelId@result& (0+255),w,b
 15734                           
 15735                           ; BSR set to: 0
 15736  0074BC  0012               	return		;funcret
 15737  0074BE                     __end_of_ValidateChannelId:
 15738                           	opt stack 0
 15739                           tosu	equ	0xFFF
 15740                           tosh	equ	0xFFE
 15741                           tosl	equ	0xFFD
 15742                           pclath	equ	0xFFA
 15743                           tblptru	equ	0xFF8
 15744                           tblptrh	equ	0xFF7
 15745                           tblptrl	equ	0xFF6
 15746                           tablat	equ	0xFF5
 15747                           prodh	equ	0xFF4
 15748                           prodl	equ	0xFF3
 15749                           intcon	equ	0xFF2
 15750                           intcon2	equ	0xFF1
 15751                           intcon3	equ	0xFF0
 15752                           indf0	equ	0xFEF
 15753                           postinc0	equ	0xFEE
 15754                           fsr0h	equ	0xFEA
 15755                           fsr0l	equ	0xFE9
 15756                           wreg	equ	0xFE8
 15757                           postinc1	equ	0xFE6
 15758                           postdec1	equ	0xFE5
 15759                           plusw1	equ	0xFE3
 15760                           fsr1h	equ	0xFE2
 15761                           fsr1l	equ	0xFE1
 15762                           indf2	equ	0xFDF
 15763                           postinc2	equ	0xFDE
 15764                           postdec2	equ	0xFDD
 15765                           plusw2	equ	0xFDB
 15766                           fsr2h	equ	0xFDA
 15767                           fsr2l	equ	0xFD9
 15768                           status	equ	0xFD8
 15769                           
 15770 ;; *************** function _ExecuteLinkCheck *****************
 15771 ;; Defined at:
 15772 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 15775 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15776 ;; Auto vars:     Size  Location     Type
 15777 ;;		None
 15778 ;; Return value:  Size  Location     Type
 15779 ;;                  2    4[BANK0 ] PTR unsigned char 
 15780 ;; Registers used:
 15781 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15782 ;; Tracked objects:
 15783 ;;		On entry : F/0
 15784 ;;		On exit  : F/0
 15785 ;;		Unchanged: 0/0
 15786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15787 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15790 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15791 ;;Total ram usage:        2 bytes
 15792 ;; Hardware stack levels used:    1
 15793 ;; Hardware stack levels required when called:    7
 15794 ;; This function calls:
 15795 ;;		Nothing
 15796 ;; This function is called by:
 15797 ;;		_MacExecuteCommands
 15798 ;; This function uses a non-reentrant model
 15799 ;;
 15800                           
 15801                           	psect	text84
 15802  00707A                     __ptext84:
 15803                           	opt stack 0
 15804  00707A                     _ExecuteLinkCheck:
 15805                           	opt stack 18
 15806                           
 15807                           ; BSR set to: 0
 15808                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;incstack = 0
 15812  00707A  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15813  00707E  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15814  007082  50DF               	movf	indf2,w,c
 15815  007084  0102               	movlb	2	; () banked
 15816  007086  6FDD               	movwf	(_loRa+221)& (0+255),b
 15817                           
 15818                           ; BSR set to: 2
 15819  007088  0100               	movlb	0	; () banked
 15820  00708A  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15821  00708C  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15822                           
 15823                           ; BSR set to: 0
 15824                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 15825  00708E  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15826  007092  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15827  007096  50DF               	movf	indf2,w,c
 15828  007098  0102               	movlb	2	; () banked
 15829  00709A  6FDE               	movwf	(_loRa+222)& (0+255),b
 15830  00709C  0100               	movlb	0	; () banked
 15831  00709E  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15832  0070A0  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;lorawan.c: 1656: return ptr;
 15836  0070A2  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 15837  0070A6  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 15838                           
 15839                           ; BSR set to: 0
 15840  0070AA  0012               	return		;funcret
 15841  0070AC                     __end_of_ExecuteLinkCheck:
 15842                           	opt stack 0
 15843                           tosu	equ	0xFFF
 15844                           tosh	equ	0xFFE
 15845                           tosl	equ	0xFFD
 15846                           pclath	equ	0xFFA
 15847                           tblptru	equ	0xFF8
 15848                           tblptrh	equ	0xFF7
 15849                           tblptrl	equ	0xFF6
 15850                           tablat	equ	0xFF5
 15851                           prodh	equ	0xFF4
 15852                           prodl	equ	0xFF3
 15853                           intcon	equ	0xFF2
 15854                           intcon2	equ	0xFF1
 15855                           intcon3	equ	0xFF0
 15856                           indf0	equ	0xFEF
 15857                           postinc0	equ	0xFEE
 15858                           fsr0h	equ	0xFEA
 15859                           fsr0l	equ	0xFE9
 15860                           wreg	equ	0xFE8
 15861                           postinc1	equ	0xFE6
 15862                           postdec1	equ	0xFE5
 15863                           plusw1	equ	0xFE3
 15864                           fsr1h	equ	0xFE2
 15865                           fsr1l	equ	0xFE1
 15866                           indf2	equ	0xFDF
 15867                           postinc2	equ	0xFDE
 15868                           postdec2	equ	0xFDD
 15869                           plusw2	equ	0xFDB
 15870                           fsr2h	equ	0xFDA
 15871                           fsr2l	equ	0xFD9
 15872                           status	equ	0xFD8
 15873                           
 15874 ;; *************** function _ExecuteLinkAdr *****************
 15875 ;; Defined at:
 15876 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15877 ;; Parameters:    Size  Location     Type
 15878 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 15879 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15880 ;; Auto vars:     Size  Location     Type
 15881 ;;  redundancy      2   23[BANK0 ] PTR struct .
 15882 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15883 ;;  channelMask     2   20[BANK0 ] unsigned int 
 15884 ;;  dataRate        1   25[BANK0 ] unsigned char 
 15885 ;;  txPower         1   22[BANK0 ] unsigned char 
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  2   17[BANK0 ] PTR unsigned char 
 15888 ;; Registers used:
 15889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15890 ;; Tracked objects:
 15891 ;;		On entry : F/0
 15892 ;;		On exit  : F/2
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15896 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15898 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15899 ;;Total ram usage:        9 bytes
 15900 ;; Hardware stack levels used:    1
 15901 ;; Hardware stack levels required when called:   10
 15902 ;; This function calls:
 15903 ;;		_EnableChannels
 15904 ;;		_UpdateCurrentDataRate
 15905 ;;		_UpdateTxPower
 15906 ;;		_ValidateChannelMask
 15907 ;;		_ValidateChannelMaskCntl
 15908 ;;		_ValidateDataRate
 15909 ;;		_ValidateTxPower
 15910 ;; This function is called by:
 15911 ;;		_MacExecuteCommands
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           	psect	text85
 15916  00353C                     __ptext85:
 15917                           	opt stack 0
 15918  00353C                     _ExecuteLinkAdr:
 15919                           	opt stack 15
 15920                           
 15921                           ; BSR set to: 0
 15922                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 15923                           ;lorawan_eu.c: 616: uint16_t channelMask;
 15924                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;incstack = 0
 15928  00353C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15929  003540  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15930  003544  50DF               	movf	indf2,w,c
 15931  003546  0B0F               	andlw	15
 15932  003548  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 15933                           
 15934                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 15935  00354A  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15936  00354E  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15937  003552  50DF               	movf	indf2,w,c
 15938  003554  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 15939  003556  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 15940  003558  0B0F               	andlw	15
 15941  00355A  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;lorawan_eu.c: 620: ptr++;
 15945  00355C  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15946  00355E  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15947                           
 15948                           ; BSR set to: 0
 15949                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 15950  003560  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15951  003564  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15952  003568  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 15953  00356C  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 15957  003570  0E02               	movlw	2
 15958  003572  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 15959  003574  0E00               	movlw	0
 15960  003576  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15961                           
 15962                           ; BSR set to: 0
 15963                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 15964                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 15965  003578  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 15966  00357C  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 15967                           
 15968                           ; BSR set to: 0
 15969  003580  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15970  003582  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15971                           
 15972                           ; BSR set to: 0
 15973                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 15974  003584  0102               	movlb	2	; () banked
 15975  003586  AD02               	btfss	(_loRa+2)& (0+255),6,b
 15976  003588  D092               	goto	l13548
 15977                           
 15978                           ; BSR set to: 2
 15979                           ;lorawan_eu.c: 627: {
 15980                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 15981  00358A  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 15982  00358E  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 15983  003592  0100               	movlb	0	; () banked
 15984  003594  38DF               	swapf	223,w,c
 15985  003596  0B07               	andlw	7
 15986  003598  EC61  F03B         	call	_ValidateChannelMaskCntl
 15987  00359C  0900               	iorlw	0
 15988  00359E  E112               	bnz	l13516
 15989                           
 15990                           ; BSR set to: 0
 15991  0035A0  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 15992  0035A4  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 15993  0035A8  EC85  F037         	call	_ValidateChannelMask	;wreg free
 15994  0035AC  0900               	iorlw	0
 15995  0035AE  E10A               	bnz	l13516
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;lorawan_eu.c: 629: {
 15999                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16000  0035B0  0102               	movlb	2	; () banked
 16001  0035B2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16002  0035B4  0D02               	mullw	2
 16003  0035B6  0EA9               	movlw	low (_loRa+169)
 16004  0035B8  24F3               	addwf	prodl,w,c
 16005  0035BA  6ED9               	movwf	fsr2l,c
 16006  0035BC  0E02               	movlw	high (_loRa+169)
 16007  0035BE  20F4               	addwfc	prodh,w,c
 16008  0035C0  6EDA               	movwf	fsr2h,c
 16009  0035C2  80DF               	bsf	indf2,0,c
 16010  0035C4                     l13516:
 16011                           
 16012                           ;lorawan_eu.c: 631: }
 16013                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16014  0035C4  0100               	movlb	0	; () banked
 16015  0035C6  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16016  0035C8  EC8D  F03B         	call	_ValidateDataRate
 16017  0035CC  0900               	iorlw	0
 16018  0035CE  E112               	bnz	l13524
 16019                           
 16020                           ; BSR set to: 0
 16021  0035D0  0102               	movlb	2	; () banked
 16022  0035D2  51EB               	movf	(_loRa+235)& (0+255),w,b
 16023  0035D4  0100               	movlb	0	; () banked
 16024  0035D6  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16025  0035D8  E30D               	bnc	l13524
 16026                           
 16027                           ; BSR set to: 0
 16028  0035DA  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16029  0035DC  0102               	movlb	2	; () banked
 16030  0035DE  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16031  0035E0  E309               	bnc	l13524
 16032                           
 16033                           ; BSR set to: 2
 16034                           ;lorawan_eu.c: 634: {
 16035                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16036  0035E2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16037  0035E4  0D02               	mullw	2
 16038  0035E6  0EA9               	movlw	low (_loRa+169)
 16039  0035E8  24F3               	addwf	prodl,w,c
 16040  0035EA  6ED9               	movwf	fsr2l,c
 16041  0035EC  0E02               	movlw	high (_loRa+169)
 16042  0035EE  20F4               	addwfc	prodh,w,c
 16043  0035F0  6EDA               	movwf	fsr2h,c
 16044  0035F2  82DF               	bsf	indf2,1,c
 16045  0035F4                     l13524:
 16046                           
 16047                           ;lorawan_eu.c: 636: }
 16048                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16049  0035F4  0100               	movlb	0	; () banked
 16050  0035F6  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16051  0035F8  ECDF  F039         	call	_ValidateTxPower
 16052  0035FC  0900               	iorlw	0
 16053  0035FE  E10A               	bnz	l1099
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;lorawan_eu.c: 639: {
 16057                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16058  003600  0102               	movlb	2	; () banked
 16059  003602  51A7               	movf	(_loRa+167)& (0+255),w,b
 16060  003604  0D02               	mullw	2
 16061  003606  0EA9               	movlw	low (_loRa+169)
 16062  003608  24F3               	addwf	prodl,w,c
 16063  00360A  6ED9               	movwf	fsr2l,c
 16064  00360C  0E02               	movlw	high (_loRa+169)
 16065  00360E  20F4               	addwfc	prodh,w,c
 16066  003610  6EDA               	movwf	fsr2h,c
 16067  003612  84DF               	bsf	indf2,2,c
 16068  003614                     l1099:
 16069                           
 16070                           ;lorawan_eu.c: 641: }
 16071                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16072  003614  0102               	movlb	2	; () banked
 16073  003616  51A7               	movf	(_loRa+167)& (0+255),w,b
 16074  003618  0D02               	mullw	2
 16075  00361A  0EA9               	movlw	low (_loRa+169)
 16076  00361C  24F3               	addwf	prodl,w,c
 16077  00361E  6ED9               	movwf	fsr2l,c
 16078  003620  0E02               	movlw	high (_loRa+169)
 16079  003622  20F4               	addwfc	prodh,w,c
 16080  003624  6EDA               	movwf	fsr2h,c
 16081  003626  A4DF               	btfss	indf2,2,c
 16082  003628  D05D               	goto	l13550
 16083                           
 16084                           ; BSR set to: 2
 16085  00362A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16086  00362C  0D02               	mullw	2
 16087  00362E  0EA9               	movlw	low (_loRa+169)
 16088  003630  24F3               	addwf	prodl,w,c
 16089  003632  6ED9               	movwf	fsr2l,c
 16090  003634  0E02               	movlw	high (_loRa+169)
 16091  003636  20F4               	addwfc	prodh,w,c
 16092  003638  6EDA               	movwf	fsr2h,c
 16093  00363A  A2DF               	btfss	indf2,1,c
 16094  00363C  D053               	goto	l13550
 16095                           
 16096                           ; BSR set to: 2
 16097  00363E  51A7               	movf	(_loRa+167)& (0+255),w,b
 16098  003640  0D02               	mullw	2
 16099  003642  0EA9               	movlw	low (_loRa+169)
 16100  003644  24F3               	addwf	prodl,w,c
 16101  003646  6ED9               	movwf	fsr2l,c
 16102  003648  0E02               	movlw	high (_loRa+169)
 16103  00364A  20F4               	addwfc	prodh,w,c
 16104  00364C  6EDA               	movwf	fsr2h,c
 16105  00364E  A0DF               	btfss	indf2,0,c
 16106  003650  D049               	goto	l13550
 16107                           
 16108                           ; BSR set to: 2
 16109                           ;lorawan_eu.c: 644: {
 16110                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16111  003652  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16112  003656  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16113  00365A  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16114  00365E  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16115  003662  0100               	movlb	0	; () banked
 16116  003664  38DF               	swapf	223,w,c
 16117  003666  0B07               	andlw	7
 16118  003668  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16119  00366A  EC78  F03B         	call	_EnableChannels	;wreg free
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16123  00366E  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16124  003670  EC5F  F03C         	call	_UpdateTxPower
 16125                           
 16126                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16127  003674  0102               	movlb	2	; () banked
 16128  003676  8903               	bsf	(_loRa+3)& (0+255),4,b
 16129                           
 16130                           ; BSR set to: 2
 16131                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16132  003678  0100               	movlb	0	; () banked
 16133  00367A  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16134  00367C  EC63  F03C         	call	_UpdateCurrentDataRate
 16135                           
 16136                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16137  003680  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16138  003684  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16139  003688  0100               	movlb	0	; () banked
 16140  00368A  50DF               	movf	223,w,c
 16141  00368C  0B0F               	andlw	15
 16142  00368E  E103               	bnz	l13544
 16143                           
 16144                           ; BSR set to: 0
 16145                           ;lorawan_eu.c: 652: {
 16146                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16147  003690  0102               	movlb	2	; () banked
 16148  003692  6BD6               	clrf	(_loRa+214)& (0+255),b
 16149                           
 16150                           ;lorawan_eu.c: 654: }
 16151  003694  D00A               	goto	l13546
 16152  003696                     l13544:
 16153                           
 16154                           ; BSR set to: 0
 16155                           ;lorawan_eu.c: 655: else
 16156                           ;lorawan_eu.c: 656: {
 16157                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16158  003696  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16159  00369A  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16160  00369E  50DF               	movf	223,w,c
 16161  0036A0  0B0F               	andlw	15
 16162  0036A2  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16163  0036A4  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16164  0036A6  0102               	movlb	2	; () banked
 16165  0036A8  6FD6               	movwf	(_loRa+214)& (0+255),b
 16166  0036AA                     l13546:
 16167                           
 16168                           ; BSR set to: 2
 16169                           ;lorawan_eu.c: 658: }
 16170                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16171  0036AA  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16172  0036AC  D01B               	goto	l13550
 16173  0036AE                     l13548:
 16174                           
 16175                           ; BSR set to: 2
 16176                           ;lorawan_eu.c: 662: else
 16177                           ;lorawan_eu.c: 663: {
 16178                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16179  0036AE  51A7               	movf	(_loRa+167)& (0+255),w,b
 16180  0036B0  0D02               	mullw	2
 16181  0036B2  0EA9               	movlw	low (_loRa+169)
 16182  0036B4  24F3               	addwf	prodl,w,c
 16183  0036B6  6ED9               	movwf	fsr2l,c
 16184  0036B8  0E02               	movlw	high (_loRa+169)
 16185  0036BA  20F4               	addwfc	prodh,w,c
 16186  0036BC  6EDA               	movwf	fsr2h,c
 16187  0036BE  90DF               	bcf	indf2,0,c
 16188                           
 16189                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16190  0036C0  51A7               	movf	(_loRa+167)& (0+255),w,b
 16191  0036C2  0D02               	mullw	2
 16192  0036C4  0EA9               	movlw	low (_loRa+169)
 16193  0036C6  24F3               	addwf	prodl,w,c
 16194  0036C8  6ED9               	movwf	fsr2l,c
 16195  0036CA  0E02               	movlw	high (_loRa+169)
 16196  0036CC  20F4               	addwfc	prodh,w,c
 16197  0036CE  6EDA               	movwf	fsr2h,c
 16198  0036D0  92DF               	bcf	indf2,1,c
 16199                           
 16200                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16201  0036D2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16202  0036D4  0D02               	mullw	2
 16203  0036D6  0EA9               	movlw	low (_loRa+169)
 16204  0036D8  24F3               	addwf	prodl,w,c
 16205  0036DA  6ED9               	movwf	fsr2l,c
 16206  0036DC  0E02               	movlw	high (_loRa+169)
 16207  0036DE  20F4               	addwfc	prodh,w,c
 16208  0036E0  6EDA               	movwf	fsr2h,c
 16209  0036E2  94DF               	bcf	indf2,2,c
 16210  0036E4                     l13550:
 16211                           
 16212                           ; BSR set to: 2
 16213                           ;lorawan_eu.c: 667: }
 16214                           ;lorawan_eu.c: 669: return ptr;
 16215  0036E4  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16216  0036E8  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16217                           
 16218                           ; BSR set to: 2
 16219  0036EC  0012               	return		;funcret
 16220  0036EE                     __end_of_ExecuteLinkAdr:
 16221                           	opt stack 0
 16222                           tosu	equ	0xFFF
 16223                           tosh	equ	0xFFE
 16224                           tosl	equ	0xFFD
 16225                           pclath	equ	0xFFA
 16226                           tblptru	equ	0xFF8
 16227                           tblptrh	equ	0xFF7
 16228                           tblptrl	equ	0xFF6
 16229                           tablat	equ	0xFF5
 16230                           prodh	equ	0xFF4
 16231                           prodl	equ	0xFF3
 16232                           intcon	equ	0xFF2
 16233                           intcon2	equ	0xFF1
 16234                           intcon3	equ	0xFF0
 16235                           indf0	equ	0xFEF
 16236                           postinc0	equ	0xFEE
 16237                           fsr0h	equ	0xFEA
 16238                           fsr0l	equ	0xFE9
 16239                           wreg	equ	0xFE8
 16240                           postinc1	equ	0xFE6
 16241                           postdec1	equ	0xFE5
 16242                           plusw1	equ	0xFE3
 16243                           fsr1h	equ	0xFE2
 16244                           fsr1l	equ	0xFE1
 16245                           indf2	equ	0xFDF
 16246                           postinc2	equ	0xFDE
 16247                           postdec2	equ	0xFDD
 16248                           plusw2	equ	0xFDB
 16249                           fsr2h	equ	0xFDA
 16250                           fsr2l	equ	0xFD9
 16251                           status	equ	0xFD8
 16252                           
 16253 ;; *************** function _ValidateTxPower *****************
 16254 ;; Defined at:
 16255 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;  txPowerNew      1    wreg     unsigned char 
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 16260 ;;  result          1    4[BANK0 ] enum E8016
 16261 ;; Return value:  Size  Location     Type
 16262 ;;                  1    wreg      enum E8016
 16263 ;; Registers used:
 16264 ;;		wreg, status,2, status,0
 16265 ;; Tracked objects:
 16266 ;;		On entry : F/0
 16267 ;;		On exit  : F/0
 16268 ;;		Unchanged: 0/0
 16269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16271 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16273 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16274 ;;Total ram usage:        2 bytes
 16275 ;; Hardware stack levels used:    1
 16276 ;; Hardware stack levels required when called:    7
 16277 ;; This function calls:
 16278 ;;		Nothing
 16279 ;; This function is called by:
 16280 ;;		_ExecuteLinkAdr
 16281 ;; This function uses a non-reentrant model
 16282 ;;
 16283                           
 16284                           	psect	text86
 16285  0073BE                     __ptext86:
 16286                           	opt stack 0
 16287  0073BE                     _ValidateTxPower:
 16288                           	opt stack 17
 16289                           
 16290                           ; BSR set to: 2
 16291                           ;incstack = 0
 16292                           ;ValidateTxPower@txPowerNew stored from wreg
 16293  0073BE  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16294                           
 16295                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16296  0073C0  0100               	movlb	0	; () banked
 16297  0073C2  6B64               	clrf	ValidateTxPower@result& (0+255),b
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16301  0073C4  0102               	movlb	2	; () banked
 16302  0073C6  51A4               	movf	(_loRa+164)& (0+255),w,b
 16303  0073C8  E103               	bnz	l12930
 16304                           
 16305                           ; BSR set to: 2
 16306  0073CA  0100               	movlb	0	; () banked
 16307  0073CC  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16308  0073CE  E004               	bz	l12932
 16309  0073D0                     l12930:
 16310  0073D0  0E05               	movlw	5
 16311  0073D2  0100               	movlb	0	; () banked
 16312  0073D4  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16313  0073D6  D002               	goto	l1083
 16314  0073D8                     l12932:
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;lorawan_eu.c: 587: {
 16318                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16319  0073D8  0E03               	movlw	3
 16320  0073DA  6F64               	movwf	ValidateTxPower@result& (0+255),b
 16321  0073DC                     l1083:
 16322                           
 16323                           ; BSR set to: 0
 16324                           ;lorawan_eu.c: 589: }
 16325                           ;lorawan_eu.c: 591: return result;
 16326  0073DC  5164               	movf	ValidateTxPower@result& (0+255),w,b
 16327                           
 16328                           ; BSR set to: 0
 16329  0073DE  0012               	return		;funcret
 16330  0073E0                     __end_of_ValidateTxPower:
 16331                           	opt stack 0
 16332                           tosu	equ	0xFFF
 16333                           tosh	equ	0xFFE
 16334                           tosl	equ	0xFFD
 16335                           pclath	equ	0xFFA
 16336                           tblptru	equ	0xFF8
 16337                           tblptrh	equ	0xFF7
 16338                           tblptrl	equ	0xFF6
 16339                           tablat	equ	0xFF5
 16340                           prodh	equ	0xFF4
 16341                           prodl	equ	0xFF3
 16342                           intcon	equ	0xFF2
 16343                           intcon2	equ	0xFF1
 16344                           intcon3	equ	0xFF0
 16345                           indf0	equ	0xFEF
 16346                           postinc0	equ	0xFEE
 16347                           fsr0h	equ	0xFEA
 16348                           fsr0l	equ	0xFE9
 16349                           wreg	equ	0xFE8
 16350                           postinc1	equ	0xFE6
 16351                           postdec1	equ	0xFE5
 16352                           plusw1	equ	0xFE3
 16353                           fsr1h	equ	0xFE2
 16354                           fsr1l	equ	0xFE1
 16355                           indf2	equ	0xFDF
 16356                           postinc2	equ	0xFDE
 16357                           postdec2	equ	0xFDD
 16358                           plusw2	equ	0xFDB
 16359                           fsr2h	equ	0xFDA
 16360                           fsr2l	equ	0xFD9
 16361                           status	equ	0xFD8
 16362                           
 16363 ;; *************** function _ValidateChannelMaskCntl *****************
 16364 ;; Defined at:
 16365 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16366 ;; Parameters:    Size  Location     Type
 16367 ;;  channelMaskC    1    wreg     unsigned char 
 16368 ;; Auto vars:     Size  Location     Type
 16369 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 16370 ;;  result          1    4[BANK0 ] enum E8016
 16371 ;; Return value:  Size  Location     Type
 16372 ;;                  1    wreg      enum E8016
 16373 ;; Registers used:
 16374 ;;		wreg, status,2, status,0
 16375 ;; Tracked objects:
 16376 ;;		On entry : F/0
 16377 ;;		On exit  : F/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16381 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16383 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;Total ram usage:        2 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:    7
 16387 ;; This function calls:
 16388 ;;		Nothing
 16389 ;; This function is called by:
 16390 ;;		_ExecuteLinkAdr
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           	psect	text87
 16395  0076C2                     __ptext87:
 16396                           	opt stack 0
 16397  0076C2                     _ValidateChannelMaskCntl:
 16398                           	opt stack 17
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;incstack = 0
 16402                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 16403  0076C2  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 16404                           
 16405                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 16406  0076C4  0100               	movlb	0	; () banked
 16407  0076C6  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 16408                           
 16409                           ; BSR set to: 0
 16410                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 16411  0076C8  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16412  0076CA  E005               	bz	l1250
 16413                           
 16414                           ; BSR set to: 0
 16415  0076CC  0E06               	movlw	6
 16416  0076CE  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16417  0076D0  E002               	bz	l1250
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;lorawan_eu.c: 1142: {
 16421                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 16422  0076D2  0E03               	movlw	3
 16423  0076D4  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 16424  0076D6                     l1250:
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;lorawan_eu.c: 1144: }
 16428                           ;lorawan_eu.c: 1146: return result;
 16429  0076D6  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 16430                           
 16431                           ; BSR set to: 0
 16432  0076D8  0012               	return		;funcret
 16433  0076DA                     __end_of_ValidateChannelMaskCntl:
 16434                           	opt stack 0
 16435                           tosu	equ	0xFFF
 16436                           tosh	equ	0xFFE
 16437                           tosl	equ	0xFFD
 16438                           pclath	equ	0xFFA
 16439                           tblptru	equ	0xFF8
 16440                           tblptrh	equ	0xFF7
 16441                           tblptrl	equ	0xFF6
 16442                           tablat	equ	0xFF5
 16443                           prodh	equ	0xFF4
 16444                           prodl	equ	0xFF3
 16445                           intcon	equ	0xFF2
 16446                           intcon2	equ	0xFF1
 16447                           intcon3	equ	0xFF0
 16448                           indf0	equ	0xFEF
 16449                           postinc0	equ	0xFEE
 16450                           fsr0h	equ	0xFEA
 16451                           fsr0l	equ	0xFE9
 16452                           wreg	equ	0xFE8
 16453                           postinc1	equ	0xFE6
 16454                           postdec1	equ	0xFE5
 16455                           plusw1	equ	0xFE3
 16456                           fsr1h	equ	0xFE2
 16457                           fsr1l	equ	0xFE1
 16458                           indf2	equ	0xFDF
 16459                           postinc2	equ	0xFDE
 16460                           postdec2	equ	0xFDD
 16461                           plusw2	equ	0xFDB
 16462                           fsr2h	equ	0xFDA
 16463                           fsr2l	equ	0xFD9
 16464                           status	equ	0xFD8
 16465                           
 16466 ;; *************** function _ValidateChannelMask *****************
 16467 ;; Defined at:
 16468 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16469 ;; Parameters:    Size  Location     Type
 16470 ;;  channelMask     2    4[BANK0 ] unsigned int 
 16471 ;; Auto vars:     Size  Location     Type
 16472 ;;  i               1    6[BANK0 ] unsigned char 
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  1    wreg      enum E8016
 16475 ;; Registers used:
 16476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16477 ;; Tracked objects:
 16478 ;;		On entry : F/0
 16479 ;;		On exit  : F/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;Total ram usage:        3 bytes
 16487 ;; Hardware stack levels used:    1
 16488 ;; Hardware stack levels required when called:    7
 16489 ;; This function calls:
 16490 ;;		Nothing
 16491 ;; This function is called by:
 16492 ;;		_ExecuteLinkAdr
 16493 ;; This function uses a non-reentrant model
 16494 ;;
 16495                           
 16496                           	psect	text88
 16497  006F0A                     __ptext88:
 16498                           	opt stack 0
 16499  006F0A                     _ValidateChannelMask:
 16500                           	opt stack 17
 16501                           
 16502                           ; BSR set to: 0
 16503                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 16504                           
 16505                           ; BSR set to: 0
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;incstack = 0
 16509  006F0A  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 16510  006F0C  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 16511  006F0E  B4D8               	btfsc	status,2,c
 16512  006F10  0C03               	retlw	3
 16513                           
 16514                           ; BSR set to: 0
 16515                           ;lorawan_eu.c: 1171: {
 16516                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 16517  006F12  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 16518  006F14                     l1264:
 16519                           
 16520                           ; BSR set to: 0
 16521                           ;lorawan_eu.c: 1173: {
 16522                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 16523  006F14  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 16524  006F16  D00D               	goto	l12964
 16525                           
 16526                           ; BSR set to: 0
 16527  006F18  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 16528  006F1A  0D0E               	mullw	14
 16529  006F1C  0E0D               	movlw	low (_Channels+13)
 16530  006F1E  24F3               	addwf	prodl,w,c
 16531  006F20  6ED9               	movwf	fsr2l,c
 16532  006F22  0E04               	movlw	high (_Channels+13)
 16533  006F24  20F4               	addwfc	prodh,w,c
 16534  006F26  6EDA               	movwf	fsr2h,c
 16535  006F28  50DF               	movf	indf2,w,c
 16536  006F2A  0B07               	andlw	7
 16537  006F2C  0A07               	xorlw	7
 16538  006F2E  E001               	bz	l12964
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;lorawan_eu.c: 1175: {
 16542                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 16543  006F30  0C03               	retlw	3
 16544  006F32                     l12964:
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;lorawan_eu.c: 1178: else
 16548                           ;lorawan_eu.c: 1179: {
 16549                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 16550  006F32  90D8               	bcf	status,0,c
 16551  006F34  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 16552  006F36  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 16553                           
 16554                           ; BSR set to: 0
 16555  006F38  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 16556                           
 16557                           ; BSR set to: 0
 16558  006F3A  0E0F               	movlw	15
 16559  006F3C  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 16560  006F3E  D7EA               	goto	l1264
 16561  006F40  0C00               	retlw	0
 16562  006F42                     __end_of_ValidateChannelMask:
 16563                           	opt stack 0
 16564                           tosu	equ	0xFFF
 16565                           tosh	equ	0xFFE
 16566                           tosl	equ	0xFFD
 16567                           pclath	equ	0xFFA
 16568                           tblptru	equ	0xFF8
 16569                           tblptrh	equ	0xFF7
 16570                           tblptrl	equ	0xFF6
 16571                           tablat	equ	0xFF5
 16572                           prodh	equ	0xFF4
 16573                           prodl	equ	0xFF3
 16574                           intcon	equ	0xFF2
 16575                           intcon2	equ	0xFF1
 16576                           intcon3	equ	0xFF0
 16577                           indf0	equ	0xFEF
 16578                           postinc0	equ	0xFEE
 16579                           fsr0h	equ	0xFEA
 16580                           fsr0l	equ	0xFE9
 16581                           wreg	equ	0xFE8
 16582                           postinc1	equ	0xFE6
 16583                           postdec1	equ	0xFE5
 16584                           plusw1	equ	0xFE3
 16585                           fsr1h	equ	0xFE2
 16586                           fsr1l	equ	0xFE1
 16587                           indf2	equ	0xFDF
 16588                           postinc2	equ	0xFDE
 16589                           postdec2	equ	0xFDD
 16590                           plusw2	equ	0xFDB
 16591                           fsr2h	equ	0xFDA
 16592                           fsr2l	equ	0xFD9
 16593                           status	equ	0xFD8
 16594                           
 16595 ;; *************** function _UpdateTxPower *****************
 16596 ;; Defined at:
 16597 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16598 ;; Parameters:    Size  Location     Type
 16599 ;;  txPowerNew      1    wreg     unsigned char 
 16600 ;; Auto vars:     Size  Location     Type
 16601 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 16602 ;; Return value:  Size  Location     Type
 16603 ;;                  1    wreg      void 
 16604 ;; Registers used:
 16605 ;;		wreg
 16606 ;; Tracked objects:
 16607 ;;		On entry : F/0
 16608 ;;		On exit  : 0/0
 16609 ;;		Unchanged: 0/0
 16610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16615 ;;Total ram usage:        1 bytes
 16616 ;; Hardware stack levels used:    1
 16617 ;; Hardware stack levels required when called:    7
 16618 ;; This function calls:
 16619 ;;		Nothing
 16620 ;; This function is called by:
 16621 ;;		_ExecuteLinkAdr
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text89
 16626  0078BE                     __ptext89:
 16627                           	opt stack 0
 16628  0078BE                     _UpdateTxPower:
 16629                           	opt stack 17
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;incstack = 0
 16633                           ;UpdateTxPower@txPowerNew stored from wreg
 16634  0078BE  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 16635                           
 16636                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 16637  0078C0  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 16638  0078C4  0012               	return		;funcret
 16639  0078C6                     __end_of_UpdateTxPower:
 16640                           	opt stack 0
 16641                           tosu	equ	0xFFF
 16642                           tosh	equ	0xFFE
 16643                           tosl	equ	0xFFD
 16644                           pclath	equ	0xFFA
 16645                           tblptru	equ	0xFF8
 16646                           tblptrh	equ	0xFF7
 16647                           tblptrl	equ	0xFF6
 16648                           tablat	equ	0xFF5
 16649                           prodh	equ	0xFF4
 16650                           prodl	equ	0xFF3
 16651                           intcon	equ	0xFF2
 16652                           intcon2	equ	0xFF1
 16653                           intcon3	equ	0xFF0
 16654                           indf0	equ	0xFEF
 16655                           postinc0	equ	0xFEE
 16656                           fsr0h	equ	0xFEA
 16657                           fsr0l	equ	0xFE9
 16658                           wreg	equ	0xFE8
 16659                           postinc1	equ	0xFE6
 16660                           postdec1	equ	0xFE5
 16661                           plusw1	equ	0xFE3
 16662                           fsr1h	equ	0xFE2
 16663                           fsr1l	equ	0xFE1
 16664                           indf2	equ	0xFDF
 16665                           postinc2	equ	0xFDE
 16666                           postdec2	equ	0xFDD
 16667                           plusw2	equ	0xFDB
 16668                           fsr2h	equ	0xFDA
 16669                           fsr2l	equ	0xFD9
 16670                           status	equ	0xFD8
 16671                           
 16672 ;; *************** function _EnableChannels *****************
 16673 ;; Defined at:
 16674 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;  channelMask     2   14[BANK0 ] unsigned int 
 16677 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 16678 ;; Auto vars:     Size  Location     Type
 16679 ;;		None
 16680 ;; Return value:  Size  Location     Type
 16681 ;;                  1    wreg      void 
 16682 ;; Registers used:
 16683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16684 ;; Tracked objects:
 16685 ;;		On entry : F/0
 16686 ;;		On exit  : F/0
 16687 ;;		Unchanged: 0/0
 16688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16689 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16692 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16693 ;;Total ram usage:        3 bytes
 16694 ;; Hardware stack levels used:    1
 16695 ;; Hardware stack levels required when called:    9
 16696 ;; This function calls:
 16697 ;;		_EnableChannels1
 16698 ;; This function is called by:
 16699 ;;		_ExecuteLinkAdr
 16700 ;; This function uses a non-reentrant model
 16701 ;;
 16702                           
 16703                           	psect	text90
 16704  0076F0                     __ptext90:
 16705                           	opt stack 0
 16706  0076F0                     _EnableChannels:
 16707                           	opt stack 15
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 16711                           
 16712                           ;incstack = 0
 16713  0076F0  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 16714  0076F4  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 16715  0076F8  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 16716  0076FC  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 16717  0076FE  0E10               	movlw	16
 16718  007700  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 16719  007702  EFE8  F033         	goto	_EnableChannels1	;wreg free
 16720  007706                     __end_of_EnableChannels:
 16721                           	opt stack 0
 16722                           tosu	equ	0xFFF
 16723                           tosh	equ	0xFFE
 16724                           tosl	equ	0xFFD
 16725                           pclath	equ	0xFFA
 16726                           tblptru	equ	0xFF8
 16727                           tblptrh	equ	0xFF7
 16728                           tblptrl	equ	0xFF6
 16729                           tablat	equ	0xFF5
 16730                           prodh	equ	0xFF4
 16731                           prodl	equ	0xFF3
 16732                           intcon	equ	0xFF2
 16733                           intcon2	equ	0xFF1
 16734                           intcon3	equ	0xFF0
 16735                           indf0	equ	0xFEF
 16736                           postinc0	equ	0xFEE
 16737                           fsr0h	equ	0xFEA
 16738                           fsr0l	equ	0xFE9
 16739                           wreg	equ	0xFE8
 16740                           postinc1	equ	0xFE6
 16741                           postdec1	equ	0xFE5
 16742                           plusw1	equ	0xFE3
 16743                           fsr1h	equ	0xFE2
 16744                           fsr1l	equ	0xFE1
 16745                           indf2	equ	0xFDF
 16746                           postinc2	equ	0xFDE
 16747                           postdec2	equ	0xFDD
 16748                           plusw2	equ	0xFDB
 16749                           fsr2h	equ	0xFDA
 16750                           fsr2l	equ	0xFD9
 16751                           status	equ	0xFD8
 16752                           
 16753 ;; *************** function _EnableChannels1 *****************
 16754 ;; Defined at:
 16755 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;  channelMask     2    8[BANK0 ] unsigned int 
 16758 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 16759 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 16760 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 16761 ;; Auto vars:     Size  Location     Type
 16762 ;;  i               1   13[BANK0 ] unsigned char 
 16763 ;; Return value:  Size  Location     Type
 16764 ;;                  1    wreg      void 
 16765 ;; Registers used:
 16766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16767 ;; Tracked objects:
 16768 ;;		On entry : F/0
 16769 ;;		On exit  : F/0
 16770 ;;		Unchanged: 0/0
 16771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16772 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16775 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16776 ;;Total ram usage:        6 bytes
 16777 ;; Hardware stack levels used:    1
 16778 ;; Hardware stack levels required when called:    8
 16779 ;; This function calls:
 16780 ;;		_UpdateChannelIdStatus
 16781 ;; This function is called by:
 16782 ;;		_EnableChannels
 16783 ;; This function uses a non-reentrant model
 16784 ;;
 16785                           
 16786                           	psect	text91
 16787  0067D0                     __ptext91:
 16788                           	opt stack 0
 16789  0067D0                     _EnableChannels1:
 16790                           	opt stack 15
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;lorawan_eu.c: 1195: uint8_t i;
 16794                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;incstack = 0
 16798  0067D0  0E06               	movlw	6
 16799  0067D2  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16800  0067D4  E10E               	bnz	l12662
 16801                           
 16802                           ; BSR set to: 0
 16803                           ;lorawan_eu.c: 1198: {
 16804                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16805  0067D6  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16806  0067DA  D007               	goto	l12660
 16807  0067DC                     l12656:
 16808                           
 16809                           ; BSR set to: 0
 16810                           ;lorawan_eu.c: 1200: {
 16811                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 16812  0067DC  0E01               	movlw	1
 16813  0067DE  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16814  0067E0  516D               	movf	EnableChannels1@i& (0+255),w,b
 16815  0067E2  ECBE  F023         	call	_UpdateChannelIdStatus
 16816                           
 16817                           ; BSR set to: 2
 16818  0067E6  0100               	movlb	0	; () banked
 16819  0067E8  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16820  0067EA                     l12660:
 16821                           
 16822                           ; BSR set to: 0
 16823  0067EA  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16824  0067EC  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 16825  0067EE  E3F6               	bnc	l12656
 16826  0067F0  0012               	return	
 16827  0067F2                     l12662:
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 16831  0067F2  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16832  0067F4  A4D8               	btfss	status,2,c
 16833  0067F6  0012               	return	
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;lorawan_eu.c: 1205: {
 16837                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16838  0067F8  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16839  0067FC  D011               	goto	l12674
 16840  0067FE                     l1279:
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;lorawan_eu.c: 1207: {
 16844                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 16845  0067FE  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 16846  006800  D006               	goto	l12668
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;lorawan_eu.c: 1209: {
 16850                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 16851  006802  0E01               	movlw	1
 16852  006804  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16853  006806  516D               	movf	EnableChannels1@i& (0+255),w,b
 16854  006808  ECBE  F023         	call	_UpdateChannelIdStatus
 16855                           
 16856                           ;lorawan_eu.c: 1211: }
 16857  00680C  D004               	goto	l12670
 16858  00680E                     l12668:
 16859                           
 16860                           ; BSR set to: 0
 16861                           ;lorawan_eu.c: 1212: else
 16862                           ;lorawan_eu.c: 1213: {
 16863                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 16864  00680E  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 16865  006810  516D               	movf	EnableChannels1@i& (0+255),w,b
 16866  006812  ECBE  F023         	call	_UpdateChannelIdStatus
 16867  006816                     l12670:
 16868                           
 16869                           ; BSR set to: 2
 16870                           ;lorawan_eu.c: 1215: }
 16871                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 16872  006816  0100               	movlb	0	; () banked
 16873  006818  90D8               	bcf	status,0,c
 16874  00681A  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 16875  00681C  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 16876                           
 16877                           ; BSR set to: 0
 16878  00681E  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16879  006820                     l12674:
 16880                           
 16881                           ; BSR set to: 0
 16882  006820  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16883  006822  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 16884  006824  E3EC               	bnc	l1279
 16885                           
 16886                           ; BSR set to: 0
 16887  006826  0012               	return		;funcret
 16888  006828                     __end_of_EnableChannels1:
 16889                           	opt stack 0
 16890                           tosu	equ	0xFFF
 16891                           tosh	equ	0xFFE
 16892                           tosl	equ	0xFFD
 16893                           pclath	equ	0xFFA
 16894                           tblptru	equ	0xFF8
 16895                           tblptrh	equ	0xFF7
 16896                           tblptrl	equ	0xFF6
 16897                           tablat	equ	0xFF5
 16898                           prodh	equ	0xFF4
 16899                           prodl	equ	0xFF3
 16900                           intcon	equ	0xFF2
 16901                           intcon2	equ	0xFF1
 16902                           intcon3	equ	0xFF0
 16903                           indf0	equ	0xFEF
 16904                           postinc0	equ	0xFEE
 16905                           fsr0h	equ	0xFEA
 16906                           fsr0l	equ	0xFE9
 16907                           wreg	equ	0xFE8
 16908                           postinc1	equ	0xFE6
 16909                           postdec1	equ	0xFE5
 16910                           plusw1	equ	0xFE3
 16911                           fsr1h	equ	0xFE2
 16912                           fsr1l	equ	0xFE1
 16913                           indf2	equ	0xFDF
 16914                           postinc2	equ	0xFDE
 16915                           postdec2	equ	0xFDD
 16916                           plusw2	equ	0xFDB
 16917                           fsr2h	equ	0xFDA
 16918                           fsr2l	equ	0xFD9
 16919                           status	equ	0xFD8
 16920                           
 16921 ;; *************** function _UpdateChannelIdStatus *****************
 16922 ;; Defined at:
 16923 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16924 ;; Parameters:    Size  Location     Type
 16925 ;;  channelId       1    wreg     unsigned char 
 16926 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16927 ;; Auto vars:     Size  Location     Type
 16928 ;;  channelId       1    6[BANK0 ] unsigned char 
 16929 ;;  i               1    7[BANK0 ] unsigned char 
 16930 ;; Return value:  Size  Location     Type
 16931 ;;                  1    wreg      void 
 16932 ;; Registers used:
 16933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16934 ;; Tracked objects:
 16935 ;;		On entry : F/0
 16936 ;;		On exit  : F/2
 16937 ;;		Unchanged: 0/0
 16938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16939 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16943 ;;Total ram usage:        4 bytes
 16944 ;; Hardware stack levels used:    1
 16945 ;; Hardware stack levels required when called:    7
 16946 ;; This function calls:
 16947 ;;		Nothing
 16948 ;; This function is called by:
 16949 ;;		_LORAWAN_SetChannelIdStatus
 16950 ;;		_ExecuteNewChannel
 16951 ;;		_EnableChannels1
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           	psect	text92
 16956  00477C                     __ptext92:
 16957                           	opt stack 0
 16958  00477C                     _UpdateChannelIdStatus:
 16959                           	opt stack 17
 16960                           
 16961                           ; BSR set to: 0
 16962                           ;incstack = 0
 16963                           ;UpdateChannelIdStatus@channelId stored from wreg
 16964  00477C  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 16965                           
 16966                           ;lorawan_eu.c: 1044: uint8_t i;
 16967                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 16968  00477E  0100               	movlb	0	; () banked
 16969  004780  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 16970  004782  0D0E               	mullw	14
 16971  004784  0E04               	movlw	low (_Channels+4)
 16972  004786  24F3               	addwf	prodl,w,c
 16973  004788  6ED9               	movwf	fsr2l,c
 16974  00478A  0E04               	movlw	high (_Channels+4)
 16975  00478C  20F4               	addwfc	prodh,w,c
 16976  00478E  6EDA               	movwf	fsr2h,c
 16977  004790  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 16978                           
 16979                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 16980  004794  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 16981  004796  0D0E               	mullw	14
 16982  004798  0E04               	movlw	low (_Channels+4)
 16983  00479A  24F3               	addwf	prodl,w,c
 16984  00479C  6ED9               	movwf	fsr2l,c
 16985  00479E  0E04               	movlw	high (_Channels+4)
 16986  0047A0  20F4               	addwfc	prodh,w,c
 16987  0047A2  6EDA               	movwf	fsr2h,c
 16988  0047A4  50DF               	movf	indf2,w,c
 16989  0047A6  E10C               	bnz	l12378
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;lorawan_eu.c: 1048: {
 16993                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 16994  0047A8  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 16995  0047AA  0D0E               	mullw	14
 16996  0047AC  0E08               	movlw	low (_Channels+8)
 16997  0047AE  24F3               	addwf	prodl,w,c
 16998  0047B0  6ED9               	movwf	fsr2l,c
 16999  0047B2  0E04               	movlw	high (_Channels+8)
 17000  0047B4  20F4               	addwfc	prodh,w,c
 17001  0047B6  6EDA               	movwf	fsr2h,c
 17002  0047B8  6ADE               	clrf	postinc2,c
 17003  0047BA  6ADE               	clrf	postinc2,c
 17004  0047BC  6ADE               	clrf	postinc2,c
 17005  0047BE  6ADD               	clrf	postdec2,c
 17006  0047C0                     l12378:
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;lorawan_eu.c: 1051: }
 17010                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17011  0047C0  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 17012  0047C2  D04E               	goto	l12392
 17013  0047C4                     l12380:
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;lorawan_eu.c: 1054: {
 17017                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17018  0047C4  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17019  0047C6  0D0E               	mullw	14
 17020  0047C8  0E05               	movlw	low (_Channels+5)
 17021  0047CA  24F3               	addwf	prodl,w,c
 17022  0047CC  6ED9               	movwf	fsr2l,c
 17023  0047CE  0E04               	movlw	high (_Channels+5)
 17024  0047D0  20F4               	addwfc	prodh,w,c
 17025  0047D2  6EDA               	movwf	fsr2h,c
 17026  0047D4  50DF               	movf	223,w,c
 17027  0047D6  0B0F               	andlw	15
 17028  0047D8  0100               	movlb	0	; () banked
 17029  0047DA  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17030  0047DC  0102               	movlb	2	; () banked
 17031  0047DE  51EB               	movf	(_loRa+235)& (0+255),w,b
 17032  0047E0  0100               	movlb	0	; () banked
 17033  0047E2  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17034  0047E4  E216               	bc	l1215
 17035                           
 17036                           ; BSR set to: 0
 17037  0047E6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17038  0047E8  0D0E               	mullw	14
 17039  0047EA  0E04               	movlw	low (_Channels+4)
 17040  0047EC  24F3               	addwf	prodl,w,c
 17041  0047EE  6ED9               	movwf	fsr2l,c
 17042  0047F0  0E04               	movlw	high (_Channels+4)
 17043  0047F2  20F4               	addwfc	prodh,w,c
 17044  0047F4  6EDA               	movwf	fsr2h,c
 17045  0047F6  04DE               	decf	postinc2,w,c
 17046  0047F8  E10C               	bnz	l1215
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;lorawan_eu.c: 1056: {
 17050                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17051  0047FA  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17052  0047FC  0D0E               	mullw	14
 17053  0047FE  0E05               	movlw	low (_Channels+5)
 17054  004800  24F3               	addwf	prodl,w,c
 17055  004802  6ED9               	movwf	fsr2l,c
 17056  004804  0E04               	movlw	high (_Channels+5)
 17057  004806  20F4               	addwfc	prodh,w,c
 17058  004808  6EDA               	movwf	fsr2h,c
 17059  00480A  50DF               	movf	223,w,c
 17060  00480C  0B0F               	andlw	15
 17061  00480E  0102               	movlb	2	; () banked
 17062  004810  6FEB               	movwf	(_loRa+235)& (0+255),b
 17063  004812                     l1215:
 17064                           
 17065                           ;lorawan_eu.c: 1058: }
 17066                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17067  004812  0100               	movlb	0	; () banked
 17068  004814  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17069  004816  0D0E               	mullw	14
 17070  004818  0E05               	movlw	low (_Channels+5)
 17071  00481A  24F3               	addwf	prodl,w,c
 17072  00481C  6ED9               	movwf	fsr2l,c
 17073  00481E  0E04               	movlw	high (_Channels+5)
 17074  004820  20F4               	addwfc	prodh,w,c
 17075  004822  6EDA               	movwf	fsr2h,c
 17076  004824  38DF               	swapf	223,w,c
 17077  004826  0B0F               	andlw	15
 17078  004828  0102               	movlb	2	; () banked
 17079  00482A  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17080  00482C  D017               	goto	l12390
 17081                           
 17082                           ; BSR set to: 2
 17083  00482E  0100               	movlb	0	; () banked
 17084  004830  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17085  004832  0D0E               	mullw	14
 17086  004834  0E04               	movlw	low (_Channels+4)
 17087  004836  24F3               	addwf	prodl,w,c
 17088  004838  6ED9               	movwf	fsr2l,c
 17089  00483A  0E04               	movlw	high (_Channels+4)
 17090  00483C  20F4               	addwfc	prodh,w,c
 17091  00483E  6EDA               	movwf	fsr2h,c
 17092  004840  04DE               	decf	postinc2,w,c
 17093  004842  E10C               	bnz	l12390
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;lorawan_eu.c: 1060: {
 17097                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17098  004844  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17099  004846  0D0E               	mullw	14
 17100  004848  0E05               	movlw	low (_Channels+5)
 17101  00484A  24F3               	addwf	prodl,w,c
 17102  00484C  6ED9               	movwf	fsr2l,c
 17103  00484E  0E04               	movlw	high (_Channels+5)
 17104  004850  20F4               	addwfc	prodh,w,c
 17105  004852  6EDA               	movwf	fsr2h,c
 17106  004854  38DF               	swapf	223,w,c
 17107  004856  0B0F               	andlw	15
 17108  004858  0102               	movlb	2	; () banked
 17109  00485A  6FEC               	movwf	(_loRa+236)& (0+255),b
 17110  00485C                     l12390:
 17111  00485C  0100               	movlb	0	; () banked
 17112  00485E  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17113  004860                     l12392:
 17114                           
 17115                           ; BSR set to: 0
 17116  004860  0102               	movlb	2	; () banked
 17117  004862  51ED               	movf	(_loRa+237)& (0+255),w,b
 17118  004864  0100               	movlb	0	; () banked
 17119  004866  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 17120  004868  E3AD               	bnc	l12380
 17121                           
 17122                           ; BSR set to: 0
 17123                           ;lorawan_eu.c: 1062: }
 17124                           ;lorawan_eu.c: 1063: }
 17125                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 17126  00486A  0102               	movlb	2	; () banked
 17127  00486C  51DF               	movf	(_loRa+223)& (0+255),w,b
 17128  00486E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17129  004870  E202               	bc	l12398
 17130                           
 17131                           ; BSR set to: 2
 17132                           ;lorawan_eu.c: 1066: {
 17133                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 17134  004872  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17135  004876                     l12398:
 17136                           
 17137                           ; BSR set to: 2
 17138                           ;lorawan_eu.c: 1068: }
 17139                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 17140  004876  51EB               	movf	(_loRa+235)& (0+255),w,b
 17141  004878  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17142  00487A  A0D8               	btfss	status,0,c
 17143                           
 17144                           ; BSR set to: 2
 17145                           ;lorawan_eu.c: 1071: {
 17146                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 17147  00487C  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17148                           
 17149                           ; BSR set to: 2
 17150  004880  0012               	return		;funcret
 17151  004882                     __end_of_UpdateChannelIdStatus:
 17152                           	opt stack 0
 17153                           tosu	equ	0xFFF
 17154                           tosh	equ	0xFFE
 17155                           tosl	equ	0xFFD
 17156                           pclath	equ	0xFFA
 17157                           tblptru	equ	0xFF8
 17158                           tblptrh	equ	0xFF7
 17159                           tblptrl	equ	0xFF6
 17160                           tablat	equ	0xFF5
 17161                           prodh	equ	0xFF4
 17162                           prodl	equ	0xFF3
 17163                           intcon	equ	0xFF2
 17164                           intcon2	equ	0xFF1
 17165                           intcon3	equ	0xFF0
 17166                           indf0	equ	0xFEF
 17167                           postinc0	equ	0xFEE
 17168                           fsr0h	equ	0xFEA
 17169                           fsr0l	equ	0xFE9
 17170                           wreg	equ	0xFE8
 17171                           postinc1	equ	0xFE6
 17172                           postdec1	equ	0xFE5
 17173                           plusw1	equ	0xFE3
 17174                           fsr1h	equ	0xFE2
 17175                           fsr1l	equ	0xFE1
 17176                           indf2	equ	0xFDF
 17177                           postinc2	equ	0xFDE
 17178                           postdec2	equ	0xFDD
 17179                           plusw2	equ	0xFDB
 17180                           fsr2h	equ	0xFDA
 17181                           fsr2l	equ	0xFD9
 17182                           status	equ	0xFD8
 17183                           
 17184 ;; *************** function _ExecuteDutyCycle *****************
 17185 ;; Defined at:
 17186 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17187 ;; Parameters:    Size  Location     Type
 17188 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17189 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 17192 ;; Return value:  Size  Location     Type
 17193 ;;                  2    4[BANK0 ] PTR unsigned char 
 17194 ;; Registers used:
 17195 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17196 ;; Tracked objects:
 17197 ;;		On entry : F/0
 17198 ;;		On exit  : D/0
 17199 ;;		Unchanged: 0/0
 17200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17203 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17204 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17205 ;;Total ram usage:        6 bytes
 17206 ;; Hardware stack levels used:    1
 17207 ;; Hardware stack levels required when called:    7
 17208 ;; This function calls:
 17209 ;;		Nothing
 17210 ;; This function is called by:
 17211 ;;		_MacExecuteCommands
 17212 ;; This function uses a non-reentrant model
 17213 ;;
 17214                           
 17215                           	psect	text93
 17216  006976                     __ptext93:
 17217                           	opt stack 0
 17218  006976                     _ExecuteDutyCycle:
 17219                           	opt stack 18
 17220                           
 17221                           ; BSR set to: 0
 17222                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 17223                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 17224                           
 17225                           ; BSR set to: 2
 17226                           ;incstack = 0
 17227  006976  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 17228  00697A  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 17229  00697E  50DF               	movf	indf2,w,c
 17230  006980  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 17231                           
 17232                           ; BSR set to: 0
 17233  006982  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 17234  006984  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 17238  006986  0E0F               	movlw	15
 17239  006988  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 17240  00698A  D012               	goto	l1091
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;lorawan_eu.c: 600: {
 17244                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 17245  00698C  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 17246  006990  0E01               	movlw	1
 17247  006992  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 17248  006994  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 17249  006996  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 17250  006998  D003               	goto	u14864
 17251  00699A                     u14865:
 17252  00699A  90D8               	bcf	status,0,c
 17253  00699C  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 17254  00699E  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 17255  0069A0                     u14864:
 17256  0069A0  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 17257  0069A2  D7FB               	goto	u14865
 17258  0069A4  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 17259  0069A8  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 17260                           
 17261                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 17262  0069AC  0102               	movlb	2	; () banked
 17263  0069AE  8D03               	bsf	(_loRa+3)& (0+255),6,b
 17264  0069B0                     l1091:
 17265                           
 17266                           ;lorawan_eu.c: 603: }
 17267                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 17268  0069B0  0100               	movlb	0	; () banked
 17269  0069B2  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 17270  0069B4  E102               	bnz	l13492
 17271                           
 17272                           ; BSR set to: 0
 17273                           ;lorawan_eu.c: 606: {
 17274                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 17275  0069B6  0102               	movlb	2	; () banked
 17276  0069B8  8F02               	bsf	(_loRa+2)& (0+255),7,b
 17277  0069BA                     l13492:
 17278                           
 17279                           ;lorawan_eu.c: 608: }
 17280                           ;lorawan_eu.c: 610: return ptr;
 17281  0069BA  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 17282  0069BE  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 17283  0069C2  0012               	return		;funcret
 17284  0069C4                     __end_of_ExecuteDutyCycle:
 17285                           	opt stack 0
 17286                           tosu	equ	0xFFF
 17287                           tosh	equ	0xFFE
 17288                           tosl	equ	0xFFD
 17289                           pclath	equ	0xFFA
 17290                           tblptru	equ	0xFF8
 17291                           tblptrh	equ	0xFF7
 17292                           tblptrl	equ	0xFF6
 17293                           tablat	equ	0xFF5
 17294                           prodh	equ	0xFF4
 17295                           prodl	equ	0xFF3
 17296                           intcon	equ	0xFF2
 17297                           intcon2	equ	0xFF1
 17298                           intcon3	equ	0xFF0
 17299                           indf0	equ	0xFEF
 17300                           postinc0	equ	0xFEE
 17301                           fsr0h	equ	0xFEA
 17302                           fsr0l	equ	0xFE9
 17303                           wreg	equ	0xFE8
 17304                           postinc1	equ	0xFE6
 17305                           postdec1	equ	0xFE5
 17306                           plusw1	equ	0xFE3
 17307                           fsr1h	equ	0xFE2
 17308                           fsr1l	equ	0xFE1
 17309                           indf2	equ	0xFDF
 17310                           postinc2	equ	0xFDE
 17311                           postdec2	equ	0xFDD
 17312                           plusw2	equ	0xFDB
 17313                           fsr2h	equ	0xFDA
 17314                           fsr2l	equ	0xFD9
 17315                           status	equ	0xFD8
 17316                           
 17317 ;; *************** function _ExecuteDevStatus *****************
 17318 ;; Defined at:
 17319 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17320 ;; Parameters:    Size  Location     Type
 17321 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17322 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17323 ;; Auto vars:     Size  Location     Type
 17324 ;;		None
 17325 ;; Return value:  Size  Location     Type
 17326 ;;                  2    4[BANK0 ] PTR unsigned char 
 17327 ;; Registers used:
 17328 ;;		wreg, status,2, status,0
 17329 ;; Tracked objects:
 17330 ;;		On entry : F/0
 17331 ;;		On exit  : F/0
 17332 ;;		Unchanged: F/0
 17333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17334 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17337 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17338 ;;Total ram usage:        2 bytes
 17339 ;; Hardware stack levels used:    1
 17340 ;; Hardware stack levels required when called:    7
 17341 ;; This function calls:
 17342 ;;		Nothing
 17343 ;; This function is called by:
 17344 ;;		_MacExecuteCommands
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348                           	psect	text94
 17349  007866                     __ptext94:
 17350                           	opt stack 0
 17351  007866                     _ExecuteDevStatus:
 17352                           	opt stack 18
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;lorawan_eu.c: 674: return ptr;
 17356                           
 17357                           ;incstack = 0
 17358  007866  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 17359  00786A  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 17360                           
 17361                           ; BSR set to: 0
 17362  00786E  0012               	return		;funcret
 17363  007870                     __end_of_ExecuteDevStatus:
 17364                           	opt stack 0
 17365                           tosu	equ	0xFFF
 17366                           tosh	equ	0xFFE
 17367                           tosl	equ	0xFFD
 17368                           pclath	equ	0xFFA
 17369                           tblptru	equ	0xFF8
 17370                           tblptrh	equ	0xFF7
 17371                           tblptrl	equ	0xFF6
 17372                           tablat	equ	0xFF5
 17373                           prodh	equ	0xFF4
 17374                           prodl	equ	0xFF3
 17375                           intcon	equ	0xFF2
 17376                           intcon2	equ	0xFF1
 17377                           intcon3	equ	0xFF0
 17378                           indf0	equ	0xFEF
 17379                           postinc0	equ	0xFEE
 17380                           fsr0h	equ	0xFEA
 17381                           fsr0l	equ	0xFE9
 17382                           wreg	equ	0xFE8
 17383                           postinc1	equ	0xFE6
 17384                           postdec1	equ	0xFE5
 17385                           plusw1	equ	0xFE3
 17386                           fsr1h	equ	0xFE2
 17387                           fsr1l	equ	0xFE1
 17388                           indf2	equ	0xFDF
 17389                           postinc2	equ	0xFDE
 17390                           postdec2	equ	0xFDD
 17391                           plusw2	equ	0xFDB
 17392                           fsr2h	equ	0xFDA
 17393                           fsr2l	equ	0xFD9
 17394                           status	equ	0xFD8
 17395                           
 17396 ;; *************** function _LORAWAN_Send *****************
 17397 ;; Defined at:
 17398 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  confirmed       1    wreg     enum E7984
 17401 ;;  port            1  118[BANK0 ] unsigned char 
 17402 ;;  buffer          2  119[BANK0 ] PTR void 
 17403 ;;		 -> payload(4), NULL(0), 
 17404 ;;  bufferLength    1  121[BANK0 ] unsigned char 
 17405 ;; Auto vars:     Size  Location     Type
 17406 ;;  confirmed       1  124[BANK0 ] enum E7984
 17407 ;;  result          1  123[BANK0 ] enum E7957
 17408 ;; Return value:  Size  Location     Type
 17409 ;;                  1    wreg      enum E7957
 17410 ;; Registers used:
 17411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17412 ;; Tracked objects:
 17413 ;;		On entry : F/0
 17414 ;;		On exit  : D/0
 17415 ;;		Unchanged: 0/0
 17416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17418 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17420 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17421 ;;Total ram usage:        7 bytes
 17422 ;; Hardware stack levels used:    1
 17423 ;; Hardware stack levels required when called:   13
 17424 ;; This function calls:
 17425 ;;		_AssemblePacket
 17426 ;;		_LORAWAN_GetMaxPayloadSize
 17427 ;;		_RADIO_ReceiveStop
 17428 ;;		_RADIO_Transmit
 17429 ;;		_SelectChannelForTransmission
 17430 ;; This function is called by:
 17431 ;;		_AutomaticReplyCallback
 17432 ;;		_LORAWAN_RxDone
 17433 ;;		_readAndSend
 17434 ;; This function uses a non-reentrant model
 17435 ;;
 17436                           
 17437                           	psect	text95
 17438  00541A                     __ptext95:
 17439                           	opt stack 0
 17440  00541A                     _LORAWAN_Send:
 17441                           	opt stack 16
 17442                           
 17443                           ; BSR set to: 0
 17444                           ;incstack = 0
 17445                           ;LORAWAN_Send@confirmed stored from wreg
 17446  00541A  6FDC               	movwf	LORAWAN_Send@confirmed& (0+255),b
 17447                           
 17448                           ;lorawan.c: 187: LorawanError_t result;
 17449                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 17450  00541C  0102               	movlb	2	; () banked
 17451  00541E  A103               	btfss	(_loRa+3)& (0+255),0,b
 17452                           
 17453                           ; BSR set to: 2
 17454                           ;lorawan.c: 192: }
 17455                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 17456  005420  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 17457  005422  0012               	return	
 17458                           
 17459                           ; BSR set to: 2
 17460                           ;lorawan.c: 197: }
 17461                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 17462  005424  A902               	btfss	(_loRa+2)& (0+255),4,b
 17463  005426  0012               	return	
 17464                           
 17465                           ; BSR set to: 2
 17466                           ;lorawan.c: 202: }
 17467                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 17468  005428  0100               	movlb	0	; () banked
 17469  00542A  51D6               	movf	LORAWAN_Send@port& (0+255),w,b
 17470  00542C  E103               	bnz	l13936
 17471                           
 17472                           ; BSR set to: 0
 17473  00542E  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17474  005430  E001               	bz	l13936
 17475  005432  0012               	return	
 17476  005434                     l13936:
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;lorawan.c: 207: }
 17480                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 17481  005434  EC57  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 17482  005438  6FDA               	movwf	??_LORAWAN_Send& (0+255),b
 17483  00543A  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17484  00543C  5DDA               	subwf	??_LORAWAN_Send& (0+255),w,b
 17485  00543E  E201               	bc	l13940
 17486  005440  0012               	return	
 17487  005442                     l13940:
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;lorawan.c: 213: }
 17491                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 17492  005442  0102               	movlb	2	; () banked
 17493  005444  2906               	incf	(_loRa+6)& (0+255),w,b
 17494  005446  E108               	bnz	l13944
 17495  005448  2907               	incf	(_loRa+7)& (0+255),w,b
 17496  00544A  E106               	bnz	l13944
 17497  00544C  2908               	incf	(_loRa+8)& (0+255),w,b
 17498  00544E  E104               	bnz	l13944
 17499  005450  2909               	incf	(_loRa+9)& (0+255),w,b
 17500  005452  E102               	bnz	l13944
 17501                           
 17502                           ; BSR set to: 2
 17503                           ;lorawan.c: 216: {
 17504                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 17505  005454  8304               	bsf	(_loRa+4)& (0+255),1,b
 17506                           
 17507                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 17508                           ;	Return value of _LORAWAN_Send is never used
 17509  005456  0012               	return	
 17510  005458                     l13944:
 17511                           
 17512                           ; BSR set to: 2
 17513                           ;lorawan.c: 220: }
 17514                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 17515  005458  5102               	movf	(_loRa+2)& (0+255),w,b
 17516  00545A  0B0F               	andlw	15
 17517  00545C  E003               	bz	l13950
 17518                           
 17519                           ; BSR set to: 2
 17520  00545E  5112               	movf	(_loRa+18)& (0+255),w,b
 17521  005460  E101               	bnz	l13950
 17522  005462  0012               	return	
 17523  005464                     l13950:
 17524                           
 17525                           ; BSR set to: 2
 17526                           ;lorawan.c: 225: }
 17527                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 17528  005464  0E01               	movlw	1
 17529  005466  EC2C  F033         	call	_SelectChannelForTransmission
 17530  00546A  6FDB               	movwf	LORAWAN_Send@result& (0+255),b
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;lorawan.c: 228: if (result != OK)
 17534  00546C  51DB               	movf	LORAWAN_Send@result& (0+255),w,b
 17535  00546E  E001               	bz	l13958
 17536  005470  0012               	return	
 17537  005472                     l13958:
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;lorawan.c: 232: else
 17541                           ;lorawan.c: 233: {
 17542                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 17543  005472  0E02               	movlw	2
 17544  005474  0102               	movlb	2	; () banked
 17545  005476  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17546  005478  E102               	bnz	l13962
 17547                           
 17548                           ; BSR set to: 2
 17549                           ;lorawan.c: 235: {
 17550                           ;lorawan.c: 236: RADIO_ReceiveStop();
 17551  00547A  EC5F  F03A         	call	_RADIO_ReceiveStop	;wreg free
 17552  00547E                     l13962:
 17553                           
 17554                           ;lorawan.c: 237: }
 17555                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 17556  00547E  C0D6  F0CA         	movff	LORAWAN_Send@port,AssemblePacket@port
 17557  005482  C0D7  F0CB         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 17558  005486  C0D8  F0CC         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 17559  00548A  C0D9  F0CD         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 17560  00548E  0100               	movlb	0	; () banked
 17561  005490  6BCE               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 17562  005492  51DC               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 17563  005494  EC16  F00F         	call	_AssemblePacket
 17564                           
 17565                           ; BSR set to: 2
 17566                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 17567  005498  0EF0               	movlw	low (_macBuffer+16)
 17568  00549A  0100               	movlb	0	; () banked
 17569  00549C  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 17570  00549E  0E04               	movlw	high (_macBuffer+16)
 17571  0054A0  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 17572  0054A2  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 17573  0054A6  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 17574  0054AA  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 17575  0054AC  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 17576  0054AE  A4D8               	btfss	status,2,c
 17577  0054B0  0012               	return	
 17578                           
 17579                           ; BSR set to: 0
 17580                           ;lorawan.c: 242: {
 17581                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 17582  0054B2  0102               	movlb	2	; () banked
 17583  0054B4  2B06               	incf	(_loRa+6)& (0+255),f,b
 17584  0054B6  0E00               	movlw	0
 17585  0054B8  2307               	addwfc	(_loRa+7)& (0+255),f,b
 17586  0054BA  2308               	addwfc	(_loRa+8)& (0+255),f,b
 17587  0054BC  2309               	addwfc	(_loRa+9)& (0+255),f,b
 17588                           
 17589                           ;lorawan.c: 245: if (CNF == confirmed)
 17590  0054BE  0100               	movlb	0	; () banked
 17591  0054C0  05DC               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 17592  0054C2  E102               	bnz	l1746
 17593                           
 17594                           ; BSR set to: 0
 17595                           ;lorawan.c: 246: {
 17596                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17597  0054C4  0102               	movlb	2	; () banked
 17598  0054C6  8100               	bsf	_loRa& (0+255),0,b
 17599  0054C8                     l1746:
 17600                           
 17601                           ;lorawan.c: 248: }
 17602                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 17603  0054C8  0102               	movlb	2	; () banked
 17604  0054CA  8B00               	bsf	_loRa& (0+255),5,b
 17605                           
 17606                           ; BSR set to: 2
 17607                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 17608  0054CC  5102               	movf	(_loRa+2)& (0+255),w,b
 17609  0054CE  0BF0               	andlw	-16
 17610  0054D0  0901               	iorlw	1
 17611  0054D2  6F02               	movwf	(_loRa+2)& (0+255),b
 17612                           
 17613                           ;lorawan.c: 251: }
 17614  0054D4  0012               	return		;funcret
 17615  0054D6                     __end_of_LORAWAN_Send:
 17616                           	opt stack 0
 17617                           tosu	equ	0xFFF
 17618                           tosh	equ	0xFFE
 17619                           tosl	equ	0xFFD
 17620                           pclath	equ	0xFFA
 17621                           tblptru	equ	0xFF8
 17622                           tblptrh	equ	0xFF7
 17623                           tblptrl	equ	0xFF6
 17624                           tablat	equ	0xFF5
 17625                           prodh	equ	0xFF4
 17626                           prodl	equ	0xFF3
 17627                           intcon	equ	0xFF2
 17628                           intcon2	equ	0xFF1
 17629                           intcon3	equ	0xFF0
 17630                           indf0	equ	0xFEF
 17631                           postinc0	equ	0xFEE
 17632                           fsr0h	equ	0xFEA
 17633                           fsr0l	equ	0xFE9
 17634                           wreg	equ	0xFE8
 17635                           postinc1	equ	0xFE6
 17636                           postdec1	equ	0xFE5
 17637                           plusw1	equ	0xFE3
 17638                           fsr1h	equ	0xFE2
 17639                           fsr1l	equ	0xFE1
 17640                           indf2	equ	0xFDF
 17641                           postinc2	equ	0xFDE
 17642                           postdec2	equ	0xFDD
 17643                           plusw2	equ	0xFDB
 17644                           fsr2h	equ	0xFDA
 17645                           fsr2l	equ	0xFD9
 17646                           status	equ	0xFD8
 17647                           
 17648 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 17649 ;; Defined at:
 17650 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17651 ;; Parameters:    Size  Location     Type
 17652 ;;		None
 17653 ;; Auto vars:     Size  Location     Type
 17654 ;;  result          1   14[BANK0 ] unsigned char 
 17655 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 17656 ;; Return value:  Size  Location     Type
 17657 ;;                  1    wreg      unsigned char 
 17658 ;; Registers used:
 17659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17660 ;; Tracked objects:
 17661 ;;		On entry : D/2
 17662 ;;		On exit  : F/0
 17663 ;;		Unchanged: 0/0
 17664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17666 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17668 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17669 ;;Total ram usage:        3 bytes
 17670 ;; Hardware stack levels used:    1
 17671 ;; Hardware stack levels required when called:    8
 17672 ;; This function calls:
 17673 ;;		_CountfOptsLength
 17674 ;; This function is called by:
 17675 ;;		_LORAWAN_Send
 17676 ;;		_AckRetransmissionCallback
 17677 ;; This function uses a non-reentrant model
 17678 ;;
 17679                           
 17680                           	psect	text96
 17681  006AAE                     __ptext96:
 17682                           	opt stack 0
 17683  006AAE                     _LORAWAN_GetMaxPayloadSize:
 17684                           	opt stack 20
 17685                           
 17686                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 17687                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 17688                           
 17689                           ;incstack = 0
 17690  006AAE  EC6B  F02A         	call	_CountfOptsLength	;wreg free
 17691  006AB2  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 17695  006AB4  0102               	movlb	2	; () banked
 17696  006AB6  51A7               	movf	(_loRa+167)& (0+255),w,b
 17697  006AB8  E10D               	bnz	l13654
 17698                           
 17699                           ; BSR set to: 2
 17700                           ;lorawan.c: 1564: {
 17701                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 17702  006ABA  0E6D               	movlw	low _maxPayloadSize
 17703  006ABC  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17704  006ABE  6EF6               	movwf	tblptrl,c
 17705  006AC0  6AF7               	clrf	tblptrh,c
 17706  006AC2  0EFF               	movlw	high _maxPayloadSize
 17707  006AC4  22F7               	addwfc	tblptrh,f,c
 17708  006AC6                     	if	1	;There are 3 active tblptr bytes
 17709  006AC6  6AF8               	clrf	tblptru,c
 17710  006AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 17711  006ACA  22F8               	addwfc	tblptru,f,c
 17712  006ACC                     	endif
 17713  006ACC  0008               	tblrd		*
 17714  006ACE  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 17715                           
 17716                           ;lorawan.c: 1566: }
 17717  006AD2  D010               	goto	l13656
 17718  006AD4                     l13654:
 17719                           
 17720                           ; BSR set to: 2
 17721                           ;lorawan.c: 1567: else
 17722                           ;lorawan.c: 1568: {
 17723                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 17724  006AD4  0E6D               	movlw	low _maxPayloadSize
 17725  006AD6  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17726  006AD8  6EF6               	movwf	tblptrl,c
 17727  006ADA  6AF7               	clrf	tblptrh,c
 17728  006ADC  0EFF               	movlw	high _maxPayloadSize
 17729  006ADE  22F7               	addwfc	tblptrh,f,c
 17730  006AE0                     	if	1	;There are 3 active tblptr bytes
 17731  006AE0  6AF8               	clrf	tblptru,c
 17732  006AE2  0E00               	movlw	low (__mediumconst shr (0+16))
 17733  006AE4  22F8               	addwfc	tblptru,f,c
 17734  006AE6                     	endif
 17735  006AE6  0008               	tblrd		*
 17736  006AE8  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 17737  006AEC  0100               	movlb	0	; () banked
 17738  006AEE  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 17739  006AF0  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 17740  006AF2  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 17741  006AF4                     l13656:
 17742                           
 17743                           ;lorawan.c: 1570: }
 17744                           ;lorawan.c: 1572: return result;
 17745  006AF4  0100               	movlb	0	; () banked
 17746  006AF6  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 17747                           
 17748                           ; BSR set to: 0
 17749  006AF8  0012               	return		;funcret
 17750  006AFA                     __end_of_LORAWAN_GetMaxPayloadSize:
 17751                           	opt stack 0
 17752                           tosu	equ	0xFFF
 17753                           tosh	equ	0xFFE
 17754                           tosl	equ	0xFFD
 17755                           pclath	equ	0xFFA
 17756                           tblptru	equ	0xFF8
 17757                           tblptrh	equ	0xFF7
 17758                           tblptrl	equ	0xFF6
 17759                           tablat	equ	0xFF5
 17760                           prodh	equ	0xFF4
 17761                           prodl	equ	0xFF3
 17762                           intcon	equ	0xFF2
 17763                           intcon2	equ	0xFF1
 17764                           intcon3	equ	0xFF0
 17765                           indf0	equ	0xFEF
 17766                           postinc0	equ	0xFEE
 17767                           fsr0h	equ	0xFEA
 17768                           fsr0l	equ	0xFE9
 17769                           wreg	equ	0xFE8
 17770                           postinc1	equ	0xFE6
 17771                           postdec1	equ	0xFE5
 17772                           plusw1	equ	0xFE3
 17773                           fsr1h	equ	0xFE2
 17774                           fsr1l	equ	0xFE1
 17775                           indf2	equ	0xFDF
 17776                           postinc2	equ	0xFDE
 17777                           postdec2	equ	0xFDD
 17778                           plusw2	equ	0xFDB
 17779                           fsr2h	equ	0xFDA
 17780                           fsr2l	equ	0xFD9
 17781                           status	equ	0xFD8
 17782                           
 17783 ;; *************** function _AssemblePacket *****************
 17784 ;; Defined at:
 17785 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17786 ;; Parameters:    Size  Location     Type
 17787 ;;  confirmed       1    wreg     unsigned char 
 17788 ;;  port            1  106[BANK0 ] unsigned char 
 17789 ;;  buffer          2  107[BANK0 ] PTR unsigned char 
 17790 ;;		 -> payload(4), NULL(0), 
 17791 ;;  bufferLength    2  109[BANK0 ] unsigned int 
 17792 ;; Auto vars:     Size  Location     Type
 17793 ;;  confirmed       1  113[BANK0 ] unsigned char 
 17794 ;;  bufferIndex     1  117[BANK0 ] unsigned char 
 17795 ;;  macCmdIdx       1  116[BANK0 ] unsigned char 
 17796 ;;  fCtrl           1  115[BANK0 ] struct .
 17797 ;;  mhdr            1  114[BANK0 ] struct .
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  1    wreg      void 
 17800 ;; Registers used:
 17801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17802 ;; Tracked objects:
 17803 ;;		On entry : F/0
 17804 ;;		On exit  : F/2
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17807 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17808 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17810 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17811 ;;Total ram usage:       12 bytes
 17812 ;; Hardware stack levels used:    1
 17813 ;; Hardware stack levels required when called:   12
 17814 ;; This function calls:
 17815 ;;		_AESCmac
 17816 ;;		_AssembleEncryptionBlock
 17817 ;;		_CountfOptsLength
 17818 ;;		_EncryptFRMPayload
 17819 ;;		_FindSmallestDataRate
 17820 ;;		_IncludeMacCommandsResponse
 17821 ;;		_memcpy
 17822 ;;		_memset
 17823 ;; This function is called by:
 17824 ;;		_LORAWAN_Send
 17825 ;; This function uses a non-reentrant model
 17826 ;;
 17827                           
 17828                           	psect	text97
 17829  001E2C                     __ptext97:
 17830                           	opt stack 0
 17831  001E2C                     _AssemblePacket:
 17832                           	opt stack 16
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;incstack = 0
 17836                           ;AssemblePacket@confirmed stored from wreg
 17837  001E2C  6FD1               	movwf	AssemblePacket@confirmed& (0+255),b
 17838                           
 17839                           ;lorawan.c: 1674: Mhdr_t mhdr;
 17840                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 17841  001E2E  0E10               	movlw	16
 17842  001E30  0100               	movlb	0	; () banked
 17843  001E32  6FD5               	movwf	AssemblePacket@bufferIndex& (0+255),b
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 17847                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 17848  001E34  6BD4               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 17852  001E36  0ED2               	movlw	low AssemblePacket@mhdr
 17853  001E38  6F64               	movwf	memset@p1& (0+255),b
 17854  001E3A  6B65               	clrf	(memset@p1+1)& (0+255),b
 17855  001E3C  6B67               	clrf	(memset@c+1)& (0+255),b
 17856  001E3E  6B66               	clrf	memset@c& (0+255),b
 17857  001E40  6B69               	clrf	(memset@n+1)& (0+255),b
 17858  001E42  0E01               	movlw	1
 17859  001E44  6F68               	movwf	memset@n& (0+255),b
 17860  001E46  EC20  F039         	call	_memset	;wreg free
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 17864  001E4A  0EE0               	movlw	low _macBuffer
 17865  001E4C  6F64               	movwf	memset@p1& (0+255),b
 17866  001E4E  0E04               	movlw	high _macBuffer
 17867  001E50  6F65               	movwf	(memset@p1+1)& (0+255),b
 17868  001E52  6B67               	clrf	(memset@c+1)& (0+255),b
 17869  001E54  6B66               	clrf	memset@c& (0+255),b
 17870  001E56  0E01               	movlw	1
 17871  001E58  6F69               	movwf	(memset@n+1)& (0+255),b
 17872  001E5A  0E0F               	movlw	15
 17873  001E5C  6F68               	movwf	memset@n& (0+255),b
 17874  001E5E  EC20  F039         	call	_memset	;wreg free
 17875                           
 17876                           ; BSR set to: 0
 17877                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 17878  001E62  0EA0               	movlw	low _aesBuffer
 17879  001E64  6F64               	movwf	memset@p1& (0+255),b
 17880  001E66  0E01               	movlw	high _aesBuffer
 17881  001E68  6F65               	movwf	(memset@p1+1)& (0+255),b
 17882  001E6A  6B67               	clrf	(memset@c+1)& (0+255),b
 17883  001E6C  6B66               	clrf	memset@c& (0+255),b
 17884  001E6E  6B69               	clrf	(memset@n+1)& (0+255),b
 17885  001E70  0E10               	movlw	16
 17886  001E72  6F68               	movwf	memset@n& (0+255),b
 17887  001E74  EC20  F039         	call	_memset	;wreg free
 17888                           
 17889                           ; BSR set to: 0
 17890                           ;lorawan.c: 1683: if (confirmed == 1)
 17891  001E78  05D1               	decf	AssemblePacket@confirmed& (0+255),w,b
 17892  001E7A  E107               	bnz	l13676
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;lorawan.c: 1684: {
 17896                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 17897  001E7C  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 17898  001E7E  0B1F               	andlw	-225
 17899  001E80  0980               	iorlw	128
 17900  001E82  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17904  001E84  0102               	movlb	2	; () banked
 17905  001E86  8100               	bsf	_loRa& (0+255),0,b
 17906                           
 17907                           ;lorawan.c: 1687: }
 17908  001E88  D004               	goto	l2231
 17909  001E8A                     l13676:
 17910                           
 17911                           ; BSR set to: 0
 17912                           ;lorawan.c: 1688: else
 17913                           ;lorawan.c: 1689: {
 17914                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 17915  001E8A  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 17916  001E8C  0B1F               	andlw	-225
 17917  001E8E  0940               	iorlw	64
 17918  001E90  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 17919  001E92                     l2231:
 17920                           
 17921                           ;lorawan.c: 1691: }
 17922                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 17923  001E92  0EFC               	movlw	-4
 17924  001E94  0100               	movlb	0	; () banked
 17925  001E96  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 17926                           
 17927                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 17928  001E98  0EE3               	movlw	-29
 17929  001E9A  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 17930                           
 17931                           ; BSR set to: 0
 17932                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 17933  001E9C  0EE0               	movlw	low _macBuffer
 17934  001E9E  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 17935  001EA0  6ED9               	movwf	fsr2l,c
 17936  001EA2  6ADA               	clrf	fsr2h,c
 17937  001EA4  0E04               	movlw	high _macBuffer
 17938  001EA6  22DA               	addwfc	fsr2h,f,c
 17939  001EA8  C0D2  FFDF         	movff	AssemblePacket@mhdr,indf2
 17940                           
 17941                           ; BSR set to: 0
 17942  001EAC  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 17943                           
 17944                           ; BSR set to: 0
 17945                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 17946  001EAE  0EE0               	movlw	low _macBuffer
 17947  001EB0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 17948  001EB2  6F64               	movwf	memcpy@d1& (0+255),b
 17949  001EB4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 17950  001EB6  0E04               	movlw	high _macBuffer
 17951  001EB8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 17952  001EBA  0E1E               	movlw	low (_loRa+30)
 17953  001EBC  6F66               	movwf	memcpy@s1& (0+255),b
 17954  001EBE  0E02               	movlw	high (_loRa+30)
 17955  001EC0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 17956  001EC2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 17957  001EC4  0E04               	movlw	4
 17958  001EC6  6F68               	movwf	memcpy@n& (0+255),b
 17959  001EC8  EC14  F034         	call	_memcpy	;wreg free
 17960                           
 17961                           ; BSR set to: 0
 17962                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 17963  001ECC  0E04               	movlw	4
 17964  001ECE  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 17965                           
 17966                           ; BSR set to: 0
 17967                           ;lorawan.c: 1699: fCtrl.value = 0;
 17968  001ED0  6BD3               	clrf	AssemblePacket@fCtrl& (0+255),b
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 17972  001ED2  0102               	movlb	2	; () banked
 17973  001ED4  AD02               	btfss	(_loRa+2)& (0+255),6,b
 17974  001ED6  D030               	goto	l2232
 17975                           
 17976                           ; BSR set to: 2
 17977                           ;lorawan.c: 1702: {
 17978                           ;lorawan.c: 1703: fCtrl.adr = 1;
 17979  001ED8  0100               	movlb	0	; () banked
 17980  001EDA  8FD3               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 17984  001EDC  0102               	movlb	2	; () banked
 17985  001EDE  51DF               	movf	(_loRa+223)& (0+255),w,b
 17986  001EE0  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 17987  001EE2  E229               	bc	l2233
 17988                           
 17989                           ; BSR set to: 2
 17990                           ;lorawan.c: 1705: {
 17991                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 17992  001EE4  0100               	movlb	0	; () banked
 17993  001EE6  8DD3               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 17994                           
 17995                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 17996  001EE8  0102               	movlb	2	; () banked
 17997  001EEA  8900               	bsf	_loRa& (0+255),4,b
 17998                           
 17999                           ; BSR set to: 2
 18000                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18001  001EEC  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18002  001EEE  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18003                           
 18004                           ; BSR set to: 2
 18005                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18006  001EF0  51A2               	movf	(_loRa+162)& (0+255),w,b
 18007  001EF2  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 18008  001EF4  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 18009  001EF6  E102               	bnz	l13702
 18010                           
 18011                           ; BSR set to: 2
 18012                           ;lorawan.c: 1711: {
 18013                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18014  001EF8  6BEE               	clrf	(_loRa+238)& (0+255),b
 18015  001EFA  D01A               	goto	L9
 18016  001EFC                     l13702:
 18017                           
 18018                           ; BSR set to: 2
 18019                           ;lorawan.c: 1716: else
 18020                           ;lorawan.c: 1717: {
 18021                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 18022  001EFC  51A2               	movf	(_loRa+162)& (0+255),w,b
 18023  001EFE  0100               	movlb	0	; () banked
 18024  001F00  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18025  001F02  6BD0               	clrf	(??_AssemblePacket+1)& (0+255),b
 18026  001F04  0102               	movlb	2	; () banked
 18027  001F06  51D0               	movf	(_loRa+208)& (0+255),w,b
 18028  001F08  0100               	movlb	0	; () banked
 18029  001F0A  5DCF               	subwf	??_AssemblePacket& (0+255),w,b
 18030  001F0C  0102               	movlb	2	; () banked
 18031  001F0E  51D1               	movf	(_loRa+209)& (0+255),w,b
 18032  001F10  0100               	movlb	0	; () banked
 18033  001F12  59D0               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 18034  001F14  E20E               	bc	l2236
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;lorawan.c: 1719: {
 18038                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 18039  001F16  0102               	movlb	2	; () banked
 18040  001F18  2BEE               	incf	(_loRa+238)& (0+255),f,b
 18041                           
 18042                           ; BSR set to: 2
 18043                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 18044  001F1A  51EE               	movf	(_loRa+238)& (0+255),w,b
 18045  001F1C  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 18046  001F1E  E20C               	bc	l2232
 18047                           
 18048                           ; BSR set to: 2
 18049                           ;lorawan.c: 1725: {
 18050                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 18051  001F20  6BEE               	clrf	(_loRa+238)& (0+255),b
 18052                           
 18053                           ; BSR set to: 2
 18054                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 18055  001F22  EC8A  F02C         	call	_FindSmallestDataRate	;wreg free
 18056  001F26  0900               	iorlw	0
 18057  001F28  E107               	bnz	l2232
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;lorawan.c: 1729: {
 18061                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 18062  001F2A  0102               	movlb	2	; () banked
 18063  001F2C  6BD0               	clrf	(_loRa+208)& (0+255),b
 18064  001F2E  6BD1               	clrf	(_loRa+209)& (0+255),b
 18065  001F30                     L9:
 18066                           
 18067                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 18068  001F30  0100               	movlb	0	; () banked
 18069  001F32                     l2236:
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;lorawan.c: 1737: else
 18073                           ;lorawan.c: 1738: {
 18074                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 18075  001F32  9DD3               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 18076                           
 18077                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 18078  001F34  0102               	movlb	2	; () banked
 18079  001F36                     l2233:
 18080                           
 18081                           ; BSR set to: 2
 18082                           ;lorawan.c: 1744: else
 18083                           ;lorawan.c: 1745: {
 18084                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 18085  001F36  9900               	bcf	_loRa& (0+255),4,b
 18086  001F38                     l2232:
 18087                           
 18088                           ;lorawan.c: 1747: }
 18089                           ;lorawan.c: 1748: }
 18090                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 18091  001F38  0102               	movlb	2	; () banked
 18092  001F3A  A300               	btfss	_loRa& (0+255),1,b
 18093  001F3C  D004               	goto	l2241
 18094                           
 18095                           ; BSR set to: 2
 18096                           ;lorawan.c: 1751: {
 18097                           ;lorawan.c: 1752: fCtrl.ack = 1;
 18098  001F3E  0100               	movlb	0	; () banked
 18099  001F40  8BD3               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 18100                           
 18101                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 18102  001F42  0102               	movlb	2	; () banked
 18103  001F44  9300               	bcf	_loRa& (0+255),1,b
 18104  001F46                     l2241:
 18105                           
 18106                           ; BSR set to: 2
 18107                           ;lorawan.c: 1754: }
 18108                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 18109  001F46  0100               	movlb	0	; () banked
 18110  001F48  99D3               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 18111                           
 18112                           ; BSR set to: 0
 18113                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 18114  001F4A  0102               	movlb	2	; () banked
 18115  001F4C  51A7               	movf	(_loRa+167)& (0+255),w,b
 18116  001F4E  E004               	bz	l13720
 18117                           
 18118                           ; BSR set to: 2
 18119  001F50  0100               	movlb	0	; () banked
 18120  001F52  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18121  001F54  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18122  001F56  E104               	bnz	l13722
 18123  001F58                     l13720:
 18124                           
 18125                           ;lorawan.c: 1759: {
 18126                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 18127  001F58  0EF0               	movlw	-16
 18128  001F5A  0100               	movlb	0	; () banked
 18129  001F5C  17D3               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 18130                           
 18131                           ;lorawan.c: 1761: }
 18132  001F5E  D007               	goto	l13724
 18133  001F60                     l13722:
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;lorawan.c: 1763: else
 18137                           ;lorawan.c: 1764: {
 18138                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 18139  001F60  EC6B  F02A         	call	_CountfOptsLength	;wreg free
 18140  001F64  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18141  001F66  19D3               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 18142  001F68  0BF0               	andlw	-16
 18143  001F6A  19CF               	xorwf	??_AssemblePacket& (0+255),w,b
 18144  001F6C  6FD3               	movwf	AssemblePacket@fCtrl& (0+255),b
 18145  001F6E                     l13724:
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;lorawan.c: 1766: }
 18149                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 18150  001F6E  0EE0               	movlw	low _macBuffer
 18151  001F70  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18152  001F72  6ED9               	movwf	fsr2l,c
 18153  001F74  6ADA               	clrf	fsr2h,c
 18154  001F76  0E04               	movlw	high _macBuffer
 18155  001F78  22DA               	addwfc	fsr2h,f,c
 18156  001F7A  C0D3  FFDF         	movff	AssemblePacket@fCtrl,indf2
 18157                           
 18158                           ; BSR set to: 0
 18159  001F7E  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 18163  001F80  0EE0               	movlw	low _macBuffer
 18164  001F82  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18165  001F84  6F64               	movwf	memcpy@d1& (0+255),b
 18166  001F86  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18167  001F88  0E04               	movlw	high _macBuffer
 18168  001F8A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18169  001F8C  0E06               	movlw	low (_loRa+6)
 18170  001F8E  6F66               	movwf	memcpy@s1& (0+255),b
 18171  001F90  0E02               	movlw	high (_loRa+6)
 18172  001F92  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18173  001F94  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18174  001F96  0E02               	movlw	2
 18175  001F98  6F68               	movwf	memcpy@n& (0+255),b
 18176  001F9A  EC14  F034         	call	_memcpy	;wreg free
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 18180  001F9E  0E02               	movlw	2
 18181  001FA0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18182                           
 18183                           ; BSR set to: 0
 18184                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 18185  001FA2  0102               	movlb	2	; () banked
 18186  001FA4  51A7               	movf	(_loRa+167)& (0+255),w,b
 18187  001FA6  E00E               	bz	l13738
 18188                           
 18189                           ; BSR set to: 2
 18190  001FA8  0100               	movlb	0	; () banked
 18191  001FAA  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18192  001FAC  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18193  001FAE  E00A               	bz	l13738
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;lorawan.c: 1774: {
 18197                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 18198  001FB0  0EE0               	movlw	low _macBuffer
 18199  001FB2  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18200  001FB4  0E04               	movlw	high _macBuffer
 18201  001FB6  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18202  001FB8  0ED5               	movlw	low AssemblePacket@bufferIndex
 18203  001FBA  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18204  001FBC  0E01               	movlw	1
 18205  001FBE  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18206  001FC0  EC9A  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18207  001FC4                     l13738:
 18208                           
 18209                           ;lorawan.c: 1776: }
 18210                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 18211  001FC4  0EE0               	movlw	low _macBuffer
 18212  001FC6  0100               	movlb	0	; () banked
 18213  001FC8  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18214  001FCA  6ED9               	movwf	fsr2l,c
 18215  001FCC  6ADA               	clrf	fsr2h,c
 18216  001FCE  0E04               	movlw	high _macBuffer
 18217  001FD0  22DA               	addwfc	fsr2h,f,c
 18218  001FD2  C0CA  FFDF         	movff	AssemblePacket@port,indf2
 18219                           
 18220                           ; BSR set to: 0
 18221  001FD6  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;lorawan.c: 1780: if (bufferLength != 0)
 18225  001FD8  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18226  001FDA  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18227  001FDC  E02E               	bz	l13750
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;lorawan.c: 1781: {
 18231                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 18232  001FDE  0EE0               	movlw	low _macBuffer
 18233  001FE0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18234  001FE2  6F64               	movwf	memcpy@d1& (0+255),b
 18235  001FE4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18236  001FE6  0E04               	movlw	high _macBuffer
 18237  001FE8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18238  001FEA  C0CB  F066         	movff	AssemblePacket@buffer,memcpy@s1
 18239  001FEE  C0CC  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 18240  001FF2  C0CD  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 18241  001FF6  C0CE  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 18242  001FFA  EC14  F034         	call	_memcpy	;wreg free
 18243                           
 18244                           ; BSR set to: 0
 18245                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 18246  001FFE  C0CB  F094         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 18247  002002  C0CC  F095         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 18248  002006  C0CD  F096         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 18249  00200A  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18250  00200C  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18251  002010  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18252  002014  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18253  002018  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18254  00201C  0E32               	movlw	low (_loRa+50)
 18255  00201E  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18256  002020  0E02               	movlw	high (_loRa+50)
 18257  002022  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18258  002024  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18259  002028  0EE0               	movlw	low _macBuffer
 18260  00202A  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18261  00202C  0E04               	movlw	high _macBuffer
 18262  00202E  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18263  002030  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18264  002032  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 18268  002036  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18269  002038  D02A               	goto	L8
 18270  00203A                     l13750:
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 18274  00203A  0102               	movlb	2	; () banked
 18275  00203C  51A7               	movf	(_loRa+167)& (0+255),w,b
 18276  00203E  E028               	bz	l13756
 18277                           
 18278                           ; BSR set to: 2
 18279                           ;lorawan.c: 1787: {
 18280                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 18281  002040  0EEF               	movlw	low _radioBuffer
 18282  002042  0100               	movlb	0	; () banked
 18283  002044  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18284  002046  0E05               	movlw	high _radioBuffer
 18285  002048  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18286  00204A  0ED4               	movlw	low AssemblePacket@macCmdIdx
 18287  00204C  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18288  00204E  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18289  002050  EC9A  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18290                           
 18291                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 18292  002054  0EEF               	movlw	low _radioBuffer
 18293  002056  6F94               	movwf	EncryptFRMPayload@buffer& (0+255),b
 18294  002058  0E05               	movlw	high _radioBuffer
 18295  00205A  6F95               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 18296  00205C  C0D4  F096         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 18297  002060  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18298  002062  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18299  002066  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18300  00206A  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18301  00206E  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18302  002072  0E22               	movlw	low (_loRa+34)
 18303  002074  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18304  002076  0E02               	movlw	high (_loRa+34)
 18305  002078  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18306  00207A  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18307  00207E  0EE0               	movlw	low _macBuffer
 18308  002080  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18309  002082  0E04               	movlw	high _macBuffer
 18310  002084  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18311  002086  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18312  002088  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 18316  00208C  51D4               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 18317  00208E                     L8:
 18318  00208E  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18319  002090                     l13756:
 18320                           
 18321                           ;lorawan.c: 1793: }
 18322                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 18323  002090  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 18324  002094  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 18325  002098  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 18326  00209C  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 18327  0020A0  0100               	movlb	0	; () banked
 18328  0020A2  51D5               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18329  0020A4  0FF0               	addlw	240
 18330  0020A6  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 18331  0020A8  0E49               	movlw	73
 18332  0020AA  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 18333  0020AC  0E00               	movlw	0
 18334  0020AE  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 18335  0020B0  EC31  F02C         	call	_AssembleEncryptionBlock
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 18339  0020B4  0EE0               	movlw	low _macBuffer
 18340  0020B6  6F64               	movwf	memcpy@d1& (0+255),b
 18341  0020B8  0E04               	movlw	high _macBuffer
 18342  0020BA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 18343  0020BC  0EA0               	movlw	low _aesBuffer
 18344  0020BE  6F66               	movwf	memcpy@s1& (0+255),b
 18345  0020C0  0E01               	movlw	high _aesBuffer
 18346  0020C2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18347  0020C4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18348  0020C6  0E10               	movlw	16
 18349  0020C8  6F68               	movwf	memcpy@n& (0+255),b
 18350  0020CA  EC14  F034         	call	_memcpy	;wreg free
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 18354  0020CE  0E22               	movlw	low (_loRa+34)
 18355  0020D0  6FBC               	movwf	AESCmac@key& (0+255),b
 18356  0020D2  0E02               	movlw	high (_loRa+34)
 18357  0020D4  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 18358  0020D6  0EA0               	movlw	low _aesBuffer
 18359  0020D8  6FBE               	movwf	AESCmac@output& (0+255),b
 18360  0020DA  0E01               	movlw	high _aesBuffer
 18361  0020DC  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 18362  0020DE  0EE0               	movlw	low _macBuffer
 18363  0020E0  6FC0               	movwf	AESCmac@input& (0+255),b
 18364  0020E2  0E04               	movlw	high _macBuffer
 18365  0020E4  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 18366  0020E6  C0D5  F0C2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 18367  0020EA  EC0C  F00C         	call	_AESCmac	;wreg free
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 18371  0020EE  0EE0               	movlw	low _macBuffer
 18372  0020F0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18373  0020F2  6F64               	movwf	memcpy@d1& (0+255),b
 18374  0020F4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18375  0020F6  0E04               	movlw	high _macBuffer
 18376  0020F8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18377  0020FA  0EA0               	movlw	low _aesBuffer
 18378  0020FC  6F66               	movwf	memcpy@s1& (0+255),b
 18379  0020FE  0E01               	movlw	high _aesBuffer
 18380  002100  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18381  002102  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18382  002104  0E04               	movlw	4
 18383  002106  6F68               	movwf	memcpy@n& (0+255),b
 18384  002108  EC14  F034         	call	_memcpy	;wreg free
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 18388  00210C  0E04               	movlw	4
 18389  00210E  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18390                           
 18391                           ; BSR set to: 0
 18392                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 18393  002110  0EF0               	movlw	240
 18394  002112  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18395  002114  0102               	movlb	2	; () banked
 18396  002116  6FD4               	movwf	(_loRa+212)& (0+255),b
 18397  002118  6BD5               	clrf	(_loRa+213)& (0+255),b
 18398  00211A  0EFF               	movlw	255
 18399  00211C  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 18400                           
 18401                           ; BSR set to: 2
 18402  00211E  0CFF               	retlw	255	;funcret
 18403  002120                     __end_of_AssemblePacket:
 18404                           	opt stack 0
 18405                           tosu	equ	0xFFF
 18406                           tosh	equ	0xFFE
 18407                           tosl	equ	0xFFD
 18408                           pclath	equ	0xFFA
 18409                           tblptru	equ	0xFF8
 18410                           tblptrh	equ	0xFF7
 18411                           tblptrl	equ	0xFF6
 18412                           tablat	equ	0xFF5
 18413                           prodh	equ	0xFF4
 18414                           prodl	equ	0xFF3
 18415                           intcon	equ	0xFF2
 18416                           intcon2	equ	0xFF1
 18417                           intcon3	equ	0xFF0
 18418                           indf0	equ	0xFEF
 18419                           postinc0	equ	0xFEE
 18420                           fsr0h	equ	0xFEA
 18421                           fsr0l	equ	0xFE9
 18422                           wreg	equ	0xFE8
 18423                           postinc1	equ	0xFE6
 18424                           postdec1	equ	0xFE5
 18425                           plusw1	equ	0xFE3
 18426                           fsr1h	equ	0xFE2
 18427                           fsr1l	equ	0xFE1
 18428                           indf2	equ	0xFDF
 18429                           postinc2	equ	0xFDE
 18430                           postdec2	equ	0xFDD
 18431                           plusw2	equ	0xFDB
 18432                           fsr2h	equ	0xFDA
 18433                           fsr2l	equ	0xFD9
 18434                           status	equ	0xFD8
 18435                           
 18436 ;; *************** function _IncludeMacCommandsResponse *****************
 18437 ;; Defined at:
 18438 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18439 ;; Parameters:    Size  Location     Type
 18440 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 18441 ;;		 -> macBuffer(271), radioBuffer(271), 
 18442 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 18443 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 18444 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 18445 ;; Auto vars:     Size  Location     Type
 18446 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 18447 ;;  i               1   14[BANK0 ] unsigned char 
 18448 ;; Return value:  Size  Location     Type
 18449 ;;                  1    wreg      void 
 18450 ;; Registers used:
 18451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18452 ;; Tracked objects:
 18453 ;;		On entry : F/0
 18454 ;;		On exit  : F/0
 18455 ;;		Unchanged: 0/0
 18456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18459 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18460 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18461 ;;Total ram usage:       12 bytes
 18462 ;; Hardware stack levels used:    1
 18463 ;; Hardware stack levels required when called:    8
 18464 ;; This function calls:
 18465 ;;		_RADIO_GetPacketSnr
 18466 ;; This function is called by:
 18467 ;;		_AssemblePacket
 18468 ;; This function uses a non-reentrant model
 18469 ;;
 18470                           
 18471                           	psect	text98
 18472  001B34                     __ptext98:
 18473                           	opt stack 0
 18474  001B34                     _IncludeMacCommandsResponse:
 18475                           	opt stack 19
 18476                           
 18477                           ; BSR set to: 0
 18478                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 18479                           
 18480                           ; BSR set to: 0
 18481                           
 18482                           ; BSR set to: 2
 18483                           ;incstack = 0
 18484  001B34  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18485  001B36  6ED9               	movwf	fsr2l,c
 18486  001B38  6ADA               	clrf	fsr2h,c
 18487  001B3A  50DF               	movf	indf2,w,c
 18488  001B3C  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 18492  001B3E  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 18493  001B40  D169               	goto	l13340
 18494  001B42                     l13244:
 18495                           
 18496                           ; BSR set to: 0
 18497                           ;lorawan.c: 1851: {
 18498                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 18499  001B42  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 18500  001B44  E101 D14B          	bz	l13336
 18501                           
 18502                           ; BSR set to: 0
 18503  001B48  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18504  001B4A  0D02               	mullw	2
 18505  001B4C  0EA8               	movlw	low (_loRa+168)
 18506  001B4E  24F3               	addwf	prodl,w,c
 18507  001B50  6ED9               	movwf	fsr2l,c
 18508  001B52  0E02               	movlw	high (_loRa+168)
 18509  001B54  20F4               	addwfc	prodh,w,c
 18510  001B56  6EDA               	movwf	fsr2h,c
 18511  001B58  28DE               	incf	postinc2,w,c
 18512  001B5A  E101 D140          	bz	l13336
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;lorawan.c: 1853: {
 18516                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 18517  001B5E  0EFE               	movlw	254
 18518  001B60  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 18519  001B62  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 18520  001B64  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18521  001B66  0D02               	mullw	2
 18522  001B68  0EA8               	movlw	low (_loRa+168)
 18523  001B6A  24F3               	addwf	prodl,w,c
 18524  001B6C  6ED9               	movwf	fsr2l,c
 18525  001B6E  0E02               	movlw	high (_loRa+168)
 18526  001B70  20F4               	addwfc	prodh,w,c
 18527  001B72  6EDA               	movwf	fsr2h,c
 18528  001B74  50DF               	movf	indf2,w,c
 18529  001B76  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 18530  001B78  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 18531  001B7A  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 18532  001B7C  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 18533  001B7E  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 18534  001B80  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 18535  001B82  0E94               	movlw	low _macEndDevCmdReplyLen
 18536  001B84  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 18537  001B86  6EF6               	movwf	tblptrl,c
 18538  001B88  0EFF               	movlw	high _macEndDevCmdReplyLen
 18539  001B8A  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 18540  001B8C  6EF7               	movwf	tblptrh,c
 18541  001B8E                     	if	1	;There are 3 active tblptr bytes
 18542  001B8E  6AF8               	clrf	tblptru,c
 18543  001B90  0E00               	movlw	low (__mediumconst shr (0+16))
 18544  001B92  22F8               	addwfc	tblptru,f,c
 18545  001B94                     	endif
 18546  001B94  0008               	tblrd		*
 18547  001B96  50F5               	movf	tablat,w,c
 18548  001B98  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 18549  001B9C  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 18550  001B9E  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18551  001BA0  0E00               	movlw	0
 18552  001BA2  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18553  001BA4  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18554  001BA6  6ED9               	movwf	fsr2l,c
 18555  001BA8  6ADA               	clrf	fsr2h,c
 18556  001BAA  50DF               	movf	indf2,w,c
 18557  001BAC  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18558  001BAE  0E00               	movlw	0
 18559  001BB0  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18560  001BB2  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 18561  001BB4  D114               	goto	l13336
 18562  001BB6  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 18563  001BB8  E105               	bnz	u14570
 18564  001BBA  0E10               	movlw	16
 18565  001BBC  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 18566  001BBE  E301 D12F          	bc	l13342
 18567  001BC2  D10D               	goto	l13336
 18568  001BC4                     u14570:
 18569  001BC4  D12D               	goto	l13342
 18570  001BC6                     l13252:
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;lorawan.c: 1862: {
 18574                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 18575  001BC6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18576  001BC8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18577  001BCA  6ED9               	movwf	fsr2l,c
 18578  001BCC  0E00               	movlw	0
 18579  001BCE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18580  001BD0  6EDA               	movwf	fsr2h,c
 18581  001BD2  0E03               	movlw	3
 18582  001BD4  6EDF               	movwf	indf2,c
 18583                           
 18584                           ; BSR set to: 0
 18585  001BD6  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 18589  001BD8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18590  001BDA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18591  001BDC  6ED9               	movwf	fsr2l,c
 18592  001BDE  0E00               	movlw	0
 18593  001BE0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18594  001BE2  6EDA               	movwf	fsr2h,c
 18595  001BE4  6ADF               	clrf	indf2,c
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 18599  001BE6  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18600  001BE8  0D02               	mullw	2
 18601  001BEA  0EA9               	movlw	low (_loRa+169)
 18602  001BEC  24F3               	addwf	prodl,w,c
 18603  001BEE  6ED9               	movwf	fsr2l,c
 18604  001BF0  0E02               	movlw	high (_loRa+169)
 18605  001BF2  20F4               	addwfc	prodh,w,c
 18606  001BF4  6EDA               	movwf	fsr2h,c
 18607  001BF6  A0DF               	btfss	indf2,0,c
 18608  001BF8  D009               	goto	l13262
 18609                           
 18610                           ; BSR set to: 2
 18611                           ;lorawan.c: 1866: {
 18612                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 18613  001BFA  0100               	movlb	0	; () banked
 18614  001BFC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18615  001BFE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18616  001C00  6ED9               	movwf	fsr2l,c
 18617  001C02  0E00               	movlw	0
 18618  001C04  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18619  001C06  6EDA               	movwf	fsr2h,c
 18620  001C08  0E00               	movlw	0
 18621  001C0A  80DB               	bsf	plusw2,0,c
 18622  001C0C                     l13262:
 18623                           
 18624                           ;lorawan.c: 1868: }
 18625                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 18626  001C0C  0100               	movlb	0	; () banked
 18627  001C0E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18628  001C10  0D02               	mullw	2
 18629  001C12  0EA9               	movlw	low (_loRa+169)
 18630  001C14  24F3               	addwf	prodl,w,c
 18631  001C16  6ED9               	movwf	fsr2l,c
 18632  001C18  0E02               	movlw	high (_loRa+169)
 18633  001C1A  20F4               	addwfc	prodh,w,c
 18634  001C1C  6EDA               	movwf	fsr2h,c
 18635  001C1E  A2DF               	btfss	indf2,1,c
 18636  001C20  D008               	goto	l13266
 18637                           
 18638                           ; BSR set to: 2
 18639                           ;lorawan.c: 1871: {
 18640                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 18641  001C22  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18642  001C24  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18643  001C26  6ED9               	movwf	fsr2l,c
 18644  001C28  0E00               	movlw	0
 18645  001C2A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18646  001C2C  6EDA               	movwf	fsr2h,c
 18647  001C2E  0E00               	movlw	0
 18648  001C30  82DB               	bsf	plusw2,1,c
 18649  001C32                     l13266:
 18650                           
 18651                           ;lorawan.c: 1873: }
 18652                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 18653  001C32  0100               	movlb	0	; () banked
 18654  001C34  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18655  001C36  0D02               	mullw	2
 18656  001C38  0EA9               	movlw	low (_loRa+169)
 18657  001C3A  24F3               	addwf	prodl,w,c
 18658  001C3C  6ED9               	movwf	fsr2l,c
 18659  001C3E  0E02               	movlw	high (_loRa+169)
 18660  001C40  20F4               	addwfc	prodh,w,c
 18661  001C42  6EDA               	movwf	fsr2h,c
 18662  001C44  A4DF               	btfss	indf2,2,c
 18663  001C46  D009               	goto	l13270
 18664  001C48                     l13268:
 18665                           
 18666                           ; BSR set to: 2
 18667                           ;lorawan.c: 1876: {
 18668                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 18669  001C48  0100               	movlb	0	; () banked
 18670  001C4A  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18671  001C4C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18672  001C4E  6ED9               	movwf	fsr2l,c
 18673  001C50  0E00               	movlw	0
 18674  001C52  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18675  001C54  6EDA               	movwf	fsr2h,c
 18676  001C56  0E00               	movlw	0
 18677  001C58  84DB               	bsf	plusw2,2,c
 18678  001C5A                     l13270:
 18679                           
 18680                           ;lorawan.c: 1878: }
 18681                           ;lorawan.c: 1879: bufferIndex ++;
 18682  001C5A  0100               	movlb	0	; () banked
 18683  001C5C  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18684                           
 18685                           ;lorawan.c: 1880: }
 18686                           ;lorawan.c: 1881: break;
 18687  001C5E  D0D9               	goto	l13338
 18688  001C60                     l13272:
 18689                           
 18690                           ; BSR set to: 0
 18691                           ;lorawan.c: 1884: {
 18692                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 18693  001C60  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18694  001C62  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18695  001C64  6ED9               	movwf	fsr2l,c
 18696  001C66  0E00               	movlw	0
 18697  001C68  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18698  001C6A  6EDA               	movwf	fsr2h,c
 18699  001C6C  0E05               	movlw	5
 18700  001C6E  6EDF               	movwf	indf2,c
 18701                           
 18702                           ; BSR set to: 0
 18703  001C70  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 18707  001C72  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18708  001C74  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18709  001C76  6ED9               	movwf	fsr2l,c
 18710  001C78  0E00               	movlw	0
 18711  001C7A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18712  001C7C  6EDA               	movwf	fsr2h,c
 18713  001C7E  6ADF               	clrf	indf2,c
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 18717  001C80  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18718  001C82  0D02               	mullw	2
 18719  001C84  0EA9               	movlw	low (_loRa+169)
 18720  001C86  24F3               	addwf	prodl,w,c
 18721  001C88  6ED9               	movwf	fsr2l,c
 18722  001C8A  0E02               	movlw	high (_loRa+169)
 18723  001C8C  20F4               	addwfc	prodh,w,c
 18724  001C8E  6EDA               	movwf	fsr2h,c
 18725  001C90  A6DF               	btfss	indf2,3,c
 18726  001C92  D009               	goto	l13282
 18727                           
 18728                           ; BSR set to: 2
 18729                           ;lorawan.c: 1888: {
 18730                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 18731  001C94  0100               	movlb	0	; () banked
 18732  001C96  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18733  001C98  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18734  001C9A  6ED9               	movwf	fsr2l,c
 18735  001C9C  0E00               	movlw	0
 18736  001C9E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18737  001CA0  6EDA               	movwf	fsr2h,c
 18738  001CA2  0E00               	movlw	0
 18739  001CA4  80DB               	bsf	plusw2,0,c
 18740  001CA6                     l13282:
 18741                           
 18742                           ;lorawan.c: 1890: }
 18743                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 18744  001CA6  0100               	movlb	0	; () banked
 18745  001CA8  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18746  001CAA  0D02               	mullw	2
 18747  001CAC  0EA9               	movlw	low (_loRa+169)
 18748  001CAE  24F3               	addwf	prodl,w,c
 18749  001CB0  6ED9               	movwf	fsr2l,c
 18750  001CB2  0E02               	movlw	high (_loRa+169)
 18751  001CB4  20F4               	addwfc	prodh,w,c
 18752  001CB6  6EDA               	movwf	fsr2h,c
 18753  001CB8  A8DF               	btfss	indf2,4,c
 18754  001CBA  D008               	goto	l13286
 18755                           
 18756                           ; BSR set to: 2
 18757                           ;lorawan.c: 1893: {
 18758                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 18759  001CBC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18760  001CBE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18761  001CC0  6ED9               	movwf	fsr2l,c
 18762  001CC2  0E00               	movlw	0
 18763  001CC4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18764  001CC6  6EDA               	movwf	fsr2h,c
 18765  001CC8  0E00               	movlw	0
 18766  001CCA  82DB               	bsf	plusw2,1,c
 18767  001CCC                     l13286:
 18768                           
 18769                           ;lorawan.c: 1895: }
 18770                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 18771  001CCC  0100               	movlb	0	; () banked
 18772  001CCE  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18773  001CD0  0D02               	mullw	2
 18774  001CD2  0EA9               	movlw	low (_loRa+169)
 18775  001CD4  24F3               	addwf	prodl,w,c
 18776  001CD6  6ED9               	movwf	fsr2l,c
 18777  001CD8  0E02               	movlw	high (_loRa+169)
 18778  001CDA  20F4               	addwfc	prodh,w,c
 18779  001CDC  6EDA               	movwf	fsr2h,c
 18780  001CDE  AADF               	btfss	indf2,5,c
 18781  001CE0  D7BC               	goto	l13270
 18782  001CE2  D7B2               	goto	l13268
 18783  001CE4                     l13292:
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;lorawan.c: 1907: {
 18787                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 18788  001CE4  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18789  001CE6  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18790  001CE8  6ED9               	movwf	fsr2l,c
 18791  001CEA  0E00               	movlw	0
 18792  001CEC  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18793  001CEE  6EDA               	movwf	fsr2h,c
 18794  001CF0  0E06               	movlw	6
 18795  001CF2  6EDF               	movwf	indf2,c
 18796                           
 18797                           ; BSR set to: 0
 18798  001CF4  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 18802  001CF6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18803  001CF8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18804  001CFA  6ED9               	movwf	fsr2l,c
 18805  001CFC  0E00               	movlw	0
 18806  001CFE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18807  001D00  6EDA               	movwf	fsr2h,c
 18808  001D02  C2E0  FFDF         	movff	_loRa+224,indf2
 18809  001D06  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18810                           
 18811                           ; BSR set to: 0
 18812                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 18813  001D08  EC7E  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18814  001D0C  0A80               	xorlw	128
 18815  001D0E  0FA0               	addlw	160
 18816  001D10  E305               	bnc	l13302
 18817                           
 18818                           ; BSR set to: 1
 18819  001D12  EC7E  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18820  001D16  0A80               	xorlw	128
 18821  001D18  0F60               	addlw	-160
 18822  001D1A  E309               	bnc	l13306
 18823  001D1C                     l13302:
 18824                           
 18825                           ; BSR set to: 1
 18826                           ;lorawan.c: 1911: {
 18827                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 18828  001D1C  0100               	movlb	0	; () banked
 18829  001D1E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18830  001D20  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18831  001D22  6ED9               	movwf	fsr2l,c
 18832  001D24  0E00               	movlw	0
 18833  001D26  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18834  001D28  6EDA               	movwf	fsr2h,c
 18835  001D2A  0E20               	movlw	32
 18836  001D2C  D00A               	goto	L10
 18837  001D2E                     l13306:
 18838                           
 18839                           ; BSR set to: 1
 18840                           ;lorawan.c: 1914: else
 18841                           ;lorawan.c: 1915: {
 18842                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 18843  001D2E  0100               	movlb	0	; () banked
 18844  001D30  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18845  001D32  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18846  001D34  6ED9               	movwf	fsr2l,c
 18847  001D36  0E00               	movlw	0
 18848  001D38  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18849  001D3A  6EDA               	movwf	fsr2h,c
 18850  001D3C  EC7E  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18851  001D40  0B3F               	andlw	63
 18852  001D42                     L10:
 18853  001D42  6EDF               	movwf	indf2,c
 18854  001D44  D78A               	goto	l13270
 18855  001D46                     l13310:
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;lorawan.c: 1922: {
 18859                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 18860  001D46  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18861  001D48  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18862  001D4A  6ED9               	movwf	fsr2l,c
 18863  001D4C  0E00               	movlw	0
 18864  001D4E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18865  001D50  6EDA               	movwf	fsr2h,c
 18866  001D52  0E07               	movlw	7
 18867  001D54  6EDF               	movwf	indf2,c
 18868                           
 18869                           ; BSR set to: 0
 18870  001D56  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 18874  001D58  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18875  001D5A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18876  001D5C  6ED9               	movwf	fsr2l,c
 18877  001D5E  0E00               	movlw	0
 18878  001D60  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18879  001D62  6EDA               	movwf	fsr2h,c
 18880  001D64  6ADF               	clrf	indf2,c
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 18884  001D66  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18885  001D68  0D02               	mullw	2
 18886  001D6A  0EA9               	movlw	low (_loRa+169)
 18887  001D6C  24F3               	addwf	prodl,w,c
 18888  001D6E  6ED9               	movwf	fsr2l,c
 18889  001D70  0E02               	movlw	high (_loRa+169)
 18890  001D72  20F4               	addwfc	prodh,w,c
 18891  001D74  6EDA               	movwf	fsr2h,c
 18892  001D76  AEDF               	btfss	indf2,7,c
 18893  001D78  D009               	goto	l13320
 18894                           
 18895                           ; BSR set to: 2
 18896                           ;lorawan.c: 1926: {
 18897                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 18898  001D7A  0100               	movlb	0	; () banked
 18899  001D7C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18900  001D7E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18901  001D80  6ED9               	movwf	fsr2l,c
 18902  001D82  0E00               	movlw	0
 18903  001D84  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18904  001D86  6EDA               	movwf	fsr2h,c
 18905  001D88  0E00               	movlw	0
 18906  001D8A  80DB               	bsf	plusw2,0,c
 18907  001D8C                     l13320:
 18908                           
 18909                           ;lorawan.c: 1928: }
 18910                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 18911  001D8C  0100               	movlb	0	; () banked
 18912  001D8E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18913  001D90  0D02               	mullw	2
 18914  001D92  0EA9               	movlw	low (_loRa+169)
 18915  001D94  24F3               	addwf	prodl,w,c
 18916  001D96  6ED9               	movwf	fsr2l,c
 18917  001D98  0E02               	movlw	high (_loRa+169)
 18918  001D9A  20F4               	addwfc	prodh,w,c
 18919  001D9C  6EDA               	movwf	fsr2h,c
 18920  001D9E  ACDF               	btfss	indf2,6,c
 18921  001DA0  D75C               	goto	l13270
 18922                           
 18923                           ; BSR set to: 2
 18924                           ;lorawan.c: 1931: {
 18925                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 18926  001DA2  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18927  001DA4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18928  001DA6  6ED9               	movwf	fsr2l,c
 18929  001DA8  0E00               	movlw	0
 18930  001DAA  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18931  001DAC  6EDA               	movwf	fsr2h,c
 18932  001DAE  0E00               	movlw	0
 18933  001DB0  82DB               	bsf	plusw2,1,c
 18934  001DB2  D753               	goto	l13270
 18935  001DB4                     l2283:
 18936                           
 18937                           ; BSR set to: 0
 18938                           ;lorawan.c: 1939: {
 18939                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 18940  001DB4  0102               	movlb	2	; () banked
 18941  001DB6  69DD               	setf	(_loRa+221)& (0+255),b
 18942                           
 18943                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 18944  001DB8  6BDE               	clrf	(_loRa+222)& (0+255),b
 18945  001DBA                     l13326:
 18946                           
 18947                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 18948  001DBA  0100               	movlb	0	; () banked
 18949  001DBC  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18950  001DBE  0D02               	mullw	2
 18951  001DC0  0EA8               	movlw	low (_loRa+168)
 18952  001DC2  24F3               	addwf	prodl,w,c
 18953  001DC4  6ED9               	movwf	fsr2l,c
 18954  001DC6  0E02               	movlw	high (_loRa+168)
 18955  001DC8  20F4               	addwfc	prodh,w,c
 18956  001DCA  6EDA               	movwf	fsr2h,c
 18957  001DCC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18958  001DCE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18959  001DD0  6EE9               	movwf	fsr0l,c
 18960  001DD2  0E00               	movlw	0
 18961  001DD4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18962  001DD6  6EEA               	movwf	fsr0h,c
 18963  001DD8  CFDF FFEF          	movff	indf2,indf0
 18964  001DDC  D73E               	goto	l13270
 18965  001DDE                     l13336:
 18966                           
 18967                           ; BSR set to: 0
 18968  001DDE  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18969  001DE0  0D02               	mullw	2
 18970  001DE2  0EA8               	movlw	low (_loRa+168)
 18971  001DE4  24F3               	addwf	prodl,w,c
 18972  001DE6  6ED9               	movwf	fsr2l,c
 18973  001DE8  0E02               	movlw	high (_loRa+168)
 18974  001DEA  20F4               	addwfc	prodh,w,c
 18975  001DEC  6EDA               	movwf	fsr2h,c
 18976  001DEE  50DF               	movf	indf2,w,c
 18977                           
 18978                           ; Switch size 1, requested type "speed"
 18979                           ; Number of cases is 7, Range of values is 2 to 8
 18980                           ; switch strategies available:
 18981                           ; Name         Instructions Cycles
 18982                           ; simple_byte           22    12 (average)
 18983                           ;	Chosen strategy is simple_byte
 18984  001DF0  0A02               	xorlw	2	; case 2
 18985  001DF2  E0E0               	bz	l2283
 18986  001DF4  0A01               	xorlw	1	; case 3
 18987  001DF6  E101 D6E6          	bz	l13252
 18988  001DFA  0A07               	xorlw	7	; case 4
 18989  001DFC  E0DE               	bz	l13326
 18990  001DFE  0A01               	xorlw	1	; case 5
 18991  001E00  E101 D72E          	bz	l13272
 18992  001E04  0A03               	xorlw	3	; case 6
 18993  001E06  E101 D76D          	bz	l13292
 18994  001E0A  0A01               	xorlw	1	; case 7
 18995  001E0C  E09C               	bz	l13310
 18996  001E0E  0A0F               	xorlw	15	; case 8
 18997  001E10  E0D4               	bz	l13326
 18998  001E12                     l13338:
 18999                           
 19000                           ; BSR set to: 0
 19001  001E12  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19002  001E14                     l13340:
 19003                           
 19004                           ; BSR set to: 0
 19005  001E14  0102               	movlb	2	; () banked
 19006  001E16  51A7               	movf	(_loRa+167)& (0+255),w,b
 19007  001E18  0100               	movlb	0	; () banked
 19008  001E1A  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19009  001E1C  E201 D691          	bnc	l13244
 19010  001E20                     l13342:
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;lorawan.c: 1957: }
 19014                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19015  001E20  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19016  001E22  6ED9               	movwf	fsr2l,c
 19017  001E24  6ADA               	clrf	fsr2h,c
 19018  001E26  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19019                           
 19020                           ; BSR set to: 0
 19021  001E2A  0012               	return		;funcret
 19022  001E2C                     __end_of_IncludeMacCommandsResponse:
 19023                           	opt stack 0
 19024                           tosu	equ	0xFFF
 19025                           tosh	equ	0xFFE
 19026                           tosl	equ	0xFFD
 19027                           pclath	equ	0xFFA
 19028                           tblptru	equ	0xFF8
 19029                           tblptrh	equ	0xFF7
 19030                           tblptrl	equ	0xFF6
 19031                           tablat	equ	0xFF5
 19032                           prodh	equ	0xFF4
 19033                           prodl	equ	0xFF3
 19034                           intcon	equ	0xFF2
 19035                           intcon2	equ	0xFF1
 19036                           intcon3	equ	0xFF0
 19037                           indf0	equ	0xFEF
 19038                           postinc0	equ	0xFEE
 19039                           fsr0h	equ	0xFEA
 19040                           fsr0l	equ	0xFE9
 19041                           wreg	equ	0xFE8
 19042                           postinc1	equ	0xFE6
 19043                           postdec1	equ	0xFE5
 19044                           plusw1	equ	0xFE3
 19045                           fsr1h	equ	0xFE2
 19046                           fsr1l	equ	0xFE1
 19047                           indf2	equ	0xFDF
 19048                           postinc2	equ	0xFDE
 19049                           postdec2	equ	0xFDD
 19050                           plusw2	equ	0xFDB
 19051                           fsr2h	equ	0xFDA
 19052                           fsr2l	equ	0xFD9
 19053                           status	equ	0xFD8
 19054                           
 19055 ;; *************** function _RADIO_GetPacketSnr *****************
 19056 ;; Defined at:
 19057 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19058 ;; Parameters:    Size  Location     Type
 19059 ;;		None
 19060 ;; Auto vars:     Size  Location     Type
 19061 ;;		None
 19062 ;; Return value:  Size  Location     Type
 19063 ;;                  1    wreg      char 
 19064 ;; Registers used:
 19065 ;;		wreg, status,2
 19066 ;; Tracked objects:
 19067 ;;		On entry : E/0
 19068 ;;		On exit  : F/1
 19069 ;;		Unchanged: 0/0
 19070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19075 ;;Total ram usage:        0 bytes
 19076 ;; Hardware stack levels used:    1
 19077 ;; Hardware stack levels required when called:    7
 19078 ;; This function calls:
 19079 ;;		Nothing
 19080 ;; This function is called by:
 19081 ;;		_IncludeMacCommandsResponse
 19082 ;; This function uses a non-reentrant model
 19083 ;;
 19084                           
 19085                           	psect	text99
 19086  0078FC                     __ptext99:
 19087                           	opt stack 0
 19088  0078FC                     _RADIO_GetPacketSnr:
 19089                           	opt stack 19
 19090                           
 19091                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 19092                           
 19093                           ; BSR set to: 0
 19094                           ;incstack = 0
 19095  0078FC  0101               	movlb	1	; () banked
 19096  0078FE  519C               	movf	(_RadioConfiguration+50)& (0+255),w,b
 19097                           
 19098                           ; BSR set to: 1
 19099  007900  0012               	return		;funcret
 19100  007902                     __end_of_RADIO_GetPacketSnr:
 19101                           	opt stack 0
 19102                           tosu	equ	0xFFF
 19103                           tosh	equ	0xFFE
 19104                           tosl	equ	0xFFD
 19105                           pclath	equ	0xFFA
 19106                           tblptru	equ	0xFF8
 19107                           tblptrh	equ	0xFF7
 19108                           tblptrl	equ	0xFF6
 19109                           tablat	equ	0xFF5
 19110                           prodh	equ	0xFF4
 19111                           prodl	equ	0xFF3
 19112                           intcon	equ	0xFF2
 19113                           intcon2	equ	0xFF1
 19114                           intcon3	equ	0xFF0
 19115                           indf0	equ	0xFEF
 19116                           postinc0	equ	0xFEE
 19117                           fsr0h	equ	0xFEA
 19118                           fsr0l	equ	0xFE9
 19119                           wreg	equ	0xFE8
 19120                           postinc1	equ	0xFE6
 19121                           postdec1	equ	0xFE5
 19122                           plusw1	equ	0xFE3
 19123                           fsr1h	equ	0xFE2
 19124                           fsr1l	equ	0xFE1
 19125                           indf2	equ	0xFDF
 19126                           postinc2	equ	0xFDE
 19127                           postdec2	equ	0xFDD
 19128                           plusw2	equ	0xFDB
 19129                           fsr2h	equ	0xFDA
 19130                           fsr2l	equ	0xFD9
 19131                           status	equ	0xFD8
 19132                           
 19133 ;; *************** function _FindSmallestDataRate *****************
 19134 ;; Defined at:
 19135 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19136 ;; Parameters:    Size  Location     Type
 19137 ;;		None
 19138 ;; Auto vars:     Size  Location     Type
 19139 ;;  dataRate        1    7[BANK0 ] unsigned char 
 19140 ;;  i               1    6[BANK0 ] unsigned char 
 19141 ;;  found           1    5[BANK0 ] unsigned char 
 19142 ;; Return value:  Size  Location     Type
 19143 ;;                  1    wreg      unsigned char 
 19144 ;; Registers used:
 19145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19146 ;; Tracked objects:
 19147 ;;		On entry : F/2
 19148 ;;		On exit  : F/0
 19149 ;;		Unchanged: 0/0
 19150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19152 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19154 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19155 ;;Total ram usage:        4 bytes
 19156 ;; Hardware stack levels used:    1
 19157 ;; Hardware stack levels required when called:    7
 19158 ;; This function calls:
 19159 ;;		Nothing
 19160 ;; This function is called by:
 19161 ;;		_AckRetransmissionCallback
 19162 ;;		_AssemblePacket
 19163 ;; This function uses a non-reentrant model
 19164 ;;
 19165                           
 19166                           	psect	text100
 19167  005914                     __ptext100:
 19168                           	opt stack 0
 19169  005914                     _FindSmallestDataRate:
 19170                           	opt stack 20
 19171                           
 19172                           ; BSR set to: 2
 19173                           ;lorawan.c: 1966: bool found = 0;
 19174                           
 19175                           ; BSR set to: 1
 19176                           ;incstack = 0
 19177  005914  0100               	movlb	0	; () banked
 19178  005916  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 19179                           
 19180                           ; BSR set to: 0
 19181                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 19182  005918  0102               	movlb	2	; () banked
 19183  00591A  51DF               	movf	(_loRa+223)& (0+255),w,b
 19184  00591C  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19185  00591E  E24A               	bc	l13170
 19186                           
 19187                           ; BSR set to: 2
 19188                           ;lorawan.c: 1969: {
 19189                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 19190  005920  05DF               	decf	(_loRa+223)& (0+255),w,b
 19191  005922  0100               	movlb	0	; () banked
 19192  005924  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 19193                           
 19194                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 19195  005926  D03A               	goto	l13162
 19196  005928                     l2292:
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;lorawan.c: 1973: {
 19200                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 19201  005928  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 19202  00592A  D02B               	goto	l13154
 19203  00592C                     l13144:
 19204                           
 19205                           ; BSR set to: 0
 19206                           ;lorawan.c: 1975: {
 19207                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 19208  00592C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19209  00592E  0D0E               	mullw	14
 19210  005930  0E05               	movlw	low (_Channels+5)
 19211  005932  24F3               	addwf	prodl,w,c
 19212  005934  6ED9               	movwf	fsr2l,c
 19213  005936  0E04               	movlw	high (_Channels+5)
 19214  005938  20F4               	addwfc	prodh,w,c
 19215  00593A  6EDA               	movwf	fsr2h,c
 19216  00593C  50DF               	movf	223,w,c
 19217  00593E  0B0F               	andlw	15
 19218  005940  0100               	movlb	0	; () banked
 19219  005942  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19220  005944  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 19221  005946  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19222  005948  E31B               	bnc	l13152
 19223                           
 19224                           ; BSR set to: 0
 19225  00594A  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19226  00594C  0D0E               	mullw	14
 19227  00594E  0E05               	movlw	low (_Channels+5)
 19228  005950  24F3               	addwf	prodl,w,c
 19229  005952  6ED9               	movwf	fsr2l,c
 19230  005954  0E04               	movlw	high (_Channels+5)
 19231  005956  20F4               	addwfc	prodh,w,c
 19232  005958  6EDA               	movwf	fsr2h,c
 19233  00595A  38DF               	swapf	223,w,c
 19234  00595C  0B0F               	andlw	15
 19235  00595E  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19236  005960  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19237  005962  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 19238  005964  E30D               	bnc	l13152
 19239                           
 19240                           ; BSR set to: 0
 19241  005966  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19242  005968  0D0E               	mullw	14
 19243  00596A  0E04               	movlw	low (_Channels+4)
 19244  00596C  24F3               	addwf	prodl,w,c
 19245  00596E  6ED9               	movwf	fsr2l,c
 19246  005970  0E04               	movlw	high (_Channels+4)
 19247  005972  20F4               	addwfc	prodh,w,c
 19248  005974  6EDA               	movwf	fsr2h,c
 19249  005976  04DE               	decf	postinc2,w,c
 19250  005978  E103               	bnz	l13152
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;lorawan.c: 1977: {
 19254                           ;lorawan.c: 1978: found = 1;
 19255  00597A  0E01               	movlw	1
 19256  00597C  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 19257                           
 19258                           ;lorawan.c: 1979: break;
 19259  00597E  D006               	goto	l13156
 19260  005980                     l13152:
 19261                           
 19262                           ; BSR set to: 0
 19263  005980  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 19264  005982                     l13154:
 19265                           
 19266                           ; BSR set to: 0
 19267  005982  0102               	movlb	2	; () banked
 19268  005984  51ED               	movf	(_loRa+237)& (0+255),w,b
 19269  005986  0100               	movlb	0	; () banked
 19270  005988  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 19271  00598A  E3D0               	bnc	l13144
 19272  00598C                     l13156:
 19273                           
 19274                           ; BSR set to: 0
 19275                           ;lorawan.c: 1980: }
 19276                           ;lorawan.c: 1981: }
 19277                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 19278  00598C  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19279  00598E  E106               	bnz	l13162
 19280                           
 19281                           ; BSR set to: 0
 19282  005990  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19283  005992  0102               	movlb	2	; () banked
 19284  005994  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19285  005996  E202               	bc	l13162
 19286                           
 19287                           ; BSR set to: 2
 19288                           ;lorawan.c: 1983: {
 19289                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 19290  005998  0100               	movlb	0	; () banked
 19291  00599A  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 19292  00599C                     l13162:
 19293  00599C  0100               	movlb	0	; () banked
 19294  00599E  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19295  0059A0  E105               	bnz	l13166
 19296                           
 19297                           ; BSR set to: 0
 19298  0059A2  0102               	movlb	2	; () banked
 19299  0059A4  51EB               	movf	(_loRa+235)& (0+255),w,b
 19300  0059A6  0100               	movlb	0	; () banked
 19301  0059A8  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19302  0059AA  E2BE               	bc	l2292
 19303  0059AC                     l13166:
 19304                           
 19305                           ; BSR set to: 0
 19306                           ;lorawan.c: 1985: }
 19307                           ;lorawan.c: 1986: }
 19308                           ;lorawan.c: 1988: if (found == 1)
 19309  0059AC  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 19310  0059AE  E102               	bnz	l13170
 19311                           
 19312                           ; BSR set to: 0
 19313                           ;lorawan.c: 1989: {
 19314                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 19315  0059B0  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 19316  0059B4                     l13170:
 19317                           
 19318                           ;lorawan.c: 1991: }
 19319                           ;lorawan.c: 1992: }
 19320                           ;lorawan.c: 1994: return found;
 19321  0059B4  0100               	movlb	0	; () banked
 19322  0059B6  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19323                           
 19324                           ; BSR set to: 0
 19325  0059B8  0012               	return		;funcret
 19326  0059BA                     __end_of_FindSmallestDataRate:
 19327                           	opt stack 0
 19328                           tosu	equ	0xFFF
 19329                           tosh	equ	0xFFE
 19330                           tosl	equ	0xFFD
 19331                           pclath	equ	0xFFA
 19332                           tblptru	equ	0xFF8
 19333                           tblptrh	equ	0xFF7
 19334                           tblptrl	equ	0xFF6
 19335                           tablat	equ	0xFF5
 19336                           prodh	equ	0xFF4
 19337                           prodl	equ	0xFF3
 19338                           intcon	equ	0xFF2
 19339                           intcon2	equ	0xFF1
 19340                           intcon3	equ	0xFF0
 19341                           indf0	equ	0xFEF
 19342                           postinc0	equ	0xFEE
 19343                           fsr0h	equ	0xFEA
 19344                           fsr0l	equ	0xFE9
 19345                           wreg	equ	0xFE8
 19346                           postinc1	equ	0xFE6
 19347                           postdec1	equ	0xFE5
 19348                           plusw1	equ	0xFE3
 19349                           fsr1h	equ	0xFE2
 19350                           fsr1l	equ	0xFE1
 19351                           indf2	equ	0xFDF
 19352                           postinc2	equ	0xFDE
 19353                           postdec2	equ	0xFDD
 19354                           plusw2	equ	0xFDB
 19355                           fsr2h	equ	0xFDA
 19356                           fsr2l	equ	0xFD9
 19357                           status	equ	0xFD8
 19358                           
 19359 ;; *************** function _EncryptFRMPayload *****************
 19360 ;; Defined at:
 19361 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19362 ;; Parameters:    Size  Location     Type
 19363 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 19364 ;;		 -> payload(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 19365 ;;  bufferLength    1   54[BANK0 ] unsigned char 
 19366 ;;  dir             1   55[BANK0 ] unsigned char 
 19367 ;;  frameCounter    4   56[BANK0 ] unsigned long 
 19368 ;;  key             2   60[BANK0 ] PTR unsigned char 
 19369 ;;		 -> loRa.activationParameters(105), loRa(245), 
 19370 ;;  macBufferInd    1   62[BANK0 ] unsigned char 
 19371 ;;  bufferToBeEn    2   63[BANK0 ] PTR unsigned char 
 19372 ;;		 -> macBuffer(271), radioBuffer(271), 
 19373 ;;  multicastSta    1   65[BANK0 ] unsigned char 
 19374 ;; Auto vars:     Size  Location     Type
 19375 ;;  j               1   73[BANK0 ] unsigned char 
 19376 ;;  i               1   72[BANK0 ] unsigned char 
 19377 ;;  k               1   71[BANK0 ] unsigned char 
 19378 ;; Return value:  Size  Location     Type
 19379 ;;                  1    wreg      void 
 19380 ;; Registers used:
 19381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19382 ;; Tracked objects:
 19383 ;;		On entry : F/0
 19384 ;;		On exit  : F/0
 19385 ;;		Unchanged: 0/0
 19386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19387 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19388 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19389 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19390 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19391 ;;Total ram usage:       22 bytes
 19392 ;; Hardware stack levels used:    1
 19393 ;; Hardware stack levels required when called:   10
 19394 ;; This function calls:
 19395 ;;		_AESEncodeLoRa
 19396 ;;		_AssembleEncryptionBlock
 19397 ;; This function is called by:
 19398 ;;		_LORAWAN_RxDone
 19399 ;;		_AssemblePacket
 19400 ;; This function uses a non-reentrant model
 19401 ;;
 19402                           
 19403                           	psect	text101
 19404  004154                     __ptext101:
 19405                           	opt stack 0
 19406  004154                     _EncryptFRMPayload:
 19407                           	opt stack 17
 19408                           
 19409                           ; BSR set to: 0
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;incstack = 0
 19413  004154  6BA8               	clrf	EncryptFRMPayload@i& (0+255),b
 19414  004156  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19415                           
 19416                           ; BSR set to: 0
 19417                           ;lorawan.c: 2209: k = bufferLength / 16;
 19418  004158  3996               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 19419  00415A  0B0F               	andlw	15
 19420  00415C  6FA7               	movwf	EncryptFRMPayload@k& (0+255),b
 19421                           
 19422                           ; BSR set to: 0
 19423                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 19424  00415E  0E01               	movlw	1
 19425  004160  6FA8               	movwf	EncryptFRMPayload@i& (0+255),b
 19426  004162  D051               	goto	l13206
 19427  004164                     l13188:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;lorawan.c: 2211: {
 19431                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19432  004164  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19433  004168  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19434  00416C  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19435  004170  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19436  004174  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19437  004178  0E01               	movlw	1
 19438  00417A  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19439  00417C  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19440  004180  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19441  004182  EC31  F02C         	call	_AssembleEncryptionBlock
 19442                           
 19443                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 19444  004186  0EA0               	movlw	low _aesBuffer
 19445  004188  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19446  00418A  0E01               	movlw	high _aesBuffer
 19447  00418C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19448  00418E  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19449  004192  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19450  004196  EC5D  F039         	call	_AESEncodeLoRa	;wreg free
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 19454  00419A  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19455  00419C                     l13196:
 19456                           
 19457                           ; BSR set to: 0
 19458                           ;lorawan.c: 2216: {
 19459                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 19460  00419C  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19461  00419E  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19462  0041A0  6ED9               	movwf	fsr2l,c
 19463  0041A2  0E00               	movlw	0
 19464  0041A4  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19465  0041A6  6EDA               	movwf	fsr2h,c
 19466  0041A8  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19467  0041AA  6FA2               	movwf	??_EncryptFRMPayload& (0+255),b
 19468  0041AC  6BA3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 19469  0041AE  3BA2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 19470  0041B0  3BA3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19471  0041B2  0EF0               	movlw	240
 19472  0041B4  17A3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19473  0041B6  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19474  0041B8  0B0F               	andlw	15
 19475  0041BA  13A3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19476  0041BC  0EF0               	movlw	240
 19477  0041BE  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19478  0041C0  C094  F0A4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 19479  0041C4  C095  F0A5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 19480  0041C8  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19481  0041CA  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19482  0041CC  51A3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 19483  0041CE  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19484  0041D0  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19485  0041D2  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19486  0041D4  0E00               	movlw	0
 19487  0041D6  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19488  0041D8  0EF0               	movlw	240
 19489  0041DA  25A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19490  0041DC  6EE9               	movwf	fsr0l,c
 19491  0041DE  0EFF               	movlw	255
 19492  0041E0  21A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 19493  0041E2  6EEA               	movwf	fsr0h,c
 19494  0041E4  50EF               	movf	indf0,w,c
 19495  0041E6  6FA6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 19496  0041E8  0EA0               	movlw	low _aesBuffer
 19497  0041EA  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19498  0041EC  6EE9               	movwf	fsr0l,c
 19499  0041EE  6AEA               	clrf	fsr0h,c
 19500  0041F0  0E01               	movlw	high _aesBuffer
 19501  0041F2  22EA               	addwfc	fsr0h,f,c
 19502  0041F4  50EF               	movf	indf0,w,c
 19503  0041F6  19A6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 19504  0041F8  6EDF               	movwf	indf2,c
 19505                           
 19506                           ; BSR set to: 0
 19507  0041FA  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19508                           
 19509                           ; BSR set to: 0
 19510  0041FC  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19511                           
 19512                           ; BSR set to: 0
 19513  0041FE  0E0F               	movlw	15
 19514  004200  65A9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 19515  004202  D7CC               	goto	l13196
 19516                           
 19517                           ; BSR set to: 0
 19518  004204  2BA8               	incf	EncryptFRMPayload@i& (0+255),f,b
 19519  004206                     l13206:
 19520                           
 19521                           ; BSR set to: 0
 19522  004206  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19523  004208  5DA7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 19524  00420A  E2AC               	bc	l13188
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;lorawan.c: 2218: }
 19528                           ;lorawan.c: 2219: }
 19529                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 19530  00420C  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19531  004210  0E0F               	movlw	15
 19532  004212  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19533  004214  B4D8               	btfsc	status,2,c
 19534  004216  0C0F               	retlw	15
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;lorawan.c: 2222: {
 19538                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19539  004218  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19540  00421C  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19541  004220  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19542  004224  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19543  004228  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19544  00422C  0E01               	movlw	1
 19545  00422E  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19546  004230  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19547  004234  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19548  004236  EC31  F02C         	call	_AssembleEncryptionBlock
 19549                           
 19550                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 19551  00423A  0EA0               	movlw	low _aesBuffer
 19552  00423C  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19553  00423E  0E01               	movlw	high _aesBuffer
 19554  004240  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19555  004242  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19556  004246  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19557  00424A  EC5D  F039         	call	_AESEncodeLoRa	;wreg free
 19558                           
 19559                           ; BSR set to: 0
 19560                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 19561  00424E  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19562  004250  D023               	goto	l13220
 19563  004252                     l13214:
 19564                           
 19565                           ; BSR set to: 0
 19566                           ;lorawan.c: 2227: {
 19567                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 19568  004252  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19569  004254  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19570  004256  6ED9               	movwf	fsr2l,c
 19571  004258  0E00               	movlw	0
 19572  00425A  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19573  00425C  6EDA               	movwf	fsr2h,c
 19574  00425E  51A7               	movf	EncryptFRMPayload@k& (0+255),w,b
 19575  004260  0D10               	mullw	16
 19576  004262  C094  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 19577  004266  C095  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 19578  00426A  50F3               	movf	prodl,w,c
 19579  00426C  27A2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 19580  00426E  50F4               	movf	prodh,w,c
 19581  004270  23A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 19582  004272  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19583  004274  25A2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 19584  004276  6EE9               	movwf	fsr0l,c
 19585  004278  0E00               	movlw	0
 19586  00427A  21A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 19587  00427C  6EEA               	movwf	fsr0h,c
 19588  00427E  50EF               	movf	indf0,w,c
 19589  004280  6FA4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 19590  004282  0EA0               	movlw	low _aesBuffer
 19591  004284  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19592  004286  6EE9               	movwf	fsr0l,c
 19593  004288  6AEA               	clrf	fsr0h,c
 19594  00428A  0E01               	movlw	high _aesBuffer
 19595  00428C  22EA               	addwfc	fsr0h,f,c
 19596  00428E  50EF               	movf	indf0,w,c
 19597  004290  19A4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19598  004292  6EDF               	movwf	indf2,c
 19599                           
 19600                           ; BSR set to: 0
 19601  004294  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19602                           
 19603                           ; BSR set to: 0
 19604  004296  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19605  004298                     l13220:
 19606                           
 19607                           ; BSR set to: 0
 19608  004298  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19609  00429C  0E0F               	movlw	15
 19610  00429E  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19611  0042A0  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19612  0042A2  5DA9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 19613  0042A4  E3D6               	bnc	l13214
 19614                           
 19615                           ; BSR set to: 0
 19616  0042A6  0012               	return		;funcret
 19617  0042A8                     __end_of_EncryptFRMPayload:
 19618                           	opt stack 0
 19619                           tosu	equ	0xFFF
 19620                           tosh	equ	0xFFE
 19621                           tosl	equ	0xFFD
 19622                           pclath	equ	0xFFA
 19623                           tblptru	equ	0xFF8
 19624                           tblptrh	equ	0xFF7
 19625                           tblptrl	equ	0xFF6
 19626                           tablat	equ	0xFF5
 19627                           prodh	equ	0xFF4
 19628                           prodl	equ	0xFF3
 19629                           intcon	equ	0xFF2
 19630                           intcon2	equ	0xFF1
 19631                           intcon3	equ	0xFF0
 19632                           indf0	equ	0xFEF
 19633                           postinc0	equ	0xFEE
 19634                           fsr0h	equ	0xFEA
 19635                           fsr0l	equ	0xFE9
 19636                           wreg	equ	0xFE8
 19637                           postinc1	equ	0xFE6
 19638                           postdec1	equ	0xFE5
 19639                           plusw1	equ	0xFE3
 19640                           fsr1h	equ	0xFE2
 19641                           fsr1l	equ	0xFE1
 19642                           indf2	equ	0xFDF
 19643                           postinc2	equ	0xFDE
 19644                           postdec2	equ	0xFDD
 19645                           plusw2	equ	0xFDB
 19646                           fsr2h	equ	0xFDA
 19647                           fsr2l	equ	0xFD9
 19648                           status	equ	0xFD8
 19649                           
 19650 ;; *************** function _AssembleEncryptionBlock *****************
 19651 ;; Defined at:
 19652 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19653 ;; Parameters:    Size  Location     Type
 19654 ;;  dir             1    wreg     unsigned char 
 19655 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 19656 ;;  blockId         1   18[BANK0 ] unsigned char 
 19657 ;;  firstByte       1   19[BANK0 ] unsigned char 
 19658 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 19659 ;; Auto vars:     Size  Location     Type
 19660 ;;  dir             1   21[BANK0 ] unsigned char 
 19661 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 19662 ;; Return value:  Size  Location     Type
 19663 ;;                  1    wreg      void 
 19664 ;; Registers used:
 19665 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19666 ;; Tracked objects:
 19667 ;;		On entry : F/0
 19668 ;;		On exit  : F/0
 19669 ;;		Unchanged: 0/0
 19670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19671 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19672 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19674 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19675 ;;Total ram usage:        9 bytes
 19676 ;; Hardware stack levels used:    1
 19677 ;; Hardware stack levels required when called:    8
 19678 ;; This function calls:
 19679 ;;		_memcpy
 19680 ;;		_memset
 19681 ;; This function is called by:
 19682 ;;		_LORAWAN_RxDone
 19683 ;;		_AssemblePacket
 19684 ;;		_EncryptFRMPayload
 19685 ;; This function uses a non-reentrant model
 19686 ;;
 19687                           
 19688                           	psect	text102
 19689  005862                     __ptext102:
 19690                           	opt stack 0
 19691  005862                     _AssembleEncryptionBlock:
 19692                           	opt stack 18
 19693                           
 19694                           ; BSR set to: 0
 19695                           ;incstack = 0
 19696                           ;AssembleEncryptionBlock@dir stored from wreg
 19697  005862  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 19698                           
 19699                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 19700  005864  0100               	movlb	0	; () banked
 19701  005866  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 19705  005868  0EA0               	movlw	low _aesBuffer
 19706  00586A  6F64               	movwf	memset@p1& (0+255),b
 19707  00586C  0E01               	movlw	high _aesBuffer
 19708  00586E  6F65               	movwf	(memset@p1+1)& (0+255),b
 19709  005870  6B67               	clrf	(memset@c+1)& (0+255),b
 19710  005872  6B66               	clrf	memset@c& (0+255),b
 19711  005874  6B69               	clrf	(memset@n+1)& (0+255),b
 19712  005876  0E10               	movlw	16
 19713  005878  6F68               	movwf	memset@n& (0+255),b
 19714  00587A  EC20  F039         	call	_memset	;wreg free
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 19718  00587E  C073  F1A0         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 19719                           
 19720                           ; BSR set to: 0
 19721                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 19722  005882  0E05               	movlw	5
 19723  005884  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19724                           
 19725                           ; BSR set to: 0
 19726                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 19727  005886  0EA0               	movlw	low _aesBuffer
 19728  005888  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19729  00588A  6ED9               	movwf	fsr2l,c
 19730  00588C  6ADA               	clrf	fsr2h,c
 19731  00588E  0E01               	movlw	high _aesBuffer
 19732  005890  22DA               	addwfc	fsr2h,f,c
 19733  005892  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 19734                           
 19735                           ; BSR set to: 0
 19736  005896  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19737                           
 19738                           ; BSR set to: 0
 19739                           ;lorawan.c: 2168: if (0 == multicastStatus)
 19740  005898  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 19741  00589A  E112               	bnz	l12750
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;lorawan.c: 2169: {
 19745                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 19746  00589C  0EA0               	movlw	low _aesBuffer
 19747  00589E  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19748  0058A0  6F64               	movwf	memcpy@d1& (0+255),b
 19749  0058A2  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19750  0058A4  0E01               	movlw	high _aesBuffer
 19751  0058A6  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19752  0058A8  0E1E               	movlw	low (_loRa+30)
 19753  0058AA  6F66               	movwf	memcpy@s1& (0+255),b
 19754  0058AC  0E02               	movlw	high (_loRa+30)
 19755  0058AE  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19756  0058B0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19757  0058B2  0E04               	movlw	4
 19758  0058B4  6F68               	movwf	memcpy@n& (0+255),b
 19759  0058B6  EC14  F034         	call	_memcpy	;wreg free
 19760  0058BA                     l12748:
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 19764  0058BA  0E04               	movlw	4
 19765  0058BC  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19766                           
 19767                           ;lorawan.c: 2172: }
 19768  0058BE  D010               	goto	l12754
 19769  0058C0                     l12750:
 19770                           
 19771                           ; BSR set to: 0
 19772                           ;lorawan.c: 2173: else
 19773                           ;lorawan.c: 2174: {
 19774                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 19775  0058C0  0EA0               	movlw	low _aesBuffer
 19776  0058C2  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19777  0058C4  6F64               	movwf	memcpy@d1& (0+255),b
 19778  0058C6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19779  0058C8  0E01               	movlw	high _aesBuffer
 19780  0058CA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19781  0058CC  0E62               	movlw	low (_loRa+98)
 19782  0058CE  6F66               	movwf	memcpy@s1& (0+255),b
 19783  0058D0  0E02               	movlw	high (_loRa+98)
 19784  0058D2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19785  0058D4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19786  0058D6  0E04               	movlw	4
 19787  0058D8  6F68               	movwf	memcpy@n& (0+255),b
 19788  0058DA  EC14  F034         	call	_memcpy	;wreg free
 19789  0058DE  D7ED               	goto	l12748
 19790  0058E0                     l12754:
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;lorawan.c: 2177: }
 19794                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 19795  0058E0  0EA0               	movlw	low _aesBuffer
 19796  0058E2  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19797  0058E4  6F64               	movwf	memcpy@d1& (0+255),b
 19798  0058E6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19799  0058E8  0E01               	movlw	high _aesBuffer
 19800  0058EA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19801  0058EC  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 19802  0058EE  6F66               	movwf	memcpy@s1& (0+255),b
 19803  0058F0  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 19804  0058F2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19805  0058F4  0E04               	movlw	4
 19806  0058F6  6F68               	movwf	memcpy@n& (0+255),b
 19807  0058F8  EC14  F034         	call	_memcpy	;wreg free
 19808                           
 19809                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 19810  0058FC  0E04               	movlw	4
 19811  0058FE  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;lorawan.c: 2182: bufferIndex ++;
 19815  005900  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19816                           
 19817                           ; BSR set to: 0
 19818                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 19819  005902  0EA0               	movlw	low _aesBuffer
 19820  005904  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19821  005906  6ED9               	movwf	fsr2l,c
 19822  005908  6ADA               	clrf	fsr2h,c
 19823  00590A  0E01               	movlw	high _aesBuffer
 19824  00590C  22DA               	addwfc	fsr2h,f,c
 19825  00590E  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 19826                           
 19827                           ; BSR set to: 0
 19828  005912  0012               	return		;funcret
 19829  005914                     __end_of_AssembleEncryptionBlock:
 19830                           	opt stack 0
 19831                           tosu	equ	0xFFF
 19832                           tosh	equ	0xFFE
 19833                           tosl	equ	0xFFD
 19834                           pclath	equ	0xFFA
 19835                           tblptru	equ	0xFF8
 19836                           tblptrh	equ	0xFF7
 19837                           tblptrl	equ	0xFF6
 19838                           tablat	equ	0xFF5
 19839                           prodh	equ	0xFF4
 19840                           prodl	equ	0xFF3
 19841                           intcon	equ	0xFF2
 19842                           intcon2	equ	0xFF1
 19843                           intcon3	equ	0xFF0
 19844                           indf0	equ	0xFEF
 19845                           postinc0	equ	0xFEE
 19846                           fsr0h	equ	0xFEA
 19847                           fsr0l	equ	0xFE9
 19848                           wreg	equ	0xFE8
 19849                           postinc1	equ	0xFE6
 19850                           postdec1	equ	0xFE5
 19851                           plusw1	equ	0xFE3
 19852                           fsr1h	equ	0xFE2
 19853                           fsr1l	equ	0xFE1
 19854                           indf2	equ	0xFDF
 19855                           postinc2	equ	0xFDE
 19856                           postdec2	equ	0xFDD
 19857                           plusw2	equ	0xFDB
 19858                           fsr2h	equ	0xFDA
 19859                           fsr2l	equ	0xFD9
 19860                           status	equ	0xFD8
 19861                           
 19862 ;; *************** function _CountfOptsLength *****************
 19863 ;; Defined at:
 19864 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19865 ;; Parameters:    Size  Location     Type
 19866 ;;		None
 19867 ;; Auto vars:     Size  Location     Type
 19868 ;;  i               1   11[BANK0 ] unsigned char 
 19869 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 19870 ;; Return value:  Size  Location     Type
 19871 ;;                  1    wreg      unsigned char 
 19872 ;; Registers used:
 19873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19874 ;; Tracked objects:
 19875 ;;		On entry : D/2
 19876 ;;		On exit  : F/0
 19877 ;;		Unchanged: 0/0
 19878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19881 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19882 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19883 ;;Total ram usage:        8 bytes
 19884 ;; Hardware stack levels used:    1
 19885 ;; Hardware stack levels required when called:    7
 19886 ;; This function calls:
 19887 ;;		Nothing
 19888 ;; This function is called by:
 19889 ;;		_LORAWAN_GetMaxPayloadSize
 19890 ;;		_AssemblePacket
 19891 ;; This function uses a non-reentrant model
 19892 ;;
 19893                           
 19894                           	psect	text103
 19895  0054D6                     __ptext103:
 19896                           	opt stack 0
 19897  0054D6                     _CountfOptsLength:
 19898                           	opt stack 20
 19899                           
 19900                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;incstack = 0
 19904  0054D6  0100               	movlb	0	; () banked
 19905  0054D8  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 19906                           
 19907                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 19908  0054DA  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 19909  0054DC  D053               	goto	l13232
 19910  0054DE                     l13224:
 19911                           
 19912                           ; BSR set to: 0
 19913                           ;lorawan.c: 2139: {
 19914                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 19915  0054DE  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19916  0054E0  0D02               	mullw	2
 19917  0054E2  0EA8               	movlw	low (_loRa+168)
 19918  0054E4  24F3               	addwf	prodl,w,c
 19919  0054E6  6ED9               	movwf	fsr2l,c
 19920  0054E8  0E02               	movlw	high (_loRa+168)
 19921  0054EA  20F4               	addwfc	prodh,w,c
 19922  0054EC  6EDA               	movwf	fsr2h,c
 19923  0054EE  28DE               	incf	postinc2,w,c
 19924  0054F0  E048               	bz	l13230
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;lorawan.c: 2141: {
 19928                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 19929  0054F2  0EFE               	movlw	254
 19930  0054F4  6F64               	movwf	??_CountfOptsLength& (0+255),b
 19931  0054F6  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 19932  0054F8  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19933  0054FA  0D02               	mullw	2
 19934  0054FC  0EA8               	movlw	low (_loRa+168)
 19935  0054FE  24F3               	addwf	prodl,w,c
 19936  005500  6ED9               	movwf	fsr2l,c
 19937  005502  0E02               	movlw	high (_loRa+168)
 19938  005504  20F4               	addwfc	prodh,w,c
 19939  005506  6EDA               	movwf	fsr2h,c
 19940  005508  50DF               	movf	indf2,w,c
 19941  00550A  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 19942  00550C  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 19943  00550E  5164               	movf	??_CountfOptsLength& (0+255),w,b
 19944  005510  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 19945  005512  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 19946  005514  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 19947  005516  0E94               	movlw	low _macEndDevCmdReplyLen
 19948  005518  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 19949  00551A  6EF6               	movwf	tblptrl,c
 19950  00551C  0EFF               	movlw	high _macEndDevCmdReplyLen
 19951  00551E  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 19952  005520  6EF7               	movwf	tblptrh,c
 19953  005522                     	if	1	;There are 3 active tblptr bytes
 19954  005522  6AF8               	clrf	tblptru,c
 19955  005524  0E00               	movlw	low (__mediumconst shr (0+16))
 19956  005526  22F8               	addwfc	tblptru,f,c
 19957  005528                     	endif
 19958  005528  0008               	tblrd		*
 19959  00552A  50F5               	movf	tablat,w,c
 19960  00552C  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 19961  005530  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 19962  005532  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 19963  005534  0E00               	movlw	0
 19964  005536  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 19965  005538  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 19966  00553A  D005               	goto	l13228
 19967  00553C  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 19968  00553E  E127               	bnz	l13234
 19969  005540  0E10               	movlw	16
 19970  005542  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 19971  005544  E224               	bc	l13234
 19972  005546                     l13228:
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;lorawan.c: 2143: {
 19976                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 19977  005546  0EFE               	movlw	254
 19978  005548  6F64               	movwf	??_CountfOptsLength& (0+255),b
 19979  00554A  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 19980  00554C  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19981  00554E  0D02               	mullw	2
 19982  005550  0EA8               	movlw	low (_loRa+168)
 19983  005552  24F3               	addwf	prodl,w,c
 19984  005554  6ED9               	movwf	fsr2l,c
 19985  005556  0E02               	movlw	high (_loRa+168)
 19986  005558  20F4               	addwfc	prodh,w,c
 19987  00555A  6EDA               	movwf	fsr2h,c
 19988  00555C  50DF               	movf	indf2,w,c
 19989  00555E  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 19990  005560  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 19991  005562  5164               	movf	??_CountfOptsLength& (0+255),w,b
 19992  005564  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 19993  005566  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 19994  005568  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 19995  00556A  0E94               	movlw	low _macEndDevCmdReplyLen
 19996  00556C  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 19997  00556E  6EF6               	movwf	tblptrl,c
 19998  005570  0EFF               	movlw	high _macEndDevCmdReplyLen
 19999  005572  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20000  005574  6EF7               	movwf	tblptrh,c
 20001  005576                     	if	1	;There are 3 active tblptr bytes
 20002  005576  6AF8               	clrf	tblptru,c
 20003  005578  0E00               	movlw	low (__mediumconst shr (0+16))
 20004  00557A  22F8               	addwfc	tblptru,f,c
 20005  00557C                     	endif
 20006  00557C  0008               	tblrd		*
 20007  00557E  50F5               	movf	tablat,w,c
 20008  005580  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 20009  005582                     l13230:
 20010                           
 20011                           ; BSR set to: 0
 20012  005582  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 20013  005584                     l13232:
 20014                           
 20015                           ; BSR set to: 0
 20016  005584  0102               	movlb	2	; () banked
 20017  005586  51A7               	movf	(_loRa+167)& (0+255),w,b
 20018  005588  0100               	movlb	0	; () banked
 20019  00558A  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 20020  00558C  E3A8               	bnc	l13224
 20021  00558E                     l13234:
 20022                           
 20023                           ; BSR set to: 0
 20024                           ;lorawan.c: 2149: }
 20025                           ;lorawan.c: 2150: }
 20026                           ;lorawan.c: 2151: }
 20027                           ;lorawan.c: 2153: return macCommandLength;
 20028  00558E  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 20029                           
 20030                           ; BSR set to: 0
 20031  005590  0012               	return		;funcret
 20032  005592                     __end_of_CountfOptsLength:
 20033                           	opt stack 0
 20034                           tosu	equ	0xFFF
 20035                           tosh	equ	0xFFE
 20036                           tosl	equ	0xFFD
 20037                           pclath	equ	0xFFA
 20038                           tblptru	equ	0xFF8
 20039                           tblptrh	equ	0xFF7
 20040                           tblptrl	equ	0xFF6
 20041                           tablat	equ	0xFF5
 20042                           prodh	equ	0xFF4
 20043                           prodl	equ	0xFF3
 20044                           intcon	equ	0xFF2
 20045                           intcon2	equ	0xFF1
 20046                           intcon3	equ	0xFF0
 20047                           indf0	equ	0xFEF
 20048                           postinc0	equ	0xFEE
 20049                           fsr0h	equ	0xFEA
 20050                           fsr0l	equ	0xFE9
 20051                           wreg	equ	0xFE8
 20052                           postinc1	equ	0xFE6
 20053                           postdec1	equ	0xFE5
 20054                           plusw1	equ	0xFE3
 20055                           fsr1h	equ	0xFE2
 20056                           fsr1l	equ	0xFE1
 20057                           indf2	equ	0xFDF
 20058                           postinc2	equ	0xFDE
 20059                           postdec2	equ	0xFDD
 20060                           plusw2	equ	0xFDB
 20061                           fsr2h	equ	0xFDA
 20062                           fsr2l	equ	0xFD9
 20063                           status	equ	0xFD8
 20064                           
 20065 ;; *************** function _ExtractMic *****************
 20066 ;; Defined at:
 20067 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 20070 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20071 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 20072 ;; Auto vars:     Size  Location     Type
 20073 ;;  mic             4   20[BANK0 ] unsigned long 
 20074 ;; Return value:  Size  Location     Type
 20075 ;;                  4   14[BANK0 ] unsigned long 
 20076 ;; Registers used:
 20077 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20078 ;; Tracked objects:
 20079 ;;		On entry : F/0
 20080 ;;		On exit  : F/0
 20081 ;;		Unchanged: 0/0
 20082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20084 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20085 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20086 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20087 ;;Total ram usage:       10 bytes
 20088 ;; Hardware stack levels used:    1
 20089 ;; Hardware stack levels required when called:    8
 20090 ;; This function calls:
 20091 ;;		_memcpy
 20092 ;; This function is called by:
 20093 ;;		_LORAWAN_RxDone
 20094 ;; This function uses a non-reentrant model
 20095 ;;
 20096                           
 20097                           	psect	text104
 20098  006CA8                     __ptext104:
 20099                           	opt stack 0
 20100  006CA8                     _ExtractMic:
 20101                           	opt stack 18
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;lorawan.c: 2189: uint32_t mic = 0;
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;incstack = 0
 20108  006CA8  6B74               	clrf	ExtractMic@mic& (0+255),b
 20109  006CAA  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 20110  006CAC  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 20111  006CAE  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 20115  006CB0  0E74               	movlw	low ExtractMic@mic
 20116  006CB2  6F64               	movwf	memcpy@d1& (0+255),b
 20117  006CB4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20118  006CB6  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 20119  006CB8  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 20120  006CBA  6F72               	movwf	??_ExtractMic& (0+255),b
 20121  006CBC  0E00               	movlw	0
 20122  006CBE  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 20123  006CC0  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 20124  006CC2  0EFC               	movlw	252
 20125  006CC4  2572               	addwf	??_ExtractMic& (0+255),w,b
 20126  006CC6  6F66               	movwf	memcpy@s1& (0+255),b
 20127  006CC8  0EFF               	movlw	255
 20128  006CCA  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 20129  006CCC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20130  006CCE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20131  006CD0  0E04               	movlw	4
 20132  006CD2  6F68               	movwf	memcpy@n& (0+255),b
 20133  006CD4  EC14  F034         	call	_memcpy	;wreg free
 20134                           
 20135                           ; BSR set to: 0
 20136                           ;lorawan.c: 2191: return mic;
 20137  006CD8  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 20138  006CDC  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 20139  006CE0  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 20140  006CE4  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 20141                           
 20142                           ; BSR set to: 0
 20143  006CE8  0012               	return		;funcret
 20144  006CEA                     __end_of_ExtractMic:
 20145                           	opt stack 0
 20146                           tosu	equ	0xFFF
 20147                           tosh	equ	0xFFE
 20148                           tosl	equ	0xFFD
 20149                           pclath	equ	0xFFA
 20150                           tblptru	equ	0xFF8
 20151                           tblptrh	equ	0xFF7
 20152                           tblptrl	equ	0xFF6
 20153                           tablat	equ	0xFF5
 20154                           prodh	equ	0xFF4
 20155                           prodl	equ	0xFF3
 20156                           intcon	equ	0xFF2
 20157                           intcon2	equ	0xFF1
 20158                           intcon3	equ	0xFF0
 20159                           indf0	equ	0xFEF
 20160                           postinc0	equ	0xFEE
 20161                           fsr0h	equ	0xFEA
 20162                           fsr0l	equ	0xFE9
 20163                           wreg	equ	0xFE8
 20164                           postinc1	equ	0xFE6
 20165                           postdec1	equ	0xFE5
 20166                           plusw1	equ	0xFE3
 20167                           fsr1h	equ	0xFE2
 20168                           fsr1l	equ	0xFE1
 20169                           indf2	equ	0xFDF
 20170                           postinc2	equ	0xFDE
 20171                           postdec2	equ	0xFDD
 20172                           plusw2	equ	0xFDB
 20173                           fsr2h	equ	0xFDA
 20174                           fsr2l	equ	0xFD9
 20175                           status	equ	0xFD8
 20176                           
 20177 ;; *************** function _ComputeSessionKeys *****************
 20178 ;; Defined at:
 20179 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20180 ;; Parameters:    Size  Location     Type
 20181 ;;  joinAcceptBu    2   52[BANK0 ] PTR struct .
 20182 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20183 ;; Auto vars:     Size  Location     Type
 20184 ;;		None
 20185 ;; Return value:  Size  Location     Type
 20186 ;;                  1    wreg      void 
 20187 ;; Registers used:
 20188 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20189 ;; Tracked objects:
 20190 ;;		On entry : D/0
 20191 ;;		On exit  : F/0
 20192 ;;		Unchanged: 0/0
 20193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20197 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20198 ;;Total ram usage:        2 bytes
 20199 ;; Hardware stack levels used:    1
 20200 ;; Hardware stack levels required when called:   10
 20201 ;; This function calls:
 20202 ;;		_AESEncodeLoRa
 20203 ;;		_PrepareSessionKeys
 20204 ;; This function is called by:
 20205 ;;		_LORAWAN_RxDone
 20206 ;; This function uses a non-reentrant model
 20207 ;;
 20208                           
 20209                           	psect	text105
 20210  005E40                     __ptext105:
 20211                           	opt stack 0
 20212  005E40                     _ComputeSessionKeys:
 20213                           	opt stack 16
 20214                           
 20215                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20216                           
 20217                           ; BSR set to: 0
 20218                           ;incstack = 0
 20219  005E40  0E32               	movlw	low (_loRa+50)
 20220  005E42  0100               	movlb	0	; () banked
 20221  005E44  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20222  005E46  0E02               	movlw	high (_loRa+50)
 20223  005E48  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20224  005E4A  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20225  005E4C  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20226  005E4E  0E00               	movlw	0
 20227  005E50  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20228  005E52  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20229  005E54  0E04               	movlw	4
 20230  005E56  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20231  005E58  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20232  005E5A  0E00               	movlw	0
 20233  005E5C  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20234  005E5E  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20235  005E60  EC9E  F02F         	call	_PrepareSessionKeys	;wreg free
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 20239  005E64  0E02               	movlw	2
 20240  005E66  0102               	movlb	2	; () banked
 20241  005E68  6F32               	movwf	(_loRa+50)& (0+255),b
 20242                           
 20243                           ; BSR set to: 2
 20244                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 20245  005E6A  0E32               	movlw	low (_loRa+50)
 20246  005E6C  0100               	movlb	0	; () banked
 20247  005E6E  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20248  005E70  0E02               	movlw	high (_loRa+50)
 20249  005E72  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20250  005E74  0E42               	movlw	low (_loRa+66)
 20251  005E76  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20252  005E78  0E02               	movlw	high (_loRa+66)
 20253  005E7A  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20254  005E7C  EC5D  F039         	call	_AESEncodeLoRa	;wreg free
 20255                           
 20256                           ; BSR set to: 0
 20257                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20258  005E80  0E22               	movlw	low (_loRa+34)
 20259  005E82  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20260  005E84  0E02               	movlw	high (_loRa+34)
 20261  005E86  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20262  005E88  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20263  005E8A  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20264  005E8C  0E00               	movlw	0
 20265  005E8E  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20266  005E90  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20267  005E92  0E04               	movlw	4
 20268  005E94  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20269  005E96  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20270  005E98  0E00               	movlw	0
 20271  005E9A  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20272  005E9C  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20273  005E9E  EC9E  F02F         	call	_PrepareSessionKeys	;wreg free
 20274                           
 20275                           ; BSR set to: 0
 20276                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 20277  005EA2  0E01               	movlw	1
 20278  005EA4  0102               	movlb	2	; () banked
 20279  005EA6  6F22               	movwf	(_loRa+34)& (0+255),b
 20280                           
 20281                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 20282  005EA8  0E22               	movlw	low (_loRa+34)
 20283  005EAA  0100               	movlb	0	; () banked
 20284  005EAC  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20285  005EAE  0E02               	movlw	high (_loRa+34)
 20286  005EB0  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20287  005EB2  0E42               	movlw	low (_loRa+66)
 20288  005EB4  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20289  005EB6  0E02               	movlw	high (_loRa+66)
 20290  005EB8  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20291  005EBA  EF5D  F039         	goto	_AESEncodeLoRa	;wreg free
 20292  005EBE                     __end_of_ComputeSessionKeys:
 20293                           	opt stack 0
 20294                           tosu	equ	0xFFF
 20295                           tosh	equ	0xFFE
 20296                           tosl	equ	0xFFD
 20297                           pclath	equ	0xFFA
 20298                           tblptru	equ	0xFF8
 20299                           tblptrh	equ	0xFF7
 20300                           tblptrl	equ	0xFF6
 20301                           tablat	equ	0xFF5
 20302                           prodh	equ	0xFF4
 20303                           prodl	equ	0xFF3
 20304                           intcon	equ	0xFF2
 20305                           intcon2	equ	0xFF1
 20306                           intcon3	equ	0xFF0
 20307                           indf0	equ	0xFEF
 20308                           postinc0	equ	0xFEE
 20309                           fsr0h	equ	0xFEA
 20310                           fsr0l	equ	0xFE9
 20311                           wreg	equ	0xFE8
 20312                           postinc1	equ	0xFE6
 20313                           postdec1	equ	0xFE5
 20314                           plusw1	equ	0xFE3
 20315                           fsr1h	equ	0xFE2
 20316                           fsr1l	equ	0xFE1
 20317                           indf2	equ	0xFDF
 20318                           postinc2	equ	0xFDE
 20319                           postdec2	equ	0xFDD
 20320                           plusw2	equ	0xFDB
 20321                           fsr2h	equ	0xFDA
 20322                           fsr2l	equ	0xFD9
 20323                           status	equ	0xFD8
 20324                           
 20325 ;; *************** function _PrepareSessionKeys *****************
 20326 ;; Defined at:
 20327 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20328 ;; Parameters:    Size  Location     Type
 20329 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 20330 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20331 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 20332 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20333 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 20334 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20335 ;; Auto vars:     Size  Location     Type
 20336 ;;  index           1   20[BANK0 ] unsigned char 
 20337 ;; Return value:  Size  Location     Type
 20338 ;;                  1    wreg      void 
 20339 ;; Registers used:
 20340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20341 ;; Tracked objects:
 20342 ;;		On entry : F/0
 20343 ;;		On exit  : F/0
 20344 ;;		Unchanged: 0/0
 20345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20346 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20349 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20350 ;;Total ram usage:        7 bytes
 20351 ;; Hardware stack levels used:    1
 20352 ;; Hardware stack levels required when called:    8
 20353 ;; This function calls:
 20354 ;;		_memcpy
 20355 ;;		_memset
 20356 ;; This function is called by:
 20357 ;;		_ComputeSessionKeys
 20358 ;; This function uses a non-reentrant model
 20359 ;;
 20360                           
 20361                           	psect	text106
 20362  005F3C                     __ptext106:
 20363                           	opt stack 0
 20364  005F3C                     _PrepareSessionKeys:
 20365                           	opt stack 17
 20366                           
 20367                           ; BSR set to: 0
 20368                           ;lorawan.c: 2047: uint8_t index = 0;
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;incstack = 0
 20372  005F3C  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 20373                           
 20374                           ; BSR set to: 0
 20375                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 20376  005F3E  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 20377  005F42  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 20378  005F46  6B67               	clrf	(memset@c+1)& (0+255),b
 20379  005F48  6B66               	clrf	memset@c& (0+255),b
 20380  005F4A  6B69               	clrf	(memset@n+1)& (0+255),b
 20381  005F4C  0E10               	movlw	16
 20382  005F4E  6F68               	movwf	memset@n& (0+255),b
 20383  005F50  EC20  F039         	call	_memset	;wreg free
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;lorawan.c: 2050: index ++;
 20387  005F54  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 20388                           
 20389                           ; BSR set to: 0
 20390                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 20391  005F56  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20392  005F58  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20393  005F5A  6F64               	movwf	memcpy@d1& (0+255),b
 20394  005F5C  0E00               	movlw	0
 20395  005F5E  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20396  005F60  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20397  005F62  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 20398  005F66  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 20399  005F6A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20400  005F6C  0E03               	movlw	3
 20401  005F6E  6F68               	movwf	memcpy@n& (0+255),b
 20402  005F70  EC14  F034         	call	_memcpy	;wreg free
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;lorawan.c: 2053: index = index + 3;
 20406  005F74  0E03               	movlw	3
 20407  005F76  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20408                           
 20409                           ; BSR set to: 0
 20410                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 20411  005F78  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20412  005F7A  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20413  005F7C  6F64               	movwf	memcpy@d1& (0+255),b
 20414  005F7E  0E00               	movlw	0
 20415  005F80  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20416  005F82  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20417  005F84  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 20418  005F88  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 20419  005F8C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20420  005F8E  0E03               	movlw	3
 20421  005F90  6F68               	movwf	memcpy@n& (0+255),b
 20422  005F92  EC14  F034         	call	_memcpy	;wreg free
 20423                           
 20424                           ; BSR set to: 0
 20425                           ;lorawan.c: 2056: index = index + 3;
 20426  005F96  0E03               	movlw	3
 20427  005F98  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20428                           
 20429                           ; BSR set to: 0
 20430                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 20431  005F9A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20432  005F9C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20433  005F9E  6F64               	movwf	memcpy@d1& (0+255),b
 20434  005FA0  0E00               	movlw	0
 20435  005FA2  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20436  005FA4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20437  005FA6  0ED2               	movlw	low (_loRa+210)
 20438  005FA8  6F66               	movwf	memcpy@s1& (0+255),b
 20439  005FAA  0E02               	movlw	high (_loRa+210)
 20440  005FAC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20441  005FAE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20442  005FB0  0E02               	movlw	2
 20443  005FB2  6F68               	movwf	memcpy@n& (0+255),b
 20444  005FB4  EF14  F034         	goto	_memcpy	;wreg free
 20445  005FB8                     __end_of_PrepareSessionKeys:
 20446                           	opt stack 0
 20447                           tosu	equ	0xFFF
 20448                           tosh	equ	0xFFE
 20449                           tosl	equ	0xFFD
 20450                           pclath	equ	0xFFA
 20451                           tblptru	equ	0xFF8
 20452                           tblptrh	equ	0xFF7
 20453                           tblptrl	equ	0xFF6
 20454                           tablat	equ	0xFF5
 20455                           prodh	equ	0xFF4
 20456                           prodl	equ	0xFF3
 20457                           intcon	equ	0xFF2
 20458                           intcon2	equ	0xFF1
 20459                           intcon3	equ	0xFF0
 20460                           indf0	equ	0xFEF
 20461                           postinc0	equ	0xFEE
 20462                           fsr0h	equ	0xFEA
 20463                           fsr0l	equ	0xFE9
 20464                           wreg	equ	0xFE8
 20465                           postinc1	equ	0xFE6
 20466                           postdec1	equ	0xFE5
 20467                           plusw1	equ	0xFE3
 20468                           fsr1h	equ	0xFE2
 20469                           fsr1l	equ	0xFE1
 20470                           indf2	equ	0xFDF
 20471                           postinc2	equ	0xFDE
 20472                           postdec2	equ	0xFDD
 20473                           plusw2	equ	0xFDB
 20474                           fsr2h	equ	0xFDA
 20475                           fsr2l	equ	0xFD9
 20476                           status	equ	0xFD8
 20477                           
 20478 ;; *************** function _CheckMcastFlags *****************
 20479 ;; Defined at:
 20480 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20481 ;; Parameters:    Size  Location     Type
 20482 ;;  hdr             2    4[BANK0 ] PTR struct .
 20483 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;		None
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1    wreg      unsigned char 
 20488 ;; Registers used:
 20489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20490 ;; Tracked objects:
 20491 ;;		On entry : F/2
 20492 ;;		On exit  : D/0
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20499 ;;Total ram usage:        2 bytes
 20500 ;; Hardware stack levels used:    1
 20501 ;; Hardware stack levels required when called:    7
 20502 ;; This function calls:
 20503 ;;		Nothing
 20504 ;; This function is called by:
 20505 ;;		_LORAWAN_RxDone
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text107
 20510  0060AA                     __ptext107:
 20511                           	opt stack 0
 20512  0060AA                     _CheckMcastFlags:
 20513                           	opt stack 19
 20514                           
 20515                           ; BSR set to: 2
 20516                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 20517                           
 20518                           ; BSR set to: 0
 20519                           ;incstack = 0
 20520  0060AA  0100               	movlb	0	; () banked
 20521  0060AC  EE20 F005          	lfsr	2,5
 20522  0060B0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20523  0060B2  26D9               	addwf	fsr2l,f,c
 20524  0060B4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20525  0060B6  22DA               	addwfc	fsr2h,f,c
 20526  0060B8  BADF               	btfsc	indf2,5,c
 20527  0060BA  0C00               	retlw	0
 20528                           
 20529                           ; BSR set to: 0
 20530  0060BC  EE20 F005          	lfsr	2,5
 20531  0060C0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20532  0060C2  26D9               	addwf	fsr2l,f,c
 20533  0060C4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20534  0060C6  22DA               	addwfc	fsr2h,f,c
 20535  0060C8  BCDF               	btfsc	indf2,6,c
 20536  0060CA  0C00               	retlw	0
 20537                           
 20538                           ; BSR set to: 0
 20539  0060CC  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 20540  0060D0  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 20541  0060D4  38DF               	swapf	223,w,c
 20542  0060D6  32E8               	rrcf	wreg,f,c
 20543  0060D8  0B07               	andlw	7
 20544  0060DA  0A03               	xorlw	3
 20545  0060DC  E001               	bz	l14040
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;lorawan.c: 2110: {
 20549                           ;lorawan.c: 2111: return 0;
 20550  0060DE  0C00               	retlw	0
 20551  0060E0                     l14040:
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;lorawan.c: 2112: }
 20555                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 20556  0060E0  EE20 F005          	lfsr	2,5
 20557  0060E4  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20558  0060E6  26D9               	addwf	fsr2l,f,c
 20559  0060E8  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20560  0060EA  22DA               	addwfc	fsr2h,f,c
 20561  0060EC  50DF               	movf	223,w,c
 20562  0060EE  0B0F               	andlw	15
 20563  0060F0  E001               	bz	l14048
 20564  0060F2  0C00               	retlw	0
 20565  0060F4                     l14048:
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;lorawan.c: 2118: else
 20569                           ;lorawan.c: 2119: {
 20570                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 20571  0060F4  EE20 F008          	lfsr	2,8
 20572  0060F8  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20573  0060FA  26D9               	addwf	fsr2l,f,c
 20574  0060FC  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20575  0060FE  22DA               	addwfc	fsr2h,f,c
 20576  006100  50DF               	movf	indf2,w,c
 20577  006102  E101               	bnz	l14054
 20578  006104  0C00               	retlw	0
 20579  006106                     l14054:
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;lorawan.c: 2123: }
 20583                           ;lorawan.c: 2124: }
 20584                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 20585  006106  EE20 F005          	lfsr	2,5
 20586  00610A  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20587  00610C  26D9               	addwf	fsr2l,f,c
 20588  00610E  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20589  006110  22DA               	addwfc	fsr2h,f,c
 20590  006112  A8DF               	btfss	indf2,4,c
 20591  006114  0C01               	retlw	1
 20592                           
 20593                           ; BSR set to: 0
 20594                           ;lorawan.c: 2127: {
 20595                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 20596  006116  0102               	movlb	2	; () banked
 20597  006118  8700               	bsf	_loRa& (0+255),3,b
 20598                           
 20599                           ;lorawan.c: 2129: }
 20600                           ;lorawan.c: 2131: return 1;
 20601  00611A  0C01               	retlw	1	;funcret
 20602  00611C                     __end_of_CheckMcastFlags:
 20603                           	opt stack 0
 20604                           tosu	equ	0xFFF
 20605                           tosh	equ	0xFFE
 20606                           tosl	equ	0xFFD
 20607                           pclath	equ	0xFFA
 20608                           tblptru	equ	0xFF8
 20609                           tblptrh	equ	0xFF7
 20610                           tblptrl	equ	0xFF6
 20611                           tablat	equ	0xFF5
 20612                           prodh	equ	0xFF4
 20613                           prodl	equ	0xFF3
 20614                           intcon	equ	0xFF2
 20615                           intcon2	equ	0xFF1
 20616                           intcon3	equ	0xFF0
 20617                           indf0	equ	0xFEF
 20618                           postinc0	equ	0xFEE
 20619                           fsr0h	equ	0xFEA
 20620                           fsr0l	equ	0xFE9
 20621                           wreg	equ	0xFE8
 20622                           postinc1	equ	0xFE6
 20623                           postdec1	equ	0xFE5
 20624                           plusw1	equ	0xFE3
 20625                           fsr1h	equ	0xFE2
 20626                           fsr1l	equ	0xFE1
 20627                           indf2	equ	0xFDF
 20628                           postinc2	equ	0xFDE
 20629                           postdec2	equ	0xFDD
 20630                           plusw2	equ	0xFDB
 20631                           fsr2h	equ	0xFDA
 20632                           fsr2l	equ	0xFD9
 20633                           status	equ	0xFD8
 20634                           
 20635 ;; *************** function _CheckFlags *****************
 20636 ;; Defined at:
 20637 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20638 ;; Parameters:    Size  Location     Type
 20639 ;;  hdr             2    4[BANK0 ] PTR struct .
 20640 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20641 ;; Auto vars:     Size  Location     Type
 20642 ;;		None
 20643 ;; Return value:  Size  Location     Type
 20644 ;;                  1    wreg      void 
 20645 ;; Registers used:
 20646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20647 ;; Tracked objects:
 20648 ;;		On entry : F/2
 20649 ;;		On exit  : D/0
 20650 ;;		Unchanged: 0/0
 20651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20655 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20656 ;;Total ram usage:        2 bytes
 20657 ;; Hardware stack levels used:    1
 20658 ;; Hardware stack levels required when called:    7
 20659 ;; This function calls:
 20660 ;;		Nothing
 20661 ;; This function is called by:
 20662 ;;		_LORAWAN_RxDone
 20663 ;; This function uses a non-reentrant model
 20664 ;;
 20665                           
 20666                           	psect	text108
 20667  0066B8                     __ptext108:
 20668                           	opt stack 0
 20669  0066B8                     _CheckFlags:
 20670                           	opt stack 19
 20671                           
 20672                           ; BSR set to: 2
 20673                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 20674                           
 20675                           ;incstack = 0
 20676  0066B8  0100               	movlb	0	; () banked
 20677  0066BA  EE20 F005          	lfsr	2,5
 20678  0066BE  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20679  0066C0  26D9               	addwf	fsr2l,f,c
 20680  0066C2  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20681  0066C4  22DA               	addwfc	fsr2h,f,c
 20682  0066C6  AEDF               	btfss	indf2,7,c
 20683  0066C8  D002               	goto	l14088
 20684                           
 20685                           ; BSR set to: 0
 20686                           ;lorawan.c: 2077: {
 20687                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 20688  0066CA  0102               	movlb	2	; () banked
 20689  0066CC  8D02               	bsf	(_loRa+2)& (0+255),6,b
 20690  0066CE                     l14088:
 20691                           
 20692                           ;lorawan.c: 2079: }
 20693                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 20694  0066CE  0100               	movlb	0	; () banked
 20695  0066D0  EE20 F005          	lfsr	2,5
 20696  0066D4  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20697  0066D6  26D9               	addwf	fsr2l,f,c
 20698  0066D8  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20699  0066DA  22DA               	addwfc	fsr2h,f,c
 20700  0066DC  A8DF               	btfss	indf2,4,c
 20701  0066DE  D002               	goto	l14092
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;lorawan.c: 2082: {
 20705                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 20706  0066E0  0102               	movlb	2	; () banked
 20707  0066E2  8700               	bsf	_loRa& (0+255),3,b
 20708  0066E4                     l14092:
 20709                           
 20710                           ;lorawan.c: 2084: }
 20711                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 20712  0066E4  0100               	movlb	0	; () banked
 20713  0066E6  EE20 F005          	lfsr	2,5
 20714  0066EA  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20715  0066EC  26D9               	addwf	fsr2l,f,c
 20716  0066EE  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20717  0066F0  22DA               	addwfc	fsr2h,f,c
 20718  0066F2  ACDF               	btfss	indf2,6,c
 20719  0066F4  D002               	goto	l14096
 20720                           
 20721                           ; BSR set to: 0
 20722                           ;lorawan.c: 2087: {
 20723                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 20724  0066F6  0102               	movlb	2	; () banked
 20725  0066F8  8900               	bsf	_loRa& (0+255),4,b
 20726  0066FA                     l14096:
 20727                           
 20728                           ;lorawan.c: 2089: }
 20729                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 20730  0066FA  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 20731  0066FE  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 20732  006702  0100               	movlb	0	; () banked
 20733  006704  38DF               	swapf	223,w,c
 20734  006706  32E8               	rrcf	wreg,f,c
 20735  006708  0B07               	andlw	7
 20736  00670A  0A05               	xorlw	5
 20737  00670C  A4D8               	btfss	status,2,c
 20738  00670E  0012               	return	
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;lorawan.c: 2092: {
 20742                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 20743  006710  0102               	movlb	2	; () banked
 20744  006712  8300               	bsf	_loRa& (0+255),1,b
 20745  006714  0012               	return		;funcret
 20746  006716                     __end_of_CheckFlags:
 20747                           	opt stack 0
 20748                           tosu	equ	0xFFF
 20749                           tosh	equ	0xFFE
 20750                           tosl	equ	0xFFD
 20751                           pclath	equ	0xFFA
 20752                           tblptru	equ	0xFF8
 20753                           tblptrh	equ	0xFF7
 20754                           tblptrl	equ	0xFF6
 20755                           tablat	equ	0xFF5
 20756                           prodh	equ	0xFF4
 20757                           prodl	equ	0xFF3
 20758                           intcon	equ	0xFF2
 20759                           intcon2	equ	0xFF1
 20760                           intcon3	equ	0xFF0
 20761                           indf0	equ	0xFEF
 20762                           postinc0	equ	0xFEE
 20763                           fsr0h	equ	0xFEA
 20764                           fsr0l	equ	0xFE9
 20765                           wreg	equ	0xFE8
 20766                           postinc1	equ	0xFE6
 20767                           postdec1	equ	0xFE5
 20768                           plusw1	equ	0xFE3
 20769                           fsr1h	equ	0xFE2
 20770                           fsr1l	equ	0xFE1
 20771                           indf2	equ	0xFDF
 20772                           postinc2	equ	0xFDE
 20773                           postdec2	equ	0xFDD
 20774                           plusw2	equ	0xFDB
 20775                           fsr2h	equ	0xFDA
 20776                           fsr2l	equ	0xFD9
 20777                           status	equ	0xFD8
 20778                           
 20779 ;; *************** function _RADIO_FSKPacketSent *****************
 20780 ;; Defined at:
 20781 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20782 ;; Parameters:    Size  Location     Type
 20783 ;;		None
 20784 ;; Auto vars:     Size  Location     Type
 20785 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
 20786 ;;  irqFlags        1  126[BANK0 ] unsigned char 
 20787 ;; Return value:  Size  Location     Type
 20788 ;;                  1    wreg      void 
 20789 ;; Registers used:
 20790 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20791 ;; Tracked objects:
 20792 ;;		On entry : F/0
 20793 ;;		On exit  : C/0
 20794 ;;		Unchanged: 0/0
 20795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20797 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20798 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20799 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20800 ;;Total ram usage:       13 bytes
 20801 ;; Hardware stack levels used:    1
 20802 ;; Hardware stack levels required when called:   15
 20803 ;; This function calls:
 20804 ;;		_LORAWAN_TxDone
 20805 ;;		_RADIO_RegisterRead
 20806 ;;		_RADIO_WriteMode
 20807 ;;		_SwTimerReadValue
 20808 ;;		_SwTimerStop
 20809 ;; This function is called by:
 20810 ;;		_RADIO_DIO0
 20811 ;; This function uses a non-reentrant model
 20812 ;;
 20813                           
 20814                           	psect	text109
 20815  003A20                     __ptext109:
 20816                           	opt stack 0
 20817  003A20                     _RADIO_FSKPacketSent:
 20818                           	opt stack 13
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 20822                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 20823                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 20824                           
 20825                           ;incstack = 0
 20826  003A20  0E3F               	movlw	63
 20827  003A22  EC97  F039         	call	_RADIO_RegisterRead
 20828  003A26  6FDE               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 20832  003A28  A7DE               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 20833  003A2A  0012               	return	
 20834                           
 20835                           ; BSR set to: 0
 20836                           ;radio_driver_SX1276.c: 1100: {
 20837                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 20838  003A2C  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 20839  003A30  0E00               	movlw	0
 20840  003A32  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 20841  003A34  EC6E  F028         	call	_RADIO_WriteMode
 20842                           
 20843                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 20844  003A38  0101               	movlb	1	; () banked
 20845  003A3A  918D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 20846                           
 20847                           ; BSR set to: 1
 20848                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 20849  003A3C  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 20850  003A3E  EC9B  F03A         	call	_SwTimerStop
 20851                           
 20852                           ; BSR set to: 0
 20853                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 20854  003A42  0101               	movlb	1	; () banked
 20855  003A44  B98D               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 20856  003A46  0012               	return	
 20857                           
 20858                           ; BSR set to: 1
 20859                           ;radio_driver_SX1276.c: 1107: {
 20860                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 20861  003A48  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20862  003A4A  EC96  F036         	call	_SwTimerReadValue
 20863  003A4E  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 20864  003A50  E107               	bnz	u17340
 20865  003A52  0E1F               	movlw	31
 20866  003A54  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
 20867  003A56  0EAC               	movlw	172
 20868  003A58  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 20869  003A5A  0EDF               	movlw	223
 20870  003A5C  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 20871  003A5E  E346               	bnc	l14914
 20872  003A60                     u17340:
 20873                           
 20874                           ; BSR set to: 0
 20875  003A60  0101               	movlb	1	; () banked
 20876  003A62  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20877  003A64  EC96  F036         	call	_SwTimerReadValue
 20878  003A68  0E0D               	movlw	13
 20879  003A6A  D005               	goto	u17350
 20880  003A6C                     u17355:
 20881  003A6C  90D8               	bcf	status,0,c
 20882  003A6E  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 20883  003A70  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 20884  003A72  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 20885  003A74  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
 20886  003A76                     u17350:
 20887  003A76  2EE8               	decfsz	wreg,f,c
 20888  003A78  D7F9               	goto	u17355
 20889  003A7A  0E7D               	movlw	125
 20890  003A7C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20891  003A7E  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 20892  003A82  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 20893  003A86  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 20894  003A88  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 20895  003A8A  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20896  003A8C  50F3               	movf	prodl,w,c
 20897  003A8E  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20898  003A90  50F4               	movf	prodh,w,c
 20899  003A92  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20900  003A94  0E00               	movlw	0
 20901  003A96  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20902  003A98  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20903  003A9A  50F3               	movf	prodl,w,c
 20904  003A9C  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20905  003A9E  50F4               	movf	prodh,w,c
 20906  003AA0  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20907  003AA2  0E00               	movlw	0
 20908  003AA4  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20909  003AA6  0E7D               	movlw	125
 20910  003AA8  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20911  003AAA  50F3               	movf	prodl,w,c
 20912  003AAC  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20913  003AAE  50F4               	movf	prodh,w,c
 20914  003AB0  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20915  003AB2  0E00               	movlw	0
 20916  003AB4  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20917  003AB6  50F3               	movf	prodl,w,c
 20918  003AB8  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20919  003ABA  50F4               	movf	prodh,w,c
 20920  003ABC  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20921  003ABE  0E00               	movlw	0
 20922  003AC0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20923  003AC2  50F3               	movf	prodl,w,c
 20924  003AC4  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20925  003AC6  50F4               	movf	prodh,w,c
 20926  003AC8  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20927  003ACA  0E7D               	movlw	125
 20928  003ACC  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 20929  003ACE  50F3               	movf	prodl,w,c
 20930  003AD0  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20931  003AD2  0E00               	movlw	0
 20932  003AD4  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20933  003AD6  50F3               	movf	prodl,w,c
 20934  003AD8  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20935  003ADA  0E00               	movlw	0
 20936  003ADC  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20937  003ADE  50F3               	movf	prodl,w,c
 20938  003AE0  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20939  003AE2  0E00               	movlw	0
 20940  003AE4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20941  003AE6  50F3               	movf	prodl,w,c
 20942  003AE8  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20943  003AEA  D045               	goto	L11
 20944  003AEC                     l14914:
 20945                           
 20946                           ; BSR set to: 0
 20947  003AEC  0101               	movlb	1	; () banked
 20948  003AEE  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20949  003AF0  EC96  F036         	call	_SwTimerReadValue
 20950  003AF4  0E7D               	movlw	125
 20951  003AF6  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20952  003AF8  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 20953  003AFC  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 20954  003B00  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 20955  003B02  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 20956  003B04  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20957  003B06  50F3               	movf	prodl,w,c
 20958  003B08  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20959  003B0A  50F4               	movf	prodh,w,c
 20960  003B0C  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20961  003B0E  0E00               	movlw	0
 20962  003B10  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20963  003B12  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20964  003B14  50F3               	movf	prodl,w,c
 20965  003B16  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20966  003B18  50F4               	movf	prodh,w,c
 20967  003B1A  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20968  003B1C  0E00               	movlw	0
 20969  003B1E  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20970  003B20  0E7D               	movlw	125
 20971  003B22  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20972  003B24  50F3               	movf	prodl,w,c
 20973  003B26  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20974  003B28  50F4               	movf	prodh,w,c
 20975  003B2A  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20976  003B2C  0E00               	movlw	0
 20977  003B2E  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20978  003B30  50F3               	movf	prodl,w,c
 20979  003B32  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20980  003B34  50F4               	movf	prodh,w,c
 20981  003B36  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20982  003B38  0E00               	movlw	0
 20983  003B3A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20984  003B3C  50F3               	movf	prodl,w,c
 20985  003B3E  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20986  003B40  50F4               	movf	prodh,w,c
 20987  003B42  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20988  003B44  0E7D               	movlw	125
 20989  003B46  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 20990  003B48  50F3               	movf	prodl,w,c
 20991  003B4A  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20992  003B4C  0E00               	movlw	0
 20993  003B4E  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20994  003B50  50F3               	movf	prodl,w,c
 20995  003B52  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20996  003B54  0E00               	movlw	0
 20997  003B56  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20998  003B58  50F3               	movf	prodl,w,c
 20999  003B5A  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21000  003B5C  0E00               	movlw	0
 21001  003B5E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21002  003B60  50F3               	movf	prodl,w,c
 21003  003B62  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21004  003B64  0E0D               	movlw	13
 21005  003B66  D005               	goto	u17360
 21006  003B68                     u17365:
 21007  003B68  90D8               	bcf	status,0,c
 21008  003B6A  33D5               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21009  003B6C  33D4               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21010  003B6E  33D3               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21011  003B70  33D2               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 21012  003B72                     u17360:
 21013  003B72  2EE8               	decfsz	wreg,f,c
 21014  003B74  D7F9               	goto	u17365
 21015  003B76                     L11:
 21016  003B76  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1215
 21017  003B7A  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1215+1
 21018  003B7E  C0D4  F0DC         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1215+2
 21019  003B82  C0D5  F0DD         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1215+3
 21020                           
 21021                           ; BSR set to: 0
 21022  003B86  51DA               	movf	_RADIO_FSKPacketSent$1215& (0+255),w,b
 21023  003B88  0820               	sublw	32
 21024  003B8A  6FD6               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21025  003B8C  0E4E               	movlw	78
 21026  003B8E  55DB               	subfwb	(_RADIO_FSKPacketSent$1215+1)& (0+255),w,b
 21027  003B90  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21028  003B92  0E00               	movlw	0
 21029  003B94  55DC               	subfwb	(_RADIO_FSKPacketSent$1215+2)& (0+255),w,b
 21030  003B96  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21031  003B98  0E00               	movlw	0
 21032  003B9A  55DD               	subfwb	(_RADIO_FSKPacketSent$1215+3)& (0+255),w,b
 21033  003B9C  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21034                           
 21035                           ; BSR set to: 0
 21036                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21037  003B9E  0101               	movlb	1	; () banked
 21038  003BA0  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21039  003BA2  EC9B  F03A         	call	_SwTimerStop
 21040                           
 21041                           ; BSR set to: 0
 21042                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21043  003BA6  C0D6  F0A0         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21044  003BAA  C0D7  F0A1         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21045  003BAE  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
 21046  003BB2                     __end_of_RADIO_FSKPacketSent:
 21047                           	opt stack 0
 21048                           tosu	equ	0xFFF
 21049                           tosh	equ	0xFFE
 21050                           tosl	equ	0xFFD
 21051                           pclath	equ	0xFFA
 21052                           tblptru	equ	0xFF8
 21053                           tblptrh	equ	0xFF7
 21054                           tblptrl	equ	0xFF6
 21055                           tablat	equ	0xFF5
 21056                           prodh	equ	0xFF4
 21057                           prodl	equ	0xFF3
 21058                           intcon	equ	0xFF2
 21059                           intcon2	equ	0xFF1
 21060                           intcon3	equ	0xFF0
 21061                           indf0	equ	0xFEF
 21062                           postinc0	equ	0xFEE
 21063                           fsr0h	equ	0xFEA
 21064                           fsr0l	equ	0xFE9
 21065                           wreg	equ	0xFE8
 21066                           postinc1	equ	0xFE6
 21067                           postdec1	equ	0xFE5
 21068                           plusw1	equ	0xFE3
 21069                           fsr1h	equ	0xFE2
 21070                           fsr1l	equ	0xFE1
 21071                           indf2	equ	0xFDF
 21072                           postinc2	equ	0xFDE
 21073                           postdec2	equ	0xFDD
 21074                           plusw2	equ	0xFDB
 21075                           fsr2h	equ	0xFDA
 21076                           fsr2l	equ	0xFD9
 21077                           status	equ	0xFD8
 21078                           
 21079 ;; *************** function _LORAWAN_TxDone *****************
 21080 ;; Defined at:
 21081 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21082 ;; Parameters:    Size  Location     Type
 21083 ;;  timeOnAir       2   64[BANK0 ] unsigned int 
 21084 ;; Auto vars:     Size  Location     Type
 21085 ;;  minim           4  109[BANK0 ] unsigned long 
 21086 ;;  ticks           4  105[BANK0 ] unsigned long 
 21087 ;;  delta           4  101[BANK0 ] unsigned long 
 21088 ;;  i               1  113[BANK0 ] unsigned char 
 21089 ;;  found           1  100[BANK0 ] unsigned char 
 21090 ;; Return value:  Size  Location     Type
 21091 ;;                  1    wreg      void 
 21092 ;; Registers used:
 21093 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21094 ;; Tracked objects:
 21095 ;;		On entry : E/1
 21096 ;;		On exit  : D/0
 21097 ;;		Unchanged: 0/0
 21098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21099 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21100 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21101 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21102 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21103 ;;Total ram usage:       50 bytes
 21104 ;; Hardware stack levels used:    1
 21105 ;; Hardware stack levels required when called:   14
 21106 ;; This function calls:
 21107 ;;		_LORAWAN_EnterContinuousReceive
 21108 ;;		_RADIO_GetStatus
 21109 ;;		_RxDataDone
 21110 ;;		_SwTimerIsRunning
 21111 ;;		_SwTimerReadValue
 21112 ;;		_SwTimerSetTimeout
 21113 ;;		_SwTimerStart
 21114 ;;		_SwTimerStop
 21115 ;;		___lldiv
 21116 ;; This function is called by:
 21117 ;;		_RADIO_TxDone
 21118 ;;		_RADIO_FSKPacketSent
 21119 ;;		_RADIO_WatchdogTimeout
 21120 ;; This function uses a non-reentrant model
 21121 ;;
 21122                           
 21123                           	psect	text110
 21124  000B18                     __ptext110:
 21125                           	opt stack 0
 21126  000B18                     _LORAWAN_TxDone:
 21127                           	opt stack 13
 21128                           
 21129                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 21130                           
 21131                           ;incstack = 0
 21132  000B18  0102               	movlb	2	; () banked
 21133  000B1A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 21134  000B1C  EFAA  F009         	goto	l14722
 21135                           
 21136                           ; BSR set to: 2
 21137                           ;lorawan_eu.c: 368: {
 21138                           ;lorawan_eu.c: 369: bool found = 0;
 21139  000B20  0100               	movlb	0	; () banked
 21140  000B22  6BC4               	clrf	LORAWAN_TxDone@found& (0+255),b
 21141                           
 21142                           ;lorawan_eu.c: 370: uint8_t i;
 21143                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 21144  000B24  6BC5               	clrf	LORAWAN_TxDone@delta& (0+255),b
 21145  000B26  6BC6               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21146  000B28  6BC7               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21147  000B2A  6BC8               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21148  000B2C  69CD               	setf	LORAWAN_TxDone@minim& (0+255),b
 21149  000B2E  69CE               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21150  000B30  69CF               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21151  000B32  69D0               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21152                           
 21153                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 21154  000B34  0102               	movlb	2	; () banked
 21155  000B36  6BF1               	clrf	(_loRa+241)& (0+255),b
 21156                           
 21157                           ; BSR set to: 2
 21158                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 21159  000B38  5102               	movf	(_loRa+2)& (0+255),w,b
 21160  000B3A  0BF0               	andlw	-16
 21161  000B3C  0902               	iorlw	2
 21162  000B3E  6F02               	movwf	(_loRa+2)& (0+255),b
 21163                           
 21164                           ; BSR set to: 2
 21165                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 21166  000B40  C2DA  F0D1         	movff	_loRa+218,LORAWAN_TxDone@i
 21167                           
 21168                           ; BSR set to: 2
 21169                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 21170  000B44  A500               	btfss	_loRa& (0+255),2,b
 21171  000B46  D110               	goto	l14652
 21172                           
 21173                           ; BSR set to: 2
 21174                           ;lorawan_eu.c: 382: {
 21175                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21176  000B48  0E7D               	movlw	low _rxWindowOffset
 21177  000B4A  2517               	addwf	(_loRa+23)& (0+255),w,b
 21178  000B4C  6EF6               	movwf	tblptrl,c
 21179  000B4E  6AF7               	clrf	tblptrh,c
 21180  000B50  0EFF               	movlw	high _rxWindowOffset
 21181  000B52  22F7               	addwfc	tblptrh,f,c
 21182  000B54                     	if	1	;There are 3 active tblptr bytes
 21183  000B54  6AF8               	clrf	tblptru,c
 21184  000B56  0E00               	movlw	low (__mediumconst shr (0+16))
 21185  000B58  22F8               	addwfc	tblptru,f,c
 21186  000B5A                     	endif
 21187  000B5A  0008               	tblrd		*
 21188  000B5C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21189  000B60  5198               	movf	(_loRa+152)& (0+255),w,b
 21190  000B62  0100               	movlb	0	; () banked
 21191  000B64  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21192  000B66  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21193  000B68  0E00               	movlw	0
 21194  000B6A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21195  000B6C  0EFF               	movlw	255
 21196  000B6E  0102               	movlb	2	; () banked
 21197  000B70  2199               	addwfc	(_loRa+153)& (0+255),w,b
 21198  000B72  0100               	movlb	0	; () banked
 21199  000B74  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21200  000B76  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21201  000B78  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21202  000B7A  0E0C               	movlw	12
 21203  000B7C                     u16915:
 21204  000B7C  90D8               	bcf	status,0,c
 21205  000B7E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21206  000B80  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21207  000B82  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21208  000B84  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21209  000B86  2EE8               	decfsz	wreg,f,c
 21210  000B88  D7F9               	goto	u16915
 21211  000B8A  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21212  000B8E  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21213  000B92  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21214  000B96  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21215  000B9A  0E7D               	movlw	125
 21216  000B9C  6F68               	movwf	___lldiv@divisor& (0+255),b
 21217  000B9E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21218  000BA0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21219  000BA2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21220  000BA4  EC1A  F030         	call	___lldiv	;wreg free
 21221  000BA8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21222  000BAC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21223  000BB0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21224  000BB4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21225  000BB8  0102               	movlb	2	; () banked
 21226  000BBA  51E2               	movf	(_loRa+226)& (0+255),w,b
 21227  000BBC  EC75  F036         	call	_SwTimerSetTimeout
 21228                           
 21229                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21230  000BC0  0E7D               	movlw	low _rxWindowOffset
 21231  000BC2  0102               	movlb	2	; () banked
 21232  000BC4  251C               	addwf	(_loRa+28)& (0+255),w,b
 21233  000BC6  6EF6               	movwf	tblptrl,c
 21234  000BC8  6AF7               	clrf	tblptrh,c
 21235  000BCA  0EFF               	movlw	high _rxWindowOffset
 21236  000BCC  22F7               	addwfc	tblptrh,f,c
 21237  000BCE                     	if	1	;There are 3 active tblptr bytes
 21238  000BCE  6AF8               	clrf	tblptru,c
 21239  000BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 21240  000BD2  22F8               	addwfc	tblptru,f,c
 21241  000BD4                     	endif
 21242  000BD4  0008               	tblrd		*
 21243  000BD6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21244  000BDA  519A               	movf	(_loRa+154)& (0+255),w,b
 21245  000BDC  0100               	movlb	0	; () banked
 21246  000BDE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21247  000BE0  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21248  000BE2  0E00               	movlw	0
 21249  000BE4  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21250  000BE6  0EFF               	movlw	255
 21251  000BE8  0102               	movlb	2	; () banked
 21252  000BEA  219B               	addwfc	(_loRa+155)& (0+255),w,b
 21253  000BEC  0100               	movlb	0	; () banked
 21254  000BEE  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21255  000BF0  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21256  000BF2  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21257  000BF4  0E0C               	movlw	12
 21258  000BF6                     u16925:
 21259  000BF6  90D8               	bcf	status,0,c
 21260  000BF8  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21261  000BFA  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21262  000BFC  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21263  000BFE  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21264  000C00  2EE8               	decfsz	wreg,f,c
 21265  000C02  D7F9               	goto	u16925
 21266  000C04  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21267  000C08  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21268  000C0C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21269  000C10  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21270  000C14  0E7D               	movlw	125
 21271  000C16  6F68               	movwf	___lldiv@divisor& (0+255),b
 21272  000C18  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21273  000C1A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21274  000C1C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21275  000C1E  EC1A  F030         	call	___lldiv	;wreg free
 21276  000C22  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21277  000C26  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21278  000C2A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21279  000C2E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21280  000C32  0102               	movlb	2	; () banked
 21281  000C34  51E3               	movf	(_loRa+227)& (0+255),w,b
 21282  000C36  EC75  F036         	call	_SwTimerSetTimeout
 21283                           
 21284                           ; BSR set to: 0
 21285                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 21286  000C3A  0102               	movlb	2	; () banked
 21287  000C3C  51E2               	movf	(_loRa+226)& (0+255),w,b
 21288  000C3E  EC58  F02E         	call	_SwTimerStart
 21289                           
 21290                           ; BSR set to: 0
 21291                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 21292  000C42  0102               	movlb	2	; () banked
 21293  000C44  51E3               	movf	(_loRa+227)& (0+255),w,b
 21294  000C46  EC58  F02E         	call	_SwTimerStart
 21295                           
 21296                           ; BSR set to: 0
 21297                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 21298  000C4A  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21299  000C4E  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21300  000C52  0102               	movlb	2	; () banked
 21301  000C54  51DB               	movf	(_loRa+219)& (0+255),w,b
 21302  000C56  0100               	movlb	0	; () banked
 21303  000C58  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21304  000C5A  0102               	movlb	2	; () banked
 21305  000C5C  51DC               	movf	(_loRa+220)& (0+255),w,b
 21306  000C5E  0100               	movlb	0	; () banked
 21307  000C60  6FA5               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21308  000C62  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21309  000C64  6BA7               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 21310  000C66  0ED6               	movlw	214
 21311  000C68  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21312  000C6A  CFF3 F0A8          	movff	prodl,??_LORAWAN_TxDone+6
 21313  000C6E  CFF4 F0A9          	movff	prodh,??_LORAWAN_TxDone+7
 21314  000C72  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21315  000C74  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21316  000C76  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21317  000C78  50F3               	movf	prodl,w,c
 21318  000C7A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21319  000C7C  50F4               	movf	prodh,w,c
 21320  000C7E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21321  000C80  0E00               	movlw	0
 21322  000C82  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21323  000C84  0E0B               	movlw	11
 21324  000C86  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21325  000C88  50F3               	movf	prodl,w,c
 21326  000C8A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21327  000C8C  50F4               	movf	prodh,w,c
 21328  000C8E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21329  000C90  0E00               	movlw	0
 21330  000C92  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21331  000C94  0ED6               	movlw	214
 21332  000C96  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21333  000C98  50F3               	movf	prodl,w,c
 21334  000C9A  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21335  000C9C  50F4               	movf	prodh,w,c
 21336  000C9E  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21337  000CA0  0E0B               	movlw	11
 21338  000CA2  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21339  000CA4  50F3               	movf	prodl,w,c
 21340  000CA6  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21341  000CA8  50F4               	movf	prodh,w,c
 21342  000CAA  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21343  000CAC  0E00               	movlw	0
 21344  000CAE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21345  000CB0  50F3               	movf	prodl,w,c
 21346  000CB2  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21347  000CB4  50F4               	movf	prodh,w,c
 21348  000CB6  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21349  000CB8  0ED6               	movlw	214
 21350  000CBA  03A7               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 21351  000CBC  50F3               	movf	prodl,w,c
 21352  000CBE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21353  000CC0  0E0B               	movlw	11
 21354  000CC2  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21355  000CC4  50F3               	movf	prodl,w,c
 21356  000CC6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21357  000CC8  0E00               	movlw	0
 21358  000CCA  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21359  000CCC  50F3               	movf	prodl,w,c
 21360  000CCE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21361  000CD0  0E00               	movlw	0
 21362  000CD2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21363  000CD4  50F3               	movf	prodl,w,c
 21364  000CD6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21365  000CD8  0EFF               	movlw	255
 21366  000CDA  25A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21367  000CDC  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21368  000CDE  0EFF               	movlw	255
 21369  000CE0  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21370  000CE2  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21371  000CE4  0EFF               	movlw	255
 21372  000CE6  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21373  000CE8  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21374  000CEA  0EFF               	movlw	255
 21375  000CEC  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21376  000CEE  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21377  000CF0  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21378  000CF2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21379  000CF4  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21380  000CF8  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21381  000CFC  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21382  000CFE  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21383  000D00  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21384  000D02  50F3               	movf	prodl,w,c
 21385  000D04  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21386  000D06  50F4               	movf	prodh,w,c
 21387  000D08  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21388  000D0A  0E00               	movlw	0
 21389  000D0C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21390  000D0E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21391  000D10  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21392  000D12  50F3               	movf	prodl,w,c
 21393  000D14  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21394  000D16  50F4               	movf	prodh,w,c
 21395  000D18  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21396  000D1A  0E00               	movlw	0
 21397  000D1C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21398  000D1E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21399  000D20  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21400  000D22  50F3               	movf	prodl,w,c
 21401  000D24  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21402  000D26  50F4               	movf	prodh,w,c
 21403  000D28  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21404  000D2A  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21405  000D2C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21406  000D2E  50F3               	movf	prodl,w,c
 21407  000D30  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21408  000D32  50F4               	movf	prodh,w,c
 21409  000D34  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21410  000D36  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21411  000D38  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21412  000D3A  50F3               	movf	prodl,w,c
 21413  000D3C  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21414  000D3E  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21415  000D40  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21416  000D42  50F3               	movf	prodl,w,c
 21417  000D44  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21418  000D46  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21419  000D48  0D0E               	mullw	14
 21420  000D4A  0E08               	movlw	low (_Channels+8)
 21421  000D4C  24F3               	addwf	prodl,w,c
 21422  000D4E  6ED9               	movwf	fsr2l,c
 21423  000D50  0E04               	movlw	high (_Channels+8)
 21424  000D52  20F4               	addwfc	prodh,w,c
 21425  000D54  6EDA               	movwf	fsr2h,c
 21426  000D56  C0B0  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 21427  000D5A  C0B1  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 21428  000D5E  C0B2  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 21429  000D62  C0B3  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 21430                           
 21431                           ;lorawan_eu.c: 389: }
 21432  000D66  D11D               	goto	l14662
 21433  000D68                     l14652:
 21434                           
 21435                           ; BSR set to: 2
 21436                           ;lorawan_eu.c: 390: else
 21437                           ;lorawan_eu.c: 391: {
 21438                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21439  000D68  0E7D               	movlw	low _rxWindowOffset
 21440  000D6A  2517               	addwf	(_loRa+23)& (0+255),w,b
 21441  000D6C  6EF6               	movwf	tblptrl,c
 21442  000D6E  6AF7               	clrf	tblptrh,c
 21443  000D70  0EFF               	movlw	high _rxWindowOffset
 21444  000D72  22F7               	addwfc	tblptrh,f,c
 21445  000D74                     	if	1	;There are 3 active tblptr bytes
 21446  000D74  6AF8               	clrf	tblptru,c
 21447  000D76  0E00               	movlw	low (__mediumconst shr (0+16))
 21448  000D78  22F8               	addwfc	tblptru,f,c
 21449  000D7A                     	endif
 21450  000D7A  0008               	tblrd		*
 21451  000D7C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21452  000D80  5194               	movf	(_loRa+148)& (0+255),w,b
 21453  000D82  0100               	movlb	0	; () banked
 21454  000D84  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21455  000D86  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21456  000D88  0E00               	movlw	0
 21457  000D8A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21458  000D8C  0EFF               	movlw	255
 21459  000D8E  0102               	movlb	2	; () banked
 21460  000D90  2195               	addwfc	(_loRa+149)& (0+255),w,b
 21461  000D92  0100               	movlb	0	; () banked
 21462  000D94  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21463  000D96  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21464  000D98  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21465  000D9A  0E0C               	movlw	12
 21466  000D9C                     u16935:
 21467  000D9C  90D8               	bcf	status,0,c
 21468  000D9E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21469  000DA0  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21470  000DA2  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21471  000DA4  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21472  000DA6  2EE8               	decfsz	wreg,f,c
 21473  000DA8  D7F9               	goto	u16935
 21474  000DAA  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21475  000DAE  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21476  000DB2  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21477  000DB6  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21478  000DBA  0E7D               	movlw	125
 21479  000DBC  6F68               	movwf	___lldiv@divisor& (0+255),b
 21480  000DBE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21481  000DC0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21482  000DC2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21483  000DC4  EC1A  F030         	call	___lldiv	;wreg free
 21484  000DC8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21485  000DCC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21486  000DD0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21487  000DD4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21488  000DD8  0102               	movlb	2	; () banked
 21489  000DDA  51E4               	movf	(_loRa+228)& (0+255),w,b
 21490  000DDC  EC75  F036         	call	_SwTimerSetTimeout
 21491                           
 21492                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21493  000DE0  0E7D               	movlw	low _rxWindowOffset
 21494  000DE2  0102               	movlb	2	; () banked
 21495  000DE4  251C               	addwf	(_loRa+28)& (0+255),w,b
 21496  000DE6  6EF6               	movwf	tblptrl,c
 21497  000DE8  6AF7               	clrf	tblptrh,c
 21498  000DEA  0EFF               	movlw	high _rxWindowOffset
 21499  000DEC  22F7               	addwfc	tblptrh,f,c
 21500  000DEE                     	if	1	;There are 3 active tblptr bytes
 21501  000DEE  6AF8               	clrf	tblptru,c
 21502  000DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 21503  000DF2  22F8               	addwfc	tblptru,f,c
 21504  000DF4                     	endif
 21505  000DF4  0008               	tblrd		*
 21506  000DF6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21507  000DFA  5196               	movf	(_loRa+150)& (0+255),w,b
 21508  000DFC  0100               	movlb	0	; () banked
 21509  000DFE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21510  000E00  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21511  000E02  0E00               	movlw	0
 21512  000E04  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21513  000E06  0EFF               	movlw	255
 21514  000E08  0102               	movlb	2	; () banked
 21515  000E0A  2197               	addwfc	(_loRa+151)& (0+255),w,b
 21516  000E0C  0100               	movlb	0	; () banked
 21517  000E0E  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21518  000E10  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21519  000E12  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21520  000E14  0E0C               	movlw	12
 21521  000E16                     u16945:
 21522  000E16  90D8               	bcf	status,0,c
 21523  000E18  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21524  000E1A  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21525  000E1C  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21526  000E1E  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21527  000E20  2EE8               	decfsz	wreg,f,c
 21528  000E22  D7F9               	goto	u16945
 21529  000E24  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21530  000E28  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21531  000E2C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21532  000E30  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21533  000E34  0E7D               	movlw	125
 21534  000E36  6F68               	movwf	___lldiv@divisor& (0+255),b
 21535  000E38  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21536  000E3A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21537  000E3C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21538  000E3E  EC1A  F030         	call	___lldiv	;wreg free
 21539  000E42  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21540  000E46  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21541  000E4A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21542  000E4E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21543  000E52  0102               	movlb	2	; () banked
 21544  000E54  51E5               	movf	(_loRa+229)& (0+255),w,b
 21545  000E56  EC75  F036         	call	_SwTimerSetTimeout
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 21549  000E5A  0102               	movlb	2	; () banked
 21550  000E5C  51E4               	movf	(_loRa+228)& (0+255),w,b
 21551  000E5E  EC58  F02E         	call	_SwTimerStart
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 21555  000E62  0102               	movlb	2	; () banked
 21556  000E64  5112               	movf	(_loRa+18)& (0+255),w,b
 21557  000E66  E103               	bnz	l14660
 21558                           
 21559                           ; BSR set to: 2
 21560                           ;lorawan_eu.c: 396: {
 21561                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 21562  000E68  51E5               	movf	(_loRa+229)& (0+255),w,b
 21563  000E6A  EC58  F02E         	call	_SwTimerStart
 21564  000E6E                     l14660:
 21565                           
 21566                           ;lorawan_eu.c: 398: }
 21567                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 21568  000E6E  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21569  000E72  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21570  000E76  EE22  F0DB         	lfsr	2,_loRa+219
 21571  000E7A  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 21572  000E7E  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+3
 21573  000E82  0100               	movlb	0	; () banked
 21574  000E84  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21575  000E86  0D0E               	mullw	14
 21576  000E88  0E06               	movlw	low (_Channels+6)
 21577  000E8A  24F3               	addwf	prodl,w,c
 21578  000E8C  6ED9               	movwf	fsr2l,c
 21579  000E8E  0E04               	movlw	high (_Channels+6)
 21580  000E90  20F4               	addwfc	prodh,w,c
 21581  000E92  6EDA               	movwf	fsr2h,c
 21582  000E94  CFDE F0A6          	movff	postinc2,??_LORAWAN_TxDone+4
 21583  000E98  CFDD F0A7          	movff	postdec2,??_LORAWAN_TxDone+5
 21584  000E9C  51A6               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 21585  000E9E  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 21586  000EA0  51A7               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 21587  000EA2  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 21588  000EA4  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21589  000EA6  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21590  000EA8  29A8               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21591  000EAA  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21592  000EAC  0E00               	movlw	0
 21593  000EAE  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21594  000EB0  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21595  000EB2  0E00               	movlw	0
 21596  000EB4  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21597  000EB6  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21598  000EB8  0E00               	movlw	0
 21599  000EBA  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21600  000EBC  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21601  000EBE  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21602  000EC0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21603  000EC2  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21604  000EC6  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21605  000ECA  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21606  000ECC  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21607  000ECE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21608  000ED0  50F3               	movf	prodl,w,c
 21609  000ED2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21610  000ED4  50F4               	movf	prodh,w,c
 21611  000ED6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21612  000ED8  0E00               	movlw	0
 21613  000EDA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21614  000EDC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21615  000EDE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21616  000EE0  50F3               	movf	prodl,w,c
 21617  000EE2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21618  000EE4  50F4               	movf	prodh,w,c
 21619  000EE6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21620  000EE8  0E00               	movlw	0
 21621  000EEA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21622  000EEC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21623  000EEE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21624  000EF0  50F3               	movf	prodl,w,c
 21625  000EF2  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21626  000EF4  50F4               	movf	prodh,w,c
 21627  000EF6  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21628  000EF8  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21629  000EFA  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21630  000EFC  50F3               	movf	prodl,w,c
 21631  000EFE  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21632  000F00  50F4               	movf	prodh,w,c
 21633  000F02  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21634  000F04  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21635  000F06  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21636  000F08  50F3               	movf	prodl,w,c
 21637  000F0A  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21638  000F0C  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21639  000F0E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21640  000F10  50F3               	movf	prodl,w,c
 21641  000F12  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21642  000F14  0EFF               	movlw	255
 21643  000F16  25B0               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 21644  000F18  6FB4               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 21645  000F1A  0EFF               	movlw	255
 21646  000F1C  21B1               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 21647  000F1E  6FB5               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 21648  000F20  0EFF               	movlw	255
 21649  000F22  21B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 21650  000F24  6FB6               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 21651  000F26  0EFF               	movlw	255
 21652  000F28  21B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 21653  000F2A  6FB7               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 21654  000F2C  51B4               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 21655  000F2E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21656  000F30  CFF3 F0B8          	movff	prodl,??_LORAWAN_TxDone+22
 21657  000F34  CFF4 F0B9          	movff	prodh,??_LORAWAN_TxDone+23
 21658  000F38  6BBA               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 21659  000F3A  6BBB               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 21660  000F3C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21661  000F3E  50F3               	movf	prodl,w,c
 21662  000F40  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21663  000F42  50F4               	movf	prodh,w,c
 21664  000F44  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21665  000F46  0E00               	movlw	0
 21666  000F48  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21667  000F4A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21668  000F4C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21669  000F4E  50F3               	movf	prodl,w,c
 21670  000F50  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21671  000F52  50F4               	movf	prodh,w,c
 21672  000F54  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21673  000F56  0E00               	movlw	0
 21674  000F58  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21675  000F5A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21676  000F5C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21677  000F5E  50F3               	movf	prodl,w,c
 21678  000F60  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21679  000F62  50F4               	movf	prodh,w,c
 21680  000F64  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21681  000F66  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21682  000F68  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21683  000F6A  50F3               	movf	prodl,w,c
 21684  000F6C  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21685  000F6E  50F4               	movf	prodh,w,c
 21686  000F70  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21687  000F72  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21688  000F74  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21689  000F76  50F3               	movf	prodl,w,c
 21690  000F78  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21691  000F7A  51B7               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 21692  000F7C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21693  000F7E  50F3               	movf	prodl,w,c
 21694  000F80  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21695  000F82  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21696  000F84  0D0E               	mullw	14
 21697  000F86  0E08               	movlw	low (_Channels+8)
 21698  000F88  24F3               	addwf	prodl,w,c
 21699  000F8A  6ED9               	movwf	fsr2l,c
 21700  000F8C  0E04               	movlw	high (_Channels+8)
 21701  000F8E  20F4               	addwfc	prodh,w,c
 21702  000F90  6EDA               	movwf	fsr2h,c
 21703  000F92  C0B8  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 21704  000F96  C0B9  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 21705  000F9A  C0BA  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 21706  000F9E  C0BB  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 21707  000FA2                     l14662:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;lorawan_eu.c: 401: }
 21711                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 21712  000FA2  0102               	movlb	2	; () banked
 21713  000FA4  51E9               	movf	(_loRa+233)& (0+255),w,b
 21714  000FA6  EC31  F03A         	call	_SwTimerIsRunning
 21715  000FAA  0900               	iorlw	0
 21716  000FAC  E101 D0C8          	bz	l14674
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;lorawan_eu.c: 404: {
 21720                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 21721  000FB0  0102               	movlb	2	; () banked
 21722  000FB2  51E9               	movf	(_loRa+233)& (0+255),w,b
 21723  000FB4  EC9B  F03A         	call	_SwTimerStop
 21724                           
 21725                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 21726  000FB8  0102               	movlb	2	; () banked
 21727  000FBA  51E9               	movf	(_loRa+233)& (0+255),w,b
 21728  000FBC  EC96  F036         	call	_SwTimerReadValue
 21729  000FC0  C08D  F0C9         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 21730  000FC4  C08E  F0CA         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 21731  000FC8  C08F  F0CB         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 21732  000FCC  C090  F0CC         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 21733                           
 21734                           ; BSR set to: 0
 21735                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 21736  000FD0  51CC               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 21737  000FD2  E107               	bnz	u16970
 21738  000FD4  0E1F               	movlw	31
 21739  000FD6  5DC9               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 21740  000FD8  0EAC               	movlw	172
 21741  000FDA  59CA               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 21742  000FDC  0EDF               	movlw	223
 21743  000FDE  59CB               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 21744  000FE0  E34A               	bnc	l14670
 21745  000FE2                     u16970:
 21746                           
 21747                           ; BSR set to: 0
 21748  000FE2  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21749  000FE6  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21750  000FEA  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21751  000FEE  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21752  000FF2  0E0D               	movlw	13
 21753  000FF4  D005               	goto	u16980
 21754  000FF6                     u16985:
 21755  000FF6  90D8               	bcf	status,0,c
 21756  000FF8  33A5               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21757  000FFA  33A4               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21758  000FFC  33A3               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21759  000FFE  33A2               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 21760  001000                     u16980:
 21761  001000  2EE8               	decfsz	wreg,f,c
 21762  001002  D7F9               	goto	u16985
 21763  001004  0E7D               	movlw	125
 21764  001006  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21765  001008  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21766  00100C  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21767  001010  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21768  001012  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21769  001014  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21770  001016  50F3               	movf	prodl,w,c
 21771  001018  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21772  00101A  50F4               	movf	prodh,w,c
 21773  00101C  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21774  00101E  0E00               	movlw	0
 21775  001020  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21776  001022  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21777  001024  50F3               	movf	prodl,w,c
 21778  001026  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21779  001028  50F4               	movf	prodh,w,c
 21780  00102A  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21781  00102C  0E00               	movlw	0
 21782  00102E  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21783  001030  0E7D               	movlw	125
 21784  001032  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21785  001034  50F3               	movf	prodl,w,c
 21786  001036  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21787  001038  50F4               	movf	prodh,w,c
 21788  00103A  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21789  00103C  0E00               	movlw	0
 21790  00103E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21791  001040  50F3               	movf	prodl,w,c
 21792  001042  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21793  001044  50F4               	movf	prodh,w,c
 21794  001046  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21795  001048  0E00               	movlw	0
 21796  00104A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21797  00104C  50F3               	movf	prodl,w,c
 21798  00104E  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21799  001050  50F4               	movf	prodh,w,c
 21800  001052  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21801  001054  0E7D               	movlw	125
 21802  001056  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21803  001058  50F3               	movf	prodl,w,c
 21804  00105A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21805  00105C  0E00               	movlw	0
 21806  00105E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21807  001060  50F3               	movf	prodl,w,c
 21808  001062  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21809  001064  0E00               	movlw	0
 21810  001066  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21811  001068  50F3               	movf	prodl,w,c
 21812  00106A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21813  00106C  0E00               	movlw	0
 21814  00106E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21815  001070  50F3               	movf	prodl,w,c
 21816  001072  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21817  001074  D049               	goto	L12
 21818  001076                     l14670:
 21819                           
 21820                           ; BSR set to: 0
 21821  001076  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21822  00107A  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21823  00107E  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21824  001082  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21825  001086  0E7D               	movlw	125
 21826  001088  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21827  00108A  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21828  00108E  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21829  001092  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21830  001094  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21831  001096  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21832  001098  50F3               	movf	prodl,w,c
 21833  00109A  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21834  00109C  50F4               	movf	prodh,w,c
 21835  00109E  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21836  0010A0  0E00               	movlw	0
 21837  0010A2  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21838  0010A4  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21839  0010A6  50F3               	movf	prodl,w,c
 21840  0010A8  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21841  0010AA  50F4               	movf	prodh,w,c
 21842  0010AC  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21843  0010AE  0E00               	movlw	0
 21844  0010B0  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21845  0010B2  0E7D               	movlw	125
 21846  0010B4  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21847  0010B6  50F3               	movf	prodl,w,c
 21848  0010B8  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21849  0010BA  50F4               	movf	prodh,w,c
 21850  0010BC  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21851  0010BE  0E00               	movlw	0
 21852  0010C0  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21853  0010C2  50F3               	movf	prodl,w,c
 21854  0010C4  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21855  0010C6  50F4               	movf	prodh,w,c
 21856  0010C8  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21857  0010CA  0E00               	movlw	0
 21858  0010CC  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21859  0010CE  50F3               	movf	prodl,w,c
 21860  0010D0  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21861  0010D2  50F4               	movf	prodh,w,c
 21862  0010D4  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21863  0010D6  0E7D               	movlw	125
 21864  0010D8  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21865  0010DA  50F3               	movf	prodl,w,c
 21866  0010DC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21867  0010DE  0E00               	movlw	0
 21868  0010E0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21869  0010E2  50F3               	movf	prodl,w,c
 21870  0010E4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21871  0010E6  0E00               	movlw	0
 21872  0010E8  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21873  0010EA  50F3               	movf	prodl,w,c
 21874  0010EC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21875  0010EE  0E00               	movlw	0
 21876  0010F0  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21877  0010F2  50F3               	movf	prodl,w,c
 21878  0010F4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21879  0010F6  0E0D               	movlw	13
 21880  0010F8  D005               	goto	u16990
 21881  0010FA                     u16995:
 21882  0010FA  90D8               	bcf	status,0,c
 21883  0010FC  33A9               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21884  0010FE  33A8               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21885  001100  33A7               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21886  001102  33A6               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21887  001104                     u16990:
 21888  001104  2EE8               	decfsz	wreg,f,c
 21889  001106  D7F9               	goto	u16995
 21890  001108                     L12:
 21891  001108  C0A6  F0BC         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$2092
 21892  00110C  C0A7  F0BD         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$2092+1
 21893  001110  C0A8  F0BE         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$2092+2
 21894  001114  C0A9  F0BF         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$2092+3
 21895                           
 21896                           ; BSR set to: 0
 21897  001118  51BC               	movf	_LORAWAN_TxDone$2092& (0+255),w,b
 21898  00111A  0102               	movlb	2	; () banked
 21899  00111C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 21900  00111E  0100               	movlb	0	; () banked
 21901  001120  6FC5               	movwf	LORAWAN_TxDone@delta& (0+255),b
 21902  001122  51BD               	movf	(_LORAWAN_TxDone$2092+1)& (0+255),w,b
 21903  001124  0102               	movlb	2	; () banked
 21904  001126  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 21905  001128  0100               	movlb	0	; () banked
 21906  00112A  6FC6               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21907  00112C  51BE               	movf	(_LORAWAN_TxDone$2092+2)& (0+255),w,b
 21908  00112E  0102               	movlb	2	; () banked
 21909  001130  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 21910  001132  0100               	movlb	0	; () banked
 21911  001134  6FC7               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21912  001136  51BF               	movf	(_LORAWAN_TxDone$2092+3)& (0+255),w,b
 21913  001138  0102               	movlb	2	; () banked
 21914  00113A  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 21915  00113C  0100               	movlb	0	; () banked
 21916  00113E  6FC8               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21917  001140                     l14674:
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;lorawan_eu.c: 409: }
 21921                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 21922  001140  6BD1               	clrf	LORAWAN_TxDone@i& (0+255),b
 21923  001142                     l14680:
 21924                           
 21925                           ; BSR set to: 0
 21926                           ;lorawan_eu.c: 412: {
 21927                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 21928  001142  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21929  001144  0D0E               	mullw	14
 21930  001146  0E04               	movlw	low (_Channels+4)
 21931  001148  24F3               	addwf	prodl,w,c
 21932  00114A  6ED9               	movwf	fsr2l,c
 21933  00114C  0E04               	movlw	high (_Channels+4)
 21934  00114E  20F4               	addwfc	prodh,w,c
 21935  001150  6EDA               	movwf	fsr2h,c
 21936  001152  04DE               	decf	postinc2,w,c
 21937  001154  E001 D08E          	bnz	l14698
 21938                           
 21939                           ; BSR set to: 0
 21940  001158  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21941  00115A  0D0E               	mullw	14
 21942  00115C  0E08               	movlw	low (_Channels+8)
 21943  00115E  24F3               	addwf	prodl,w,c
 21944  001160  6ED9               	movwf	fsr2l,c
 21945  001162  0E04               	movlw	high (_Channels+8)
 21946  001164  20F4               	addwfc	prodh,w,c
 21947  001166  6EDA               	movwf	fsr2h,c
 21948  001168  50DE               	movf	postinc2,w,c
 21949  00116A  10DE               	iorwf	postinc2,w,c
 21950  00116C  10DE               	iorwf	postinc2,w,c
 21951  00116E  10DE               	iorwf	postinc2,w,c
 21952  001170  E101 D080          	bz	l14698
 21953                           
 21954                           ; BSR set to: 0
 21955                           ;lorawan_eu.c: 414: {
 21956                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 21957  001174  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21958  001176  0102               	movlb	2	; () banked
 21959  001178  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 21960  00117A  E04B               	bz	l1031
 21961                           
 21962                           ; BSR set to: 2
 21963                           ;lorawan_eu.c: 416: {
 21964                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 21965  00117C  0100               	movlb	0	; () banked
 21966  00117E  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21967  001180  0D0E               	mullw	14
 21968  001182  0E08               	movlw	low (_Channels+8)
 21969  001184  24F3               	addwf	prodl,w,c
 21970  001186  6ED9               	movwf	fsr2l,c
 21971  001188  0E04               	movlw	high (_Channels+8)
 21972  00118A  20F4               	addwfc	prodh,w,c
 21973  00118C  6EDA               	movwf	fsr2h,c
 21974  00118E  50DE               	movf	postinc2,w,c
 21975  001190  5DC5               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 21976  001192  50DE               	movf	postinc2,w,c
 21977  001194  59C6               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 21978  001196  50DE               	movf	postinc2,w,c
 21979  001198  59C7               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 21980  00119A  50DE               	movf	postinc2,w,c
 21981  00119C  59C8               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 21982  00119E  E22D               	bc	l14690
 21983                           
 21984                           ; BSR set to: 0
 21985                           ;lorawan_eu.c: 418: {
 21986                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 21987  0011A0  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21988  0011A2  0D0E               	mullw	14
 21989  0011A4  0E08               	movlw	low (_Channels+8)
 21990  0011A6  24F3               	addwf	prodl,w,c
 21991  0011A8  6ED9               	movwf	fsr2l,c
 21992  0011AA  0E04               	movlw	high (_Channels+8)
 21993  0011AC  20F4               	addwfc	prodh,w,c
 21994  0011AE  6EDA               	movwf	fsr2h,c
 21995  0011B0  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone
 21996  0011B4  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+1
 21997  0011B8  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 21998  0011BC  CFDE F0A5          	movff	postinc2,??_LORAWAN_TxDone+3
 21999  0011C0  51C5               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22000  0011C2  5DA2               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22001  0011C4  6FA6               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22002  0011C6  51C6               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22003  0011C8  59A3               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22004  0011CA  6FA7               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22005  0011CC  51C7               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22006  0011CE  59A4               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22007  0011D0  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22008  0011D2  51C8               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22009  0011D4  59A5               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22010  0011D6  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22011  0011D8  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22012  0011DA  0D0E               	mullw	14
 22013  0011DC  0E08               	movlw	low (_Channels+8)
 22014  0011DE  24F3               	addwf	prodl,w,c
 22015  0011E0  6ED9               	movwf	fsr2l,c
 22016  0011E2  0E04               	movlw	high (_Channels+8)
 22017  0011E4  20F4               	addwfc	prodh,w,c
 22018  0011E6  6EDA               	movwf	fsr2h,c
 22019  0011E8  C0A6  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22020  0011EC  C0A7  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22021  0011F0  C0A8  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22022  0011F4  C0A9  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22023                           
 22024                           ;lorawan_eu.c: 420: }
 22025  0011F8  D00C               	goto	l1031
 22026  0011FA                     l14690:
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;lorawan_eu.c: 421: else
 22030                           ;lorawan_eu.c: 422: {
 22031                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 22032  0011FA  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22033  0011FC  0D0E               	mullw	14
 22034  0011FE  0E08               	movlw	low (_Channels+8)
 22035  001200  24F3               	addwf	prodl,w,c
 22036  001202  6ED9               	movwf	fsr2l,c
 22037  001204  0E04               	movlw	high (_Channels+8)
 22038  001206  20F4               	addwfc	prodh,w,c
 22039  001208  6EDA               	movwf	fsr2h,c
 22040  00120A  6ADE               	clrf	postinc2,c
 22041  00120C  6ADE               	clrf	postinc2,c
 22042  00120E  6ADE               	clrf	postinc2,c
 22043  001210  6ADD               	clrf	postdec2,c
 22044  001212                     l1031:
 22045                           
 22046                           ;lorawan_eu.c: 424: }
 22047                           ;lorawan_eu.c: 425: }
 22048                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 22049  001212  0100               	movlb	0	; () banked
 22050  001214  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22051  001216  0D0E               	mullw	14
 22052  001218  0E08               	movlw	low (_Channels+8)
 22053  00121A  24F3               	addwf	prodl,w,c
 22054  00121C  6ED9               	movwf	fsr2l,c
 22055  00121E  0E04               	movlw	high (_Channels+8)
 22056  001220  20F4               	addwfc	prodh,w,c
 22057  001222  6EDA               	movwf	fsr2h,c
 22058  001224  50DE               	movf	postinc2,w,c
 22059  001226  5DCD               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22060  001228  50DE               	movf	postinc2,w,c
 22061  00122A  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22062  00122C  50DE               	movf	postinc2,w,c
 22063  00122E  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22064  001230  50DE               	movf	postinc2,w,c
 22065  001232  59D0               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22066  001234  E31F               	bnc	l14698
 22067                           
 22068                           ; BSR set to: 0
 22069  001236  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22070  001238  0D0E               	mullw	14
 22071  00123A  0E08               	movlw	low (_Channels+8)
 22072  00123C  24F3               	addwf	prodl,w,c
 22073  00123E  6ED9               	movwf	fsr2l,c
 22074  001240  0E04               	movlw	high (_Channels+8)
 22075  001242  20F4               	addwfc	prodh,w,c
 22076  001244  6EDA               	movwf	fsr2h,c
 22077  001246  50DE               	movf	postinc2,w,c
 22078  001248  10DE               	iorwf	postinc2,w,c
 22079  00124A  10DE               	iorwf	postinc2,w,c
 22080  00124C  10DE               	iorwf	postinc2,w,c
 22081  00124E  E012               	bz	l14698
 22082                           
 22083                           ; BSR set to: 0
 22084                           ;lorawan_eu.c: 427: {
 22085                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 22086  001250  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22087  001252  0D0E               	mullw	14
 22088  001254  0E08               	movlw	low (_Channels+8)
 22089  001256  24F3               	addwf	prodl,w,c
 22090  001258  6ED9               	movwf	fsr2l,c
 22091  00125A  0E04               	movlw	high (_Channels+8)
 22092  00125C  20F4               	addwfc	prodh,w,c
 22093  00125E  6EDA               	movwf	fsr2h,c
 22094  001260  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim
 22095  001264  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+1
 22096  001268  CFDE F0CF          	movff	postinc2,LORAWAN_TxDone@minim+2
 22097  00126C  CFDE F0D0          	movff	postinc2,LORAWAN_TxDone@minim+3
 22098                           
 22099                           ; BSR set to: 0
 22100                           ;lorawan_eu.c: 429: found = 1;
 22101  001270  0E01               	movlw	1
 22102  001272  6FC4               	movwf	LORAWAN_TxDone@found& (0+255),b
 22103  001274                     l14698:
 22104                           
 22105                           ; BSR set to: 0
 22106  001274  2BD1               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22107                           
 22108                           ; BSR set to: 0
 22109  001276  0E0F               	movlw	15
 22110  001278  65D1               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22111  00127A  D763               	goto	l14680
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;lorawan_eu.c: 430: }
 22115                           ;lorawan_eu.c: 431: }
 22116                           ;lorawan_eu.c: 432: }
 22117                           ;lorawan_eu.c: 433: if (found == 1)
 22118  00127C  05C4               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22119  00127E  E15F               	bnz	l14716
 22120                           
 22121                           ; BSR set to: 0
 22122                           ;lorawan_eu.c: 434: {
 22123                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 22124  001280  C0CD  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 22125  001284  C0CE  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22126  001288  C0CF  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22127  00128C  C0D0  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22128                           
 22129                           ; BSR set to: 0
 22130                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22131  001290  51D0               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22132  001292  E106               	bnz	u17080
 22133  001294  29CD               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22134  001296  0EFF               	movlw	255
 22135  001298  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22136  00129A  0E0F               	movlw	15
 22137  00129C  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22138  00129E  E318               	bnc	l14710
 22139  0012A0                     u17080:
 22140                           
 22141                           ; BSR set to: 0
 22142  0012A0  C0CD  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22143  0012A4  C0CE  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22144  0012A8  C0CF  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22145  0012AC  C0D0  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22146  0012B0  0E7D               	movlw	125
 22147  0012B2  6F68               	movwf	___lldiv@divisor& (0+255),b
 22148  0012B4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22149  0012B6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22150  0012B8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22151  0012BA  EC1A  F030         	call	___lldiv	;wreg free
 22152  0012BE  0E0C               	movlw	12
 22153  0012C0                     u17095:
 22154  0012C0  90D8               	bcf	status,0,c
 22155  0012C2  3764               	rlcf	?___lldiv& (0+255),f,b
 22156  0012C4  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 22157  0012C6  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 22158  0012C8  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 22159  0012CA  2EE8               	decfsz	wreg,f,c
 22160  0012CC  D7F9               	goto	u17095
 22161  0012CE  D01F               	goto	L13
 22162  0012D0                     l14710:
 22163                           
 22164                           ; BSR set to: 0
 22165  0012D0  C0CD  F0A2         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22166  0012D4  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22167  0012D8  C0CF  F0A4         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22168  0012DC  C0D0  F0A5         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22169  0012E0  0E0C               	movlw	12
 22170  0012E2                     u17105:
 22171  0012E2  90D8               	bcf	status,0,c
 22172  0012E4  37A2               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22173  0012E6  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22174  0012E8  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22175  0012EA  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22176  0012EC  2EE8               	decfsz	wreg,f,c
 22177  0012EE  D7F9               	goto	u17105
 22178  0012F0  C0A2  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22179  0012F4  C0A3  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22180  0012F8  C0A4  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22181  0012FC  C0A5  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22182  001300  0E7D               	movlw	125
 22183  001302  6F68               	movwf	___lldiv@divisor& (0+255),b
 22184  001304  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22185  001306  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22186  001308  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22187  00130A  EC1A  F030         	call	___lldiv	;wreg free
 22188  00130E                     L13:
 22189  00130E  C064  F0C0         	movff	?___lldiv,_LORAWAN_TxDone$2093
 22190  001312  C065  F0C1         	movff	?___lldiv+1,_LORAWAN_TxDone$2093+1
 22191  001316  C066  F0C2         	movff	?___lldiv+2,_LORAWAN_TxDone$2093+2
 22192  00131A  C067  F0C3         	movff	?___lldiv+3,_LORAWAN_TxDone$2093+3
 22193                           
 22194                           ; BSR set to: 0
 22195  00131E  C0C0  F071         	movff	_LORAWAN_TxDone$2093,SwTimerSetTimeout@timeout
 22196  001322  C0C1  F072         	movff	_LORAWAN_TxDone$2093+1,SwTimerSetTimeout@timeout+1
 22197  001326  C0C2  F073         	movff	_LORAWAN_TxDone$2093+2,SwTimerSetTimeout@timeout+2
 22198  00132A  C0C3  F074         	movff	_LORAWAN_TxDone$2093+3,SwTimerSetTimeout@timeout+3
 22199  00132E  0102               	movlb	2	; () banked
 22200  001330  51E9               	movf	(_loRa+233)& (0+255),w,b
 22201  001332  EC75  F036         	call	_SwTimerSetTimeout
 22202                           
 22203                           ; BSR set to: 0
 22204                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 22205  001336  0102               	movlb	2	; () banked
 22206  001338  51E9               	movf	(_loRa+233)& (0+255),w,b
 22207  00133A  EC58  F02E         	call	_SwTimerStart
 22208  00133E                     l14716:
 22209                           
 22210                           ; BSR set to: 0
 22211                           ;lorawan_eu.c: 438: }
 22212                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 22213  00133E  0E02               	movlw	2
 22214  001340  0102               	movlb	2	; () banked
 22215  001342  1912               	xorwf	(_loRa+18)& (0+255),w,b
 22216  001344  A4D8               	btfss	status,2,c
 22217  001346  0012               	return	
 22218                           
 22219                           ; BSR set to: 2
 22220                           ;lorawan_eu.c: 440: {
 22221                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22222  001348  5102               	movf	(_loRa+2)& (0+255),w,b
 22223  00134A  0BF0               	andlw	-16
 22224  00134C  0908               	iorlw	8
 22225  00134E  6F02               	movwf	(_loRa+2)& (0+255),b
 22226                           
 22227                           ; BSR set to: 2
 22228                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 22229  001350  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 22230  001354                     l14722:
 22231                           
 22232                           ; BSR set to: 2
 22233                           ;lorawan_eu.c: 445: else
 22234                           ;lorawan_eu.c: 446: {
 22235                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 22236  001354  EC81  F03C         	call	_RADIO_GetStatus	;wreg free
 22237  001358  0100               	movlb	0	; () banked
 22238  00135A  6FA2               	movwf	??_LORAWAN_TxDone& (0+255),b
 22239  00135C  A9A2               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22240  00135E  D00E               	goto	l14726
 22241                           
 22242                           ; BSR set to: 0
 22243                           ;lorawan_eu.c: 448: {
 22244                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22245  001360  6B67               	clrf	RxDataDone@pData& (0+255),b
 22246  001362  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22247  001364  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22248  001366  0E02               	movlw	2
 22249  001368  6F6A               	movwf	RxDataDone@status& (0+255),b
 22250  00136A  0005               	push	
 22251  00136C  6EFA               	movwf	pclath,c
 22252  00136E  51E8               	movf	_rxPayload& (0+255),w,b
 22253  001370  6EFD               	movwf	tosl,c
 22254  001372  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22255  001374  6EFE               	movwf	tosh,c
 22256  001376  6AFF               	clrf	tosu,c
 22257  001378  50FA               	movf	pclath,w,c
 22258  00137A  0012               	return		;indir
 22259  00137C                     l14726:
 22260                           
 22261                           ; BSR set to: 0
 22262                           ;lorawan_eu.c: 452: else
 22263                           ;lorawan_eu.c: 453: {
 22264                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 22265  00137C  51E8               	movf	_rxPayload& (0+255),w,b
 22266  00137E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22267  001380  B4D8               	btfsc	status,2,c
 22268  001382  0012               	return	
 22269                           
 22270                           ; BSR set to: 0
 22271                           ;lorawan_eu.c: 456: {
 22272                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22273  001384  6B67               	clrf	RxDataDone@pData& (0+255),b
 22274  001386  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22275  001388  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22276  00138A  0E03               	movlw	3
 22277  00138C  6F6A               	movwf	RxDataDone@status& (0+255),b
 22278  00138E  0005               	push	
 22279  001390  6EFA               	movwf	pclath,c
 22280  001392  51E8               	movf	_rxPayload& (0+255),w,b
 22281  001394  6EFD               	movwf	tosl,c
 22282  001396  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22283  001398  6EFE               	movwf	tosh,c
 22284  00139A  6AFF               	clrf	tosu,c
 22285  00139C  50FA               	movf	pclath,w,c
 22286  00139E  0012               	return		;indir
 22287  0013A0                     __end_of_LORAWAN_TxDone:
 22288                           	opt stack 0
 22289                           tosu	equ	0xFFF
 22290                           tosh	equ	0xFFE
 22291                           tosl	equ	0xFFD
 22292                           pclath	equ	0xFFA
 22293                           tblptru	equ	0xFF8
 22294                           tblptrh	equ	0xFF7
 22295                           tblptrl	equ	0xFF6
 22296                           tablat	equ	0xFF5
 22297                           prodh	equ	0xFF4
 22298                           prodl	equ	0xFF3
 22299                           intcon	equ	0xFF2
 22300                           intcon2	equ	0xFF1
 22301                           intcon3	equ	0xFF0
 22302                           indf0	equ	0xFEF
 22303                           postinc0	equ	0xFEE
 22304                           fsr0h	equ	0xFEA
 22305                           fsr0l	equ	0xFE9
 22306                           wreg	equ	0xFE8
 22307                           postinc1	equ	0xFE6
 22308                           postdec1	equ	0xFE5
 22309                           plusw1	equ	0xFE3
 22310                           fsr1h	equ	0xFE2
 22311                           fsr1l	equ	0xFE1
 22312                           indf2	equ	0xFDF
 22313                           postinc2	equ	0xFDE
 22314                           postdec2	equ	0xFDD
 22315                           plusw2	equ	0xFDB
 22316                           fsr2h	equ	0xFDA
 22317                           fsr2l	equ	0xFD9
 22318                           status	equ	0xFD8
 22319                           
 22320 ;; *************** function _SwTimerReadValue *****************
 22321 ;; Defined at:
 22322 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22323 ;; Parameters:    Size  Location     Type
 22324 ;;  timerId         1    wreg     unsigned char 
 22325 ;; Auto vars:     Size  Location     Type
 22326 ;;  timerId         1   53[BANK0 ] unsigned char 
 22327 ;;  ticksCount      4   49[BANK0 ] unsigned long 
 22328 ;; Return value:  Size  Location     Type
 22329 ;;                  4   45[BANK0 ] unsigned long 
 22330 ;; Registers used:
 22331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22332 ;; Tracked objects:
 22333 ;;		On entry : C/1
 22334 ;;		On exit  : F/0
 22335 ;;		Unchanged: 0/0
 22336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22337 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22338 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22340 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22341 ;;Total ram usage:        9 bytes
 22342 ;; Hardware stack levels used:    1
 22343 ;; Hardware stack levels required when called:   10
 22344 ;; This function calls:
 22345 ;;		_SwTimersInterrupt
 22346 ;; This function is called by:
 22347 ;;		_RADIO_TxDone
 22348 ;;		_RADIO_FSKPacketSent
 22349 ;;		_LORAWAN_TxDone
 22350 ;; This function uses a non-reentrant model
 22351 ;;
 22352                           
 22353                           	psect	text111
 22354  006D2C                     __ptext111:
 22355                           	opt stack 0
 22356  006D2C                     _SwTimerReadValue:
 22357                           	opt stack 16
 22358                           
 22359                           ;incstack = 0
 22360                           ;SwTimerReadValue@timerId stored from wreg
 22361  006D2C  0100               	movlb	0	; () banked
 22362  006D2E  6F95               	movwf	SwTimerReadValue@timerId& (0+255),b
 22363                           
 22364                           ;sw_timer.c: 195: uint32_t ticksCount;
 22365                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22366  006D30  9EF2               	bcf	intcon,7,c	;volatile
 22367                           
 22368                           ;sw_timer.c: 200: SwTimersInterrupt();
 22369  006D32  ECB6  F025         	call	_SwTimersInterrupt	;wreg free
 22370                           
 22371                           ; BSR set to: 0
 22372                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22373  006D36  5195               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22374  006D38  0D08               	mullw	8
 22375  006D3A  0E00               	movlw	low _swTimers
 22376  006D3C  24F3               	addwf	prodl,w,c
 22377  006D3E  6ED9               	movwf	fsr2l,c
 22378  006D40  0E03               	movlw	high _swTimers
 22379  006D42  20F4               	addwfc	prodh,w,c
 22380  006D44  6EDA               	movwf	fsr2h,c
 22381  006D46  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount
 22382  006D4A  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22383  006D4E  CFDE F093          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22384  006D52  CFDE F094          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22388  006D56  8EF2               	bsf	intcon,7,c	;volatile
 22389                           
 22390                           ; BSR set to: 0
 22391                           ;sw_timer.c: 204: return ticksCount;
 22392  006D58  C091  F08D         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22393  006D5C  C092  F08E         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22394  006D60  C093  F08F         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22395  006D64  C094  F090         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22396                           
 22397                           ; BSR set to: 0
 22398  006D68  0012               	return		;funcret
 22399  006D6A                     __end_of_SwTimerReadValue:
 22400                           	opt stack 0
 22401                           tosu	equ	0xFFF
 22402                           tosh	equ	0xFFE
 22403                           tosl	equ	0xFFD
 22404                           pclath	equ	0xFFA
 22405                           tblptru	equ	0xFF8
 22406                           tblptrh	equ	0xFF7
 22407                           tblptrl	equ	0xFF6
 22408                           tablat	equ	0xFF5
 22409                           prodh	equ	0xFF4
 22410                           prodl	equ	0xFF3
 22411                           intcon	equ	0xFF2
 22412                           intcon2	equ	0xFF1
 22413                           intcon3	equ	0xFF0
 22414                           indf0	equ	0xFEF
 22415                           postinc0	equ	0xFEE
 22416                           fsr0h	equ	0xFEA
 22417                           fsr0l	equ	0xFE9
 22418                           wreg	equ	0xFE8
 22419                           postinc1	equ	0xFE6
 22420                           postdec1	equ	0xFE5
 22421                           plusw1	equ	0xFE3
 22422                           fsr1h	equ	0xFE2
 22423                           fsr1l	equ	0xFE1
 22424                           indf2	equ	0xFDF
 22425                           postinc2	equ	0xFDE
 22426                           postdec2	equ	0xFDD
 22427                           plusw2	equ	0xFDB
 22428                           fsr2h	equ	0xFDA
 22429                           fsr2l	equ	0xFD9
 22430                           status	equ	0xFD8
 22431                           
 22432 ;; *************** function _SwTimerIsRunning *****************
 22433 ;; Defined at:
 22434 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22435 ;; Parameters:    Size  Location     Type
 22436 ;;  timerId         1    wreg     unsigned char 
 22437 ;; Auto vars:     Size  Location     Type
 22438 ;;  timerId         1    4[BANK0 ] unsigned char 
 22439 ;;  isRunning       1    5[BANK0 ] unsigned char 
 22440 ;; Return value:  Size  Location     Type
 22441 ;;                  1    wreg      unsigned char 
 22442 ;; Registers used:
 22443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22444 ;; Tracked objects:
 22445 ;;		On entry : F/2
 22446 ;;		On exit  : F/0
 22447 ;;		Unchanged: 0/0
 22448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22452 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22453 ;;Total ram usage:        2 bytes
 22454 ;; Hardware stack levels used:    1
 22455 ;; Hardware stack levels required when called:    7
 22456 ;; This function calls:
 22457 ;;		Nothing
 22458 ;; This function is called by:
 22459 ;;		_LORAWAN_TxDone
 22460 ;; This function uses a non-reentrant model
 22461 ;;
 22462                           
 22463                           	psect	text112
 22464  007462                     __ptext112:
 22465                           	opt stack 0
 22466  007462                     _SwTimerIsRunning:
 22467                           	opt stack 19
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;incstack = 0
 22471                           ;SwTimerIsRunning@timerId stored from wreg
 22472  007462  0100               	movlb	0	; () banked
 22473  007464  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22474                           
 22475                           ;sw_timer.c: 209: uint8_t isRunning;
 22476                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22477  007466  9EF2               	bcf	intcon,7,c	;volatile
 22478                           
 22479                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22480  007468  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22481  00746A  0D08               	mullw	8
 22482  00746C  0E04               	movlw	low (_swTimers+4)
 22483  00746E  24F3               	addwf	prodl,w,c
 22484  007470  6ED9               	movwf	fsr2l,c
 22485  007472  0E03               	movlw	high (_swTimers+4)
 22486  007474  20F4               	addwfc	prodh,w,c
 22487  007476  6EDA               	movwf	fsr2h,c
 22488  007478  50DF               	movf	indf2,w,c
 22489  00747A  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22493  00747C  8EF2               	bsf	intcon,7,c	;volatile
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;sw_timer.c: 215: return isRunning;
 22497  00747E  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22498                           
 22499                           ; BSR set to: 0
 22500  007480  0012               	return		;funcret
 22501  007482                     __end_of_SwTimerIsRunning:
 22502                           	opt stack 0
 22503                           tosu	equ	0xFFF
 22504                           tosh	equ	0xFFE
 22505                           tosl	equ	0xFFD
 22506                           pclath	equ	0xFFA
 22507                           tblptru	equ	0xFF8
 22508                           tblptrh	equ	0xFF7
 22509                           tblptrl	equ	0xFF6
 22510                           tablat	equ	0xFF5
 22511                           prodh	equ	0xFF4
 22512                           prodl	equ	0xFF3
 22513                           intcon	equ	0xFF2
 22514                           intcon2	equ	0xFF1
 22515                           intcon3	equ	0xFF0
 22516                           indf0	equ	0xFEF
 22517                           postinc0	equ	0xFEE
 22518                           fsr0h	equ	0xFEA
 22519                           fsr0l	equ	0xFE9
 22520                           wreg	equ	0xFE8
 22521                           postinc1	equ	0xFE6
 22522                           postdec1	equ	0xFE5
 22523                           plusw1	equ	0xFE3
 22524                           fsr1h	equ	0xFE2
 22525                           fsr1l	equ	0xFE1
 22526                           indf2	equ	0xFDF
 22527                           postinc2	equ	0xFDE
 22528                           postdec2	equ	0xFDD
 22529                           plusw2	equ	0xFDB
 22530                           fsr2h	equ	0xFDA
 22531                           fsr2l	equ	0xFD9
 22532                           status	equ	0xFD8
 22533                           
 22534 ;; *************** function _RADIO_GetStatus *****************
 22535 ;; Defined at:
 22536 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22537 ;; Parameters:    Size  Location     Type
 22538 ;;		None
 22539 ;; Auto vars:     Size  Location     Type
 22540 ;;		None
 22541 ;; Return value:  Size  Location     Type
 22542 ;;                  1    wreg      unsigned char 
 22543 ;; Registers used:
 22544 ;;		wreg, status,2
 22545 ;; Tracked objects:
 22546 ;;		On entry : D/2
 22547 ;;		On exit  : F/1
 22548 ;;		Unchanged: 0/0
 22549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22554 ;;Total ram usage:        0 bytes
 22555 ;; Hardware stack levels used:    1
 22556 ;; Hardware stack levels required when called:    7
 22557 ;; This function calls:
 22558 ;;		Nothing
 22559 ;; This function is called by:
 22560 ;;		_LORAWAN_TxDone
 22561 ;;		_LORAWAN_ReceiveWindow2Callback
 22562 ;;		_LORAWAN_RxDone
 22563 ;; This function uses a non-reentrant model
 22564 ;;
 22565                           
 22566                           	psect	text113
 22567  007902                     __ptext113:
 22568                           	opt stack 0
 22569  007902                     _RADIO_GetStatus:
 22570                           	opt stack 19
 22571                           
 22572                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22573                           
 22574                           ; BSR set to: 0
 22575                           ;incstack = 0
 22576  007902  0101               	movlb	1	; () banked
 22577  007904  518D               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22578                           
 22579                           ; BSR set to: 1
 22580  007906  0012               	return		;funcret
 22581  007908                     __end_of_RADIO_GetStatus:
 22582                           	opt stack 0
 22583                           tosu	equ	0xFFF
 22584                           tosh	equ	0xFFE
 22585                           tosl	equ	0xFFD
 22586                           pclath	equ	0xFFA
 22587                           tblptru	equ	0xFF8
 22588                           tblptrh	equ	0xFF7
 22589                           tblptrl	equ	0xFF6
 22590                           tablat	equ	0xFF5
 22591                           prodh	equ	0xFF4
 22592                           prodl	equ	0xFF3
 22593                           intcon	equ	0xFF2
 22594                           intcon2	equ	0xFF1
 22595                           intcon3	equ	0xFF0
 22596                           indf0	equ	0xFEF
 22597                           postinc0	equ	0xFEE
 22598                           fsr0h	equ	0xFEA
 22599                           fsr0l	equ	0xFE9
 22600                           wreg	equ	0xFE8
 22601                           postinc1	equ	0xFE6
 22602                           postdec1	equ	0xFE5
 22603                           plusw1	equ	0xFE3
 22604                           fsr1h	equ	0xFE2
 22605                           fsr1l	equ	0xFE1
 22606                           indf2	equ	0xFDF
 22607                           postinc2	equ	0xFDE
 22608                           postdec2	equ	0xFDD
 22609                           plusw2	equ	0xFDB
 22610                           fsr2h	equ	0xFDA
 22611                           fsr2l	equ	0xFD9
 22612                           status	equ	0xFD8
 22613                           
 22614 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22615 ;; Defined at:
 22616 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;		None
 22619 ;; Auto vars:     Size  Location     Type
 22620 ;;		None
 22621 ;; Return value:  Size  Location     Type
 22622 ;;                  1    wreg      void 
 22623 ;; Registers used:
 22624 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22625 ;; Tracked objects:
 22626 ;;		On entry : F/2
 22627 ;;		On exit  : F/0
 22628 ;;		Unchanged: 0/0
 22629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22634 ;;Total ram usage:        0 bytes
 22635 ;; Hardware stack levels used:    1
 22636 ;; Hardware stack levels required when called:   13
 22637 ;; This function calls:
 22638 ;;		_ConfigureRadioRx
 22639 ;;		_RADIO_ReceiveStart
 22640 ;;		_RADIO_ReceiveStop
 22641 ;;		_RADIO_ReleaseData
 22642 ;;		_ResetParametersForConfirmedTransmission
 22643 ;;		_ResetParametersForUnconfirmedTransmission
 22644 ;;		_RxDataDone
 22645 ;; This function is called by:
 22646 ;;		_LORAWAN_TxDone
 22647 ;;		_LORAWAN_ReceiveWindow2Callback
 22648 ;;		_LORAWAN_RxDone
 22649 ;;		_SetReceptionNotOkState
 22650 ;; This function uses a non-reentrant model
 22651 ;;
 22652                           
 22653                           	psect	text114
 22654  006532                     __ptext114:
 22655                           	opt stack 0
 22656  006532                     _LORAWAN_EnterContinuousReceive:
 22657                           	opt stack 13
 22658                           
 22659                           ; BSR set to: 2
 22660                           ;lorawan.c: 917: RADIO_ReceiveStop();
 22661                           
 22662                           ; BSR set to: 1
 22663                           ;incstack = 0
 22664  006532  EC5F  F03A         	call	_RADIO_ReceiveStop	;wreg free
 22665                           
 22666                           ; BSR set to: 1
 22667                           ;lorawan.c: 918: RADIO_ReleaseData();
 22668  006536  EC84  F03C         	call	_RADIO_ReleaseData	;wreg free
 22669                           
 22670                           ; BSR set to: 1
 22671                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 22672  00653A  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 22673  00653E  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 22674  006542  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 22675  006546  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 22676  00654A  0102               	movlb	2	; () banked
 22677  00654C  511C               	movf	(_loRa+28)& (0+255),w,b
 22678  00654E  EC84  F039         	call	_ConfigureRadioRx
 22679                           
 22680                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 22681  006552  0100               	movlb	0	; () banked
 22682  006554  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 22683  006556  6B96               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 22684  006558  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
 22685  00655C  5196               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 22686  00655E  1197               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 22687  006560  B4D8               	btfsc	status,2,c
 22688  006562  0012               	return	
 22689                           
 22690                           ; BSR set to: 0
 22691                           ;lorawan.c: 923: {
 22692                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 22693  006564  ECCC  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22694                           
 22695                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 22696  006568  ECC5  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 22697                           
 22698                           ; BSR set to: 2
 22699                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 22700  00656C  0EF0               	movlw	-16
 22701  00656E  1702               	andwf	(_loRa+2)& (0+255),f,b
 22702                           
 22703                           ; BSR set to: 2
 22704                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 22705  006570  0100               	movlb	0	; () banked
 22706  006572  51E8               	movf	_rxPayload& (0+255),w,b
 22707  006574  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22708  006576  B4D8               	btfsc	status,2,c
 22709  006578  0012               	return	
 22710                           
 22711                           ; BSR set to: 0
 22712                           ;lorawan.c: 928: {
 22713                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 22714  00657A  6B67               	clrf	RxDataDone@pData& (0+255),b
 22715  00657C  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22716  00657E  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22717  006580  6B6A               	clrf	RxDataDone@status& (0+255),b
 22718  006582  0005               	push	
 22719  006584  6AFA               	clrf	pclath,c
 22720  006586  51E8               	movf	_rxPayload& (0+255),w,b
 22721  006588  6EFD               	movwf	tosl,c
 22722  00658A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22723  00658C  6EFE               	movwf	tosh,c
 22724  00658E  6AFF               	clrf	tosu,c
 22725  006590  50FA               	movf	pclath,w,c
 22726  006592  0012               	return		;indir
 22727  006594                     __end_of_LORAWAN_EnterContinuousReceive:
 22728                           	opt stack 0
 22729                           tosu	equ	0xFFF
 22730                           tosh	equ	0xFFE
 22731                           tosl	equ	0xFFD
 22732                           pclath	equ	0xFFA
 22733                           tblptru	equ	0xFF8
 22734                           tblptrh	equ	0xFF7
 22735                           tblptrl	equ	0xFF6
 22736                           tablat	equ	0xFF5
 22737                           prodh	equ	0xFF4
 22738                           prodl	equ	0xFF3
 22739                           intcon	equ	0xFF2
 22740                           intcon2	equ	0xFF1
 22741                           intcon3	equ	0xFF0
 22742                           indf0	equ	0xFEF
 22743                           postinc0	equ	0xFEE
 22744                           fsr0h	equ	0xFEA
 22745                           fsr0l	equ	0xFE9
 22746                           wreg	equ	0xFE8
 22747                           postinc1	equ	0xFE6
 22748                           postdec1	equ	0xFE5
 22749                           plusw1	equ	0xFE3
 22750                           fsr1h	equ	0xFE2
 22751                           fsr1l	equ	0xFE1
 22752                           indf2	equ	0xFDF
 22753                           postinc2	equ	0xFDE
 22754                           postdec2	equ	0xFDD
 22755                           plusw2	equ	0xFDB
 22756                           fsr2h	equ	0xFDA
 22757                           fsr2l	equ	0xFD9
 22758                           status	equ	0xFD8
 22759                           
 22760 ;; *************** function _RxDataDone *****************
 22761 ;; Defined at:
 22762 ;;		line 106 in file "main.c"
 22763 ;; Parameters:    Size  Location     Type
 22764 ;;  pData           2    7[BANK0 ] PTR unsigned char 
 22765 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22766 ;;  dataLength      1    9[BANK0 ] unsigned char 
 22767 ;;  status          1   10[BANK0 ] enum E8000
 22768 ;; Auto vars:     Size  Location     Type
 22769 ;;		None
 22770 ;; Return value:  Size  Location     Type
 22771 ;;                  1    wreg      void 
 22772 ;; Registers used:
 22773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22774 ;; Tracked objects:
 22775 ;;		On entry : F/0
 22776 ;;		On exit  : F/0
 22777 ;;		Unchanged: 0/0
 22778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22779 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22782 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22783 ;;Total ram usage:        5 bytes
 22784 ;; Hardware stack levels used:    1
 22785 ;; Hardware stack levels required when called:    9
 22786 ;; This function calls:
 22787 ;;		_LORAWAN_SetCurrentDataRate
 22788 ;; This function is called by:
 22789 ;;		_main
 22790 ;;		_LORAWAN_EnterContinuousReceive
 22791 ;;		_LORAWAN_ReceiveWindow2Callback
 22792 ;;		_SetReceptionNotOkState
 22793 ;;		_LORAWAN_RxDone
 22794 ;;		_LORAWAN_RxTimeout
 22795 ;;		_LORAWAN_TxDone
 22796 ;;		_AckRetransmissionCallback
 22797 ;;		_UnconfirmedTransmissionCallback
 22798 ;; This function uses a non-reentrant model
 22799 ;;
 22800                           
 22801                           	psect	text115
 22802  00611C                     __ptext115:
 22803                           	opt stack 0
 22804  00611C                     _RxDataDone:
 22805                           	opt stack 18
 22806                           
 22807                           ; BSR set to: 0
 22808                           ;main.c: 111: if(pData[0]==30){
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;incstack = 0
 22812  00611C  C067  FFD9         	movff	RxDataDone@pData,fsr2l
 22813  006120  C068  FFDA         	movff	RxDataDone@pData+1,fsr2h
 22814  006124  0E1E               	movlw	30
 22815  006126  18DE               	xorwf	postinc2,w,c
 22816  006128  A4D8               	btfss	status,2,c
 22817  00612A  0012               	return	
 22818                           
 22819                           ; BSR set to: 0
 22820                           ;main.c: 112: LORAWAN_SetCurrentDataRate(pData[1]);
 22821  00612C  EE20 F001          	lfsr	2,1
 22822  006130  5167               	movf	RxDataDone@pData& (0+255),w,b
 22823  006132  26D9               	addwf	fsr2l,f,c
 22824  006134  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22825  006136  22DA               	addwfc	fsr2h,f,c
 22826  006138  50DF               	movf	indf2,w,c
 22827  00613A  ECB5  F038         	call	_LORAWAN_SetCurrentDataRate
 22828                           
 22829                           ;main.c: 113: PORTCbits.RC5 = pData[2];
 22830  00613E  0100               	movlb	0	; () banked
 22831  006140  EE20 F002          	lfsr	2,2
 22832  006144  5167               	movf	RxDataDone@pData& (0+255),w,b
 22833  006146  26D9               	addwf	fsr2l,f,c
 22834  006148  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22835  00614A  22DA               	addwfc	fsr2h,f,c
 22836  00614C  50DF               	movf	indf2,w,c
 22837  00614E  6F6B               	movwf	??_RxDataDone& (0+255),b
 22838  006150  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 22839  006152  476B               	rlncf	??_RxDataDone& (0+255),f,b
 22840  006154  5082               	movf	3970,w,c	;volatile
 22841  006156  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22842  006158  0BDF               	andlw	-33
 22843  00615A  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22844  00615C  6E82               	movwf	3970,c	;volatile
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;main.c: 114: PORTDbits.RD5 = pData[3];
 22848  00615E  EE20 F003          	lfsr	2,3
 22849  006162  5167               	movf	RxDataDone@pData& (0+255),w,b
 22850  006164  26D9               	addwf	fsr2l,f,c
 22851  006166  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22852  006168  22DA               	addwfc	fsr2h,f,c
 22853  00616A  50DF               	movf	indf2,w,c
 22854  00616C  6F6B               	movwf	??_RxDataDone& (0+255),b
 22855  00616E  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 22856  006170  476B               	rlncf	??_RxDataDone& (0+255),f,b
 22857  006172  5083               	movf	3971,w,c	;volatile
 22858  006174  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22859  006176  0BDF               	andlw	-33
 22860  006178  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22861  00617A  6E83               	movwf	3971,c	;volatile
 22862                           
 22863                           ; BSR set to: 0
 22864                           ;main.c: 115: ONE_HOUR_TIMEOUT_COUNTS = pData[4];
 22865  00617C  EE20 F004          	lfsr	2,4
 22866  006180  5167               	movf	RxDataDone@pData& (0+255),w,b
 22867  006182  26D9               	addwf	fsr2l,f,c
 22868  006184  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22869  006186  22DA               	addwfc	fsr2h,f,c
 22870  006188  50DF               	movf	indf2,w,c
 22871  00618A  6E5A               	movwf	_ONE_HOUR_TIMEOUT_COUNTS,c
 22872                           
 22873                           ; BSR set to: 0
 22874  00618C  0012               	return		;funcret
 22875  00618E                     __end_of_RxDataDone:
 22876                           	opt stack 0
 22877                           tosu	equ	0xFFF
 22878                           tosh	equ	0xFFE
 22879                           tosl	equ	0xFFD
 22880                           pclath	equ	0xFFA
 22881                           tblptru	equ	0xFF8
 22882                           tblptrh	equ	0xFF7
 22883                           tblptrl	equ	0xFF6
 22884                           tablat	equ	0xFF5
 22885                           prodh	equ	0xFF4
 22886                           prodl	equ	0xFF3
 22887                           intcon	equ	0xFF2
 22888                           intcon2	equ	0xFF1
 22889                           intcon3	equ	0xFF0
 22890                           indf0	equ	0xFEF
 22891                           postinc0	equ	0xFEE
 22892                           fsr0h	equ	0xFEA
 22893                           fsr0l	equ	0xFE9
 22894                           wreg	equ	0xFE8
 22895                           postinc1	equ	0xFE6
 22896                           postdec1	equ	0xFE5
 22897                           plusw1	equ	0xFE3
 22898                           fsr1h	equ	0xFE2
 22899                           fsr1l	equ	0xFE1
 22900                           indf2	equ	0xFDF
 22901                           postinc2	equ	0xFDE
 22902                           postdec2	equ	0xFDD
 22903                           plusw2	equ	0xFDB
 22904                           fsr2h	equ	0xFDA
 22905                           fsr2l	equ	0xFD9
 22906                           status	equ	0xFD8
 22907                           
 22908 ;; *************** function _LORAWAN_SetCurrentDataRate *****************
 22909 ;; Defined at:
 22910 ;;		line 436 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22911 ;; Parameters:    Size  Location     Type
 22912 ;;  valueNew        1    wreg     unsigned char 
 22913 ;; Auto vars:     Size  Location     Type
 22914 ;;  valueNew        1    6[BANK0 ] unsigned char 
 22915 ;; Return value:  Size  Location     Type
 22916 ;;                  1    wreg      enum E7957
 22917 ;; Registers used:
 22918 ;;		wreg, status,2, status,0, cstack
 22919 ;; Tracked objects:
 22920 ;;		On entry : F/0
 22921 ;;		On exit  : 0/0
 22922 ;;		Unchanged: 0/0
 22923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22927 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22928 ;;Total ram usage:        1 bytes
 22929 ;; Hardware stack levels used:    1
 22930 ;; Hardware stack levels required when called:    8
 22931 ;; This function calls:
 22932 ;;		_UpdateCurrentDataRate
 22933 ;;		_ValidateDataRate
 22934 ;; This function is called by:
 22935 ;;		_RxDataDone
 22936 ;; This function uses a non-reentrant model
 22937 ;;
 22938                           
 22939                           	psect	text116
 22940  00716A                     __ptext116:
 22941                           	opt stack 0
 22942  00716A                     _LORAWAN_SetCurrentDataRate:
 22943                           	opt stack 18
 22944                           
 22945                           ; BSR set to: 0
 22946                           ;incstack = 0
 22947                           ;LORAWAN_SetCurrentDataRate@valueNew stored from wreg
 22948  00716A  6F66               	movwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),b
 22949                           
 22950                           ;lorawan.c: 440: if ( (valueNew < loRa.minDataRate) || (valueNew > loRa.maxDataRate) || 
      +                          (ValidateDataRate(valueNew) != OK) )
 22951  00716C  0102               	movlb	2	; () banked
 22952  00716E  51EB               	movf	(_loRa+235)& (0+255),w,b
 22953  007170  0100               	movlb	0	; () banked
 22954  007172  5D66               	subwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22955  007174  A0D8               	btfss	status,0,c
 22956  007176  0012               	return	
 22957                           
 22958                           ; BSR set to: 0
 22959  007178  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22960  00717A  0102               	movlb	2	; () banked
 22961  00717C  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 22962  00717E  A0D8               	btfss	status,0,c
 22963  007180  0012               	return	
 22964                           
 22965                           ; BSR set to: 2
 22966  007182  0100               	movlb	0	; () banked
 22967  007184  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22968  007186  EC8D  F03B         	call	_ValidateDataRate
 22969  00718A  0900               	iorlw	0
 22970  00718C  E001               	bz	l12728
 22971  00718E  0012               	return	
 22972  007190                     l12728:
 22973                           
 22974                           ; BSR set to: 0
 22975                           ;lorawan.c: 444: else
 22976                           ;lorawan.c: 445: {
 22977                           ;lorawan.c: 446: UpdateCurrentDataRate (valueNew);
 22978  007190  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22979  007192  EF63  F03C         	goto	_UpdateCurrentDataRate
 22980  007196                     __end_of_LORAWAN_SetCurrentDataRate:
 22981                           	opt stack 0
 22982                           tosu	equ	0xFFF
 22983                           tosh	equ	0xFFE
 22984                           tosl	equ	0xFFD
 22985                           pclath	equ	0xFFA
 22986                           tblptru	equ	0xFF8
 22987                           tblptrh	equ	0xFF7
 22988                           tblptrl	equ	0xFF6
 22989                           tablat	equ	0xFF5
 22990                           prodh	equ	0xFF4
 22991                           prodl	equ	0xFF3
 22992                           intcon	equ	0xFF2
 22993                           intcon2	equ	0xFF1
 22994                           intcon3	equ	0xFF0
 22995                           indf0	equ	0xFEF
 22996                           postinc0	equ	0xFEE
 22997                           fsr0h	equ	0xFEA
 22998                           fsr0l	equ	0xFE9
 22999                           wreg	equ	0xFE8
 23000                           postinc1	equ	0xFE6
 23001                           postdec1	equ	0xFE5
 23002                           plusw1	equ	0xFE3
 23003                           fsr1h	equ	0xFE2
 23004                           fsr1l	equ	0xFE1
 23005                           indf2	equ	0xFDF
 23006                           postinc2	equ	0xFDE
 23007                           postdec2	equ	0xFDD
 23008                           plusw2	equ	0xFDB
 23009                           fsr2h	equ	0xFDA
 23010                           fsr2l	equ	0xFD9
 23011                           status	equ	0xFD8
 23012                           
 23013 ;; *************** function _ValidateDataRate *****************
 23014 ;; Defined at:
 23015 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 23016 ;; Parameters:    Size  Location     Type
 23017 ;;  dataRate        1    wreg     unsigned char 
 23018 ;; Auto vars:     Size  Location     Type
 23019 ;;  dataRate        1    4[BANK0 ] unsigned char 
 23020 ;;  result          1    5[BANK0 ] enum E8016
 23021 ;; Return value:  Size  Location     Type
 23022 ;;                  1    wreg      enum E8016
 23023 ;; Registers used:
 23024 ;;		wreg, status,2, status,0
 23025 ;; Tracked objects:
 23026 ;;		On entry : F/0
 23027 ;;		On exit  : F/0
 23028 ;;		Unchanged: 0/0
 23029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23034 ;;Total ram usage:        2 bytes
 23035 ;; Hardware stack levels used:    1
 23036 ;; Hardware stack levels required when called:    7
 23037 ;; This function calls:
 23038 ;;		Nothing
 23039 ;; This function is called by:
 23040 ;;		_ExecuteLinkAdr
 23041 ;;		_ExecuteRxParamSetupReq
 23042 ;;		_ValidateDataRange
 23043 ;;		_LORAWAN_SetCurrentDataRate
 23044 ;; This function uses a non-reentrant model
 23045 ;;
 23046                           
 23047                           	psect	text117
 23048  00771A                     __ptext117:
 23049                           	opt stack 0
 23050  00771A                     _ValidateDataRate:
 23051                           	opt stack 18
 23052                           
 23053                           ;incstack = 0
 23054                           ;ValidateDataRate@dataRate stored from wreg
 23055  00771A  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 23056                           
 23057                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 23058  00771C  0100               	movlb	0	; () banked
 23059  00771E  6B65               	clrf	ValidateDataRate@result& (0+255),b
 23060                           
 23061                           ; BSR set to: 0
 23062                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 23063  007720  0E07               	movlw	7
 23064  007722  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 23065  007724  D002               	goto	l1079
 23066                           
 23067                           ; BSR set to: 0
 23068                           ;lorawan_eu.c: 575: {
 23069                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 23070  007726  0E03               	movlw	3
 23071  007728  6F65               	movwf	ValidateDataRate@result& (0+255),b
 23072  00772A                     l1079:
 23073                           
 23074                           ; BSR set to: 0
 23075                           ;lorawan_eu.c: 577: }
 23076                           ;lorawan_eu.c: 579: return result;
 23077  00772A  5165               	movf	ValidateDataRate@result& (0+255),w,b
 23078                           
 23079                           ; BSR set to: 0
 23080  00772C  0012               	return		;funcret
 23081  00772E                     __end_of_ValidateDataRate:
 23082                           	opt stack 0
 23083                           tosu	equ	0xFFF
 23084                           tosh	equ	0xFFE
 23085                           tosl	equ	0xFFD
 23086                           pclath	equ	0xFFA
 23087                           tblptru	equ	0xFF8
 23088                           tblptrh	equ	0xFF7
 23089                           tblptrl	equ	0xFF6
 23090                           tablat	equ	0xFF5
 23091                           prodh	equ	0xFF4
 23092                           prodl	equ	0xFF3
 23093                           intcon	equ	0xFF2
 23094                           intcon2	equ	0xFF1
 23095                           intcon3	equ	0xFF0
 23096                           indf0	equ	0xFEF
 23097                           postinc0	equ	0xFEE
 23098                           fsr0h	equ	0xFEA
 23099                           fsr0l	equ	0xFE9
 23100                           wreg	equ	0xFE8
 23101                           postinc1	equ	0xFE6
 23102                           postdec1	equ	0xFE5
 23103                           plusw1	equ	0xFE3
 23104                           fsr1h	equ	0xFE2
 23105                           fsr1l	equ	0xFE1
 23106                           indf2	equ	0xFDF
 23107                           postinc2	equ	0xFDE
 23108                           postdec2	equ	0xFDD
 23109                           plusw2	equ	0xFDB
 23110                           fsr2h	equ	0xFDA
 23111                           fsr2l	equ	0xFD9
 23112                           status	equ	0xFD8
 23113                           
 23114 ;; *************** function _UpdateCurrentDataRate *****************
 23115 ;; Defined at:
 23116 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23117 ;; Parameters:    Size  Location     Type
 23118 ;;  valueNew        1    wreg     unsigned char 
 23119 ;; Auto vars:     Size  Location     Type
 23120 ;;  valueNew        1    4[BANK0 ] unsigned char 
 23121 ;; Return value:  Size  Location     Type
 23122 ;;                  1    wreg      void 
 23123 ;; Registers used:
 23124 ;;		wreg
 23125 ;; Tracked objects:
 23126 ;;		On entry : F/0
 23127 ;;		On exit  : 0/0
 23128 ;;		Unchanged: 0/0
 23129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23133 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23134 ;;Total ram usage:        1 bytes
 23135 ;; Hardware stack levels used:    1
 23136 ;; Hardware stack levels required when called:    7
 23137 ;; This function calls:
 23138 ;;		Nothing
 23139 ;; This function is called by:
 23140 ;;		_ExecuteLinkAdr
 23141 ;;		_LORAWAN_SetCurrentDataRate
 23142 ;; This function uses a non-reentrant model
 23143 ;;
 23144                           
 23145                           	psect	text118
 23146  0078C6                     __ptext118:
 23147                           	opt stack 0
 23148  0078C6                     _UpdateCurrentDataRate:
 23149                           	opt stack 18
 23150                           
 23151                           ; BSR set to: 0
 23152                           ;incstack = 0
 23153                           ;UpdateCurrentDataRate@valueNew stored from wreg
 23154  0078C6  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 23155                           
 23156                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 23157  0078C8  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 23158  0078CC  0012               	return		;funcret
 23159  0078CE                     __end_of_UpdateCurrentDataRate:
 23160                           	opt stack 0
 23161                           tosu	equ	0xFFF
 23162                           tosh	equ	0xFFE
 23163                           tosl	equ	0xFFD
 23164                           pclath	equ	0xFFA
 23165                           tblptru	equ	0xFF8
 23166                           tblptrh	equ	0xFF7
 23167                           tblptrl	equ	0xFF6
 23168                           tablat	equ	0xFF5
 23169                           prodh	equ	0xFF4
 23170                           prodl	equ	0xFF3
 23171                           intcon	equ	0xFF2
 23172                           intcon2	equ	0xFF1
 23173                           intcon3	equ	0xFF0
 23174                           indf0	equ	0xFEF
 23175                           postinc0	equ	0xFEE
 23176                           fsr0h	equ	0xFEA
 23177                           fsr0l	equ	0xFE9
 23178                           wreg	equ	0xFE8
 23179                           postinc1	equ	0xFE6
 23180                           postdec1	equ	0xFE5
 23181                           plusw1	equ	0xFE3
 23182                           fsr1h	equ	0xFE2
 23183                           fsr1l	equ	0xFE1
 23184                           indf2	equ	0xFDF
 23185                           postinc2	equ	0xFDE
 23186                           postdec2	equ	0xFDD
 23187                           plusw2	equ	0xFDB
 23188                           fsr2h	equ	0xFDA
 23189                           fsr2l	equ	0xFD9
 23190                           status	equ	0xFD8
 23191                           
 23192 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23193 ;; Defined at:
 23194 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23195 ;; Parameters:    Size  Location     Type
 23196 ;;		None
 23197 ;; Auto vars:     Size  Location     Type
 23198 ;;		None
 23199 ;; Return value:  Size  Location     Type
 23200 ;;                  1    wreg      void 
 23201 ;; Registers used:
 23202 ;;		wreg, status,2
 23203 ;; Tracked objects:
 23204 ;;		On entry : D/0
 23205 ;;		On exit  : F/2
 23206 ;;		Unchanged: 0/0
 23207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23212 ;;Total ram usage:        0 bytes
 23213 ;; Hardware stack levels used:    1
 23214 ;; Hardware stack levels required when called:    7
 23215 ;; This function calls:
 23216 ;;		Nothing
 23217 ;; This function is called by:
 23218 ;;		_LORAWAN_RxTimeout
 23219 ;;		_LORAWAN_ReceiveWindow2Callback
 23220 ;;		_LORAWAN_EnterContinuousReceive
 23221 ;;		_UnconfirmedTransmissionCallback
 23222 ;; This function uses a non-reentrant model
 23223 ;;
 23224                           
 23225                           	psect	text119
 23226  00778A                     __ptext119:
 23227                           	opt stack 0
 23228  00778A                     _ResetParametersForUnconfirmedTransmission:
 23229                           	opt stack 20
 23230                           
 23231                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23232                           
 23233                           ;incstack = 0
 23234  00778A  0EF0               	movlw	-16
 23235  00778C  0102               	movlb	2	; () banked
 23236  00778E  1702               	andwf	(_loRa+2)& (0+255),f,b
 23237                           
 23238                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23239  007790  0E01               	movlw	1
 23240  007792  6FD8               	movwf	(_loRa+216)& (0+255),b
 23241                           
 23242                           ; BSR set to: 2
 23243                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23244  007794  6BA7               	clrf	(_loRa+167)& (0+255),b
 23245                           
 23246                           ; BSR set to: 2
 23247  007796  0012               	return		;funcret
 23248  007798                     __end_of_ResetParametersForUnconfirmedTransmission:
 23249                           	opt stack 0
 23250                           tosu	equ	0xFFF
 23251                           tosh	equ	0xFFE
 23252                           tosl	equ	0xFFD
 23253                           pclath	equ	0xFFA
 23254                           tblptru	equ	0xFF8
 23255                           tblptrh	equ	0xFF7
 23256                           tblptrl	equ	0xFF6
 23257                           tablat	equ	0xFF5
 23258                           prodh	equ	0xFF4
 23259                           prodl	equ	0xFF3
 23260                           intcon	equ	0xFF2
 23261                           intcon2	equ	0xFF1
 23262                           intcon3	equ	0xFF0
 23263                           indf0	equ	0xFEF
 23264                           postinc0	equ	0xFEE
 23265                           fsr0h	equ	0xFEA
 23266                           fsr0l	equ	0xFE9
 23267                           wreg	equ	0xFE8
 23268                           postinc1	equ	0xFE6
 23269                           postdec1	equ	0xFE5
 23270                           plusw1	equ	0xFE3
 23271                           fsr1h	equ	0xFE2
 23272                           fsr1l	equ	0xFE1
 23273                           indf2	equ	0xFDF
 23274                           postinc2	equ	0xFDE
 23275                           postdec2	equ	0xFDD
 23276                           plusw2	equ	0xFDB
 23277                           fsr2h	equ	0xFDA
 23278                           fsr2l	equ	0xFD9
 23279                           status	equ	0xFD8
 23280                           
 23281 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23282 ;; Defined at:
 23283 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23284 ;; Parameters:    Size  Location     Type
 23285 ;;		None
 23286 ;; Auto vars:     Size  Location     Type
 23287 ;;		None
 23288 ;; Return value:  Size  Location     Type
 23289 ;;                  1    wreg      void 
 23290 ;; Registers used:
 23291 ;;		wreg, status,2
 23292 ;; Tracked objects:
 23293 ;;		On entry : D/2
 23294 ;;		On exit  : F/2
 23295 ;;		Unchanged: 0/0
 23296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23301 ;;Total ram usage:        0 bytes
 23302 ;; Hardware stack levels used:    1
 23303 ;; Hardware stack levels required when called:    7
 23304 ;; This function calls:
 23305 ;;		Nothing
 23306 ;; This function is called by:
 23307 ;;		_LORAWAN_RxTimeout
 23308 ;;		_LORAWAN_ReceiveWindow2Callback
 23309 ;;		_LORAWAN_EnterContinuousReceive
 23310 ;;		_AckRetransmissionCallback
 23311 ;; This function uses a non-reentrant model
 23312 ;;
 23313                           
 23314                           	psect	text120
 23315  007798                     __ptext120:
 23316                           	opt stack 0
 23317  007798                     _ResetParametersForConfirmedTransmission:
 23318                           	opt stack 18
 23319                           
 23320                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23321                           
 23322                           ; BSR set to: 2
 23323                           ;incstack = 0
 23324  007798  0EF0               	movlw	-16
 23325  00779A  0102               	movlb	2	; () banked
 23326  00779C  1702               	andwf	(_loRa+2)& (0+255),f,b
 23327                           
 23328                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23329  00779E  0E01               	movlw	1
 23330  0077A0  6FD9               	movwf	(_loRa+217)& (0+255),b
 23331                           
 23332                           ; BSR set to: 2
 23333                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23334  0077A2  9100               	bcf	_loRa& (0+255),0,b
 23335                           
 23336                           ; BSR set to: 2
 23337  0077A4  0C01               	retlw	1	;funcret
 23338  0077A6                     __end_of_ResetParametersForConfirmedTransmission:
 23339                           	opt stack 0
 23340                           tosu	equ	0xFFF
 23341                           tosh	equ	0xFFE
 23342                           tosl	equ	0xFFD
 23343                           pclath	equ	0xFFA
 23344                           tblptru	equ	0xFF8
 23345                           tblptrh	equ	0xFF7
 23346                           tblptrl	equ	0xFF6
 23347                           tablat	equ	0xFF5
 23348                           prodh	equ	0xFF4
 23349                           prodl	equ	0xFF3
 23350                           intcon	equ	0xFF2
 23351                           intcon2	equ	0xFF1
 23352                           intcon3	equ	0xFF0
 23353                           indf0	equ	0xFEF
 23354                           postinc0	equ	0xFEE
 23355                           fsr0h	equ	0xFEA
 23356                           fsr0l	equ	0xFE9
 23357                           wreg	equ	0xFE8
 23358                           postinc1	equ	0xFE6
 23359                           postdec1	equ	0xFE5
 23360                           plusw1	equ	0xFE3
 23361                           fsr1h	equ	0xFE2
 23362                           fsr1l	equ	0xFE1
 23363                           indf2	equ	0xFDF
 23364                           postinc2	equ	0xFDE
 23365                           postdec2	equ	0xFDD
 23366                           plusw2	equ	0xFDB
 23367                           fsr2h	equ	0xFDA
 23368                           fsr2l	equ	0xFD9
 23369                           status	equ	0xFD8
 23370                           
 23371 ;; *************** function _RADIO_ReleaseData *****************
 23372 ;; Defined at:
 23373 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23374 ;; Parameters:    Size  Location     Type
 23375 ;;		None
 23376 ;; Auto vars:     Size  Location     Type
 23377 ;;		None
 23378 ;; Return value:  Size  Location     Type
 23379 ;;                  1    wreg      void 
 23380 ;; Registers used:
 23381 ;;		status,2, status,0
 23382 ;; Tracked objects:
 23383 ;;		On entry : C/2
 23384 ;;		On exit  : F/1
 23385 ;;		Unchanged: 0/0
 23386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23391 ;;Total ram usage:        0 bytes
 23392 ;; Hardware stack levels used:    1
 23393 ;; Hardware stack levels required when called:    7
 23394 ;; This function calls:
 23395 ;;		Nothing
 23396 ;; This function is called by:
 23397 ;;		_LORAWAN_ReceiveWindow1Callback
 23398 ;;		_LORAWAN_ReceiveWindow2Callback
 23399 ;;		_LORAWAN_EnterContinuousReceive
 23400 ;;		_LORAWAN_RxDone
 23401 ;; This function uses a non-reentrant model
 23402 ;;
 23403                           
 23404                           	psect	text121
 23405  007908                     __ptext121:
 23406                           	opt stack 0
 23407  007908                     _RADIO_ReleaseData:
 23408                           	opt stack 18
 23409                           
 23410                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23411                           
 23412                           ; BSR set to: 2
 23413                           ;incstack = 0
 23414  007908  0101               	movlb	1	; () banked
 23415  00790A  958D               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23416                           
 23417                           ; BSR set to: 1
 23418  00790C  0012               	return		;funcret
 23419  00790E                     __end_of_RADIO_ReleaseData:
 23420                           	opt stack 0
 23421                           tosu	equ	0xFFF
 23422                           tosh	equ	0xFFE
 23423                           tosl	equ	0xFFD
 23424                           pclath	equ	0xFFA
 23425                           tblptru	equ	0xFF8
 23426                           tblptrh	equ	0xFF7
 23427                           tblptrl	equ	0xFF6
 23428                           tablat	equ	0xFF5
 23429                           prodh	equ	0xFF4
 23430                           prodl	equ	0xFF3
 23431                           intcon	equ	0xFF2
 23432                           intcon2	equ	0xFF1
 23433                           intcon3	equ	0xFF0
 23434                           indf0	equ	0xFEF
 23435                           postinc0	equ	0xFEE
 23436                           fsr0h	equ	0xFEA
 23437                           fsr0l	equ	0xFE9
 23438                           wreg	equ	0xFE8
 23439                           postinc1	equ	0xFE6
 23440                           postdec1	equ	0xFE5
 23441                           plusw1	equ	0xFE3
 23442                           fsr1h	equ	0xFE2
 23443                           fsr1l	equ	0xFE1
 23444                           indf2	equ	0xFDF
 23445                           postinc2	equ	0xFDE
 23446                           postdec2	equ	0xFDD
 23447                           plusw2	equ	0xFDB
 23448                           fsr2h	equ	0xFDA
 23449                           fsr2l	equ	0xFD9
 23450                           status	equ	0xFD8
 23451                           
 23452 ;; *************** function _RADIO_ReceiveStop *****************
 23453 ;; Defined at:
 23454 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23455 ;; Parameters:    Size  Location     Type
 23456 ;;		None
 23457 ;; Auto vars:     Size  Location     Type
 23458 ;;		None
 23459 ;; Return value:  Size  Location     Type
 23460 ;;                  1    wreg      void 
 23461 ;; Registers used:
 23462 ;;		wreg, status,2, status,0, cstack
 23463 ;; Tracked objects:
 23464 ;;		On entry : F/2
 23465 ;;		On exit  : F/1
 23466 ;;		Unchanged: 0/0
 23467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23472 ;;Total ram usage:        0 bytes
 23473 ;; Hardware stack levels used:    1
 23474 ;; Hardware stack levels required when called:   11
 23475 ;; This function calls:
 23476 ;;		_RADIO_WriteMode
 23477 ;; This function is called by:
 23478 ;;		_LORAWAN_Send
 23479 ;;		_LORAWAN_ReceiveWindow1Callback
 23480 ;;		_LORAWAN_ReceiveWindow2Callback
 23481 ;;		_LORAWAN_EnterContinuousReceive
 23482 ;; This function uses a non-reentrant model
 23483 ;;
 23484                           
 23485                           	psect	text122
 23486  0074BE                     __ptext122:
 23487                           	opt stack 0
 23488  0074BE                     _RADIO_ReceiveStop:
 23489                           	opt stack 17
 23490                           
 23491                           ; BSR set to: 2
 23492                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23493                           
 23494                           ; BSR set to: 1
 23495                           ;incstack = 0
 23496  0074BE  0E02               	movlw	2
 23497  0074C0  0101               	movlb	1	; () banked
 23498  0074C2  198D               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23499  0074C4  A4D8               	btfss	status,2,c
 23500  0074C6  0012               	return	
 23501                           
 23502                           ; BSR set to: 1
 23503                           ;radio_driver_SX1276.c: 954: {
 23504                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 23505  0074C8  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23506  0074CC  0E00               	movlw	0
 23507  0074CE  0100               	movlb	0	; () banked
 23508  0074D0  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23509  0074D2  EC6E  F028         	call	_RADIO_WriteMode
 23510                           
 23511                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23512  0074D6  0101               	movlb	1	; () banked
 23513  0074D8  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23514                           
 23515                           ; BSR set to: 1
 23516  0074DA  0012               	return		;funcret
 23517  0074DC                     __end_of_RADIO_ReceiveStop:
 23518                           	opt stack 0
 23519                           tosu	equ	0xFFF
 23520                           tosh	equ	0xFFE
 23521                           tosl	equ	0xFFD
 23522                           pclath	equ	0xFFA
 23523                           tblptru	equ	0xFF8
 23524                           tblptrh	equ	0xFF7
 23525                           tblptrl	equ	0xFF6
 23526                           tablat	equ	0xFF5
 23527                           prodh	equ	0xFF4
 23528                           prodl	equ	0xFF3
 23529                           intcon	equ	0xFF2
 23530                           intcon2	equ	0xFF1
 23531                           intcon3	equ	0xFF0
 23532                           indf0	equ	0xFEF
 23533                           postinc0	equ	0xFEE
 23534                           fsr0h	equ	0xFEA
 23535                           fsr0l	equ	0xFE9
 23536                           wreg	equ	0xFE8
 23537                           postinc1	equ	0xFE6
 23538                           postdec1	equ	0xFE5
 23539                           plusw1	equ	0xFE3
 23540                           fsr1h	equ	0xFE2
 23541                           fsr1l	equ	0xFE1
 23542                           indf2	equ	0xFDF
 23543                           postinc2	equ	0xFDE
 23544                           postdec2	equ	0xFDD
 23545                           plusw2	equ	0xFDB
 23546                           fsr2h	equ	0xFDA
 23547                           fsr2l	equ	0xFD9
 23548                           status	equ	0xFD8
 23549                           
 23550 ;; *************** function _RADIO_ReceiveStart *****************
 23551 ;; Defined at:
 23552 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23553 ;; Parameters:    Size  Location     Type
 23554 ;;  rxWindowSize    2   54[BANK0 ] unsigned int 
 23555 ;; Auto vars:     Size  Location     Type
 23556 ;;		None
 23557 ;; Return value:  Size  Location     Type
 23558 ;;                  2   54[BANK0 ] enum E7805
 23559 ;; Registers used:
 23560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23561 ;; Tracked objects:
 23562 ;;		On entry : F/0
 23563 ;;		On exit  : F/0
 23564 ;;		Unchanged: 0/0
 23565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23567 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23568 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23569 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23570 ;;Total ram usage:       10 bytes
 23571 ;; Hardware stack levels used:    1
 23572 ;; Hardware stack levels required when called:   12
 23573 ;; This function calls:
 23574 ;;		_RADIO_RegisterWrite
 23575 ;;		_RADIO_WriteConfiguration
 23576 ;;		_RADIO_WriteMode
 23577 ;;		_SwTimerSetTimeout
 23578 ;;		_SwTimerStart
 23579 ;;		___lldiv
 23580 ;; This function is called by:
 23581 ;;		_LORAWAN_ReceiveWindow1Callback
 23582 ;;		_LORAWAN_ReceiveWindow2Callback
 23583 ;;		_LORAWAN_EnterContinuousReceive
 23584 ;; This function uses a non-reentrant model
 23585 ;;
 23586                           
 23587                           	psect	text123
 23588  002BD4                     __ptext123:
 23589                           	opt stack 0
 23590  002BD4                     _RADIO_ReceiveStart:
 23591                           	opt stack 13
 23592                           
 23593                           ; BSR set to: 0
 23594                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23595                           
 23596                           ; BSR set to: 1
 23597                           ;incstack = 0
 23598  002BD4  0101               	movlb	1	; () banked
 23599  002BD6  A58D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23600  002BD8  D006               	goto	l12772
 23601                           
 23602                           ; BSR set to: 1
 23603                           ;radio_driver_SX1276.c: 878: {
 23604                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23605  002BDA  0E80               	movlw	128
 23606  002BDC  0100               	movlb	0	; () banked
 23607  002BDE  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23608  002BE0  0E03               	movlw	3
 23609  002BE2  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23610  002BE4  0C03               	retlw	3
 23611  002BE6                     l12772:
 23612                           
 23613                           ; BSR set to: 1
 23614                           ;radio_driver_SX1276.c: 880: }
 23615                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 23616  002BE6  C18D  F098         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23617  002BEA  0E03               	movlw	3
 23618  002BEC  0100               	movlb	0	; () banked
 23619  002BEE  1798               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23620  002BF0  E005               	bz	l12778
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;radio_driver_SX1276.c: 883: {
 23624                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23625  002BF2  0E80               	movlw	128
 23626  002BF4  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23627  002BF6  0E04               	movlw	4
 23628  002BF8  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23629  002BFA  0C04               	retlw	4
 23630  002BFC                     l12778:
 23631                           
 23632                           ; BSR set to: 0
 23633                           ;radio_driver_SX1276.c: 885: }
 23634                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23635  002BFC  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23636  002BFE  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23637  002C00  E107               	bnz	l12782
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;radio_driver_SX1276.c: 888: {
 23641                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23642  002C02  0E00               	movlw	0
 23643  002C04  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23644  002C06  0E04               	movlw	4
 23645  002C08  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23646  002C0A  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23647                           
 23648                           ;radio_driver_SX1276.c: 890: }
 23649  002C0E  D006               	goto	l12784
 23650  002C10                     l12782:
 23651                           
 23652                           ; BSR set to: 0
 23653                           ;radio_driver_SX1276.c: 891: else
 23654                           ;radio_driver_SX1276.c: 892: {
 23655                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 23656  002C10  C096  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23657  002C14  C097  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23658  002C18  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23659  002C1C                     l12784:
 23660                           
 23661                           ;radio_driver_SX1276.c: 894: }
 23662                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 23663  002C1C  0101               	movlb	1	; () banked
 23664  002C1E  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23665  002C20  E111               	bnz	l12788
 23666                           
 23667                           ; BSR set to: 1
 23668                           ;radio_driver_SX1276.c: 897: {
 23669                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 23670  002C22  0E01               	movlw	1
 23671  002C24  0100               	movlb	0	; () banked
 23672  002C26  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23673  002C28  0E22               	movlw	34
 23674  002C2A  EC6E  F03A         	call	_RADIO_RegisterWrite
 23675                           
 23676                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23677  002C2E  0100               	movlb	0	; () banked
 23678  002C30  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23679  002C32  0E40               	movlw	64
 23680  002C34  EC6E  F03A         	call	_RADIO_RegisterWrite
 23681                           
 23682                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23683  002C38  0100               	movlb	0	; () banked
 23684  002C3A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23685  002C3C  0E41               	movlw	65
 23686  002C3E  EC6E  F03A         	call	_RADIO_RegisterWrite
 23687                           
 23688                           ;radio_driver_SX1276.c: 908: }
 23689  002C42  D014               	goto	l12790
 23690  002C44                     l12788:
 23691                           
 23692                           ; BSR set to: 1
 23693                           ;radio_driver_SX1276.c: 909: else
 23694                           ;radio_driver_SX1276.c: 910: {
 23695                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23696  002C44  C19E  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23697  002C48  0E12               	movlw	18
 23698  002C4A  EC6E  F03A         	call	_RADIO_RegisterWrite
 23699                           
 23700                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23701  002C4E  C19F  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23702  002C52  0E13               	movlw	19
 23703  002C54  EC6E  F03A         	call	_RADIO_RegisterWrite
 23704                           
 23705                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23706  002C58  0100               	movlb	0	; () banked
 23707  002C5A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23708  002C5C  0E40               	movlw	64
 23709  002C5E  EC6E  F03A         	call	_RADIO_RegisterWrite
 23710                           
 23711                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23712  002C62  0100               	movlb	0	; () banked
 23713  002C64  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23714  002C66  0E41               	movlw	65
 23715  002C68  EC6E  F03A         	call	_RADIO_RegisterWrite
 23716  002C6C                     l12790:
 23717                           
 23718                           ;radio_driver_SX1276.c: 917: }
 23719                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 23720  002C6C  0101               	movlb	1	; () banked
 23721  002C6E  838D               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23722                           
 23723                           ; BSR set to: 1
 23724                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23725  002C70  0EE7               	movlw	231
 23726  002C72  178D               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23727                           
 23728                           ; BSR set to: 1
 23729                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23730  002C74  0100               	movlb	0	; () banked
 23731  002C76  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23732  002C78  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23733  002C7A  E108               	bnz	l12798
 23734                           
 23735                           ; BSR set to: 0
 23736                           ;radio_driver_SX1276.c: 925: {
 23737                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 23738  002C7C  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23739  002C80  0E00               	movlw	0
 23740  002C82  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23741  002C84  0E05               	movlw	5
 23742  002C86  EC6E  F028         	call	_RADIO_WriteMode
 23743                           
 23744                           ;radio_driver_SX1276.c: 927: }
 23745  002C8A  D041               	goto	l12808
 23746  002C8C                     l12798:
 23747                           
 23748                           ; BSR set to: 0
 23749                           ;radio_driver_SX1276.c: 928: else
 23750                           ;radio_driver_SX1276.c: 929: {
 23751                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 23752  002C8C  0101               	movlb	1	; () banked
 23753  002C8E  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23754  002C90  E109               	bnz	l12802
 23755                           
 23756                           ; BSR set to: 1
 23757                           ;radio_driver_SX1276.c: 931: {
 23758                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 23759  002C92  0E01               	movlw	1
 23760  002C94  0100               	movlb	0	; () banked
 23761  002C96  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23762  002C98  0E00               	movlw	0
 23763  002C9A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23764  002C9C  0E06               	movlw	6
 23765  002C9E  EC6E  F028         	call	_RADIO_WriteMode
 23766                           
 23767                           ;radio_driver_SX1276.c: 933: }
 23768  002CA2  D035               	goto	l12808
 23769  002CA4                     l12802:
 23770                           
 23771                           ; BSR set to: 1
 23772                           ;radio_driver_SX1276.c: 934: else
 23773                           ;radio_driver_SX1276.c: 935: {
 23774                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23775  002CA4  0E00               	movlw	0
 23776  002CA6  0100               	movlb	0	; () banked
 23777  002CA8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23778  002CAA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23779  002CAC  0E05               	movlw	5
 23780  002CAE  EC6E  F028         	call	_RADIO_WriteMode
 23781                           
 23782                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23783  002CB2  0100               	movlb	0	; () banked
 23784  002CB4  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23785  002CB6  6F98               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23786  002CB8  5197               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23787  002CBA  6F99               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23788  002CBC  6B9A               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23789  002CBE  6B9B               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23790  002CC0  0E0C               	movlw	12
 23791  002CC2                     u13805:
 23792  002CC2  90D8               	bcf	status,0,c
 23793  002CC4  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23794  002CC6  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23795  002CC8  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23796  002CCA  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23797  002CCC  2EE8               	decfsz	wreg,f,c
 23798  002CCE  D7F9               	goto	u13805
 23799  002CD0  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23800  002CD4  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23801  002CD8  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23802  002CDC  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23803  002CE0  0E7D               	movlw	125
 23804  002CE2  6F68               	movwf	___lldiv@divisor& (0+255),b
 23805  002CE4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23806  002CE6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23807  002CE8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23808  002CEA  EC1A  F030         	call	___lldiv	;wreg free
 23809  002CEE  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23810  002CF2  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23811  002CF6  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23812  002CFA  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23813  002CFE  0101               	movlb	1	; () banked
 23814  002D00  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23815  002D02  EC75  F036         	call	_SwTimerSetTimeout
 23816                           
 23817                           ; BSR set to: 0
 23818                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23819  002D06  0101               	movlb	1	; () banked
 23820  002D08  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23821  002D0A  EC58  F02E         	call	_SwTimerStart
 23822  002D0E                     l12808:
 23823                           
 23824                           ;radio_driver_SX1276.c: 939: }
 23825                           ;radio_driver_SX1276.c: 940: }
 23826                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 23827  002D0E  0101               	movlb	1	; () banked
 23828  002D10  5194               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23829  002D12  1195               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23830  002D14  1196               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23831  002D16  1197               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23832  002D18  E059               	bz	l12820
 23833                           
 23834                           ; BSR set to: 1
 23835                           ;radio_driver_SX1276.c: 943: {
 23836                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 23837  002D1A  5197               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23838  002D1C  E106               	bnz	u13820
 23839  002D1E  2994               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23840  002D20  0EFF               	movlw	255
 23841  002D22  5995               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23842  002D24  0E0F               	movlw	15
 23843  002D26  5996               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23844  002D28  E319               	bnc	l12814
 23845  002D2A                     u13820:
 23846                           
 23847                           ; BSR set to: 1
 23848  002D2A  C194  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 23849  002D2E  C195  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23850  002D32  C196  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23851  002D36  C197  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23852  002D3A  0E7D               	movlw	125
 23853  002D3C  0100               	movlb	0	; () banked
 23854  002D3E  6F68               	movwf	___lldiv@divisor& (0+255),b
 23855  002D40  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23856  002D42  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23857  002D44  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23858  002D46  EC1A  F030         	call	___lldiv	;wreg free
 23859  002D4A  0E0C               	movlw	12
 23860  002D4C                     u13835:
 23861  002D4C  90D8               	bcf	status,0,c
 23862  002D4E  3764               	rlcf	?___lldiv& (0+255),f,b
 23863  002D50  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23864  002D52  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23865  002D54  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23866  002D56  2EE8               	decfsz	wreg,f,c
 23867  002D58  D7F9               	goto	u13835
 23868  002D5A  D020               	goto	L14
 23869  002D5C                     l12814:
 23870                           
 23871                           ; BSR set to: 1
 23872  002D5C  C194  F098         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23873  002D60  C195  F099         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23874  002D64  C196  F09A         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23875  002D68  C197  F09B         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23876  002D6C  0E0C               	movlw	12
 23877  002D6E                     u13845:
 23878  002D6E  90D8               	bcf	status,0,c
 23879  002D70  0100               	movlb	0	; () banked
 23880  002D72  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23881  002D74  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23882  002D76  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23883  002D78  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23884  002D7A  2EE8               	decfsz	wreg,f,c
 23885  002D7C  D7F8               	goto	u13845
 23886  002D7E  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23887  002D82  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23888  002D86  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23889  002D8A  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23890  002D8E  0E7D               	movlw	125
 23891  002D90  6F68               	movwf	___lldiv@divisor& (0+255),b
 23892  002D92  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23893  002D94  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23894  002D96  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23895  002D98  EC1A  F030         	call	___lldiv	;wreg free
 23896  002D9C                     L14:
 23897  002D9C  C064  F09C         	movff	?___lldiv,_RADIO_ReceiveStart$1199
 23898  002DA0  C065  F09D         	movff	?___lldiv+1,_RADIO_ReceiveStart$1199+1
 23899  002DA4  C066  F09E         	movff	?___lldiv+2,_RADIO_ReceiveStart$1199+2
 23900  002DA8  C067  F09F         	movff	?___lldiv+3,_RADIO_ReceiveStart$1199+3
 23901                           
 23902                           ; BSR set to: 0
 23903  002DAC  C09C  F071         	movff	_RADIO_ReceiveStart$1199,SwTimerSetTimeout@timeout
 23904  002DB0  C09D  F072         	movff	_RADIO_ReceiveStart$1199+1,SwTimerSetTimeout@timeout+1
 23905  002DB4  C09E  F073         	movff	_RADIO_ReceiveStart$1199+2,SwTimerSetTimeout@timeout+2
 23906  002DB8  C09F  F074         	movff	_RADIO_ReceiveStart$1199+3,SwTimerSetTimeout@timeout+3
 23907  002DBC  0101               	movlb	1	; () banked
 23908  002DBE  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23909  002DC0  EC75  F036         	call	_SwTimerSetTimeout
 23910                           
 23911                           ; BSR set to: 0
 23912                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23913  002DC4  0101               	movlb	1	; () banked
 23914  002DC6  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23915  002DC8  EC58  F02E         	call	_SwTimerStart
 23916  002DCC                     l12820:
 23917                           
 23918                           ;radio_driver_SX1276.c: 946: }
 23919                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 23920  002DCC  0100               	movlb	0	; () banked
 23921  002DCE  6B96               	clrf	?_RADIO_ReceiveStart& (0+255),b
 23922  002DD0  6B97               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23923                           
 23924                           ; BSR set to: 0
 23925  002DD2  0012               	return		;funcret
 23926  002DD4                     __end_of_RADIO_ReceiveStart:
 23927                           	opt stack 0
 23928                           tosu	equ	0xFFF
 23929                           tosh	equ	0xFFE
 23930                           tosl	equ	0xFFD
 23931                           pclath	equ	0xFFA
 23932                           tblptru	equ	0xFF8
 23933                           tblptrh	equ	0xFF7
 23934                           tblptrl	equ	0xFF6
 23935                           tablat	equ	0xFF5
 23936                           prodh	equ	0xFF4
 23937                           prodl	equ	0xFF3
 23938                           intcon	equ	0xFF2
 23939                           intcon2	equ	0xFF1
 23940                           intcon3	equ	0xFF0
 23941                           indf0	equ	0xFEF
 23942                           postinc0	equ	0xFEE
 23943                           fsr0h	equ	0xFEA
 23944                           fsr0l	equ	0xFE9
 23945                           wreg	equ	0xFE8
 23946                           postinc1	equ	0xFE6
 23947                           postdec1	equ	0xFE5
 23948                           plusw1	equ	0xFE3
 23949                           fsr1h	equ	0xFE2
 23950                           fsr1l	equ	0xFE1
 23951                           indf2	equ	0xFDF
 23952                           postinc2	equ	0xFDE
 23953                           postdec2	equ	0xFDD
 23954                           plusw2	equ	0xFDB
 23955                           fsr2h	equ	0xFDA
 23956                           fsr2l	equ	0xFD9
 23957                           status	equ	0xFD8
 23958                           
 23959 ;; *************** function _ConfigureRadioRx *****************
 23960 ;; Defined at:
 23961 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23962 ;; Parameters:    Size  Location     Type
 23963 ;;  dataRate        1    wreg     unsigned char 
 23964 ;;  freq            4   22[BANK0 ] unsigned long 
 23965 ;; Auto vars:     Size  Location     Type
 23966 ;;  dataRate        1   26[BANK0 ] unsigned char 
 23967 ;; Return value:  Size  Location     Type
 23968 ;;                  1    wreg      void 
 23969 ;; Registers used:
 23970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23971 ;; Tracked objects:
 23972 ;;		On entry : F/2
 23973 ;;		On exit  : 0/0
 23974 ;;		Unchanged: 0/0
 23975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23979 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23980 ;;Total ram usage:        5 bytes
 23981 ;; Hardware stack levels used:    1
 23982 ;; Hardware stack levels required when called:   10
 23983 ;; This function calls:
 23984 ;;		_ConfigureRadio
 23985 ;;		_RADIO_SetCRC
 23986 ;;		_RADIO_SetIQInverted
 23987 ;; This function is called by:
 23988 ;;		_LORAWAN_ReceiveWindow1Callback
 23989 ;;		_LORAWAN_ReceiveWindow2Callback
 23990 ;;		_LORAWAN_EnterContinuousReceive
 23991 ;; This function uses a non-reentrant model
 23992 ;;
 23993                           
 23994                           	psect	text124
 23995  007308                     __ptext124:
 23996                           	opt stack 0
 23997  007308                     _ConfigureRadioRx:
 23998                           	opt stack 15
 23999                           
 24000                           ; BSR set to: 0
 24001                           ;incstack = 0
 24002                           ;ConfigureRadioRx@dataRate stored from wreg
 24003  007308  0100               	movlb	0	; () banked
 24004  00730A  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 24005                           
 24006                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 24007  00730C  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 24008  007310  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 24009  007314  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 24010  007318  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 24011  00731C  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 24012  00731E  ECCB  F02D         	call	_ConfigureRadio
 24013                           
 24014                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 24015  007322  0E00               	movlw	0
 24016  007324  EC3D  F03C         	call	_RADIO_SetCRC
 24017                           
 24018                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 24019  007328  0E01               	movlw	1
 24020  00732A  EF38  F03C         	goto	_RADIO_SetIQInverted
 24021  00732E                     __end_of_ConfigureRadioRx:
 24022                           	opt stack 0
 24023                           tosu	equ	0xFFF
 24024                           tosh	equ	0xFFE
 24025                           tosl	equ	0xFFD
 24026                           pclath	equ	0xFFA
 24027                           tblptru	equ	0xFF8
 24028                           tblptrh	equ	0xFF7
 24029                           tblptrl	equ	0xFF6
 24030                           tablat	equ	0xFF5
 24031                           prodh	equ	0xFF4
 24032                           prodl	equ	0xFF3
 24033                           intcon	equ	0xFF2
 24034                           intcon2	equ	0xFF1
 24035                           intcon3	equ	0xFF0
 24036                           indf0	equ	0xFEF
 24037                           postinc0	equ	0xFEE
 24038                           fsr0h	equ	0xFEA
 24039                           fsr0l	equ	0xFE9
 24040                           wreg	equ	0xFE8
 24041                           postinc1	equ	0xFE6
 24042                           postdec1	equ	0xFE5
 24043                           plusw1	equ	0xFE3
 24044                           fsr1h	equ	0xFE2
 24045                           fsr1l	equ	0xFE1
 24046                           indf2	equ	0xFDF
 24047                           postinc2	equ	0xFDE
 24048                           postdec2	equ	0xFDD
 24049                           plusw2	equ	0xFDB
 24050                           fsr2h	equ	0xFDA
 24051                           fsr2l	equ	0xFD9
 24052                           status	equ	0xFD8
 24053                           
 24054 ;; *************** function _INTERRUPT_GetDioStatus *****************
 24055 ;; Defined at:
 24056 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 24057 ;; Parameters:    Size  Location     Type
 24058 ;;		None
 24059 ;; Auto vars:     Size  Location     Type
 24060 ;;  a               1    4[BANK0 ] unsigned char 
 24061 ;; Return value:  Size  Location     Type
 24062 ;;                  1    wreg      unsigned char 
 24063 ;; Registers used:
 24064 ;;		wreg, status,2
 24065 ;; Tracked objects:
 24066 ;;		On entry : F/0
 24067 ;;		On exit  : F/0
 24068 ;;		Unchanged: 0/0
 24069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24073 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24074 ;;Total ram usage:        1 bytes
 24075 ;; Hardware stack levels used:    1
 24076 ;; Hardware stack levels required when called:    7
 24077 ;; This function calls:
 24078 ;;		Nothing
 24079 ;; This function is called by:
 24080 ;;		_LORAWAN_Mainloop
 24081 ;; This function uses a non-reentrant model
 24082 ;;
 24083                           
 24084                           	psect	text125
 24085  0077A6                     __ptext125:
 24086                           	opt stack 0
 24087  0077A6                     _INTERRUPT_GetDioStatus:
 24088                           	opt stack 22
 24089                           
 24090                           ; BSR set to: 0
 24091                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 24092                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 24093                           
 24094                           ;incstack = 0
 24095  0077A6  9EF2               	bcf	intcon,7,c	;volatile
 24096                           
 24097                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 24098  0077A8  C0F0  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 24099                           
 24100                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 24101  0077AC  6BF0               	clrf	_dioStatus& (0+255),b	;volatile
 24102                           
 24103                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 24104  0077AE  8EF2               	bsf	intcon,7,c	;volatile
 24105                           
 24106                           ; BSR set to: 0
 24107                           ;interrupt_manager_lora_addons.c: 55: return a;
 24108  0077B0  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 24109                           
 24110                           ; BSR set to: 0
 24111  0077B2  0012               	return		;funcret
 24112  0077B4                     __end_of_INTERRUPT_GetDioStatus:
 24113                           	opt stack 0
 24114                           tosu	equ	0xFFF
 24115                           tosh	equ	0xFFE
 24116                           tosl	equ	0xFFD
 24117                           pclath	equ	0xFFA
 24118                           tblptru	equ	0xFF8
 24119                           tblptrh	equ	0xFF7
 24120                           tblptrl	equ	0xFF6
 24121                           tablat	equ	0xFF5
 24122                           prodh	equ	0xFF4
 24123                           prodl	equ	0xFF3
 24124                           intcon	equ	0xFF2
 24125                           intcon2	equ	0xFF1
 24126                           intcon3	equ	0xFF0
 24127                           indf0	equ	0xFEF
 24128                           postinc0	equ	0xFEE
 24129                           fsr0h	equ	0xFEA
 24130                           fsr0l	equ	0xFE9
 24131                           wreg	equ	0xFE8
 24132                           postinc1	equ	0xFE6
 24133                           postdec1	equ	0xFE5
 24134                           plusw1	equ	0xFE3
 24135                           fsr1h	equ	0xFE2
 24136                           fsr1l	equ	0xFE1
 24137                           indf2	equ	0xFDF
 24138                           postinc2	equ	0xFDE
 24139                           postdec2	equ	0xFDD
 24140                           plusw2	equ	0xFDB
 24141                           fsr2h	equ	0xFDA
 24142                           fsr2l	equ	0xFD9
 24143                           status	equ	0xFD8
 24144                           
 24145 ;; *************** function _LORAWAN_Join *****************
 24146 ;; Defined at:
 24147 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;  activationTy    1    wreg     enum E7980
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;  activationTy    1  126[BANK0 ] enum E7980
 24152 ;;  result          1  125[BANK0 ] enum E7957
 24153 ;;  bufferIndex     1  124[BANK0 ] unsigned char 
 24154 ;; Return value:  Size  Location     Type
 24155 ;;                  1    wreg      enum E7957
 24156 ;; Registers used:
 24157 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24158 ;; Tracked objects:
 24159 ;;		On entry : F/2
 24160 ;;		On exit  : D/0
 24161 ;;		Unchanged: 0/0
 24162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24164 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24166 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24167 ;;Total ram usage:        3 bytes
 24168 ;; Hardware stack levels used:    1
 24169 ;; Hardware stack levels required when called:   14
 24170 ;; This function calls:
 24171 ;;		_PrepareJoinRequestFrame
 24172 ;;		_RADIO_Transmit
 24173 ;;		_SelectChannelForTransmission
 24174 ;;		_SwTimerSetTimeout
 24175 ;;		_SwTimerStart
 24176 ;;		_UpdateJoinInProgress
 24177 ;; This function is called by:
 24178 ;;		_main
 24179 ;; This function uses a non-reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text126
 24183  005C24                     __ptext126:
 24184                           	opt stack 0
 24185  005C24                     _LORAWAN_Join:
 24186                           	opt stack 16
 24187                           
 24188                           ; BSR set to: 0
 24189                           ;incstack = 0
 24190                           ;LORAWAN_Join@activationTypeNew stored from wreg
 24191  005C24  0100               	movlb	0	; () banked
 24192  005C26  6FDE               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 24193                           
 24194                           ;lorawan.c: 117: uint8_t bufferIndex;
 24195                           ;lorawan.c: 118: LorawanError_t result;
 24196                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 24197  005C28  0102               	movlb	2	; () banked
 24198  005C2A  A103               	btfss	(_loRa+3)& (0+255),0,b
 24199                           
 24200                           ; BSR set to: 2
 24201                           ;lorawan.c: 123: }
 24202                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 24203  005C2C  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 24204  005C2E  0012               	return	
 24205                           
 24206                           ; BSR set to: 2
 24207                           ;lorawan.c: 128: }
 24208                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 24209  005C30  5102               	movf	(_loRa+2)& (0+255),w,b
 24210  005C32  0B0F               	andlw	15
 24211  005C34  E001               	bz	l1717
 24212  005C36  0012               	return	
 24213  005C38                     l1717:
 24214                           
 24215                           ; BSR set to: 2
 24216                           ;lorawan.c: 133: }
 24217                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 24218  005C38  C0DE  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 24219                           
 24220                           ; BSR set to: 2
 24221                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 24222  005C3C  0100               	movlb	0	; () banked
 24223  005C3E  51DE               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 24224  005C40  E11F               	bnz	l1718
 24225                           
 24226                           ; BSR set to: 0
 24227                           ;lorawan.c: 138: {
 24228                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 24229  005C42  0102               	movlb	2	; () banked
 24230  005C44  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 24231                           
 24232                           ; BSR set to: 2
 24233  005C46  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 24234  005C48  0012               	return	
 24235                           
 24236                           ; BSR set to: 2
 24237  005C4A  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 24238  005C4C  0012               	return	
 24239                           
 24240                           ; BSR set to: 2
 24241                           ;lorawan.c: 144: else
 24242                           ;lorawan.c: 145: {
 24243                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 24244  005C4E  EC28  F023         	call	_PrepareJoinRequestFrame	;wreg free
 24245  005C52  6FDC               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 24246                           
 24247                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 24248  005C54  0E00               	movlw	0
 24249  005C56  EC2C  F033         	call	_SelectChannelForTransmission
 24250  005C5A  6FDD               	movwf	LORAWAN_Join@result& (0+255),b
 24251                           
 24252                           ; BSR set to: 0
 24253                           ;lorawan.c: 149: if (result == OK)
 24254  005C5C  51DD               	movf	LORAWAN_Join@result& (0+255),w,b
 24255  005C5E  A4D8               	btfss	status,2,c
 24256  005C60  0012               	return	
 24257                           
 24258                           ; BSR set to: 0
 24259                           ;lorawan.c: 150: {
 24260                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 24261  005C62  0EE0               	movlw	low _macBuffer
 24262  005C64  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 24263  005C66  0E04               	movlw	high _macBuffer
 24264  005C68  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24265  005C6A  C0DC  F098         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 24266  005C6E  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 24267  005C72  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 24268  005C74  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 24269  005C76  A4D8               	btfss	status,2,c
 24270  005C78  0012               	return	
 24271                           
 24272                           ; BSR set to: 0
 24273                           ;lorawan.c: 152: {
 24274                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 24275  005C7A  0E01               	movlw	1
 24276  005C7C  EF18  F03B         	goto	_UpdateJoinInProgress
 24277  005C80                     l1718:
 24278                           
 24279                           ; BSR set to: 0
 24280                           ;lorawan.c: 167: else
 24281                           ;lorawan.c: 168: {
 24282                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 24283  005C80  0102               	movlb	2	; () banked
 24284  005C82  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 24285                           
 24286                           ; BSR set to: 2
 24287  005C84  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 24288  005C86  0012               	return	
 24289                           
 24290                           ; BSR set to: 2
 24291  005C88  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 24292  005C8A  0012               	return	
 24293                           
 24294                           ; BSR set to: 2
 24295                           ;lorawan.c: 174: else
 24296                           ;lorawan.c: 175: {
 24297                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 24298  005C8C  0E07               	movlw	7
 24299  005C8E  EC18  F03B         	call	_UpdateJoinInProgress
 24300                           
 24301                           ; BSR set to: 2
 24302                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 24303  005C92  0E8F               	movlw	143
 24304  005C94  0100               	movlb	0	; () banked
 24305  005C96  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 24306  005C98  0E02               	movlw	2
 24307  005C9A  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 24308  005C9C  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 24309  005C9E  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 24310  005CA0  0102               	movlb	2	; () banked
 24311  005CA2  51F3               	movf	(_loRa+243)& (0+255),w,b
 24312  005CA4  EC75  F036         	call	_SwTimerSetTimeout
 24313                           
 24314                           ; BSR set to: 0
 24315                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 24316  005CA8  0102               	movlb	2	; () banked
 24317  005CAA  51F3               	movf	(_loRa+243)& (0+255),w,b
 24318  005CAC  EF58  F02E         	goto	_SwTimerStart
 24319  005CB0                     __end_of_LORAWAN_Join:
 24320                           	opt stack 0
 24321                           tosu	equ	0xFFF
 24322                           tosh	equ	0xFFE
 24323                           tosl	equ	0xFFD
 24324                           pclath	equ	0xFFA
 24325                           tblptru	equ	0xFF8
 24326                           tblptrh	equ	0xFF7
 24327                           tblptrl	equ	0xFF6
 24328                           tablat	equ	0xFF5
 24329                           prodh	equ	0xFF4
 24330                           prodl	equ	0xFF3
 24331                           intcon	equ	0xFF2
 24332                           intcon2	equ	0xFF1
 24333                           intcon3	equ	0xFF0
 24334                           indf0	equ	0xFEF
 24335                           postinc0	equ	0xFEE
 24336                           fsr0h	equ	0xFEA
 24337                           fsr0l	equ	0xFE9
 24338                           wreg	equ	0xFE8
 24339                           postinc1	equ	0xFE6
 24340                           postdec1	equ	0xFE5
 24341                           plusw1	equ	0xFE3
 24342                           fsr1h	equ	0xFE2
 24343                           fsr1l	equ	0xFE1
 24344                           indf2	equ	0xFDF
 24345                           postinc2	equ	0xFDE
 24346                           postdec2	equ	0xFDD
 24347                           plusw2	equ	0xFDB
 24348                           fsr2h	equ	0xFDA
 24349                           fsr2l	equ	0xFD9
 24350                           status	equ	0xFD8
 24351                           
 24352 ;; *************** function _UpdateJoinInProgress *****************
 24353 ;; Defined at:
 24354 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24355 ;; Parameters:    Size  Location     Type
 24356 ;;  state           1    wreg     unsigned char 
 24357 ;; Auto vars:     Size  Location     Type
 24358 ;;  state           1    4[BANK0 ] unsigned char 
 24359 ;; Return value:  Size  Location     Type
 24360 ;;                  1    wreg      void 
 24361 ;; Registers used:
 24362 ;;		wreg, status,2, status,0
 24363 ;; Tracked objects:
 24364 ;;		On entry : D/0
 24365 ;;		On exit  : F/2
 24366 ;;		Unchanged: 0/0
 24367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24371 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24372 ;;Total ram usage:        1 bytes
 24373 ;; Hardware stack levels used:    1
 24374 ;; Hardware stack levels required when called:    7
 24375 ;; This function calls:
 24376 ;;		Nothing
 24377 ;; This function is called by:
 24378 ;;		_LORAWAN_Join
 24379 ;; This function uses a non-reentrant model
 24380 ;;
 24381                           
 24382                           	psect	text127
 24383  007630                     __ptext127:
 24384                           	opt stack 0
 24385  007630                     _UpdateJoinInProgress:
 24386                           	opt stack 22
 24387                           
 24388                           ;incstack = 0
 24389                           ;UpdateJoinInProgress@state stored from wreg
 24390  007630  0100               	movlb	0	; () banked
 24391  007632  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 24392                           
 24393                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24394  007634  0102               	movlb	2	; () banked
 24395  007636  9902               	bcf	(_loRa+2)& (0+255),4,b
 24396                           
 24397                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24398  007638  8500               	bsf	_loRa& (0+255),2,b
 24399                           
 24400                           ; BSR set to: 2
 24401                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24402  00763A  5102               	movf	(_loRa+2)& (0+255),w,b
 24403  00763C  0100               	movlb	0	; () banked
 24404  00763E  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24405  007640  0BF0               	andlw	-16
 24406  007642  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24407  007644  0102               	movlb	2	; () banked
 24408  007646  6F02               	movwf	(_loRa+2)& (0+255),b
 24409                           
 24410                           ; BSR set to: 2
 24411  007648  0012               	return		;funcret
 24412  00764A                     __end_of_UpdateJoinInProgress:
 24413                           	opt stack 0
 24414                           tosu	equ	0xFFF
 24415                           tosh	equ	0xFFE
 24416                           tosl	equ	0xFFD
 24417                           pclath	equ	0xFFA
 24418                           tblptru	equ	0xFF8
 24419                           tblptrh	equ	0xFF7
 24420                           tblptrl	equ	0xFF6
 24421                           tablat	equ	0xFF5
 24422                           prodh	equ	0xFF4
 24423                           prodl	equ	0xFF3
 24424                           intcon	equ	0xFF2
 24425                           intcon2	equ	0xFF1
 24426                           intcon3	equ	0xFF0
 24427                           indf0	equ	0xFEF
 24428                           postinc0	equ	0xFEE
 24429                           fsr0h	equ	0xFEA
 24430                           fsr0l	equ	0xFE9
 24431                           wreg	equ	0xFE8
 24432                           postinc1	equ	0xFE6
 24433                           postdec1	equ	0xFE5
 24434                           plusw1	equ	0xFE3
 24435                           fsr1h	equ	0xFE2
 24436                           fsr1l	equ	0xFE1
 24437                           indf2	equ	0xFDF
 24438                           postinc2	equ	0xFDE
 24439                           postdec2	equ	0xFDD
 24440                           plusw2	equ	0xFDB
 24441                           fsr2h	equ	0xFDA
 24442                           fsr2l	equ	0xFD9
 24443                           status	equ	0xFD8
 24444                           
 24445 ;; *************** function _SelectChannelForTransmission *****************
 24446 ;; Defined at:
 24447 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24448 ;; Parameters:    Size  Location     Type
 24449 ;;  transmission    1    wreg     unsigned char 
 24450 ;; Auto vars:     Size  Location     Type
 24451 ;;  transmission    1   37[BANK0 ] unsigned char 
 24452 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 24453 ;;  result          1   38[BANK0 ] enum E8016
 24454 ;; Return value:  Size  Location     Type
 24455 ;;                  1    wreg      enum E8016
 24456 ;; Registers used:
 24457 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24458 ;; Tracked objects:
 24459 ;;		On entry : 0/0
 24460 ;;		On exit  : F/0
 24461 ;;		Unchanged: 0/0
 24462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24464 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24466 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24467 ;;Total ram usage:        3 bytes
 24468 ;; Hardware stack levels used:    1
 24469 ;; Hardware stack levels required when called:   11
 24470 ;; This function calls:
 24471 ;;		_ConfigureRadioTx
 24472 ;;		_SearchAvailableChannel
 24473 ;; This function is called by:
 24474 ;;		_LORAWAN_RxTimeout
 24475 ;;		_LORAWAN_Join
 24476 ;;		_LORAWAN_Send
 24477 ;;		_AckRetransmissionCallback
 24478 ;;		_UnconfirmedTransmissionCallback
 24479 ;; This function uses a non-reentrant model
 24480 ;;
 24481                           
 24482                           	psect	text128
 24483  006658                     __ptext128:
 24484                           	opt stack 0
 24485  006658                     _SelectChannelForTransmission:
 24486                           	opt stack 17
 24487                           
 24488                           ; BSR set to: 2
 24489                           ;incstack = 0
 24490                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24491  006658  0100               	movlb	0	; () banked
 24492  00665A  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24493                           
 24494                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 24495                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 24496  00665C  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24497  006660  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 24498  006662  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24499  006664  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24500  006666  0E10               	movlw	16
 24501  006668  EC90  F027         	call	_SearchAvailableChannel
 24502  00666C  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;lorawan_eu.c: 926: if (result == OK)
 24506  00666E  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24507  006670  E120               	bnz	l13476
 24508                           
 24509                           ; BSR set to: 0
 24510                           ;lorawan_eu.c: 927: {
 24511                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 24512  006672  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 24513                           
 24514                           ; BSR set to: 0
 24515                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 24516  006676  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24517  006678  0D0E               	mullw	14
 24518  00667A  0E00               	movlw	low _Channels
 24519  00667C  24F3               	addwf	prodl,w,c
 24520  00667E  6ED9               	movwf	fsr2l,c
 24521  006680  0E04               	movlw	high _Channels
 24522  006682  20F4               	addwfc	prodh,w,c
 24523  006684  6EDA               	movwf	fsr2h,c
 24524  006686  CFDE F213          	movff	postinc2,_loRa+19
 24525  00668A  CFDE F214          	movff	postinc2,_loRa+20
 24526  00668E  CFDE F215          	movff	postinc2,_loRa+21
 24527  006692  CFDE F216          	movff	postinc2,_loRa+22
 24528                           
 24529                           ; BSR set to: 0
 24530                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 24531  006696  C2DF  F217         	movff	_loRa+223,_loRa+23
 24532                           
 24533                           ; BSR set to: 0
 24534                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 24535  00669A  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 24536  00669E  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 24537  0066A2  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 24538  0066A6  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 24539  0066AA  0102               	movlb	2	; () banked
 24540  0066AC  5117               	movf	(_loRa+23)& (0+255),w,b
 24541  0066AE  EC0F  F036         	call	_ConfigureRadioTx
 24542  0066B2                     l13476:
 24543                           
 24544                           ;lorawan_eu.c: 933: }
 24545                           ;lorawan_eu.c: 934: return result;
 24546  0066B2  0100               	movlb	0	; () banked
 24547  0066B4  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24548                           
 24549                           ; BSR set to: 0
 24550  0066B6  0012               	return		;funcret
 24551  0066B8                     __end_of_SelectChannelForTransmission:
 24552                           	opt stack 0
 24553                           tosu	equ	0xFFF
 24554                           tosh	equ	0xFFE
 24555                           tosl	equ	0xFFD
 24556                           pclath	equ	0xFFA
 24557                           tblptru	equ	0xFF8
 24558                           tblptrh	equ	0xFF7
 24559                           tblptrl	equ	0xFF6
 24560                           tablat	equ	0xFF5
 24561                           prodh	equ	0xFF4
 24562                           prodl	equ	0xFF3
 24563                           intcon	equ	0xFF2
 24564                           intcon2	equ	0xFF1
 24565                           intcon3	equ	0xFF0
 24566                           indf0	equ	0xFEF
 24567                           postinc0	equ	0xFEE
 24568                           fsr0h	equ	0xFEA
 24569                           fsr0l	equ	0xFE9
 24570                           wreg	equ	0xFE8
 24571                           postinc1	equ	0xFE6
 24572                           postdec1	equ	0xFE5
 24573                           plusw1	equ	0xFE3
 24574                           fsr1h	equ	0xFE2
 24575                           fsr1l	equ	0xFE1
 24576                           indf2	equ	0xFDF
 24577                           postinc2	equ	0xFDE
 24578                           postdec2	equ	0xFDD
 24579                           plusw2	equ	0xFDB
 24580                           fsr2h	equ	0xFDA
 24581                           fsr2l	equ	0xFD9
 24582                           status	equ	0xFD8
 24583                           
 24584 ;; *************** function _SearchAvailableChannel *****************
 24585 ;; Defined at:
 24586 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;  maxChannels     1    wreg     unsigned char 
 24589 ;;  transmission    1   25[BANK0 ] unsigned char 
 24590 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 24591 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24592 ;; Auto vars:     Size  Location     Type
 24593 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 24594 ;;  i               1   36[BANK0 ] unsigned char 
 24595 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 24596 ;;  result          1   33[BANK0 ] enum E8016
 24597 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 24598 ;; Return value:  Size  Location     Type
 24599 ;;                  1    wreg      enum E8016
 24600 ;; Registers used:
 24601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24602 ;; Tracked objects:
 24603 ;;		On entry : D/2
 24604 ;;		On exit  : F/0
 24605 ;;		Unchanged: 0/0
 24606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24607 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24608 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24609 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24610 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24611 ;;Total ram usage:       12 bytes
 24612 ;; Hardware stack levels used:    1
 24613 ;; Hardware stack levels required when called:   10
 24614 ;; This function calls:
 24615 ;;		_Random
 24616 ;; This function is called by:
 24617 ;;		_SelectChannelForTransmission
 24618 ;;		_LORAWAN_RxDone
 24619 ;; This function uses a non-reentrant model
 24620 ;;
 24621                           
 24622                           	psect	text129
 24623  004F20                     __ptext129:
 24624                           	opt stack 0
 24625  004F20                     _SearchAvailableChannel:
 24626                           	opt stack 17
 24627                           
 24628                           ; BSR set to: 0
 24629                           ;incstack = 0
 24630                           ;SearchAvailableChannel@maxChannels stored from wreg
 24631  004F20  0100               	movlb	0	; () banked
 24632  004F22  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24633                           
 24634                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 24635                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 24636  004F24  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 24640  004F26  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 24641  004F2A  6B78               	clrf	(Random@max+1)& (0+255),b
 24642  004F2C  ECF0  F039         	call	_Random	;wreg free
 24643  004F30  2977               	incf	?_Random& (0+255),w,b
 24644  004F32  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24645                           
 24646                           ; BSR set to: 0
 24647                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 24648  004F34  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24649                           
 24650                           ;lorawan_eu.c: 786: while (randomNumber)
 24651  004F38  D054               	goto	l13020
 24652  004F3A                     l1133:
 24653                           
 24654                           ; BSR set to: 0
 24655                           ;lorawan_eu.c: 787: {
 24656                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 24657  004F3A  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 24658  004F3C  D047               	goto	l13012
 24659  004F3E                     l12996:
 24660                           
 24661                           ; BSR set to: 0
 24662                           ;lorawan_eu.c: 789: {
 24663                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 24664  004F3E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24665  004F40  0D0E               	mullw	14
 24666  004F42  0E04               	movlw	low (_Channels+4)
 24667  004F44  24F3               	addwf	prodl,w,c
 24668  004F46  6ED9               	movwf	fsr2l,c
 24669  004F48  0E04               	movlw	high (_Channels+4)
 24670  004F4A  20F4               	addwfc	prodh,w,c
 24671  004F4C  6EDA               	movwf	fsr2h,c
 24672  004F4E  04DE               	decf	postinc2,w,c
 24673  004F50  E13B               	bnz	l1136
 24674                           
 24675                           ; BSR set to: 0
 24676  004F52  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24677  004F54  0D0E               	mullw	14
 24678  004F56  0E08               	movlw	low (_Channels+8)
 24679  004F58  24F3               	addwf	prodl,w,c
 24680  004F5A  6ED9               	movwf	fsr2l,c
 24681  004F5C  0E04               	movlw	high (_Channels+8)
 24682  004F5E  20F4               	addwfc	prodh,w,c
 24683  004F60  6EDA               	movwf	fsr2h,c
 24684  004F62  50DE               	movf	postinc2,w,c
 24685  004F64  10DE               	iorwf	postinc2,w,c
 24686  004F66  10DE               	iorwf	postinc2,w,c
 24687  004F68  10DE               	iorwf	postinc2,w,c
 24688  004F6A  E12E               	bnz	l1136
 24689                           
 24690                           ; BSR set to: 0
 24691  004F6C  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24692  004F6E  0D0E               	mullw	14
 24693  004F70  0E05               	movlw	low (_Channels+5)
 24694  004F72  24F3               	addwf	prodl,w,c
 24695  004F74  6ED9               	movwf	fsr2l,c
 24696  004F76  0E04               	movlw	high (_Channels+5)
 24697  004F78  20F4               	addwfc	prodh,w,c
 24698  004F7A  6EDA               	movwf	fsr2h,c
 24699  004F7C  50DF               	movf	223,w,c
 24700  004F7E  0B0F               	andlw	15
 24701  004F80  0100               	movlb	0	; () banked
 24702  004F82  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24703  004F84  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 24704  004F86  0102               	movlb	2	; () banked
 24705  004F88  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 24706  004F8A  E31E               	bnc	l1136
 24707                           
 24708                           ; BSR set to: 2
 24709  004F8C  0100               	movlb	0	; () banked
 24710  004F8E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24711  004F90  0D0E               	mullw	14
 24712  004F92  0E05               	movlw	low (_Channels+5)
 24713  004F94  24F3               	addwf	prodl,w,c
 24714  004F96  6ED9               	movwf	fsr2l,c
 24715  004F98  0E04               	movlw	high (_Channels+5)
 24716  004F9A  20F4               	addwfc	prodh,w,c
 24717  004F9C  6EDA               	movwf	fsr2h,c
 24718  004F9E  38DF               	swapf	223,w,c
 24719  004FA0  0B0F               	andlw	15
 24720  004FA2  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24721  004FA4  0102               	movlb	2	; () banked
 24722  004FA6  51DF               	movf	(_loRa+223)& (0+255),w,b
 24723  004FA8  0100               	movlb	0	; () banked
 24724  004FAA  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24725  004FAC  E30D               	bnc	l1136
 24726                           
 24727                           ; BSR set to: 0
 24728                           ;lorawan_eu.c: 791: {
 24729                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 24730  004FAE  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 24731  004FB0  E10A               	bnz	l13008
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;lorawan_eu.c: 793: {
 24735                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 24736  004FB2  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24737  004FB4  0D0E               	mullw	14
 24738  004FB6  0E0C               	movlw	low (_Channels+12)
 24739  004FB8  24F3               	addwf	prodl,w,c
 24740  004FBA  6ED9               	movwf	fsr2l,c
 24741  004FBC  0E04               	movlw	high (_Channels+12)
 24742  004FBE  20F4               	addwfc	prodh,w,c
 24743  004FC0  6EDA               	movwf	fsr2h,c
 24744  004FC2  04DE               	decf	postinc2,w,c
 24745  004FC4  E101               	bnz	l1136
 24746  004FC6                     l13008:
 24747                           
 24748                           ; BSR set to: 0
 24749                           ;lorawan_eu.c: 795: {
 24750                           ;lorawan_eu.c: 796: randomNumber --;
 24751  004FC6  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24752  004FC8                     l1136:
 24753  004FC8  0100               	movlb	0	; () banked
 24754  004FCA  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 24755  004FCC                     l13012:
 24756                           
 24757                           ; BSR set to: 0
 24758  004FCC  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24759  004FCE  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 24760  004FD0  E202               	bc	l13016
 24761                           
 24762                           ; BSR set to: 0
 24763  004FD2  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24764  004FD4  E1B4               	bnz	l12996
 24765  004FD6                     l13016:
 24766                           
 24767                           ; BSR set to: 0
 24768                           ;lorawan_eu.c: 802: }
 24769                           ;lorawan_eu.c: 803: }
 24770                           ;lorawan_eu.c: 804: }
 24771                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 24772  004FD6  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24773  004FD8  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24774  004FDA  E103               	bnz	l13020
 24775                           
 24776                           ; BSR set to: 0
 24777                           ;lorawan_eu.c: 807: {
 24778                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 24779  004FDC  0E09               	movlw	9
 24780  004FDE  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24781                           
 24782                           ;lorawan_eu.c: 809: break;
 24783  004FE0  D002               	goto	l13022
 24784  004FE2                     l13020:
 24785                           
 24786                           ; BSR set to: 0
 24787  004FE2  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24788  004FE4  E1AA               	bnz	l1133
 24789  004FE6                     l13022:
 24790                           
 24791                           ; BSR set to: 0
 24792                           ;lorawan_eu.c: 810: }
 24793                           ;lorawan_eu.c: 811: }
 24794                           ;lorawan_eu.c: 813: if ( i != 0)
 24795  004FE6  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24796  004FE8  E007               	bz	l13026
 24797                           
 24798                           ; BSR set to: 0
 24799                           ;lorawan_eu.c: 814: {
 24800                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 24801  004FEA  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 24802  004FEC  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24803  004FF0  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24804  004FF4  6EDF               	movwf	indf2,c
 24805                           
 24806                           ;lorawan_eu.c: 816: }
 24807  004FF6  D002               	goto	l1146
 24808  004FF8                     l13026:
 24809                           
 24810                           ; BSR set to: 0
 24811                           ;lorawan_eu.c: 817: else
 24812                           ;lorawan_eu.c: 818: {
 24813                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 24814  004FF8  0E09               	movlw	9
 24815  004FFA  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24816  004FFC                     l1146:
 24817                           
 24818                           ; BSR set to: 0
 24819                           ;lorawan_eu.c: 820: }
 24820                           ;lorawan_eu.c: 821: return result;
 24821  004FFC  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 24822                           
 24823                           ; BSR set to: 0
 24824  004FFE  0012               	return		;funcret
 24825  005000                     __end_of_SearchAvailableChannel:
 24826                           	opt stack 0
 24827                           tosu	equ	0xFFF
 24828                           tosh	equ	0xFFE
 24829                           tosl	equ	0xFFD
 24830                           pclath	equ	0xFFA
 24831                           tblptru	equ	0xFF8
 24832                           tblptrh	equ	0xFF7
 24833                           tblptrl	equ	0xFF6
 24834                           tablat	equ	0xFF5
 24835                           prodh	equ	0xFF4
 24836                           prodl	equ	0xFF3
 24837                           intcon	equ	0xFF2
 24838                           intcon2	equ	0xFF1
 24839                           intcon3	equ	0xFF0
 24840                           indf0	equ	0xFEF
 24841                           postinc0	equ	0xFEE
 24842                           fsr0h	equ	0xFEA
 24843                           fsr0l	equ	0xFE9
 24844                           wreg	equ	0xFE8
 24845                           postinc1	equ	0xFE6
 24846                           postdec1	equ	0xFE5
 24847                           plusw1	equ	0xFE3
 24848                           fsr1h	equ	0xFE2
 24849                           fsr1l	equ	0xFE1
 24850                           indf2	equ	0xFDF
 24851                           postinc2	equ	0xFDE
 24852                           postdec2	equ	0xFDD
 24853                           plusw2	equ	0xFDB
 24854                           fsr2h	equ	0xFDA
 24855                           fsr2l	equ	0xFD9
 24856                           status	equ	0xFD8
 24857                           
 24858 ;; *************** function _ConfigureRadioTx *****************
 24859 ;; Defined at:
 24860 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24861 ;; Parameters:    Size  Location     Type
 24862 ;;  dataRate        1    wreg     unsigned char 
 24863 ;;  freq            4   22[BANK0 ] unsigned long 
 24864 ;; Auto vars:     Size  Location     Type
 24865 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24866 ;;  txPower         1   27[BANK0 ] char 
 24867 ;; Return value:  Size  Location     Type
 24868 ;;                  1    wreg      void 
 24869 ;; Registers used:
 24870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24871 ;; Tracked objects:
 24872 ;;		On entry : F/2
 24873 ;;		On exit  : 0/0
 24874 ;;		Unchanged: 0/0
 24875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24876 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24879 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24880 ;;Total ram usage:        6 bytes
 24881 ;; Hardware stack levels used:    1
 24882 ;; Hardware stack levels required when called:   10
 24883 ;; This function calls:
 24884 ;;		_ConfigureRadio
 24885 ;;		_RADIO_SetCRC
 24886 ;;		_RADIO_SetIQInverted
 24887 ;;		_RADIO_SetOutputPower
 24888 ;; This function is called by:
 24889 ;;		_SelectChannelForTransmission
 24890 ;; This function uses a non-reentrant model
 24891 ;;
 24892                           
 24893                           	psect	text130
 24894  006C1E                     __ptext130:
 24895                           	opt stack 0
 24896  006C1E                     _ConfigureRadioTx:
 24897                           	opt stack 17
 24898                           
 24899                           ; BSR set to: 0
 24900                           ;incstack = 0
 24901                           ;ConfigureRadioTx@dataRate stored from wreg
 24902  006C1E  0100               	movlb	0	; () banked
 24903  006C20  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 24904                           
 24905                           ;lorawan_eu.c: 1257: int8_t txPower;
 24906                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 24907  006C22  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 24908  006C26  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 24909  006C2A  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 24910  006C2E  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 24911  006C32  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 24912  006C34  ECCB  F02D         	call	_ConfigureRadio
 24913                           
 24914                           ;lorawan_eu.c: 1262: {
 24915                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 24916  006C38  0EA2               	movlw	low _txPower868
 24917  006C3A  0102               	movlb	2	; () banked
 24918  006C3C  25E1               	addwf	(_loRa+225)& (0+255),w,b
 24919  006C3E  6EF6               	movwf	tblptrl,c
 24920  006C40  6AF7               	clrf	tblptrh,c
 24921  006C42  0EFF               	movlw	high _txPower868
 24922  006C44  22F7               	addwfc	tblptrh,f,c
 24923  006C46                     	if	1	;There are 3 active tblptr bytes
 24924  006C46  6AF8               	clrf	tblptru,c
 24925  006C48  0E00               	movlw	low (__mediumconst shr (0+16))
 24926  006C4A  22F8               	addwfc	tblptru,f,c
 24927  006C4C                     	endif
 24928  006C4C  0008               	tblrd		*
 24929  006C4E  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 24930                           
 24931                           ; BSR set to: 2
 24932                           ;lorawan_eu.c: 1268: }
 24933                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 24934                           
 24935                           ;lorawan_eu.c: 1264: }
 24936  006C52  0100               	movlb	0	; () banked
 24937  006C54  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 24938  006C56  EC67  F03C         	call	_RADIO_SetOutputPower
 24939                           
 24940                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 24941  006C5A  0E01               	movlw	1
 24942  006C5C  EC3D  F03C         	call	_RADIO_SetCRC
 24943                           
 24944                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 24945  006C60  0E00               	movlw	0
 24946  006C62  EF38  F03C         	goto	_RADIO_SetIQInverted
 24947  006C66                     __end_of_ConfigureRadioTx:
 24948                           	opt stack 0
 24949                           tosu	equ	0xFFF
 24950                           tosh	equ	0xFFE
 24951                           tosl	equ	0xFFD
 24952                           pclath	equ	0xFFA
 24953                           tblptru	equ	0xFF8
 24954                           tblptrh	equ	0xFF7
 24955                           tblptrl	equ	0xFF6
 24956                           tablat	equ	0xFF5
 24957                           prodh	equ	0xFF4
 24958                           prodl	equ	0xFF3
 24959                           intcon	equ	0xFF2
 24960                           intcon2	equ	0xFF1
 24961                           intcon3	equ	0xFF0
 24962                           indf0	equ	0xFEF
 24963                           postinc0	equ	0xFEE
 24964                           fsr0h	equ	0xFEA
 24965                           fsr0l	equ	0xFE9
 24966                           wreg	equ	0xFE8
 24967                           postinc1	equ	0xFE6
 24968                           postdec1	equ	0xFE5
 24969                           plusw1	equ	0xFE3
 24970                           fsr1h	equ	0xFE2
 24971                           fsr1l	equ	0xFE1
 24972                           indf2	equ	0xFDF
 24973                           postinc2	equ	0xFDE
 24974                           postdec2	equ	0xFDD
 24975                           plusw2	equ	0xFDB
 24976                           fsr2h	equ	0xFDA
 24977                           fsr2l	equ	0xFD9
 24978                           status	equ	0xFD8
 24979                           
 24980 ;; *************** function _RADIO_SetOutputPower *****************
 24981 ;; Defined at:
 24982 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24983 ;; Parameters:    Size  Location     Type
 24984 ;;  power           1    wreg     char 
 24985 ;; Auto vars:     Size  Location     Type
 24986 ;;  power           1    4[BANK0 ] char 
 24987 ;; Return value:  Size  Location     Type
 24988 ;;                  1    wreg      void 
 24989 ;; Registers used:
 24990 ;;		wreg
 24991 ;; Tracked objects:
 24992 ;;		On entry : F/0
 24993 ;;		On exit  : 0/0
 24994 ;;		Unchanged: 0/0
 24995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24997 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24999 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25000 ;;Total ram usage:        1 bytes
 25001 ;; Hardware stack levels used:    1
 25002 ;; Hardware stack levels required when called:    7
 25003 ;; This function calls:
 25004 ;;		Nothing
 25005 ;; This function is called by:
 25006 ;;		_ConfigureRadioTx
 25007 ;; This function uses a non-reentrant model
 25008 ;;
 25009                           
 25010                           	psect	text131
 25011  0078CE                     __ptext131:
 25012                           	opt stack 0
 25013  0078CE                     _RADIO_SetOutputPower:
 25014                           	opt stack 19
 25015                           
 25016                           ;incstack = 0
 25017                           ;RADIO_SetOutputPower@power stored from wreg
 25018  0078CE  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 25019                           
 25020                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 25021  0078D0  C064  F185         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 25022  0078D4  0012               	return		;funcret
 25023  0078D6                     __end_of_RADIO_SetOutputPower:
 25024                           	opt stack 0
 25025                           tosu	equ	0xFFF
 25026                           tosh	equ	0xFFE
 25027                           tosl	equ	0xFFD
 25028                           pclath	equ	0xFFA
 25029                           tblptru	equ	0xFF8
 25030                           tblptrh	equ	0xFF7
 25031                           tblptrl	equ	0xFF6
 25032                           tablat	equ	0xFF5
 25033                           prodh	equ	0xFF4
 25034                           prodl	equ	0xFF3
 25035                           intcon	equ	0xFF2
 25036                           intcon2	equ	0xFF1
 25037                           intcon3	equ	0xFF0
 25038                           indf0	equ	0xFEF
 25039                           postinc0	equ	0xFEE
 25040                           fsr0h	equ	0xFEA
 25041                           fsr0l	equ	0xFE9
 25042                           wreg	equ	0xFE8
 25043                           postinc1	equ	0xFE6
 25044                           postdec1	equ	0xFE5
 25045                           plusw1	equ	0xFE3
 25046                           fsr1h	equ	0xFE2
 25047                           fsr1l	equ	0xFE1
 25048                           indf2	equ	0xFDF
 25049                           postinc2	equ	0xFDE
 25050                           postdec2	equ	0xFDD
 25051                           plusw2	equ	0xFDB
 25052                           fsr2h	equ	0xFDA
 25053                           fsr2l	equ	0xFD9
 25054                           status	equ	0xFD8
 25055                           
 25056 ;; *************** function _RADIO_SetIQInverted *****************
 25057 ;; Defined at:
 25058 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25059 ;; Parameters:    Size  Location     Type
 25060 ;;  iqInverted      1    wreg     unsigned char 
 25061 ;; Auto vars:     Size  Location     Type
 25062 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 25063 ;; Return value:  Size  Location     Type
 25064 ;;                  1    wreg      void 
 25065 ;; Registers used:
 25066 ;;		wreg
 25067 ;; Tracked objects:
 25068 ;;		On entry : 0/0
 25069 ;;		On exit  : 0/0
 25070 ;;		Unchanged: 0/0
 25071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25075 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25076 ;;Total ram usage:        1 bytes
 25077 ;; Hardware stack levels used:    1
 25078 ;; Hardware stack levels required when called:    7
 25079 ;; This function calls:
 25080 ;;		Nothing
 25081 ;; This function is called by:
 25082 ;;		_ConfigureRadioTx
 25083 ;;		_ConfigureRadioRx
 25084 ;; This function uses a non-reentrant model
 25085 ;;
 25086                           
 25087                           	psect	text132
 25088  007870                     __ptext132:
 25089                           	opt stack 0
 25090  007870                     _RADIO_SetIQInverted:
 25091                           	opt stack 19
 25092                           
 25093                           ;incstack = 0
 25094                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 25095  007870  0100               	movlb	0	; () banked
 25096  007872  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 25097                           
 25098                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 25099  007874  C064  F18A         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 25100  007878  0012               	return		;funcret
 25101  00787A                     __end_of_RADIO_SetIQInverted:
 25102                           	opt stack 0
 25103                           tosu	equ	0xFFF
 25104                           tosh	equ	0xFFE
 25105                           tosl	equ	0xFFD
 25106                           pclath	equ	0xFFA
 25107                           tblptru	equ	0xFF8
 25108                           tblptrh	equ	0xFF7
 25109                           tblptrl	equ	0xFF6
 25110                           tablat	equ	0xFF5
 25111                           prodh	equ	0xFF4
 25112                           prodl	equ	0xFF3
 25113                           intcon	equ	0xFF2
 25114                           intcon2	equ	0xFF1
 25115                           intcon3	equ	0xFF0
 25116                           indf0	equ	0xFEF
 25117                           postinc0	equ	0xFEE
 25118                           fsr0h	equ	0xFEA
 25119                           fsr0l	equ	0xFE9
 25120                           wreg	equ	0xFE8
 25121                           postinc1	equ	0xFE6
 25122                           postdec1	equ	0xFE5
 25123                           plusw1	equ	0xFE3
 25124                           fsr1h	equ	0xFE2
 25125                           fsr1l	equ	0xFE1
 25126                           indf2	equ	0xFDF
 25127                           postinc2	equ	0xFDE
 25128                           postdec2	equ	0xFDD
 25129                           plusw2	equ	0xFDB
 25130                           fsr2h	equ	0xFDA
 25131                           fsr2l	equ	0xFD9
 25132                           status	equ	0xFD8
 25133                           
 25134 ;; *************** function _RADIO_SetCRC *****************
 25135 ;; Defined at:
 25136 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25137 ;; Parameters:    Size  Location     Type
 25138 ;;  crc             1    wreg     unsigned char 
 25139 ;; Auto vars:     Size  Location     Type
 25140 ;;  crc             1    4[BANK0 ] unsigned char 
 25141 ;; Return value:  Size  Location     Type
 25142 ;;                  1    wreg      void 
 25143 ;; Registers used:
 25144 ;;		wreg
 25145 ;; Tracked objects:
 25146 ;;		On entry : 0/0
 25147 ;;		On exit  : 0/0
 25148 ;;		Unchanged: 0/0
 25149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25153 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25154 ;;Total ram usage:        1 bytes
 25155 ;; Hardware stack levels used:    1
 25156 ;; Hardware stack levels required when called:    7
 25157 ;; This function calls:
 25158 ;;		Nothing
 25159 ;; This function is called by:
 25160 ;;		_ConfigureRadioTx
 25161 ;;		_ConfigureRadioRx
 25162 ;; This function uses a non-reentrant model
 25163 ;;
 25164                           
 25165                           	psect	text133
 25166  00787A                     __ptext133:
 25167                           	opt stack 0
 25168  00787A                     _RADIO_SetCRC:
 25169                           	opt stack 19
 25170                           
 25171                           ;incstack = 0
 25172                           ;RADIO_SetCRC@crc stored from wreg
 25173  00787A  0100               	movlb	0	; () banked
 25174  00787C  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 25175                           
 25176                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 25177  00787E  C064  F186         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 25178  007882  0012               	return		;funcret
 25179  007884                     __end_of_RADIO_SetCRC:
 25180                           	opt stack 0
 25181                           tosu	equ	0xFFF
 25182                           tosh	equ	0xFFE
 25183                           tosl	equ	0xFFD
 25184                           pclath	equ	0xFFA
 25185                           tblptru	equ	0xFF8
 25186                           tblptrh	equ	0xFF7
 25187                           tblptrl	equ	0xFF6
 25188                           tablat	equ	0xFF5
 25189                           prodh	equ	0xFF4
 25190                           prodl	equ	0xFF3
 25191                           intcon	equ	0xFF2
 25192                           intcon2	equ	0xFF1
 25193                           intcon3	equ	0xFF0
 25194                           indf0	equ	0xFEF
 25195                           postinc0	equ	0xFEE
 25196                           fsr0h	equ	0xFEA
 25197                           fsr0l	equ	0xFE9
 25198                           wreg	equ	0xFE8
 25199                           postinc1	equ	0xFE6
 25200                           postdec1	equ	0xFE5
 25201                           plusw1	equ	0xFE3
 25202                           fsr1h	equ	0xFE2
 25203                           fsr1l	equ	0xFE1
 25204                           indf2	equ	0xFDF
 25205                           postinc2	equ	0xFDE
 25206                           postdec2	equ	0xFDD
 25207                           plusw2	equ	0xFDB
 25208                           fsr2h	equ	0xFDA
 25209                           fsr2l	equ	0xFD9
 25210                           status	equ	0xFD8
 25211                           
 25212 ;; *************** function _ConfigureRadio *****************
 25213 ;; Defined at:
 25214 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25215 ;; Parameters:    Size  Location     Type
 25216 ;;  dataRate        1    wreg     unsigned char 
 25217 ;;  freq            4   17[BANK0 ] unsigned long 
 25218 ;; Auto vars:     Size  Location     Type
 25219 ;;  dataRate        1   21[BANK0 ] unsigned char 
 25220 ;; Return value:  Size  Location     Type
 25221 ;;                  1    wreg      void 
 25222 ;; Registers used:
 25223 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25224 ;; Tracked objects:
 25225 ;;		On entry : F/0
 25226 ;;		On exit  : 0/0
 25227 ;;		Unchanged: 0/0
 25228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25232 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25233 ;;Total ram usage:        5 bytes
 25234 ;; Hardware stack levels used:    1
 25235 ;; Hardware stack levels required when called:    9
 25236 ;; This function calls:
 25237 ;;		_RADIO_SetBandwidth
 25238 ;;		_RADIO_SetChannelFrequency
 25239 ;;		_RADIO_SetFSKSyncWord
 25240 ;;		_RADIO_SetFrequencyHopPeriod
 25241 ;;		_RADIO_SetLoRaSyncWord
 25242 ;;		_RADIO_SetModulation
 25243 ;;		_RADIO_SetSpreadingFactor
 25244 ;; This function is called by:
 25245 ;;		_ConfigureRadioTx
 25246 ;;		_ConfigureRadioRx
 25247 ;; This function uses a non-reentrant model
 25248 ;;
 25249                           
 25250                           	psect	text134
 25251  005B96                     __ptext134:
 25252                           	opt stack 0
 25253  005B96                     _ConfigureRadio:
 25254                           	opt stack 17
 25255                           
 25256                           ;incstack = 0
 25257                           ;ConfigureRadio@dataRate stored from wreg
 25258  005B96  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 25259                           
 25260                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 25261  005B98  0E75               	movlw	low _modulation
 25262  005B9A  0100               	movlb	0	; () banked
 25263  005B9C  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25264  005B9E  6EF6               	movwf	tblptrl,c
 25265  005BA0  6AF7               	clrf	tblptrh,c
 25266  005BA2  0EFF               	movlw	high _modulation
 25267  005BA4  22F7               	addwfc	tblptrh,f,c
 25268  005BA6                     	if	1	;There are 3 active tblptr bytes
 25269  005BA6  6AF8               	clrf	tblptru,c
 25270  005BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 25271  005BAA  22F8               	addwfc	tblptru,f,c
 25272  005BAC                     	endif
 25273  005BAC  0008               	tblrd		*
 25274  005BAE  50F5               	movf	tablat,w,c
 25275  005BB0  EC6F  F03C         	call	_RADIO_SetModulation
 25276                           
 25277                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 25278  005BB4  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 25279  005BB8  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 25280  005BBC  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 25281  005BC0  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 25282  005BC4  ECDF  F02E         	call	_RADIO_SetChannelFrequency	;wreg free
 25283                           
 25284                           ; BSR set to: 0
 25285                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 25286  005BC8  0E00               	movlw	0
 25287  005BCA  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 25288  005BCC  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 25289  005BCE  EC42  F03C         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 25290                           
 25291                           ; BSR set to: 0
 25292                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 25293  005BD2  0E07               	movlw	7
 25294  005BD4  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 25295  005BD6  D01F               	goto	l12650
 25296                           
 25297                           ; BSR set to: 0
 25298                           ;lorawan_eu.c: 870: {
 25299                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 25300  005BD8  0E9B               	movlw	low _spreadingFactor
 25301  005BDA  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25302  005BDC  6EF6               	movwf	tblptrl,c
 25303  005BDE  6AF7               	clrf	tblptrh,c
 25304  005BE0  0EFF               	movlw	high _spreadingFactor
 25305  005BE2  22F7               	addwfc	tblptrh,f,c
 25306  005BE4                     	if	1	;There are 3 active tblptr bytes
 25307  005BE4  6AF8               	clrf	tblptru,c
 25308  005BE6  0E00               	movlw	low (__mediumconst shr (0+16))
 25309  005BE8  22F8               	addwfc	tblptru,f,c
 25310  005BEA                     	endif
 25311  005BEA  0008               	tblrd		*
 25312  005BEC  50F5               	movf	tablat,w,c
 25313  005BEE  EC6B  F03C         	call	_RADIO_SetSpreadingFactor
 25314                           
 25315                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 25316  005BF2  0E8D               	movlw	low _bandwidth
 25317  005BF4  0100               	movlb	0	; () banked
 25318  005BF6  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25319  005BF8  6EF6               	movwf	tblptrl,c
 25320  005BFA  6AF7               	clrf	tblptrh,c
 25321  005BFC  0EFF               	movlw	high _bandwidth
 25322  005BFE  22F7               	addwfc	tblptrh,f,c
 25323  005C00                     	if	1	;There are 3 active tblptr bytes
 25324  005C00  6AF8               	clrf	tblptru,c
 25325  005C02  0E00               	movlw	low (__mediumconst shr (0+16))
 25326  005C04  22F8               	addwfc	tblptru,f,c
 25327  005C06                     	endif
 25328  005C06  0008               	tblrd		*
 25329  005C08  50F5               	movf	tablat,w,c
 25330  005C0A  EC73  F03C         	call	_RADIO_SetBandwidth
 25331                           
 25332                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 25333  005C0E  0102               	movlb	2	; () banked
 25334  005C10  51F4               	movf	(_loRa+244)& (0+255),w,b
 25335  005C12  EF47  F03C         	goto	_RADIO_SetLoRaSyncWord
 25336  005C16                     l12650:
 25337                           
 25338                           ; BSR set to: 0
 25339                           ;lorawan_eu.c: 876: else
 25340                           ;lorawan_eu.c: 877: {
 25341                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 25342  005C16  0EFC               	movlw	low _FskSyncWordBuff
 25343  005C18  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 25344  005C1A  0EFF               	movlw	high _FskSyncWordBuff
 25345  005C1C  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 25346  005C1E  0E03               	movlw	3
 25347  005C20  EFCB  F038         	goto	_RADIO_SetFSKSyncWord
 25348  005C24                     __end_of_ConfigureRadio:
 25349                           	opt stack 0
 25350                           tosu	equ	0xFFF
 25351                           tosh	equ	0xFFE
 25352                           tosl	equ	0xFFD
 25353                           pclath	equ	0xFFA
 25354                           tblptru	equ	0xFF8
 25355                           tblptrh	equ	0xFF7
 25356                           tblptrl	equ	0xFF6
 25357                           tablat	equ	0xFF5
 25358                           prodh	equ	0xFF4
 25359                           prodl	equ	0xFF3
 25360                           intcon	equ	0xFF2
 25361                           intcon2	equ	0xFF1
 25362                           intcon3	equ	0xFF0
 25363                           indf0	equ	0xFEF
 25364                           postinc0	equ	0xFEE
 25365                           fsr0h	equ	0xFEA
 25366                           fsr0l	equ	0xFE9
 25367                           wreg	equ	0xFE8
 25368                           postinc1	equ	0xFE6
 25369                           postdec1	equ	0xFE5
 25370                           plusw1	equ	0xFE3
 25371                           fsr1h	equ	0xFE2
 25372                           fsr1l	equ	0xFE1
 25373                           indf2	equ	0xFDF
 25374                           postinc2	equ	0xFDE
 25375                           postdec2	equ	0xFDD
 25376                           plusw2	equ	0xFDB
 25377                           fsr2h	equ	0xFDA
 25378                           fsr2l	equ	0xFD9
 25379                           status	equ	0xFD8
 25380                           
 25381 ;; *************** function _RADIO_SetSpreadingFactor *****************
 25382 ;; Defined at:
 25383 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25384 ;; Parameters:    Size  Location     Type
 25385 ;;  spreadingFac    1    wreg     enum E7761
 25386 ;; Auto vars:     Size  Location     Type
 25387 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 25388 ;; Return value:  Size  Location     Type
 25389 ;;                  1    wreg      void 
 25390 ;; Registers used:
 25391 ;;		wreg
 25392 ;; Tracked objects:
 25393 ;;		On entry : F/0
 25394 ;;		On exit  : 0/0
 25395 ;;		Unchanged: 0/0
 25396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25400 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25401 ;;Total ram usage:        1 bytes
 25402 ;; Hardware stack levels used:    1
 25403 ;; Hardware stack levels required when called:    7
 25404 ;; This function calls:
 25405 ;;		Nothing
 25406 ;; This function is called by:
 25407 ;;		_ConfigureRadio
 25408 ;; This function uses a non-reentrant model
 25409 ;;
 25410                           
 25411                           	psect	text135
 25412  0078D6                     __ptext135:
 25413                           	opt stack 0
 25414  0078D6                     _RADIO_SetSpreadingFactor:
 25415                           	opt stack 18
 25416                           
 25417                           ;incstack = 0
 25418                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 25419  0078D6  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 25420                           
 25421                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 25422  0078D8  C064  F183         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 25423  0078DC  0012               	return		;funcret
 25424  0078DE                     __end_of_RADIO_SetSpreadingFactor:
 25425                           	opt stack 0
 25426                           tosu	equ	0xFFF
 25427                           tosh	equ	0xFFE
 25428                           tosl	equ	0xFFD
 25429                           pclath	equ	0xFFA
 25430                           tblptru	equ	0xFF8
 25431                           tblptrh	equ	0xFF7
 25432                           tblptrl	equ	0xFF6
 25433                           tablat	equ	0xFF5
 25434                           prodh	equ	0xFF4
 25435                           prodl	equ	0xFF3
 25436                           intcon	equ	0xFF2
 25437                           intcon2	equ	0xFF1
 25438                           intcon3	equ	0xFF0
 25439                           indf0	equ	0xFEF
 25440                           postinc0	equ	0xFEE
 25441                           fsr0h	equ	0xFEA
 25442                           fsr0l	equ	0xFE9
 25443                           wreg	equ	0xFE8
 25444                           postinc1	equ	0xFE6
 25445                           postdec1	equ	0xFE5
 25446                           plusw1	equ	0xFE3
 25447                           fsr1h	equ	0xFE2
 25448                           fsr1l	equ	0xFE1
 25449                           indf2	equ	0xFDF
 25450                           postinc2	equ	0xFDE
 25451                           postdec2	equ	0xFDD
 25452                           plusw2	equ	0xFDB
 25453                           fsr2h	equ	0xFDA
 25454                           fsr2l	equ	0xFD9
 25455                           status	equ	0xFD8
 25456                           
 25457 ;; *************** function _RADIO_SetModulation *****************
 25458 ;; Defined at:
 25459 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25460 ;; Parameters:    Size  Location     Type
 25461 ;;  modulation      1    wreg     enum E7751
 25462 ;; Auto vars:     Size  Location     Type
 25463 ;;  modulation      1    4[BANK0 ] enum E7751
 25464 ;; Return value:  Size  Location     Type
 25465 ;;                  1    wreg      void 
 25466 ;; Registers used:
 25467 ;;		wreg
 25468 ;; Tracked objects:
 25469 ;;		On entry : F/0
 25470 ;;		On exit  : 0/0
 25471 ;;		Unchanged: 0/0
 25472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25477 ;;Total ram usage:        1 bytes
 25478 ;; Hardware stack levels used:    1
 25479 ;; Hardware stack levels required when called:    7
 25480 ;; This function calls:
 25481 ;;		Nothing
 25482 ;; This function is called by:
 25483 ;;		_ConfigureRadio
 25484 ;; This function uses a non-reentrant model
 25485 ;;
 25486                           
 25487                           	psect	text136
 25488  0078DE                     __ptext136:
 25489                           	opt stack 0
 25490  0078DE                     _RADIO_SetModulation:
 25491                           	opt stack 18
 25492                           
 25493                           ;incstack = 0
 25494                           ;RADIO_SetModulation@modulation stored from wreg
 25495  0078DE  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 25496                           
 25497                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 25498  0078E0  C064  F182         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 25499  0078E4  0012               	return		;funcret
 25500  0078E6                     __end_of_RADIO_SetModulation:
 25501                           	opt stack 0
 25502                           tosu	equ	0xFFF
 25503                           tosh	equ	0xFFE
 25504                           tosl	equ	0xFFD
 25505                           pclath	equ	0xFFA
 25506                           tblptru	equ	0xFF8
 25507                           tblptrh	equ	0xFF7
 25508                           tblptrl	equ	0xFF6
 25509                           tablat	equ	0xFF5
 25510                           prodh	equ	0xFF4
 25511                           prodl	equ	0xFF3
 25512                           intcon	equ	0xFF2
 25513                           intcon2	equ	0xFF1
 25514                           intcon3	equ	0xFF0
 25515                           indf0	equ	0xFEF
 25516                           postinc0	equ	0xFEE
 25517                           fsr0h	equ	0xFEA
 25518                           fsr0l	equ	0xFE9
 25519                           wreg	equ	0xFE8
 25520                           postinc1	equ	0xFE6
 25521                           postdec1	equ	0xFE5
 25522                           plusw1	equ	0xFE3
 25523                           fsr1h	equ	0xFE2
 25524                           fsr1l	equ	0xFE1
 25525                           indf2	equ	0xFDF
 25526                           postinc2	equ	0xFDE
 25527                           postdec2	equ	0xFDD
 25528                           plusw2	equ	0xFDB
 25529                           fsr2h	equ	0xFDA
 25530                           fsr2l	equ	0xFD9
 25531                           status	equ	0xFD8
 25532                           
 25533 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 25534 ;; Defined at:
 25535 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25536 ;; Parameters:    Size  Location     Type
 25537 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 25538 ;; Auto vars:     Size  Location     Type
 25539 ;;		None
 25540 ;; Return value:  Size  Location     Type
 25541 ;;                  1    wreg      void 
 25542 ;; Registers used:
 25543 ;;		None
 25544 ;; Tracked objects:
 25545 ;;		On entry : F/0
 25546 ;;		On exit  : F/0
 25547 ;;		Unchanged: F/0
 25548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25553 ;;Total ram usage:        2 bytes
 25554 ;; Hardware stack levels used:    1
 25555 ;; Hardware stack levels required when called:    7
 25556 ;; This function calls:
 25557 ;;		Nothing
 25558 ;; This function is called by:
 25559 ;;		_ConfigureRadio
 25560 ;; This function uses a non-reentrant model
 25561 ;;
 25562                           
 25563                           	psect	text137
 25564  007884                     __ptext137:
 25565                           	opt stack 0
 25566  007884                     _RADIO_SetFrequencyHopPeriod:
 25567                           	opt stack 18
 25568                           
 25569                           ; BSR set to: 0
 25570                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 25571                           
 25572                           ;incstack = 0
 25573  007884  C064  F188         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 25574  007888  C065  F189         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 25575                           
 25576                           ; BSR set to: 0
 25577  00788C  0012               	return		;funcret
 25578  00788E                     __end_of_RADIO_SetFrequencyHopPeriod:
 25579                           	opt stack 0
 25580                           tosu	equ	0xFFF
 25581                           tosh	equ	0xFFE
 25582                           tosl	equ	0xFFD
 25583                           pclath	equ	0xFFA
 25584                           tblptru	equ	0xFF8
 25585                           tblptrh	equ	0xFF7
 25586                           tblptrl	equ	0xFF6
 25587                           tablat	equ	0xFF5
 25588                           prodh	equ	0xFF4
 25589                           prodl	equ	0xFF3
 25590                           intcon	equ	0xFF2
 25591                           intcon2	equ	0xFF1
 25592                           intcon3	equ	0xFF0
 25593                           indf0	equ	0xFEF
 25594                           postinc0	equ	0xFEE
 25595                           fsr0h	equ	0xFEA
 25596                           fsr0l	equ	0xFE9
 25597                           wreg	equ	0xFE8
 25598                           postinc1	equ	0xFE6
 25599                           postdec1	equ	0xFE5
 25600                           plusw1	equ	0xFE3
 25601                           fsr1h	equ	0xFE2
 25602                           fsr1l	equ	0xFE1
 25603                           indf2	equ	0xFDF
 25604                           postinc2	equ	0xFDE
 25605                           postdec2	equ	0xFDD
 25606                           plusw2	equ	0xFDB
 25607                           fsr2h	equ	0xFDA
 25608                           fsr2l	equ	0xFD9
 25609                           status	equ	0xFD8
 25610                           
 25611 ;; *************** function _RADIO_SetFSKSyncWord *****************
 25612 ;; Defined at:
 25613 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25614 ;; Parameters:    Size  Location     Type
 25615 ;;  syncWordLen     1    wreg     unsigned char 
 25616 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 25617 ;;		 -> FskSyncWordBuff(3), 
 25618 ;; Auto vars:     Size  Location     Type
 25619 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 25620 ;; Return value:  Size  Location     Type
 25621 ;;                  1    wreg      void 
 25622 ;; Registers used:
 25623 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25624 ;; Tracked objects:
 25625 ;;		On entry : F/0
 25626 ;;		On exit  : F/0
 25627 ;;		Unchanged: 0/0
 25628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25632 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25633 ;;Total ram usage:        3 bytes
 25634 ;; Hardware stack levels used:    1
 25635 ;; Hardware stack levels required when called:    8
 25636 ;; This function calls:
 25637 ;;		_memcpy
 25638 ;; This function is called by:
 25639 ;;		_ConfigureRadio
 25640 ;; This function uses a non-reentrant model
 25641 ;;
 25642                           
 25643                           	psect	text138
 25644  007196                     __ptext138:
 25645                           	opt stack 0
 25646  007196                     _RADIO_SetFSKSyncWord:
 25647                           	opt stack 17
 25648                           
 25649                           ; BSR set to: 0
 25650                           ;incstack = 0
 25651                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 25652  007196  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25653                           
 25654                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 25655  007198  0E08               	movlw	8
 25656  00719A  0100               	movlb	0	; () banked
 25657  00719C  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25658  00719E  D001               	goto	l12354
 25659                           
 25660                           ; BSR set to: 0
 25661                           ;radio_driver_SX1276.c: 1627: {
 25662                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 25663  0071A0  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25664  0071A2                     l12354:
 25665                           
 25666                           ; BSR set to: 0
 25667                           ;radio_driver_SX1276.c: 1629: }
 25668                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 25669  0071A2  0E79               	movlw	low (_RadioConfiguration+15)
 25670  0071A4  6F64               	movwf	memcpy@d1& (0+255),b
 25671  0071A6  0E01               	movlw	high (_RadioConfiguration+15)
 25672  0071A8  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 25673  0071AA  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 25674  0071AE  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 25675  0071B2  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 25676  0071B6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 25677  0071B8  EC14  F034         	call	_memcpy	;wreg free
 25678                           
 25679                           ; BSR set to: 0
 25680                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 25681  0071BC  C070  F181         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 25682                           
 25683                           ; BSR set to: 0
 25684  0071C0  0012               	return		;funcret
 25685  0071C2                     __end_of_RADIO_SetFSKSyncWord:
 25686                           	opt stack 0
 25687                           tosu	equ	0xFFF
 25688                           tosh	equ	0xFFE
 25689                           tosl	equ	0xFFD
 25690                           pclath	equ	0xFFA
 25691                           tblptru	equ	0xFF8
 25692                           tblptrh	equ	0xFF7
 25693                           tblptrl	equ	0xFF6
 25694                           tablat	equ	0xFF5
 25695                           prodh	equ	0xFF4
 25696                           prodl	equ	0xFF3
 25697                           intcon	equ	0xFF2
 25698                           intcon2	equ	0xFF1
 25699                           intcon3	equ	0xFF0
 25700                           indf0	equ	0xFEF
 25701                           postinc0	equ	0xFEE
 25702                           fsr0h	equ	0xFEA
 25703                           fsr0l	equ	0xFE9
 25704                           wreg	equ	0xFE8
 25705                           postinc1	equ	0xFE6
 25706                           postdec1	equ	0xFE5
 25707                           plusw1	equ	0xFE3
 25708                           fsr1h	equ	0xFE2
 25709                           fsr1l	equ	0xFE1
 25710                           indf2	equ	0xFDF
 25711                           postinc2	equ	0xFDE
 25712                           postdec2	equ	0xFDD
 25713                           plusw2	equ	0xFDB
 25714                           fsr2h	equ	0xFDA
 25715                           fsr2l	equ	0xFD9
 25716                           status	equ	0xFD8
 25717                           
 25718 ;; *************** function _RADIO_SetChannelFrequency *****************
 25719 ;; Defined at:
 25720 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25721 ;; Parameters:    Size  Location     Type
 25722 ;;  frequency       4    4[BANK0 ] unsigned long 
 25723 ;; Auto vars:     Size  Location     Type
 25724 ;;		None
 25725 ;; Return value:  Size  Location     Type
 25726 ;;                  2    4[BANK0 ] enum E7805
 25727 ;; Registers used:
 25728 ;;		wreg, status,2, status,0
 25729 ;; Tracked objects:
 25730 ;;		On entry : 0/0
 25731 ;;		On exit  : F/0
 25732 ;;		Unchanged: 0/0
 25733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25734 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25737 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25738 ;;Total ram usage:        4 bytes
 25739 ;; Hardware stack levels used:    1
 25740 ;; Hardware stack levels required when called:    7
 25741 ;; This function calls:
 25742 ;;		Nothing
 25743 ;; This function is called by:
 25744 ;;		_ConfigureRadio
 25745 ;; This function uses a non-reentrant model
 25746 ;;
 25747                           
 25748                           	psect	text139
 25749  005DBE                     __ptext139:
 25750                           	opt stack 0
 25751  005DBE                     _RADIO_SetChannelFrequency:
 25752                           	opt stack 18
 25753                           
 25754                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25755                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 25756                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 25757                           
 25758                           ; BSR set to: 0
 25759                           ;incstack = 0
 25760  005DBE  0E40               	movlw	64
 25761  005DC0  0100               	movlb	0	; () banked
 25762  005DC2  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25763  005DC4  0E74               	movlw	116
 25764  005DC6  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25765  005DC8  0E2A               	movlw	42
 25766  005DCA  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25767  005DCC  0E08               	movlw	8
 25768  005DCE  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25769  005DD0  E309               	bnc	l12334
 25770                           
 25771                           ; BSR set to: 0
 25772  005DD2  0EC1               	movlw	193
 25773  005DD4  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25774  005DD6  0E49               	movlw	73
 25775  005DD8  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25776  005DDA  0E6E               	movlw	110
 25777  005DDC  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25778  005DDE  0E0A               	movlw	10
 25779  005DE0  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25780  005DE2  E325               	bnc	l690
 25781  005DE4                     l12334:
 25782                           
 25783                           ; BSR set to: 0
 25784  005DE4  0E80               	movlw	128
 25785  005DE6  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25786  005DE8  0E1A               	movlw	26
 25787  005DEA  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25788  005DEC  0E70               	movlw	112
 25789  005DEE  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25790  005DF0  0E18               	movlw	24
 25791  005DF2  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25792  005DF4  E309               	bnc	l12338
 25793                           
 25794                           ; BSR set to: 0
 25795  005DF6  0E41               	movlw	65
 25796  005DF8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25797  005DFA  0EDD               	movlw	221
 25798  005DFC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25799  005DFE  0E4A               	movlw	74
 25800  005E00  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25801  005E02  0E1F               	movlw	31
 25802  005E04  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25803  005E06  E313               	bnc	l690
 25804  005E08                     l12338:
 25805                           
 25806                           ; BSR set to: 0
 25807  005E08  0E80               	movlw	128
 25808  005E0A  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25809  005E0C  0E13               	movlw	19
 25810  005E0E  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25811  005E10  0E61               	movlw	97
 25812  005E12  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25813  005E14  0E33               	movlw	51
 25814  005E16  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25815  005E18  A0D8               	btfss	status,0,c
 25816  005E1A  0012               	return	
 25817                           
 25818                           ; BSR set to: 0
 25819  005E1C  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25820  005E1E  0EF7               	movlw	247
 25821  005E20  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25822  005E22  0ECB               	movlw	203
 25823  005E24  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25824  005E26  0E3C               	movlw	60
 25825  005E28  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25826  005E2A  B0D8               	btfsc	status,0,c
 25827  005E2C  0012               	return	
 25828  005E2E                     l690:
 25829                           
 25830                           ; BSR set to: 0
 25831                           ;radio_driver_SX1276.c: 1449: {
 25832                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 25833  005E2E  C064  F16A         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25834  005E32  C065  F16B         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25835  005E36  C066  F16C         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25836  005E3A  C067  F16D         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25837                           
 25838                           ; BSR set to: 0
 25839                           
 25840                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 25841                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25842  005E3E  0012               	return		;funcret
 25843  005E40                     __end_of_RADIO_SetChannelFrequency:
 25844                           	opt stack 0
 25845                           tosu	equ	0xFFF
 25846                           tosh	equ	0xFFE
 25847                           tosl	equ	0xFFD
 25848                           pclath	equ	0xFFA
 25849                           tblptru	equ	0xFF8
 25850                           tblptrh	equ	0xFF7
 25851                           tblptrl	equ	0xFF6
 25852                           tablat	equ	0xFF5
 25853                           prodh	equ	0xFF4
 25854                           prodl	equ	0xFF3
 25855                           intcon	equ	0xFF2
 25856                           intcon2	equ	0xFF1
 25857                           intcon3	equ	0xFF0
 25858                           indf0	equ	0xFEF
 25859                           postinc0	equ	0xFEE
 25860                           fsr0h	equ	0xFEA
 25861                           fsr0l	equ	0xFE9
 25862                           wreg	equ	0xFE8
 25863                           postinc1	equ	0xFE6
 25864                           postdec1	equ	0xFE5
 25865                           plusw1	equ	0xFE3
 25866                           fsr1h	equ	0xFE2
 25867                           fsr1l	equ	0xFE1
 25868                           indf2	equ	0xFDF
 25869                           postinc2	equ	0xFDE
 25870                           postdec2	equ	0xFDD
 25871                           plusw2	equ	0xFDB
 25872                           fsr2h	equ	0xFDA
 25873                           fsr2l	equ	0xFD9
 25874                           status	equ	0xFD8
 25875                           
 25876 ;; *************** function _RADIO_SetBandwidth *****************
 25877 ;; Defined at:
 25878 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25879 ;; Parameters:    Size  Location     Type
 25880 ;;  bandwidth       1    wreg     enum E7769
 25881 ;; Auto vars:     Size  Location     Type
 25882 ;;  bandwidth       1    4[BANK0 ] enum E7769
 25883 ;; Return value:  Size  Location     Type
 25884 ;;                  1    wreg      void 
 25885 ;; Registers used:
 25886 ;;		wreg
 25887 ;; Tracked objects:
 25888 ;;		On entry : F/0
 25889 ;;		On exit  : 0/0
 25890 ;;		Unchanged: 0/0
 25891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25896 ;;Total ram usage:        1 bytes
 25897 ;; Hardware stack levels used:    1
 25898 ;; Hardware stack levels required when called:    7
 25899 ;; This function calls:
 25900 ;;		Nothing
 25901 ;; This function is called by:
 25902 ;;		_ConfigureRadio
 25903 ;; This function uses a non-reentrant model
 25904 ;;
 25905                           
 25906                           	psect	text140
 25907  0078E6                     __ptext140:
 25908                           	opt stack 0
 25909  0078E6                     _RADIO_SetBandwidth:
 25910                           	opt stack 18
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;incstack = 0
 25914                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25915  0078E6  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25916                           
 25917                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 25918  0078E8  C064  F184         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25919  0078EC  0012               	return		;funcret
 25920  0078EE                     __end_of_RADIO_SetBandwidth:
 25921                           	opt stack 0
 25922                           tosu	equ	0xFFF
 25923                           tosh	equ	0xFFE
 25924                           tosl	equ	0xFFD
 25925                           pclath	equ	0xFFA
 25926                           tblptru	equ	0xFF8
 25927                           tblptrh	equ	0xFF7
 25928                           tblptrl	equ	0xFF6
 25929                           tablat	equ	0xFF5
 25930                           prodh	equ	0xFF4
 25931                           prodl	equ	0xFF3
 25932                           intcon	equ	0xFF2
 25933                           intcon2	equ	0xFF1
 25934                           intcon3	equ	0xFF0
 25935                           indf0	equ	0xFEF
 25936                           postinc0	equ	0xFEE
 25937                           fsr0h	equ	0xFEA
 25938                           fsr0l	equ	0xFE9
 25939                           wreg	equ	0xFE8
 25940                           postinc1	equ	0xFE6
 25941                           postdec1	equ	0xFE5
 25942                           plusw1	equ	0xFE3
 25943                           fsr1h	equ	0xFE2
 25944                           fsr1l	equ	0xFE1
 25945                           indf2	equ	0xFDF
 25946                           postinc2	equ	0xFDE
 25947                           postdec2	equ	0xFDD
 25948                           plusw2	equ	0xFDB
 25949                           fsr2h	equ	0xFDA
 25950                           fsr2l	equ	0xFD9
 25951                           status	equ	0xFD8
 25952                           
 25953 ;; *************** function _RADIO_Transmit *****************
 25954 ;; Defined at:
 25955 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25956 ;; Parameters:    Size  Location     Type
 25957 ;;  buffer          2   54[BANK0 ] PTR unsigned char 
 25958 ;;		 -> macBuffer(271), 
 25959 ;;  bufferLen       1   56[BANK0 ] unsigned char 
 25960 ;; Auto vars:     Size  Location     Type
 25961 ;;  i               1   70[BANK0 ] unsigned char 
 25962 ;;  regValue        1   69[BANK0 ] unsigned char 
 25963 ;; Return value:  Size  Location     Type
 25964 ;;                  2   54[BANK0 ] enum E7805
 25965 ;; Registers used:
 25966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25967 ;; Tracked objects:
 25968 ;;		On entry : F/0
 25969 ;;		On exit  : F/0
 25970 ;;		Unchanged: 0/0
 25971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25972 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25973 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25974 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25975 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25976 ;;Total ram usage:       17 bytes
 25977 ;; Hardware stack levels used:    1
 25978 ;; Hardware stack levels required when called:   12
 25979 ;; This function calls:
 25980 ;;		_HALSPICSAssert
 25981 ;;		_HALSPICSDeassert
 25982 ;;		_HALSPISend
 25983 ;;		_RADIO_RegisterRead
 25984 ;;		_RADIO_RegisterWrite
 25985 ;;		_RADIO_WriteConfiguration
 25986 ;;		_RADIO_WriteMode
 25987 ;;		_SwTimerSetTimeout
 25988 ;;		_SwTimerStart
 25989 ;;		_SwTimerStop
 25990 ;;		___lldiv
 25991 ;; This function is called by:
 25992 ;;		_LORAWAN_RxTimeout
 25993 ;;		_LORAWAN_Join
 25994 ;;		_LORAWAN_Send
 25995 ;;		_AckRetransmissionCallback
 25996 ;;		_UnconfirmedTransmissionCallback
 25997 ;; This function uses a non-reentrant model
 25998 ;;
 25999                           
 26000                           	psect	text141
 26001  002FC4                     __ptext141:
 26002                           	opt stack 0
 26003  002FC4                     _RADIO_Transmit:
 26004                           	opt stack 16
 26005                           
 26006                           ; BSR set to: 0
 26007                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 26008                           ;radio_driver_SX1276.c: 789: uint8_t i;
 26009                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 26010                           
 26011                           ;incstack = 0
 26012  002FC4  0101               	movlb	1	; () banked
 26013  002FC6  A58D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 26014  002FC8  D006               	goto	l13360
 26015                           
 26016                           ; BSR set to: 1
 26017                           ;radio_driver_SX1276.c: 792: {
 26018                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 26019  002FCA  0E80               	movlw	128
 26020  002FCC  0100               	movlb	0	; () banked
 26021  002FCE  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26022  002FD0  0E03               	movlw	3
 26023  002FD2  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26024  002FD4  0C03               	retlw	3
 26025  002FD6                     l13360:
 26026                           
 26027                           ; BSR set to: 1
 26028                           ;radio_driver_SX1276.c: 794: }
 26029                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 26030  002FD6  C18D  F099         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 26031  002FDA  0E03               	movlw	3
 26032  002FDC  0100               	movlb	0	; () banked
 26033  002FDE  1799               	andwf	??_RADIO_Transmit& (0+255),f,b
 26034  002FE0  E005               	bz	l13366
 26035                           
 26036                           ; BSR set to: 0
 26037                           ;radio_driver_SX1276.c: 797: {
 26038                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 26039  002FE2  0E80               	movlw	128
 26040  002FE4  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26041  002FE6  0E04               	movlw	4
 26042  002FE8  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26043  002FEA  0C04               	retlw	4
 26044  002FEC                     l13366:
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;radio_driver_SX1276.c: 799: }
 26048                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 26049  002FEC  0101               	movlb	1	; () banked
 26050  002FEE  5182               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26051  002FF0  E109               	bnz	l13374
 26052                           
 26053                           ; BSR set to: 1
 26054  002FF2  0E40               	movlw	64
 26055  002FF4  0100               	movlb	0	; () banked
 26056  002FF6  6598               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 26057  002FF8  D005               	goto	l13374
 26058                           
 26059                           ; BSR set to: 0
 26060                           ;radio_driver_SX1276.c: 802: {
 26061                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 26062  002FFA  0E80               	movlw	128
 26063  002FFC  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26064  002FFE  0E02               	movlw	2
 26065  003000  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26066  003002  0C02               	retlw	2
 26067  003004                     l13374:
 26068                           
 26069                           ;radio_driver_SX1276.c: 804: }
 26070                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 26071  003004  0101               	movlb	1	; () banked
 26072  003006  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26073  003008  EC9B  F03A         	call	_SwTimerStop
 26074                           
 26075                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 26076  00300C  0E00               	movlw	0
 26077  00300E  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 26078  003010  0E04               	movlw	4
 26079  003012  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 26080  003014  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 26081                           
 26082                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 26083  003018  0101               	movlb	1	; () banked
 26084  00301A  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26085  00301C  E123               	bnz	l13392
 26086                           
 26087                           ; BSR set to: 1
 26088                           ;radio_driver_SX1276.c: 813: {
 26089                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 26090  00301E  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26091  003022  0E22               	movlw	34
 26092  003024  EC6E  F03A         	call	_RADIO_RegisterWrite
 26093                           
 26094                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 26095  003028  0E0A               	movlw	10
 26096  00302A  EC97  F039         	call	_RADIO_RegisterRead
 26097  00302E  6FA5               	movwf	RADIO_Transmit@regValue& (0+255),b
 26098                           
 26099                           ; BSR set to: 0
 26100                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 26101  003030  0EF0               	movlw	240
 26102  003032  17A5               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 26103                           
 26104                           ; BSR set to: 0
 26105                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 26106  003034  87A5               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 26107                           
 26108                           ; BSR set to: 0
 26109                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 26110  003036  C0A5  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 26111  00303A  0E0A               	movlw	10
 26112  00303C  EC6E  F03A         	call	_RADIO_RegisterWrite
 26113                           
 26114                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 26115  003040  0E40               	movlw	64
 26116  003042  0100               	movlb	0	; () banked
 26117  003044  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26118  003046  EC6E  F03A         	call	_RADIO_RegisterWrite
 26119                           
 26120                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 26121  00304A  0100               	movlb	0	; () banked
 26122  00304C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26123  00304E  0E41               	movlw	65
 26124  003050  EC6E  F03A         	call	_RADIO_RegisterWrite
 26125                           
 26126                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 26127  003054  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26128  003058  0E01               	movlw	1
 26129  00305A  0100               	movlb	0	; () banked
 26130  00305C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26131  00305E  EC6E  F028         	call	_RADIO_WriteMode
 26132                           
 26133                           ;radio_driver_SX1276.c: 828: }
 26134  003062  D00A               	goto	l13394
 26135  003064                     l13392:
 26136                           
 26137                           ; BSR set to: 1
 26138                           ;radio_driver_SX1276.c: 829: else
 26139                           ;radio_driver_SX1276.c: 830: {
 26140                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 26141  003064  0100               	movlb	0	; () banked
 26142  003066  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26143  003068  0E40               	movlw	64
 26144  00306A  EC6E  F03A         	call	_RADIO_RegisterWrite
 26145                           
 26146                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 26147  00306E  0100               	movlb	0	; () banked
 26148  003070  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26149  003072  0E41               	movlw	65
 26150  003074  EC6E  F03A         	call	_RADIO_RegisterWrite
 26151  003078                     l13394:
 26152                           
 26153                           ;radio_driver_SX1276.c: 834: }
 26154                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 26155  003078  0101               	movlb	1	; () banked
 26156  00307A  5182               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26157  00307C  E105               	bnz	l13398
 26158                           
 26159                           ; BSR set to: 1
 26160                           ;radio_driver_SX1276.c: 837: {
 26161                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 26162  00307E  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26163  003082  0E00               	movlw	0
 26164  003084  EC6E  F03A         	call	_RADIO_RegisterWrite
 26165  003088                     l13398:
 26166                           
 26167                           ;radio_driver_SX1276.c: 840: }
 26168                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 26169  003088  ECA5  F03C         	call	_HALSPICSAssert	;wreg free
 26170                           
 26171                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 26172  00308C  0E80               	movlw	128
 26173  00308E  EC4C  F03C         	call	_HALSPISend
 26174                           
 26175                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 26176  003092  0100               	movlb	0	; () banked
 26177  003094  6BA6               	clrf	RADIO_Transmit@i& (0+255),b
 26178  003096  D00B               	goto	l13408
 26179  003098                     l13404:
 26180                           
 26181                           ; BSR set to: 0
 26182                           ;radio_driver_SX1276.c: 846: {
 26183                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 26184  003098  51A6               	movf	RADIO_Transmit@i& (0+255),w,b
 26185  00309A  2596               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 26186  00309C  6ED9               	movwf	fsr2l,c
 26187  00309E  0E00               	movlw	0
 26188  0030A0  2197               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 26189  0030A2  6EDA               	movwf	fsr2h,c
 26190  0030A4  50DF               	movf	indf2,w,c
 26191  0030A6  EC4C  F03C         	call	_HALSPISend
 26192  0030AA  0100               	movlb	0	; () banked
 26193  0030AC  2BA6               	incf	RADIO_Transmit@i& (0+255),f,b
 26194  0030AE                     l13408:
 26195                           
 26196                           ; BSR set to: 0
 26197  0030AE  5198               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 26198  0030B0  5DA6               	subwf	RADIO_Transmit@i& (0+255),w,b
 26199  0030B2  E3F2               	bnc	l13404
 26200                           
 26201                           ; BSR set to: 0
 26202                           ;radio_driver_SX1276.c: 848: }
 26203                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 26204  0030B4  ECA3  F03C         	call	_HALSPICSDeassert	;wreg free
 26205                           
 26206                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 26207  0030B8  0101               	movlb	1	; () banked
 26208  0030BA  818D               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 26209                           
 26210                           ; BSR set to: 1
 26211                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 26212  0030BC  0EE7               	movlw	231
 26213  0030BE  178D               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 26214                           
 26215                           ; BSR set to: 1
 26216                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 26217  0030C0  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26218  0030C4  0E00               	movlw	0
 26219  0030C6  0100               	movlb	0	; () banked
 26220  0030C8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26221  0030CA  0E03               	movlw	3
 26222  0030CC  EC6E  F028         	call	_RADIO_WriteMode
 26223                           
 26224                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 26225  0030D0  0100               	movlb	0	; () banked
 26226  0030D2  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 26227  0030D4  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 26228  0030D6  0E0A               	movlw	10
 26229  0030D8  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 26230  0030DA  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 26231  0030DC  0101               	movlb	1	; () banked
 26232  0030DE  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26233  0030E0  EC75  F036         	call	_SwTimerSetTimeout
 26234                           
 26235                           ; BSR set to: 0
 26236                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 26237  0030E4  0101               	movlb	1	; () banked
 26238  0030E6  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26239  0030E8  EC58  F02E         	call	_SwTimerStart
 26240                           
 26241                           ; BSR set to: 0
 26242                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 26243  0030EC  0101               	movlb	1	; () banked
 26244  0030EE  5194               	movf	(_RadioConfiguration+42)& (0+255),w,b
 26245  0030F0  1195               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 26246  0030F2  1196               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 26247  0030F4  1197               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 26248  0030F6  E059               	bz	l13438
 26249                           
 26250                           ; BSR set to: 1
 26251                           ;radio_driver_SX1276.c: 866: {
 26252                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26253  0030F8  5197               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26254  0030FA  E106               	bnz	u14780
 26255  0030FC  2994               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26256  0030FE  0EFF               	movlw	255
 26257  003100  5995               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26258  003102  0E0F               	movlw	15
 26259  003104  5996               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26260  003106  E319               	bnc	l13432
 26261  003108                     u14780:
 26262                           
 26263                           ; BSR set to: 1
 26264  003108  C194  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 26265  00310C  C195  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26266  003110  C196  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26267  003114  C197  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26268  003118  0E7D               	movlw	125
 26269  00311A  0100               	movlb	0	; () banked
 26270  00311C  6F68               	movwf	___lldiv@divisor& (0+255),b
 26271  00311E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26272  003120  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26273  003122  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26274  003124  EC1A  F030         	call	___lldiv	;wreg free
 26275  003128  0E0C               	movlw	12
 26276  00312A                     u14795:
 26277  00312A  90D8               	bcf	status,0,c
 26278  00312C  3764               	rlcf	?___lldiv& (0+255),f,b
 26279  00312E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 26280  003130  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 26281  003132  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 26282  003134  2EE8               	decfsz	wreg,f,c
 26283  003136  D7F9               	goto	u14795
 26284  003138  D020               	goto	L15
 26285  00313A                     l13432:
 26286                           
 26287                           ; BSR set to: 1
 26288  00313A  C194  F099         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 26289  00313E  C195  F09A         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 26290  003142  C196  F09B         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 26291  003146  C197  F09C         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 26292  00314A  0E0C               	movlw	12
 26293  00314C                     u14805:
 26294  00314C  90D8               	bcf	status,0,c
 26295  00314E  0100               	movlb	0	; () banked
 26296  003150  3799               	rlcf	??_RADIO_Transmit& (0+255),f,b
 26297  003152  379A               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 26298  003154  379B               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 26299  003156  379C               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 26300  003158  2EE8               	decfsz	wreg,f,c
 26301  00315A  D7F8               	goto	u14805
 26302  00315C  C099  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 26303  003160  C09A  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 26304  003164  C09B  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 26305  003168  C09C  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 26306  00316C  0E7D               	movlw	125
 26307  00316E  6F68               	movwf	___lldiv@divisor& (0+255),b
 26308  003170  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26309  003172  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26310  003174  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26311  003176  EC1A  F030         	call	___lldiv	;wreg free
 26312  00317A                     L15:
 26313  00317A  C064  F0A1         	movff	?___lldiv,_RADIO_Transmit$1196
 26314  00317E  C065  F0A2         	movff	?___lldiv+1,_RADIO_Transmit$1196+1
 26315  003182  C066  F0A3         	movff	?___lldiv+2,_RADIO_Transmit$1196+2
 26316  003186  C067  F0A4         	movff	?___lldiv+3,_RADIO_Transmit$1196+3
 26317                           
 26318                           ; BSR set to: 0
 26319  00318A  C0A1  F071         	movff	_RADIO_Transmit$1196,SwTimerSetTimeout@timeout
 26320  00318E  C0A2  F072         	movff	_RADIO_Transmit$1196+1,SwTimerSetTimeout@timeout+1
 26321  003192  C0A3  F073         	movff	_RADIO_Transmit$1196+2,SwTimerSetTimeout@timeout+2
 26322  003196  C0A4  F074         	movff	_RADIO_Transmit$1196+3,SwTimerSetTimeout@timeout+3
 26323  00319A  0101               	movlb	1	; () banked
 26324  00319C  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26325  00319E  EC75  F036         	call	_SwTimerSetTimeout
 26326                           
 26327                           ; BSR set to: 0
 26328                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26329  0031A2  0101               	movlb	1	; () banked
 26330  0031A4  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26331  0031A6  EC58  F02E         	call	_SwTimerStart
 26332  0031AA                     l13438:
 26333                           
 26334                           ;radio_driver_SX1276.c: 869: }
 26335                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 26336  0031AA  0100               	movlb	0	; () banked
 26337  0031AC  6B96               	clrf	?_RADIO_Transmit& (0+255),b
 26338  0031AE  6B97               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 26339                           
 26340                           ; BSR set to: 0
 26341  0031B0  0012               	return		;funcret
 26342  0031B2                     __end_of_RADIO_Transmit:
 26343                           	opt stack 0
 26344                           tosu	equ	0xFFF
 26345                           tosh	equ	0xFFE
 26346                           tosl	equ	0xFFD
 26347                           pclath	equ	0xFFA
 26348                           tblptru	equ	0xFF8
 26349                           tblptrh	equ	0xFF7
 26350                           tblptrl	equ	0xFF6
 26351                           tablat	equ	0xFF5
 26352                           prodh	equ	0xFF4
 26353                           prodl	equ	0xFF3
 26354                           intcon	equ	0xFF2
 26355                           intcon2	equ	0xFF1
 26356                           intcon3	equ	0xFF0
 26357                           indf0	equ	0xFEF
 26358                           postinc0	equ	0xFEE
 26359                           fsr0h	equ	0xFEA
 26360                           fsr0l	equ	0xFE9
 26361                           wreg	equ	0xFE8
 26362                           postinc1	equ	0xFE6
 26363                           postdec1	equ	0xFE5
 26364                           plusw1	equ	0xFE3
 26365                           fsr1h	equ	0xFE2
 26366                           fsr1l	equ	0xFE1
 26367                           indf2	equ	0xFDF
 26368                           postinc2	equ	0xFDE
 26369                           postdec2	equ	0xFDD
 26370                           plusw2	equ	0xFDB
 26371                           fsr2h	equ	0xFDA
 26372                           fsr2l	equ	0xFD9
 26373                           status	equ	0xFD8
 26374                           
 26375 ;; *************** function _RADIO_WriteConfiguration *****************
 26376 ;; Defined at:
 26377 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26378 ;; Parameters:    Size  Location     Type
 26379 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 26380 ;; Auto vars:     Size  Location     Type
 26381 ;;  tempValue       4   34[BANK0 ] unsigned long 
 26382 ;;  regValue        1   38[BANK0 ] unsigned char 
 26383 ;;  i               1   33[BANK0 ] unsigned char 
 26384 ;; Return value:  Size  Location     Type
 26385 ;;                  1    wreg      void 
 26386 ;; Registers used:
 26387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26388 ;; Tracked objects:
 26389 ;;		On entry : F/0
 26390 ;;		On exit  : 0/0
 26391 ;;		Unchanged: 0/0
 26392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26394 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26395 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26396 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26397 ;;Total ram usage:       10 bytes
 26398 ;; Hardware stack levels used:    1
 26399 ;; Hardware stack levels required when called:   11
 26400 ;; This function calls:
 26401 ;;		_RADIO_RegisterRead
 26402 ;;		_RADIO_RegisterWrite
 26403 ;;		_RADIO_WriteFSKBitRate
 26404 ;;		_RADIO_WriteFSKFrequencyDeviation
 26405 ;;		_RADIO_WriteFrequency
 26406 ;;		_RADIO_WriteMode
 26407 ;;		_RADIO_WritePower
 26408 ;;		___lmul
 26409 ;; This function is called by:
 26410 ;;		_RADIO_Transmit
 26411 ;;		_RADIO_ReceiveStart
 26412 ;; This function uses a non-reentrant model
 26413 ;;
 26414                           
 26415                           	psect	text142
 26416  0013A0                     __ptext142:
 26417                           	opt stack 0
 26418  0013A0                     _RADIO_WriteConfiguration:
 26419                           	opt stack 16
 26420                           
 26421                           ; BSR set to: 0
 26422                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 26423                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 26424                           ;radio_driver_SX1276.c: 537: uint8_t i;
 26425                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26426                           
 26427                           ; BSR set to: 0
 26428                           ;incstack = 0
 26429  0013A0  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26430  0013A4  0E00               	movlw	0
 26431  0013A6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26432  0013A8  EC6E  F028         	call	_RADIO_WriteMode
 26433                           
 26434                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26435  0013AC  C16A  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26436  0013B0  C16B  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26437  0013B4  C16C  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26438  0013B8  C16D  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26439  0013BC  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
 26440                           
 26441                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 26442  0013C0  0101               	movlb	1	; () banked
 26443  0013C2  5185               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26444  0013C4  EC42  F029         	call	_RADIO_WritePower
 26445                           
 26446                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 26447  0013C8  0101               	movlb	1	; () banked
 26448  0013CA  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26449  0013CC  E001 D1B6          	bnz	l12584
 26450                           
 26451                           ; BSR set to: 1
 26452                           ;radio_driver_SX1276.c: 545: {
 26453                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26454  0013D0  C178  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26455  0013D4  0E39               	movlw	57
 26456  0013D6  EC6E  F03A         	call	_RADIO_RegisterWrite
 26457                           
 26458                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 26459                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 26460                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 26461                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 26462  0013DA  C18C  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26463  0013DE  0E01               	movlw	1
 26464  0013E0  0100               	movlb	0	; () banked
 26465  0013E2  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26466  0013E4  0101               	movlb	1	; () banked
 26467  0013E6  90D8               	bcf	status,0,c
 26468  0013E8  358B               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26469  0013EA  0100               	movlb	0	; () banked
 26470  0013EC  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26471  0013EE  0101               	movlb	1	; () banked
 26472  0013F0  3984               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26473  0013F2  0BF0               	andlw	240
 26474  0013F4  0100               	movlb	0	; () banked
 26475  0013F6  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26476  0013F8  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26477  0013FA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26478  0013FC  0E1D               	movlw	29
 26479  0013FE  EC6E  F03A         	call	_RADIO_RegisterWrite
 26480                           
 26481                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 26482                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 26483                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26484                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 26485  001402  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 26486  001406  0E03               	movlw	3
 26487  001408  0100               	movlb	0	; () banked
 26488  00140A  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26489  00140C  C186  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 26490  001410  0E01               	movlw	1
 26491  001412  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26492  001414  90D8               	bcf	status,0,c
 26493  001416  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26494  001418  90D8               	bcf	status,0,c
 26495  00141A  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26496  00141C  0101               	movlb	1	; () banked
 26497  00141E  3983               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26498  001420  0BF0               	andlw	240
 26499  001422  0100               	movlb	0	; () banked
 26500  001424  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26501  001426  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26502  001428  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26503  00142A  0E1E               	movlw	30
 26504  00142C  EC6E  F03A         	call	_RADIO_RegisterWrite
 26505                           
 26506                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 26507  001430  0101               	movlb	1	; () banked
 26508  001432  5188               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26509  001434  1189               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26510  001436  E060               	bz	l447
 26511                           
 26512                           ; BSR set to: 1
 26513                           ;radio_driver_SX1276.c: 561: {
 26514                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 26515  001438  C188  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26516  00143C  C189  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26517  001440  0100               	movlb	0	; () banked
 26518  001442  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26519  001444  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26520                           
 26521                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 26522  001446  D042               	goto	l12476
 26523  001448                     l12468:
 26524                           
 26525                           ; BSR set to: 1
 26526                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 26527  001448  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26528  00144C  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26529  001450  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26530  001454  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26531  001458  0E7D               	movlw	125
 26532  00145A  0100               	movlb	0	; () banked
 26533  00145C  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26534  00145E  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26535  001460  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26536  001462  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26537  001464  EC9C  F02E         	call	___lmul	;wreg free
 26538  001468  D022               	goto	L17
 26539  00146A                     l12470:
 26540                           
 26541                           ; BSR set to: 1
 26542                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 26543  00146A  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26544  00146E  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26545  001472  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26546  001476  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26547  00147A  0EFA               	movlw	250
 26548  00147C  0100               	movlb	0	; () banked
 26549  00147E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26550  001480  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26551  001482  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26552  001484  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26553  001486  EC9C  F02E         	call	___lmul	;wreg free
 26554  00148A  D011               	goto	L17
 26555  00148C                     l12472:
 26556                           
 26557                           ; BSR set to: 1
 26558                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 26559  00148C  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26560  001490  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26561  001494  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26562  001498  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26563  00149C  0EF4               	movlw	244
 26564  00149E  0100               	movlb	0	; () banked
 26565  0014A0  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26566  0014A2  0E01               	movlw	1
 26567  0014A4  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26568  0014A6  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26569  0014A8  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26570  0014AA  EC9C  F02E         	call	___lmul	;wreg free
 26571  0014AE                     L17:
 26572  0014AE  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26573  0014B2  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26574  0014B6  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26575  0014BA  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26576                           
 26577                           ;radio_driver_SX1276.c: 574: break;
 26578  0014BE  D00F               	goto	l12478
 26579  0014C0                     l453:
 26580                           
 26581                           ; BSR set to: 1
 26582                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 26583  0014C0  0100               	movlb	0	; () banked
 26584  0014C2  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26585  0014C4  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26586  0014C6  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26587  0014C8  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26588                           
 26589                           ;radio_driver_SX1276.c: 578: break;
 26590  0014CA  D009               	goto	l12478
 26591  0014CC                     l12476:
 26592                           
 26593                           ; BSR set to: 0
 26594  0014CC  0101               	movlb	1	; () banked
 26595  0014CE  5184               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26596                           
 26597                           ; Switch size 1, requested type "speed"
 26598                           ; Number of cases is 3, Range of values is 7 to 9
 26599                           ; switch strategies available:
 26600                           ; Name         Instructions Cycles
 26601                           ; simple_byte           10     6 (average)
 26602                           ;	Chosen strategy is simple_byte
 26603  0014D0  0A07               	xorlw	7	; case 7
 26604  0014D2  E0BA               	bz	l12468
 26605  0014D4  0A0F               	xorlw	15	; case 8
 26606  0014D6  E0C9               	bz	l12470
 26607  0014D8  0A01               	xorlw	1	; case 9
 26608  0014DA  E0D8               	bz	l12472
 26609  0014DC  D7F1               	goto	l453
 26610  0014DE                     l12478:
 26611                           
 26612                           ; BSR set to: 0
 26613                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 26614  0014DE  0101               	movlb	1	; () banked
 26615  0014E0  2983               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26616  0014E2  0100               	movlb	0	; () banked
 26617  0014E4  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26618  0014E6  D005               	goto	u13330
 26619  0014E8                     u13335:
 26620  0014E8  90D8               	bcf	status,0,c
 26621  0014EA  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26622  0014EC  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26623  0014EE  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26624  0014F0  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26625  0014F2                     u13330:
 26626  0014F2  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26627  0014F4  D7F9               	goto	u13335
 26628                           
 26629                           ;radio_driver_SX1276.c: 582: }
 26630  0014F6  D005               	goto	l12480
 26631  0014F8                     l447:
 26632                           
 26633                           ; BSR set to: 1
 26634                           ;radio_driver_SX1276.c: 583: else
 26635                           ;radio_driver_SX1276.c: 584: {
 26636                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 26637  0014F8  0100               	movlb	0	; () banked
 26638  0014FA  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26639  0014FC  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26640  0014FE  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26641  001500  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26642  001502                     l12480:
 26643                           
 26644                           ;radio_driver_SX1276.c: 586: }
 26645                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26646  001502  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26647  001506  0E24               	movlw	36
 26648  001508  EC6E  F03A         	call	_RADIO_RegisterWrite
 26649                           
 26650                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26651  00150C  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26652  001510  0E1F               	movlw	31
 26653  001512  EC6E  F03A         	call	_RADIO_RegisterWrite
 26654                           
 26655                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 26656  001516  0E26               	movlw	38
 26657  001518  EC97  F039         	call	_RADIO_RegisterRead
 26658  00151C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26659                           
 26660                           ; BSR set to: 0
 26661                           ;radio_driver_SX1276.c: 596: if (
 26662                           ;radio_driver_SX1276.c: 597: (
 26663                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 26664                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26665                           ;radio_driver_SX1276.c: 600: ) ||
 26666                           ;radio_driver_SX1276.c: 601: (
 26667                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 26668                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 26669                           ;radio_driver_SX1276.c: 604: )
 26670                           ;radio_driver_SX1276.c: 605: )
 26671  00151E  0E0C               	movlw	12
 26672  001520  0101               	movlb	1	; () banked
 26673  001522  1983               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26674  001524  E106               	bnz	l12488
 26675                           
 26676                           ; BSR set to: 1
 26677  001526  0E07               	movlw	7
 26678  001528  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26679  00152A  E009               	bz	l12492
 26680                           
 26681                           ; BSR set to: 1
 26682  00152C  0E08               	movlw	8
 26683  00152E  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26684  001530  E006               	bz	l12492
 26685  001532                     l12488:
 26686                           
 26687                           ; BSR set to: 1
 26688  001532  0E0B               	movlw	11
 26689  001534  1983               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26690  001536  E106               	bnz	l12494
 26691                           
 26692                           ; BSR set to: 1
 26693  001538  0E07               	movlw	7
 26694  00153A  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26695  00153C  E103               	bnz	l12494
 26696  00153E                     l12492:
 26697                           
 26698                           ; BSR set to: 1
 26699                           ;radio_driver_SX1276.c: 606: {
 26700                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 26701  00153E  0100               	movlb	0	; () banked
 26702  001540  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26703                           
 26704                           ;radio_driver_SX1276.c: 608: }
 26705  001542  D002               	goto	l460
 26706  001544                     l12494:
 26707                           
 26708                           ; BSR set to: 1
 26709                           ;radio_driver_SX1276.c: 609: else
 26710                           ;radio_driver_SX1276.c: 610: {
 26711                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 26712  001544  0100               	movlb	0	; () banked
 26713  001546  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26714  001548                     l460:
 26715                           
 26716                           ; BSR set to: 0
 26717                           ;radio_driver_SX1276.c: 612: }
 26718                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 26719  001548  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26720                           
 26721                           ; BSR set to: 0
 26722                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 26723  00154A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26724  00154E  0E26               	movlw	38
 26725  001550  EC6E  F03A         	call	_RADIO_RegisterWrite
 26726                           
 26727                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 26728  001554  0E31               	movlw	49
 26729  001556  EC97  F039         	call	_RADIO_RegisterRead
 26730  00155A  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26731                           
 26732                           ; BSR set to: 0
 26733                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 26734  00155C  0EF8               	movlw	248
 26735  00155E  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26736                           
 26737                           ; BSR set to: 0
 26738                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 26739  001560  0E03               	movlw	3
 26740  001562  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26741                           
 26742                           ; BSR set to: 0
 26743                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 26744  001564  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26745  001568  0E31               	movlw	49
 26746  00156A  EC6E  F03A         	call	_RADIO_RegisterWrite
 26747                           
 26748                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 26749  00156E  0E0A               	movlw	10
 26750  001570  0100               	movlb	0	; () banked
 26751  001572  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26752  001574  0E37               	movlw	55
 26753  001576  EC6E  F03A         	call	_RADIO_RegisterWrite
 26754                           
 26755                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 26756  00157A  0E12               	movlw	18
 26757  00157C  0101               	movlb	1	; () banked
 26758  00157E  199B               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26759  001580  E129               	bnz	l12532
 26760                           
 26761                           ; BSR set to: 1
 26762                           ;radio_driver_SX1276.c: 626: {
 26763                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26764                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26765  001582  0E07               	movlw	7
 26766  001584  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26767  001586  E003               	bz	l12514
 26768                           
 26769                           ; BSR set to: 1
 26770  001588  0E08               	movlw	8
 26771  00158A  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26772  00158C  E115               	bnz	l12524
 26773  00158E                     l12514:
 26774                           
 26775                           ; BSR set to: 1
 26776                           ;radio_driver_SX1276.c: 631: {
 26777                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 26778  00158E  0E31               	movlw	49
 26779  001590  EC97  F039         	call	_RADIO_RegisterRead
 26780  001594  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26781                           
 26782                           ; BSR set to: 0
 26783                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 26784  001596  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26785                           
 26786                           ; BSR set to: 0
 26787                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 26788  001598  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26789  00159C  0E31               	movlw	49
 26790  00159E  EC6E  F03A         	call	_RADIO_RegisterWrite
 26791                           
 26792                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 26793  0015A2  0E40               	movlw	64
 26794  0015A4  0100               	movlb	0	; () banked
 26795  0015A6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26796  0015A8  0E2F               	movlw	47
 26797  0015AA  EC6E  F03A         	call	_RADIO_RegisterWrite
 26798                           
 26799                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 26800  0015AE  0100               	movlb	0	; () banked
 26801  0015B0  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26802  0015B2  0E30               	movlw	48
 26803  0015B4  EC6E  F03A         	call	_RADIO_RegisterWrite
 26804  0015B8                     l12524:
 26805                           
 26806                           ;radio_driver_SX1276.c: 637: }
 26807                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26808  0015B8  0E09               	movlw	9
 26809  0015BA  0101               	movlb	1	; () banked
 26810  0015BC  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26811  0015BE  E10A               	bnz	l12532
 26812                           
 26813                           ; BSR set to: 1
 26814                           ;radio_driver_SX1276.c: 640: {
 26815                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 26816  0015C0  0E31               	movlw	49
 26817  0015C2  EC97  F039         	call	_RADIO_RegisterRead
 26818  0015C6  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26819                           
 26820                           ; BSR set to: 0
 26821                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 26822  0015C8  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26823                           
 26824                           ; BSR set to: 0
 26825                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 26826  0015CA  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26827  0015CE  0E31               	movlw	49
 26828  0015D0  EC6E  F03A         	call	_RADIO_RegisterWrite
 26829  0015D4                     l12532:
 26830                           
 26831                           ;radio_driver_SX1276.c: 644: }
 26832                           ;radio_driver_SX1276.c: 645: }
 26833                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 26834  0015D4  0E33               	movlw	51
 26835  0015D6  EC97  F039         	call	_RADIO_RegisterRead
 26836  0015DA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26837                           
 26838                           ; BSR set to: 0
 26839                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 26840  0015DC  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26841                           
 26842                           ; BSR set to: 0
 26843                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 26844  0015DE  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26845                           
 26846                           ; BSR set to: 0
 26847                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26848  0015E0  C18A  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26849  0015E4  0E01               	movlw	1
 26850  0015E6  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26851  0015E8  0E06               	movlw	6
 26852  0015EA  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26853  0015EC                     u13435:
 26854  0015EC  90D8               	bcf	status,0,c
 26855  0015EE  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26856  0015F0  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26857  0015F2  D7FC               	goto	u13435
 26858  0015F4  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26859  0015F6  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26860                           
 26861                           ; BSR set to: 0
 26862                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 26863  0015F8  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26864  0015FC  0E33               	movlw	51
 26865  0015FE  EC6E  F03A         	call	_RADIO_RegisterWrite
 26866                           
 26867                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26868  001602  C18A  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26869  001606  0E01               	movlw	1
 26870  001608  0100               	movlb	0	; () banked
 26871  00160A  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26872  00160C  90D8               	bcf	status,0,c
 26873  00160E  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26874  001610  90D8               	bcf	status,0,c
 26875  001612  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26876  001614  0AFF               	xorlw	255
 26877  001616  0B1D               	andlw	29
 26878  001618  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26879                           
 26880                           ; BSR set to: 0
 26881                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 26882  00161A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26883  00161E  0E3B               	movlw	59
 26884  001620  EC6E  F03A         	call	_RADIO_RegisterWrite
 26885                           
 26886                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26887  001624  0101               	movlb	1	; () banked
 26888  001626  5177               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26889  001628  0100               	movlb	0	; () banked
 26890  00162A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26891  00162C  0E20               	movlw	32
 26892  00162E  EC6E  F03A         	call	_RADIO_RegisterWrite
 26893                           
 26894                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26895  001632  C176  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26896  001636  0E21               	movlw	33
 26897  001638  EC6E  F03A         	call	_RADIO_RegisterWrite
 26898                           
 26899                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 26900  00163C  0100               	movlb	0	; () banked
 26901  00163E  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26902  001640  0E0D               	movlw	13
 26903  001642  EC6E  F03A         	call	_RADIO_RegisterWrite
 26904                           
 26905                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 26906  001646  0100               	movlb	0	; () banked
 26907  001648  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26908  00164A  0E0E               	movlw	14
 26909  00164C  EC6E  F03A         	call	_RADIO_RegisterWrite
 26910                           
 26911                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 26912  001650  0100               	movlb	0	; () banked
 26913  001652  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26914  001654  0E0F               	movlw	15
 26915  001656  EC6E  F03A         	call	_RADIO_RegisterWrite
 26916                           
 26917                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 26918  00165A  0E12               	movlw	18
 26919  00165C  0101               	movlb	1	; () banked
 26920  00165E  199B               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26921  001660  E168               	bnz	l466
 26922                           
 26923                           ; BSR set to: 1
 26924                           ;radio_driver_SX1276.c: 665: {
 26925                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26926                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 26927                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 26928                           ;radio_driver_SX1276.c: 669: )
 26929  001662  0E09               	movlw	9
 26930  001664  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26931  001666  E11E               	bnz	l12566
 26932                           
 26933                           ; BSR set to: 1
 26934  001668  0E80               	movlw	128
 26935  00166A  5D6A               	subwf	_RadioConfiguration& (0+255),w,b
 26936  00166C  0E13               	movlw	19
 26937  00166E  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26938  001670  0E61               	movlw	97
 26939  001672  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26940  001674  0E33               	movlw	51
 26941  001676  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26942  001678  E315               	bnc	l12566
 26943                           
 26944                           ; BSR set to: 1
 26945  00167A  056A               	decf	_RadioConfiguration& (0+255),w,b
 26946  00167C  0EF7               	movlw	247
 26947  00167E  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26948  001680  0ECB               	movlw	203
 26949  001682  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26950  001684  0E3C               	movlw	60
 26951  001686  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26952  001688  E20D               	bc	l12566
 26953                           
 26954                           ; BSR set to: 1
 26955                           ;radio_driver_SX1276.c: 670: {
 26956                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 26957  00168A  0E02               	movlw	2
 26958  00168C  0100               	movlb	0	; () banked
 26959  00168E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26960  001690  0E36               	movlw	54
 26961  001692  EC6E  F03A         	call	_RADIO_RegisterWrite
 26962                           
 26963                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 26964  001696  0E64               	movlw	100
 26965  001698  0100               	movlb	0	; () banked
 26966  00169A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26967  00169C  0E3A               	movlw	58
 26968  00169E  EC6E  F03A         	call	_RADIO_RegisterWrite
 26969                           
 26970                           ;radio_driver_SX1276.c: 673: }
 26971  0016A2  D028               	goto	l12576
 26972  0016A4                     l12566:
 26973                           
 26974                           ; BSR set to: 1
 26975                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26976                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 26977                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 26978                           ;radio_driver_SX1276.c: 677: )
 26979  0016A4  0E09               	movlw	9
 26980  0016A6  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26981  0016A8  E11F               	bnz	l12574
 26982                           
 26983                           ; BSR set to: 1
 26984  0016AA  0E80               	movlw	128
 26985  0016AC  5D6A               	subwf	_RadioConfiguration& (0+255),w,b
 26986  0016AE  0E1A               	movlw	26
 26987  0016B0  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26988  0016B2  0E70               	movlw	112
 26989  0016B4  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26990  0016B6  0E18               	movlw	24
 26991  0016B8  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26992  0016BA  E316               	bnc	l12574
 26993                           
 26994                           ; BSR set to: 1
 26995  0016BC  0E41               	movlw	65
 26996  0016BE  5D6A               	subwf	_RadioConfiguration& (0+255),w,b
 26997  0016C0  0EDD               	movlw	221
 26998  0016C2  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26999  0016C4  0E4A               	movlw	74
 27000  0016C6  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27001  0016C8  0E1F               	movlw	31
 27002  0016CA  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27003  0016CC  E20D               	bc	l12574
 27004                           
 27005                           ; BSR set to: 1
 27006                           ;radio_driver_SX1276.c: 678: {
 27007                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 27008  0016CE  0E02               	movlw	2
 27009  0016D0  0100               	movlb	0	; () banked
 27010  0016D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27011  0016D4  0E36               	movlw	54
 27012  0016D6  EC6E  F03A         	call	_RADIO_RegisterWrite
 27013                           
 27014                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 27015  0016DA  0E7F               	movlw	127
 27016  0016DC  0100               	movlb	0	; () banked
 27017  0016DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27018  0016E0  0E3A               	movlw	58
 27019  0016E2  EC6E  F03A         	call	_RADIO_RegisterWrite
 27020                           
 27021                           ;radio_driver_SX1276.c: 681: }
 27022  0016E6  D006               	goto	l12576
 27023  0016E8                     l12574:
 27024                           
 27025                           ; BSR set to: 1
 27026                           ;radio_driver_SX1276.c: 682: else
 27027                           ;radio_driver_SX1276.c: 683: {
 27028                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 27029  0016E8  0E03               	movlw	3
 27030  0016EA  0100               	movlb	0	; () banked
 27031  0016EC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27032  0016EE  0E36               	movlw	54
 27033  0016F0  EC6E  F03A         	call	_RADIO_RegisterWrite
 27034  0016F4                     l12576:
 27035                           
 27036                           ;radio_driver_SX1276.c: 685: }
 27037                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 27038  0016F4  0E09               	movlw	9
 27039  0016F6  0101               	movlb	1	; () banked
 27040  0016F8  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27041  0016FA  E10F               	bnz	l12582
 27042                           
 27043                           ; BSR set to: 1
 27044  0016FC  058A               	decf	(_RadioConfiguration+32)& (0+255),w,b
 27045  0016FE  E10D               	bnz	l12582
 27046                           
 27047                           ; BSR set to: 1
 27048                           ;radio_driver_SX1276.c: 689: {
 27049                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 27050  001700  0E65               	movlw	101
 27051  001702  0100               	movlb	0	; () banked
 27052  001704  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27053  001706  0E3A               	movlw	58
 27054  001708  EC6E  F03A         	call	_RADIO_RegisterWrite
 27055                           
 27056                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 27057  00170C  0E19               	movlw	25
 27058  00170E  0100               	movlb	0	; () banked
 27059  001710  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27060  001712  0E3B               	movlw	59
 27061  001714  EC6E  F03A         	call	_RADIO_RegisterWrite
 27062                           
 27063                           ;radio_driver_SX1276.c: 692: }
 27064  001718  D00C               	goto	l466
 27065  00171A                     l12582:
 27066                           
 27067                           ; BSR set to: 1
 27068                           ;radio_driver_SX1276.c: 693: else
 27069                           ;radio_driver_SX1276.c: 694: {
 27070                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 27071  00171A  0E65               	movlw	101
 27072  00171C  0100               	movlb	0	; () banked
 27073  00171E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27074  001720  0E3A               	movlw	58
 27075  001722  EC6E  F03A         	call	_RADIO_RegisterWrite
 27076                           
 27077                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 27078  001726  0E1D               	movlw	29
 27079  001728  0100               	movlb	0	; () banked
 27080  00172A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27081  00172C  0E3B               	movlw	59
 27082  00172E  EC6E  F03A         	call	_RADIO_RegisterWrite
 27083  001732                     l466:
 27084                           
 27085                           ;radio_driver_SX1276.c: 697: }
 27086                           ;radio_driver_SX1276.c: 698: }
 27087                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 27088  001732  0100               	movlb	0	; () banked
 27089  001734  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27090  001736  0E12               	movlw	18
 27091  001738  EF6E  F03A         	goto	_RADIO_RegisterWrite
 27092  00173C                     l12584:
 27093                           
 27094                           ; BSR set to: 1
 27095                           ;radio_driver_SX1276.c: 703: else
 27096                           ;radio_driver_SX1276.c: 704: {
 27097                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 27098  00173C  C16E  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 27099  001740  C16F  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 27100  001744  C170  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 27101  001748  C171  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 27102  00174C  EC67  F032         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 27103                           
 27104                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 27105  001750  C172  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 27106  001754  C173  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 27107  001758  C174  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 27108  00175C  C175  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 27109  001760  ECCA  F032         	call	_RADIO_WriteFSKBitRate	;wreg free
 27110                           
 27111                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 27112  001764  0101               	movlb	1	; () banked
 27113  001766  5177               	movf	(_RadioConfiguration+13)& (0+255),w,b
 27114  001768  0100               	movlb	0	; () banked
 27115  00176A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27116  00176C  0E25               	movlw	37
 27117  00176E  EC6E  F03A         	call	_RADIO_RegisterWrite
 27118                           
 27119                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 27120  001772  C176  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 27121  001776  0E26               	movlw	38
 27122  001778  EC6E  F03A         	call	_RADIO_RegisterWrite
 27123                           
 27124                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 27125  00177C  0E0A               	movlw	10
 27126  00177E  EC97  F039         	call	_RADIO_RegisterRead
 27127  001782  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27128                           
 27129                           ; BSR set to: 0
 27130                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 27131  001784  0E9F               	movlw	159
 27132  001786  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27133                           
 27134                           ; BSR set to: 0
 27135                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 27136  001788  0101               	movlb	1	; () banked
 27137  00178A  399D               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 27138  00178C  46E8               	rlncf	wreg,f,c
 27139  00178E  0BE0               	andlw	224
 27140  001790  0100               	movlb	0	; () banked
 27141  001792  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27142                           
 27143                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 27144  001794  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27145  001798  0E0A               	movlw	10
 27146  00179A  EC6E  F03A         	call	_RADIO_RegisterWrite
 27147                           
 27148                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 27149  00179E  0EC8               	movlw	200
 27150  0017A0  0100               	movlb	0	; () banked
 27151  0017A2  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27152                           
 27153                           ; BSR set to: 0
 27154                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 27155  0017A4  0101               	movlb	1	; () banked
 27156  0017A6  5186               	movf	(_RadioConfiguration+28)& (0+255),w,b
 27157  0017A8  E002               	bz	l12596
 27158                           
 27159                           ; BSR set to: 1
 27160                           ;radio_driver_SX1276.c: 722: {
 27161                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 27162  0017AA  0100               	movlb	0	; () banked
 27163  0017AC  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 27164  0017AE                     l12596:
 27165                           
 27166                           ;radio_driver_SX1276.c: 724: }
 27167                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 27168  0017AE  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27169  0017B2  0E30               	movlw	48
 27170  0017B4  EC6E  F03A         	call	_RADIO_RegisterWrite
 27171                           
 27172                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 27173  0017B8  0100               	movlb	0	; () banked
 27174  0017BA  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 27175  0017BC  D00E               	goto	l12604
 27176  0017BE                     l12600:
 27177                           
 27178                           ; BSR set to: 0
 27179                           ;radio_driver_SX1276.c: 729: {
 27180                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 27181  0017BE  0E79               	movlw	low (_RadioConfiguration+15)
 27182  0017C0  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27183  0017C2  6ED9               	movwf	fsr2l,c
 27184  0017C4  6ADA               	clrf	fsr2h,c
 27185  0017C6  0E01               	movlw	high (_RadioConfiguration+15)
 27186  0017C8  22DA               	addwfc	fsr2h,f,c
 27187  0017CA  50DF               	movf	indf2,w,c
 27188  0017CC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27189  0017CE  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27190  0017D0  0F28               	addlw	40
 27191  0017D2  EC6E  F03A         	call	_RADIO_RegisterWrite
 27192  0017D6  0100               	movlb	0	; () banked
 27193  0017D8  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 27194  0017DA                     l12604:
 27195                           
 27196                           ; BSR set to: 0
 27197  0017DA  0101               	movlb	1	; () banked
 27198  0017DC  5181               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27199  0017DE  0100               	movlb	0	; () banked
 27200  0017E0  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27201  0017E2  E3ED               	bnc	l12600
 27202                           
 27203                           ; BSR set to: 0
 27204                           ;radio_driver_SX1276.c: 733: }
 27205                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 27206  0017E4  0101               	movlb	1	; () banked
 27207  0017E6  5181               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27208  0017E8  E008               	bz	l12610
 27209                           
 27210                           ; BSR set to: 1
 27211                           ;radio_driver_SX1276.c: 737: {
 27212                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 27213  0017EA  0581               	decf	(_RadioConfiguration+23)& (0+255),w,b
 27214  0017EC  0910               	iorlw	16
 27215  0017EE  0100               	movlb	0	; () banked
 27216  0017F0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27217  0017F2  0E27               	movlw	39
 27218  0017F4  EC6E  F03A         	call	_RADIO_RegisterWrite
 27219                           
 27220                           ;radio_driver_SX1276.c: 739: }
 27221  0017F8  D005               	goto	l479
 27222  0017FA                     l12610:
 27223                           
 27224                           ; BSR set to: 1
 27225                           ;radio_driver_SX1276.c: 740: else
 27226                           ;radio_driver_SX1276.c: 741: {
 27227                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 27228  0017FA  0100               	movlb	0	; () banked
 27229  0017FC  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27230  0017FE  0E27               	movlw	39
 27231  001800  EC6E  F03A         	call	_RADIO_RegisterWrite
 27232  001804                     l479:
 27233                           
 27234                           ;radio_driver_SX1276.c: 743: }
 27235                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 27236  001804  0100               	movlb	0	; () banked
 27237  001806  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27238  001808  0E3E               	movlw	62
 27239  00180A  EC6E  F03A         	call	_RADIO_RegisterWrite
 27240                           
 27241                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 27242  00180E  0100               	movlb	0	; () banked
 27243  001810  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27244  001812  0E3F               	movlw	63
 27245  001814  EF6E  F03A         	goto	_RADIO_RegisterWrite
 27246  001818                     __end_of_RADIO_WriteConfiguration:
 27247                           	opt stack 0
 27248                           tosu	equ	0xFFF
 27249                           tosh	equ	0xFFE
 27250                           tosl	equ	0xFFD
 27251                           pclath	equ	0xFFA
 27252                           tblptru	equ	0xFF8
 27253                           tblptrh	equ	0xFF7
 27254                           tblptrl	equ	0xFF6
 27255                           tablat	equ	0xFF5
 27256                           prodh	equ	0xFF4
 27257                           prodl	equ	0xFF3
 27258                           intcon	equ	0xFF2
 27259                           intcon2	equ	0xFF1
 27260                           intcon3	equ	0xFF0
 27261                           indf0	equ	0xFEF
 27262                           postinc0	equ	0xFEE
 27263                           fsr0h	equ	0xFEA
 27264                           fsr0l	equ	0xFE9
 27265                           wreg	equ	0xFE8
 27266                           postinc1	equ	0xFE6
 27267                           postdec1	equ	0xFE5
 27268                           plusw1	equ	0xFE3
 27269                           fsr1h	equ	0xFE2
 27270                           fsr1l	equ	0xFE1
 27271                           indf2	equ	0xFDF
 27272                           postinc2	equ	0xFDE
 27273                           postdec2	equ	0xFDD
 27274                           plusw2	equ	0xFDB
 27275                           fsr2h	equ	0xFDA
 27276                           fsr2l	equ	0xFD9
 27277                           status	equ	0xFD8
 27278                           
 27279 ;; *************** function _RADIO_WritePower *****************
 27280 ;; Defined at:
 27281 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27282 ;; Parameters:    Size  Location     Type
 27283 ;;  power           1    wreg     char 
 27284 ;; Auto vars:     Size  Location     Type
 27285 ;;  power           1   10[BANK0 ] char 
 27286 ;;  paDac           1    9[BANK0 ] unsigned char 
 27287 ;;  ocp             1    8[BANK0 ] unsigned char 
 27288 ;; Return value:  Size  Location     Type
 27289 ;;                  1    wreg      void 
 27290 ;; Registers used:
 27291 ;;		wreg, status,2, status,0, cstack
 27292 ;; Tracked objects:
 27293 ;;		On entry : F/1
 27294 ;;		On exit  : 0/0
 27295 ;;		Unchanged: 0/0
 27296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27298 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27300 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27301 ;;Total ram usage:        3 bytes
 27302 ;; Hardware stack levels used:    1
 27303 ;; Hardware stack levels required when called:   10
 27304 ;; This function calls:
 27305 ;;		_RADIO_RegisterRead
 27306 ;;		_RADIO_RegisterWrite
 27307 ;; This function is called by:
 27308 ;;		_RADIO_WriteConfiguration
 27309 ;; This function uses a non-reentrant model
 27310 ;;
 27311                           
 27312                           	psect	text143
 27313  005284                     __ptext143:
 27314                           	opt stack 0
 27315  005284                     _RADIO_WritePower:
 27316                           	opt stack 16
 27317                           
 27318                           ;incstack = 0
 27319                           ;RADIO_WritePower@power stored from wreg
 27320  005284  0100               	movlb	0	; () banked
 27321  005286  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27322                           
 27323                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 27324                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 27325                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 27326  005288  0101               	movlb	1	; () banked
 27327  00528A  5187               	movf	(_RadioConfiguration+29)& (0+255),w,b
 27328  00528C  E127               	bnz	l12288
 27329                           
 27330                           ; BSR set to: 1
 27331                           ;radio_driver_SX1276.c: 348: {
 27332                           ;radio_driver_SX1276.c: 350: if (power < -3)
 27333  00528E  0100               	movlb	0	; () banked
 27334  005290  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27335  005292  0A80               	xorlw	128
 27336  005294  0F83               	addlw	131
 27337  005296  E202               	bc	l12268
 27338                           
 27339                           ; BSR set to: 0
 27340                           ;radio_driver_SX1276.c: 351: {
 27341                           ;radio_driver_SX1276.c: 352: power = -3;
 27342  005298  0EFD               	movlw	253
 27343  00529A  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27344  00529C                     l12268:
 27345                           
 27346                           ; BSR set to: 0
 27347                           ;radio_driver_SX1276.c: 353: }
 27348                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27349  00529C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27350  00529E  0A80               	xorlw	128
 27351  0052A0  0F70               	addlw	-144
 27352  0052A2  E302               	bnc	l12272
 27353                           
 27354                           ; BSR set to: 0
 27355                           ;radio_driver_SX1276.c: 355: {
 27356                           ;radio_driver_SX1276.c: 356: power = 15;
 27357  0052A4  0E0F               	movlw	15
 27358  0052A6  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27359  0052A8                     l12272:
 27360                           
 27361                           ; BSR set to: 0
 27362                           ;radio_driver_SX1276.c: 357: }
 27363                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27364  0052A8  0E4D               	movlw	77
 27365  0052AA  EC97  F039         	call	_RADIO_RegisterRead
 27366  0052AE  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27367                           
 27368                           ; BSR set to: 0
 27369                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27370  0052B0  0EF8               	movlw	248
 27371  0052B2  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27372                           
 27373                           ; BSR set to: 0
 27374                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27375  0052B4  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27376                           
 27377                           ; BSR set to: 0
 27378                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27379  0052B6  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27380  0052BA  0E4D               	movlw	77
 27381  0052BC  EC6E  F03A         	call	_RADIO_RegisterWrite
 27382                           
 27383                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27384  0052C0  0100               	movlb	0	; () banked
 27385  0052C2  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 27386  0052C4  D005               	goto	l12286
 27387                           
 27388                           ; BSR set to: 0
 27389                           ;radio_driver_SX1276.c: 365: {
 27390                           ;radio_driver_SX1276.c: 369: power += 3;
 27391  0052C6  0E03               	movlw	3
 27392  0052C8  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27393                           
 27394                           ; BSR set to: 0
 27395                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27396  0052CA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27397  0052CC  0920               	iorlw	32
 27398  0052CE  D002               	goto	L19
 27399  0052D0                     l12286:
 27400                           
 27401                           ; BSR set to: 0
 27402                           ;radio_driver_SX1276.c: 372: else
 27403                           ;radio_driver_SX1276.c: 373: {
 27404                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27405  0052D0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27406  0052D2  0970               	iorlw	112
 27407  0052D4                     L19:
 27408  0052D4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27409  0052D6  0E09               	movlw	9
 27410  0052D8  EF6E  F03A         	goto	_RADIO_RegisterWrite
 27411  0052DC                     l12288:
 27412                           
 27413                           ; BSR set to: 1
 27414                           ;radio_driver_SX1276.c: 380: else
 27415                           ;radio_driver_SX1276.c: 381: {
 27416                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27417  0052DC  0100               	movlb	0	; () banked
 27418  0052DE  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27419  0052E0  0A80               	xorlw	128
 27420  0052E2  0F7E               	addlw	-130
 27421  0052E4  E202               	bc	l12292
 27422                           
 27423                           ; BSR set to: 0
 27424                           ;radio_driver_SX1276.c: 386: {
 27425                           ;radio_driver_SX1276.c: 387: power = 2;
 27426  0052E6  0E02               	movlw	2
 27427  0052E8  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27428  0052EA                     l12292:
 27429                           
 27430                           ; BSR set to: 0
 27431                           ;radio_driver_SX1276.c: 388: }
 27432                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27433  0052EA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27434  0052EC  0A80               	xorlw	128
 27435  0052EE  0F6C               	addlw	-148
 27436  0052F0  E302               	bnc	l12296
 27437                           
 27438                           ; BSR set to: 0
 27439                           ;radio_driver_SX1276.c: 392: {
 27440                           ;radio_driver_SX1276.c: 393: power = 20;
 27441  0052F2  0E14               	movlw	20
 27442  0052F4  D005               	goto	L18
 27443  0052F6                     l12296:
 27444                           
 27445                           ; BSR set to: 0
 27446                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27447  0052F6  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27448  0052F8  0A80               	xorlw	128
 27449  0052FA  0F6E               	addlw	-146
 27450  0052FC  E302               	bnc	l12300
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;radio_driver_SX1276.c: 396: {
 27454                           ;radio_driver_SX1276.c: 397: power = 17;
 27455  0052FE  0E11               	movlw	17
 27456  005300                     L18:
 27457  005300  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27458  005302                     l12300:
 27459                           
 27460                           ; BSR set to: 0
 27461                           ;radio_driver_SX1276.c: 398: }
 27462                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27463  005302  0E0B               	movlw	11
 27464  005304  EC97  F039         	call	_RADIO_RegisterRead
 27465  005308  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 27466                           
 27467                           ; BSR set to: 0
 27468                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27469  00530A  0E4D               	movlw	77
 27470  00530C  EC97  F039         	call	_RADIO_RegisterRead
 27471  005310  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27472                           
 27473                           ; BSR set to: 0
 27474                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27475  005312  0EF8               	movlw	248
 27476  005314  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27477                           
 27478                           ; BSR set to: 0
 27479                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27480  005316  0E14               	movlw	20
 27481  005318  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27482  00531A  E106               	bnz	l12314
 27483                           
 27484                           ; BSR set to: 0
 27485                           ;radio_driver_SX1276.c: 404: {
 27486                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27487  00531C  0E07               	movlw	7
 27488  00531E  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27489                           
 27490                           ; BSR set to: 0
 27491                           ;radio_driver_SX1276.c: 406: power = 15;
 27492  005320  0E0F               	movlw	15
 27493  005322  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27494                           
 27495                           ; BSR set to: 0
 27496                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27497  005324  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27498                           
 27499                           ;radio_driver_SX1276.c: 408: }
 27500  005326  D004               	goto	l12320
 27501  005328                     l12314:
 27502                           
 27503                           ; BSR set to: 0
 27504                           ;radio_driver_SX1276.c: 409: else
 27505                           ;radio_driver_SX1276.c: 410: {
 27506                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27507  005328  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27508                           
 27509                           ; BSR set to: 0
 27510                           ;radio_driver_SX1276.c: 412: power -= 2;
 27511  00532A  0EFE               	movlw	254
 27512  00532C  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27513                           
 27514                           ; BSR set to: 0
 27515                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27516  00532E  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27517  005330                     l12320:
 27518                           
 27519                           ; BSR set to: 0
 27520                           ;radio_driver_SX1276.c: 414: }
 27521                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27522  005330  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27523  005334  0E4D               	movlw	77
 27524  005336  EC6E  F03A         	call	_RADIO_RegisterWrite
 27525                           
 27526                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27527  00533A  0100               	movlb	0	; () banked
 27528  00533C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27529  00533E  0980               	iorlw	128
 27530  005340  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27531  005342  0E09               	movlw	9
 27532  005344  EC6E  F03A         	call	_RADIO_RegisterWrite
 27533                           
 27534                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27535  005348  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27536  00534C  0E0B               	movlw	11
 27537  00534E  EF6E  F03A         	goto	_RADIO_RegisterWrite
 27538  005352                     __end_of_RADIO_WritePower:
 27539                           	opt stack 0
 27540                           tosu	equ	0xFFF
 27541                           tosh	equ	0xFFE
 27542                           tosl	equ	0xFFD
 27543                           pclath	equ	0xFFA
 27544                           tblptru	equ	0xFF8
 27545                           tblptrh	equ	0xFF7
 27546                           tblptrl	equ	0xFF6
 27547                           tablat	equ	0xFF5
 27548                           prodh	equ	0xFF4
 27549                           prodl	equ	0xFF3
 27550                           intcon	equ	0xFF2
 27551                           intcon2	equ	0xFF1
 27552                           intcon3	equ	0xFF0
 27553                           indf0	equ	0xFEF
 27554                           postinc0	equ	0xFEE
 27555                           fsr0h	equ	0xFEA
 27556                           fsr0l	equ	0xFE9
 27557                           wreg	equ	0xFE8
 27558                           postinc1	equ	0xFE6
 27559                           postdec1	equ	0xFE5
 27560                           plusw1	equ	0xFE3
 27561                           fsr1h	equ	0xFE2
 27562                           fsr1l	equ	0xFE1
 27563                           indf2	equ	0xFDF
 27564                           postinc2	equ	0xFDE
 27565                           postdec2	equ	0xFDD
 27566                           plusw2	equ	0xFDB
 27567                           fsr2h	equ	0xFDA
 27568                           fsr2l	equ	0xFD9
 27569                           status	equ	0xFD8
 27570                           
 27571 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27572 ;; Defined at:
 27573 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27574 ;; Parameters:    Size  Location     Type
 27575 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 27576 ;; Auto vars:     Size  Location     Type
 27577 ;;  num             4   21[BANK0 ] unsigned long 
 27578 ;; Return value:  Size  Location     Type
 27579 ;;                  1    wreg      void 
 27580 ;; Registers used:
 27581 ;;		wreg, status,2, status,0, cstack
 27582 ;; Tracked objects:
 27583 ;;		On entry : F/1
 27584 ;;		On exit  : 0/0
 27585 ;;		Unchanged: 0/0
 27586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27587 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27588 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27590 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27591 ;;Total ram usage:        8 bytes
 27592 ;; Hardware stack levels used:    1
 27593 ;; Hardware stack levels required when called:   10
 27594 ;; This function calls:
 27595 ;;		_RADIO_RegisterWrite
 27596 ;;		___lldiv
 27597 ;; This function is called by:
 27598 ;;		_RADIO_WriteConfiguration
 27599 ;; This function uses a non-reentrant model
 27600 ;;
 27601                           
 27602                           	psect	text144
 27603  0064CE                     __ptext144:
 27604                           	opt stack 0
 27605  0064CE                     _RADIO_WriteFSKFrequencyDeviation:
 27606                           	opt stack 16
 27607                           
 27608                           ; BSR set to: 1
 27609                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27610                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27611                           
 27612                           ;incstack = 0
 27613  0064CE  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27614  0064D2  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27615  0064D6  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27616  0064DA  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27617                           
 27618                           ; BSR set to: 1
 27619                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27620  0064DE  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27621  0064E2  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27622  0064E6  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27623  0064EA  0100               	movlb	0	; () banked
 27624  0064EC  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27625                           
 27626                           ; BSR set to: 0
 27627                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27628  0064EE  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27629  0064F2  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27630  0064F6  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27631  0064FA  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27632  0064FE  0E09               	movlw	9
 27633  006500  6F68               	movwf	___lldiv@divisor& (0+255),b
 27634  006502  0E3D               	movlw	61
 27635  006504  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27636  006506  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27637  006508  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27638  00650A  EC1A  F030         	call	___lldiv	;wreg free
 27639  00650E  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27640  006512  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27641  006516  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27642  00651A  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27643                           
 27644                           ; BSR set to: 0
 27645                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27646  00651E  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27647  006522  0E04               	movlw	4
 27648  006524  EC6E  F03A         	call	_RADIO_RegisterWrite
 27649                           
 27650                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27651  006528  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27652  00652C  0E05               	movlw	5
 27653  00652E  EF6E  F03A         	goto	_RADIO_RegisterWrite
 27654  006532                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27655                           	opt stack 0
 27656                           tosu	equ	0xFFF
 27657                           tosh	equ	0xFFE
 27658                           tosl	equ	0xFFD
 27659                           pclath	equ	0xFFA
 27660                           tblptru	equ	0xFF8
 27661                           tblptrh	equ	0xFF7
 27662                           tblptrl	equ	0xFF6
 27663                           tablat	equ	0xFF5
 27664                           prodh	equ	0xFF4
 27665                           prodl	equ	0xFF3
 27666                           intcon	equ	0xFF2
 27667                           intcon2	equ	0xFF1
 27668                           intcon3	equ	0xFF0
 27669                           indf0	equ	0xFEF
 27670                           postinc0	equ	0xFEE
 27671                           fsr0h	equ	0xFEA
 27672                           fsr0l	equ	0xFE9
 27673                           wreg	equ	0xFE8
 27674                           postinc1	equ	0xFE6
 27675                           postdec1	equ	0xFE5
 27676                           plusw1	equ	0xFE3
 27677                           fsr1h	equ	0xFE2
 27678                           fsr1l	equ	0xFE1
 27679                           indf2	equ	0xFDF
 27680                           postinc2	equ	0xFDE
 27681                           postdec2	equ	0xFDD
 27682                           plusw2	equ	0xFDB
 27683                           fsr2h	equ	0xFDA
 27684                           fsr2l	equ	0xFD9
 27685                           status	equ	0xFD8
 27686                           
 27687 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27688 ;; Defined at:
 27689 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27690 ;; Parameters:    Size  Location     Type
 27691 ;;  bitRate         4   17[BANK0 ] unsigned long 
 27692 ;; Auto vars:     Size  Location     Type
 27693 ;;  num             4   21[BANK0 ] unsigned long 
 27694 ;; Return value:  Size  Location     Type
 27695 ;;                  1    wreg      void 
 27696 ;; Registers used:
 27697 ;;		wreg, status,2, status,0, cstack
 27698 ;; Tracked objects:
 27699 ;;		On entry : 0/1
 27700 ;;		On exit  : 0/0
 27701 ;;		Unchanged: 0/0
 27702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27704 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27706 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27707 ;;Total ram usage:        8 bytes
 27708 ;; Hardware stack levels used:    1
 27709 ;; Hardware stack levels required when called:   10
 27710 ;; This function calls:
 27711 ;;		_RADIO_RegisterWrite
 27712 ;;		___lldiv
 27713 ;; This function is called by:
 27714 ;;		_RADIO_WriteConfiguration
 27715 ;; This function uses a non-reentrant model
 27716 ;;
 27717                           
 27718                           	psect	text145
 27719  006594                     __ptext145:
 27720                           	opt stack 0
 27721  006594                     _RADIO_WriteFSKBitRate:
 27722                           	opt stack 16
 27723                           
 27724                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27725                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27726                           
 27727                           ;incstack = 0
 27728  006594  0100               	movlb	0	; () banked
 27729  006596  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 27730  006598  0E48               	movlw	72
 27731  00659A  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27732  00659C  0EE8               	movlw	232
 27733  00659E  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27734  0065A0  0E01               	movlw	1
 27735  0065A2  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27736                           
 27737                           ; BSR set to: 0
 27738                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27739  0065A4  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27740  0065A8  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27741  0065AC  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27742  0065B0  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27743  0065B4  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27744  0065B8  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27745  0065BC  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27746  0065C0  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27747  0065C4  EC1A  F030         	call	___lldiv	;wreg free
 27748  0065C8  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27749  0065CC  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27750  0065D0  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27751  0065D4  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27752                           
 27753                           ; BSR set to: 0
 27754                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27755  0065D8  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27756  0065DC  0E02               	movlw	2
 27757  0065DE  EC6E  F03A         	call	_RADIO_RegisterWrite
 27758                           
 27759                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27760  0065E2  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27761  0065E6  0E03               	movlw	3
 27762  0065E8  EC6E  F03A         	call	_RADIO_RegisterWrite
 27763                           
 27764                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27765  0065EC  0100               	movlb	0	; () banked
 27766  0065EE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27767  0065F0  0E5D               	movlw	93
 27768  0065F2  EF6E  F03A         	goto	_RADIO_RegisterWrite
 27769  0065F6                     __end_of_RADIO_WriteFSKBitRate:
 27770                           	opt stack 0
 27771                           tosu	equ	0xFFF
 27772                           tosh	equ	0xFFE
 27773                           tosl	equ	0xFFD
 27774                           pclath	equ	0xFFA
 27775                           tblptru	equ	0xFF8
 27776                           tblptrh	equ	0xFF7
 27777                           tblptrl	equ	0xFF6
 27778                           tablat	equ	0xFF5
 27779                           prodh	equ	0xFF4
 27780                           prodl	equ	0xFF3
 27781                           intcon	equ	0xFF2
 27782                           intcon2	equ	0xFF1
 27783                           intcon3	equ	0xFF0
 27784                           indf0	equ	0xFEF
 27785                           postinc0	equ	0xFEE
 27786                           fsr0h	equ	0xFEA
 27787                           fsr0l	equ	0xFE9
 27788                           wreg	equ	0xFE8
 27789                           postinc1	equ	0xFE6
 27790                           postdec1	equ	0xFE5
 27791                           plusw1	equ	0xFE3
 27792                           fsr1h	equ	0xFE2
 27793                           fsr1l	equ	0xFE1
 27794                           indf2	equ	0xFDF
 27795                           postinc2	equ	0xFDE
 27796                           postdec2	equ	0xFDD
 27797                           plusw2	equ	0xFDB
 27798                           fsr2h	equ	0xFDA
 27799                           fsr2l	equ	0xFD9
 27800                           status	equ	0xFD8
 27801                           
 27802 ;; *************** function _PrepareJoinRequestFrame *****************
 27803 ;; Defined at:
 27804 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27805 ;; Parameters:    Size  Location     Type
 27806 ;;		None
 27807 ;; Auto vars:     Size  Location     Type
 27808 ;;  mic             4  117[BANK0 ] unsigned long 
 27809 ;;  iCtr            1  123[BANK0 ] unsigned char 
 27810 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 27811 ;;  mhdr            1  121[BANK0 ] struct .
 27812 ;; Return value:  Size  Location     Type
 27813 ;;                  1    wreg      unsigned char 
 27814 ;; Registers used:
 27815 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27816 ;; Tracked objects:
 27817 ;;		On entry : F/2
 27818 ;;		On exit  : F/0
 27819 ;;		Unchanged: 0/0
 27820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27822 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27824 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27825 ;;Total ram usage:        9 bytes
 27826 ;; Hardware stack levels used:    1
 27827 ;; Hardware stack levels required when called:   13
 27828 ;; This function calls:
 27829 ;;		_ComputeMic
 27830 ;;		_Random
 27831 ;;		_memcpy
 27832 ;;		_memset
 27833 ;; This function is called by:
 27834 ;;		_LORAWAN_Join
 27835 ;; This function uses a non-reentrant model
 27836 ;;
 27837                           
 27838                           	psect	text146
 27839  004650                     __ptext146:
 27840                           	opt stack 0
 27841  004650                     _PrepareJoinRequestFrame:
 27842                           	opt stack 16
 27843                           
 27844                           ; BSR set to: 2
 27845                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27846                           
 27847                           ;incstack = 0
 27848  004650  0100               	movlb	0	; () banked
 27849  004652  6BDA               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27850                           
 27851                           ; BSR set to: 0
 27852                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27853                           ;lorawan.c: 1810: uint32_t mic;
 27854                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27855  004654  0EE0               	movlw	low _macBuffer
 27856  004656  6F64               	movwf	memset@p1& (0+255),b
 27857  004658  0E04               	movlw	high _macBuffer
 27858  00465A  6F65               	movwf	(memset@p1+1)& (0+255),b
 27859  00465C  6B67               	clrf	(memset@c+1)& (0+255),b
 27860  00465E  6B66               	clrf	memset@c& (0+255),b
 27861  004660  0E01               	movlw	1
 27862  004662  6F69               	movwf	(memset@n+1)& (0+255),b
 27863  004664  0E0F               	movlw	15
 27864  004666  6F68               	movwf	memset@n& (0+255),b
 27865  004668  EC20  F039         	call	_memset	;wreg free
 27866                           
 27867                           ; BSR set to: 0
 27868                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27869  00466C  0E1F               	movlw	-225
 27870  00466E  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27871                           
 27872                           ; BSR set to: 0
 27873                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27874  004670  0EFC               	movlw	-4
 27875  004672  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27876                           
 27877                           ; BSR set to: 0
 27878                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27879  004674  0EE3               	movlw	-29
 27880  004676  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27881                           
 27882                           ; BSR set to: 0
 27883                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27884  004678  EE24  F0E0         	lfsr	2,_macBuffer
 27885  00467C  C0D9  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27886                           
 27887                           ; BSR set to: 0
 27888  004680  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27889                           
 27890                           ; BSR set to: 0
 27891                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27892  004682  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27893  004684                     l15468:
 27894                           
 27895                           ; BSR set to: 0
 27896                           ;lorawan.c: 1821: {
 27897                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27898  004684  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27899  004686  0859               	sublw	low (_loRa+89)
 27900  004688  6ED9               	movwf	fsr2l,c
 27901  00468A  0E00               	movlw	0
 27902  00468C  A0D8               	btfss	status,0,c
 27903  00468E  2AE8               	incf	wreg,f,c
 27904  004690  0802               	sublw	high (_loRa+89)
 27905  004692  6EDA               	movwf	fsr2h,c
 27906  004694  0EE0               	movlw	low _macBuffer
 27907  004696  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27908  004698  0E04               	movlw	high _macBuffer
 27909  00469A  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27910  00469C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27911  00469E  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27912  0046A0  0E00               	movlw	0
 27913  0046A2  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27914  0046A4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27915  0046A6  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27916  0046A8  6EE9               	movwf	fsr0l,c
 27917  0046AA  0E00               	movlw	0
 27918  0046AC  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27919  0046AE  6EEA               	movwf	fsr0h,c
 27920  0046B0  CFDF FFEF          	movff	indf2,indf0
 27921                           
 27922                           ; BSR set to: 0
 27923  0046B4  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27924                           
 27925                           ; BSR set to: 0
 27926  0046B6  0E07               	movlw	7
 27927  0046B8  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27928  0046BA  D7E4               	goto	l15468
 27929                           
 27930                           ; BSR set to: 0
 27931                           ;lorawan.c: 1823: }
 27932                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27933  0046BC  0E08               	movlw	8
 27934  0046BE  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27935                           
 27936                           ; BSR set to: 0
 27937                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27938  0046C0  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27939  0046C2                     l15480:
 27940                           
 27941                           ; BSR set to: 0
 27942                           ;lorawan.c: 1828: {
 27943                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27944  0046C2  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27945  0046C4  0861               	sublw	low (_loRa+97)
 27946  0046C6  6ED9               	movwf	fsr2l,c
 27947  0046C8  0E00               	movlw	0
 27948  0046CA  A0D8               	btfss	status,0,c
 27949  0046CC  2AE8               	incf	wreg,f,c
 27950  0046CE  0802               	sublw	high (_loRa+97)
 27951  0046D0  6EDA               	movwf	fsr2h,c
 27952  0046D2  0EE0               	movlw	low _macBuffer
 27953  0046D4  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27954  0046D6  0E04               	movlw	high _macBuffer
 27955  0046D8  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27956  0046DA  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27957  0046DC  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27958  0046DE  0E00               	movlw	0
 27959  0046E0  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27960  0046E2  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27961  0046E4  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27962  0046E6  6EE9               	movwf	fsr0l,c
 27963  0046E8  0E00               	movlw	0
 27964  0046EA  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27965  0046EC  6EEA               	movwf	fsr0h,c
 27966  0046EE  CFDF FFEF          	movff	indf2,indf0
 27967                           
 27968                           ; BSR set to: 0
 27969  0046F2  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27970                           
 27971                           ; BSR set to: 0
 27972  0046F4  0E07               	movlw	7
 27973  0046F6  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27974  0046F8  D7E4               	goto	l15480
 27975                           
 27976                           ; BSR set to: 0
 27977                           ;lorawan.c: 1830: }
 27978                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 27979  0046FA  0E08               	movlw	8
 27980  0046FC  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27981                           
 27982                           ; BSR set to: 0
 27983                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 27984  0046FE  6978               	setf	(Random@max+1)& (0+255),b
 27985  004700  6977               	setf	Random@max& (0+255),b
 27986  004702  ECF0  F039         	call	_Random	;wreg free
 27987  004706  C077  F2D2         	movff	?_Random,_loRa+210
 27988  00470A  C078  F2D3         	movff	?_Random+1,_loRa+211
 27989                           
 27990                           ; BSR set to: 0
 27991                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 27992  00470E  0EE0               	movlw	low _macBuffer
 27993  004710  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27994  004712  6F64               	movwf	memcpy@d1& (0+255),b
 27995  004714  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 27996  004716  0E04               	movlw	high _macBuffer
 27997  004718  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 27998  00471A  0ED2               	movlw	low (_loRa+210)
 27999  00471C  6F66               	movwf	memcpy@s1& (0+255),b
 28000  00471E  0E02               	movlw	high (_loRa+210)
 28001  004720  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28002  004722  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28003  004724  0E02               	movlw	2
 28004  004726  6F68               	movwf	memcpy@n& (0+255),b
 28005  004728  EC14  F034         	call	_memcpy	;wreg free
 28006                           
 28007                           ; BSR set to: 0
 28008                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 28009  00472C  0E02               	movlw	2
 28010  00472E  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28011                           
 28012                           ; BSR set to: 0
 28013                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 28014  004730  0E42               	movlw	low (_loRa+66)
 28015  004732  6FCA               	movwf	ComputeMic@key& (0+255),b
 28016  004734  0E02               	movlw	high (_loRa+66)
 28017  004736  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 28018  004738  0EE0               	movlw	low _macBuffer
 28019  00473A  6FCC               	movwf	ComputeMic@buffer& (0+255),b
 28020  00473C  0E04               	movlw	high _macBuffer
 28021  00473E  6FCD               	movwf	(ComputeMic@buffer+1)& (0+255),b
 28022  004740  C0DA  F0CE         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 28023  004744  EC69  F034         	call	_ComputeMic	;wreg free
 28024  004748  C0CA  F0D5         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 28025  00474C  C0CB  F0D6         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 28026  004750  C0CC  F0D7         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 28027  004754  C0CD  F0D8         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 28028                           
 28029                           ; BSR set to: 0
 28030                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 28031  004758  0EE0               	movlw	low _macBuffer
 28032  00475A  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28033  00475C  6F64               	movwf	memcpy@d1& (0+255),b
 28034  00475E  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28035  004760  0E04               	movlw	high _macBuffer
 28036  004762  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 28037  004764  0ED5               	movlw	low PrepareJoinRequestFrame@mic
 28038  004766  6F66               	movwf	memcpy@s1& (0+255),b
 28039  004768  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 28040  00476A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28041  00476C  0E04               	movlw	4
 28042  00476E  6F68               	movwf	memcpy@n& (0+255),b
 28043  004770  EC14  F034         	call	_memcpy	;wreg free
 28044                           
 28045                           ; BSR set to: 0
 28046                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 28047  004774  0E04               	movlw	4
 28048  004776  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28049                           
 28050                           ; BSR set to: 0
 28051                           ;lorawan.c: 1842: return bufferIndex;
 28052  004778  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28053                           
 28054                           ; BSR set to: 0
 28055  00477A  0012               	return		;funcret
 28056  00477C                     __end_of_PrepareJoinRequestFrame:
 28057                           	opt stack 0
 28058                           tosu	equ	0xFFF
 28059                           tosh	equ	0xFFE
 28060                           tosl	equ	0xFFD
 28061                           pclath	equ	0xFFA
 28062                           tblptru	equ	0xFF8
 28063                           tblptrh	equ	0xFF7
 28064                           tblptrl	equ	0xFF6
 28065                           tablat	equ	0xFF5
 28066                           prodh	equ	0xFF4
 28067                           prodl	equ	0xFF3
 28068                           intcon	equ	0xFF2
 28069                           intcon2	equ	0xFF1
 28070                           intcon3	equ	0xFF0
 28071                           indf0	equ	0xFEF
 28072                           postinc0	equ	0xFEE
 28073                           fsr0h	equ	0xFEA
 28074                           fsr0l	equ	0xFE9
 28075                           wreg	equ	0xFE8
 28076                           postinc1	equ	0xFE6
 28077                           postdec1	equ	0xFE5
 28078                           plusw1	equ	0xFE3
 28079                           fsr1h	equ	0xFE2
 28080                           fsr1l	equ	0xFE1
 28081                           indf2	equ	0xFDF
 28082                           postinc2	equ	0xFDE
 28083                           postdec2	equ	0xFDD
 28084                           plusw2	equ	0xFDB
 28085                           fsr2h	equ	0xFDA
 28086                           fsr2l	equ	0xFD9
 28087                           status	equ	0xFD8
 28088                           
 28089 ;; *************** function _Random *****************
 28090 ;; Defined at:
 28091 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28092 ;; Parameters:    Size  Location     Type
 28093 ;;  max             2   23[BANK0 ] unsigned int 
 28094 ;; Auto vars:     Size  Location     Type
 28095 ;;		None
 28096 ;; Return value:  Size  Location     Type
 28097 ;;                  2   23[BANK0 ] unsigned int 
 28098 ;; Registers used:
 28099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28100 ;; Tracked objects:
 28101 ;;		On entry : F/0
 28102 ;;		On exit  : F/0
 28103 ;;		Unchanged: 0/0
 28104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28108 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28109 ;;Total ram usage:        2 bytes
 28110 ;; Hardware stack levels used:    1
 28111 ;; Hardware stack levels required when called:    9
 28112 ;; This function calls:
 28113 ;;		___lwmod
 28114 ;;		_rand
 28115 ;; This function is called by:
 28116 ;;		_SearchAvailableChannel
 28117 ;;		_PrepareJoinRequestFrame
 28118 ;; This function uses a non-reentrant model
 28119 ;;
 28120                           
 28121                           	psect	text147
 28122  0073E0                     __ptext147:
 28123                           	opt stack 0
 28124  0073E0                     _Random:
 28125                           	opt stack 17
 28126                           
 28127                           ; BSR set to: 0
 28128                           ;lorawan.c: 1118: return (rand () % max);
 28129                           
 28130                           ; BSR set to: 0
 28131                           ;incstack = 0
 28132  0073E0  ECE2  F034         	call	_rand	;wreg free
 28133  0073E4  C070  F072         	movff	?_rand,___lwmod@dividend
 28134  0073E8  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 28135  0073EC  C077  F074         	movff	Random@max,___lwmod@divisor
 28136  0073F0  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 28137  0073F4  ECB5  F036         	call	___lwmod	;wreg free
 28138  0073F8  C072  F077         	movff	?___lwmod,?_Random
 28139  0073FC  C073  F078         	movff	?___lwmod+1,?_Random+1
 28140                           
 28141                           ; BSR set to: 0
 28142  007400  0012               	return		;funcret
 28143  007402                     __end_of_Random:
 28144                           	opt stack 0
 28145                           tosu	equ	0xFFF
 28146                           tosh	equ	0xFFE
 28147                           tosl	equ	0xFFD
 28148                           pclath	equ	0xFFA
 28149                           tblptru	equ	0xFF8
 28150                           tblptrh	equ	0xFF7
 28151                           tblptrl	equ	0xFF6
 28152                           tablat	equ	0xFF5
 28153                           prodh	equ	0xFF4
 28154                           prodl	equ	0xFF3
 28155                           intcon	equ	0xFF2
 28156                           intcon2	equ	0xFF1
 28157                           intcon3	equ	0xFF0
 28158                           indf0	equ	0xFEF
 28159                           postinc0	equ	0xFEE
 28160                           fsr0h	equ	0xFEA
 28161                           fsr0l	equ	0xFE9
 28162                           wreg	equ	0xFE8
 28163                           postinc1	equ	0xFE6
 28164                           postdec1	equ	0xFE5
 28165                           plusw1	equ	0xFE3
 28166                           fsr1h	equ	0xFE2
 28167                           fsr1l	equ	0xFE1
 28168                           indf2	equ	0xFDF
 28169                           postinc2	equ	0xFDE
 28170                           postdec2	equ	0xFDD
 28171                           plusw2	equ	0xFDB
 28172                           fsr2h	equ	0xFDA
 28173                           fsr2l	equ	0xFD9
 28174                           status	equ	0xFD8
 28175                           
 28176 ;; *************** function _rand *****************
 28177 ;; Defined at:
 28178 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 28179 ;; Parameters:    Size  Location     Type
 28180 ;;		None
 28181 ;; Auto vars:     Size  Location     Type
 28182 ;;		None
 28183 ;; Return value:  Size  Location     Type
 28184 ;;                  2   16[BANK0 ] int 
 28185 ;; Registers used:
 28186 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28187 ;; Tracked objects:
 28188 ;;		On entry : F/0
 28189 ;;		On exit  : F/0
 28190 ;;		Unchanged: 0/0
 28191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28192 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28195 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28196 ;;Total ram usage:        2 bytes
 28197 ;; Hardware stack levels used:    1
 28198 ;; Hardware stack levels required when called:    8
 28199 ;; This function calls:
 28200 ;;		___lmul
 28201 ;; This function is called by:
 28202 ;;		_Random
 28203 ;; This function uses a non-reentrant model
 28204 ;;
 28205                           
 28206                           	psect	text148
 28207  0069C4                     __ptext148:
 28208                           	opt stack 0
 28209  0069C4                     _rand:
 28210                           	opt stack 17
 28211                           
 28212                           ; BSR set to: 0
 28213                           
 28214                           ; BSR set to: 0
 28215                           ;incstack = 0
 28216  0069C4  C052  F064         	movff	_randx,___lmul@multiplier
 28217  0069C8  C053  F065         	movff	_randx+1,___lmul@multiplier+1
 28218  0069CC  C054  F066         	movff	_randx+2,___lmul@multiplier+2
 28219  0069D0  C055  F067         	movff	_randx+3,___lmul@multiplier+3
 28220  0069D4  0E6D               	movlw	109
 28221  0069D6  6F68               	movwf	___lmul@multiplicand& (0+255),b
 28222  0069D8  0E4E               	movlw	78
 28223  0069DA  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28224  0069DC  0EC6               	movlw	198
 28225  0069DE  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28226  0069E0  0E41               	movlw	65
 28227  0069E2  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28228  0069E4  EC9C  F02E         	call	___lmul	;wreg free
 28229  0069E8  C064  F052         	movff	?___lmul,_randx
 28230  0069EC  C065  F053         	movff	?___lmul+1,_randx+1
 28231  0069F0  C066  F054         	movff	?___lmul+2,_randx+2
 28232  0069F4  C067  F055         	movff	?___lmul+3,_randx+3
 28233                           
 28234                           ; BSR set to: 0
 28235  0069F8  0E39               	movlw	57
 28236  0069FA  2652               	addwf	_randx,f,c
 28237  0069FC  0E30               	movlw	48
 28238  0069FE  2253               	addwfc	_randx+1,f,c
 28239  006A00  0E00               	movlw	0
 28240  006A02  2254               	addwfc	_randx+2,f,c
 28241  006A04  2255               	addwfc	_randx+3,f,c
 28242                           
 28243                           ; BSR set to: 0
 28244  006A06  5054               	movf	_randx+2,w,c
 28245  006A08  6F70               	movwf	?_rand& (0+255),b
 28246  006A0A  0E7F               	movlw	127
 28247  006A0C  1455               	andwf	_randx+3,w,c
 28248  006A0E  6F71               	movwf	(?_rand+1)& (0+255),b
 28249                           
 28250                           ; BSR set to: 0
 28251  006A10  0012               	return		;funcret
 28252  006A12                     __end_of_rand:
 28253                           	opt stack 0
 28254                           tosu	equ	0xFFF
 28255                           tosh	equ	0xFFE
 28256                           tosl	equ	0xFFD
 28257                           pclath	equ	0xFFA
 28258                           tblptru	equ	0xFF8
 28259                           tblptrh	equ	0xFF7
 28260                           tblptrl	equ	0xFF6
 28261                           tablat	equ	0xFF5
 28262                           prodh	equ	0xFF4
 28263                           prodl	equ	0xFF3
 28264                           intcon	equ	0xFF2
 28265                           intcon2	equ	0xFF1
 28266                           intcon3	equ	0xFF0
 28267                           indf0	equ	0xFEF
 28268                           postinc0	equ	0xFEE
 28269                           fsr0h	equ	0xFEA
 28270                           fsr0l	equ	0xFE9
 28271                           wreg	equ	0xFE8
 28272                           postinc1	equ	0xFE6
 28273                           postdec1	equ	0xFE5
 28274                           plusw1	equ	0xFE3
 28275                           fsr1h	equ	0xFE2
 28276                           fsr1l	equ	0xFE1
 28277                           indf2	equ	0xFDF
 28278                           postinc2	equ	0xFDE
 28279                           postdec2	equ	0xFDD
 28280                           plusw2	equ	0xFDB
 28281                           fsr2h	equ	0xFDA
 28282                           fsr2l	equ	0xFD9
 28283                           status	equ	0xFD8
 28284                           
 28285 ;; *************** function ___lmul *****************
 28286 ;; Defined at:
 28287 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 28288 ;; Parameters:    Size  Location     Type
 28289 ;;  multiplier      4    4[BANK0 ] unsigned long 
 28290 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 28291 ;; Auto vars:     Size  Location     Type
 28292 ;;  product         4   12[BANK0 ] unsigned long 
 28293 ;; Return value:  Size  Location     Type
 28294 ;;                  4    4[BANK0 ] unsigned long 
 28295 ;; Registers used:
 28296 ;;		wreg, status,2, status,0, prodl, prodh
 28297 ;; Tracked objects:
 28298 ;;		On entry : F/0
 28299 ;;		On exit  : F/0
 28300 ;;		Unchanged: 0/0
 28301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28302 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28303 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28305 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28306 ;;Total ram usage:       12 bytes
 28307 ;; Hardware stack levels used:    1
 28308 ;; Hardware stack levels required when called:    7
 28309 ;; This function calls:
 28310 ;;		Nothing
 28311 ;; This function is called by:
 28312 ;;		_RADIO_WriteConfiguration
 28313 ;;		_ExecuteNewChannel
 28314 ;;		_ExecuteRxParamSetupReq
 28315 ;;		_UpdateCfList
 28316 ;;		_rand
 28317 ;; This function uses a non-reentrant model
 28318 ;;
 28319                           
 28320                           	psect	text149
 28321  005D38                     __ptext149:
 28322                           	opt stack 0
 28323  005D38                     ___lmul:
 28324                           	opt stack 17
 28325                           
 28326                           ; BSR set to: 0
 28327                           
 28328                           ; BSR set to: 0
 28329                           ;incstack = 0
 28330  005D38  5164               	movf	___lmul@multiplier& (0+255),w,b
 28331  005D3A  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28332  005D3C  CFF3 F06C          	movff	prodl,___lmul@product
 28333  005D40  CFF4 F06D          	movff	prodh,___lmul@product+1
 28334  005D44  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 28335  005D46  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 28336  005D48  5164               	movf	___lmul@multiplier& (0+255),w,b
 28337  005D4A  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28338  005D4C  50F3               	movf	prodl,w,c
 28339  005D4E  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28340  005D50  50F4               	movf	prodh,w,c
 28341  005D52  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28342  005D54  0E00               	movlw	0
 28343  005D56  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28344  005D58  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28345  005D5A  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28346  005D5C  50F3               	movf	prodl,w,c
 28347  005D5E  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28348  005D60  50F4               	movf	prodh,w,c
 28349  005D62  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28350  005D64  0E00               	movlw	0
 28351  005D66  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28352  005D68  5164               	movf	___lmul@multiplier& (0+255),w,b
 28353  005D6A  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28354  005D6C  50F3               	movf	prodl,w,c
 28355  005D6E  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28356  005D70  50F4               	movf	prodh,w,c
 28357  005D72  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28358  005D74  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28359  005D76  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28360  005D78  50F3               	movf	prodl,w,c
 28361  005D7A  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28362  005D7C  50F4               	movf	prodh,w,c
 28363  005D7E  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28364  005D80  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28365  005D82  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28366  005D84  50F3               	movf	prodl,w,c
 28367  005D86  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28368  005D88  50F4               	movf	prodh,w,c
 28369  005D8A  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28370  005D8C  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28371  005D8E  0364               	mulwf	___lmul@multiplier& (0+255),b
 28372  005D90  50F3               	movf	prodl,w,c
 28373  005D92  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28374  005D94  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28375  005D96  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28376  005D98  50F3               	movf	prodl,w,c
 28377  005D9A  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28378  005D9C  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28379  005D9E  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28380  005DA0  50F3               	movf	prodl,w,c
 28381  005DA2  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28382  005DA4  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 28383  005DA6  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28384  005DA8  50F3               	movf	prodl,w,c
 28385  005DAA  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28386                           
 28387                           ; BSR set to: 0
 28388  005DAC  C06C  F064         	movff	___lmul@product,?___lmul
 28389  005DB0  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 28390  005DB4  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 28391  005DB8  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 28392                           
 28393                           ; BSR set to: 0
 28394  005DBC  0012               	return		;funcret
 28395  005DBE                     __end_of___lmul:
 28396                           	opt stack 0
 28397                           tosu	equ	0xFFF
 28398                           tosh	equ	0xFFE
 28399                           tosl	equ	0xFFD
 28400                           pclath	equ	0xFFA
 28401                           tblptru	equ	0xFF8
 28402                           tblptrh	equ	0xFF7
 28403                           tblptrl	equ	0xFF6
 28404                           tablat	equ	0xFF5
 28405                           prodh	equ	0xFF4
 28406                           prodl	equ	0xFF3
 28407                           intcon	equ	0xFF2
 28408                           intcon2	equ	0xFF1
 28409                           intcon3	equ	0xFF0
 28410                           indf0	equ	0xFEF
 28411                           postinc0	equ	0xFEE
 28412                           fsr0h	equ	0xFEA
 28413                           fsr0l	equ	0xFE9
 28414                           wreg	equ	0xFE8
 28415                           postinc1	equ	0xFE6
 28416                           postdec1	equ	0xFE5
 28417                           plusw1	equ	0xFE3
 28418                           fsr1h	equ	0xFE2
 28419                           fsr1l	equ	0xFE1
 28420                           indf2	equ	0xFDF
 28421                           postinc2	equ	0xFDE
 28422                           postdec2	equ	0xFDD
 28423                           plusw2	equ	0xFDB
 28424                           fsr2h	equ	0xFDA
 28425                           fsr2l	equ	0xFD9
 28426                           status	equ	0xFD8
 28427                           
 28428 ;; *************** function ___lwmod *****************
 28429 ;; Defined at:
 28430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 28431 ;; Parameters:    Size  Location     Type
 28432 ;;  dividend        2   18[BANK0 ] unsigned int 
 28433 ;;  divisor         2   20[BANK0 ] unsigned int 
 28434 ;; Auto vars:     Size  Location     Type
 28435 ;;  counter         1   22[BANK0 ] unsigned char 
 28436 ;; Return value:  Size  Location     Type
 28437 ;;                  2   18[BANK0 ] unsigned int 
 28438 ;; Registers used:
 28439 ;;		wreg, status,2, status,0
 28440 ;; Tracked objects:
 28441 ;;		On entry : F/0
 28442 ;;		On exit  : F/0
 28443 ;;		Unchanged: 0/0
 28444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28448 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28449 ;;Total ram usage:        5 bytes
 28450 ;; Hardware stack levels used:    1
 28451 ;; Hardware stack levels required when called:    7
 28452 ;; This function calls:
 28453 ;;		Nothing
 28454 ;; This function is called by:
 28455 ;;		_Random
 28456 ;; This function uses a non-reentrant model
 28457 ;;
 28458                           
 28459                           	psect	text150
 28460  006D6A                     __ptext150:
 28461                           	opt stack 0
 28462  006D6A                     ___lwmod:
 28463                           	opt stack 18
 28464                           
 28465                           ; BSR set to: 0
 28466                           
 28467                           ; BSR set to: 0
 28468                           ;incstack = 0
 28469  006D6A  5174               	movf	___lwmod@divisor& (0+255),w,b
 28470  006D6C  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28471  006D6E  E017               	bz	l3167
 28472                           
 28473                           ; BSR set to: 0
 28474  006D70  0E01               	movlw	1
 28475  006D72  6F76               	movwf	___lwmod@counter& (0+255),b
 28476  006D74  D004               	goto	l12428
 28477  006D76                     l12426:
 28478                           
 28479                           ; BSR set to: 0
 28480  006D76  90D8               	bcf	status,0,c
 28481  006D78  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 28482  006D7A  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28483  006D7C  2B76               	incf	___lwmod@counter& (0+255),f,b
 28484  006D7E                     l12428:
 28485                           
 28486                           ; BSR set to: 0
 28487  006D7E  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28488  006D80  D7FA               	goto	l12426
 28489  006D82                     l12430:
 28490                           
 28491                           ; BSR set to: 0
 28492  006D82  5174               	movf	___lwmod@divisor& (0+255),w,b
 28493  006D84  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 28494  006D86  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28495  006D88  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28496  006D8A  E304               	bnc	l12434
 28497                           
 28498                           ; BSR set to: 0
 28499  006D8C  5174               	movf	___lwmod@divisor& (0+255),w,b
 28500  006D8E  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 28501  006D90  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28502  006D92  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28503  006D94                     l12434:
 28504                           
 28505                           ; BSR set to: 0
 28506  006D94  90D8               	bcf	status,0,c
 28507  006D96  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28508  006D98  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 28509                           
 28510                           ; BSR set to: 0
 28511  006D9A  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 28512  006D9C  D7F2               	goto	l12430
 28513  006D9E                     l3167:
 28514                           
 28515                           ; BSR set to: 0
 28516  006D9E  C072  F072         	movff	___lwmod@dividend,?___lwmod
 28517  006DA2  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 28518                           
 28519                           ; BSR set to: 0
 28520  006DA6  0012               	return		;funcret
 28521  006DA8                     __end_of___lwmod:
 28522                           	opt stack 0
 28523                           tosu	equ	0xFFF
 28524                           tosh	equ	0xFFE
 28525                           tosl	equ	0xFFD
 28526                           pclath	equ	0xFFA
 28527                           tblptru	equ	0xFF8
 28528                           tblptrh	equ	0xFF7
 28529                           tblptrl	equ	0xFF6
 28530                           tablat	equ	0xFF5
 28531                           prodh	equ	0xFF4
 28532                           prodl	equ	0xFF3
 28533                           intcon	equ	0xFF2
 28534                           intcon2	equ	0xFF1
 28535                           intcon3	equ	0xFF0
 28536                           indf0	equ	0xFEF
 28537                           postinc0	equ	0xFEE
 28538                           fsr0h	equ	0xFEA
 28539                           fsr0l	equ	0xFE9
 28540                           wreg	equ	0xFE8
 28541                           postinc1	equ	0xFE6
 28542                           postdec1	equ	0xFE5
 28543                           plusw1	equ	0xFE3
 28544                           fsr1h	equ	0xFE2
 28545                           fsr1l	equ	0xFE1
 28546                           indf2	equ	0xFDF
 28547                           postinc2	equ	0xFDE
 28548                           postdec2	equ	0xFDD
 28549                           plusw2	equ	0xFDB
 28550                           fsr2h	equ	0xFDA
 28551                           fsr2l	equ	0xFD9
 28552                           status	equ	0xFD8
 28553                           
 28554 ;; *************** function _ComputeMic *****************
 28555 ;; Defined at:
 28556 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28557 ;; Parameters:    Size  Location     Type
 28558 ;;  key             2  106[BANK0 ] PTR unsigned char 
 28559 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28560 ;;  buffer          2  108[BANK0 ] PTR unsigned char 
 28561 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28562 ;;  bufferLength    1  110[BANK0 ] unsigned char 
 28563 ;; Auto vars:     Size  Location     Type
 28564 ;;  mic             4  111[BANK0 ] unsigned long 
 28565 ;; Return value:  Size  Location     Type
 28566 ;;                  4  106[BANK0 ] unsigned long 
 28567 ;; Registers used:
 28568 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28569 ;; Tracked objects:
 28570 ;;		On entry : F/0
 28571 ;;		On exit  : F/0
 28572 ;;		Unchanged: 0/0
 28573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28574 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28575 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28577 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28578 ;;Total ram usage:        9 bytes
 28579 ;; Hardware stack levels used:    1
 28580 ;; Hardware stack levels required when called:   12
 28581 ;; This function calls:
 28582 ;;		_AESCmac
 28583 ;;		_memcpy
 28584 ;; This function is called by:
 28585 ;;		_LORAWAN_RxDone
 28586 ;;		_PrepareJoinRequestFrame
 28587 ;; This function uses a non-reentrant model
 28588 ;;
 28589                           
 28590                           	psect	text151
 28591  0068D2                     __ptext151:
 28592                           	opt stack 0
 28593  0068D2                     _ComputeMic:
 28594                           	opt stack 14
 28595                           
 28596                           ; BSR set to: 0
 28597                           ;lorawan.c: 2196: uint32_t mic = 0;
 28598                           
 28599                           ; BSR set to: 0
 28600                           ;incstack = 0
 28601  0068D2  6BCF               	clrf	ComputeMic@mic& (0+255),b
 28602  0068D4  6BD0               	clrf	(ComputeMic@mic+1)& (0+255),b
 28603  0068D6  6BD1               	clrf	(ComputeMic@mic+2)& (0+255),b
 28604  0068D8  6BD2               	clrf	(ComputeMic@mic+3)& (0+255),b
 28605                           
 28606                           ; BSR set to: 0
 28607                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28608  0068DA  C0CA  F0BC         	movff	ComputeMic@key,AESCmac@key
 28609  0068DE  C0CB  F0BD         	movff	ComputeMic@key+1,AESCmac@key+1
 28610  0068E2  0EA0               	movlw	low _aesBuffer
 28611  0068E4  6FBE               	movwf	AESCmac@output& (0+255),b
 28612  0068E6  0E01               	movlw	high _aesBuffer
 28613  0068E8  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 28614  0068EA  C0CC  F0C0         	movff	ComputeMic@buffer,AESCmac@input
 28615  0068EE  C0CD  F0C1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28616  0068F2  C0CE  F0C2         	movff	ComputeMic@bufferLength,AESCmac@size
 28617  0068F6  EC0C  F00C         	call	_AESCmac	;wreg free
 28618                           
 28619                           ; BSR set to: 0
 28620                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28621  0068FA  0ECF               	movlw	low ComputeMic@mic
 28622  0068FC  6F64               	movwf	memcpy@d1& (0+255),b
 28623  0068FE  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28624  006900  0EA0               	movlw	low _aesBuffer
 28625  006902  6F66               	movwf	memcpy@s1& (0+255),b
 28626  006904  0E01               	movlw	high _aesBuffer
 28627  006906  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28628  006908  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28629  00690A  0E04               	movlw	4
 28630  00690C  6F68               	movwf	memcpy@n& (0+255),b
 28631  00690E  EC14  F034         	call	_memcpy	;wreg free
 28632                           
 28633                           ; BSR set to: 0
 28634                           ;lorawan.c: 2202: return mic;
 28635  006912  C0CF  F0CA         	movff	ComputeMic@mic,?_ComputeMic
 28636  006916  C0D0  F0CB         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28637  00691A  C0D1  F0CC         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28638  00691E  C0D2  F0CD         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28639                           
 28640                           ; BSR set to: 0
 28641  006922  0012               	return		;funcret
 28642  006924                     __end_of_ComputeMic:
 28643                           	opt stack 0
 28644                           tosu	equ	0xFFF
 28645                           tosh	equ	0xFFE
 28646                           tosl	equ	0xFFD
 28647                           pclath	equ	0xFFA
 28648                           tblptru	equ	0xFF8
 28649                           tblptrh	equ	0xFF7
 28650                           tblptrl	equ	0xFF6
 28651                           tablat	equ	0xFF5
 28652                           prodh	equ	0xFF4
 28653                           prodl	equ	0xFF3
 28654                           intcon	equ	0xFF2
 28655                           intcon2	equ	0xFF1
 28656                           intcon3	equ	0xFF0
 28657                           indf0	equ	0xFEF
 28658                           postinc0	equ	0xFEE
 28659                           fsr0h	equ	0xFEA
 28660                           fsr0l	equ	0xFE9
 28661                           wreg	equ	0xFE8
 28662                           postinc1	equ	0xFE6
 28663                           postdec1	equ	0xFE5
 28664                           plusw1	equ	0xFE3
 28665                           fsr1h	equ	0xFE2
 28666                           fsr1l	equ	0xFE1
 28667                           indf2	equ	0xFDF
 28668                           postinc2	equ	0xFDE
 28669                           postdec2	equ	0xFDD
 28670                           plusw2	equ	0xFDB
 28671                           fsr2h	equ	0xFDA
 28672                           fsr2l	equ	0xFD9
 28673                           status	equ	0xFD8
 28674                           
 28675 ;; *************** function _AESCmac *****************
 28676 ;; Defined at:
 28677 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28678 ;; Parameters:    Size  Location     Type
 28679 ;;  key             2   92[BANK0 ] PTR unsigned char 
 28680 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28681 ;;  output          2   94[BANK0 ] PTR unsigned char 
 28682 ;;		 -> aesBuffer(16), 
 28683 ;;  input           2   96[BANK0 ] PTR unsigned char 
 28684 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28685 ;;  size            1   98[BANK0 ] unsigned char 
 28686 ;; Auto vars:     Size  Location     Type
 28687 ;;  x              16   80[BANK1 ] unsigned char [16]
 28688 ;;  y              16   64[BANK1 ] unsigned char [16]
 28689 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28690 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28691 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28692 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28693 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28694 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28695 ;;  i               1  101[BANK1 ] unsigned char 
 28696 ;;  j               1  100[BANK1 ] unsigned char 
 28697 ;;  n               1   99[BANK1 ] unsigned char 
 28698 ;;  flag            1   98[BANK1 ] unsigned char 
 28699 ;; Return value:  Size  Location     Type
 28700 ;;                  1    wreg      void 
 28701 ;; Registers used:
 28702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28703 ;; Tracked objects:
 28704 ;;		On entry : F/0
 28705 ;;		On exit  : F/0
 28706 ;;		Unchanged: 0/0
 28707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28708 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28709 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28710 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28711 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28712 ;;Total ram usage:      116 bytes
 28713 ;; Hardware stack levels used:    1
 28714 ;; Hardware stack levels required when called:   11
 28715 ;; This function calls:
 28716 ;;		_AESEncodeLoRa
 28717 ;;		_GenerateSubkey
 28718 ;;		_memcpy
 28719 ;;		_memset
 28720 ;; This function is called by:
 28721 ;;		_LORAWAN_RxDone
 28722 ;;		_AssemblePacket
 28723 ;;		_ComputeMic
 28724 ;; This function uses a non-reentrant model
 28725 ;;
 28726                           
 28727                           	psect	text152
 28728  001818                     __ptext152:
 28729                           	opt stack 0
 28730  001818                     _AESCmac:
 28731                           	opt stack 16
 28732                           
 28733                           ; BSR set to: 0
 28734                           
 28735                           ; BSR set to: 0
 28736                           ;incstack = 0
 28737  001818  0101               	movlb	1	; () banked
 28738  00181A  6B65               	clrf	AESCmac@i& (0+255),b
 28739  00181C  6B64               	clrf	AESCmac@j& (0+255),b
 28740                           
 28741                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28742  00181E  6B62               	clrf	AESCmac@flag& (0+255),b
 28743                           
 28744                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28745                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28746                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28747  001820  6B60               	clrf	AESCmac@ptr& (0+255),b
 28748  001822  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 28749                           
 28750                           ; BSR set to: 1
 28751                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28752  001824  C0BC  F094         	movff	AESCmac@key,GenerateSubkey@key
 28753  001828  C0BD  F095         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28754  00182C  0E10               	movlw	low AESCmac@k1
 28755  00182E  0100               	movlb	0	; () banked
 28756  001830  6F96               	movwf	GenerateSubkey@k1& (0+255),b
 28757  001832  0E01               	movlw	high AESCmac@k1
 28758  001834  6F97               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28759  001836  0E00               	movlw	low AESCmac@k2
 28760  001838  6F98               	movwf	GenerateSubkey@k2& (0+255),b
 28761  00183A  0E01               	movlw	high AESCmac@k2
 28762  00183C  6F99               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28763  00183E  EC41  F024         	call	_GenerateSubkey	;wreg free
 28764                           
 28765                           ; BSR set to: 0
 28766                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28767  001842  51C2               	movf	AESCmac@size& (0+255),w,b
 28768  001844  6FC3               	movwf	??_AESCmac& (0+255),b
 28769  001846  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28770  001848  0E0F               	movlw	15
 28771  00184A  27C3               	addwf	??_AESCmac& (0+255),f,b
 28772  00184C  0E00               	movlw	0
 28773  00184E  23C4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28774  001850  0E04               	movlw	4
 28775  001852  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28776  001854                     u14245:
 28777  001854  35C4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28778  001856  33C4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28779  001858  33C3               	rrcf	??_AESCmac& (0+255),f,b
 28780  00185A  2FC5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28781  00185C  D7FB               	goto	u14245
 28782  00185E  51C3               	movf	??_AESCmac& (0+255),w,b
 28783  001860  0101               	movlb	1	; () banked
 28784  001862  6F63               	movwf	AESCmac@n& (0+255),b
 28785                           
 28786                           ; BSR set to: 1
 28787                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28788  001864  5163               	movf	AESCmac@n& (0+255),w,b
 28789  001866  E104               	bnz	l13056
 28790                           
 28791                           ; BSR set to: 1
 28792                           ;lorawan_aes_cmac.c: 53: {
 28793                           ;lorawan_aes_cmac.c: 54: n = 1;
 28794  001868  0E01               	movlw	1
 28795  00186A  6F63               	movwf	AESCmac@n& (0+255),b
 28796                           
 28797                           ; BSR set to: 1
 28798                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28799  00186C  6B62               	clrf	AESCmac@flag& (0+255),b
 28800                           
 28801                           ;lorawan_aes_cmac.c: 56: }
 28802  00186E  D00A               	goto	l1454
 28803  001870                     l13056:
 28804                           
 28805                           ; BSR set to: 1
 28806                           ;lorawan_aes_cmac.c: 57: else
 28807                           ;lorawan_aes_cmac.c: 58: {
 28808                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28809  001870  C0C2  F0C3         	movff	AESCmac@size,??_AESCmac
 28810  001874  0E0F               	movlw	15
 28811  001876  0100               	movlb	0	; () banked
 28812  001878  17C3               	andwf	??_AESCmac& (0+255),f,b
 28813  00187A  0E01               	movlw	1
 28814  00187C  A4D8               	btfss	status,2,c
 28815  00187E  0E00               	movlw	0
 28816  001880  0101               	movlb	1	; () banked
 28817  001882  6F62               	movwf	AESCmac@flag& (0+255),b
 28818  001884                     l1454:
 28819                           
 28820                           ; BSR set to: 1
 28821                           ;lorawan_aes_cmac.c: 60: }
 28822                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28823  001884  0562               	decf	AESCmac@flag& (0+255),w,b
 28824  001886  E141               	bnz	l13070
 28825                           
 28826                           ; BSR set to: 1
 28827                           ;lorawan_aes_cmac.c: 63: {
 28828                           ;lorawan_aes_cmac.c: 64: j = 0;
 28829  001888  6B64               	clrf	AESCmac@j& (0+255),b
 28830                           
 28831                           ; BSR set to: 1
 28832                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28833  00188A  5163               	movf	AESCmac@n& (0+255),w,b
 28834  00188C  0D10               	mullw	16
 28835  00188E  50F3               	movf	prodl,w,c
 28836  001890  0FF0               	addlw	240
 28837  001892  6F65               	movwf	AESCmac@i& (0+255),b
 28838  001894  D01E               	goto	l13068
 28839  001896                     l13062:
 28840                           
 28841                           ; BSR set to: 0
 28842                           ;lorawan_aes_cmac.c: 66: {
 28843                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28844  001896  0E20               	movlw	low AESCmac@mLast
 28845  001898  0101               	movlb	1	; () banked
 28846  00189A  2564               	addwf	AESCmac@j& (0+255),w,b
 28847  00189C  6ED9               	movwf	fsr2l,c
 28848  00189E  6ADA               	clrf	fsr2h,c
 28849  0018A0  0E01               	movlw	high AESCmac@mLast
 28850  0018A2  22DA               	addwfc	fsr2h,f,c
 28851  0018A4  0E10               	movlw	low AESCmac@k1
 28852  0018A6  2564               	addwf	AESCmac@j& (0+255),w,b
 28853  0018A8  6EE9               	movwf	fsr0l,c
 28854  0018AA  6AEA               	clrf	fsr0h,c
 28855  0018AC  0E01               	movlw	high AESCmac@k1
 28856  0018AE  22EA               	addwfc	fsr0h,f,c
 28857  0018B0  50EF               	movf	indf0,w,c
 28858  0018B2  0100               	movlb	0	; () banked
 28859  0018B4  6FC3               	movwf	??_AESCmac& (0+255),b
 28860  0018B6  0101               	movlb	1	; () banked
 28861  0018B8  5165               	movf	AESCmac@i& (0+255),w,b
 28862  0018BA  0100               	movlb	0	; () banked
 28863  0018BC  25C0               	addwf	AESCmac@input& (0+255),w,b
 28864  0018BE  6EE9               	movwf	fsr0l,c
 28865  0018C0  0E00               	movlw	0
 28866  0018C2  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28867  0018C4  6EEA               	movwf	fsr0h,c
 28868  0018C6  50EF               	movf	indf0,w,c
 28869  0018C8  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28870  0018CA  6EDF               	movwf	indf2,c
 28871                           
 28872                           ; BSR set to: 0
 28873                           ;lorawan_aes_cmac.c: 68: j++;
 28874  0018CC  0101               	movlb	1	; () banked
 28875  0018CE  2B64               	incf	AESCmac@j& (0+255),f,b
 28876                           
 28877                           ; BSR set to: 1
 28878  0018D0  2B65               	incf	AESCmac@i& (0+255),f,b
 28879  0018D2                     l13068:
 28880                           
 28881                           ; BSR set to: 1
 28882  0018D2  5163               	movf	AESCmac@n& (0+255),w,b
 28883  0018D4  0100               	movlb	0	; () banked
 28884  0018D6  6FC3               	movwf	??_AESCmac& (0+255),b
 28885  0018D8  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28886  0018DA  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28887  0018DC  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28888  0018DE  0EF0               	movlw	240
 28889  0018E0  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28890  0018E2  51C3               	movf	??_AESCmac& (0+255),w,b
 28891  0018E4  0B0F               	andlw	15
 28892  0018E6  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28893  0018E8  0EF0               	movlw	240
 28894  0018EA  17C3               	andwf	??_AESCmac& (0+255),f,b
 28895  0018EC  0101               	movlb	1	; () banked
 28896  0018EE  5165               	movf	AESCmac@i& (0+255),w,b
 28897  0018F0  0100               	movlb	0	; () banked
 28898  0018F2  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28899  0018F4  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 28900  0018F6  51C3               	movf	??_AESCmac& (0+255),w,b
 28901  0018F8  5DC5               	subwf	(??_AESCmac+2)& (0+255),w,b
 28902  0018FA  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 28903  0018FC  0A80               	xorlw	128
 28904  0018FE  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28905  001900  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28906  001902  0A80               	xorlw	128
 28907  001904  59C7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28908  001906  E263               	bc	l13100
 28909  001908  D7C6               	goto	l13062
 28910  00190A                     l13070:
 28911                           
 28912                           ; BSR set to: 1
 28913                           ;lorawan_aes_cmac.c: 71: else
 28914                           ;lorawan_aes_cmac.c: 72: {
 28915                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28916  00190A  0100               	movlb	0	; () banked
 28917  00190C  51C2               	movf	AESCmac@size& (0+255),w,b
 28918  00190E  25C0               	addwf	AESCmac@input& (0+255),w,b
 28919  001910  6FC3               	movwf	??_AESCmac& (0+255),b
 28920  001912  0E00               	movlw	0
 28921  001914  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28922  001916  6FC4               	movwf	(??_AESCmac+1)& (0+255),b
 28923  001918  51C2               	movf	AESCmac@size& (0+255),w,b
 28924  00191A  0B0F               	andlw	15
 28925  00191C  5DC3               	subwf	??_AESCmac& (0+255),w,b
 28926  00191E  0101               	movlb	1	; () banked
 28927  001920  6F60               	movwf	AESCmac@ptr& (0+255),b
 28928  001922  0100               	movlb	0	; () banked
 28929  001924  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28930  001926  A0D8               	btfss	status,0,c
 28931  001928  05C4               	decf	(??_AESCmac+1)& (0+255),w,b
 28932  00192A  0101               	movlb	1	; () banked
 28933  00192C  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28934                           
 28935                           ; BSR set to: 1
 28936                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28937  00192E  6B65               	clrf	AESCmac@i& (0+255),b
 28938  001930                     l13076:
 28939                           
 28940                           ; BSR set to: 1
 28941                           ;lorawan_aes_cmac.c: 76: {
 28942                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28943  001930  0100               	movlb	0	; () banked
 28944  001932  51C2               	movf	AESCmac@size& (0+255),w,b
 28945  001934  0B0F               	andlw	15
 28946  001936  0101               	movlb	1	; () banked
 28947  001938  6165               	cpfslt	AESCmac@i& (0+255),b
 28948  00193A  D00F               	goto	l13080
 28949                           
 28950                           ; BSR set to: 1
 28951                           ;lorawan_aes_cmac.c: 78: {
 28952                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28953  00193C  5165               	movf	AESCmac@i& (0+255),w,b
 28954  00193E  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28955  001940  6ED9               	movwf	fsr2l,c
 28956  001942  0E00               	movlw	0
 28957  001944  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28958  001946  6EDA               	movwf	fsr2h,c
 28959  001948  0E30               	movlw	low AESCmac@padded
 28960  00194A  2565               	addwf	AESCmac@i& (0+255),w,b
 28961  00194C  6EE9               	movwf	fsr0l,c
 28962  00194E  6AEA               	clrf	fsr0h,c
 28963  001950  0E01               	movlw	high AESCmac@padded
 28964  001952  22EA               	addwfc	fsr0h,f,c
 28965  001954  CFDF FFEF          	movff	indf2,indf0
 28966                           
 28967                           ;lorawan_aes_cmac.c: 80: }
 28968  001958  D016               	goto	l13086
 28969  00195A                     l13080:
 28970                           
 28971                           ; BSR set to: 1
 28972                           ;lorawan_aes_cmac.c: 81: else
 28973                           ;lorawan_aes_cmac.c: 82: {
 28974                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 28975  00195A  0100               	movlb	0	; () banked
 28976  00195C  51C2               	movf	AESCmac@size& (0+255),w,b
 28977  00195E  0B0F               	andlw	15
 28978  001960  0101               	movlb	1	; () banked
 28979  001962  1965               	xorwf	AESCmac@i& (0+255),w,b
 28980  001964  E109               	bnz	l13084
 28981                           
 28982                           ; BSR set to: 1
 28983                           ;lorawan_aes_cmac.c: 84: {
 28984                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 28985  001966  0E30               	movlw	low AESCmac@padded
 28986  001968  2565               	addwf	AESCmac@i& (0+255),w,b
 28987  00196A  6ED9               	movwf	fsr2l,c
 28988  00196C  6ADA               	clrf	fsr2h,c
 28989  00196E  0E01               	movlw	high AESCmac@padded
 28990  001970  22DA               	addwfc	fsr2h,f,c
 28991  001972  0E80               	movlw	128
 28992  001974  6EDF               	movwf	indf2,c
 28993                           
 28994                           ;lorawan_aes_cmac.c: 86: }
 28995  001976  D007               	goto	l13086
 28996  001978                     l13084:
 28997                           
 28998                           ; BSR set to: 1
 28999                           ;lorawan_aes_cmac.c: 87: else
 29000                           ;lorawan_aes_cmac.c: 88: {
 29001                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 29002  001978  0E30               	movlw	low AESCmac@padded
 29003  00197A  2565               	addwf	AESCmac@i& (0+255),w,b
 29004  00197C  6ED9               	movwf	fsr2l,c
 29005  00197E  6ADA               	clrf	fsr2h,c
 29006  001980  0E01               	movlw	high AESCmac@padded
 29007  001982  22DA               	addwfc	fsr2h,f,c
 29008  001984  6ADF               	clrf	indf2,c
 29009  001986                     l13086:
 29010                           
 29011                           ; BSR set to: 1
 29012  001986  2B65               	incf	AESCmac@i& (0+255),f,b
 29013                           
 29014                           ; BSR set to: 1
 29015  001988  0E0F               	movlw	15
 29016  00198A  6565               	cpfsgt	AESCmac@i& (0+255),b
 29017  00198C  D7D1               	goto	l13076
 29018                           
 29019                           ; BSR set to: 1
 29020                           ;lorawan_aes_cmac.c: 90: }
 29021                           ;lorawan_aes_cmac.c: 91: }
 29022                           ;lorawan_aes_cmac.c: 92: }
 29023                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 29024  00198E  6B65               	clrf	AESCmac@i& (0+255),b
 29025  001990                     l13094:
 29026                           
 29027                           ; BSR set to: 1
 29028                           ;lorawan_aes_cmac.c: 96: {
 29029                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 29030  001990  0E20               	movlw	low AESCmac@mLast
 29031  001992  2565               	addwf	AESCmac@i& (0+255),w,b
 29032  001994  6ED9               	movwf	fsr2l,c
 29033  001996  6ADA               	clrf	fsr2h,c
 29034  001998  0E01               	movlw	high AESCmac@mLast
 29035  00199A  22DA               	addwfc	fsr2h,f,c
 29036  00199C  0E00               	movlw	low AESCmac@k2
 29037  00199E  2565               	addwf	AESCmac@i& (0+255),w,b
 29038  0019A0  6EE9               	movwf	fsr0l,c
 29039  0019A2  6AEA               	clrf	fsr0h,c
 29040  0019A4  0E01               	movlw	high AESCmac@k2
 29041  0019A6  22EA               	addwfc	fsr0h,f,c
 29042  0019A8  50EF               	movf	indf0,w,c
 29043  0019AA  0100               	movlb	0	; () banked
 29044  0019AC  6FC3               	movwf	??_AESCmac& (0+255),b
 29045  0019AE  0E30               	movlw	low AESCmac@padded
 29046  0019B0  0101               	movlb	1	; () banked
 29047  0019B2  2565               	addwf	AESCmac@i& (0+255),w,b
 29048  0019B4  6EE9               	movwf	fsr0l,c
 29049  0019B6  6AEA               	clrf	fsr0h,c
 29050  0019B8  0E01               	movlw	high AESCmac@padded
 29051  0019BA  22EA               	addwfc	fsr0h,f,c
 29052  0019BC  50EF               	movf	indf0,w,c
 29053  0019BE  0100               	movlb	0	; () banked
 29054  0019C0  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29055  0019C2  6EDF               	movwf	indf2,c
 29056                           
 29057                           ; BSR set to: 0
 29058  0019C4  0101               	movlb	1	; () banked
 29059  0019C6  2B65               	incf	AESCmac@i& (0+255),f,b
 29060                           
 29061                           ; BSR set to: 1
 29062  0019C8  0E0F               	movlw	15
 29063  0019CA  6565               	cpfsgt	AESCmac@i& (0+255),b
 29064  0019CC  D7E1               	goto	l13094
 29065  0019CE                     l13100:
 29066                           
 29067                           ;lorawan_aes_cmac.c: 98: }
 29068                           ;lorawan_aes_cmac.c: 99: }
 29069                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 29070  0019CE  0E50               	movlw	low AESCmac@x
 29071  0019D0  0100               	movlb	0	; () banked
 29072  0019D2  6F64               	movwf	memset@p1& (0+255),b
 29073  0019D4  0E01               	movlw	high AESCmac@x
 29074  0019D6  6F65               	movwf	(memset@p1+1)& (0+255),b
 29075  0019D8  6B67               	clrf	(memset@c+1)& (0+255),b
 29076  0019DA  6B66               	clrf	memset@c& (0+255),b
 29077  0019DC  6B69               	clrf	(memset@n+1)& (0+255),b
 29078  0019DE  0E10               	movlw	16
 29079  0019E0  6F68               	movwf	memset@n& (0+255),b
 29080  0019E2  EC20  F039         	call	_memset	;wreg free
 29081                           
 29082                           ; BSR set to: 0
 29083                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 29084  0019E6  0101               	movlb	1	; () banked
 29085  0019E8  6B65               	clrf	AESCmac@i& (0+255),b
 29086  0019EA  D051               	goto	l13118
 29087  0019EC                     l1469:
 29088                           
 29089                           ; BSR set to: 0
 29090                           ;lorawan_aes_cmac.c: 104: {
 29091                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 29092  0019EC  0101               	movlb	1	; () banked
 29093  0019EE  6B64               	clrf	AESCmac@j& (0+255),b
 29094  0019F0                     l13108:
 29095                           
 29096                           ; BSR set to: 1
 29097                           ;lorawan_aes_cmac.c: 106: {
 29098                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 29099  0019F0  0E40               	movlw	low AESCmac@y
 29100  0019F2  2564               	addwf	AESCmac@j& (0+255),w,b
 29101  0019F4  6ED9               	movwf	fsr2l,c
 29102  0019F6  6ADA               	clrf	fsr2h,c
 29103  0019F8  0E01               	movlw	high AESCmac@y
 29104  0019FA  22DA               	addwfc	fsr2h,f,c
 29105  0019FC  5165               	movf	AESCmac@i& (0+255),w,b
 29106  0019FE  0100               	movlb	0	; () banked
 29107  001A00  6FC3               	movwf	??_AESCmac& (0+255),b
 29108  001A02  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 29109  001A04  3BC3               	swapf	??_AESCmac& (0+255),f,b
 29110  001A06  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 29111  001A08  0EF0               	movlw	240
 29112  001A0A  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 29113  001A0C  51C3               	movf	??_AESCmac& (0+255),w,b
 29114  001A0E  0B0F               	andlw	15
 29115  001A10  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 29116  001A12  0EF0               	movlw	240
 29117  001A14  17C3               	andwf	??_AESCmac& (0+255),f,b
 29118  001A16  C0C0  F0C5         	movff	AESCmac@input,??_AESCmac+2
 29119  001A1A  C0C1  F0C6         	movff	AESCmac@input+1,??_AESCmac+3
 29120  001A1E  51C3               	movf	??_AESCmac& (0+255),w,b
 29121  001A20  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29122  001A22  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29123  001A24  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29124  001A26  0101               	movlb	1	; () banked
 29125  001A28  5164               	movf	AESCmac@j& (0+255),w,b
 29126  001A2A  0100               	movlb	0	; () banked
 29127  001A2C  25C5               	addwf	(??_AESCmac+2)& (0+255),w,b
 29128  001A2E  6EE9               	movwf	fsr0l,c
 29129  001A30  0E00               	movlw	0
 29130  001A32  21C6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 29131  001A34  6EEA               	movwf	fsr0h,c
 29132  001A36  50EF               	movf	indf0,w,c
 29133  001A38  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29134  001A3A  0E50               	movlw	low AESCmac@x
 29135  001A3C  0101               	movlb	1	; () banked
 29136  001A3E  2564               	addwf	AESCmac@j& (0+255),w,b
 29137  001A40  6EE9               	movwf	fsr0l,c
 29138  001A42  6AEA               	clrf	fsr0h,c
 29139  001A44  0E01               	movlw	high AESCmac@x
 29140  001A46  22EA               	addwfc	fsr0h,f,c
 29141  001A48  50EF               	movf	indf0,w,c
 29142  001A4A  0100               	movlb	0	; () banked
 29143  001A4C  19C7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 29144  001A4E  6EDF               	movwf	indf2,c
 29145                           
 29146                           ; BSR set to: 0
 29147  001A50  0101               	movlb	1	; () banked
 29148  001A52  2B64               	incf	AESCmac@j& (0+255),f,b
 29149                           
 29150                           ; BSR set to: 1
 29151  001A54  0E0F               	movlw	15
 29152  001A56  6564               	cpfsgt	AESCmac@j& (0+255),b
 29153  001A58  D7CB               	goto	l13108
 29154                           
 29155                           ; BSR set to: 1
 29156                           ;lorawan_aes_cmac.c: 108: }
 29157                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 29158  001A5A  0E50               	movlw	low AESCmac@x
 29159  001A5C  0100               	movlb	0	; () banked
 29160  001A5E  6F64               	movwf	memcpy@d1& (0+255),b
 29161  001A60  0E01               	movlw	high AESCmac@x
 29162  001A62  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 29163  001A64  0E40               	movlw	low AESCmac@y
 29164  001A66  6F66               	movwf	memcpy@s1& (0+255),b
 29165  001A68  0E01               	movlw	high AESCmac@y
 29166  001A6A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29167  001A6C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29168  001A6E  0E10               	movlw	16
 29169  001A70  6F68               	movwf	memcpy@n& (0+255),b
 29170  001A72  EC14  F034         	call	_memcpy	;wreg free
 29171                           
 29172                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 29173  001A76  0E50               	movlw	low AESCmac@x
 29174  001A78  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29175  001A7A  0E01               	movlw	high AESCmac@x
 29176  001A7C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29177  001A7E  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29178  001A82  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29179  001A86  EC5D  F039         	call	_AESEncodeLoRa	;wreg free
 29180                           
 29181                           ; BSR set to: 0
 29182  001A8A  0101               	movlb	1	; () banked
 29183  001A8C  2B65               	incf	AESCmac@i& (0+255),f,b
 29184  001A8E                     l13118:
 29185                           
 29186                           ; BSR set to: 1
 29187  001A8E  0100               	movlb	0	; () banked
 29188  001A90  69C3               	setf	??_AESCmac& (0+255),b
 29189  001A92  69C4               	setf	(??_AESCmac+1)& (0+255),b
 29190  001A94  0101               	movlb	1	; () banked
 29191  001A96  5163               	movf	AESCmac@n& (0+255),w,b
 29192  001A98  0100               	movlb	0	; () banked
 29193  001A9A  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 29194  001A9C  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 29195  001A9E  51C3               	movf	??_AESCmac& (0+255),w,b
 29196  001AA0  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29197  001AA2  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29198  001AA4  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29199  001AA6  0101               	movlb	1	; () banked
 29200  001AA8  5165               	movf	AESCmac@i& (0+255),w,b
 29201  001AAA  0100               	movlb	0	; () banked
 29202  001AAC  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29203  001AAE  6BC8               	clrf	(??_AESCmac+5)& (0+255),b
 29204  001AB0  51C5               	movf	(??_AESCmac+2)& (0+255),w,b
 29205  001AB2  5DC7               	subwf	(??_AESCmac+4)& (0+255),w,b
 29206  001AB4  51C8               	movf	(??_AESCmac+5)& (0+255),w,b
 29207  001AB6  0A80               	xorlw	128
 29208  001AB8  6FC9               	movwf	(??_AESCmac+6)& (0+255),b
 29209  001ABA  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 29210  001ABC  0A80               	xorlw	128
 29211  001ABE  59C9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 29212  001AC0  E395               	bnc	l1469
 29213                           
 29214                           ; BSR set to: 0
 29215                           ;lorawan_aes_cmac.c: 111: }
 29216                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 29217  001AC2  0101               	movlb	1	; () banked
 29218  001AC4  6B65               	clrf	AESCmac@i& (0+255),b
 29219  001AC6                     l13124:
 29220                           
 29221                           ; BSR set to: 1
 29222                           ;lorawan_aes_cmac.c: 114: {
 29223                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 29224  001AC6  0E40               	movlw	low AESCmac@y
 29225  001AC8  2565               	addwf	AESCmac@i& (0+255),w,b
 29226  001ACA  6ED9               	movwf	fsr2l,c
 29227  001ACC  6ADA               	clrf	fsr2h,c
 29228  001ACE  0E01               	movlw	high AESCmac@y
 29229  001AD0  22DA               	addwfc	fsr2h,f,c
 29230  001AD2  0E20               	movlw	low AESCmac@mLast
 29231  001AD4  2565               	addwf	AESCmac@i& (0+255),w,b
 29232  001AD6  6EE9               	movwf	fsr0l,c
 29233  001AD8  6AEA               	clrf	fsr0h,c
 29234  001ADA  0E01               	movlw	high AESCmac@mLast
 29235  001ADC  22EA               	addwfc	fsr0h,f,c
 29236  001ADE  50EF               	movf	indf0,w,c
 29237  001AE0  0100               	movlb	0	; () banked
 29238  001AE2  6FC3               	movwf	??_AESCmac& (0+255),b
 29239  001AE4  0E50               	movlw	low AESCmac@x
 29240  001AE6  0101               	movlb	1	; () banked
 29241  001AE8  2565               	addwf	AESCmac@i& (0+255),w,b
 29242  001AEA  6EE9               	movwf	fsr0l,c
 29243  001AEC  6AEA               	clrf	fsr0h,c
 29244  001AEE  0E01               	movlw	high AESCmac@x
 29245  001AF0  22EA               	addwfc	fsr0h,f,c
 29246  001AF2  50EF               	movf	indf0,w,c
 29247  001AF4  0100               	movlb	0	; () banked
 29248  001AF6  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29249  001AF8  6EDF               	movwf	indf2,c
 29250                           
 29251                           ; BSR set to: 0
 29252  001AFA  0101               	movlb	1	; () banked
 29253  001AFC  2B65               	incf	AESCmac@i& (0+255),f,b
 29254                           
 29255                           ; BSR set to: 1
 29256  001AFE  0E0F               	movlw	15
 29257  001B00  6565               	cpfsgt	AESCmac@i& (0+255),b
 29258  001B02  D7E1               	goto	l13124
 29259                           
 29260                           ; BSR set to: 1
 29261                           ;lorawan_aes_cmac.c: 116: }
 29262                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 29263  001B04  0E40               	movlw	low AESCmac@y
 29264  001B06  0100               	movlb	0	; () banked
 29265  001B08  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29266  001B0A  0E01               	movlw	high AESCmac@y
 29267  001B0C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29268  001B0E  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29269  001B12  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29270  001B16  EC5D  F039         	call	_AESEncodeLoRa	;wreg free
 29271                           
 29272                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 29273  001B1A  C0BE  F064         	movff	AESCmac@output,memcpy@d1
 29274  001B1E  C0BF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 29275  001B22  0E40               	movlw	low AESCmac@y
 29276  001B24  6F66               	movwf	memcpy@s1& (0+255),b
 29277  001B26  0E01               	movlw	high AESCmac@y
 29278  001B28  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29279  001B2A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29280  001B2C  0E10               	movlw	16
 29281  001B2E  6F68               	movwf	memcpy@n& (0+255),b
 29282  001B30  EF14  F034         	goto	_memcpy	;wreg free
 29283  001B34                     __end_of_AESCmac:
 29284                           	opt stack 0
 29285                           tosu	equ	0xFFF
 29286                           tosh	equ	0xFFE
 29287                           tosl	equ	0xFFD
 29288                           pclath	equ	0xFFA
 29289                           tblptru	equ	0xFF8
 29290                           tblptrh	equ	0xFF7
 29291                           tblptrl	equ	0xFF6
 29292                           tablat	equ	0xFF5
 29293                           prodh	equ	0xFF4
 29294                           prodl	equ	0xFF3
 29295                           intcon	equ	0xFF2
 29296                           intcon2	equ	0xFF1
 29297                           intcon3	equ	0xFF0
 29298                           indf0	equ	0xFEF
 29299                           postinc0	equ	0xFEE
 29300                           fsr0h	equ	0xFEA
 29301                           fsr0l	equ	0xFE9
 29302                           wreg	equ	0xFE8
 29303                           postinc1	equ	0xFE6
 29304                           postdec1	equ	0xFE5
 29305                           plusw1	equ	0xFE3
 29306                           fsr1h	equ	0xFE2
 29307                           fsr1l	equ	0xFE1
 29308                           indf2	equ	0xFDF
 29309                           postinc2	equ	0xFDE
 29310                           postdec2	equ	0xFDD
 29311                           plusw2	equ	0xFDB
 29312                           fsr2h	equ	0xFDA
 29313                           fsr2l	equ	0xFD9
 29314                           status	equ	0xFD8
 29315                           
 29316 ;; *************** function _GenerateSubkey *****************
 29317 ;; Defined at:
 29318 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29319 ;; Parameters:    Size  Location     Type
 29320 ;;  key             2   52[BANK0 ] PTR unsigned char 
 29321 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29322 ;;  k1              2   54[BANK0 ] PTR unsigned char 
 29323 ;;		 -> AESCmac@k1(16), 
 29324 ;;  k2              2   56[BANK0 ] PTR unsigned char 
 29325 ;;		 -> AESCmac@k2(16), 
 29326 ;; Auto vars:     Size  Location     Type
 29327 ;;  l              16   75[BANK0 ] unsigned char [16]
 29328 ;;  const_Rb       16   59[BANK0 ] unsigned char [16]
 29329 ;;  i               1   91[BANK0 ] unsigned char 
 29330 ;; Return value:  Size  Location     Type
 29331 ;;                  1    wreg      void 
 29332 ;; Registers used:
 29333 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29334 ;; Tracked objects:
 29335 ;;		On entry : F/0
 29336 ;;		On exit  : F/0
 29337 ;;		Unchanged: 0/0
 29338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29339 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29340 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29342 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29343 ;;Total ram usage:       40 bytes
 29344 ;; Hardware stack levels used:    1
 29345 ;; Hardware stack levels required when called:   10
 29346 ;; This function calls:
 29347 ;;		_AESEncodeLoRa
 29348 ;;		_FillSubKey
 29349 ;;		_memset
 29350 ;; This function is called by:
 29351 ;;		_AESCmac
 29352 ;; This function uses a non-reentrant model
 29353 ;;
 29354                           
 29355                           	psect	text153
 29356  004882                     __ptext153:
 29357                           	opt stack 0
 29358  004882                     _GenerateSubkey:
 29359                           	opt stack 16
 29360                           
 29361                           ; BSR set to: 0
 29362                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 29363                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 29364                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 29365                           
 29366                           ; BSR set to: 0
 29367                           
 29368                           ; BSR set to: 0
 29369                           ;incstack = 0
 29370  004882  EE21  F0B4         	lfsr	2,GenerateSubkey@F7870
 29371  004886  EE00  F09B         	lfsr	0,GenerateSubkey@const_Rb
 29372  00488A  0E0F               	movlw	15
 29373  00488C                     u13651:
 29374  00488C  CFDB FFEB          	movff	plusw2,plusw0
 29375  004890  06E8               	decf	wreg,f,c
 29376  004892  E2FC               	bc	u13651
 29377                           
 29378                           ; BSR set to: 0
 29379                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29380  004894  0EAB               	movlw	low GenerateSubkey@l
 29381  004896  6F64               	movwf	memset@p1& (0+255),b
 29382  004898  6B65               	clrf	(memset@p1+1)& (0+255),b
 29383  00489A  6B67               	clrf	(memset@c+1)& (0+255),b
 29384  00489C  6B66               	clrf	memset@c& (0+255),b
 29385  00489E  6B69               	clrf	(memset@n+1)& (0+255),b
 29386  0048A0  0E10               	movlw	16
 29387  0048A2  6F68               	movwf	memset@n& (0+255),b
 29388  0048A4  EC20  F039         	call	_memset	;wreg free
 29389                           
 29390                           ; BSR set to: 0
 29391                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29392  0048A8  0EAB               	movlw	low GenerateSubkey@l
 29393  0048AA  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29394  0048AC  6B81               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 29395  0048AE  C094  F082         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29396  0048B2  C095  F083         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29397  0048B6  EC5D  F039         	call	_AESEncodeLoRa	;wreg free
 29398                           
 29399                           ; BSR set to: 0
 29400                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29401  0048BA  BFAB               	btfsc	GenerateSubkey@l& (0+255),7,b
 29402  0048BC  D00C               	goto	l12688
 29403                           
 29404                           ; BSR set to: 0
 29405                           ;lorawan_aes_cmac.c: 138: {
 29406                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29407  0048BE  0EAB               	movlw	low GenerateSubkey@l
 29408  0048C0  6F64               	movwf	FillSubKey@source& (0+255),b
 29409  0048C2  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29410  0048C4  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29411  0048C8  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29412  0048CC  0E10               	movlw	16
 29413  0048CE  6F68               	movwf	FillSubKey@size& (0+255),b
 29414  0048D0  ECA2  F035         	call	_FillSubKey	;wreg free
 29415                           
 29416                           ;lorawan_aes_cmac.c: 140: }
 29417  0048D4  D01E               	goto	l12702
 29418  0048D6                     l12688:
 29419                           
 29420                           ; BSR set to: 0
 29421                           ;lorawan_aes_cmac.c: 141: else
 29422                           ;lorawan_aes_cmac.c: 142: {
 29423                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29424  0048D6  0EAB               	movlw	low GenerateSubkey@l
 29425  0048D8  6F64               	movwf	FillSubKey@source& (0+255),b
 29426  0048DA  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29427  0048DC  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29428  0048E0  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29429  0048E4  0E10               	movlw	16
 29430  0048E6  6F68               	movwf	FillSubKey@size& (0+255),b
 29431  0048E8  ECA2  F035         	call	_FillSubKey	;wreg free
 29432                           
 29433                           ; BSR set to: 0
 29434                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29435  0048EC  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29436  0048EE                     l12696:
 29437                           
 29438                           ; BSR set to: 0
 29439                           ;lorawan_aes_cmac.c: 146: {
 29440                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29441  0048EE  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29442  0048F0  0F9B               	addlw	low GenerateSubkey@const_Rb
 29443  0048F2  6ED9               	movwf	fsr2l,c
 29444  0048F4  6ADA               	clrf	fsr2h,c
 29445  0048F6  50DF               	movf	indf2,w,c
 29446  0048F8  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29447  0048FA  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29448  0048FC  2596               	addwf	GenerateSubkey@k1& (0+255),w,b
 29449  0048FE  6ED9               	movwf	fsr2l,c
 29450  004900  0E00               	movlw	0
 29451  004902  2197               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29452  004904  6EDA               	movwf	fsr2h,c
 29453  004906  519A               	movf	??_GenerateSubkey& (0+255),w,b
 29454  004908  1ADF               	xorwf	indf2,f,c
 29455                           
 29456                           ; BSR set to: 0
 29457  00490A  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29458                           
 29459                           ; BSR set to: 0
 29460  00490C  0E0F               	movlw	15
 29461  00490E  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29462  004910  D7EE               	goto	l12696
 29463  004912                     l12702:
 29464                           
 29465                           ; BSR set to: 0
 29466                           ;lorawan_aes_cmac.c: 148: }
 29467                           ;lorawan_aes_cmac.c: 149: }
 29468                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29469  004912  C096  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29470  004916  C097  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29471  00491A  BEDF               	btfsc	indf2,7,c
 29472  00491C  D00C               	goto	l12706
 29473                           
 29474                           ; BSR set to: 0
 29475                           ;lorawan_aes_cmac.c: 153: {
 29476                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29477  00491E  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29478  004922  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29479  004926  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29480  00492A  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29481  00492E  0E10               	movlw	16
 29482  004930  6F68               	movwf	FillSubKey@size& (0+255),b
 29483  004932  EFA2  F035         	goto	_FillSubKey	;wreg free
 29484  004936                     l12706:
 29485                           
 29486                           ; BSR set to: 0
 29487                           ;lorawan_aes_cmac.c: 156: else
 29488                           ;lorawan_aes_cmac.c: 157: {
 29489                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29490  004936  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29491  00493A  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29492  00493E  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29493  004942  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29494  004946  0E10               	movlw	16
 29495  004948  6F68               	movwf	FillSubKey@size& (0+255),b
 29496  00494A  ECA2  F035         	call	_FillSubKey	;wreg free
 29497                           
 29498                           ; BSR set to: 0
 29499                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29500  00494E  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29501  004950                     l12714:
 29502                           
 29503                           ; BSR set to: 0
 29504                           ;lorawan_aes_cmac.c: 161: {
 29505                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29506  004950  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29507  004952  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29508  004954  6ED9               	movwf	fsr2l,c
 29509  004956  0E00               	movlw	0
 29510  004958  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29511  00495A  6EDA               	movwf	fsr2h,c
 29512  00495C  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29513  00495E  0F9B               	addlw	low GenerateSubkey@const_Rb
 29514  004960  6EE9               	movwf	fsr0l,c
 29515  004962  6AEA               	clrf	fsr0h,c
 29516  004964  50EF               	movf	indf0,w,c
 29517  004966  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29518  004968  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29519  00496A  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29520  00496C  6EE9               	movwf	fsr0l,c
 29521  00496E  0E00               	movlw	0
 29522  004970  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29523  004972  6EEA               	movwf	fsr0h,c
 29524  004974  50EF               	movf	indf0,w,c
 29525  004976  199A               	xorwf	??_GenerateSubkey& (0+255),w,b
 29526  004978  6EDF               	movwf	indf2,c
 29527                           
 29528                           ; BSR set to: 0
 29529  00497A  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29530                           
 29531                           ; BSR set to: 0
 29532  00497C  0E0F               	movlw	15
 29533  00497E  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29534  004980  D7E7               	goto	l12714
 29535  004982  0C0F               	retlw	15
 29536  004984                     __end_of_GenerateSubkey:
 29537                           	opt stack 0
 29538                           tosu	equ	0xFFF
 29539                           tosh	equ	0xFFE
 29540                           tosl	equ	0xFFD
 29541                           pclath	equ	0xFFA
 29542                           tblptru	equ	0xFF8
 29543                           tblptrh	equ	0xFF7
 29544                           tblptrl	equ	0xFF6
 29545                           tablat	equ	0xFF5
 29546                           prodh	equ	0xFF4
 29547                           prodl	equ	0xFF3
 29548                           intcon	equ	0xFF2
 29549                           intcon2	equ	0xFF1
 29550                           intcon3	equ	0xFF0
 29551                           indf0	equ	0xFEF
 29552                           postinc0	equ	0xFEE
 29553                           plusw0	equ	0xFEB
 29554                           fsr0h	equ	0xFEA
 29555                           fsr0l	equ	0xFE9
 29556                           wreg	equ	0xFE8
 29557                           postinc1	equ	0xFE6
 29558                           postdec1	equ	0xFE5
 29559                           plusw1	equ	0xFE3
 29560                           fsr1h	equ	0xFE2
 29561                           fsr1l	equ	0xFE1
 29562                           indf2	equ	0xFDF
 29563                           postinc2	equ	0xFDE
 29564                           postdec2	equ	0xFDD
 29565                           plusw2	equ	0xFDB
 29566                           fsr2h	equ	0xFDA
 29567                           fsr2l	equ	0xFD9
 29568                           status	equ	0xFD8
 29569                           
 29570 ;; *************** function _FillSubKey *****************
 29571 ;; Defined at:
 29572 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29573 ;; Parameters:    Size  Location     Type
 29574 ;;  source          2    4[BANK0 ] PTR unsigned char 
 29575 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29576 ;;  key             2    6[BANK0 ] PTR unsigned char 
 29577 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29578 ;;  size            1    8[BANK0 ] unsigned char 
 29579 ;; Auto vars:     Size  Location     Type
 29580 ;;  i               1   11[BANK0 ] unsigned char 
 29581 ;;  carry           1   10[BANK0 ] unsigned char 
 29582 ;; Return value:  Size  Location     Type
 29583 ;;                  1    wreg      void 
 29584 ;; Registers used:
 29585 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 29586 ;; Tracked objects:
 29587 ;;		On entry : F/0
 29588 ;;		On exit  : F/0
 29589 ;;		Unchanged: 0/0
 29590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29591 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29594 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29595 ;;Total ram usage:        8 bytes
 29596 ;; Hardware stack levels used:    1
 29597 ;; Hardware stack levels required when called:    7
 29598 ;; This function calls:
 29599 ;;		Nothing
 29600 ;; This function is called by:
 29601 ;;		_GenerateSubkey
 29602 ;; This function uses a non-reentrant model
 29603 ;;
 29604                           
 29605                           	psect	text154
 29606  006B44                     __ptext154:
 29607                           	opt stack 0
 29608  006B44                     _FillSubKey:
 29609                           	opt stack 18
 29610                           
 29611                           ; BSR set to: 0
 29612                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29613                           
 29614                           ; BSR set to: 0
 29615                           ;incstack = 0
 29616  006B44  6B6B               	clrf	FillSubKey@i& (0+255),b
 29617                           
 29618                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29619  006B46  6B6A               	clrf	FillSubKey@carry& (0+255),b
 29620                           
 29621                           ;lorawan_aes_cmac.c: 172: i=size;
 29622  006B48  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 29623                           
 29624                           ;lorawan_aes_cmac.c: 174: while(i--)
 29625  006B4C  D01C               	goto	l12412
 29626  006B4E                     l12408:
 29627                           
 29628                           ; BSR set to: 0
 29629                           ;lorawan_aes_cmac.c: 175: {
 29630                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29631  006B4E  516B               	movf	FillSubKey@i& (0+255),w,b
 29632  006B50  2566               	addwf	FillSubKey@key& (0+255),w,b
 29633  006B52  6ED9               	movwf	fsr2l,c
 29634  006B54  0E00               	movlw	0
 29635  006B56  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29636  006B58  6EDA               	movwf	fsr2h,c
 29637  006B5A  516B               	movf	FillSubKey@i& (0+255),w,b
 29638  006B5C  2564               	addwf	FillSubKey@source& (0+255),w,b
 29639  006B5E  6EE9               	movwf	fsr0l,c
 29640  006B60  0E00               	movlw	0
 29641  006B62  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29642  006B64  6EEA               	movwf	fsr0h,c
 29643  006B66  50EF               	movf	indf0,w,c
 29644  006B68  6F69               	movwf	??_FillSubKey& (0+255),b
 29645  006B6A  90D8               	bcf	status,0,c
 29646  006B6C  3569               	rlcf	??_FillSubKey& (0+255),w,b
 29647  006B6E  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 29648  006B70  6EDF               	movwf	indf2,c
 29649                           
 29650                           ; BSR set to: 0
 29651                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29652  006B72  516B               	movf	FillSubKey@i& (0+255),w,b
 29653  006B74  2564               	addwf	FillSubKey@source& (0+255),w,b
 29654  006B76  6ED9               	movwf	fsr2l,c
 29655  006B78  0E00               	movlw	0
 29656  006B7A  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29657  006B7C  6EDA               	movwf	fsr2h,c
 29658  006B7E  0E01               	movlw	1
 29659  006B80  AEDF               	btfss	indf2,7,c
 29660  006B82  0E00               	movlw	0
 29661  006B84  6F6A               	movwf	FillSubKey@carry& (0+255),b
 29662  006B86                     l12412:
 29663                           
 29664                           ; BSR set to: 0
 29665  006B86  076B               	decf	FillSubKey@i& (0+255),f,b
 29666  006B88  296B               	incf	FillSubKey@i& (0+255),w,b
 29667  006B8A  E1E1               	bnz	l12408
 29668                           
 29669                           ; BSR set to: 0
 29670  006B8C  0012               	return		;funcret
 29671  006B8E                     __end_of_FillSubKey:
 29672                           	opt stack 0
 29673                           tosu	equ	0xFFF
 29674                           tosh	equ	0xFFE
 29675                           tosl	equ	0xFFD
 29676                           pclath	equ	0xFFA
 29677                           tblptru	equ	0xFF8
 29678                           tblptrh	equ	0xFF7
 29679                           tblptrl	equ	0xFF6
 29680                           tablat	equ	0xFF5
 29681                           prodh	equ	0xFF4
 29682                           prodl	equ	0xFF3
 29683                           intcon	equ	0xFF2
 29684                           intcon2	equ	0xFF1
 29685                           intcon3	equ	0xFF0
 29686                           indf0	equ	0xFEF
 29687                           postinc0	equ	0xFEE
 29688                           plusw0	equ	0xFEB
 29689                           fsr0h	equ	0xFEA
 29690                           fsr0l	equ	0xFE9
 29691                           wreg	equ	0xFE8
 29692                           postinc1	equ	0xFE6
 29693                           postdec1	equ	0xFE5
 29694                           plusw1	equ	0xFE3
 29695                           fsr1h	equ	0xFE2
 29696                           fsr1l	equ	0xFE1
 29697                           indf2	equ	0xFDF
 29698                           postinc2	equ	0xFDE
 29699                           postdec2	equ	0xFDD
 29700                           plusw2	equ	0xFDB
 29701                           fsr2h	equ	0xFDA
 29702                           fsr2l	equ	0xFD9
 29703                           status	equ	0xFD8
 29704                           
 29705 ;; *************** function _AESEncodeLoRa *****************
 29706 ;; Defined at:
 29707 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29708 ;; Parameters:    Size  Location     Type
 29709 ;;  block           2   32[BANK0 ] PTR unsigned char 
 29710 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29711 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29712 ;;  key             2   34[BANK0 ] PTR unsigned char 
 29713 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29714 ;; Auto vars:     Size  Location     Type
 29715 ;;  useKey         16   36[BANK0 ] unsigned char [16]
 29716 ;; Return value:  Size  Location     Type
 29717 ;;                  1    wreg      void 
 29718 ;; Registers used:
 29719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29720 ;; Tracked objects:
 29721 ;;		On entry : F/0
 29722 ;;		On exit  : F/0
 29723 ;;		Unchanged: 0/0
 29724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29726 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29728 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29729 ;;Total ram usage:       20 bytes
 29730 ;; Hardware stack levels used:    1
 29731 ;; Hardware stack levels required when called:    9
 29732 ;; This function calls:
 29733 ;;		_AESEncode
 29734 ;;		_memcpy
 29735 ;; This function is called by:
 29736 ;;		_AESCmac
 29737 ;;		_GenerateSubkey
 29738 ;;		_LORAWAN_RxDone
 29739 ;;		_ComputeSessionKeys
 29740 ;;		_EncryptFRMPayload
 29741 ;; This function uses a non-reentrant model
 29742 ;;
 29743                           
 29744                           	psect	text155
 29745  0072BA                     __ptext155:
 29746                           	opt stack 0
 29747  0072BA                     _AESEncodeLoRa:
 29748                           	opt stack 17
 29749                           
 29750                           ; BSR set to: 0
 29751                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29752                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29753                           
 29754                           ; BSR set to: 0
 29755                           ;incstack = 0
 29756  0072BA  0E84               	movlw	low AESEncodeLoRa@useKey
 29757  0072BC  6F64               	movwf	memcpy@d1& (0+255),b
 29758  0072BE  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29759  0072C0  C082  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 29760  0072C4  C083  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29761  0072C8  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29762  0072CA  0E10               	movlw	16
 29763  0072CC  6F68               	movwf	memcpy@n& (0+255),b
 29764  0072CE  EC14  F034         	call	_memcpy	;wreg free
 29765                           
 29766                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29767  0072D2  C080  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 29768  0072D6  C081  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29769  0072DA  0E84               	movlw	low AESEncodeLoRa@useKey
 29770  0072DC  6F6C               	movwf	AESEncode@key& (0+255),b
 29771  0072DE  EF04  F012         	goto	_AESEncode	;wreg free
 29772  0072E2                     __end_of_AESEncodeLoRa:
 29773                           	opt stack 0
 29774                           tosu	equ	0xFFF
 29775                           tosh	equ	0xFFE
 29776                           tosl	equ	0xFFD
 29777                           pclath	equ	0xFFA
 29778                           tblptru	equ	0xFF8
 29779                           tblptrh	equ	0xFF7
 29780                           tblptrl	equ	0xFF6
 29781                           tablat	equ	0xFF5
 29782                           prodh	equ	0xFF4
 29783                           prodl	equ	0xFF3
 29784                           intcon	equ	0xFF2
 29785                           intcon2	equ	0xFF1
 29786                           intcon3	equ	0xFF0
 29787                           indf0	equ	0xFEF
 29788                           postinc0	equ	0xFEE
 29789                           plusw0	equ	0xFEB
 29790                           fsr0h	equ	0xFEA
 29791                           fsr0l	equ	0xFE9
 29792                           wreg	equ	0xFE8
 29793                           postinc1	equ	0xFE6
 29794                           postdec1	equ	0xFE5
 29795                           plusw1	equ	0xFE3
 29796                           fsr1h	equ	0xFE2
 29797                           fsr1l	equ	0xFE1
 29798                           indf2	equ	0xFDF
 29799                           postinc2	equ	0xFDE
 29800                           postdec2	equ	0xFDD
 29801                           plusw2	equ	0xFDB
 29802                           fsr2h	equ	0xFDA
 29803                           fsr2l	equ	0xFD9
 29804                           status	equ	0xFD8
 29805                           
 29806 ;; *************** function _AESEncode *****************
 29807 ;; Defined at:
 29808 ;;		line 217 in file "mcc_generated_files/LoRaWAN/AES.c"
 29809 ;; Parameters:    Size  Location     Type
 29810 ;;  block           2   10[BANK0 ] PTR unsigned char 
 29811 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29812 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29813 ;;  key             1   12[BANK0 ] PTR unsigned char 
 29814 ;;		 -> AESEncodeLoRa@useKey(16), 
 29815 ;; Auto vars:     Size  Location     Type
 29816 ;;  aux3            1   30[BANK0 ] unsigned char 
 29817 ;;  aux1            1   29[BANK0 ] unsigned char 
 29818 ;;  aux2            1   28[BANK0 ] unsigned char 
 29819 ;;  aux             1   27[BANK0 ] unsigned char 
 29820 ;;  i               1   31[BANK0 ] unsigned char 
 29821 ;;  temp            1    0        unsigned char 
 29822 ;; Return value:  Size  Location     Type
 29823 ;;                  1    wreg      void 
 29824 ;; Registers used:
 29825 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29826 ;; Tracked objects:
 29827 ;;		On entry : F/0
 29828 ;;		On exit  : F/0
 29829 ;;		Unchanged: 0/0
 29830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29831 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29832 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29833 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29834 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29835 ;;Total ram usage:       22 bytes
 29836 ;; Hardware stack levels used:    1
 29837 ;; Hardware stack levels required when called:    8
 29838 ;; This function calls:
 29839 ;;		_EncKeySchedule
 29840 ;;		_EncodeShiftRow
 29841 ;; This function is called by:
 29842 ;;		_AESEncodeLoRa
 29843 ;; This function uses a non-reentrant model
 29844 ;;
 29845                           
 29846                           	psect	text156
 29847  002408                     __ptext156:
 29848                           	opt stack 0
 29849  002408                     _AESEncode:
 29850                           	opt stack 17
 29851                           
 29852                           ; BSR set to: 0
 29853                           ;AES.c: 219: unsigned char i;
 29854                           ;AES.c: 220: unsigned char temp;
 29855                           ;AES.c: 223: _roundCounter = 10;
 29856                           
 29857                           ; BSR set to: 0
 29858                           ;incstack = 0
 29859  002408  0E0A               	movlw	10
 29860  00240A  6E44               	movwf	__roundCounter,c
 29861                           
 29862                           ;AES.c: 225: _rcon = 0x01;
 29863  00240C  0E01               	movlw	1
 29864  00240E  6FEE               	movwf	__rcon& (0+255),b
 29865                           
 29866                           ; BSR set to: 0
 29867                           ;AES.c: 228: for(i=0;i<16;i++)
 29868  002410  6B7F               	clrf	AESEncode@i& (0+255),b
 29869  002412                     l12016:
 29870                           
 29871                           ; BSR set to: 0
 29872                           ;AES.c: 229: {
 29873                           ;AES.c: 230: block[i] ^= key[i];
 29874  002412  516C               	movf	AESEncode@key& (0+255),w,b
 29875  002414  257F               	addwf	AESEncode@i& (0+255),w,b
 29876  002416  6ED9               	movwf	fsr2l,c
 29877  002418  6ADA               	clrf	fsr2h,c
 29878  00241A  50DF               	movf	indf2,w,c
 29879  00241C  6F6D               	movwf	??_AESEncode& (0+255),b
 29880  00241E  517F               	movf	AESEncode@i& (0+255),w,b
 29881  002420  256A               	addwf	AESEncode@block& (0+255),w,b
 29882  002422  6ED9               	movwf	fsr2l,c
 29883  002424  0E00               	movlw	0
 29884  002426  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29885  002428  6EDA               	movwf	fsr2h,c
 29886  00242A  516D               	movf	??_AESEncode& (0+255),w,b
 29887  00242C  1ADF               	xorwf	indf2,f,c
 29888                           
 29889                           ; BSR set to: 0
 29890  00242E  2B7F               	incf	AESEncode@i& (0+255),f,b
 29891                           
 29892                           ; BSR set to: 0
 29893  002430  0E0F               	movlw	15
 29894  002432  657F               	cpfsgt	AESEncode@i& (0+255),b
 29895  002434  D7EE               	goto	l12016
 29896  002436                     l2522:
 29897                           
 29898                           ; BSR set to: 0
 29899                           ;AES.c: 234: {
 29900                           ;AES.c: 237: for(i=0;i<16;i++)
 29901  002436  6B7F               	clrf	AESEncode@i& (0+255),b
 29902  002438                     l12026:
 29903                           
 29904                           ; BSR set to: 0
 29905                           ;AES.c: 238: {
 29906                           ;AES.c: 239: block[i]=STable[block[i]];
 29907  002438  517F               	movf	AESEncode@i& (0+255),w,b
 29908  00243A  256A               	addwf	AESEncode@block& (0+255),w,b
 29909  00243C  6ED9               	movwf	fsr2l,c
 29910  00243E  0E00               	movlw	0
 29911  002440  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29912  002442  6EDA               	movwf	fsr2h,c
 29913  002444  50DF               	movf	indf2,w,c
 29914  002446  6F6D               	movwf	??_AESEncode& (0+255),b
 29915  002448  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29916  00244A  0E6D               	movlw	low _STable
 29917  00244C  256D               	addwf	??_AESEncode& (0+255),w,b
 29918  00244E  6EF6               	movwf	tblptrl,c
 29919  002450  0EFE               	movlw	high _STable
 29920  002452  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29921  002454  6EF7               	movwf	tblptrh,c
 29922  002456                     	if	1	;There are 3 active tblptr bytes
 29923  002456  6AF8               	clrf	tblptru,c
 29924  002458  0E00               	movlw	low (__mediumconst shr (0+16))
 29925  00245A  22F8               	addwfc	tblptru,f,c
 29926  00245C                     	endif
 29927  00245C  517F               	movf	AESEncode@i& (0+255),w,b
 29928  00245E  256A               	addwf	AESEncode@block& (0+255),w,b
 29929  002460  6ED9               	movwf	fsr2l,c
 29930  002462  0E00               	movlw	0
 29931  002464  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29932  002466  6EDA               	movwf	fsr2h,c
 29933  002468  0008               	tblrd		*
 29934  00246A  CFF5 FFDF          	movff	tablat,indf2
 29935                           
 29936                           ; BSR set to: 0
 29937  00246E  2B7F               	incf	AESEncode@i& (0+255),f,b
 29938                           
 29939                           ; BSR set to: 0
 29940  002470  0E0F               	movlw	15
 29941  002472  657F               	cpfsgt	AESEncode@i& (0+255),b
 29942  002474  D7E1               	goto	l12026
 29943                           
 29944                           ; BSR set to: 0
 29945                           ;AES.c: 240: }
 29946                           ;AES.c: 243: EncodeShiftRow(block);
 29947  002476  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29948  00247A  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29949  00247E  EC9E  F01E         	call	_EncodeShiftRow	;wreg free
 29950                           
 29951                           ; BSR set to: 0
 29952                           ;AES.c: 246: if(_roundCounter != 1)
 29953  002482  0444               	decf	__roundCounter,w,c
 29954  002484  E101 D111          	bz	l12074
 29955                           
 29956                           ; BSR set to: 0
 29957                           ;AES.c: 247: {
 29958                           ;AES.c: 248: unsigned char aux,aux1,aux2,aux3;
 29959                           ;AES.c: 250: for(i=0;i<16;i+=4)
 29960  002488  6B7F               	clrf	AESEncode@i& (0+255),b
 29961  00248A                     l12042:
 29962                           
 29963                           ; BSR set to: 0
 29964                           ;AES.c: 251: {
 29965                           ;AES.c: 252: aux1= block[i+0] ^ block[i+1];
 29966  00248A  517F               	movf	AESEncode@i& (0+255),w,b
 29967  00248C  256A               	addwf	AESEncode@block& (0+255),w,b
 29968  00248E  6F6D               	movwf	??_AESEncode& (0+255),b
 29969  002490  0E00               	movlw	0
 29970  002492  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29971  002494  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29972  002496  296D               	incf	??_AESEncode& (0+255),w,b
 29973  002498  6ED9               	movwf	fsr2l,c
 29974  00249A  0E00               	movlw	0
 29975  00249C  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29976  00249E  6EDA               	movwf	fsr2h,c
 29977  0024A0  50DF               	movf	indf2,w,c
 29978  0024A2  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 29979  0024A4  517F               	movf	AESEncode@i& (0+255),w,b
 29980  0024A6  256A               	addwf	AESEncode@block& (0+255),w,b
 29981  0024A8  6ED9               	movwf	fsr2l,c
 29982  0024AA  0E00               	movlw	0
 29983  0024AC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29984  0024AE  6EDA               	movwf	fsr2h,c
 29985  0024B0  50DF               	movf	indf2,w,c
 29986  0024B2  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 29987  0024B4  6F7D               	movwf	AESEncode@aux1& (0+255),b
 29988                           
 29989                           ;AES.c: 253: aux3= block[i+2]^block[i+3];
 29990  0024B6  517F               	movf	AESEncode@i& (0+255),w,b
 29991  0024B8  256A               	addwf	AESEncode@block& (0+255),w,b
 29992  0024BA  6F6D               	movwf	??_AESEncode& (0+255),b
 29993  0024BC  0E00               	movlw	0
 29994  0024BE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29995  0024C0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 29996  0024C2  0E03               	movlw	3
 29997  0024C4  256D               	addwf	??_AESEncode& (0+255),w,b
 29998  0024C6  6ED9               	movwf	fsr2l,c
 29999  0024C8  0E00               	movlw	0
 30000  0024CA  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30001  0024CC  6EDA               	movwf	fsr2h,c
 30002  0024CE  50DF               	movf	indf2,w,c
 30003  0024D0  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30004  0024D2  517F               	movf	AESEncode@i& (0+255),w,b
 30005  0024D4  256A               	addwf	AESEncode@block& (0+255),w,b
 30006  0024D6  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30007  0024D8  0E00               	movlw	0
 30008  0024DA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30009  0024DC  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30010  0024DE  0E02               	movlw	2
 30011  0024E0  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30012  0024E2  6ED9               	movwf	fsr2l,c
 30013  0024E4  0E00               	movlw	0
 30014  0024E6  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30015  0024E8  6EDA               	movwf	fsr2h,c
 30016  0024EA  50DF               	movf	indf2,w,c
 30017  0024EC  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30018  0024EE  6F7E               	movwf	AESEncode@aux3& (0+255),b
 30019                           
 30020                           ; BSR set to: 0
 30021                           ;AES.c: 254: aux = aux1 ^ aux3;
 30022  0024F0  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30023  0024F2  6F7B               	movwf	AESEncode@aux& (0+255),b
 30024                           
 30025                           ; BSR set to: 0
 30026                           ;AES.c: 255: aux2= block[i+2]^block[i+1];
 30027  0024F4  517F               	movf	AESEncode@i& (0+255),w,b
 30028  0024F6  256A               	addwf	AESEncode@block& (0+255),w,b
 30029  0024F8  6F6D               	movwf	??_AESEncode& (0+255),b
 30030  0024FA  0E00               	movlw	0
 30031  0024FC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30032  0024FE  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30033  002500  296D               	incf	??_AESEncode& (0+255),w,b
 30034  002502  6ED9               	movwf	fsr2l,c
 30035  002504  0E00               	movlw	0
 30036  002506  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30037  002508  6EDA               	movwf	fsr2h,c
 30038  00250A  50DF               	movf	indf2,w,c
 30039  00250C  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30040  00250E  517F               	movf	AESEncode@i& (0+255),w,b
 30041  002510  256A               	addwf	AESEncode@block& (0+255),w,b
 30042  002512  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30043  002514  0E00               	movlw	0
 30044  002516  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30045  002518  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30046  00251A  0E02               	movlw	2
 30047  00251C  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30048  00251E  6ED9               	movwf	fsr2l,c
 30049  002520  0E00               	movlw	0
 30050  002522  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30051  002524  6EDA               	movwf	fsr2h,c
 30052  002526  50DF               	movf	indf2,w,c
 30053  002528  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30054  00252A  6F7C               	movwf	AESEncode@aux2& (0+255),b
 30055                           
 30056                           ;AES.c: 257: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 30057  00252C  0E7F               	movlw	127
 30058  00252E  657D               	cpfsgt	AESEncode@aux1& (0+255),b
 30059  002530  D00C               	goto	l12050
 30060                           
 30061                           ; BSR set to: 0
 30062  002532  0E1B               	movlw	27
 30063  002534  C07D  F06D         	movff	AESEncode@aux1,??_AESEncode
 30064  002538  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30065  00253A  90D8               	bcf	status,0,c
 30066  00253C  376D               	rlcf	??_AESEncode& (0+255),f,b
 30067  00253E  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30068  002540  196D               	xorwf	??_AESEncode& (0+255),w,b
 30069  002542  6F75               	movwf	_AESEncode$4143& (0+255),b
 30070  002544  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30071  002546  6F76               	movwf	(_AESEncode$4143+1)& (0+255),b
 30072  002548  D005               	goto	l12052
 30073  00254A                     l12050:
 30074                           
 30075                           ; BSR set to: 0
 30076  00254A  90D8               	bcf	status,0,c
 30077  00254C  357D               	rlcf	AESEncode@aux1& (0+255),w,b
 30078  00254E  6F75               	movwf	_AESEncode$4143& (0+255),b
 30079  002550  6B76               	clrf	(_AESEncode$4143+1)& (0+255),b
 30080  002552  3776               	rlcf	(_AESEncode$4143+1)& (0+255),f,b
 30081  002554                     l12052:
 30082                           
 30083                           ; BSR set to: 0
 30084  002554  C075  F07D         	movff	_AESEncode$4143,AESEncode@aux1
 30085                           
 30086                           ;AES.c: 258: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 30087  002558  0E7F               	movlw	127
 30088  00255A  657C               	cpfsgt	AESEncode@aux2& (0+255),b
 30089  00255C  D00C               	goto	l12056
 30090                           
 30091                           ; BSR set to: 0
 30092  00255E  0E1B               	movlw	27
 30093  002560  C07C  F06D         	movff	AESEncode@aux2,??_AESEncode
 30094  002564  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30095  002566  90D8               	bcf	status,0,c
 30096  002568  376D               	rlcf	??_AESEncode& (0+255),f,b
 30097  00256A  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30098  00256C  196D               	xorwf	??_AESEncode& (0+255),w,b
 30099  00256E  6F77               	movwf	_AESEncode$4144& (0+255),b
 30100  002570  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30101  002572  6F78               	movwf	(_AESEncode$4144+1)& (0+255),b
 30102  002574  D005               	goto	l12058
 30103  002576                     l12056:
 30104                           
 30105                           ; BSR set to: 0
 30106  002576  90D8               	bcf	status,0,c
 30107  002578  357C               	rlcf	AESEncode@aux2& (0+255),w,b
 30108  00257A  6F77               	movwf	_AESEncode$4144& (0+255),b
 30109  00257C  6B78               	clrf	(_AESEncode$4144+1)& (0+255),b
 30110  00257E  3778               	rlcf	(_AESEncode$4144+1)& (0+255),f,b
 30111  002580                     l12058:
 30112                           
 30113                           ; BSR set to: 0
 30114  002580  C077  F07C         	movff	_AESEncode$4144,AESEncode@aux2
 30115                           
 30116                           ;AES.c: 259: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 30117  002584  0E7F               	movlw	127
 30118  002586  657E               	cpfsgt	AESEncode@aux3& (0+255),b
 30119  002588  D00C               	goto	l12062
 30120                           
 30121                           ; BSR set to: 0
 30122  00258A  0E1B               	movlw	27
 30123  00258C  C07E  F06D         	movff	AESEncode@aux3,??_AESEncode
 30124  002590  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30125  002592  90D8               	bcf	status,0,c
 30126  002594  376D               	rlcf	??_AESEncode& (0+255),f,b
 30127  002596  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30128  002598  196D               	xorwf	??_AESEncode& (0+255),w,b
 30129  00259A  6F79               	movwf	_AESEncode$4145& (0+255),b
 30130  00259C  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30131  00259E  6F7A               	movwf	(_AESEncode$4145+1)& (0+255),b
 30132  0025A0  D005               	goto	l12064
 30133  0025A2                     l12062:
 30134                           
 30135                           ; BSR set to: 0
 30136  0025A2  90D8               	bcf	status,0,c
 30137  0025A4  357E               	rlcf	AESEncode@aux3& (0+255),w,b
 30138  0025A6  6F79               	movwf	_AESEncode$4145& (0+255),b
 30139  0025A8  6B7A               	clrf	(_AESEncode$4145+1)& (0+255),b
 30140  0025AA  377A               	rlcf	(_AESEncode$4145+1)& (0+255),f,b
 30141  0025AC                     l12064:
 30142                           
 30143                           ; BSR set to: 0
 30144  0025AC  C079  F07E         	movff	_AESEncode$4145,AESEncode@aux3
 30145                           
 30146                           ; BSR set to: 0
 30147                           ;AES.c: 261: block[i+0]= aux^aux1^block[i+0];
 30148  0025B0  517F               	movf	AESEncode@i& (0+255),w,b
 30149  0025B2  256A               	addwf	AESEncode@block& (0+255),w,b
 30150  0025B4  6ED9               	movwf	fsr2l,c
 30151  0025B6  0E00               	movlw	0
 30152  0025B8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30153  0025BA  6EDA               	movwf	fsr2h,c
 30154  0025BC  517F               	movf	AESEncode@i& (0+255),w,b
 30155  0025BE  256A               	addwf	AESEncode@block& (0+255),w,b
 30156  0025C0  6EE9               	movwf	fsr0l,c
 30157  0025C2  0E00               	movlw	0
 30158  0025C4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30159  0025C6  6EEA               	movwf	fsr0h,c
 30160  0025C8  50EF               	movf	indf0,w,c
 30161  0025CA  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30162  0025CC  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30163  0025CE  6EDF               	movwf	indf2,c
 30164                           
 30165                           ; BSR set to: 0
 30166                           ;AES.c: 262: block[i+1]= aux^aux2^block[i+1];
 30167  0025D0  517F               	movf	AESEncode@i& (0+255),w,b
 30168  0025D2  256A               	addwf	AESEncode@block& (0+255),w,b
 30169  0025D4  6F6D               	movwf	??_AESEncode& (0+255),b
 30170  0025D6  0E00               	movlw	0
 30171  0025D8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30172  0025DA  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30173  0025DC  296D               	incf	??_AESEncode& (0+255),w,b
 30174  0025DE  6ED9               	movwf	fsr2l,c
 30175  0025E0  0E00               	movlw	0
 30176  0025E2  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30177  0025E4  6EDA               	movwf	fsr2h,c
 30178  0025E6  517F               	movf	AESEncode@i& (0+255),w,b
 30179  0025E8  256A               	addwf	AESEncode@block& (0+255),w,b
 30180  0025EA  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30181  0025EC  0E00               	movlw	0
 30182  0025EE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30183  0025F0  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30184  0025F2  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 30185  0025F4  6EE9               	movwf	fsr0l,c
 30186  0025F6  0E00               	movlw	0
 30187  0025F8  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30188  0025FA  6EEA               	movwf	fsr0h,c
 30189  0025FC  50EF               	movf	indf0,w,c
 30190  0025FE  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30191  002600  197C               	xorwf	AESEncode@aux2& (0+255),w,b
 30192  002602  6EDF               	movwf	indf2,c
 30193                           
 30194                           ; BSR set to: 0
 30195                           ;AES.c: 263: block[i+2]= aux^aux3^block[i+2];
 30196  002604  517F               	movf	AESEncode@i& (0+255),w,b
 30197  002606  256A               	addwf	AESEncode@block& (0+255),w,b
 30198  002608  6F6D               	movwf	??_AESEncode& (0+255),b
 30199  00260A  0E00               	movlw	0
 30200  00260C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30201  00260E  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30202  002610  0E02               	movlw	2
 30203  002612  256D               	addwf	??_AESEncode& (0+255),w,b
 30204  002614  6ED9               	movwf	fsr2l,c
 30205  002616  0E00               	movlw	0
 30206  002618  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30207  00261A  6EDA               	movwf	fsr2h,c
 30208  00261C  517F               	movf	AESEncode@i& (0+255),w,b
 30209  00261E  256A               	addwf	AESEncode@block& (0+255),w,b
 30210  002620  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30211  002622  0E00               	movlw	0
 30212  002624  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30213  002626  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30214  002628  0E02               	movlw	2
 30215  00262A  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30216  00262C  6EE9               	movwf	fsr0l,c
 30217  00262E  0E00               	movlw	0
 30218  002630  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30219  002632  6EEA               	movwf	fsr0h,c
 30220  002634  50EF               	movf	indf0,w,c
 30221  002636  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30222  002638  197E               	xorwf	AESEncode@aux3& (0+255),w,b
 30223  00263A  6EDF               	movwf	indf2,c
 30224                           
 30225                           ; BSR set to: 0
 30226                           ;AES.c: 264: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 30227  00263C  517F               	movf	AESEncode@i& (0+255),w,b
 30228  00263E  256A               	addwf	AESEncode@block& (0+255),w,b
 30229  002640  6F6D               	movwf	??_AESEncode& (0+255),b
 30230  002642  0E00               	movlw	0
 30231  002644  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30232  002646  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30233  002648  0E03               	movlw	3
 30234  00264A  256D               	addwf	??_AESEncode& (0+255),w,b
 30235  00264C  6ED9               	movwf	fsr2l,c
 30236  00264E  0E00               	movlw	0
 30237  002650  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30238  002652  6EDA               	movwf	fsr2h,c
 30239  002654  517F               	movf	AESEncode@i& (0+255),w,b
 30240  002656  256A               	addwf	AESEncode@block& (0+255),w,b
 30241  002658  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30242  00265A  0E00               	movlw	0
 30243  00265C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30244  00265E  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30245  002660  0E02               	movlw	2
 30246  002662  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30247  002664  6EE9               	movwf	fsr0l,c
 30248  002666  0E00               	movlw	0
 30249  002668  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30250  00266A  6EEA               	movwf	fsr0h,c
 30251  00266C  50EF               	movf	indf0,w,c
 30252  00266E  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30253  002670  517F               	movf	AESEncode@i& (0+255),w,b
 30254  002672  256A               	addwf	AESEncode@block& (0+255),w,b
 30255  002674  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 30256  002676  0E00               	movlw	0
 30257  002678  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30258  00267A  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 30259  00267C  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 30260  00267E  6EE9               	movwf	fsr0l,c
 30261  002680  0E00               	movlw	0
 30262  002682  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 30263  002684  6EEA               	movwf	fsr0h,c
 30264  002686  50EF               	movf	indf0,w,c
 30265  002688  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 30266  00268A  517F               	movf	AESEncode@i& (0+255),w,b
 30267  00268C  256A               	addwf	AESEncode@block& (0+255),w,b
 30268  00268E  6EE9               	movwf	fsr0l,c
 30269  002690  0E00               	movlw	0
 30270  002692  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30271  002694  6EEA               	movwf	fsr0h,c
 30272  002696  50EF               	movf	indf0,w,c
 30273  002698  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 30274  00269A  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 30275  00269C  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30276  00269E  6EDF               	movwf	indf2,c
 30277  0026A0  0E04               	movlw	4
 30278  0026A2  277F               	addwf	AESEncode@i& (0+255),f,b
 30279  0026A4  0E0F               	movlw	15
 30280  0026A6  657F               	cpfsgt	AESEncode@i& (0+255),b
 30281  0026A8  D6F0               	goto	l12042
 30282  0026AA                     l12074:
 30283                           
 30284                           ; BSR set to: 0
 30285                           ;AES.c: 265: }
 30286                           ;AES.c: 266: }
 30287                           ;AES.c: 268: EncKeySchedule(key);
 30288  0026AA  C06C  F064         	movff	AESEncode@key,EncKeySchedule@key
 30289  0026AE  ECC0  F014         	call	_EncKeySchedule	;wreg free
 30290                           
 30291                           ; BSR set to: 0
 30292                           ;AES.c: 271: for(i=0;i<16;i++)
 30293  0026B2  6B7F               	clrf	AESEncode@i& (0+255),b
 30294  0026B4                     l12082:
 30295                           
 30296                           ; BSR set to: 0
 30297                           ;AES.c: 272: {
 30298                           ;AES.c: 273: block[i] ^= key[i];
 30299  0026B4  516C               	movf	AESEncode@key& (0+255),w,b
 30300  0026B6  257F               	addwf	AESEncode@i& (0+255),w,b
 30301  0026B8  6ED9               	movwf	fsr2l,c
 30302  0026BA  6ADA               	clrf	fsr2h,c
 30303  0026BC  50DF               	movf	indf2,w,c
 30304  0026BE  6F6D               	movwf	??_AESEncode& (0+255),b
 30305  0026C0  517F               	movf	AESEncode@i& (0+255),w,b
 30306  0026C2  256A               	addwf	AESEncode@block& (0+255),w,b
 30307  0026C4  6ED9               	movwf	fsr2l,c
 30308  0026C6  0E00               	movlw	0
 30309  0026C8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30310  0026CA  6EDA               	movwf	fsr2h,c
 30311  0026CC  516D               	movf	??_AESEncode& (0+255),w,b
 30312  0026CE  1ADF               	xorwf	indf2,f,c
 30313                           
 30314                           ; BSR set to: 0
 30315  0026D0  2B7F               	incf	AESEncode@i& (0+255),f,b
 30316                           
 30317                           ; BSR set to: 0
 30318  0026D2  0E0F               	movlw	15
 30319  0026D4  657F               	cpfsgt	AESEncode@i& (0+255),b
 30320  0026D6  D7EE               	goto	l12082
 30321                           
 30322                           ; BSR set to: 0
 30323                           ;AES.c: 274: }
 30324                           ;AES.c: 276: _roundCounter--;
 30325  0026D8  0644               	decf	__roundCounter,f,c
 30326                           
 30327                           ; BSR set to: 0
 30328                           ;AES.c: 277: }
 30329                           ;AES.c: 278: while(_roundCounter !=0);
 30330  0026DA  5044               	movf	__roundCounter,w,c
 30331  0026DC  E001 D6AB          	bnz	l2522
 30332                           
 30333                           ; BSR set to: 0
 30334  0026E0  0012               	return		;funcret
 30335  0026E2                     __end_of_AESEncode:
 30336                           	opt stack 0
 30337                           tosu	equ	0xFFF
 30338                           tosh	equ	0xFFE
 30339                           tosl	equ	0xFFD
 30340                           pclath	equ	0xFFA
 30341                           tblptru	equ	0xFF8
 30342                           tblptrh	equ	0xFF7
 30343                           tblptrl	equ	0xFF6
 30344                           tablat	equ	0xFF5
 30345                           prodh	equ	0xFF4
 30346                           prodl	equ	0xFF3
 30347                           intcon	equ	0xFF2
 30348                           intcon2	equ	0xFF1
 30349                           intcon3	equ	0xFF0
 30350                           indf0	equ	0xFEF
 30351                           postinc0	equ	0xFEE
 30352                           plusw0	equ	0xFEB
 30353                           fsr0h	equ	0xFEA
 30354                           fsr0l	equ	0xFE9
 30355                           wreg	equ	0xFE8
 30356                           postinc1	equ	0xFE6
 30357                           postdec1	equ	0xFE5
 30358                           plusw1	equ	0xFE3
 30359                           fsr1h	equ	0xFE2
 30360                           fsr1l	equ	0xFE1
 30361                           indf2	equ	0xFDF
 30362                           postinc2	equ	0xFDE
 30363                           postdec2	equ	0xFDD
 30364                           plusw2	equ	0xFDB
 30365                           fsr2h	equ	0xFDA
 30366                           fsr2l	equ	0xFD9
 30367                           status	equ	0xFD8
 30368                           
 30369 ;; *************** function _EncodeShiftRow *****************
 30370 ;; Defined at:
 30371 ;;		line 354 in file "mcc_generated_files/LoRaWAN/AES.c"
 30372 ;; Parameters:    Size  Location     Type
 30373 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 30374 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30375 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30376 ;; Auto vars:     Size  Location     Type
 30377 ;;  temp            1    6[BANK0 ] unsigned char 
 30378 ;; Return value:  Size  Location     Type
 30379 ;;                  1    wreg      void 
 30380 ;; Registers used:
 30381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30382 ;; Tracked objects:
 30383 ;;		On entry : F/0
 30384 ;;		On exit  : F/0
 30385 ;;		Unchanged: 0/0
 30386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30390 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30391 ;;Total ram usage:        3 bytes
 30392 ;; Hardware stack levels used:    1
 30393 ;; Hardware stack levels required when called:    7
 30394 ;; This function calls:
 30395 ;;		Nothing
 30396 ;; This function is called by:
 30397 ;;		_AESEncode
 30398 ;; This function uses a non-reentrant model
 30399 ;;
 30400                           
 30401                           	psect	text157
 30402  003D3C                     __ptext157:
 30403                           	opt stack 0
 30404  003D3C                     _EncodeShiftRow:
 30405                           	opt stack 17
 30406                           
 30407                           ; BSR set to: 0
 30408                           ;AES.c: 356: unsigned char temp;
 30409                           ;AES.c: 361: temp=stateTable[1];
 30410                           
 30411                           ; BSR set to: 0
 30412                           ;incstack = 0
 30413  003D3C  EE20 F001          	lfsr	2,1
 30414  003D40  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30415  003D42  26D9               	addwf	fsr2l,f,c
 30416  003D44  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30417  003D46  22DA               	addwfc	fsr2h,f,c
 30418  003D48  50DF               	movf	indf2,w,c
 30419  003D4A  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30420                           
 30421                           ; BSR set to: 0
 30422                           ;AES.c: 362: stateTable[1]=stateTable[5];
 30423  003D4C  EE20 F005          	lfsr	2,5
 30424  003D50  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30425  003D52  26D9               	addwf	fsr2l,f,c
 30426  003D54  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30427  003D56  22DA               	addwfc	fsr2h,f,c
 30428  003D58  EE00 F001          	lfsr	0,1
 30429  003D5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30430  003D5E  26E9               	addwf	fsr0l,f,c
 30431  003D60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30432  003D62  22EA               	addwfc	fsr0h,f,c
 30433  003D64  CFDF FFEF          	movff	indf2,indf0
 30434                           
 30435                           ; BSR set to: 0
 30436                           ;AES.c: 363: stateTable[5]=stateTable[9];
 30437  003D68  EE20 F009          	lfsr	2,9
 30438  003D6C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30439  003D6E  26D9               	addwf	fsr2l,f,c
 30440  003D70  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30441  003D72  22DA               	addwfc	fsr2h,f,c
 30442  003D74  EE00 F005          	lfsr	0,5
 30443  003D78  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30444  003D7A  26E9               	addwf	fsr0l,f,c
 30445  003D7C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30446  003D7E  22EA               	addwfc	fsr0h,f,c
 30447  003D80  CFDF FFEF          	movff	indf2,indf0
 30448                           
 30449                           ; BSR set to: 0
 30450                           ;AES.c: 364: stateTable[9]=stateTable[13];
 30451  003D84  EE20 F00D          	lfsr	2,13
 30452  003D88  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30453  003D8A  26D9               	addwf	fsr2l,f,c
 30454  003D8C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30455  003D8E  22DA               	addwfc	fsr2h,f,c
 30456  003D90  EE00 F009          	lfsr	0,9
 30457  003D94  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30458  003D96  26E9               	addwf	fsr0l,f,c
 30459  003D98  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30460  003D9A  22EA               	addwfc	fsr0h,f,c
 30461  003D9C  CFDF FFEF          	movff	indf2,indf0
 30462                           
 30463                           ; BSR set to: 0
 30464                           ;AES.c: 365: stateTable[13]=temp;
 30465  003DA0  EE20 F00D          	lfsr	2,13
 30466  003DA4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30467  003DA6  26D9               	addwf	fsr2l,f,c
 30468  003DA8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30469  003DAA  22DA               	addwfc	fsr2h,f,c
 30470  003DAC  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30471                           
 30472                           ; BSR set to: 0
 30473                           ;AES.c: 368: temp=stateTable[2];
 30474  003DB0  EE20 F002          	lfsr	2,2
 30475  003DB4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30476  003DB6  26D9               	addwf	fsr2l,f,c
 30477  003DB8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30478  003DBA  22DA               	addwfc	fsr2h,f,c
 30479  003DBC  50DF               	movf	indf2,w,c
 30480  003DBE  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30481                           
 30482                           ; BSR set to: 0
 30483                           ;AES.c: 369: stateTable[2]=stateTable[10];
 30484  003DC0  EE20 F00A          	lfsr	2,10
 30485  003DC4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30486  003DC6  26D9               	addwf	fsr2l,f,c
 30487  003DC8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30488  003DCA  22DA               	addwfc	fsr2h,f,c
 30489  003DCC  EE00 F002          	lfsr	0,2
 30490  003DD0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30491  003DD2  26E9               	addwf	fsr0l,f,c
 30492  003DD4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30493  003DD6  22EA               	addwfc	fsr0h,f,c
 30494  003DD8  CFDF FFEF          	movff	indf2,indf0
 30495                           
 30496                           ;AES.c: 370: stateTable[10]=temp;
 30497  003DDC  EE20 F00A          	lfsr	2,10
 30498  003DE0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30499  003DE2  26D9               	addwf	fsr2l,f,c
 30500  003DE4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30501  003DE6  22DA               	addwfc	fsr2h,f,c
 30502  003DE8  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30503                           
 30504                           ;AES.c: 371: temp=stateTable[14];
 30505  003DEC  EE20 F00E          	lfsr	2,14
 30506  003DF0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30507  003DF2  26D9               	addwf	fsr2l,f,c
 30508  003DF4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30509  003DF6  22DA               	addwfc	fsr2h,f,c
 30510  003DF8  50DF               	movf	indf2,w,c
 30511  003DFA  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30512                           
 30513                           ; BSR set to: 0
 30514                           ;AES.c: 372: stateTable[14]=stateTable[6];
 30515  003DFC  EE20 F006          	lfsr	2,6
 30516  003E00  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30517  003E02  26D9               	addwf	fsr2l,f,c
 30518  003E04  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30519  003E06  22DA               	addwfc	fsr2h,f,c
 30520  003E08  EE00 F00E          	lfsr	0,14
 30521  003E0C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30522  003E0E  26E9               	addwf	fsr0l,f,c
 30523  003E10  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30524  003E12  22EA               	addwfc	fsr0h,f,c
 30525  003E14  CFDF FFEF          	movff	indf2,indf0
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;AES.c: 373: stateTable[6]=temp;
 30529  003E18  EE20 F006          	lfsr	2,6
 30530  003E1C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30531  003E1E  26D9               	addwf	fsr2l,f,c
 30532  003E20  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30533  003E22  22DA               	addwfc	fsr2h,f,c
 30534  003E24  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30535                           
 30536                           ; BSR set to: 0
 30537                           ;AES.c: 376: temp=stateTable[3];
 30538  003E28  EE20 F003          	lfsr	2,3
 30539  003E2C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30540  003E2E  26D9               	addwf	fsr2l,f,c
 30541  003E30  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30542  003E32  22DA               	addwfc	fsr2h,f,c
 30543  003E34  50DF               	movf	indf2,w,c
 30544  003E36  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30545                           
 30546                           ; BSR set to: 0
 30547                           ;AES.c: 377: stateTable[3]=stateTable[15];
 30548  003E38  EE20 F00F          	lfsr	2,15
 30549  003E3C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30550  003E3E  26D9               	addwf	fsr2l,f,c
 30551  003E40  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30552  003E42  22DA               	addwfc	fsr2h,f,c
 30553  003E44  EE00 F003          	lfsr	0,3
 30554  003E48  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30555  003E4A  26E9               	addwf	fsr0l,f,c
 30556  003E4C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30557  003E4E  22EA               	addwfc	fsr0h,f,c
 30558  003E50  CFDF FFEF          	movff	indf2,indf0
 30559                           
 30560                           ; BSR set to: 0
 30561                           ;AES.c: 378: stateTable[15]=stateTable[11];
 30562  003E54  EE20 F00B          	lfsr	2,11
 30563  003E58  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30564  003E5A  26D9               	addwf	fsr2l,f,c
 30565  003E5C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30566  003E5E  22DA               	addwfc	fsr2h,f,c
 30567  003E60  EE00 F00F          	lfsr	0,15
 30568  003E64  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30569  003E66  26E9               	addwf	fsr0l,f,c
 30570  003E68  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30571  003E6A  22EA               	addwfc	fsr0h,f,c
 30572  003E6C  CFDF FFEF          	movff	indf2,indf0
 30573                           
 30574                           ; BSR set to: 0
 30575                           ;AES.c: 379: stateTable[11]=stateTable[7];
 30576  003E70  EE20 F007          	lfsr	2,7
 30577  003E74  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30578  003E76  26D9               	addwf	fsr2l,f,c
 30579  003E78  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30580  003E7A  22DA               	addwfc	fsr2h,f,c
 30581  003E7C  EE00 F00B          	lfsr	0,11
 30582  003E80  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30583  003E82  26E9               	addwf	fsr0l,f,c
 30584  003E84  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30585  003E86  22EA               	addwfc	fsr0h,f,c
 30586  003E88  CFDF FFEF          	movff	indf2,indf0
 30587                           
 30588                           ;AES.c: 380: stateTable[7]=temp;
 30589  003E8C  EE20 F007          	lfsr	2,7
 30590  003E90  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30591  003E92  26D9               	addwf	fsr2l,f,c
 30592  003E94  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30593  003E96  22DA               	addwfc	fsr2h,f,c
 30594  003E98  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30595                           
 30596                           ; BSR set to: 0
 30597  003E9C  0012               	return		;funcret
 30598  003E9E                     __end_of_EncodeShiftRow:
 30599                           	opt stack 0
 30600                           tosu	equ	0xFFF
 30601                           tosh	equ	0xFFE
 30602                           tosl	equ	0xFFD
 30603                           pclath	equ	0xFFA
 30604                           tblptru	equ	0xFF8
 30605                           tblptrh	equ	0xFF7
 30606                           tblptrl	equ	0xFF6
 30607                           tablat	equ	0xFF5
 30608                           prodh	equ	0xFF4
 30609                           prodl	equ	0xFF3
 30610                           intcon	equ	0xFF2
 30611                           intcon2	equ	0xFF1
 30612                           intcon3	equ	0xFF0
 30613                           indf0	equ	0xFEF
 30614                           postinc0	equ	0xFEE
 30615                           plusw0	equ	0xFEB
 30616                           fsr0h	equ	0xFEA
 30617                           fsr0l	equ	0xFE9
 30618                           wreg	equ	0xFE8
 30619                           postinc1	equ	0xFE6
 30620                           postdec1	equ	0xFE5
 30621                           plusw1	equ	0xFE3
 30622                           fsr1h	equ	0xFE2
 30623                           fsr1l	equ	0xFE1
 30624                           indf2	equ	0xFDF
 30625                           postinc2	equ	0xFDE
 30626                           postdec2	equ	0xFDD
 30627                           plusw2	equ	0xFDB
 30628                           fsr2h	equ	0xFDA
 30629                           fsr2l	equ	0xFD9
 30630                           status	equ	0xFD8
 30631                           
 30632 ;; *************** function _EncKeySchedule *****************
 30633 ;; Defined at:
 30634 ;;		line 306 in file "mcc_generated_files/LoRaWAN/AES.c"
 30635 ;; Parameters:    Size  Location     Type
 30636 ;;  key             1    4[BANK0 ] PTR unsigned char 
 30637 ;;		 -> AESEncodeLoRa@useKey(16), 
 30638 ;; Auto vars:     Size  Location     Type
 30639 ;;		None
 30640 ;; Return value:  Size  Location     Type
 30641 ;;                  1    wreg      void 
 30642 ;; Registers used:
 30643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30644 ;; Tracked objects:
 30645 ;;		On entry : F/0
 30646 ;;		On exit  : F/0
 30647 ;;		Unchanged: 0/0
 30648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30649 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30651 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30652 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30653 ;;Total ram usage:        6 bytes
 30654 ;; Hardware stack levels used:    1
 30655 ;; Hardware stack levels required when called:    7
 30656 ;; This function calls:
 30657 ;;		Nothing
 30658 ;; This function is called by:
 30659 ;;		_AESEncode
 30660 ;; This function uses a non-reentrant model
 30661 ;;
 30662                           
 30663                           	psect	text158
 30664  002980                     __ptext158:
 30665                           	opt stack 0
 30666  002980                     _EncKeySchedule:
 30667                           	opt stack 17
 30668                           
 30669                           ; BSR set to: 0
 30670                           ;AES.c: 309: key[0]^=STable[key[13]];
 30671                           
 30672                           ; BSR set to: 0
 30673                           ;incstack = 0
 30674  002980  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30675  002982  6ED9               	movwf	fsr2l,c
 30676  002984  6ADA               	clrf	fsr2h,c
 30677  002986  0E0D               	movlw	13
 30678  002988  26D9               	addwf	fsr2l,f,c
 30679  00298A  50DF               	movf	indf2,w,c
 30680  00298C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30681  00298E  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30682  002990  0E6D               	movlw	low _STable
 30683  002992  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30684  002994  6EF6               	movwf	tblptrl,c
 30685  002996  0EFE               	movlw	high _STable
 30686  002998  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30687  00299A  6EF7               	movwf	tblptrh,c
 30688  00299C                     	if	1	;There are 3 active tblptr bytes
 30689  00299C  6AF8               	clrf	tblptru,c
 30690  00299E  0E00               	movlw	low (__mediumconst shr (0+16))
 30691  0029A0  22F8               	addwfc	tblptru,f,c
 30692  0029A2                     	endif
 30693  0029A2  0008               	tblrd		*
 30694  0029A4  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30695  0029A8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30696  0029AA  6ED9               	movwf	fsr2l,c
 30697  0029AC  6ADA               	clrf	fsr2h,c
 30698  0029AE  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30699  0029B0  1ADF               	xorwf	indf2,f,c
 30700                           
 30701                           ;AES.c: 310: key[1]^=STable[key[14]];
 30702  0029B2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30703  0029B4  6ED9               	movwf	fsr2l,c
 30704  0029B6  6ADA               	clrf	fsr2h,c
 30705  0029B8  0E0E               	movlw	14
 30706  0029BA  26D9               	addwf	fsr2l,f,c
 30707  0029BC  50DF               	movf	indf2,w,c
 30708  0029BE  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30709  0029C0  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30710  0029C2  0E6D               	movlw	low _STable
 30711  0029C4  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30712  0029C6  6EF6               	movwf	tblptrl,c
 30713  0029C8  0EFE               	movlw	high _STable
 30714  0029CA  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30715  0029CC  6EF7               	movwf	tblptrh,c
 30716  0029CE                     	if	1	;There are 3 active tblptr bytes
 30717  0029CE  6AF8               	clrf	tblptru,c
 30718  0029D0  0E00               	movlw	low (__mediumconst shr (0+16))
 30719  0029D2  22F8               	addwfc	tblptru,f,c
 30720  0029D4                     	endif
 30721  0029D4  0008               	tblrd		*
 30722  0029D6  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30723  0029DA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30724  0029DC  6ED9               	movwf	fsr2l,c
 30725  0029DE  6ADA               	clrf	fsr2h,c
 30726  0029E0  2AD9               	incf	fsr2l,f,c
 30727  0029E2  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30728  0029E4  1ADF               	xorwf	indf2,f,c
 30729                           
 30730                           ;AES.c: 311: key[2]^=STable[key[15]];
 30731  0029E6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30732  0029E8  6ED9               	movwf	fsr2l,c
 30733  0029EA  6ADA               	clrf	fsr2h,c
 30734  0029EC  0E0F               	movlw	15
 30735  0029EE  26D9               	addwf	fsr2l,f,c
 30736  0029F0  50DF               	movf	indf2,w,c
 30737  0029F2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30738  0029F4  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30739  0029F6  0E6D               	movlw	low _STable
 30740  0029F8  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30741  0029FA  6EF6               	movwf	tblptrl,c
 30742  0029FC  0EFE               	movlw	high _STable
 30743  0029FE  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30744  002A00  6EF7               	movwf	tblptrh,c
 30745  002A02                     	if	1	;There are 3 active tblptr bytes
 30746  002A02  6AF8               	clrf	tblptru,c
 30747  002A04  0E00               	movlw	low (__mediumconst shr (0+16))
 30748  002A06  22F8               	addwfc	tblptru,f,c
 30749  002A08                     	endif
 30750  002A08  0008               	tblrd		*
 30751  002A0A  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30752  002A0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30753  002A10  6ED9               	movwf	fsr2l,c
 30754  002A12  6ADA               	clrf	fsr2h,c
 30755  002A14  0E02               	movlw	2
 30756  002A16  26D9               	addwf	fsr2l,f,c
 30757  002A18  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30758  002A1A  1ADF               	xorwf	indf2,f,c
 30759                           
 30760                           ;AES.c: 312: key[3]^=STable[key[12]];
 30761  002A1C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30762  002A1E  6ED9               	movwf	fsr2l,c
 30763  002A20  6ADA               	clrf	fsr2h,c
 30764  002A22  0E0C               	movlw	12
 30765  002A24  26D9               	addwf	fsr2l,f,c
 30766  002A26  50DF               	movf	indf2,w,c
 30767  002A28  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30768  002A2A  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30769  002A2C  0E6D               	movlw	low _STable
 30770  002A2E  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30771  002A30  6EF6               	movwf	tblptrl,c
 30772  002A32  0EFE               	movlw	high _STable
 30773  002A34  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30774  002A36  6EF7               	movwf	tblptrh,c
 30775  002A38                     	if	1	;There are 3 active tblptr bytes
 30776  002A38  6AF8               	clrf	tblptru,c
 30777  002A3A  0E00               	movlw	low (__mediumconst shr (0+16))
 30778  002A3C  22F8               	addwfc	tblptru,f,c
 30779  002A3E                     	endif
 30780  002A3E  0008               	tblrd		*
 30781  002A40  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30782  002A44  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30783  002A46  6ED9               	movwf	fsr2l,c
 30784  002A48  6ADA               	clrf	fsr2h,c
 30785  002A4A  0E03               	movlw	3
 30786  002A4C  26D9               	addwf	fsr2l,f,c
 30787  002A4E  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30788  002A50  1ADF               	xorwf	indf2,f,c
 30789                           
 30790                           ; BSR set to: 0
 30791                           ;AES.c: 314: key[0]^=_rcon;
 30792  002A52  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30793  002A54  6ED9               	movwf	fsr2l,c
 30794  002A56  6ADA               	clrf	fsr2h,c
 30795  002A58  51EE               	movf	__rcon& (0+255),w,b
 30796  002A5A  1ADF               	xorwf	indf2,f,c
 30797                           
 30798                           ; BSR set to: 0
 30799                           ;AES.c: 315: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30800  002A5C  0E7F               	movlw	127
 30801  002A5E  65EE               	cpfsgt	__rcon& (0+255),b
 30802  002A60  D00C               	goto	l11902
 30803                           
 30804                           ; BSR set to: 0
 30805  002A62  0E1B               	movlw	27
 30806  002A64  C0EE  F065         	movff	__rcon,??_EncKeySchedule
 30807  002A68  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30808  002A6A  90D8               	bcf	status,0,c
 30809  002A6C  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 30810  002A6E  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30811  002A70  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 30812  002A72  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30813  002A74  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30814  002A76  6F69               	movwf	(_EncKeySchedule$4148+1)& (0+255),b
 30815  002A78  D005               	goto	l11904
 30816  002A7A                     l11902:
 30817                           
 30818                           ; BSR set to: 0
 30819  002A7A  90D8               	bcf	status,0,c
 30820  002A7C  35EE               	rlcf	__rcon& (0+255),w,b
 30821  002A7E  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30822  002A80  6B69               	clrf	(_EncKeySchedule$4148+1)& (0+255),b
 30823  002A82  3769               	rlcf	(_EncKeySchedule$4148+1)& (0+255),f,b
 30824  002A84                     l11904:
 30825                           
 30826                           ; BSR set to: 0
 30827  002A84  C068  F0EE         	movff	_EncKeySchedule$4148,__rcon
 30828                           
 30829                           ; BSR set to: 0
 30830                           ;AES.c: 318: key[4]^=key[0];
 30831  002A88  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30832  002A8A  6ED9               	movwf	fsr2l,c
 30833  002A8C  6ADA               	clrf	fsr2h,c
 30834  002A8E  50DF               	movf	indf2,w,c
 30835  002A90  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30836  002A92  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30837  002A94  6ED9               	movwf	fsr2l,c
 30838  002A96  6ADA               	clrf	fsr2h,c
 30839  002A98  0E04               	movlw	4
 30840  002A9A  26D9               	addwf	fsr2l,f,c
 30841  002A9C  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30842  002A9E  1ADF               	xorwf	indf2,f,c
 30843                           
 30844                           ; BSR set to: 0
 30845                           ;AES.c: 319: key[5]^=key[1];
 30846  002AA0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30847  002AA2  6ED9               	movwf	fsr2l,c
 30848  002AA4  6ADA               	clrf	fsr2h,c
 30849  002AA6  2AD9               	incf	fsr2l,f,c
 30850  002AA8  50DF               	movf	indf2,w,c
 30851  002AAA  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30852  002AAC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30853  002AAE  6ED9               	movwf	fsr2l,c
 30854  002AB0  6ADA               	clrf	fsr2h,c
 30855  002AB2  0E05               	movlw	5
 30856  002AB4  26D9               	addwf	fsr2l,f,c
 30857  002AB6  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30858  002AB8  1ADF               	xorwf	indf2,f,c
 30859                           
 30860                           ; BSR set to: 0
 30861                           ;AES.c: 320: key[6]^=key[2];
 30862  002ABA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30863  002ABC  6ED9               	movwf	fsr2l,c
 30864  002ABE  6ADA               	clrf	fsr2h,c
 30865  002AC0  0E02               	movlw	2
 30866  002AC2  26D9               	addwf	fsr2l,f,c
 30867  002AC4  50DF               	movf	indf2,w,c
 30868  002AC6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30869  002AC8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30870  002ACA  6ED9               	movwf	fsr2l,c
 30871  002ACC  6ADA               	clrf	fsr2h,c
 30872  002ACE  0E06               	movlw	6
 30873  002AD0  26D9               	addwf	fsr2l,f,c
 30874  002AD2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30875  002AD4  1ADF               	xorwf	indf2,f,c
 30876                           
 30877                           ; BSR set to: 0
 30878                           ;AES.c: 321: key[7]^=key[3];
 30879  002AD6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30880  002AD8  6ED9               	movwf	fsr2l,c
 30881  002ADA  6ADA               	clrf	fsr2h,c
 30882  002ADC  0E03               	movlw	3
 30883  002ADE  26D9               	addwf	fsr2l,f,c
 30884  002AE0  50DF               	movf	indf2,w,c
 30885  002AE2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30886  002AE4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30887  002AE6  6ED9               	movwf	fsr2l,c
 30888  002AE8  6ADA               	clrf	fsr2h,c
 30889  002AEA  0E07               	movlw	7
 30890  002AEC  26D9               	addwf	fsr2l,f,c
 30891  002AEE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30892  002AF0  1ADF               	xorwf	indf2,f,c
 30893                           
 30894                           ; BSR set to: 0
 30895                           ;AES.c: 324: key[8]^=key[4];
 30896  002AF2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30897  002AF4  6ED9               	movwf	fsr2l,c
 30898  002AF6  6ADA               	clrf	fsr2h,c
 30899  002AF8  0E04               	movlw	4
 30900  002AFA  26D9               	addwf	fsr2l,f,c
 30901  002AFC  50DF               	movf	indf2,w,c
 30902  002AFE  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30903  002B00  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30904  002B02  6ED9               	movwf	fsr2l,c
 30905  002B04  6ADA               	clrf	fsr2h,c
 30906  002B06  0E08               	movlw	8
 30907  002B08  26D9               	addwf	fsr2l,f,c
 30908  002B0A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30909  002B0C  1ADF               	xorwf	indf2,f,c
 30910                           
 30911                           ; BSR set to: 0
 30912                           ;AES.c: 325: key[9]^=key[5];
 30913  002B0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30914  002B10  6ED9               	movwf	fsr2l,c
 30915  002B12  6ADA               	clrf	fsr2h,c
 30916  002B14  0E05               	movlw	5
 30917  002B16  26D9               	addwf	fsr2l,f,c
 30918  002B18  50DF               	movf	indf2,w,c
 30919  002B1A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30920  002B1C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30921  002B1E  6ED9               	movwf	fsr2l,c
 30922  002B20  6ADA               	clrf	fsr2h,c
 30923  002B22  0E09               	movlw	9
 30924  002B24  26D9               	addwf	fsr2l,f,c
 30925  002B26  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30926  002B28  1ADF               	xorwf	indf2,f,c
 30927                           
 30928                           ; BSR set to: 0
 30929                           ;AES.c: 326: key[10]^=key[6];
 30930  002B2A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30931  002B2C  6ED9               	movwf	fsr2l,c
 30932  002B2E  6ADA               	clrf	fsr2h,c
 30933  002B30  0E06               	movlw	6
 30934  002B32  26D9               	addwf	fsr2l,f,c
 30935  002B34  50DF               	movf	indf2,w,c
 30936  002B36  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30937  002B38  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30938  002B3A  6ED9               	movwf	fsr2l,c
 30939  002B3C  6ADA               	clrf	fsr2h,c
 30940  002B3E  0E0A               	movlw	10
 30941  002B40  26D9               	addwf	fsr2l,f,c
 30942  002B42  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30943  002B44  1ADF               	xorwf	indf2,f,c
 30944                           
 30945                           ; BSR set to: 0
 30946                           ;AES.c: 327: key[11]^=key[7];
 30947  002B46  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30948  002B48  6ED9               	movwf	fsr2l,c
 30949  002B4A  6ADA               	clrf	fsr2h,c
 30950  002B4C  0E07               	movlw	7
 30951  002B4E  26D9               	addwf	fsr2l,f,c
 30952  002B50  50DF               	movf	indf2,w,c
 30953  002B52  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30954  002B54  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30955  002B56  6ED9               	movwf	fsr2l,c
 30956  002B58  6ADA               	clrf	fsr2h,c
 30957  002B5A  0E0B               	movlw	11
 30958  002B5C  26D9               	addwf	fsr2l,f,c
 30959  002B5E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30960  002B60  1ADF               	xorwf	indf2,f,c
 30961                           
 30962                           ; BSR set to: 0
 30963                           ;AES.c: 330: key[12]^=key[8];
 30964  002B62  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30965  002B64  6ED9               	movwf	fsr2l,c
 30966  002B66  6ADA               	clrf	fsr2h,c
 30967  002B68  0E08               	movlw	8
 30968  002B6A  26D9               	addwf	fsr2l,f,c
 30969  002B6C  50DF               	movf	indf2,w,c
 30970  002B6E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30971  002B70  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30972  002B72  6ED9               	movwf	fsr2l,c
 30973  002B74  6ADA               	clrf	fsr2h,c
 30974  002B76  0E0C               	movlw	12
 30975  002B78  26D9               	addwf	fsr2l,f,c
 30976  002B7A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30977  002B7C  1ADF               	xorwf	indf2,f,c
 30978                           
 30979                           ; BSR set to: 0
 30980                           ;AES.c: 331: key[13]^=key[9];
 30981  002B7E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30982  002B80  6ED9               	movwf	fsr2l,c
 30983  002B82  6ADA               	clrf	fsr2h,c
 30984  002B84  0E09               	movlw	9
 30985  002B86  26D9               	addwf	fsr2l,f,c
 30986  002B88  50DF               	movf	indf2,w,c
 30987  002B8A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30988  002B8C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30989  002B8E  6ED9               	movwf	fsr2l,c
 30990  002B90  6ADA               	clrf	fsr2h,c
 30991  002B92  0E0D               	movlw	13
 30992  002B94  26D9               	addwf	fsr2l,f,c
 30993  002B96  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30994  002B98  1ADF               	xorwf	indf2,f,c
 30995                           
 30996                           ; BSR set to: 0
 30997                           ;AES.c: 332: key[14]^=key[10];
 30998  002B9A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30999  002B9C  6ED9               	movwf	fsr2l,c
 31000  002B9E  6ADA               	clrf	fsr2h,c
 31001  002BA0  0E0A               	movlw	10
 31002  002BA2  26D9               	addwf	fsr2l,f,c
 31003  002BA4  50DF               	movf	indf2,w,c
 31004  002BA6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31005  002BA8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31006  002BAA  6ED9               	movwf	fsr2l,c
 31007  002BAC  6ADA               	clrf	fsr2h,c
 31008  002BAE  0E0E               	movlw	14
 31009  002BB0  26D9               	addwf	fsr2l,f,c
 31010  002BB2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31011  002BB4  1ADF               	xorwf	indf2,f,c
 31012                           
 31013                           ; BSR set to: 0
 31014                           ;AES.c: 333: key[15]^=key[11];
 31015  002BB6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31016  002BB8  6ED9               	movwf	fsr2l,c
 31017  002BBA  6ADA               	clrf	fsr2h,c
 31018  002BBC  0E0B               	movlw	11
 31019  002BBE  26D9               	addwf	fsr2l,f,c
 31020  002BC0  50DF               	movf	indf2,w,c
 31021  002BC2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31022  002BC4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31023  002BC6  6ED9               	movwf	fsr2l,c
 31024  002BC8  6ADA               	clrf	fsr2h,c
 31025  002BCA  0E0F               	movlw	15
 31026  002BCC  26D9               	addwf	fsr2l,f,c
 31027  002BCE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31028  002BD0  1ADF               	xorwf	indf2,f,c
 31029                           
 31030                           ; BSR set to: 0
 31031  002BD2  0012               	return		;funcret
 31032  002BD4                     __end_of_EncKeySchedule:
 31033                           	opt stack 0
 31034                           tosu	equ	0xFFF
 31035                           tosh	equ	0xFFE
 31036                           tosl	equ	0xFFD
 31037                           pclath	equ	0xFFA
 31038                           tblptru	equ	0xFF8
 31039                           tblptrh	equ	0xFF7
 31040                           tblptrl	equ	0xFF6
 31041                           tablat	equ	0xFF5
 31042                           prodh	equ	0xFF4
 31043                           prodl	equ	0xFF3
 31044                           intcon	equ	0xFF2
 31045                           intcon2	equ	0xFF1
 31046                           intcon3	equ	0xFF0
 31047                           indf0	equ	0xFEF
 31048                           postinc0	equ	0xFEE
 31049                           plusw0	equ	0xFEB
 31050                           fsr0h	equ	0xFEA
 31051                           fsr0l	equ	0xFE9
 31052                           wreg	equ	0xFE8
 31053                           postinc1	equ	0xFE6
 31054                           postdec1	equ	0xFE5
 31055                           plusw1	equ	0xFE3
 31056                           fsr1h	equ	0xFE2
 31057                           fsr1l	equ	0xFE1
 31058                           indf2	equ	0xFDF
 31059                           postinc2	equ	0xFDE
 31060                           postdec2	equ	0xFDD
 31061                           plusw2	equ	0xFDB
 31062                           fsr2h	equ	0xFDA
 31063                           fsr2l	equ	0xFD9
 31064                           status	equ	0xFD8
 31065                           
 31066 ;; *************** function _LORAWAN_Init *****************
 31067 ;; Defined at:
 31068 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31069 ;; Parameters:    Size  Location     Type
 31070 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 31071 ;;		 -> RxDataDone(1), 
 31072 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 31073 ;;		 -> RxJoinResponse(1), 
 31074 ;; Auto vars:     Size  Location     Type
 31075 ;;		None
 31076 ;; Return value:  Size  Location     Type
 31077 ;;                  1    wreg      void 
 31078 ;; Registers used:
 31079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31080 ;; Tracked objects:
 31081 ;;		On entry : F/0
 31082 ;;		On exit  : D/0
 31083 ;;		Unchanged: 0/0
 31084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31088 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31089 ;;Total ram usage:        4 bytes
 31090 ;; Hardware stack levels used:    1
 31091 ;; Hardware stack levels required when called:   13
 31092 ;; This function calls:
 31093 ;;		_CreateAllSoftwareTimers
 31094 ;;		_LORAWAN_Reset
 31095 ;;		_RADIO_Init
 31096 ;;		_RADIO_ReadRandom
 31097 ;;		_SetCallbackSoftwareTimers
 31098 ;;		_StopAllSoftwareTimers
 31099 ;;		_srand
 31100 ;; This function is called by:
 31101 ;;		_main
 31102 ;; This function uses a non-reentrant model
 31103 ;;
 31104                           
 31105                           	psect	text159
 31106  006716                     __ptext159:
 31107                           	opt stack 0
 31108  006716                     _LORAWAN_Init:
 31109                           	opt stack 17
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 31113                           
 31114                           ; BSR set to: 0
 31115                           ;incstack = 0
 31116  006716  0102               	movlb	2	; () banked
 31117  006718  51F0               	movf	(_loRa+240)& (0+255),w,b
 31118  00671A  E108               	bnz	l15518
 31119                           
 31120                           ; BSR set to: 2
 31121                           ;lorawan_eu.c: 127: {
 31122                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 31123  00671C  EC92  F034         	call	_CreateAllSoftwareTimers	;wreg free
 31124                           
 31125                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 31126  006720  ECC9  F02A         	call	_SetCallbackSoftwareTimers	;wreg free
 31127                           
 31128                           ; BSR set to: 0
 31129                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 31130  006724  0E01               	movlw	1
 31131  006726  0102               	movlb	2	; () banked
 31132  006728  6FF0               	movwf	(_loRa+240)& (0+255),b
 31133                           
 31134                           ;lorawan_eu.c: 131: }
 31135  00672A  D002               	goto	l15520
 31136  00672C                     l15518:
 31137                           
 31138                           ; BSR set to: 2
 31139                           ;lorawan_eu.c: 132: else
 31140                           ;lorawan_eu.c: 133: {
 31141                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 31142  00672C  EC09  F035         	call	_StopAllSoftwareTimers	;wreg free
 31143  006730                     l15520:
 31144                           
 31145                           ;lorawan_eu.c: 135: }
 31146                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 31147  006730  C0A6  F0E8         	movff	LORAWAN_Init@RxPayload,_rxPayload
 31148  006734  C0A7  F0E9         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 31149                           
 31150                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 31151  006738  C0A8  F0EA         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 31152  00673C  C0A9  F0EB         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 31153                           
 31154                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 31155  006740  0EFF               	movlw	low (_radioBuffer+16)
 31156  006742  0100               	movlb	0	; () banked
 31157  006744  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31158  006746  0E05               	movlw	high (_radioBuffer+16)
 31159  006748  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31160  00674A  0EA0               	movlw	160
 31161  00674C  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31162  00674E  0E27               	movlw	39
 31163  006750  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31164  006752  0EBE               	movlw	190
 31165  006754  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31166  006756  0E33               	movlw	51
 31167  006758  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31168  00675A  EC45  F01C         	call	_RADIO_Init	;wreg free
 31169                           
 31170                           ; BSR set to: 1
 31171                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 31172  00675E  EC5F  F02F         	call	_RADIO_ReadRandom	;wreg free
 31173  006762  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 31174  006766  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 31175  00676A  ECDA  F03B         	call	_srand	;wreg free
 31176                           
 31177                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 31178  00676E  0E00               	movlw	0
 31179  006770  EF4F  F01F         	goto	_LORAWAN_Reset
 31180  006774                     __end_of_LORAWAN_Init:
 31181                           	opt stack 0
 31182                           tosu	equ	0xFFF
 31183                           tosh	equ	0xFFE
 31184                           tosl	equ	0xFFD
 31185                           pclath	equ	0xFFA
 31186                           tblptru	equ	0xFF8
 31187                           tblptrh	equ	0xFF7
 31188                           tblptrl	equ	0xFF6
 31189                           tablat	equ	0xFF5
 31190                           prodh	equ	0xFF4
 31191                           prodl	equ	0xFF3
 31192                           intcon	equ	0xFF2
 31193                           intcon2	equ	0xFF1
 31194                           intcon3	equ	0xFF0
 31195                           indf0	equ	0xFEF
 31196                           postinc0	equ	0xFEE
 31197                           plusw0	equ	0xFEB
 31198                           fsr0h	equ	0xFEA
 31199                           fsr0l	equ	0xFE9
 31200                           wreg	equ	0xFE8
 31201                           postinc1	equ	0xFE6
 31202                           postdec1	equ	0xFE5
 31203                           plusw1	equ	0xFE3
 31204                           fsr1h	equ	0xFE2
 31205                           fsr1l	equ	0xFE1
 31206                           indf2	equ	0xFDF
 31207                           postinc2	equ	0xFDE
 31208                           postdec2	equ	0xFDD
 31209                           plusw2	equ	0xFDB
 31210                           fsr2h	equ	0xFDA
 31211                           fsr2l	equ	0xFD9
 31212                           status	equ	0xFD8
 31213                           
 31214 ;; *************** function _srand *****************
 31215 ;; Defined at:
 31216 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 31217 ;; Parameters:    Size  Location     Type
 31218 ;;  x               2   21[BANK0 ] unsigned int 
 31219 ;; Auto vars:     Size  Location     Type
 31220 ;;		None
 31221 ;; Return value:  Size  Location     Type
 31222 ;;                  1    wreg      void 
 31223 ;; Registers used:
 31224 ;;		status,2
 31225 ;; Tracked objects:
 31226 ;;		On entry : 0/1
 31227 ;;		On exit  : 0/0
 31228 ;;		Unchanged: 0/0
 31229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31233 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31234 ;;Total ram usage:        2 bytes
 31235 ;; Hardware stack levels used:    1
 31236 ;; Hardware stack levels required when called:    7
 31237 ;; This function calls:
 31238 ;;		Nothing
 31239 ;; This function is called by:
 31240 ;;		_LORAWAN_Init
 31241 ;; This function uses a non-reentrant model
 31242 ;;
 31243                           
 31244                           	psect	text160
 31245  0077B4                     __ptext160:
 31246                           	opt stack 0
 31247  0077B4                     _srand:
 31248                           	opt stack 22
 31249                           
 31250                           ;incstack = 0
 31251  0077B4  C075  F052         	movff	srand@x,_randx
 31252  0077B8  C076  F053         	movff	srand@x+1,_randx+1
 31253  0077BC  6A54               	clrf	_randx+2,c
 31254  0077BE  6A55               	clrf	_randx+3,c
 31255  0077C0  0012               	return		;funcret
 31256  0077C2                     __end_of_srand:
 31257                           	opt stack 0
 31258                           tosu	equ	0xFFF
 31259                           tosh	equ	0xFFE
 31260                           tosl	equ	0xFFD
 31261                           pclath	equ	0xFFA
 31262                           tblptru	equ	0xFF8
 31263                           tblptrh	equ	0xFF7
 31264                           tblptrl	equ	0xFF6
 31265                           tablat	equ	0xFF5
 31266                           prodh	equ	0xFF4
 31267                           prodl	equ	0xFF3
 31268                           intcon	equ	0xFF2
 31269                           intcon2	equ	0xFF1
 31270                           intcon3	equ	0xFF0
 31271                           indf0	equ	0xFEF
 31272                           postinc0	equ	0xFEE
 31273                           plusw0	equ	0xFEB
 31274                           fsr0h	equ	0xFEA
 31275                           fsr0l	equ	0xFE9
 31276                           wreg	equ	0xFE8
 31277                           postinc1	equ	0xFE6
 31278                           postdec1	equ	0xFE5
 31279                           plusw1	equ	0xFE3
 31280                           fsr1h	equ	0xFE2
 31281                           fsr1l	equ	0xFE1
 31282                           indf2	equ	0xFDF
 31283                           postinc2	equ	0xFDE
 31284                           postdec2	equ	0xFDD
 31285                           plusw2	equ	0xFDB
 31286                           fsr2h	equ	0xFDA
 31287                           fsr2l	equ	0xFD9
 31288                           status	equ	0xFD8
 31289                           
 31290 ;; *************** function _SetCallbackSoftwareTimers *****************
 31291 ;; Defined at:
 31292 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31293 ;; Parameters:    Size  Location     Type
 31294 ;;		None
 31295 ;; Auto vars:     Size  Location     Type
 31296 ;;		None
 31297 ;; Return value:  Size  Location     Type
 31298 ;;                  1    wreg      void 
 31299 ;; Registers used:
 31300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31301 ;; Tracked objects:
 31302 ;;		On entry : F/2
 31303 ;;		On exit  : F/0
 31304 ;;		Unchanged: 0/0
 31305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31310 ;;Total ram usage:        0 bytes
 31311 ;; Hardware stack levels used:    1
 31312 ;; Hardware stack levels required when called:    8
 31313 ;; This function calls:
 31314 ;;		_SwTimerSetCallback
 31315 ;; This function is called by:
 31316 ;;		_LORAWAN_Init
 31317 ;; This function uses a non-reentrant model
 31318 ;;
 31319                           
 31320                           	psect	text161
 31321  005592                     __ptext161:
 31322                           	opt stack 0
 31323  005592                     _SetCallbackSoftwareTimers:
 31324                           	opt stack 21
 31325                           
 31326                           ; BSR set to: 2
 31327                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 31328                           
 31329                           ;incstack = 0
 31330  005592  0E48               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31331  005594  0100               	movlb	0	; () banked
 31332  005596  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31333  005598  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31334  00559A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31335  00559C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31336  00559E  0102               	movlb	2	; () banked
 31337  0055A0  51E2               	movf	(_loRa+226)& (0+255),w,b
 31338  0055A2  EC56  F038         	call	_SwTimerSetCallback
 31339                           
 31340                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 31341  0055A6  0E52               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31342  0055A8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31343  0055AA  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31344  0055AC  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31345  0055AE  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31346  0055B0  0102               	movlb	2	; () banked
 31347  0055B2  51E3               	movf	(_loRa+227)& (0+255),w,b
 31348  0055B4  EC56  F038         	call	_SwTimerSetCallback
 31349                           
 31350                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 31351  0055B8  0EFC               	movlw	low _LORAWAN_LinkCheckCallback
 31352  0055BA  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31353  0055BC  0E3F               	movlw	high _LORAWAN_LinkCheckCallback
 31354  0055BE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31355  0055C0  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31356  0055C2  0102               	movlb	2	; () banked
 31357  0055C4  51E7               	movf	(_loRa+231)& (0+255),w,b
 31358  0055C6  EC56  F038         	call	_SwTimerSetCallback
 31359                           
 31360                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 31361  0055CA  0E48               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31362  0055CC  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31363  0055CE  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31364  0055D0  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31365  0055D2  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31366  0055D4  0102               	movlb	2	; () banked
 31367  0055D6  51E4               	movf	(_loRa+228)& (0+255),w,b
 31368  0055D8  EC56  F038         	call	_SwTimerSetCallback
 31369                           
 31370                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31371  0055DC  0E52               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31372  0055DE  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31373  0055E0  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31374  0055E2  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31375  0055E4  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31376  0055E6  0102               	movlb	2	; () banked
 31377  0055E8  51E5               	movf	(_loRa+229)& (0+255),w,b
 31378  0055EA  EC56  F038         	call	_SwTimerSetCallback
 31379                           
 31380                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31381  0055EE  0E7A               	movlw	low _AckRetransmissionCallback
 31382  0055F0  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31383  0055F2  0E4A               	movlw	high _AckRetransmissionCallback
 31384  0055F4  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31385  0055F6  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31386  0055F8  0102               	movlb	2	; () banked
 31387  0055FA  51E8               	movf	(_loRa+232)& (0+255),w,b
 31388  0055FC  EC56  F038         	call	_SwTimerSetCallback
 31389                           
 31390                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31391  005600  0E82               	movlw	low _AutomaticReplyCallback
 31392  005602  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31393  005604  0E74               	movlw	high _AutomaticReplyCallback
 31394  005606  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31395  005608  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31396  00560A  0102               	movlb	2	; () banked
 31397  00560C  51E6               	movf	(_loRa+230)& (0+255),w,b
 31398  00560E  EC56  F038         	call	_SwTimerSetCallback
 31399                           
 31400                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31401  005612  0ED2               	movlw	low _UnconfirmedTransmissionCallback
 31402  005614  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31403  005616  0E62               	movlw	high _UnconfirmedTransmissionCallback
 31404  005618  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31405  00561A  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31406  00561C  0102               	movlb	2	; () banked
 31407  00561E  51EA               	movf	(_loRa+234)& (0+255),w,b
 31408  005620  EC56  F038         	call	_SwTimerSetCallback
 31409                           
 31410                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31411  005624  0E24               	movlw	low _UpdateJoinSuccessState
 31412  005626  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31413  005628  0E45               	movlw	high _UpdateJoinSuccessState
 31414  00562A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31415  00562C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31416  00562E  0102               	movlb	2	; () banked
 31417  005630  51F3               	movf	(_loRa+243)& (0+255),w,b
 31418  005632  EC56  F038         	call	_SwTimerSetCallback
 31419                           
 31420                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 31421  005636  0E20               	movlw	low _DutyCycleCallback
 31422  005638  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31423  00563A  0E21               	movlw	high _DutyCycleCallback
 31424  00563C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31425  00563E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31426  005640  0102               	movlb	2	; () banked
 31427  005642  51E9               	movf	(_loRa+233)& (0+255),w,b
 31428  005644  EF56  F038         	goto	_SwTimerSetCallback
 31429  005648                     __end_of_SetCallbackSoftwareTimers:
 31430                           	opt stack 0
 31431                           tosu	equ	0xFFF
 31432                           tosh	equ	0xFFE
 31433                           tosl	equ	0xFFD
 31434                           pclath	equ	0xFFA
 31435                           tblptru	equ	0xFF8
 31436                           tblptrh	equ	0xFF7
 31437                           tblptrl	equ	0xFF6
 31438                           tablat	equ	0xFF5
 31439                           prodh	equ	0xFF4
 31440                           prodl	equ	0xFF3
 31441                           intcon	equ	0xFF2
 31442                           intcon2	equ	0xFF1
 31443                           intcon3	equ	0xFF0
 31444                           indf0	equ	0xFEF
 31445                           postinc0	equ	0xFEE
 31446                           plusw0	equ	0xFEB
 31447                           fsr0h	equ	0xFEA
 31448                           fsr0l	equ	0xFE9
 31449                           wreg	equ	0xFE8
 31450                           postinc1	equ	0xFE6
 31451                           postdec1	equ	0xFE5
 31452                           plusw1	equ	0xFE3
 31453                           fsr1h	equ	0xFE2
 31454                           fsr1l	equ	0xFE1
 31455                           indf2	equ	0xFDF
 31456                           postinc2	equ	0xFDE
 31457                           postdec2	equ	0xFDD
 31458                           plusw2	equ	0xFDB
 31459                           fsr2h	equ	0xFDA
 31460                           fsr2l	equ	0xFD9
 31461                           status	equ	0xFD8
 31462                           
 31463 ;; *************** function _RADIO_ReadRandom *****************
 31464 ;; Defined at:
 31465 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31466 ;; Parameters:    Size  Location     Type
 31467 ;;		None
 31468 ;; Auto vars:     Size  Location     Type
 31469 ;;  retVal          2   18[BANK0 ] unsigned int 
 31470 ;;  i               1   20[BANK0 ] unsigned char 
 31471 ;; Return value:  Size  Location     Type
 31472 ;;                  2   16[BANK0 ] unsigned int 
 31473 ;; Registers used:
 31474 ;;		wreg, status,2, status,0, cstack
 31475 ;; Tracked objects:
 31476 ;;		On entry : F/1
 31477 ;;		On exit  : 0/0
 31478 ;;		Unchanged: 0/0
 31479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31481 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31483 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31484 ;;Total ram usage:        5 bytes
 31485 ;; Hardware stack levels used:    1
 31486 ;; Hardware stack levels required when called:   11
 31487 ;; This function calls:
 31488 ;;		_RADIO_RegisterRead
 31489 ;;		_RADIO_RegisterWrite
 31490 ;;		_RADIO_WriteMode
 31491 ;;		_SystemBlockingWaitMs
 31492 ;; This function is called by:
 31493 ;;		_LORAWAN_Init
 31494 ;; This function uses a non-reentrant model
 31495 ;;
 31496                           
 31497                           	psect	text162
 31498  005EBE                     __ptext162:
 31499                           	opt stack 0
 31500  005EBE                     _RADIO_ReadRandom:
 31501                           	opt stack 18
 31502                           
 31503                           ; BSR set to: 1
 31504                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 31505                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 31506                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 31507                           
 31508                           ; BSR set to: 0
 31509                           ;incstack = 0
 31510  005EBE  0100               	movlb	0	; () banked
 31511  005EC0  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 31512  005EC2  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31513                           
 31514                           ; BSR set to: 0
 31515                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31516  005EC4  0E01               	movlw	1
 31517  005EC6  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31518  005EC8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31519  005ECA  0E00               	movlw	0
 31520  005ECC  EC6E  F028         	call	_RADIO_WriteMode
 31521                           
 31522                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 31523  005ED0  0100               	movlb	0	; () banked
 31524  005ED2  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31525  005ED4  0E11               	movlw	17
 31526  005ED6  EC6E  F03A         	call	_RADIO_RegisterWrite
 31527                           
 31528                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31529  005EDA  0E01               	movlw	1
 31530  005EDC  0100               	movlb	0	; () banked
 31531  005EDE  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31532  005EE0  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31533  005EE2  0E05               	movlw	5
 31534  005EE4  EC6E  F028         	call	_RADIO_WriteMode
 31535                           
 31536                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 31537  005EE8  0100               	movlb	0	; () banked
 31538  005EEA  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 31539  005EEC                     l15316:
 31540                           
 31541                           ; BSR set to: 0
 31542                           ;radio_driver_SX1276.c: 1377: {
 31543                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 31544  005EEC  0E01               	movlw	1
 31545  005EEE  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31546  005EF0  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31547  005EF2  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31548  005EF4  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31549  005EF6  EC0B  F039         	call	_SystemBlockingWaitMs	;wreg free
 31550                           
 31551                           ; BSR set to: 0
 31552                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 31553  005EFA  90D8               	bcf	status,0,c
 31554  005EFC  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31555  005EFE  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31556                           
 31557                           ; BSR set to: 0
 31558                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31559  005F00  0E2C               	movlw	44
 31560  005F02  EC97  F039         	call	_RADIO_RegisterRead
 31561  005F06  0B01               	andlw	1
 31562  005F08  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31563  005F0A  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31564                           
 31565                           ; BSR set to: 0
 31566  005F0C  0E0F               	movlw	15
 31567  005F0E  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31568  005F10  D7ED               	goto	l15316
 31569                           
 31570                           ; BSR set to: 0
 31571                           ;radio_driver_SX1276.c: 1381: }
 31572                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31573  005F12  0E01               	movlw	1
 31574  005F14  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31575  005F16  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31576  005F18  0E00               	movlw	0
 31577  005F1A  EC6E  F028         	call	_RADIO_WriteMode
 31578                           
 31579                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 31580  005F1E  0100               	movlb	0	; () banked
 31581  005F20  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31582  005F22  0E12               	movlw	18
 31583  005F24  EC6E  F03A         	call	_RADIO_RegisterWrite
 31584                           
 31585                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 31586  005F28  0100               	movlb	0	; () banked
 31587  005F2A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 31588  005F2C  0E11               	movlw	17
 31589  005F2E  EC6E  F03A         	call	_RADIO_RegisterWrite
 31590                           
 31591                           ;radio_driver_SX1276.c: 1389: return retVal;
 31592  005F32  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31593  005F36  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31594  005F3A  0012               	return		;funcret
 31595  005F3C                     __end_of_RADIO_ReadRandom:
 31596                           	opt stack 0
 31597                           tosu	equ	0xFFF
 31598                           tosh	equ	0xFFE
 31599                           tosl	equ	0xFFD
 31600                           pclath	equ	0xFFA
 31601                           tblptru	equ	0xFF8
 31602                           tblptrh	equ	0xFF7
 31603                           tblptrl	equ	0xFF6
 31604                           tablat	equ	0xFF5
 31605                           prodh	equ	0xFF4
 31606                           prodl	equ	0xFF3
 31607                           intcon	equ	0xFF2
 31608                           intcon2	equ	0xFF1
 31609                           intcon3	equ	0xFF0
 31610                           indf0	equ	0xFEF
 31611                           postinc0	equ	0xFEE
 31612                           plusw0	equ	0xFEB
 31613                           fsr0h	equ	0xFEA
 31614                           fsr0l	equ	0xFE9
 31615                           wreg	equ	0xFE8
 31616                           postinc1	equ	0xFE6
 31617                           postdec1	equ	0xFE5
 31618                           plusw1	equ	0xFE3
 31619                           fsr1h	equ	0xFE2
 31620                           fsr1l	equ	0xFE1
 31621                           indf2	equ	0xFDF
 31622                           postinc2	equ	0xFDE
 31623                           postdec2	equ	0xFDD
 31624                           plusw2	equ	0xFDB
 31625                           fsr2h	equ	0xFDA
 31626                           fsr2l	equ	0xFD9
 31627                           status	equ	0xFD8
 31628                           
 31629 ;; *************** function _LORAWAN_Reset *****************
 31630 ;; Defined at:
 31631 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31632 ;; Parameters:    Size  Location     Type
 31633 ;;  ismBandNew      1    wreg     enum E8047
 31634 ;; Auto vars:     Size  Location     Type
 31635 ;;  ismBandNew      1   69[BANK0 ] enum E8047
 31636 ;; Return value:  Size  Location     Type
 31637 ;;                  1    wreg      void 
 31638 ;; Registers used:
 31639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31640 ;; Tracked objects:
 31641 ;;		On entry : 0/1
 31642 ;;		On exit  : D/0
 31643 ;;		Unchanged: 0/0
 31644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31649 ;;Total ram usage:        1 bytes
 31650 ;; Hardware stack levels used:    1
 31651 ;; Hardware stack levels required when called:   12
 31652 ;; This function calls:
 31653 ;;		_InitDefault433Channels
 31654 ;;		_InitDefault868Channels
 31655 ;;		_LORAWAN_LinkCheckConfigure
 31656 ;;		_RADIO_Init
 31657 ;;		_RADIO_SetLoRaSyncWord
 31658 ;;		_StopAllSoftwareTimers
 31659 ;;		_UpdateMinMaxChDataRate
 31660 ;;		_memset
 31661 ;; This function is called by:
 31662 ;;		_LORAWAN_Init
 31663 ;; This function uses a non-reentrant model
 31664 ;;
 31665                           
 31666                           	psect	text163
 31667  003E9E                     __ptext163:
 31668                           	opt stack 0
 31669  003E9E                     _LORAWAN_Reset:
 31670                           	opt stack 17
 31671                           
 31672                           ;incstack = 0
 31673                           ;LORAWAN_Reset@ismBandNew stored from wreg
 31674  003E9E  0100               	movlb	0	; () banked
 31675  003EA0  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 31676                           
 31677                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 31678  003EA2  0102               	movlb	2	; () banked
 31679  003EA4  05F0               	decf	(_loRa+240)& (0+255),w,b
 31680  003EA6  E102               	bnz	l15336
 31681                           
 31682                           ; BSR set to: 2
 31683                           ;lorawan_eu.c: 151: {
 31684                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 31685  003EA8  EC09  F035         	call	_StopAllSoftwareTimers	;wreg free
 31686  003EAC                     l15336:
 31687                           
 31688                           ;lorawan_eu.c: 153: }
 31689                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 31690  003EAC  0E34               	movlw	52
 31691  003EAE  0102               	movlb	2	; () banked
 31692  003EB0  6FF4               	movwf	(_loRa+244)& (0+255),b
 31693                           
 31694                           ; BSR set to: 2
 31695                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31696  003EB2  51F4               	movf	(_loRa+244)& (0+255),w,b
 31697  003EB4  EC47  F03C         	call	_RADIO_SetLoRaSyncWord
 31698                           
 31699                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 31700  003EB8  0102               	movlb	2	; () banked
 31701  003EBA  6B02               	clrf	(_loRa+2)& (0+255),b
 31702  003EBC  6B03               	clrf	(_loRa+3)& (0+255),b
 31703  003EBE  6B04               	clrf	(_loRa+4)& (0+255),b
 31704  003EC0  6B05               	clrf	(_loRa+5)& (0+255),b
 31705                           
 31706                           ; BSR set to: 2
 31707                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 31708  003EC2  69DD               	setf	(_loRa+221)& (0+255),b
 31709                           
 31710                           ; BSR set to: 2
 31711                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 31712  003EC4  6BDE               	clrf	(_loRa+222)& (0+255),b
 31713                           
 31714                           ; BSR set to: 2
 31715                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 31716  003EC6  6BC8               	clrf	(_loRa+200)& (0+255),b
 31717  003EC8  6BC9               	clrf	(_loRa+201)& (0+255),b
 31718  003ECA  6BCA               	clrf	(_loRa+202)& (0+255),b
 31719  003ECC  6BCB               	clrf	(_loRa+203)& (0+255),b
 31720                           
 31721                           ; BSR set to: 2
 31722                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 31723  003ECE  6BD4               	clrf	(_loRa+212)& (0+255),b
 31724  003ED0  6BD5               	clrf	(_loRa+213)& (0+255),b
 31725                           
 31726                           ; BSR set to: 2
 31727                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 31728  003ED2  6B0A               	clrf	(_loRa+10)& (0+255),b
 31729  003ED4  6B0B               	clrf	(_loRa+11)& (0+255),b
 31730  003ED6  6B0C               	clrf	(_loRa+12)& (0+255),b
 31731  003ED8  6B0D               	clrf	(_loRa+13)& (0+255),b
 31732                           
 31733                           ; BSR set to: 2
 31734                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 31735  003EDA  6B06               	clrf	(_loRa+6)& (0+255),b
 31736  003EDC  6B07               	clrf	(_loRa+7)& (0+255),b
 31737  003EDE  6B08               	clrf	(_loRa+8)& (0+255),b
 31738  003EE0  6B09               	clrf	(_loRa+9)& (0+255),b
 31739                           
 31740                           ; BSR set to: 2
 31741                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 31742  003EE2  6BD2               	clrf	(_loRa+210)& (0+255),b
 31743  003EE4  6BD3               	clrf	(_loRa+211)& (0+255),b
 31744                           
 31745                           ; BSR set to: 2
 31746                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 31747  003EE6  6BDC               	clrf	(_loRa+220)& (0+255),b
 31748  003EE8  0E01               	movlw	1
 31749  003EEA  6FDB               	movwf	(_loRa+219)& (0+255),b
 31750                           
 31751                           ; BSR set to: 2
 31752                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 31753  003EEC  6BD0               	clrf	(_loRa+208)& (0+255),b
 31754  003EEE  6BD1               	clrf	(_loRa+209)& (0+255),b
 31755                           
 31756                           ; BSR set to: 2
 31757                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 31758  003EF0  6BEE               	clrf	(_loRa+238)& (0+255),b
 31759                           
 31760                           ; BSR set to: 2
 31761                           ;lorawan_eu.c: 169: loRa.offset = 0;
 31762  003EF2  6BEF               	clrf	(_loRa+239)& (0+255),b
 31763                           
 31764                           ; BSR set to: 2
 31765                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 31766  003EF4  6BC8               	clrf	(_loRa+200)& (0+255),b
 31767  003EF6  6BC9               	clrf	(_loRa+201)& (0+255),b
 31768  003EF8  6BCA               	clrf	(_loRa+202)& (0+255),b
 31769  003EFA  6BCB               	clrf	(_loRa+203)& (0+255),b
 31770                           
 31771                           ; BSR set to: 2
 31772                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 31773  003EFC  9503               	bcf	(_loRa+3)& (0+255),2,b
 31774                           
 31775                           ; BSR set to: 2
 31776                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 31777  003EFE  6B02               	clrf	(_loRa+2)& (0+255),b
 31778  003F00  6B03               	clrf	(_loRa+3)& (0+255),b
 31779  003F02  6B04               	clrf	(_loRa+4)& (0+255),b
 31780  003F04  6B05               	clrf	(_loRa+5)& (0+255),b
 31781                           
 31782                           ; BSR set to: 2
 31783                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 31784  003F06  6B00               	clrf	_loRa& (0+255),b
 31785  003F08  6B01               	clrf	(_loRa+1)& (0+255),b
 31786                           
 31787                           ; BSR set to: 2
 31788                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 31789  003F0A  0E07               	movlw	7
 31790  003F0C  6FD7               	movwf	(_loRa+215)& (0+255),b
 31791                           
 31792                           ; BSR set to: 2
 31793                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31794  003F0E  6BD6               	clrf	(_loRa+214)& (0+255),b
 31795                           
 31796                           ; BSR set to: 2
 31797                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 31798  003F10  0E01               	movlw	1
 31799  003F12  6FD9               	movwf	(_loRa+217)& (0+255),b
 31800                           
 31801                           ; BSR set to: 2
 31802                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31803  003F14  6FD8               	movwf	(_loRa+216)& (0+255),b
 31804                           
 31805                           ; BSR set to: 2
 31806                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 31807  003F16  69E0               	setf	(_loRa+224)& (0+255),b
 31808                           
 31809                           ; BSR set to: 2
 31810                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 31811  003F18  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 31812                           
 31813                           ; BSR set to: 2
 31814                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 31815  003F1C  6B12               	clrf	(_loRa+18)& (0+255),b
 31816                           
 31817                           ; BSR set to: 2
 31818                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 31819  003F1E  0E10               	movlw	16
 31820  003F20  6FED               	movwf	(_loRa+237)& (0+255),b
 31821                           
 31822                           ; BSR set to: 2
 31823                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 31824  003F22  0100               	movlb	0	; () banked
 31825  003F24  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 31826  003F26  E11A               	bnz	l15398
 31827                           
 31828                           ; BSR set to: 0
 31829                           ;lorawan_eu.c: 193: {
 31830                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 31831  003F28  0EFF               	movlw	low (_radioBuffer+16)
 31832  003F2A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31833  003F2C  0E05               	movlw	high (_radioBuffer+16)
 31834  003F2E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31835  003F30  0EA0               	movlw	160
 31836  003F32  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31837  003F34  0E27               	movlw	39
 31838  003F36  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31839  003F38  0EBE               	movlw	190
 31840  003F3A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31841  003F3C  0E33               	movlw	51
 31842  003F3E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31843  003F40  EC45  F01C         	call	_RADIO_Init	;wreg free
 31844                           
 31845                           ; BSR set to: 1
 31846                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 31847  003F44  ECCF  F031         	call	_InitDefault868Channels	;wreg free
 31848                           
 31849                           ; BSR set to: 0
 31850                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 31851  003F48  0102               	movlb	2	; () banked
 31852  003F4A  6B1C               	clrf	(_loRa+28)& (0+255),b
 31853                           
 31854                           ; BSR set to: 2
 31855                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 31856  003F4C  0E08               	movlw	8
 31857  003F4E  6F18               	movwf	(_loRa+24)& (0+255),b
 31858  003F50  0EE6               	movlw	230
 31859  003F52  6F19               	movwf	(_loRa+25)& (0+255),b
 31860  003F54  0ED3               	movlw	211
 31861  003F56  6F1A               	movwf	(_loRa+26)& (0+255),b
 31862  003F58  0E33               	movlw	51
 31863  003F5A  D019               	goto	L20
 31864  003F5C                     l15398:
 31865                           
 31866                           ; BSR set to: 0
 31867                           ;lorawan_eu.c: 201: else
 31868                           ;lorawan_eu.c: 202: {
 31869                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 31870  003F5C  0EFF               	movlw	low (_radioBuffer+16)
 31871  003F5E  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31872  003F60  0E05               	movlw	high (_radioBuffer+16)
 31873  003F62  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31874  003F64  0E20               	movlw	32
 31875  003F66  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31876  003F68  0EA2               	movlw	162
 31877  003F6A  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31878  003F6C  0ED3               	movlw	211
 31879  003F6E  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31880  003F70  0E19               	movlw	25
 31881  003F72  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31882  003F74  EC45  F01C         	call	_RADIO_Init	;wreg free
 31883                           
 31884                           ; BSR set to: 1
 31885                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 31886  003F78  EC02  F032         	call	_InitDefault433Channels	;wreg free
 31887                           
 31888                           ; BSR set to: 0
 31889                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 31890  003F7C  0102               	movlb	2	; () banked
 31891  003F7E  6B1C               	clrf	(_loRa+28)& (0+255),b
 31892                           
 31893                           ; BSR set to: 2
 31894                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 31895  003F80  0E28               	movlw	40
 31896  003F82  6F18               	movwf	(_loRa+24)& (0+255),b
 31897  003F84  0E76               	movlw	118
 31898  003F86  6F19               	movwf	(_loRa+25)& (0+255),b
 31899  003F88  0EE8               	movlw	232
 31900  003F8A  6F1A               	movwf	(_loRa+26)& (0+255),b
 31901  003F8C  0E19               	movlw	25
 31902  003F8E                     L20:
 31903  003F8E  6F1B               	movwf	(_loRa+27)& (0+255),b
 31904                           
 31905                           ; BSR set to: 2
 31906                           ;lorawan_eu.c: 209: }
 31907                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 31908  003F90  0E01               	movlw	1
 31909  003F92  6FE1               	movwf	(_loRa+225)& (0+255),b
 31910                           
 31911                           ; BSR set to: 2
 31912                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 31913  003F94  6BDF               	clrf	(_loRa+223)& (0+255),b
 31914                           
 31915                           ; BSR set to: 2
 31916                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 31917  003F96  EC7E  F02B         	call	_UpdateMinMaxChDataRate	;wreg free
 31918                           
 31919                           ; BSR set to: 0
 31920                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 31921  003F9A  0102               	movlb	2	; () banked
 31922  003F9C  6BA5               	clrf	(_loRa+165)& (0+255),b
 31923  003F9E  6BA6               	clrf	(_loRa+166)& (0+255),b
 31924                           
 31925                           ; BSR set to: 2
 31926                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 31927  003FA0  0E1D               	movlw	low (_loRa+29)
 31928  003FA2  0100               	movlb	0	; () banked
 31929  003FA4  6F64               	movwf	memset@p1& (0+255),b
 31930  003FA6  0E02               	movlw	high (_loRa+29)
 31931  003FA8  6F65               	movwf	(memset@p1+1)& (0+255),b
 31932  003FAA  6B67               	clrf	(memset@c+1)& (0+255),b
 31933  003FAC  6B66               	clrf	memset@c& (0+255),b
 31934  003FAE  6B69               	clrf	(memset@n+1)& (0+255),b
 31935  003FB0  0E69               	movlw	105
 31936  003FB2  6F68               	movwf	memset@n& (0+255),b
 31937  003FB4  EC20  F039         	call	_memset	;wreg free
 31938                           
 31939                           ; BSR set to: 0
 31940                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 31941  003FB8  0E03               	movlw	3
 31942  003FBA  0102               	movlb	2	; () banked
 31943  003FBC  6F95               	movwf	(_loRa+149)& (0+255),b
 31944  003FBE  0EE8               	movlw	232
 31945  003FC0  6F94               	movwf	(_loRa+148)& (0+255),b
 31946                           
 31947                           ; BSR set to: 2
 31948                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 31949  003FC2  0E07               	movlw	7
 31950  003FC4  6F97               	movwf	(_loRa+151)& (0+255),b
 31951  003FC6  0ED0               	movlw	208
 31952  003FC8  6F96               	movwf	(_loRa+150)& (0+255),b
 31953                           
 31954                           ; BSR set to: 2
 31955                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 31956  003FCA  0E13               	movlw	19
 31957  003FCC  6F99               	movwf	(_loRa+153)& (0+255),b
 31958  003FCE  0E88               	movlw	136
 31959  003FD0  6F98               	movwf	(_loRa+152)& (0+255),b
 31960                           
 31961                           ; BSR set to: 2
 31962                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 31963  003FD2  0E17               	movlw	23
 31964  003FD4  6F9B               	movwf	(_loRa+155)& (0+255),b
 31965  003FD6  0E70               	movlw	112
 31966  003FD8  6F9A               	movwf	(_loRa+154)& (0+255),b
 31967                           
 31968                           ; BSR set to: 2
 31969                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 31970  003FDA  0E07               	movlw	7
 31971  003FDC  6FA1               	movwf	(_loRa+161)& (0+255),b
 31972  003FDE  0ED0               	movlw	208
 31973  003FE0  6FA0               	movwf	(_loRa+160)& (0+255),b
 31974                           
 31975                           ; BSR set to: 2
 31976                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 31977  003FE2  0E20               	movlw	32
 31978  003FE4  6FA3               	movwf	(_loRa+163)& (0+255),b
 31979                           
 31980                           ; BSR set to: 2
 31981                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 31982  003FE6  0E40               	movlw	64
 31983  003FE8  6FA2               	movwf	(_loRa+162)& (0+255),b
 31984                           
 31985                           ; BSR set to: 2
 31986                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 31987  003FEA  6F9D               	movwf	(_loRa+157)& (0+255),b
 31988  003FEC  6B9C               	clrf	(_loRa+156)& (0+255),b
 31989                           
 31990                           ; BSR set to: 2
 31991                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 31992  003FEE  6F9F               	movwf	(_loRa+159)& (0+255),b
 31993  003FF0  6B9E               	clrf	(_loRa+158)& (0+255),b
 31994                           
 31995                           ; BSR set to: 2
 31996                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 31997  003FF2  0100               	movlb	0	; () banked
 31998  003FF4  6B97               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 31999  003FF6  6B96               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 32000  003FF8  EF77  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 32001  003FFC                     __end_of_LORAWAN_Reset:
 32002                           	opt stack 0
 32003                           tosu	equ	0xFFF
 32004                           tosh	equ	0xFFE
 32005                           tosl	equ	0xFFD
 32006                           pclath	equ	0xFFA
 32007                           tblptru	equ	0xFF8
 32008                           tblptrh	equ	0xFF7
 32009                           tblptrl	equ	0xFF6
 32010                           tablat	equ	0xFF5
 32011                           prodh	equ	0xFF4
 32012                           prodl	equ	0xFF3
 32013                           intcon	equ	0xFF2
 32014                           intcon2	equ	0xFF1
 32015                           intcon3	equ	0xFF0
 32016                           indf0	equ	0xFEF
 32017                           postinc0	equ	0xFEE
 32018                           plusw0	equ	0xFEB
 32019                           fsr0h	equ	0xFEA
 32020                           fsr0l	equ	0xFE9
 32021                           wreg	equ	0xFE8
 32022                           postinc1	equ	0xFE6
 32023                           postdec1	equ	0xFE5
 32024                           plusw1	equ	0xFE3
 32025                           fsr1h	equ	0xFE2
 32026                           fsr1l	equ	0xFE1
 32027                           indf2	equ	0xFDF
 32028                           postinc2	equ	0xFDE
 32029                           postdec2	equ	0xFDD
 32030                           plusw2	equ	0xFDB
 32031                           fsr2h	equ	0xFDA
 32032                           fsr2l	equ	0xFD9
 32033                           status	equ	0xFD8
 32034                           
 32035 ;; *************** function _UpdateMinMaxChDataRate *****************
 32036 ;; Defined at:
 32037 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32038 ;; Parameters:    Size  Location     Type
 32039 ;;		None
 32040 ;; Auto vars:     Size  Location     Type
 32041 ;;  i               1    5[BANK0 ] unsigned char 
 32042 ;; Return value:  Size  Location     Type
 32043 ;;                  1    wreg      void 
 32044 ;; Registers used:
 32045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32046 ;; Tracked objects:
 32047 ;;		On entry : F/2
 32048 ;;		On exit  : F/0
 32049 ;;		Unchanged: 0/0
 32050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32054 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32055 ;;Total ram usage:        2 bytes
 32056 ;; Hardware stack levels used:    1
 32057 ;; Hardware stack levels required when called:    7
 32058 ;; This function calls:
 32059 ;;		Nothing
 32060 ;; This function is called by:
 32061 ;;		_LORAWAN_Reset
 32062 ;; This function uses a non-reentrant model
 32063 ;;
 32064                           
 32065                           	psect	text164
 32066  0056FC                     __ptext164:
 32067                           	opt stack 0
 32068  0056FC                     _UpdateMinMaxChDataRate:
 32069                           	opt stack 21
 32070                           
 32071                           ; BSR set to: 2
 32072                           ;lorawan.c: 1065: uint8_t i;
 32073                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 32074                           
 32075                           ;incstack = 0
 32076  0056FC  0E07               	movlw	7
 32077  0056FE  6FEB               	movwf	(_loRa+235)& (0+255),b
 32078                           
 32079                           ; BSR set to: 2
 32080                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 32081  005700  6BEC               	clrf	(_loRa+236)& (0+255),b
 32082                           
 32083                           ; BSR set to: 2
 32084                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 32085  005702  0100               	movlb	0	; () banked
 32086  005704  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 32087  005706  D04E               	goto	l10956
 32088  005708                     l10944:
 32089                           
 32090                           ; BSR set to: 0
 32091                           ;lorawan.c: 1072: {
 32092                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 32093  005708  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32094  00570A  0D0E               	mullw	14
 32095  00570C  0E05               	movlw	low (_Channels+5)
 32096  00570E  24F3               	addwf	prodl,w,c
 32097  005710  6ED9               	movwf	fsr2l,c
 32098  005712  0E04               	movlw	high (_Channels+5)
 32099  005714  20F4               	addwfc	prodh,w,c
 32100  005716  6EDA               	movwf	fsr2h,c
 32101  005718  50DF               	movf	223,w,c
 32102  00571A  0B0F               	andlw	15
 32103  00571C  0100               	movlb	0	; () banked
 32104  00571E  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 32105  005720  0102               	movlb	2	; () banked
 32106  005722  51EB               	movf	(_loRa+235)& (0+255),w,b
 32107  005724  0100               	movlb	0	; () banked
 32108  005726  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 32109  005728  E216               	bc	l2095
 32110                           
 32111                           ; BSR set to: 0
 32112  00572A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32113  00572C  0D0E               	mullw	14
 32114  00572E  0E04               	movlw	low (_Channels+4)
 32115  005730  24F3               	addwf	prodl,w,c
 32116  005732  6ED9               	movwf	fsr2l,c
 32117  005734  0E04               	movlw	high (_Channels+4)
 32118  005736  20F4               	addwfc	prodh,w,c
 32119  005738  6EDA               	movwf	fsr2h,c
 32120  00573A  04DE               	decf	postinc2,w,c
 32121  00573C  E10C               	bnz	l2095
 32122                           
 32123                           ; BSR set to: 0
 32124                           ;lorawan.c: 1074: {
 32125                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 32126  00573E  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32127  005740  0D0E               	mullw	14
 32128  005742  0E05               	movlw	low (_Channels+5)
 32129  005744  24F3               	addwf	prodl,w,c
 32130  005746  6ED9               	movwf	fsr2l,c
 32131  005748  0E04               	movlw	high (_Channels+5)
 32132  00574A  20F4               	addwfc	prodh,w,c
 32133  00574C  6EDA               	movwf	fsr2h,c
 32134  00574E  50DF               	movf	223,w,c
 32135  005750  0B0F               	andlw	15
 32136  005752  0102               	movlb	2	; () banked
 32137  005754  6FEB               	movwf	(_loRa+235)& (0+255),b
 32138  005756                     l2095:
 32139                           
 32140                           ;lorawan.c: 1076: }
 32141                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 32142  005756  0100               	movlb	0	; () banked
 32143  005758  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32144  00575A  0D0E               	mullw	14
 32145  00575C  0E05               	movlw	low (_Channels+5)
 32146  00575E  24F3               	addwf	prodl,w,c
 32147  005760  6ED9               	movwf	fsr2l,c
 32148  005762  0E04               	movlw	high (_Channels+5)
 32149  005764  20F4               	addwfc	prodh,w,c
 32150  005766  6EDA               	movwf	fsr2h,c
 32151  005768  38DF               	swapf	223,w,c
 32152  00576A  0B0F               	andlw	15
 32153  00576C  0102               	movlb	2	; () banked
 32154  00576E  61EC               	cpfslt	(_loRa+236)& (0+255),b
 32155  005770  D017               	goto	l10954
 32156                           
 32157                           ; BSR set to: 2
 32158  005772  0100               	movlb	0	; () banked
 32159  005774  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32160  005776  0D0E               	mullw	14
 32161  005778  0E04               	movlw	low (_Channels+4)
 32162  00577A  24F3               	addwf	prodl,w,c
 32163  00577C  6ED9               	movwf	fsr2l,c
 32164  00577E  0E04               	movlw	high (_Channels+4)
 32165  005780  20F4               	addwfc	prodh,w,c
 32166  005782  6EDA               	movwf	fsr2h,c
 32167  005784  04DE               	decf	postinc2,w,c
 32168  005786  E10C               	bnz	l10954
 32169                           
 32170                           ; BSR set to: 0
 32171                           ;lorawan.c: 1078: {
 32172                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 32173  005788  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32174  00578A  0D0E               	mullw	14
 32175  00578C  0E05               	movlw	low (_Channels+5)
 32176  00578E  24F3               	addwf	prodl,w,c
 32177  005790  6ED9               	movwf	fsr2l,c
 32178  005792  0E04               	movlw	high (_Channels+5)
 32179  005794  20F4               	addwfc	prodh,w,c
 32180  005796  6EDA               	movwf	fsr2h,c
 32181  005798  38DF               	swapf	223,w,c
 32182  00579A  0B0F               	andlw	15
 32183  00579C  0102               	movlb	2	; () banked
 32184  00579E  6FEC               	movwf	(_loRa+236)& (0+255),b
 32185  0057A0                     l10954:
 32186  0057A0  0100               	movlb	0	; () banked
 32187  0057A2  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 32188  0057A4                     l10956:
 32189                           
 32190                           ; BSR set to: 0
 32191  0057A4  0102               	movlb	2	; () banked
 32192  0057A6  51ED               	movf	(_loRa+237)& (0+255),w,b
 32193  0057A8  0100               	movlb	0	; () banked
 32194  0057AA  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32195  0057AC  E3AD               	bnc	l10944
 32196                           
 32197                           ; BSR set to: 0
 32198  0057AE  0012               	return		;funcret
 32199  0057B0                     __end_of_UpdateMinMaxChDataRate:
 32200                           	opt stack 0
 32201                           tosu	equ	0xFFF
 32202                           tosh	equ	0xFFE
 32203                           tosl	equ	0xFFD
 32204                           pclath	equ	0xFFA
 32205                           tblptru	equ	0xFF8
 32206                           tblptrh	equ	0xFF7
 32207                           tblptrl	equ	0xFF6
 32208                           tablat	equ	0xFF5
 32209                           prodh	equ	0xFF4
 32210                           prodl	equ	0xFF3
 32211                           intcon	equ	0xFF2
 32212                           intcon2	equ	0xFF1
 32213                           intcon3	equ	0xFF0
 32214                           indf0	equ	0xFEF
 32215                           postinc0	equ	0xFEE
 32216                           plusw0	equ	0xFEB
 32217                           fsr0h	equ	0xFEA
 32218                           fsr0l	equ	0xFE9
 32219                           wreg	equ	0xFE8
 32220                           postinc1	equ	0xFE6
 32221                           postdec1	equ	0xFE5
 32222                           plusw1	equ	0xFE3
 32223                           fsr1h	equ	0xFE2
 32224                           fsr1l	equ	0xFE1
 32225                           indf2	equ	0xFDF
 32226                           postinc2	equ	0xFDE
 32227                           postdec2	equ	0xFDD
 32228                           plusw2	equ	0xFDB
 32229                           fsr2h	equ	0xFDA
 32230                           fsr2l	equ	0xFD9
 32231                           status	equ	0xFD8
 32232                           
 32233 ;; *************** function _StopAllSoftwareTimers *****************
 32234 ;; Defined at:
 32235 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32236 ;; Parameters:    Size  Location     Type
 32237 ;;		None
 32238 ;; Auto vars:     Size  Location     Type
 32239 ;;		None
 32240 ;; Return value:  Size  Location     Type
 32241 ;;                  1    wreg      void 
 32242 ;; Registers used:
 32243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32244 ;; Tracked objects:
 32245 ;;		On entry : F/2
 32246 ;;		On exit  : F/0
 32247 ;;		Unchanged: 0/0
 32248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32253 ;;Total ram usage:        0 bytes
 32254 ;; Hardware stack levels used:    1
 32255 ;; Hardware stack levels required when called:    8
 32256 ;; This function calls:
 32257 ;;		_SwTimerStop
 32258 ;; This function is called by:
 32259 ;;		_LORAWAN_Init
 32260 ;;		_LORAWAN_Reset
 32261 ;; This function uses a non-reentrant model
 32262 ;;
 32263                           
 32264                           	psect	text165
 32265  006A12                     __ptext165:
 32266                           	opt stack 0
 32267  006A12                     _StopAllSoftwareTimers:
 32268                           	opt stack 21
 32269                           
 32270                           ; BSR set to: 2
 32271                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 32272                           
 32273                           ; BSR set to: 0
 32274                           ;incstack = 0
 32275  006A12  51E2               	movf	(_loRa+226)& (0+255),w,b
 32276  006A14  EC9B  F03A         	call	_SwTimerStop
 32277                           
 32278                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 32279  006A18  0102               	movlb	2	; () banked
 32280  006A1A  51E3               	movf	(_loRa+227)& (0+255),w,b
 32281  006A1C  EC9B  F03A         	call	_SwTimerStop
 32282                           
 32283                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 32284  006A20  0102               	movlb	2	; () banked
 32285  006A22  51E7               	movf	(_loRa+231)& (0+255),w,b
 32286  006A24  EC9B  F03A         	call	_SwTimerStop
 32287                           
 32288                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 32289  006A28  0102               	movlb	2	; () banked
 32290  006A2A  51E4               	movf	(_loRa+228)& (0+255),w,b
 32291  006A2C  EC9B  F03A         	call	_SwTimerStop
 32292                           
 32293                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 32294  006A30  0102               	movlb	2	; () banked
 32295  006A32  51E5               	movf	(_loRa+229)& (0+255),w,b
 32296  006A34  EC9B  F03A         	call	_SwTimerStop
 32297                           
 32298                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 32299  006A38  0102               	movlb	2	; () banked
 32300  006A3A  51E8               	movf	(_loRa+232)& (0+255),w,b
 32301  006A3C  EC9B  F03A         	call	_SwTimerStop
 32302                           
 32303                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 32304  006A40  0102               	movlb	2	; () banked
 32305  006A42  51E6               	movf	(_loRa+230)& (0+255),w,b
 32306  006A44  EC9B  F03A         	call	_SwTimerStop
 32307                           
 32308                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 32309  006A48  0102               	movlb	2	; () banked
 32310  006A4A  51EA               	movf	(_loRa+234)& (0+255),w,b
 32311  006A4C  EC9B  F03A         	call	_SwTimerStop
 32312                           
 32313                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 32314  006A50  0102               	movlb	2	; () banked
 32315  006A52  51F3               	movf	(_loRa+243)& (0+255),w,b
 32316  006A54  EC9B  F03A         	call	_SwTimerStop
 32317                           
 32318                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 32319  006A58  0102               	movlb	2	; () banked
 32320  006A5A  51E9               	movf	(_loRa+233)& (0+255),w,b
 32321  006A5C  EF9B  F03A         	goto	_SwTimerStop
 32322  006A60                     __end_of_StopAllSoftwareTimers:
 32323                           	opt stack 0
 32324                           tosu	equ	0xFFF
 32325                           tosh	equ	0xFFE
 32326                           tosl	equ	0xFFD
 32327                           pclath	equ	0xFFA
 32328                           tblptru	equ	0xFF8
 32329                           tblptrh	equ	0xFF7
 32330                           tblptrl	equ	0xFF6
 32331                           tablat	equ	0xFF5
 32332                           prodh	equ	0xFF4
 32333                           prodl	equ	0xFF3
 32334                           intcon	equ	0xFF2
 32335                           intcon2	equ	0xFF1
 32336                           intcon3	equ	0xFF0
 32337                           indf0	equ	0xFEF
 32338                           postinc0	equ	0xFEE
 32339                           plusw0	equ	0xFEB
 32340                           fsr0h	equ	0xFEA
 32341                           fsr0l	equ	0xFE9
 32342                           wreg	equ	0xFE8
 32343                           postinc1	equ	0xFE6
 32344                           postdec1	equ	0xFE5
 32345                           plusw1	equ	0xFE3
 32346                           fsr1h	equ	0xFE2
 32347                           fsr1l	equ	0xFE1
 32348                           indf2	equ	0xFDF
 32349                           postinc2	equ	0xFDE
 32350                           postdec2	equ	0xFDD
 32351                           plusw2	equ	0xFDB
 32352                           fsr2h	equ	0xFDA
 32353                           fsr2l	equ	0xFD9
 32354                           status	equ	0xFD8
 32355                           
 32356 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 32357 ;; Defined at:
 32358 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32359 ;; Parameters:    Size  Location     Type
 32360 ;;  syncWord        1    wreg     unsigned char 
 32361 ;; Auto vars:     Size  Location     Type
 32362 ;;  syncWord        1    4[BANK0 ] unsigned char 
 32363 ;; Return value:  Size  Location     Type
 32364 ;;                  1    wreg      void 
 32365 ;; Registers used:
 32366 ;;		wreg
 32367 ;; Tracked objects:
 32368 ;;		On entry : F/2
 32369 ;;		On exit  : 0/0
 32370 ;;		Unchanged: 0/0
 32371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32376 ;;Total ram usage:        1 bytes
 32377 ;; Hardware stack levels used:    1
 32378 ;; Hardware stack levels required when called:    7
 32379 ;; This function calls:
 32380 ;;		Nothing
 32381 ;; This function is called by:
 32382 ;;		_LORAWAN_Reset
 32383 ;;		_ConfigureRadio
 32384 ;; This function uses a non-reentrant model
 32385 ;;
 32386                           
 32387                           	psect	text166
 32388  00788E                     __ptext166:
 32389                           	opt stack 0
 32390  00788E                     _RADIO_SetLoRaSyncWord:
 32391                           	opt stack 18
 32392                           
 32393                           ; BSR set to: 0
 32394                           ;incstack = 0
 32395                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32396  00788E  0100               	movlb	0	; () banked
 32397  007890  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32398                           
 32399                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 32400  007892  C064  F178         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32401  007896  0012               	return		;funcret
 32402  007898                     __end_of_RADIO_SetLoRaSyncWord:
 32403                           	opt stack 0
 32404                           tosu	equ	0xFFF
 32405                           tosh	equ	0xFFE
 32406                           tosl	equ	0xFFD
 32407                           pclath	equ	0xFFA
 32408                           tblptru	equ	0xFF8
 32409                           tblptrh	equ	0xFF7
 32410                           tblptrl	equ	0xFF6
 32411                           tablat	equ	0xFF5
 32412                           prodh	equ	0xFF4
 32413                           prodl	equ	0xFF3
 32414                           intcon	equ	0xFF2
 32415                           intcon2	equ	0xFF1
 32416                           intcon3	equ	0xFF0
 32417                           indf0	equ	0xFEF
 32418                           postinc0	equ	0xFEE
 32419                           plusw0	equ	0xFEB
 32420                           fsr0h	equ	0xFEA
 32421                           fsr0l	equ	0xFE9
 32422                           wreg	equ	0xFE8
 32423                           postinc1	equ	0xFE6
 32424                           postdec1	equ	0xFE5
 32425                           plusw1	equ	0xFE3
 32426                           fsr1h	equ	0xFE2
 32427                           fsr1l	equ	0xFE1
 32428                           indf2	equ	0xFDF
 32429                           postinc2	equ	0xFDE
 32430                           postdec2	equ	0xFDD
 32431                           plusw2	equ	0xFDB
 32432                           fsr2h	equ	0xFDA
 32433                           fsr2l	equ	0xFD9
 32434                           status	equ	0xFD8
 32435                           
 32436 ;; *************** function _RADIO_Init *****************
 32437 ;; Defined at:
 32438 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32439 ;; Parameters:    Size  Location     Type
 32440 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 32441 ;;		 -> radioBuffer(271), 
 32442 ;;  frequency       4   31[BANK0 ] unsigned long 
 32443 ;; Auto vars:     Size  Location     Type
 32444 ;;		None
 32445 ;; Return value:  Size  Location     Type
 32446 ;;                  1    wreg      void 
 32447 ;; Registers used:
 32448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32449 ;; Tracked objects:
 32450 ;;		On entry : F/0
 32451 ;;		On exit  : F/1
 32452 ;;		Unchanged: 0/0
 32453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32454 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32457 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32458 ;;Total ram usage:        7 bytes
 32459 ;; Hardware stack levels used:    1
 32460 ;; Hardware stack levels required when called:   11
 32461 ;; This function calls:
 32462 ;;		_RADIO_RegisterRead
 32463 ;;		_RADIO_RegisterWrite
 32464 ;;		_RADIO_Reset
 32465 ;;		_RADIO_WriteFrequency
 32466 ;;		_RADIO_WriteMode
 32467 ;;		_SwTimerCreate
 32468 ;;		_SwTimerSetCallback
 32469 ;;		_SwTimerStop
 32470 ;; This function is called by:
 32471 ;;		_LORAWAN_Init
 32472 ;;		_LORAWAN_Reset
 32473 ;; This function uses a non-reentrant model
 32474 ;;
 32475                           
 32476                           	psect	text167
 32477  00388A                     __ptext167:
 32478                           	opt stack 0
 32479  00388A                     _RADIO_Init:
 32480                           	opt stack 18
 32481                           
 32482                           ; BSR set to: 0
 32483                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 32484                           
 32485                           ;incstack = 0
 32486  00388A  C07F  F16A         	movff	RADIO_Init@frequency,_RadioConfiguration
 32487  00388E  C080  F16B         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32488  003892  C081  F16C         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32489  003896  C082  F16D         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32490                           
 32491                           ; BSR set to: 0
 32492                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 32493  00389A  0EA8               	movlw	168
 32494  00389C  0101               	movlb	1	; () banked
 32495  00389E  6F6E               	movwf	(_RadioConfiguration+4)& (0+255),b
 32496  0038A0  0E61               	movlw	97
 32497  0038A2  6F6F               	movwf	(_RadioConfiguration+5)& (0+255),b
 32498  0038A4  6B70               	clrf	(_RadioConfiguration+6)& (0+255),b
 32499  0038A6  6B71               	clrf	(_RadioConfiguration+7)& (0+255),b
 32500                           
 32501                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 32502  0038A8  0E50               	movlw	80
 32503  0038AA  6F72               	movwf	(_RadioConfiguration+8)& (0+255),b
 32504  0038AC  0EC3               	movlw	195
 32505  0038AE  6F73               	movwf	(_RadioConfiguration+9)& (0+255),b
 32506  0038B0  6B74               	clrf	(_RadioConfiguration+10)& (0+255),b
 32507  0038B2  6B75               	clrf	(_RadioConfiguration+11)& (0+255),b
 32508                           
 32509                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 32510  0038B4  0E01               	movlw	1
 32511  0038B6  6F82               	movwf	(_RadioConfiguration+24)& (0+255),b
 32512                           
 32513                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 32514  0038B8  0E07               	movlw	7
 32515  0038BA  6F84               	movwf	(_RadioConfiguration+26)& (0+255),b
 32516                           
 32517                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 32518  0038BC  0E01               	movlw	1
 32519  0038BE  6F85               	movwf	(_RadioConfiguration+27)& (0+255),b
 32520                           
 32521                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 32522  0038C0  6F8B               	movwf	(_RadioConfiguration+33)& (0+255),b
 32523                           
 32524                           ; BSR set to: 1
 32525                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 32526  0038C2  6B8C               	clrf	(_RadioConfiguration+34)& (0+255),b
 32527                           
 32528                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 32529  0038C4  6B77               	clrf	(_RadioConfiguration+13)& (0+255),b
 32530  0038C6  0E08               	movlw	8
 32531  0038C8  6F76               	movwf	(_RadioConfiguration+12)& (0+255),b
 32532                           
 32533                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 32534  0038CA  0E0C               	movlw	12
 32535  0038CC  6F83               	movwf	(_RadioConfiguration+25)& (0+255),b
 32536                           
 32537                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 32538  0038CE  0E01               	movlw	1
 32539  0038D0  6F86               	movwf	(_RadioConfiguration+28)& (0+255),b
 32540                           
 32541                           ; BSR set to: 1
 32542                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 32543  0038D2  6B87               	clrf	(_RadioConfiguration+29)& (0+255),b
 32544                           
 32545                           ; BSR set to: 1
 32546                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 32547  0038D4  6B8A               	clrf	(_RadioConfiguration+32)& (0+255),b
 32548                           
 32549                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 32550  0038D6  0EC1               	movlw	193
 32551  0038D8  6F79               	movwf	(_RadioConfiguration+15)& (0+255),b
 32552                           
 32553                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 32554  0038DA  0E94               	movlw	148
 32555  0038DC  6F7A               	movwf	(_RadioConfiguration+16)& (0+255),b
 32556                           
 32557                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 32558  0038DE  0EC1               	movlw	193
 32559  0038E0  6F7B               	movwf	(_RadioConfiguration+17)& (0+255),b
 32560                           
 32561                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 32562  0038E2  0E03               	movlw	3
 32563  0038E4  6F81               	movwf	(_RadioConfiguration+23)& (0+255),b
 32564                           
 32565                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 32566  0038E6  0E34               	movlw	52
 32567  0038E8  6F78               	movwf	(_RadioConfiguration+14)& (0+255),b
 32568                           
 32569                           ; BSR set to: 1
 32570                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 32571  0038EA  6B8D               	clrf	(_RadioConfiguration+35)& (0+255),b
 32572                           
 32573                           ; BSR set to: 1
 32574                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 32575  0038EC  6B8E               	clrf	(_RadioConfiguration+36)& (0+255),b
 32576                           
 32577                           ; BSR set to: 1
 32578                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 32579  0038EE  C07D  F18F         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32580  0038F2  C07E  F190         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32581                           
 32582                           ; BSR set to: 1
 32583                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 32584  0038F6  6B88               	clrf	(_RadioConfiguration+30)& (0+255),b
 32585  0038F8  6B89               	clrf	(_RadioConfiguration+31)& (0+255),b
 32586                           
 32587                           ; BSR set to: 1
 32588                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 32589  0038FA  0E80               	movlw	128
 32590  0038FC  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
 32591                           
 32592                           ; BSR set to: 1
 32593                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32594  0038FE  0E98               	movlw	152
 32595  003900  6F94               	movwf	(_RadioConfiguration+42)& (0+255),b
 32596  003902  0E3A               	movlw	58
 32597  003904  6F95               	movwf	(_RadioConfiguration+43)& (0+255),b
 32598  003906  6B96               	clrf	(_RadioConfiguration+44)& (0+255),b
 32599  003908  6B97               	clrf	(_RadioConfiguration+45)& (0+255),b
 32600                           
 32601                           ; BSR set to: 1
 32602                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32603  00390A  0E02               	movlw	2
 32604  00390C  6F9D               	movwf	(_RadioConfiguration+51)& (0+255),b
 32605                           
 32606                           ; BSR set to: 1
 32607                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32608  00390E  0E0B               	movlw	11
 32609  003910  6F9E               	movwf	(_RadioConfiguration+52)& (0+255),b
 32610                           
 32611                           ; BSR set to: 1
 32612                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32613  003912  0E12               	movlw	18
 32614  003914  6F9F               	movwf	(_RadioConfiguration+53)& (0+255),b
 32615                           
 32616                           ; BSR set to: 1
 32617                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 32618  003916  6B99               	clrf	(_RadioConfiguration+47)& (0+255),b
 32619  003918  6B9A               	clrf	(_RadioConfiguration+48)& (0+255),b
 32620                           
 32621                           ; BSR set to: 1
 32622                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 32623  00391A  5198               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32624  00391C  E123               	bnz	l14766
 32625                           
 32626                           ; BSR set to: 1
 32627                           ;radio_driver_SX1276.c: 457: {
 32628                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32629  00391E  EC34  F031         	call	_SwTimerCreate	;wreg free
 32630  003922  0101               	movlb	1	; () banked
 32631  003924  6F91               	movwf	(_RadioConfiguration+39)& (0+255),b
 32632                           
 32633                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32634  003926  EC34  F031         	call	_SwTimerCreate	;wreg free
 32635  00392A  0101               	movlb	1	; () banked
 32636  00392C  6F92               	movwf	(_RadioConfiguration+40)& (0+255),b
 32637                           
 32638                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32639  00392E  EC34  F031         	call	_SwTimerCreate	;wreg free
 32640  003932  0101               	movlb	1	; () banked
 32641  003934  6F93               	movwf	(_RadioConfiguration+41)& (0+255),b
 32642                           
 32643                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32644  003936  0E78               	movlw	low _RADIO_RxFSKTimeout
 32645  003938  0100               	movlb	0	; () banked
 32646  00393A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32647  00393C  0E6F               	movlw	high _RADIO_RxFSKTimeout
 32648  00393E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32649  003940  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32650  003942  0101               	movlb	1	; () banked
 32651  003944  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32652  003946  EC56  F038         	call	_SwTimerSetCallback
 32653                           
 32654                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32655  00394A  0E66               	movlw	low _RADIO_WatchdogTimeout
 32656  00394C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32657  00394E  0E6C               	movlw	high _RADIO_WatchdogTimeout
 32658  003950  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32659  003952  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32660  003954  0101               	movlb	1	; () banked
 32661  003956  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32662  003958  EC56  F038         	call	_SwTimerSetCallback
 32663                           
 32664                           ; BSR set to: 0
 32665                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 32666  00395C  0E01               	movlw	1
 32667  00395E  0101               	movlb	1	; () banked
 32668  003960  6F98               	movwf	(_RadioConfiguration+46)& (0+255),b
 32669                           
 32670                           ;radio_driver_SX1276.c: 466: }
 32671  003962  D00B               	goto	l14768
 32672  003964                     l14766:
 32673                           
 32674                           ; BSR set to: 1
 32675                           ;radio_driver_SX1276.c: 467: else
 32676                           ;radio_driver_SX1276.c: 468: {
 32677                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32678  003964  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32679  003966  EC9B  F03A         	call	_SwTimerStop
 32680                           
 32681                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32682  00396A  0101               	movlb	1	; () banked
 32683  00396C  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32684  00396E  EC9B  F03A         	call	_SwTimerStop
 32685                           
 32686                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32687  003972  0101               	movlb	1	; () banked
 32688  003974  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32689  003976  EC9B  F03A         	call	_SwTimerStop
 32690  00397A                     l14768:
 32691                           
 32692                           ;radio_driver_SX1276.c: 472: }
 32693                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 32694  00397A  ECF1  F037         	call	_RADIO_Reset	;wreg free
 32695                           
 32696                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32697  00397E  0E00               	movlw	0
 32698  003980  0100               	movlb	0	; () banked
 32699  003982  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32700  003984  0E01               	movlw	1
 32701  003986  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32702  003988  EC6E  F028         	call	_RADIO_WriteMode
 32703                           
 32704                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32705  00398C  C16A  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32706  003990  C16B  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32707  003994  C16C  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32708  003998  C16D  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32709  00399C  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
 32710                           
 32711                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 32712  0039A0  0E42               	movlw	66
 32713  0039A2  0100               	movlb	0	; () banked
 32714  0039A4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32715  0039A6  0E3B               	movlw	59
 32716  0039A8  EC6E  F03A         	call	_RADIO_RegisterWrite
 32717  0039AC                     l14776:
 32718  0039AC  0E3B               	movlw	59
 32719  0039AE  EC97  F039         	call	_RADIO_RegisterRead
 32720  0039B2  6F83               	movwf	??_RADIO_Init& (0+255),b
 32721  0039B4  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 32722  0039B6  D7FA               	goto	l14776
 32723                           
 32724                           ; BSR set to: 0
 32725                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 32726  0039B8  0E23               	movlw	35
 32727  0039BA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32728  0039BC  0E0C               	movlw	12
 32729  0039BE  EC6E  F03A         	call	_RADIO_RegisterWrite
 32730                           
 32731                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 32732  0039C2  0E1E               	movlw	30
 32733  0039C4  0100               	movlb	0	; () banked
 32734  0039C6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32735  0039C8  0E0D               	movlw	13
 32736  0039CA  EC6E  F03A         	call	_RADIO_RegisterWrite
 32737                           
 32738                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 32739  0039CE  0EAA               	movlw	170
 32740  0039D0  0100               	movlb	0	; () banked
 32741  0039D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32742  0039D4  0E1F               	movlw	31
 32743  0039D6  EC6E  F03A         	call	_RADIO_RegisterWrite
 32744                           
 32745                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 32746  0039DA  0E8F               	movlw	143
 32747  0039DC  0100               	movlb	0	; () banked
 32748  0039DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32749  0039E0  0E35               	movlw	53
 32750  0039E2  EC6E  F03A         	call	_RADIO_RegisterWrite
 32751                           
 32752                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 32753  0039E6  0100               	movlb	0	; () banked
 32754  0039E8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32755  0039EA  0E32               	movlw	50
 32756  0039EC  EC6E  F03A         	call	_RADIO_RegisterWrite
 32757                           
 32758                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 32759  0039F0  0E40               	movlw	64
 32760  0039F2  0100               	movlb	0	; () banked
 32761  0039F4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32762  0039F6  0E31               	movlw	49
 32763  0039F8  EC6E  F03A         	call	_RADIO_RegisterWrite
 32764                           
 32765                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32766  0039FC  0E01               	movlw	1
 32767  0039FE  0100               	movlb	0	; () banked
 32768  003A00  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32769  003A02  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32770  003A04  0E00               	movlw	0
 32771  003A06  EC6E  F028         	call	_RADIO_WriteMode
 32772                           
 32773                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 32774  003A0A  0100               	movlb	0	; () banked
 32775  003A0C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32776  003A0E  0E23               	movlw	35
 32777  003A10  EC6E  F03A         	call	_RADIO_RegisterWrite
 32778                           
 32779                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 32780  003A14  0E42               	movlw	66
 32781  003A16  EC97  F039         	call	_RADIO_RegisterRead
 32782  003A1A  0101               	movlb	1	; () banked
 32783  003A1C  6F9B               	movwf	(_RadioConfiguration+49)& (0+255),b
 32784                           
 32785                           ; BSR set to: 1
 32786  003A1E  0012               	return		;funcret
 32787  003A20                     __end_of_RADIO_Init:
 32788                           	opt stack 0
 32789                           tosu	equ	0xFFF
 32790                           tosh	equ	0xFFE
 32791                           tosl	equ	0xFFD
 32792                           pclath	equ	0xFFA
 32793                           tblptru	equ	0xFF8
 32794                           tblptrh	equ	0xFF7
 32795                           tblptrl	equ	0xFF6
 32796                           tablat	equ	0xFF5
 32797                           prodh	equ	0xFF4
 32798                           prodl	equ	0xFF3
 32799                           intcon	equ	0xFF2
 32800                           intcon2	equ	0xFF1
 32801                           intcon3	equ	0xFF0
 32802                           indf0	equ	0xFEF
 32803                           postinc0	equ	0xFEE
 32804                           plusw0	equ	0xFEB
 32805                           fsr0h	equ	0xFEA
 32806                           fsr0l	equ	0xFE9
 32807                           wreg	equ	0xFE8
 32808                           postinc1	equ	0xFE6
 32809                           postdec1	equ	0xFE5
 32810                           plusw1	equ	0xFE3
 32811                           fsr1h	equ	0xFE2
 32812                           fsr1l	equ	0xFE1
 32813                           indf2	equ	0xFDF
 32814                           postinc2	equ	0xFDE
 32815                           postdec2	equ	0xFDD
 32816                           plusw2	equ	0xFDB
 32817                           fsr2h	equ	0xFDA
 32818                           fsr2l	equ	0xFD9
 32819                           status	equ	0xFD8
 32820                           
 32821 ;; *************** function _SwTimerSetCallback *****************
 32822 ;; Defined at:
 32823 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 32824 ;; Parameters:    Size  Location     Type
 32825 ;;  timerId         1    wreg     unsigned char 
 32826 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 32827 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 32828 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 32829 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 32830 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 32831 ;; Auto vars:     Size  Location     Type
 32832 ;;  timerId         1    7[BANK0 ] unsigned char 
 32833 ;; Return value:  Size  Location     Type
 32834 ;;                  1    wreg      void 
 32835 ;; Registers used:
 32836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32837 ;; Tracked objects:
 32838 ;;		On entry : C/2
 32839 ;;		On exit  : F/0
 32840 ;;		Unchanged: 0/0
 32841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32842 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32846 ;;Total ram usage:        4 bytes
 32847 ;; Hardware stack levels used:    1
 32848 ;; Hardware stack levels required when called:    7
 32849 ;; This function calls:
 32850 ;;		Nothing
 32851 ;; This function is called by:
 32852 ;;		_RADIO_Init
 32853 ;;		_SetCallbackSoftwareTimers
 32854 ;; This function uses a non-reentrant model
 32855 ;;
 32856                           
 32857                           	psect	text168
 32858  0070AC                     __ptext168:
 32859                           	opt stack 0
 32860  0070AC                     _SwTimerSetCallback:
 32861                           	opt stack 21
 32862                           
 32863                           ; BSR set to: 1
 32864                           ;incstack = 0
 32865                           ;SwTimerSetCallback@timerId stored from wreg
 32866  0070AC  0100               	movlb	0	; () banked
 32867  0070AE  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 32868                           
 32869                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 32870  0070B0  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32871  0070B2  0D08               	mullw	8
 32872  0070B4  0E06               	movlw	low (_swTimers+6)
 32873  0070B6  24F3               	addwf	prodl,w,c
 32874  0070B8  6ED9               	movwf	fsr2l,c
 32875  0070BA  0E03               	movlw	high (_swTimers+6)
 32876  0070BC  20F4               	addwfc	prodh,w,c
 32877  0070BE  6EDA               	movwf	fsr2h,c
 32878  0070C0  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 32879  0070C4  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 32880                           
 32881                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 32882  0070C8  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32883  0070CA  0D08               	mullw	8
 32884  0070CC  0E05               	movlw	low (_swTimers+5)
 32885  0070CE  24F3               	addwf	prodl,w,c
 32886  0070D0  6ED9               	movwf	fsr2l,c
 32887  0070D2  0E03               	movlw	high (_swTimers+5)
 32888  0070D4  20F4               	addwfc	prodh,w,c
 32889  0070D6  6EDA               	movwf	fsr2h,c
 32890  0070D8  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 32891                           
 32892                           ; BSR set to: 0
 32893  0070DC  0012               	return		;funcret
 32894  0070DE                     __end_of_SwTimerSetCallback:
 32895                           	opt stack 0
 32896                           tosu	equ	0xFFF
 32897                           tosh	equ	0xFFE
 32898                           tosl	equ	0xFFD
 32899                           pclath	equ	0xFFA
 32900                           tblptru	equ	0xFF8
 32901                           tblptrh	equ	0xFF7
 32902                           tblptrl	equ	0xFF6
 32903                           tablat	equ	0xFF5
 32904                           prodh	equ	0xFF4
 32905                           prodl	equ	0xFF3
 32906                           intcon	equ	0xFF2
 32907                           intcon2	equ	0xFF1
 32908                           intcon3	equ	0xFF0
 32909                           indf0	equ	0xFEF
 32910                           postinc0	equ	0xFEE
 32911                           plusw0	equ	0xFEB
 32912                           fsr0h	equ	0xFEA
 32913                           fsr0l	equ	0xFE9
 32914                           wreg	equ	0xFE8
 32915                           postinc1	equ	0xFE6
 32916                           postdec1	equ	0xFE5
 32917                           plusw1	equ	0xFE3
 32918                           fsr1h	equ	0xFE2
 32919                           fsr1l	equ	0xFE1
 32920                           indf2	equ	0xFDF
 32921                           postinc2	equ	0xFDE
 32922                           postdec2	equ	0xFDD
 32923                           plusw2	equ	0xFDB
 32924                           fsr2h	equ	0xFDA
 32925                           fsr2l	equ	0xFD9
 32926                           status	equ	0xFD8
 32927                           
 32928 ;; *************** function _RADIO_WriteMode *****************
 32929 ;; Defined at:
 32930 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32931 ;; Parameters:    Size  Location     Type
 32932 ;;  newMode         1    wreg     enum E8483
 32933 ;;  newModulatio    1    9[BANK0 ] enum E7751
 32934 ;;  blocking        1   10[BANK0 ] unsigned char 
 32935 ;; Auto vars:     Size  Location     Type
 32936 ;;  newMode         1   14[BANK0 ] enum E8483
 32937 ;;  opMode          1   15[BANK0 ] unsigned char 
 32938 ;;  currentMode     1   13[BANK0 ] enum E8483
 32939 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 32940 ;;  currentModul    1   11[BANK0 ] enum E7751
 32941 ;; Return value:  Size  Location     Type
 32942 ;;                  1    wreg      void 
 32943 ;; Registers used:
 32944 ;;		wreg, status,2, status,0, cstack
 32945 ;; Tracked objects:
 32946 ;;		On entry : F/0
 32947 ;;		On exit  : 0/0
 32948 ;;		Unchanged: 0/0
 32949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32950 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32951 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32953 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32954 ;;Total ram usage:        7 bytes
 32955 ;; Hardware stack levels used:    1
 32956 ;; Hardware stack levels required when called:   10
 32957 ;; This function calls:
 32958 ;;		_HALDIO5PinValue
 32959 ;;		_RADIO_RegisterRead
 32960 ;;		_RADIO_RegisterWrite
 32961 ;;		_SystemBlockingWaitMs
 32962 ;; This function is called by:
 32963 ;;		_RADIO_Init
 32964 ;;		_RADIO_WriteConfiguration
 32965 ;;		_RADIO_Transmit
 32966 ;;		_RADIO_ReceiveStart
 32967 ;;		_RADIO_ReceiveStop
 32968 ;;		_RADIO_RxDone
 32969 ;;		_RADIO_FSKPayloadReady
 32970 ;;		_RADIO_RxTimeout
 32971 ;;		_RADIO_TxDone
 32972 ;;		_RADIO_FSKPacketSent
 32973 ;;		_RADIO_ReadRandom
 32974 ;;		_RADIO_RxFSKTimeout
 32975 ;;		_RADIO_WatchdogTimeout
 32976 ;; This function uses a non-reentrant model
 32977 ;;
 32978                           
 32979                           	psect	text169
 32980  0050DC                     __ptext169:
 32981                           	opt stack 0
 32982  0050DC                     _RADIO_WriteMode:
 32983                           	opt stack 17
 32984                           
 32985                           ; BSR set to: 0
 32986                           ;incstack = 0
 32987                           ;RADIO_WriteMode@newMode stored from wreg
 32988  0050DC  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 32989                           
 32990                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 32991                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 32992                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 32993                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 32994                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 32995                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 32996  0050DE  0100               	movlb	0	; () banked
 32997  0050E0  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 32998  0050E2  E108               	bnz	l12174
 32999                           
 33000                           ; BSR set to: 0
 33001  0050E4  0E06               	movlw	6
 33002  0050E6  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33003  0050E8  B4D8               	btfsc	status,2,c
 33004  0050EA  0012               	return	
 33005                           
 33006                           ; BSR set to: 0
 33007  0050EC  0E07               	movlw	7
 33008  0050EE  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33009  0050F0  E101               	bnz	l12174
 33010  0050F2  0012               	return	
 33011  0050F4                     l12174:
 33012                           
 33013                           ; BSR set to: 0
 33014                           ;radio_driver_SX1276.c: 159: }
 33015                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 33016  0050F4  0E07               	movlw	7
 33017  0050F6  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 33018                           
 33019                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 33020  0050F8  0E01               	movlw	1
 33021  0050FA  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 33022                           
 33023                           ; BSR set to: 0
 33024                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 33025  0050FC  EC97  F039         	call	_RADIO_RegisterRead
 33026  005100  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33027                           
 33028                           ; BSR set to: 0
 33029                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 33030  005102  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 33031  005104  D003               	goto	l382
 33032                           
 33033                           ; BSR set to: 0
 33034                           ;radio_driver_SX1276.c: 168: {
 33035                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 33036  005106  0E01               	movlw	1
 33037  005108  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 33038                           
 33039                           ;radio_driver_SX1276.c: 170: }
 33040  00510A  D001               	goto	l12182
 33041  00510C                     l382:
 33042                           
 33043                           ; BSR set to: 0
 33044                           ;radio_driver_SX1276.c: 171: else
 33045                           ;radio_driver_SX1276.c: 172: {
 33046                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 33047  00510C  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 33048  00510E                     l12182:
 33049                           
 33050                           ; BSR set to: 0
 33051                           ;radio_driver_SX1276.c: 174: }
 33052                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 33053  00510E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33054  005110  0B07               	andlw	7
 33055  005112  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 33056                           
 33057                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 33058  005114  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 33059  005116  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 33060  005118  E018               	bz	l12198
 33061                           
 33062                           ; BSR set to: 0
 33063                           ;radio_driver_SX1276.c: 181: {
 33064                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 33065  00511A  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33066  00511C  E008               	bz	l12190
 33067                           
 33068                           ; BSR set to: 0
 33069                           ;radio_driver_SX1276.c: 184: {
 33070                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 33071  00511E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33072  005120  0BF8               	andlw	248
 33073  005122  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33074  005124  0E01               	movlw	1
 33075  005126  EC6E  F03A         	call	_RADIO_RegisterWrite
 33076                           
 33077                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 33078  00512A  0100               	movlb	0	; () banked
 33079  00512C  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 33080  00512E                     l12190:
 33081                           
 33082                           ; BSR set to: 0
 33083                           ;radio_driver_SX1276.c: 188: }
 33084                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 33085  00512E  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33086  005130  E103               	bnz	l12194
 33087                           
 33088                           ; BSR set to: 0
 33089                           ;radio_driver_SX1276.c: 191: {
 33090                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 33091  005132  0E78               	movlw	120
 33092  005134  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33093                           
 33094                           ;radio_driver_SX1276.c: 194: }
 33095  005136  D004               	goto	l12196
 33096  005138                     l12194:
 33097                           
 33098                           ; BSR set to: 0
 33099                           ;radio_driver_SX1276.c: 195: else
 33100                           ;radio_driver_SX1276.c: 196: {
 33101                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 33102  005138  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33103  00513A  0B78               	andlw	120
 33104  00513C  0980               	iorlw	128
 33105  00513E  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33106  005140                     l12196:
 33107                           
 33108                           ; BSR set to: 0
 33109                           ;radio_driver_SX1276.c: 199: }
 33110                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 33111  005140  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33112  005144  0E01               	movlw	1
 33113  005146  EC6E  F03A         	call	_RADIO_RegisterWrite
 33114  00514A                     l12198:
 33115                           
 33116                           ;radio_driver_SX1276.c: 201: }
 33117                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 33118  00514A  0100               	movlb	0	; () banked
 33119  00514C  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33120  00514E  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33121  005150  B4D8               	btfsc	status,2,c
 33122  005152  0012               	return	
 33123                           
 33124                           ; BSR set to: 0
 33125                           ;radio_driver_SX1276.c: 208: {
 33126                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 33127  005154  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33128  005156  E012               	bz	l12214
 33129                           
 33130                           ; BSR set to: 0
 33131  005158  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33132  00515A  E110               	bnz	l12214
 33133                           
 33134                           ; BSR set to: 0
 33135                           ;radio_driver_SX1276.c: 212: {
 33136                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 33137  00515C  0E41               	movlw	65
 33138  00515E  EC97  F039         	call	_RADIO_RegisterRead
 33139  005162  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 33140                           
 33141                           ; BSR set to: 0
 33142                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 33143  005164  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33144  005166  E103               	bnz	l12210
 33145                           
 33146                           ; BSR set to: 0
 33147                           ;radio_driver_SX1276.c: 215: {
 33148                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 33149  005168  0E30               	movlw	48
 33150  00516A  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33151                           
 33152                           ;radio_driver_SX1276.c: 218: }
 33153  00516C  D002               	goto	l12212
 33154  00516E                     l12210:
 33155                           
 33156                           ; BSR set to: 0
 33157                           ;radio_driver_SX1276.c: 219: else
 33158                           ;radio_driver_SX1276.c: 220: {
 33159                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 33160  00516E  0ECF               	movlw	207
 33161  005170  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33162  005172                     l12212:
 33163                           
 33164                           ; BSR set to: 0
 33165                           ;radio_driver_SX1276.c: 223: }
 33166                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 33167  005172  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 33168  005176  0E41               	movlw	65
 33169  005178  EC6E  F03A         	call	_RADIO_RegisterWrite
 33170  00517C                     l12214:
 33171                           
 33172                           ;radio_driver_SX1276.c: 225: }
 33173                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 33174  00517C  0EF8               	movlw	248
 33175  00517E  0100               	movlb	0	; () banked
 33176  005180  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33177                           
 33178                           ; BSR set to: 0
 33179                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 33180  005182  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33181  005184  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 33182                           
 33183                           ; BSR set to: 0
 33184                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 33185  005186  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33186  00518A  0E01               	movlw	1
 33187  00518C  EC6E  F03A         	call	_RADIO_RegisterWrite
 33188                           
 33189                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 33190  005190  0100               	movlb	0	; () banked
 33191  005192  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33192  005194  A4D8               	btfss	status,2,c
 33193  005196  0012               	return	
 33194                           
 33195                           ; BSR set to: 0
 33196                           ;radio_driver_SX1276.c: 234: {
 33197                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 33198  005198  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33199  00519A  E005               	bz	l12226
 33200  00519C                     l12224:
 33201  00519C  EC87  F03C         	call	_HALDIO5PinValue	;wreg free
 33202  0051A0  0900               	iorlw	0
 33203  0051A2  E0FC               	bz	l12224
 33204  0051A4  0012               	return	
 33205  0051A6                     l12226:
 33206                           
 33207                           ; BSR set to: 0
 33208                           ;radio_driver_SX1276.c: 240: else
 33209                           ;radio_driver_SX1276.c: 241: {
 33210                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 33211  0051A6  0E01               	movlw	1
 33212  0051A8  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33213  0051AA  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33214  0051AC  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33215  0051AE  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33216  0051B0  EF0B  F039         	goto	_SystemBlockingWaitMs	;wreg free
 33217  0051B4                     __end_of_RADIO_WriteMode:
 33218                           	opt stack 0
 33219                           tosu	equ	0xFFF
 33220                           tosh	equ	0xFFE
 33221                           tosl	equ	0xFFD
 33222                           pclath	equ	0xFFA
 33223                           tblptru	equ	0xFF8
 33224                           tblptrh	equ	0xFF7
 33225                           tblptrl	equ	0xFF6
 33226                           tablat	equ	0xFF5
 33227                           prodh	equ	0xFF4
 33228                           prodl	equ	0xFF3
 33229                           intcon	equ	0xFF2
 33230                           intcon2	equ	0xFF1
 33231                           intcon3	equ	0xFF0
 33232                           indf0	equ	0xFEF
 33233                           postinc0	equ	0xFEE
 33234                           plusw0	equ	0xFEB
 33235                           fsr0h	equ	0xFEA
 33236                           fsr0l	equ	0xFE9
 33237                           wreg	equ	0xFE8
 33238                           postinc1	equ	0xFE6
 33239                           postdec1	equ	0xFE5
 33240                           plusw1	equ	0xFE3
 33241                           fsr1h	equ	0xFE2
 33242                           fsr1l	equ	0xFE1
 33243                           indf2	equ	0xFDF
 33244                           postinc2	equ	0xFDE
 33245                           postdec2	equ	0xFDD
 33246                           plusw2	equ	0xFDB
 33247                           fsr2h	equ	0xFDA
 33248                           fsr2l	equ	0xFD9
 33249                           status	equ	0xFD8
 33250                           
 33251 ;; *************** function _RADIO_RegisterRead *****************
 33252 ;; Defined at:
 33253 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33254 ;; Parameters:    Size  Location     Type
 33255 ;;  reg             1    wreg     unsigned char 
 33256 ;; Auto vars:     Size  Location     Type
 33257 ;;  reg             1    6[BANK0 ] unsigned char 
 33258 ;;  readValue       1    7[BANK0 ] unsigned char 
 33259 ;; Return value:  Size  Location     Type
 33260 ;;                  1    wreg      unsigned char 
 33261 ;; Registers used:
 33262 ;;		wreg, status,2, status,0, cstack
 33263 ;; Tracked objects:
 33264 ;;		On entry : 0/0
 33265 ;;		On exit  : F/0
 33266 ;;		Unchanged: 0/0
 33267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33269 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33271 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33272 ;;Total ram usage:        2 bytes
 33273 ;; Hardware stack levels used:    1
 33274 ;; Hardware stack levels required when called:    9
 33275 ;; This function calls:
 33276 ;;		_HALSPICSAssert
 33277 ;;		_HALSPICSDeassert
 33278 ;;		_HALSPISend
 33279 ;; This function is called by:
 33280 ;;		_RADIO_WriteMode
 33281 ;;		_RADIO_WritePower
 33282 ;;		_RADIO_Init
 33283 ;;		_RADIO_WriteConfiguration
 33284 ;;		_RADIO_Transmit
 33285 ;;		_RADIO_RxDone
 33286 ;;		_RADIO_FSKPayloadReady
 33287 ;;		_RADIO_FSKPacketSent
 33288 ;;		_RADIO_FHSSChangeChannel
 33289 ;;		_RADIO_DIO0
 33290 ;;		_RADIO_DIO1
 33291 ;;		_RADIO_DIO2
 33292 ;;		_RADIO_DIO3
 33293 ;;		_RADIO_DIO4
 33294 ;;		_RADIO_DIO5
 33295 ;;		_RADIO_ReadRandom
 33296 ;;		_RADIO_RxFSKTimeout
 33297 ;; This function uses a non-reentrant model
 33298 ;;
 33299                           
 33300                           	psect	text170
 33301  00732E                     __ptext170:
 33302                           	opt stack 0
 33303  00732E                     _RADIO_RegisterRead:
 33304                           	opt stack 17
 33305                           
 33306                           ;incstack = 0
 33307                           ;RADIO_RegisterRead@reg stored from wreg
 33308  00732E  0100               	movlb	0	; () banked
 33309  007330  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 33310                           
 33311                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 33312                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 33313  007332  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 33314                           
 33315                           ; BSR set to: 0
 33316                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 33317  007334  ECA5  F03C         	call	_HALSPICSAssert	;wreg free
 33318                           
 33319                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 33320  007338  0100               	movlb	0	; () banked
 33321  00733A  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 33322  00733C  EC4C  F03C         	call	_HALSPISend
 33323                           
 33324                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 33325  007340  0EFF               	movlw	255
 33326  007342  EC4C  F03C         	call	_HALSPISend
 33327  007346  0100               	movlb	0	; () banked
 33328  007348  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 33329                           
 33330                           ; BSR set to: 0
 33331                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 33332  00734A  ECA3  F03C         	call	_HALSPICSDeassert	;wreg free
 33333                           
 33334                           ;radio_driver_SX1276.c: 142: return readValue;
 33335  00734E  0100               	movlb	0	; () banked
 33336  007350  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 33337                           
 33338                           ; BSR set to: 0
 33339  007352  0012               	return		;funcret
 33340  007354                     __end_of_RADIO_RegisterRead:
 33341                           	opt stack 0
 33342                           tosu	equ	0xFFF
 33343                           tosh	equ	0xFFE
 33344                           tosl	equ	0xFFD
 33345                           pclath	equ	0xFFA
 33346                           tblptru	equ	0xFF8
 33347                           tblptrh	equ	0xFF7
 33348                           tblptrl	equ	0xFF6
 33349                           tablat	equ	0xFF5
 33350                           prodh	equ	0xFF4
 33351                           prodl	equ	0xFF3
 33352                           intcon	equ	0xFF2
 33353                           intcon2	equ	0xFF1
 33354                           intcon3	equ	0xFF0
 33355                           indf0	equ	0xFEF
 33356                           postinc0	equ	0xFEE
 33357                           plusw0	equ	0xFEB
 33358                           fsr0h	equ	0xFEA
 33359                           fsr0l	equ	0xFE9
 33360                           wreg	equ	0xFE8
 33361                           postinc1	equ	0xFE6
 33362                           postdec1	equ	0xFE5
 33363                           plusw1	equ	0xFE3
 33364                           fsr1h	equ	0xFE2
 33365                           fsr1l	equ	0xFE1
 33366                           indf2	equ	0xFDF
 33367                           postinc2	equ	0xFDE
 33368                           postdec2	equ	0xFDD
 33369                           plusw2	equ	0xFDB
 33370                           fsr2h	equ	0xFDA
 33371                           fsr2l	equ	0xFD9
 33372                           status	equ	0xFD8
 33373                           
 33374 ;; *************** function _HALDIO5PinValue *****************
 33375 ;; Defined at:
 33376 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33377 ;; Parameters:    Size  Location     Type
 33378 ;;		None
 33379 ;; Auto vars:     Size  Location     Type
 33380 ;;		None
 33381 ;; Return value:  Size  Location     Type
 33382 ;;                  1    wreg      unsigned char 
 33383 ;; Registers used:
 33384 ;;		wreg
 33385 ;; Tracked objects:
 33386 ;;		On entry : 0/0
 33387 ;;		On exit  : 0/0
 33388 ;;		Unchanged: 0/0
 33389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33394 ;;Total ram usage:        0 bytes
 33395 ;; Hardware stack levels used:    1
 33396 ;; Hardware stack levels required when called:    7
 33397 ;; This function calls:
 33398 ;;		Nothing
 33399 ;; This function is called by:
 33400 ;;		_RADIO_WriteMode
 33401 ;; This function uses a non-reentrant model
 33402 ;;
 33403                           
 33404                           	psect	text171
 33405  00790E                     __ptext171:
 33406                           	opt stack 0
 33407  00790E                     _HALDIO5PinValue:
 33408                           	opt stack 19
 33409                           
 33410                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33411                           
 33412                           ; BSR set to: 0
 33413                           ;incstack = 0
 33414  00790E  B081               	btfsc	3969,0,c	;volatile
 33415  007910  0C01               	retlw	1
 33416  007912  0C00               	retlw	0	;funcret
 33417  007914                     __end_of_HALDIO5PinValue:
 33418                           	opt stack 0
 33419                           tosu	equ	0xFFF
 33420                           tosh	equ	0xFFE
 33421                           tosl	equ	0xFFD
 33422                           pclath	equ	0xFFA
 33423                           tblptru	equ	0xFF8
 33424                           tblptrh	equ	0xFF7
 33425                           tblptrl	equ	0xFF6
 33426                           tablat	equ	0xFF5
 33427                           prodh	equ	0xFF4
 33428                           prodl	equ	0xFF3
 33429                           intcon	equ	0xFF2
 33430                           intcon2	equ	0xFF1
 33431                           intcon3	equ	0xFF0
 33432                           indf0	equ	0xFEF
 33433                           postinc0	equ	0xFEE
 33434                           plusw0	equ	0xFEB
 33435                           fsr0h	equ	0xFEA
 33436                           fsr0l	equ	0xFE9
 33437                           wreg	equ	0xFE8
 33438                           postinc1	equ	0xFE6
 33439                           postdec1	equ	0xFE5
 33440                           plusw1	equ	0xFE3
 33441                           fsr1h	equ	0xFE2
 33442                           fsr1l	equ	0xFE1
 33443                           indf2	equ	0xFDF
 33444                           postinc2	equ	0xFDE
 33445                           postdec2	equ	0xFDD
 33446                           plusw2	equ	0xFDB
 33447                           fsr2h	equ	0xFDA
 33448                           fsr2l	equ	0xFD9
 33449                           status	equ	0xFD8
 33450                           
 33451 ;; *************** function _RADIO_WriteFrequency *****************
 33452 ;; Defined at:
 33453 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33454 ;; Parameters:    Size  Location     Type
 33455 ;;  frequency       4   17[BANK0 ] unsigned long 
 33456 ;; Auto vars:     Size  Location     Type
 33457 ;;  num             4   25[BANK0 ] unsigned long 
 33458 ;;  num_mod         4   21[BANK0 ] unsigned long 
 33459 ;; Return value:  Size  Location     Type
 33460 ;;                  1    wreg      void 
 33461 ;; Registers used:
 33462 ;;		wreg, status,2, status,0, cstack
 33463 ;; Tracked objects:
 33464 ;;		On entry : 0/0
 33465 ;;		On exit  : 0/0
 33466 ;;		Unchanged: 0/0
 33467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33468 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33469 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33471 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33472 ;;Total ram usage:       12 bytes
 33473 ;; Hardware stack levels used:    1
 33474 ;; Hardware stack levels required when called:   10
 33475 ;; This function calls:
 33476 ;;		_RADIO_RegisterWrite
 33477 ;;		___lldiv
 33478 ;;		___llmod
 33479 ;; This function is called by:
 33480 ;;		_RADIO_Init
 33481 ;;		_RADIO_WriteConfiguration
 33482 ;;		_RADIO_FHSSChangeChannel
 33483 ;; This function uses a non-reentrant model
 33484 ;;
 33485                           
 33486                           	psect	text172
 33487  005000                     __ptext172:
 33488                           	opt stack 0
 33489  005000                     _RADIO_WriteFrequency:
 33490                           	opt stack 16
 33491                           
 33492                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33493                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33494                           
 33495                           ;incstack = 0
 33496  005000  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33497  005004  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33498  005008  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33499  00500C  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33500  005010  0E09               	movlw	9
 33501  005012  0100               	movlb	0	; () banked
 33502  005014  6F68               	movwf	___lldiv@divisor& (0+255),b
 33503  005016  0E3D               	movlw	61
 33504  005018  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33505  00501A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33506  00501C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33507  00501E  EC1A  F030         	call	___lldiv	;wreg free
 33508  005022  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 33509  005026  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33510  00502A  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33511  00502E  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33512                           
 33513                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33514  005032  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33515  005036  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33516  00503A  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33517  00503E  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33518  005042  0E09               	movlw	9
 33519  005044  6F68               	movwf	___llmod@divisor& (0+255),b
 33520  005046  0E3D               	movlw	61
 33521  005048  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 33522  00504A  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 33523  00504C  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 33524  00504E  ECFB  F032         	call	___llmod	;wreg free
 33525  005052  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33526  005056  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33527  00505A  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33528  00505E  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33529                           
 33530                           ; BSR set to: 0
 33531                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33532  005062  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33533  005066  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33534  00506A  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33535  00506E  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33536                           
 33537                           ; BSR set to: 0
 33538                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33539  005070  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33540  005074  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33541  005078  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33542  00507C  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33543                           
 33544                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33545  00507E  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33546  005082  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33547  005086  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33548  00508A  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33549  00508E  0E09               	movlw	9
 33550  005090  6F68               	movwf	___lldiv@divisor& (0+255),b
 33551  005092  0E3D               	movlw	61
 33552  005094  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33553  005096  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33554  005098  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33555  00509A  EC1A  F030         	call	___lldiv	;wreg free
 33556  00509E  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33557  0050A2  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33558  0050A6  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33559  0050AA  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33560                           
 33561                           ; BSR set to: 0
 33562                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33563  0050AE  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33564  0050B0  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33565  0050B2  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33566  0050B4  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33567  0050B6  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33568  0050B8  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33569  0050BA  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33570  0050BC  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33571                           
 33572                           ; BSR set to: 0
 33573                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33574  0050BE  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33575  0050C2  0E06               	movlw	6
 33576  0050C4  EC6E  F03A         	call	_RADIO_RegisterWrite
 33577                           
 33578                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33579  0050C8  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33580  0050CC  0E07               	movlw	7
 33581  0050CE  EC6E  F03A         	call	_RADIO_RegisterWrite
 33582                           
 33583                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33584  0050D2  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33585  0050D6  0E08               	movlw	8
 33586  0050D8  EF6E  F03A         	goto	_RADIO_RegisterWrite
 33587  0050DC                     __end_of_RADIO_WriteFrequency:
 33588                           	opt stack 0
 33589                           tosu	equ	0xFFF
 33590                           tosh	equ	0xFFE
 33591                           tosl	equ	0xFFD
 33592                           pclath	equ	0xFFA
 33593                           tblptru	equ	0xFF8
 33594                           tblptrh	equ	0xFF7
 33595                           tblptrl	equ	0xFF6
 33596                           tablat	equ	0xFF5
 33597                           prodh	equ	0xFF4
 33598                           prodl	equ	0xFF3
 33599                           intcon	equ	0xFF2
 33600                           intcon2	equ	0xFF1
 33601                           intcon3	equ	0xFF0
 33602                           indf0	equ	0xFEF
 33603                           postinc0	equ	0xFEE
 33604                           plusw0	equ	0xFEB
 33605                           fsr0h	equ	0xFEA
 33606                           fsr0l	equ	0xFE9
 33607                           wreg	equ	0xFE8
 33608                           postinc1	equ	0xFE6
 33609                           postdec1	equ	0xFE5
 33610                           plusw1	equ	0xFE3
 33611                           fsr1h	equ	0xFE2
 33612                           fsr1l	equ	0xFE1
 33613                           indf2	equ	0xFDF
 33614                           postinc2	equ	0xFDE
 33615                           postdec2	equ	0xFDD
 33616                           plusw2	equ	0xFDB
 33617                           fsr2h	equ	0xFDA
 33618                           fsr2l	equ	0xFD9
 33619                           status	equ	0xFD8
 33620                           
 33621 ;; *************** function ___llmod *****************
 33622 ;; Defined at:
 33623 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 33624 ;; Parameters:    Size  Location     Type
 33625 ;;  dividend        4    4[BANK0 ] unsigned long 
 33626 ;;  divisor         4    8[BANK0 ] unsigned long 
 33627 ;; Auto vars:     Size  Location     Type
 33628 ;;  counter         1   12[BANK0 ] unsigned char 
 33629 ;; Return value:  Size  Location     Type
 33630 ;;                  4    4[BANK0 ] unsigned long 
 33631 ;; Registers used:
 33632 ;;		wreg, status,2, status,0
 33633 ;; Tracked objects:
 33634 ;;		On entry : F/0
 33635 ;;		On exit  : F/0
 33636 ;;		Unchanged: 0/0
 33637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33638 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33639 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33641 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33642 ;;Total ram usage:        9 bytes
 33643 ;; Hardware stack levels used:    1
 33644 ;; Hardware stack levels required when called:    7
 33645 ;; This function calls:
 33646 ;;		Nothing
 33647 ;; This function is called by:
 33648 ;;		_RADIO_WriteFrequency
 33649 ;; This function uses a non-reentrant model
 33650 ;;
 33651                           
 33652                           	psect	text173
 33653  0065F6                     __ptext173:
 33654                           	opt stack 0
 33655  0065F6                     ___llmod:
 33656                           	opt stack 18
 33657                           
 33658                           ; BSR set to: 0
 33659                           
 33660                           ;incstack = 0
 33661  0065F6  5168               	movf	___llmod@divisor& (0+255),w,b
 33662  0065F8  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 33663  0065FA  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 33664  0065FC  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 33665  0065FE  E023               	bz	l3114
 33666                           
 33667                           ; BSR set to: 0
 33668  006600  0E01               	movlw	1
 33669  006602  6F6C               	movwf	___llmod@counter& (0+255),b
 33670  006604  D006               	goto	l12126
 33671  006606                     l12124:
 33672                           
 33673                           ; BSR set to: 0
 33674  006606  90D8               	bcf	status,0,c
 33675  006608  3768               	rlcf	___llmod@divisor& (0+255),f,b
 33676  00660A  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 33677  00660C  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 33678  00660E  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 33679  006610  2B6C               	incf	___llmod@counter& (0+255),f,b
 33680  006612                     l12126:
 33681                           
 33682                           ; BSR set to: 0
 33683  006612  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 33684  006614  D7F8               	goto	l12124
 33685  006616                     l12128:
 33686                           
 33687                           ; BSR set to: 0
 33688  006616  5168               	movf	___llmod@divisor& (0+255),w,b
 33689  006618  5D64               	subwf	___llmod@dividend& (0+255),w,b
 33690  00661A  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33691  00661C  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 33692  00661E  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33693  006620  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 33694  006622  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33695  006624  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 33696  006626  E308               	bnc	l12132
 33697                           
 33698                           ; BSR set to: 0
 33699  006628  5168               	movf	___llmod@divisor& (0+255),w,b
 33700  00662A  5F64               	subwf	___llmod@dividend& (0+255),f,b
 33701  00662C  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33702  00662E  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 33703  006630  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33704  006632  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 33705  006634  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33706  006636  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 33707  006638                     l12132:
 33708                           
 33709                           ; BSR set to: 0
 33710  006638  90D8               	bcf	status,0,c
 33711  00663A  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 33712  00663C  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 33713  00663E  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 33714  006640  3368               	rrcf	___llmod@divisor& (0+255),f,b
 33715                           
 33716                           ; BSR set to: 0
 33717  006642  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 33718  006644  D7E8               	goto	l12128
 33719  006646                     l3114:
 33720                           
 33721                           ; BSR set to: 0
 33722  006646  C064  F064         	movff	___llmod@dividend,?___llmod
 33723  00664A  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 33724  00664E  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 33725  006652  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 33726                           
 33727                           ; BSR set to: 0
 33728  006656  0012               	return		;funcret
 33729  006658                     __end_of___llmod:
 33730                           	opt stack 0
 33731                           tosu	equ	0xFFF
 33732                           tosh	equ	0xFFE
 33733                           tosl	equ	0xFFD
 33734                           pclath	equ	0xFFA
 33735                           tblptru	equ	0xFF8
 33736                           tblptrh	equ	0xFF7
 33737                           tblptrl	equ	0xFF6
 33738                           tablat	equ	0xFF5
 33739                           prodh	equ	0xFF4
 33740                           prodl	equ	0xFF3
 33741                           intcon	equ	0xFF2
 33742                           intcon2	equ	0xFF1
 33743                           intcon3	equ	0xFF0
 33744                           indf0	equ	0xFEF
 33745                           postinc0	equ	0xFEE
 33746                           plusw0	equ	0xFEB
 33747                           fsr0h	equ	0xFEA
 33748                           fsr0l	equ	0xFE9
 33749                           wreg	equ	0xFE8
 33750                           postinc1	equ	0xFE6
 33751                           postdec1	equ	0xFE5
 33752                           plusw1	equ	0xFE3
 33753                           fsr1h	equ	0xFE2
 33754                           fsr1l	equ	0xFE1
 33755                           indf2	equ	0xFDF
 33756                           postinc2	equ	0xFDE
 33757                           postdec2	equ	0xFDD
 33758                           plusw2	equ	0xFDB
 33759                           fsr2h	equ	0xFDA
 33760                           fsr2l	equ	0xFD9
 33761                           status	equ	0xFD8
 33762                           
 33763 ;; *************** function _RADIO_RegisterWrite *****************
 33764 ;; Defined at:
 33765 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33766 ;; Parameters:    Size  Location     Type
 33767 ;;  reg             1    wreg     unsigned char 
 33768 ;;  value           1    6[BANK0 ] unsigned char 
 33769 ;; Auto vars:     Size  Location     Type
 33770 ;;  reg             1    7[BANK0 ] unsigned char 
 33771 ;; Return value:  Size  Location     Type
 33772 ;;                  1    wreg      void 
 33773 ;; Registers used:
 33774 ;;		wreg, status,2, status,0, cstack
 33775 ;; Tracked objects:
 33776 ;;		On entry : 0/0
 33777 ;;		On exit  : 0/0
 33778 ;;		Unchanged: 0/0
 33779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33780 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33784 ;;Total ram usage:        2 bytes
 33785 ;; Hardware stack levels used:    1
 33786 ;; Hardware stack levels required when called:    9
 33787 ;; This function calls:
 33788 ;;		_HALSPICSAssert
 33789 ;;		_HALSPICSDeassert
 33790 ;;		_HALSPISend
 33791 ;; This function is called by:
 33792 ;;		_RADIO_WriteMode
 33793 ;;		_RADIO_WriteFrequency
 33794 ;;		_RADIO_WriteFSKFrequencyDeviation
 33795 ;;		_RADIO_WriteFSKBitRate
 33796 ;;		_RADIO_WritePower
 33797 ;;		_RADIO_Init
 33798 ;;		_RADIO_WriteConfiguration
 33799 ;;		_RADIO_Transmit
 33800 ;;		_RADIO_ReceiveStart
 33801 ;;		_RADIO_RxDone
 33802 ;;		_RADIO_RxTimeout
 33803 ;;		_RADIO_TxDone
 33804 ;;		_RADIO_UnhandledInterrupt
 33805 ;;		_RADIO_FHSSChangeChannel
 33806 ;;		_RADIO_ReadRandom
 33807 ;; This function uses a non-reentrant model
 33808 ;;
 33809                           
 33810                           	psect	text174
 33811  0074DC                     __ptext174:
 33812                           	opt stack 0
 33813  0074DC                     _RADIO_RegisterWrite:
 33814                           	opt stack 17
 33815                           
 33816                           ; BSR set to: 0
 33817                           ;incstack = 0
 33818                           ;RADIO_RegisterWrite@reg stored from wreg
 33819  0074DC  0100               	movlb	0	; () banked
 33820  0074DE  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 33821                           
 33822                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 33823  0074E0  ECA5  F03C         	call	_HALSPICSAssert	;wreg free
 33824                           
 33825                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 33826  0074E4  0100               	movlb	0	; () banked
 33827  0074E6  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 33828  0074E8  0980               	iorlw	128
 33829  0074EA  EC4C  F03C         	call	_HALSPISend
 33830                           
 33831                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 33832  0074EE  0100               	movlb	0	; () banked
 33833  0074F0  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 33834  0074F2  EC4C  F03C         	call	_HALSPISend
 33835                           
 33836                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 33837  0074F6  EFA3  F03C         	goto	_HALSPICSDeassert	;wreg free
 33838  0074FA                     __end_of_RADIO_RegisterWrite:
 33839                           	opt stack 0
 33840                           tosu	equ	0xFFF
 33841                           tosh	equ	0xFFE
 33842                           tosl	equ	0xFFD
 33843                           pclath	equ	0xFFA
 33844                           tblptru	equ	0xFF8
 33845                           tblptrh	equ	0xFF7
 33846                           tblptrl	equ	0xFF6
 33847                           tablat	equ	0xFF5
 33848                           prodh	equ	0xFF4
 33849                           prodl	equ	0xFF3
 33850                           intcon	equ	0xFF2
 33851                           intcon2	equ	0xFF1
 33852                           intcon3	equ	0xFF0
 33853                           indf0	equ	0xFEF
 33854                           postinc0	equ	0xFEE
 33855                           plusw0	equ	0xFEB
 33856                           fsr0h	equ	0xFEA
 33857                           fsr0l	equ	0xFE9
 33858                           wreg	equ	0xFE8
 33859                           postinc1	equ	0xFE6
 33860                           postdec1	equ	0xFE5
 33861                           plusw1	equ	0xFE3
 33862                           fsr1h	equ	0xFE2
 33863                           fsr1l	equ	0xFE1
 33864                           indf2	equ	0xFDF
 33865                           postinc2	equ	0xFDE
 33866                           postdec2	equ	0xFDD
 33867                           plusw2	equ	0xFDB
 33868                           fsr2h	equ	0xFDA
 33869                           fsr2l	equ	0xFD9
 33870                           status	equ	0xFD8
 33871                           
 33872 ;; *************** function _HALSPISend *****************
 33873 ;; Defined at:
 33874 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33875 ;; Parameters:    Size  Location     Type
 33876 ;;  data            1    wreg     unsigned char 
 33877 ;; Auto vars:     Size  Location     Type
 33878 ;;  data            1    5[BANK0 ] unsigned char 
 33879 ;; Return value:  Size  Location     Type
 33880 ;;                  1    wreg      unsigned char 
 33881 ;; Registers used:
 33882 ;;		wreg, status,2, cstack
 33883 ;; Tracked objects:
 33884 ;;		On entry : 0/1
 33885 ;;		On exit  : 0/0
 33886 ;;		Unchanged: 0/0
 33887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33891 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33892 ;;Total ram usage:        1 bytes
 33893 ;; Hardware stack levels used:    1
 33894 ;; Hardware stack levels required when called:    8
 33895 ;; This function calls:
 33896 ;;		_SPI2_Exchange8bit
 33897 ;; This function is called by:
 33898 ;;		_RADIO_RegisterWrite
 33899 ;;		_RADIO_RegisterRead
 33900 ;;		_RADIO_Transmit
 33901 ;;		_RADIO_RxDone
 33902 ;;		_RADIO_FSKPayloadReady
 33903 ;; This function uses a non-reentrant model
 33904 ;;
 33905                           
 33906                           	psect	text175
 33907  007898                     __ptext175:
 33908                           	opt stack 0
 33909  007898                     _HALSPISend:
 33910                           	opt stack 17
 33911                           
 33912                           ;incstack = 0
 33913                           ;HALSPISend@data stored from wreg
 33914  007898  0100               	movlb	0	; () banked
 33915  00789A  6F65               	movwf	HALSPISend@data& (0+255),b
 33916                           
 33917                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 33918  00789C  5165               	movf	HALSPISend@data& (0+255),w,b
 33919  00789E  EFBD  F03B         	goto	_SPI2_Exchange8bit
 33920  0078A2                     __end_of_HALSPISend:
 33921                           	opt stack 0
 33922                           tosu	equ	0xFFF
 33923                           tosh	equ	0xFFE
 33924                           tosl	equ	0xFFD
 33925                           pclath	equ	0xFFA
 33926                           tblptru	equ	0xFF8
 33927                           tblptrh	equ	0xFF7
 33928                           tblptrl	equ	0xFF6
 33929                           tablat	equ	0xFF5
 33930                           prodh	equ	0xFF4
 33931                           prodl	equ	0xFF3
 33932                           intcon	equ	0xFF2
 33933                           intcon2	equ	0xFF1
 33934                           intcon3	equ	0xFF0
 33935                           indf0	equ	0xFEF
 33936                           postinc0	equ	0xFEE
 33937                           plusw0	equ	0xFEB
 33938                           fsr0h	equ	0xFEA
 33939                           fsr0l	equ	0xFE9
 33940                           wreg	equ	0xFE8
 33941                           postinc1	equ	0xFE6
 33942                           postdec1	equ	0xFE5
 33943                           plusw1	equ	0xFE3
 33944                           fsr1h	equ	0xFE2
 33945                           fsr1l	equ	0xFE1
 33946                           indf2	equ	0xFDF
 33947                           postinc2	equ	0xFDE
 33948                           postdec2	equ	0xFDD
 33949                           plusw2	equ	0xFDB
 33950                           fsr2h	equ	0xFDA
 33951                           fsr2l	equ	0xFD9
 33952                           status	equ	0xFD8
 33953                           
 33954 ;; *************** function _SPI2_Exchange8bit *****************
 33955 ;; Defined at:
 33956 ;;		line 77 in file "mcc_generated_files/spi2.c"
 33957 ;; Parameters:    Size  Location     Type
 33958 ;;  data            1    wreg     unsigned char 
 33959 ;; Auto vars:     Size  Location     Type
 33960 ;;  data            1    4[BANK0 ] unsigned char 
 33961 ;; Return value:  Size  Location     Type
 33962 ;;                  1    wreg      unsigned char 
 33963 ;; Registers used:
 33964 ;;		wreg, status,2
 33965 ;; Tracked objects:
 33966 ;;		On entry : F/0
 33967 ;;		On exit  : 0/0
 33968 ;;		Unchanged: 0/0
 33969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33971 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33974 ;;Total ram usage:        1 bytes
 33975 ;; Hardware stack levels used:    1
 33976 ;; Hardware stack levels required when called:    7
 33977 ;; This function calls:
 33978 ;;		Nothing
 33979 ;; This function is called by:
 33980 ;;		_HALSPISend
 33981 ;; This function uses a non-reentrant model
 33982 ;;
 33983                           
 33984                           	psect	text176
 33985  00777A                     __ptext176:
 33986                           	opt stack 0
 33987  00777A                     _SPI2_Exchange8bit:
 33988                           	opt stack 17
 33989                           
 33990                           ;incstack = 0
 33991                           ;SPI2_Exchange8bit@data stored from wreg
 33992  00777A  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 33993                           
 33994                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 33995  00777C  9E6C               	bcf	3948,7,c	;volatile
 33996                           
 33997                           ;spi2.c: 82: SSP2BUF = data;
 33998  00777E  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 33999  007782                     l192:
 34000  007782  A06D               	btfss	3949,0,c	;volatile
 34001  007784  D7FE               	goto	l192
 34002                           
 34003                           ;spi2.c: 86: }
 34004                           ;spi2.c: 88: return (SSP2BUF);
 34005  007786  506F               	movf	3951,w,c	;volatile
 34006  007788  0012               	return		;funcret
 34007  00778A                     __end_of_SPI2_Exchange8bit:
 34008                           	opt stack 0
 34009                           tosu	equ	0xFFF
 34010                           tosh	equ	0xFFE
 34011                           tosl	equ	0xFFD
 34012                           pclath	equ	0xFFA
 34013                           tblptru	equ	0xFF8
 34014                           tblptrh	equ	0xFF7
 34015                           tblptrl	equ	0xFF6
 34016                           tablat	equ	0xFF5
 34017                           prodh	equ	0xFF4
 34018                           prodl	equ	0xFF3
 34019                           intcon	equ	0xFF2
 34020                           intcon2	equ	0xFF1
 34021                           intcon3	equ	0xFF0
 34022                           indf0	equ	0xFEF
 34023                           postinc0	equ	0xFEE
 34024                           plusw0	equ	0xFEB
 34025                           fsr0h	equ	0xFEA
 34026                           fsr0l	equ	0xFE9
 34027                           wreg	equ	0xFE8
 34028                           postinc1	equ	0xFE6
 34029                           postdec1	equ	0xFE5
 34030                           plusw1	equ	0xFE3
 34031                           fsr1h	equ	0xFE2
 34032                           fsr1l	equ	0xFE1
 34033                           indf2	equ	0xFDF
 34034                           postinc2	equ	0xFDE
 34035                           postdec2	equ	0xFDD
 34036                           plusw2	equ	0xFDB
 34037                           fsr2h	equ	0xFDA
 34038                           fsr2l	equ	0xFD9
 34039                           status	equ	0xFD8
 34040                           
 34041 ;; *************** function _HALSPICSDeassert *****************
 34042 ;; Defined at:
 34043 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34044 ;; Parameters:    Size  Location     Type
 34045 ;;		None
 34046 ;; Auto vars:     Size  Location     Type
 34047 ;;		None
 34048 ;; Return value:  Size  Location     Type
 34049 ;;                  1    wreg      void 
 34050 ;; Registers used:
 34051 ;;		None
 34052 ;; Tracked objects:
 34053 ;;		On entry : 0/0
 34054 ;;		On exit  : 0/0
 34055 ;;		Unchanged: 0/0
 34056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34061 ;;Total ram usage:        0 bytes
 34062 ;; Hardware stack levels used:    1
 34063 ;; Hardware stack levels required when called:    7
 34064 ;; This function calls:
 34065 ;;		Nothing
 34066 ;; This function is called by:
 34067 ;;		_RADIO_RegisterWrite
 34068 ;;		_RADIO_RegisterRead
 34069 ;;		_RADIO_Transmit
 34070 ;;		_RADIO_RxDone
 34071 ;;		_RADIO_FSKPayloadReady
 34072 ;; This function uses a non-reentrant model
 34073 ;;
 34074                           
 34075                           	psect	text177
 34076  007946                     __ptext177:
 34077                           	opt stack 0
 34078  007946                     _HALSPICSDeassert:
 34079                           	opt stack 18
 34080                           
 34081                           ;incstack = 0
 34082                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 34083  007946  868C               	bsf	3980,3,c	;volatile
 34084  007948  0012               	return		;funcret
 34085  00794A                     __end_of_HALSPICSDeassert:
 34086                           	opt stack 0
 34087                           tosu	equ	0xFFF
 34088                           tosh	equ	0xFFE
 34089                           tosl	equ	0xFFD
 34090                           pclath	equ	0xFFA
 34091                           tblptru	equ	0xFF8
 34092                           tblptrh	equ	0xFF7
 34093                           tblptrl	equ	0xFF6
 34094                           tablat	equ	0xFF5
 34095                           prodh	equ	0xFF4
 34096                           prodl	equ	0xFF3
 34097                           intcon	equ	0xFF2
 34098                           intcon2	equ	0xFF1
 34099                           intcon3	equ	0xFF0
 34100                           indf0	equ	0xFEF
 34101                           postinc0	equ	0xFEE
 34102                           plusw0	equ	0xFEB
 34103                           fsr0h	equ	0xFEA
 34104                           fsr0l	equ	0xFE9
 34105                           wreg	equ	0xFE8
 34106                           postinc1	equ	0xFE6
 34107                           postdec1	equ	0xFE5
 34108                           plusw1	equ	0xFE3
 34109                           fsr1h	equ	0xFE2
 34110                           fsr1l	equ	0xFE1
 34111                           indf2	equ	0xFDF
 34112                           postinc2	equ	0xFDE
 34113                           postdec2	equ	0xFDD
 34114                           plusw2	equ	0xFDB
 34115                           fsr2h	equ	0xFDA
 34116                           fsr2l	equ	0xFD9
 34117                           status	equ	0xFD8
 34118                           
 34119 ;; *************** function _HALSPICSAssert *****************
 34120 ;; Defined at:
 34121 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34122 ;; Parameters:    Size  Location     Type
 34123 ;;		None
 34124 ;; Auto vars:     Size  Location     Type
 34125 ;;		None
 34126 ;; Return value:  Size  Location     Type
 34127 ;;                  1    wreg      void 
 34128 ;; Registers used:
 34129 ;;		None
 34130 ;; Tracked objects:
 34131 ;;		On entry : 0/1
 34132 ;;		On exit  : 0/0
 34133 ;;		Unchanged: 0/0
 34134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34139 ;;Total ram usage:        0 bytes
 34140 ;; Hardware stack levels used:    1
 34141 ;; Hardware stack levels required when called:    7
 34142 ;; This function calls:
 34143 ;;		Nothing
 34144 ;; This function is called by:
 34145 ;;		_RADIO_RegisterWrite
 34146 ;;		_RADIO_RegisterRead
 34147 ;;		_RADIO_Transmit
 34148 ;;		_RADIO_RxDone
 34149 ;;		_RADIO_FSKPayloadReady
 34150 ;; This function uses a non-reentrant model
 34151 ;;
 34152                           
 34153                           	psect	text178
 34154  00794A                     __ptext178:
 34155                           	opt stack 0
 34156  00794A                     _HALSPICSAssert:
 34157                           	opt stack 18
 34158                           
 34159                           ;incstack = 0
 34160                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 34161  00794A  968C               	bcf	3980,3,c	;volatile
 34162  00794C  0012               	return		;funcret
 34163  00794E                     __end_of_HALSPICSAssert:
 34164                           	opt stack 0
 34165                           tosu	equ	0xFFF
 34166                           tosh	equ	0xFFE
 34167                           tosl	equ	0xFFD
 34168                           pclath	equ	0xFFA
 34169                           tblptru	equ	0xFF8
 34170                           tblptrh	equ	0xFF7
 34171                           tblptrl	equ	0xFF6
 34172                           tablat	equ	0xFF5
 34173                           prodh	equ	0xFF4
 34174                           prodl	equ	0xFF3
 34175                           intcon	equ	0xFF2
 34176                           intcon2	equ	0xFF1
 34177                           intcon3	equ	0xFF0
 34178                           indf0	equ	0xFEF
 34179                           postinc0	equ	0xFEE
 34180                           plusw0	equ	0xFEB
 34181                           fsr0h	equ	0xFEA
 34182                           fsr0l	equ	0xFE9
 34183                           wreg	equ	0xFE8
 34184                           postinc1	equ	0xFE6
 34185                           postdec1	equ	0xFE5
 34186                           plusw1	equ	0xFE3
 34187                           fsr1h	equ	0xFE2
 34188                           fsr1l	equ	0xFE1
 34189                           indf2	equ	0xFDF
 34190                           postinc2	equ	0xFDE
 34191                           postdec2	equ	0xFDD
 34192                           plusw2	equ	0xFDB
 34193                           fsr2h	equ	0xFDA
 34194                           fsr2l	equ	0xFD9
 34195                           status	equ	0xFD8
 34196                           
 34197 ;; *************** function _RADIO_Reset *****************
 34198 ;; Defined at:
 34199 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34200 ;; Parameters:    Size  Location     Type
 34201 ;;		None
 34202 ;; Auto vars:     Size  Location     Type
 34203 ;;		None
 34204 ;; Return value:  Size  Location     Type
 34205 ;;                  1    wreg      void 
 34206 ;; Registers used:
 34207 ;;		wreg, status,2, status,0, cstack
 34208 ;; Tracked objects:
 34209 ;;		On entry : E/1
 34210 ;;		On exit  : E/0
 34211 ;;		Unchanged: 0/0
 34212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34217 ;;Total ram usage:        0 bytes
 34218 ;; Hardware stack levels used:    1
 34219 ;; Hardware stack levels required when called:    8
 34220 ;; This function calls:
 34221 ;;		_HALResetPinMakeInput
 34222 ;;		_HALResetPinMakeOutput
 34223 ;;		_HALResetPinOutputValue
 34224 ;;		_SystemBlockingWaitMs
 34225 ;; This function is called by:
 34226 ;;		_RADIO_Init
 34227 ;; This function uses a non-reentrant model
 34228 ;;
 34229                           
 34230                           	psect	text179
 34231  006FE2                     __ptext179:
 34232                           	opt stack 0
 34233  006FE2                     _RADIO_Reset:
 34234                           	opt stack 20
 34235                           
 34236                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 34237                           
 34238                           ;incstack = 0
 34239  006FE2  ECA7  F03C         	call	_HALResetPinMakeOutput	;wreg free
 34240                           
 34241                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 34242  006FE6  0E00               	movlw	0
 34243  006FE8  EC97  F03B         	call	_HALResetPinOutputValue
 34244                           
 34245                           ; BSR set to: 0
 34246                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 34247  006FEC  0E01               	movlw	1
 34248  006FEE  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34249  006FF0  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34250  006FF2  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34251  006FF4  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34252  006FF6  EC0B  F039         	call	_SystemBlockingWaitMs	;wreg free
 34253                           
 34254                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 34255  006FFA  ECA9  F03C         	call	_HALResetPinMakeInput	;wreg free
 34256                           
 34257                           ; BSR set to: 0
 34258                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 34259  006FFE  0E0A               	movlw	10
 34260  007000  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34261  007002  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34262  007004  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34263  007006  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34264  007008  EC0B  F039         	call	_SystemBlockingWaitMs	;wreg free
 34265                           
 34266                           ; BSR set to: 0
 34267                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 34268  00700C  0E01               	movlw	1
 34269  00700E  EC97  F03B         	call	_HALResetPinOutputValue
 34270                           
 34271                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 34272  007012  EFA7  F03C         	goto	_HALResetPinMakeOutput	;wreg free
 34273  007016                     __end_of_RADIO_Reset:
 34274                           	opt stack 0
 34275                           tosu	equ	0xFFF
 34276                           tosh	equ	0xFFE
 34277                           tosl	equ	0xFFD
 34278                           pclath	equ	0xFFA
 34279                           tblptru	equ	0xFF8
 34280                           tblptrh	equ	0xFF7
 34281                           tblptrl	equ	0xFF6
 34282                           tablat	equ	0xFF5
 34283                           prodh	equ	0xFF4
 34284                           prodl	equ	0xFF3
 34285                           intcon	equ	0xFF2
 34286                           intcon2	equ	0xFF1
 34287                           intcon3	equ	0xFF0
 34288                           indf0	equ	0xFEF
 34289                           postinc0	equ	0xFEE
 34290                           plusw0	equ	0xFEB
 34291                           fsr0h	equ	0xFEA
 34292                           fsr0l	equ	0xFE9
 34293                           wreg	equ	0xFE8
 34294                           postinc1	equ	0xFE6
 34295                           postdec1	equ	0xFE5
 34296                           plusw1	equ	0xFE3
 34297                           fsr1h	equ	0xFE2
 34298                           fsr1l	equ	0xFE1
 34299                           indf2	equ	0xFDF
 34300                           postinc2	equ	0xFDE
 34301                           postdec2	equ	0xFDD
 34302                           plusw2	equ	0xFDB
 34303                           fsr2h	equ	0xFDA
 34304                           fsr2l	equ	0xFD9
 34305                           status	equ	0xFD8
 34306                           
 34307 ;; *************** function _SystemBlockingWaitMs *****************
 34308 ;; Defined at:
 34309 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34310 ;; Parameters:    Size  Location     Type
 34311 ;;  ms              4    4[BANK0 ] unsigned long 
 34312 ;; Auto vars:     Size  Location     Type
 34313 ;;		None
 34314 ;; Return value:  Size  Location     Type
 34315 ;;                  1    wreg      void 
 34316 ;; Registers used:
 34317 ;;		wreg, status,2, status,0
 34318 ;; Tracked objects:
 34319 ;;		On entry : F/0
 34320 ;;		On exit  : F/0
 34321 ;;		Unchanged: 0/0
 34322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34323 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34326 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34327 ;;Total ram usage:        5 bytes
 34328 ;; Hardware stack levels used:    1
 34329 ;; Hardware stack levels required when called:    7
 34330 ;; This function calls:
 34331 ;;		Nothing
 34332 ;; This function is called by:
 34333 ;;		_RADIO_WriteMode
 34334 ;;		_RADIO_Reset
 34335 ;;		_RADIO_ReadRandom
 34336 ;; This function uses a non-reentrant model
 34337 ;;
 34338                           
 34339                           	psect	text180
 34340  007216                     __ptext180:
 34341                           	opt stack 0
 34342  007216                     _SystemBlockingWaitMs:
 34343                           	opt stack 19
 34344                           
 34345                           ; BSR set to: 0
 34346                           ;sw_timer.c: 147: while (ms > 0)
 34347                           
 34348                           ;incstack = 0
 34349  007216  D00E               	goto	l11970
 34350  007218                     l11966:
 34351                           
 34352                           ; BSR set to: 0
 34353                           ;sw_timer.c: 148: {
 34354                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 34355  007218  0E06               	movlw	6
 34356  00721A  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 34357  00721C  0E30               	movlw	48
 34358  00721E                     u19667:
 34359  00721E  2EE8               	decfsz	wreg,f,c
 34360  007220  D7FE               	goto	u19667
 34361  007222  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 34362  007224  D7FC               	goto	u19667
 34363  007226  D000               	nop2	
 34364                           
 34365                           ;sw_timer.c: 150: ms--;
 34366  007228  0100               	movlb	0	; () banked
 34367  00722A  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 34368  00722C  0E00               	movlw	0
 34369  00722E  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 34370  007230  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 34371  007232  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 34372  007234                     l11970:
 34373                           
 34374                           ; BSR set to: 0
 34375  007234  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 34376  007236  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 34377  007238  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 34378  00723A  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 34379  00723C  E1ED               	bnz	l11966
 34380                           
 34381                           ; BSR set to: 0
 34382  00723E  0012               	return		;funcret
 34383  007240                     __end_of_SystemBlockingWaitMs:
 34384                           	opt stack 0
 34385                           tosu	equ	0xFFF
 34386                           tosh	equ	0xFFE
 34387                           tosl	equ	0xFFD
 34388                           pclath	equ	0xFFA
 34389                           tblptru	equ	0xFF8
 34390                           tblptrh	equ	0xFF7
 34391                           tblptrl	equ	0xFF6
 34392                           tablat	equ	0xFF5
 34393                           prodh	equ	0xFF4
 34394                           prodl	equ	0xFF3
 34395                           intcon	equ	0xFF2
 34396                           intcon2	equ	0xFF1
 34397                           intcon3	equ	0xFF0
 34398                           indf0	equ	0xFEF
 34399                           postinc0	equ	0xFEE
 34400                           plusw0	equ	0xFEB
 34401                           fsr0h	equ	0xFEA
 34402                           fsr0l	equ	0xFE9
 34403                           wreg	equ	0xFE8
 34404                           postinc1	equ	0xFE6
 34405                           postdec1	equ	0xFE5
 34406                           plusw1	equ	0xFE3
 34407                           fsr1h	equ	0xFE2
 34408                           fsr1l	equ	0xFE1
 34409                           indf2	equ	0xFDF
 34410                           postinc2	equ	0xFDE
 34411                           postdec2	equ	0xFDD
 34412                           plusw2	equ	0xFDB
 34413                           fsr2h	equ	0xFDA
 34414                           fsr2l	equ	0xFD9
 34415                           status	equ	0xFD8
 34416                           
 34417 ;; *************** function _HALResetPinOutputValue *****************
 34418 ;; Defined at:
 34419 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34420 ;; Parameters:    Size  Location     Type
 34421 ;;  value           1    wreg     unsigned char 
 34422 ;; Auto vars:     Size  Location     Type
 34423 ;;  value           1    4[BANK0 ] unsigned char 
 34424 ;; Return value:  Size  Location     Type
 34425 ;;                  1    wreg      void 
 34426 ;; Registers used:
 34427 ;;		wreg, status,2, status,0
 34428 ;; Tracked objects:
 34429 ;;		On entry : E/1
 34430 ;;		On exit  : F/0
 34431 ;;		Unchanged: 0/0
 34432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34436 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34437 ;;Total ram usage:        1 bytes
 34438 ;; Hardware stack levels used:    1
 34439 ;; Hardware stack levels required when called:    7
 34440 ;; This function calls:
 34441 ;;		Nothing
 34442 ;; This function is called by:
 34443 ;;		_RADIO_Reset
 34444 ;; This function uses a non-reentrant model
 34445 ;;
 34446                           
 34447                           	psect	text181
 34448  00772E                     __ptext181:
 34449                           	opt stack 0
 34450  00772E                     _HALResetPinOutputValue:
 34451                           	opt stack 20
 34452                           
 34453                           ; BSR set to: 0
 34454                           ;incstack = 0
 34455                           ;HALResetPinOutputValue@value stored from wreg
 34456  00772E  0100               	movlb	0	; () banked
 34457  007730  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 34458                           
 34459                           ;radio_driver_hal.c: 57: if (value == 0)
 34460  007732  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34461  007734  E102               	bnz	l9618
 34462                           
 34463                           ; BSR set to: 0
 34464                           
 34465                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 34466  007736  948B               	bcf	3979,2,c	;volatile
 34467  007738  0012               	return	
 34468  00773A                     l9618:
 34469                           
 34470                           ; BSR set to: 0
 34471                           ;radio_driver_hal.c: 59: else if (value == 1)
 34472  00773A  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34473  00773C  B4D8               	btfsc	status,2,c
 34474                           
 34475                           ; BSR set to: 0
 34476                           
 34477                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 34478  00773E  848B               	bsf	3979,2,c	;volatile
 34479                           
 34480                           ; BSR set to: 0
 34481  007740  0012               	return		;funcret
 34482  007742                     __end_of_HALResetPinOutputValue:
 34483                           	opt stack 0
 34484                           tosu	equ	0xFFF
 34485                           tosh	equ	0xFFE
 34486                           tosl	equ	0xFFD
 34487                           pclath	equ	0xFFA
 34488                           tblptru	equ	0xFF8
 34489                           tblptrh	equ	0xFF7
 34490                           tblptrl	equ	0xFF6
 34491                           tablat	equ	0xFF5
 34492                           prodh	equ	0xFF4
 34493                           prodl	equ	0xFF3
 34494                           intcon	equ	0xFF2
 34495                           intcon2	equ	0xFF1
 34496                           intcon3	equ	0xFF0
 34497                           indf0	equ	0xFEF
 34498                           postinc0	equ	0xFEE
 34499                           plusw0	equ	0xFEB
 34500                           fsr0h	equ	0xFEA
 34501                           fsr0l	equ	0xFE9
 34502                           wreg	equ	0xFE8
 34503                           postinc1	equ	0xFE6
 34504                           postdec1	equ	0xFE5
 34505                           plusw1	equ	0xFE3
 34506                           fsr1h	equ	0xFE2
 34507                           fsr1l	equ	0xFE1
 34508                           indf2	equ	0xFDF
 34509                           postinc2	equ	0xFDE
 34510                           postdec2	equ	0xFDD
 34511                           plusw2	equ	0xFDB
 34512                           fsr2h	equ	0xFDA
 34513                           fsr2l	equ	0xFD9
 34514                           status	equ	0xFD8
 34515                           
 34516 ;; *************** function _HALResetPinMakeOutput *****************
 34517 ;; Defined at:
 34518 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34519 ;; Parameters:    Size  Location     Type
 34520 ;;		None
 34521 ;; Auto vars:     Size  Location     Type
 34522 ;;		None
 34523 ;; Return value:  Size  Location     Type
 34524 ;;                  1    wreg      void 
 34525 ;; Registers used:
 34526 ;;		None
 34527 ;; Tracked objects:
 34528 ;;		On entry : E/1
 34529 ;;		On exit  : E/0
 34530 ;;		Unchanged: E/0
 34531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34536 ;;Total ram usage:        0 bytes
 34537 ;; Hardware stack levels used:    1
 34538 ;; Hardware stack levels required when called:    7
 34539 ;; This function calls:
 34540 ;;		Nothing
 34541 ;; This function is called by:
 34542 ;;		_RADIO_Reset
 34543 ;; This function uses a non-reentrant model
 34544 ;;
 34545                           
 34546                           	psect	text182
 34547  00794E                     __ptext182:
 34548                           	opt stack 0
 34549  00794E                     _HALResetPinMakeOutput:
 34550                           	opt stack 20
 34551                           
 34552                           ; BSR set to: 0
 34553                           ;incstack = 0
 34554                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 34555  00794E  9494               	bcf	3988,2,c	;volatile
 34556  007950  0012               	return		;funcret
 34557  007952                     __end_of_HALResetPinMakeOutput:
 34558                           	opt stack 0
 34559                           tosu	equ	0xFFF
 34560                           tosh	equ	0xFFE
 34561                           tosl	equ	0xFFD
 34562                           pclath	equ	0xFFA
 34563                           tblptru	equ	0xFF8
 34564                           tblptrh	equ	0xFF7
 34565                           tblptrl	equ	0xFF6
 34566                           tablat	equ	0xFF5
 34567                           prodh	equ	0xFF4
 34568                           prodl	equ	0xFF3
 34569                           intcon	equ	0xFF2
 34570                           intcon2	equ	0xFF1
 34571                           intcon3	equ	0xFF0
 34572                           indf0	equ	0xFEF
 34573                           postinc0	equ	0xFEE
 34574                           plusw0	equ	0xFEB
 34575                           fsr0h	equ	0xFEA
 34576                           fsr0l	equ	0xFE9
 34577                           wreg	equ	0xFE8
 34578                           postinc1	equ	0xFE6
 34579                           postdec1	equ	0xFE5
 34580                           plusw1	equ	0xFE3
 34581                           fsr1h	equ	0xFE2
 34582                           fsr1l	equ	0xFE1
 34583                           indf2	equ	0xFDF
 34584                           postinc2	equ	0xFDE
 34585                           postdec2	equ	0xFDD
 34586                           plusw2	equ	0xFDB
 34587                           fsr2h	equ	0xFDA
 34588                           fsr2l	equ	0xFD9
 34589                           status	equ	0xFD8
 34590                           
 34591 ;; *************** function _HALResetPinMakeInput *****************
 34592 ;; Defined at:
 34593 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34594 ;; Parameters:    Size  Location     Type
 34595 ;;		None
 34596 ;; Auto vars:     Size  Location     Type
 34597 ;;		None
 34598 ;; Return value:  Size  Location     Type
 34599 ;;                  1    wreg      void 
 34600 ;; Registers used:
 34601 ;;		None
 34602 ;; Tracked objects:
 34603 ;;		On entry : F/0
 34604 ;;		On exit  : F/0
 34605 ;;		Unchanged: F/0
 34606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34611 ;;Total ram usage:        0 bytes
 34612 ;; Hardware stack levels used:    1
 34613 ;; Hardware stack levels required when called:    7
 34614 ;; This function calls:
 34615 ;;		Nothing
 34616 ;; This function is called by:
 34617 ;;		_RADIO_Reset
 34618 ;; This function uses a non-reentrant model
 34619 ;;
 34620                           
 34621                           	psect	text183
 34622  007952                     __ptext183:
 34623                           	opt stack 0
 34624  007952                     _HALResetPinMakeInput:
 34625                           	opt stack 20
 34626                           
 34627                           ; BSR set to: 0
 34628                           
 34629                           ;incstack = 0
 34630                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 34631  007952  8494               	bsf	3988,2,c	;volatile
 34632                           
 34633                           ; BSR set to: 0
 34634  007954  0012               	return		;funcret
 34635  007956                     __end_of_HALResetPinMakeInput:
 34636                           	opt stack 0
 34637                           tosu	equ	0xFFF
 34638                           tosh	equ	0xFFE
 34639                           tosl	equ	0xFFD
 34640                           pclath	equ	0xFFA
 34641                           tblptru	equ	0xFF8
 34642                           tblptrh	equ	0xFF7
 34643                           tblptrl	equ	0xFF6
 34644                           tablat	equ	0xFF5
 34645                           prodh	equ	0xFF4
 34646                           prodl	equ	0xFF3
 34647                           intcon	equ	0xFF2
 34648                           intcon2	equ	0xFF1
 34649                           intcon3	equ	0xFF0
 34650                           indf0	equ	0xFEF
 34651                           postinc0	equ	0xFEE
 34652                           plusw0	equ	0xFEB
 34653                           fsr0h	equ	0xFEA
 34654                           fsr0l	equ	0xFE9
 34655                           wreg	equ	0xFE8
 34656                           postinc1	equ	0xFE6
 34657                           postdec1	equ	0xFE5
 34658                           plusw1	equ	0xFE3
 34659                           fsr1h	equ	0xFE2
 34660                           fsr1l	equ	0xFE1
 34661                           indf2	equ	0xFDF
 34662                           postinc2	equ	0xFDE
 34663                           postdec2	equ	0xFDD
 34664                           plusw2	equ	0xFDB
 34665                           fsr2h	equ	0xFDA
 34666                           fsr2l	equ	0xFD9
 34667                           status	equ	0xFD8
 34668                           
 34669 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 34670 ;; Defined at:
 34671 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34672 ;; Parameters:    Size  Location     Type
 34673 ;;  period          2   54[BANK0 ] unsigned int 
 34674 ;; Auto vars:     Size  Location     Type
 34675 ;;  iCtr            1   68[BANK0 ] unsigned char 
 34676 ;; Return value:  Size  Location     Type
 34677 ;;                  1    wreg      void 
 34678 ;; Registers used:
 34679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34680 ;; Tracked objects:
 34681 ;;		On entry : F/0
 34682 ;;		On exit  : D/0
 34683 ;;		Unchanged: 0/0
 34684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34686 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34687 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34688 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34689 ;;Total ram usage:       15 bytes
 34690 ;; Hardware stack levels used:    1
 34691 ;; Hardware stack levels required when called:   11
 34692 ;; This function calls:
 34693 ;;		_SwTimerSetTimeout
 34694 ;;		_SwTimerStart
 34695 ;;		_SwTimerStop
 34696 ;;		___lldiv
 34697 ;; This function is called by:
 34698 ;;		_LORAWAN_Reset
 34699 ;; This function uses a non-reentrant model
 34700 ;;
 34701                           
 34702                           	psect	text184
 34703  0036EE                     __ptext184:
 34704                           	opt stack 0
 34705  0036EE                     _LORAWAN_LinkCheckConfigure:
 34706                           	opt stack 17
 34707                           
 34708                           ; BSR set to: 0
 34709                           ;lorawan.c: 757: uint8_t iCtr;
 34710                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 34711                           
 34712                           ; BSR set to: 0
 34713                           ;incstack = 0
 34714  0036EE  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34715  0036F0  6F98               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34716  0036F2  5197               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34717  0036F4  6F99               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34718  0036F6  6B9A               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34719  0036F8  6B9B               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34720  0036FA  0EE8               	movlw	232
 34721  0036FC  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34722  0036FE  CFF3 F09C          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 34723  003702  CFF4 F09D          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 34724  003706  6B9E               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 34725  003708  6B9F               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 34726  00370A  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34727  00370C  50F3               	movf	prodl,w,c
 34728  00370E  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34729  003710  50F4               	movf	prodh,w,c
 34730  003712  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34731  003714  0E00               	movlw	0
 34732  003716  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34733  003718  0E03               	movlw	3
 34734  00371A  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34735  00371C  50F3               	movf	prodl,w,c
 34736  00371E  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34737  003720  50F4               	movf	prodh,w,c
 34738  003722  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34739  003724  0E00               	movlw	0
 34740  003726  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34741  003728  0EE8               	movlw	232
 34742  00372A  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34743  00372C  50F3               	movf	prodl,w,c
 34744  00372E  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34745  003730  50F4               	movf	prodh,w,c
 34746  003732  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34747  003734  0E03               	movlw	3
 34748  003736  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34749  003738  50F3               	movf	prodl,w,c
 34750  00373A  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34751  00373C  50F4               	movf	prodh,w,c
 34752  00373E  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34753  003740  0E00               	movlw	0
 34754  003742  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34755  003744  50F3               	movf	prodl,w,c
 34756  003746  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34757  003748  50F4               	movf	prodh,w,c
 34758  00374A  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34759  00374C  0EE8               	movlw	232
 34760  00374E  039B               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34761  003750  50F3               	movf	prodl,w,c
 34762  003752  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34763  003754  0E03               	movlw	3
 34764  003756  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34765  003758  50F3               	movf	prodl,w,c
 34766  00375A  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34767  00375C  0E00               	movlw	0
 34768  00375E  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34769  003760  50F3               	movf	prodl,w,c
 34770  003762  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34771  003764  0E00               	movlw	0
 34772  003766  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34773  003768  50F3               	movf	prodl,w,c
 34774  00376A  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34775  00376C  C09C  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 34776  003770  C09D  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 34777  003774  C09E  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 34778  003778  C09F  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 34779                           
 34780                           ; BSR set to: 0
 34781                           ;lorawan.c: 761: if (period == 0)
 34782  00377C  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34783  00377E  1197               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34784  003780  E127               	bnz	l1993
 34785                           
 34786                           ; BSR set to: 0
 34787                           ;lorawan.c: 762: {
 34788                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 34789  003782  0102               	movlb	2	; () banked
 34790  003784  51E7               	movf	(_loRa+231)& (0+255),w,b
 34791  003786  EC9B  F03A         	call	_SwTimerStop
 34792                           
 34793                           ; BSR set to: 0
 34794                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 34795  00378A  0102               	movlb	2	; () banked
 34796  00378C  9503               	bcf	(_loRa+3)& (0+255),2,b
 34797                           
 34798                           ; BSR set to: 2
 34799                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 34800  00378E  0100               	movlb	0	; () banked
 34801  003790  6BA4               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 34802  003792  D018               	goto	l15014
 34803  003794                     l15006:
 34804                           
 34805                           ; BSR set to: 0
 34806                           ;lorawan.c: 766: {
 34807                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 34808  003794  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34809  003796  0D02               	mullw	2
 34810  003798  0EA8               	movlw	low (_loRa+168)
 34811  00379A  24F3               	addwf	prodl,w,c
 34812  00379C  6ED9               	movwf	fsr2l,c
 34813  00379E  0E02               	movlw	high (_loRa+168)
 34814  0037A0  20F4               	addwfc	prodh,w,c
 34815  0037A2  6EDA               	movwf	fsr2h,c
 34816  0037A4  0E02               	movlw	2
 34817  0037A6  18DE               	xorwf	postinc2,w,c
 34818  0037A8  E10B               	bnz	l15012
 34819                           
 34820                           ; BSR set to: 0
 34821                           ;lorawan.c: 768: {
 34822                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 34823  0037AA  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34824  0037AC  0D02               	mullw	2
 34825  0037AE  0EA8               	movlw	low (_loRa+168)
 34826  0037B0  24F3               	addwf	prodl,w,c
 34827  0037B2  6ED9               	movwf	fsr2l,c
 34828  0037B4  0E02               	movlw	high (_loRa+168)
 34829  0037B6  20F4               	addwfc	prodh,w,c
 34830  0037B8  6EDA               	movwf	fsr2h,c
 34831  0037BA  68DF               	setf	indf2,c
 34832                           
 34833                           ; BSR set to: 0
 34834                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 34835  0037BC  0102               	movlb	2	; () banked
 34836  0037BE  07A7               	decf	(_loRa+167)& (0+255),f,b
 34837  0037C0                     l15012:
 34838  0037C0  0100               	movlb	0	; () banked
 34839  0037C2  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 34840  0037C4                     l15014:
 34841                           
 34842                           ; BSR set to: 0
 34843  0037C4  0102               	movlb	2	; () banked
 34844  0037C6  51A7               	movf	(_loRa+167)& (0+255),w,b
 34845  0037C8  0100               	movlb	0	; () banked
 34846  0037CA  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34847  0037CC  E3E3               	bnc	l15006
 34848  0037CE  0012               	return	
 34849  0037D0                     l1993:
 34850                           
 34851                           ; BSR set to: 0
 34852                           ;lorawan.c: 776: else
 34853                           ;lorawan.c: 777: {
 34854                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 34855  0037D0  0102               	movlb	2	; () banked
 34856  0037D2  8503               	bsf	(_loRa+3)& (0+255),2,b
 34857                           
 34858                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 34859  0037D4  A902               	btfss	(_loRa+2)& (0+255),4,b
 34860  0037D6  0012               	return	
 34861                           
 34862                           ; BSR set to: 2
 34863                           ;lorawan.c: 782: {
 34864                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 34865  0037D8  51CF               	movf	(_loRa+207)& (0+255),w,b
 34866  0037DA  E106               	bnz	u17490
 34867  0037DC  29CC               	incf	(_loRa+204)& (0+255),w,b
 34868  0037DE  0EFF               	movlw	255
 34869  0037E0  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 34870  0037E2  0E0F               	movlw	15
 34871  0037E4  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 34872  0037E6  E319               	bnc	l15020
 34873  0037E8                     u17490:
 34874                           
 34875                           ; BSR set to: 2
 34876  0037E8  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 34877  0037EC  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 34878  0037F0  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 34879  0037F4  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 34880  0037F8  0E7D               	movlw	125
 34881  0037FA  0100               	movlb	0	; () banked
 34882  0037FC  6F68               	movwf	___lldiv@divisor& (0+255),b
 34883  0037FE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34884  003800  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34885  003802  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34886  003804  EC1A  F030         	call	___lldiv	;wreg free
 34887  003808  0E0C               	movlw	12
 34888  00380A                     u17505:
 34889  00380A  90D8               	bcf	status,0,c
 34890  00380C  3764               	rlcf	?___lldiv& (0+255),f,b
 34891  00380E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 34892  003810  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 34893  003812  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 34894  003814  2EE8               	decfsz	wreg,f,c
 34895  003816  D7F9               	goto	u17505
 34896  003818  D020               	goto	L21
 34897  00381A                     l15020:
 34898                           
 34899                           ; BSR set to: 2
 34900  00381A  C2CC  F098         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 34901  00381E  C2CD  F099         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 34902  003822  C2CE  F09A         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 34903  003826  C2CF  F09B         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 34904  00382A  0E0C               	movlw	12
 34905  00382C                     u17515:
 34906  00382C  90D8               	bcf	status,0,c
 34907  00382E  0100               	movlb	0	; () banked
 34908  003830  3798               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 34909  003832  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 34910  003834  379A               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 34911  003836  379B               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 34912  003838  2EE8               	decfsz	wreg,f,c
 34913  00383A  D7F8               	goto	u17515
 34914  00383C  C098  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 34915  003840  C099  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 34916  003844  C09A  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 34917  003848  C09B  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 34918  00384C  0E7D               	movlw	125
 34919  00384E  6F68               	movwf	___lldiv@divisor& (0+255),b
 34920  003850  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34921  003852  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34922  003854  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34923  003856  EC1A  F030         	call	___lldiv	;wreg free
 34924  00385A                     L21:
 34925  00385A  C064  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3502
 34926  00385E  C065  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3502+1
 34927  003862  C066  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3502+2
 34928  003866  C067  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3502+3
 34929                           
 34930                           ; BSR set to: 0
 34931  00386A  C0A0  F071         	movff	_LORAWAN_LinkCheckConfigure$3502,SwTimerSetTimeout@timeout
 34932  00386E  C0A1  F072         	movff	_LORAWAN_LinkCheckConfigure$3502+1,SwTimerSetTimeout@timeout+1
 34933  003872  C0A2  F073         	movff	_LORAWAN_LinkCheckConfigure$3502+2,SwTimerSetTimeout@timeout+2
 34934  003876  C0A3  F074         	movff	_LORAWAN_LinkCheckConfigure$3502+3,SwTimerSetTimeout@timeout+3
 34935  00387A  0102               	movlb	2	; () banked
 34936  00387C  51E7               	movf	(_loRa+231)& (0+255),w,b
 34937  00387E  EC75  F036         	call	_SwTimerSetTimeout
 34938                           
 34939                           ; BSR set to: 0
 34940                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 34941  003882  0102               	movlb	2	; () banked
 34942  003884  51E7               	movf	(_loRa+231)& (0+255),w,b
 34943  003886  EF58  F02E         	goto	_SwTimerStart
 34944  00388A                     __end_of_LORAWAN_LinkCheckConfigure:
 34945                           	opt stack 0
 34946                           tosu	equ	0xFFF
 34947                           tosh	equ	0xFFE
 34948                           tosl	equ	0xFFD
 34949                           pclath	equ	0xFFA
 34950                           tblptru	equ	0xFF8
 34951                           tblptrh	equ	0xFF7
 34952                           tblptrl	equ	0xFF6
 34953                           tablat	equ	0xFF5
 34954                           prodh	equ	0xFF4
 34955                           prodl	equ	0xFF3
 34956                           intcon	equ	0xFF2
 34957                           intcon2	equ	0xFF1
 34958                           intcon3	equ	0xFF0
 34959                           indf0	equ	0xFEF
 34960                           postinc0	equ	0xFEE
 34961                           plusw0	equ	0xFEB
 34962                           fsr0h	equ	0xFEA
 34963                           fsr0l	equ	0xFE9
 34964                           wreg	equ	0xFE8
 34965                           postinc1	equ	0xFE6
 34966                           postdec1	equ	0xFE5
 34967                           plusw1	equ	0xFE3
 34968                           fsr1h	equ	0xFE2
 34969                           fsr1l	equ	0xFE1
 34970                           indf2	equ	0xFDF
 34971                           postinc2	equ	0xFDE
 34972                           postdec2	equ	0xFDD
 34973                           plusw2	equ	0xFDB
 34974                           fsr2h	equ	0xFDA
 34975                           fsr2l	equ	0xFD9
 34976                           status	equ	0xFD8
 34977                           
 34978 ;; *************** function ___lldiv *****************
 34979 ;; Defined at:
 34980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 34981 ;; Parameters:    Size  Location     Type
 34982 ;;  dividend        4    4[BANK0 ] unsigned long 
 34983 ;;  divisor         4    8[BANK0 ] unsigned long 
 34984 ;; Auto vars:     Size  Location     Type
 34985 ;;  quotient        4   12[BANK0 ] unsigned long 
 34986 ;;  counter         1   16[BANK0 ] unsigned char 
 34987 ;; Return value:  Size  Location     Type
 34988 ;;                  4    4[BANK0 ] unsigned long 
 34989 ;; Registers used:
 34990 ;;		wreg, status,2, status,0
 34991 ;; Tracked objects:
 34992 ;;		On entry : F/0
 34993 ;;		On exit  : F/0
 34994 ;;		Unchanged: 0/0
 34995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34996 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34997 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34999 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35000 ;;Total ram usage:       13 bytes
 35001 ;; Hardware stack levels used:    1
 35002 ;; Hardware stack levels required when called:    7
 35003 ;; This function calls:
 35004 ;;		Nothing
 35005 ;; This function is called by:
 35006 ;;		_RADIO_WriteFrequency
 35007 ;;		_RADIO_WriteFSKFrequencyDeviation
 35008 ;;		_RADIO_WriteFSKBitRate
 35009 ;;		_RADIO_Transmit
 35010 ;;		_RADIO_ReceiveStart
 35011 ;;		_LORAWAN_TxDone
 35012 ;;		_LORAWAN_RxTimeout
 35013 ;;		_StartReTxTimer
 35014 ;;		_DutyCycleCallback
 35015 ;;		_LORAWAN_LinkCheckConfigure
 35016 ;;		_LORAWAN_LinkCheckCallback
 35017 ;;		_UpdateRetransmissionAckTimeoutState
 35018 ;;		_UpdateJoinSuccessState
 35019 ;; This function uses a non-reentrant model
 35020 ;;
 35021                           
 35022                           	psect	text185
 35023  006034                     __ptext185:
 35024                           	opt stack 0
 35025  006034                     ___lldiv:
 35026                           	opt stack 20
 35027                           
 35028                           ; BSR set to: 0
 35029                           
 35030                           ;incstack = 0
 35031  006034  6B6C               	clrf	___lldiv@quotient& (0+255),b
 35032  006036  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 35033  006038  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 35034  00603A  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 35035                           
 35036                           ; BSR set to: 0
 35037  00603C  5168               	movf	___lldiv@divisor& (0+255),w,b
 35038  00603E  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35039  006040  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35040  006042  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35041  006044  E029               	bz	l3104
 35042                           
 35043                           ; BSR set to: 0
 35044  006046  0E01               	movlw	1
 35045  006048  6F70               	movwf	___lldiv@counter& (0+255),b
 35046  00604A  D006               	goto	l12106
 35047  00604C                     l12104:
 35048                           
 35049                           ; BSR set to: 0
 35050  00604C  90D8               	bcf	status,0,c
 35051  00604E  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 35052  006050  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35053  006052  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35054  006054  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35055  006056  2B70               	incf	___lldiv@counter& (0+255),f,b
 35056  006058                     l12106:
 35057                           
 35058                           ; BSR set to: 0
 35059  006058  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35060  00605A  D7F8               	goto	l12104
 35061  00605C                     l12108:
 35062                           
 35063                           ; BSR set to: 0
 35064  00605C  90D8               	bcf	status,0,c
 35065  00605E  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 35066  006060  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35067  006062  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35068  006064  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35069                           
 35070                           ; BSR set to: 0
 35071  006066  5168               	movf	___lldiv@divisor& (0+255),w,b
 35072  006068  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 35073  00606A  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35074  00606C  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35075  00606E  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35076  006070  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35077  006072  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35078  006074  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35079  006076  E309               	bnc	l12116
 35080                           
 35081                           ; BSR set to: 0
 35082  006078  5168               	movf	___lldiv@divisor& (0+255),w,b
 35083  00607A  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 35084  00607C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35085  00607E  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35086  006080  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35087  006082  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35088  006084  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35089  006086  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35090                           
 35091                           ; BSR set to: 0
 35092  006088  816C               	bsf	___lldiv@quotient& (0+255),0,b
 35093  00608A                     l12116:
 35094                           
 35095                           ; BSR set to: 0
 35096  00608A  90D8               	bcf	status,0,c
 35097  00608C  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35098  00608E  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35099  006090  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35100  006092  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 35101                           
 35102                           ; BSR set to: 0
 35103  006094  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 35104  006096  D7E2               	goto	l12108
 35105  006098                     l3104:
 35106                           
 35107                           ; BSR set to: 0
 35108  006098  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 35109  00609C  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 35110  0060A0  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 35111  0060A4  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 35112                           
 35113                           ; BSR set to: 0
 35114  0060A8  0012               	return		;funcret
 35115  0060AA                     __end_of___lldiv:
 35116                           	opt stack 0
 35117                           tosu	equ	0xFFF
 35118                           tosh	equ	0xFFE
 35119                           tosl	equ	0xFFD
 35120                           pclath	equ	0xFFA
 35121                           tblptru	equ	0xFF8
 35122                           tblptrh	equ	0xFF7
 35123                           tblptrl	equ	0xFF6
 35124                           tablat	equ	0xFF5
 35125                           prodh	equ	0xFF4
 35126                           prodl	equ	0xFF3
 35127                           intcon	equ	0xFF2
 35128                           intcon2	equ	0xFF1
 35129                           intcon3	equ	0xFF0
 35130                           indf0	equ	0xFEF
 35131                           postinc0	equ	0xFEE
 35132                           plusw0	equ	0xFEB
 35133                           fsr0h	equ	0xFEA
 35134                           fsr0l	equ	0xFE9
 35135                           wreg	equ	0xFE8
 35136                           postinc1	equ	0xFE6
 35137                           postdec1	equ	0xFE5
 35138                           plusw1	equ	0xFE3
 35139                           fsr1h	equ	0xFE2
 35140                           fsr1l	equ	0xFE1
 35141                           indf2	equ	0xFDF
 35142                           postinc2	equ	0xFDE
 35143                           postdec2	equ	0xFDD
 35144                           plusw2	equ	0xFDB
 35145                           fsr2h	equ	0xFDA
 35146                           fsr2l	equ	0xFD9
 35147                           status	equ	0xFD8
 35148                           
 35149 ;; *************** function _SwTimerStop *****************
 35150 ;; Defined at:
 35151 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35152 ;; Parameters:    Size  Location     Type
 35153 ;;  timerId         1    wreg     unsigned char 
 35154 ;; Auto vars:     Size  Location     Type
 35155 ;;  timerId         1    4[BANK0 ] unsigned char 
 35156 ;; Return value:  Size  Location     Type
 35157 ;;                  1    wreg      void 
 35158 ;; Registers used:
 35159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35160 ;; Tracked objects:
 35161 ;;		On entry : C/1
 35162 ;;		On exit  : F/0
 35163 ;;		Unchanged: 0/0
 35164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35168 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35169 ;;Total ram usage:        1 bytes
 35170 ;; Hardware stack levels used:    1
 35171 ;; Hardware stack levels required when called:    7
 35172 ;; This function calls:
 35173 ;;		Nothing
 35174 ;; This function is called by:
 35175 ;;		_RADIO_Init
 35176 ;;		_RADIO_Transmit
 35177 ;;		_RADIO_RxDone
 35178 ;;		_RADIO_FSKPayloadReady
 35179 ;;		_RADIO_RxTimeout
 35180 ;;		_RADIO_TxDone
 35181 ;;		_RADIO_FSKPacketSent
 35182 ;;		_RADIO_RxFSKTimeout
 35183 ;;		_LORAWAN_TxDone
 35184 ;;		_StopAllSoftwareTimers
 35185 ;;		_LORAWAN_LinkCheckConfigure
 35186 ;;		_LORAWAN_RxDone
 35187 ;; This function uses a non-reentrant model
 35188 ;;
 35189                           
 35190                           	psect	text186
 35191  007536                     __ptext186:
 35192                           	opt stack 0
 35193  007536                     _SwTimerStop:
 35194                           	opt stack 20
 35195                           
 35196                           ; BSR set to: 0
 35197                           ;incstack = 0
 35198                           ;SwTimerStop@timerId stored from wreg
 35199  007536  0100               	movlb	0	; () banked
 35200  007538  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 35201                           
 35202                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 35203  00753A  9EF2               	bcf	intcon,7,c	;volatile
 35204                           
 35205                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 35206  00753C  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 35207  00753E  0D08               	mullw	8
 35208  007540  0E04               	movlw	low (_swTimers+4)
 35209  007542  24F3               	addwf	prodl,w,c
 35210  007544  6ED9               	movwf	fsr2l,c
 35211  007546  0E03               	movlw	high (_swTimers+4)
 35212  007548  20F4               	addwfc	prodh,w,c
 35213  00754A  6EDA               	movwf	fsr2h,c
 35214  00754C  6ADF               	clrf	indf2,c
 35215                           
 35216                           ; BSR set to: 0
 35217                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 35218  00754E  8EF2               	bsf	intcon,7,c	;volatile
 35219                           
 35220                           ; BSR set to: 0
 35221  007550  0C00               	retlw	0	;funcret
 35222  007552                     __end_of_SwTimerStop:
 35223                           	opt stack 0
 35224                           tosu	equ	0xFFF
 35225                           tosh	equ	0xFFE
 35226                           tosl	equ	0xFFD
 35227                           pclath	equ	0xFFA
 35228                           tblptru	equ	0xFF8
 35229                           tblptrh	equ	0xFF7
 35230                           tblptrl	equ	0xFF6
 35231                           tablat	equ	0xFF5
 35232                           prodh	equ	0xFF4
 35233                           prodl	equ	0xFF3
 35234                           intcon	equ	0xFF2
 35235                           intcon2	equ	0xFF1
 35236                           intcon3	equ	0xFF0
 35237                           indf0	equ	0xFEF
 35238                           postinc0	equ	0xFEE
 35239                           plusw0	equ	0xFEB
 35240                           fsr0h	equ	0xFEA
 35241                           fsr0l	equ	0xFE9
 35242                           wreg	equ	0xFE8
 35243                           postinc1	equ	0xFE6
 35244                           postdec1	equ	0xFE5
 35245                           plusw1	equ	0xFE3
 35246                           fsr1h	equ	0xFE2
 35247                           fsr1l	equ	0xFE1
 35248                           indf2	equ	0xFDF
 35249                           postinc2	equ	0xFDE
 35250                           postdec2	equ	0xFDD
 35251                           plusw2	equ	0xFDB
 35252                           fsr2h	equ	0xFDA
 35253                           fsr2l	equ	0xFD9
 35254                           status	equ	0xFD8
 35255                           
 35256 ;; *************** function _SwTimerStart *****************
 35257 ;; Defined at:
 35258 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35259 ;; Parameters:    Size  Location     Type
 35260 ;;  timerId         1    wreg     unsigned char 
 35261 ;; Auto vars:     Size  Location     Type
 35262 ;;  timerId         1   53[BANK0 ] unsigned char 
 35263 ;;  ticksRemaini    4   49[BANK0 ] unsigned long 
 35264 ;; Return value:  Size  Location     Type
 35265 ;;                  1    wreg      void 
 35266 ;; Registers used:
 35267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35268 ;; Tracked objects:
 35269 ;;		On entry : C/2
 35270 ;;		On exit  : F/0
 35271 ;;		Unchanged: 0/0
 35272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35274 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35275 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35276 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35277 ;;Total ram usage:        9 bytes
 35278 ;; Hardware stack levels used:    1
 35279 ;; Hardware stack levels required when called:   10
 35280 ;; This function calls:
 35281 ;;		_SwTimersInterrupt
 35282 ;;		_TMR_OverrideRemaining
 35283 ;; This function is called by:
 35284 ;;		_RADIO_Transmit
 35285 ;;		_RADIO_ReceiveStart
 35286 ;;		_LORAWAN_TxDone
 35287 ;;		_LORAWAN_RxTimeout
 35288 ;;		_StartReTxTimer
 35289 ;;		_DutyCycleCallback
 35290 ;;		_LORAWAN_Join
 35291 ;;		_LORAWAN_LinkCheckConfigure
 35292 ;;		_LORAWAN_LinkCheckCallback
 35293 ;;		_UpdateRetransmissionAckTimeoutState
 35294 ;;		_UpdateJoinSuccessState
 35295 ;; This function uses a non-reentrant model
 35296 ;;
 35297                           
 35298                           	psect	text187
 35299  005CB0                     __ptext187:
 35300                           	opt stack 0
 35301  005CB0                     _SwTimerStart:
 35302                           	opt stack 17
 35303                           
 35304                           ; BSR set to: 0
 35305                           ;incstack = 0
 35306                           ;SwTimerStart@timerId stored from wreg
 35307  005CB0  0100               	movlb	0	; () banked
 35308  005CB2  6F95               	movwf	SwTimerStart@timerId& (0+255),b
 35309                           
 35310                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 35311                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 35312  005CB4  9EF2               	bcf	intcon,7,c	;volatile
 35313                           
 35314                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 35315  005CB6  ECB6  F025         	call	_SwTimersInterrupt	;wreg free
 35316  005CBA  C07C  F091         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 35317  005CBE  C07D  F092         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 35318  005CC2  C07E  F093         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 35319  005CC6  C07F  F094         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 35320                           
 35321                           ; BSR set to: 0
 35322                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 35323  005CCA  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35324  005CCC  0D08               	mullw	8
 35325  005CCE  0E00               	movlw	low _swTimers
 35326  005CD0  24F3               	addwf	prodl,w,c
 35327  005CD2  6ED9               	movwf	fsr2l,c
 35328  005CD4  0E03               	movlw	high _swTimers
 35329  005CD6  20F4               	addwfc	prodh,w,c
 35330  005CD8  6EDA               	movwf	fsr2h,c
 35331  005CDA  5191               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 35332  005CDC  5CDE               	subwf	postinc2,w,c
 35333  005CDE  5192               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 35334  005CE0  58DE               	subwfb	postinc2,w,c
 35335  005CE2  5193               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 35336  005CE4  58DE               	subwfb	postinc2,w,c
 35337  005CE6  5194               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 35338  005CE8  58DE               	subwfb	postinc2,w,c
 35339  005CEA  E210               	bc	l12452
 35340                           
 35341                           ; BSR set to: 0
 35342                           ;sw_timer.c: 225: {
 35343                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 35344  005CEC  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35345  005CEE  0D08               	mullw	8
 35346  005CF0  0E00               	movlw	low _swTimers
 35347  005CF2  24F3               	addwf	prodl,w,c
 35348  005CF4  6ED9               	movwf	fsr2l,c
 35349  005CF6  0E03               	movlw	high _swTimers
 35350  005CF8  20F4               	addwfc	prodh,w,c
 35351  005CFA  6EDA               	movwf	fsr2h,c
 35352  005CFC  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining
 35353  005D00  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+1
 35354  005D04  CFDE F093          	movff	postinc2,SwTimerStart@ticksRemaining+2
 35355  005D08  CFDE F094          	movff	postinc2,SwTimerStart@ticksRemaining+3
 35356  005D0C                     l12452:
 35357                           
 35358                           ; BSR set to: 0
 35359                           ;sw_timer.c: 227: }
 35360                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 35361  005D0C  C091  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 35362  005D10  C092  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 35363  005D14  C093  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 35364  005D18  C094  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 35365  005D1C  ECDC  F02F         	call	_TMR_OverrideRemaining	;wreg free
 35366                           
 35367                           ; BSR set to: 0
 35368                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 35369  005D20  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35370  005D22  0D08               	mullw	8
 35371  005D24  0E04               	movlw	low (_swTimers+4)
 35372  005D26  24F3               	addwf	prodl,w,c
 35373  005D28  6ED9               	movwf	fsr2l,c
 35374  005D2A  0E03               	movlw	high (_swTimers+4)
 35375  005D2C  20F4               	addwfc	prodh,w,c
 35376  005D2E  6EDA               	movwf	fsr2h,c
 35377  005D30  0E01               	movlw	1
 35378  005D32  6EDF               	movwf	indf2,c
 35379                           
 35380                           ; BSR set to: 0
 35381                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 35382  005D34  8EF2               	bsf	intcon,7,c	;volatile
 35383                           
 35384                           ; BSR set to: 0
 35385  005D36  0C01               	retlw	1	;funcret
 35386  005D38                     __end_of_SwTimerStart:
 35387                           	opt stack 0
 35388                           tosu	equ	0xFFF
 35389                           tosh	equ	0xFFE
 35390                           tosl	equ	0xFFD
 35391                           pclath	equ	0xFFA
 35392                           tblptru	equ	0xFF8
 35393                           tblptrh	equ	0xFF7
 35394                           tblptrl	equ	0xFF6
 35395                           tablat	equ	0xFF5
 35396                           prodh	equ	0xFF4
 35397                           prodl	equ	0xFF3
 35398                           intcon	equ	0xFF2
 35399                           intcon2	equ	0xFF1
 35400                           intcon3	equ	0xFF0
 35401                           indf0	equ	0xFEF
 35402                           postinc0	equ	0xFEE
 35403                           plusw0	equ	0xFEB
 35404                           fsr0h	equ	0xFEA
 35405                           fsr0l	equ	0xFE9
 35406                           wreg	equ	0xFE8
 35407                           postinc1	equ	0xFE6
 35408                           postdec1	equ	0xFE5
 35409                           plusw1	equ	0xFE3
 35410                           fsr1h	equ	0xFE2
 35411                           fsr1l	equ	0xFE1
 35412                           indf2	equ	0xFDF
 35413                           postinc2	equ	0xFDE
 35414                           postdec2	equ	0xFDD
 35415                           plusw2	equ	0xFDB
 35416                           fsr2h	equ	0xFDA
 35417                           fsr2l	equ	0xFD9
 35418                           status	equ	0xFD8
 35419                           
 35420 ;; *************** function _TMR_OverrideRemaining *****************
 35421 ;; Defined at:
 35422 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35423 ;; Parameters:    Size  Location     Type
 35424 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 35425 ;; Auto vars:     Size  Location     Type
 35426 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 35427 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 35428 ;; Return value:  Size  Location     Type
 35429 ;;                  1    wreg      void 
 35430 ;; Registers used:
 35431 ;;		wreg, status,2, status,0, cstack
 35432 ;; Tracked objects:
 35433 ;;		On entry : F/0
 35434 ;;		On exit  : F/0
 35435 ;;		Unchanged: 0/0
 35436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35437 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35438 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35440 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35441 ;;Total ram usage:       10 bytes
 35442 ;; Hardware stack levels used:    1
 35443 ;; Hardware stack levels required when called:    9
 35444 ;; This function calls:
 35445 ;;		_TMR_SwapTimer
 35446 ;; This function is called by:
 35447 ;;		_SwTimerStart
 35448 ;; This function uses a non-reentrant model
 35449 ;;
 35450                           
 35451                           	psect	text188
 35452  005FB8                     __ptext188:
 35453                           	opt stack 0
 35454  005FB8                     _TMR_OverrideRemaining:
 35455                           	opt stack 17
 35456                           
 35457                           ; BSR set to: 0
 35458                           ;sw_timer.c: 67: uint16_t tmrVal;
 35459                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35460                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35461                           
 35462                           ; BSR set to: 0
 35463                           ;incstack = 0
 35464  005FB8  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35465  005FBA  1058               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35466  005FBC  1057               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35467  005FBE  E104               	bnz	u12790
 35468  005FC0  0E0B               	movlw	11
 35469  005FC2  5C56               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35470  005FC4  A0D8               	btfss	status,0,c
 35471  005FC6  0012               	return	
 35472  005FC8                     u12790:
 35473                           
 35474                           ; BSR set to: 0
 35475                           ;sw_timer.c: 72: {
 35476                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35477  005FC8  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35478  005FCA  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35479  005FCC  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35480  005FCE  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35481  005FD0  5058               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35482  005FD2  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35483  005FD4  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35484  005FD6  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 35485  005FD8  B0D8               	btfsc	status,0,c
 35486  005FDA  0012               	return	
 35487                           
 35488                           ; BSR set to: 0
 35489                           ;sw_timer.c: 74: {
 35490                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 35491  005FDC  C06E  F056         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 35492  005FE0  C06F  F057         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 35493  005FE4  C070  F058         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 35494  005FE8  C071  F059         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 35495                           
 35496                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 35497  005FEC  C0EC  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 35498  005FF0  C0ED  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 35499                           
 35500                           ; BSR set to: 0
 35501                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 35502  005FF4  516E               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35503  005FF6  0800               	sublw	0
 35504  005FF8  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 35505  005FFA  516F               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35506  005FFC  A0D8               	btfss	status,0,c
 35507  005FFE  2AE8               	incf	wreg,f,c
 35508  006000  0800               	sublw	0
 35509  006002  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 35510                           
 35511                           ; BSR set to: 0
 35512                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 35513  006004  C0EC  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 35514  006008  C0ED  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 35515  00600C  ECD4  F036         	call	_TMR_SwapTimer	;wreg free
 35516  006010  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 35517  006014  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 35518                           
 35519                           ; BSR set to: 0
 35520                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 35521  006018  5176               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 35522  00601A  5D74               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 35523  00601C  6F72               	movwf	??_TMR_OverrideRemaining& (0+255),b
 35524  00601E  5177               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 35525  006020  5975               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 35526  006022  6F73               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 35527  006024  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 35528  006026  263A               	addwf	_ticksAdded,f,c	;volatile
 35529  006028  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 35530  00602A  223B               	addwfc	_ticksAdded+1,f,c	;volatile
 35531  00602C  0E00               	movlw	0
 35532  00602E  223C               	addwfc	_ticksAdded+2,f,c	;volatile
 35533  006030  223D               	addwfc	_ticksAdded+3,f,c	;volatile
 35534                           
 35535                           ; BSR set to: 0
 35536  006032  0C00               	retlw	0	;funcret
 35537  006034                     __end_of_TMR_OverrideRemaining:
 35538                           	opt stack 0
 35539                           tosu	equ	0xFFF
 35540                           tosh	equ	0xFFE
 35541                           tosl	equ	0xFFD
 35542                           pclath	equ	0xFFA
 35543                           tblptru	equ	0xFF8
 35544                           tblptrh	equ	0xFF7
 35545                           tblptrl	equ	0xFF6
 35546                           tablat	equ	0xFF5
 35547                           prodh	equ	0xFF4
 35548                           prodl	equ	0xFF3
 35549                           intcon	equ	0xFF2
 35550                           intcon2	equ	0xFF1
 35551                           intcon3	equ	0xFF0
 35552                           indf0	equ	0xFEF
 35553                           postinc0	equ	0xFEE
 35554                           plusw0	equ	0xFEB
 35555                           fsr0h	equ	0xFEA
 35556                           fsr0l	equ	0xFE9
 35557                           wreg	equ	0xFE8
 35558                           postinc1	equ	0xFE6
 35559                           postdec1	equ	0xFE5
 35560                           plusw1	equ	0xFE3
 35561                           fsr1h	equ	0xFE2
 35562                           fsr1l	equ	0xFE1
 35563                           indf2	equ	0xFDF
 35564                           postinc2	equ	0xFDE
 35565                           postdec2	equ	0xFDD
 35566                           plusw2	equ	0xFDB
 35567                           fsr2h	equ	0xFDA
 35568                           fsr2l	equ	0xFD9
 35569                           status	equ	0xFD8
 35570                           
 35571 ;; *************** function _TMR_SwapTimer *****************
 35572 ;; Defined at:
 35573 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35574 ;; Parameters:    Size  Location     Type
 35575 ;;  timerVal        2   12[BANK0 ] unsigned int 
 35576 ;; Auto vars:     Size  Location     Type
 35577 ;;		None
 35578 ;; Return value:  Size  Location     Type
 35579 ;;                  2   12[BANK0 ] unsigned int 
 35580 ;; Registers used:
 35581 ;;		wreg, status,2, status,0, cstack
 35582 ;; Tracked objects:
 35583 ;;		On entry : F/0
 35584 ;;		On exit  : F/0
 35585 ;;		Unchanged: 0/0
 35586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35591 ;;Total ram usage:        2 bytes
 35592 ;; Hardware stack levels used:    1
 35593 ;; Hardware stack levels required when called:    8
 35594 ;; This function calls:
 35595 ;;		_TMR1_ReadTimer
 35596 ;;		_TMR1_WriteTimer
 35597 ;; This function is called by:
 35598 ;;		_TMR_OverrideRemaining
 35599 ;; This function uses a non-reentrant model
 35600 ;;
 35601                           
 35602                           	psect	text189
 35603  006DA8                     __ptext189:
 35604                           	opt stack 0
 35605  006DA8                     _TMR_SwapTimer:
 35606                           	opt stack 17
 35607                           
 35608                           ; BSR set to: 0
 35609                           ;sw_timer.c: 114: static uint16_t oldVal;
 35610                           ;sw_timer.c: 115: static uint16_t retVal;
 35611                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 35612                           
 35613                           ; BSR set to: 0
 35614                           ;incstack = 0
 35615  006DA8  EC7D  F03A         	call	_TMR1_ReadTimer	;wreg free
 35616  006DAC  C064  F040         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 35617  006DB0  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 35618  006DB4                     l11932:
 35619                           
 35620                           ; BSR set to: 0
 35621  006DB4  EC7D  F03A         	call	_TMR1_ReadTimer	;wreg free
 35622  006DB8  5040               	movf	TMR_SwapTimer@oldVal,w,c
 35623  006DBA  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 35624  006DBC  E103               	bnz	u12580
 35625  006DBE  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 35626  006DC0  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 35627  006DC2  E0F8               	bz	l11932
 35628  006DC4                     u12580:
 35629                           
 35630                           ; BSR set to: 0
 35631                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 35632  006DC4  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 35633  006DC8  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 35634  006DCC  ECA9  F03A         	call	_TMR1_WriteTimer	;wreg free
 35635                           
 35636                           ; BSR set to: 0
 35637                           ;sw_timer.c: 128: oldVal++;
 35638  006DD0  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 35639  006DD2  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 35640                           
 35641                           ; BSR set to: 0
 35642                           ;sw_timer.c: 130: retVal = oldVal;
 35643  006DD4  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 35644  006DD8  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 35645                           
 35646                           ; BSR set to: 0
 35647                           ;sw_timer.c: 132: return retVal;
 35648  006DDC  C042  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 35649  006DE0  C043  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 35650                           
 35651                           ; BSR set to: 0
 35652  006DE4  0012               	return		;funcret
 35653  006DE6                     __end_of_TMR_SwapTimer:
 35654                           	opt stack 0
 35655                           tosu	equ	0xFFF
 35656                           tosh	equ	0xFFE
 35657                           tosl	equ	0xFFD
 35658                           pclath	equ	0xFFA
 35659                           tblptru	equ	0xFF8
 35660                           tblptrh	equ	0xFF7
 35661                           tblptrl	equ	0xFF6
 35662                           tablat	equ	0xFF5
 35663                           prodh	equ	0xFF4
 35664                           prodl	equ	0xFF3
 35665                           intcon	equ	0xFF2
 35666                           intcon2	equ	0xFF1
 35667                           intcon3	equ	0xFF0
 35668                           indf0	equ	0xFEF
 35669                           postinc0	equ	0xFEE
 35670                           plusw0	equ	0xFEB
 35671                           fsr0h	equ	0xFEA
 35672                           fsr0l	equ	0xFE9
 35673                           wreg	equ	0xFE8
 35674                           postinc1	equ	0xFE6
 35675                           postdec1	equ	0xFE5
 35676                           plusw1	equ	0xFE3
 35677                           fsr1h	equ	0xFE2
 35678                           fsr1l	equ	0xFE1
 35679                           indf2	equ	0xFDF
 35680                           postinc2	equ	0xFDE
 35681                           postdec2	equ	0xFDD
 35682                           plusw2	equ	0xFDB
 35683                           fsr2h	equ	0xFDA
 35684                           fsr2l	equ	0xFD9
 35685                           status	equ	0xFD8
 35686                           
 35687 ;; *************** function _TMR1_WriteTimer *****************
 35688 ;; Defined at:
 35689 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 35690 ;; Parameters:    Size  Location     Type
 35691 ;;  timerVal        2    4[BANK0 ] unsigned int 
 35692 ;; Auto vars:     Size  Location     Type
 35693 ;;		None
 35694 ;; Return value:  Size  Location     Type
 35695 ;;                  1    wreg      void 
 35696 ;; Registers used:
 35697 ;;		None
 35698 ;; Tracked objects:
 35699 ;;		On entry : F/0
 35700 ;;		On exit  : F/0
 35701 ;;		Unchanged: F/0
 35702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35706 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35707 ;;Total ram usage:        2 bytes
 35708 ;; Hardware stack levels used:    1
 35709 ;; Hardware stack levels required when called:    7
 35710 ;; This function calls:
 35711 ;;		Nothing
 35712 ;; This function is called by:
 35713 ;;		_TMR_SwapTimer
 35714 ;; This function uses a non-reentrant model
 35715 ;;
 35716                           
 35717                           	psect	text190
 35718  007552                     __ptext190:
 35719                           	opt stack 0
 35720  007552                     _TMR1_WriteTimer:
 35721                           	opt stack 17
 35722                           
 35723                           ; BSR set to: 0
 35724                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 35725                           
 35726                           ; BSR set to: 0
 35727                           ;incstack = 0
 35728  007552  A4CD               	btfss	4045,2,c	;volatile
 35729  007554  D007               	goto	l1347
 35730                           
 35731                           ; BSR set to: 0
 35732                           ;tmr1.c: 123: {
 35733                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 35734  007556  90CD               	bcf	4045,0,c	;volatile
 35735                           
 35736                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 35737  007558  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35738                           
 35739                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 35740  00755C  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35741                           
 35742                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 35743  007560  80CD               	bsf	4045,0,c	;volatile
 35744                           
 35745                           ;tmr1.c: 133: }
 35746  007562  0012               	return	
 35747  007564                     l1347:
 35748                           
 35749                           ; BSR set to: 0
 35750                           ;tmr1.c: 134: else
 35751                           ;tmr1.c: 135: {
 35752                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 35753  007564  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35754                           
 35755                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 35756  007568  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35757                           
 35758                           ; BSR set to: 0
 35759  00756C  0012               	return		;funcret
 35760  00756E                     __end_of_TMR1_WriteTimer:
 35761                           	opt stack 0
 35762                           tosu	equ	0xFFF
 35763                           tosh	equ	0xFFE
 35764                           tosl	equ	0xFFD
 35765                           pclath	equ	0xFFA
 35766                           tblptru	equ	0xFF8
 35767                           tblptrh	equ	0xFF7
 35768                           tblptrl	equ	0xFF6
 35769                           tablat	equ	0xFF5
 35770                           prodh	equ	0xFF4
 35771                           prodl	equ	0xFF3
 35772                           intcon	equ	0xFF2
 35773                           intcon2	equ	0xFF1
 35774                           intcon3	equ	0xFF0
 35775                           indf0	equ	0xFEF
 35776                           postinc0	equ	0xFEE
 35777                           plusw0	equ	0xFEB
 35778                           fsr0h	equ	0xFEA
 35779                           fsr0l	equ	0xFE9
 35780                           wreg	equ	0xFE8
 35781                           postinc1	equ	0xFE6
 35782                           postdec1	equ	0xFE5
 35783                           plusw1	equ	0xFE3
 35784                           fsr1h	equ	0xFE2
 35785                           fsr1l	equ	0xFE1
 35786                           indf2	equ	0xFDF
 35787                           postinc2	equ	0xFDE
 35788                           postdec2	equ	0xFDD
 35789                           plusw2	equ	0xFDB
 35790                           fsr2h	equ	0xFDA
 35791                           fsr2l	equ	0xFD9
 35792                           status	equ	0xFD8
 35793                           
 35794 ;; *************** function _SwTimersInterrupt *****************
 35795 ;; Defined at:
 35796 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35797 ;; Parameters:    Size  Location     Type
 35798 ;;		None
 35799 ;; Auto vars:     Size  Location     Type
 35800 ;;  ticksToNextT    4   40[BANK0 ] unsigned long 
 35801 ;;  timeElapsed     4   36[BANK0 ] unsigned long 
 35802 ;;  i               1   44[BANK0 ] unsigned char 
 35803 ;; Return value:  Size  Location     Type
 35804 ;;                  4   28[BANK0 ] unsigned long 
 35805 ;; Registers used:
 35806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35807 ;; Tracked objects:
 35808 ;;		On entry : 0/0
 35809 ;;		On exit  : F/0
 35810 ;;		Unchanged: 0/0
 35811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35813 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35815 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35816 ;;Total ram usage:       17 bytes
 35817 ;; Hardware stack levels used:    1
 35818 ;; Hardware stack levels required when called:    9
 35819 ;; This function calls:
 35820 ;;		_TMR_GetDeltaTime
 35821 ;; This function is called by:
 35822 ;;		_SwTimerReadValue
 35823 ;;		_SwTimerStart
 35824 ;; This function uses a non-reentrant model
 35825 ;;
 35826                           
 35827                           	psect	text191
 35828  004B6C                     __ptext191:
 35829                           	opt stack 0
 35830  004B6C                     _SwTimersInterrupt:
 35831                           	opt stack 17
 35832                           
 35833                           ;sw_timer.c: 289: uint8_t i;
 35834                           ;sw_timer.c: 290: uint32_t timeElapsed;
 35835                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 35836                           
 35837                           ; BSR set to: 0
 35838                           ;incstack = 0
 35839  004B6C  0100               	movlb	0	; () banked
 35840  004B6E  6988               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 35841  004B70  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 35842  004B72  698A               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 35843  004B74  698B               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 35844                           
 35845                           ; BSR set to: 0
 35846                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 35847  004B76  ECA4  F026         	call	_TMR_GetDeltaTime	;wreg free
 35848  004B7A  C06C  F084         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 35849  004B7E  C06D  F085         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 35850  004B82  C06E  F086         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 35851  004B86  C06F  F087         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 35852                           
 35853                           ; BSR set to: 0
 35854                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 35855  004B8A  6B8C               	clrf	SwTimersInterrupt@i& (0+255),b
 35856  004B8C  D05A               	goto	l12166
 35857  004B8E                     l12154:
 35858                           
 35859                           ; BSR set to: 0
 35860                           ;sw_timer.c: 298: {
 35861                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 35862  004B8E  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35863  004B90  0D08               	mullw	8
 35864  004B92  0E04               	movlw	low (_swTimers+4)
 35865  004B94  24F3               	addwf	prodl,w,c
 35866  004B96  6ED9               	movwf	fsr2l,c
 35867  004B98  0E03               	movlw	high (_swTimers+4)
 35868  004B9A  20F4               	addwfc	prodh,w,c
 35869  004B9C  6EDA               	movwf	fsr2h,c
 35870  004B9E  04DE               	decf	postinc2,w,c
 35871  004BA0  E14F               	bnz	l12164
 35872                           
 35873                           ; BSR set to: 0
 35874                           ;sw_timer.c: 302: {
 35875                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 35876  004BA2  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35877  004BA4  0D08               	mullw	8
 35878  004BA6  0E00               	movlw	low _swTimers
 35879  004BA8  24F3               	addwf	prodl,w,c
 35880  004BAA  6ED9               	movwf	fsr2l,c
 35881  004BAC  0E03               	movlw	high _swTimers
 35882  004BAE  20F4               	addwfc	prodh,w,c
 35883  004BB0  6EDA               	movwf	fsr2h,c
 35884  004BB2  50DE               	movf	postinc2,w,c
 35885  004BB4  5D84               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35886  004BB6  50DE               	movf	postinc2,w,c
 35887  004BB8  5985               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35888  004BBA  50DE               	movf	postinc2,w,c
 35889  004BBC  5986               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35890  004BBE  50DE               	movf	postinc2,w,c
 35891  004BC0  5987               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35892  004BC2  E30D               	bnc	l12160
 35893                           
 35894                           ; BSR set to: 0
 35895                           ;sw_timer.c: 304: {
 35896                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 35897  004BC4  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35898  004BC6  0D08               	mullw	8
 35899  004BC8  0E00               	movlw	low _swTimers
 35900  004BCA  24F3               	addwf	prodl,w,c
 35901  004BCC  6ED9               	movwf	fsr2l,c
 35902  004BCE  0E03               	movlw	high _swTimers
 35903  004BD0  20F4               	addwfc	prodh,w,c
 35904  004BD2  6EDA               	movwf	fsr2h,c
 35905  004BD4  6ADE               	clrf	postinc2,c
 35906  004BD6  6ADE               	clrf	postinc2,c
 35907  004BD8  6ADE               	clrf	postinc2,c
 35908  004BDA  6ADD               	clrf	postdec2,c
 35909                           
 35910                           ;sw_timer.c: 306: }
 35911  004BDC  D031               	goto	l12164
 35912  004BDE                     l12160:
 35913                           
 35914                           ; BSR set to: 0
 35915                           ;sw_timer.c: 307: else
 35916                           ;sw_timer.c: 308: {
 35917                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 35918  004BDE  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35919  004BE0  0D08               	mullw	8
 35920  004BE2  0E00               	movlw	low _swTimers
 35921  004BE4  24F3               	addwf	prodl,w,c
 35922  004BE6  6ED9               	movwf	fsr2l,c
 35923  004BE8  0E03               	movlw	high _swTimers
 35924  004BEA  20F4               	addwfc	prodh,w,c
 35925  004BEC  6EDA               	movwf	fsr2h,c
 35926  004BEE  5184               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35927  004BF0  5EDE               	subwf	postinc2,f,c
 35928  004BF2  5185               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35929  004BF4  5ADE               	subwfb	postinc2,f,c
 35930  004BF6  5186               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35931  004BF8  5ADE               	subwfb	postinc2,f,c
 35932  004BFA  5187               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35933  004BFC  5ADE               	subwfb	postinc2,f,c
 35934                           
 35935                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 35936  004BFE  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35937  004C00  0D08               	mullw	8
 35938  004C02  0E00               	movlw	low _swTimers
 35939  004C04  24F3               	addwf	prodl,w,c
 35940  004C06  6ED9               	movwf	fsr2l,c
 35941  004C08  0E03               	movlw	high _swTimers
 35942  004C0A  20F4               	addwfc	prodh,w,c
 35943  004C0C  6EDA               	movwf	fsr2h,c
 35944  004C0E  5188               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 35945  004C10  5CDE               	subwf	postinc2,w,c
 35946  004C12  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 35947  004C14  58DE               	subwfb	postinc2,w,c
 35948  004C16  518A               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 35949  004C18  58DE               	subwfb	postinc2,w,c
 35950  004C1A  518B               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 35951  004C1C  58DE               	subwfb	postinc2,w,c
 35952  004C1E  E210               	bc	l12164
 35953                           
 35954                           ; BSR set to: 0
 35955                           ;sw_timer.c: 313: {
 35956                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 35957  004C20  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35958  004C22  0D08               	mullw	8
 35959  004C24  0E00               	movlw	low _swTimers
 35960  004C26  24F3               	addwf	prodl,w,c
 35961  004C28  6ED9               	movwf	fsr2l,c
 35962  004C2A  0E03               	movlw	high _swTimers
 35963  004C2C  20F4               	addwfc	prodh,w,c
 35964  004C2E  6EDA               	movwf	fsr2h,c
 35965  004C30  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 35966  004C34  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 35967  004C38  CFDE F08A          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 35968  004C3C  CFDE F08B          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 35969  004C40                     l12164:
 35970                           
 35971                           ; BSR set to: 0
 35972  004C40  2B8C               	incf	SwTimersInterrupt@i& (0+255),f,b
 35973  004C42                     l12166:
 35974                           
 35975                           ; BSR set to: 0
 35976  004C42  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 35977  004C44  5D8C               	subwf	SwTimersInterrupt@i& (0+255),w,b
 35978  004C46  E3A3               	bnc	l12154
 35979                           
 35980                           ; BSR set to: 0
 35981                           ;sw_timer.c: 315: }
 35982                           ;sw_timer.c: 316: }
 35983                           ;sw_timer.c: 317: }
 35984                           ;sw_timer.c: 318: }
 35985                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 35986  004C48  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 35987  004C4C  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 35988  004C50  C08A  F07E         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 35989  004C54  C08B  F07F         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 35990                           
 35991                           ; BSR set to: 0
 35992  004C58  0012               	return		;funcret
 35993  004C5A                     __end_of_SwTimersInterrupt:
 35994                           	opt stack 0
 35995                           tosu	equ	0xFFF
 35996                           tosh	equ	0xFFE
 35997                           tosl	equ	0xFFD
 35998                           pclath	equ	0xFFA
 35999                           tblptru	equ	0xFF8
 36000                           tblptrh	equ	0xFF7
 36001                           tblptrl	equ	0xFF6
 36002                           tablat	equ	0xFF5
 36003                           prodh	equ	0xFF4
 36004                           prodl	equ	0xFF3
 36005                           intcon	equ	0xFF2
 36006                           intcon2	equ	0xFF1
 36007                           intcon3	equ	0xFF0
 36008                           indf0	equ	0xFEF
 36009                           postinc0	equ	0xFEE
 36010                           plusw0	equ	0xFEB
 36011                           fsr0h	equ	0xFEA
 36012                           fsr0l	equ	0xFE9
 36013                           wreg	equ	0xFE8
 36014                           postinc1	equ	0xFE6
 36015                           postdec1	equ	0xFE5
 36016                           plusw1	equ	0xFE3
 36017                           fsr1h	equ	0xFE2
 36018                           fsr1l	equ	0xFE1
 36019                           indf2	equ	0xFDF
 36020                           postinc2	equ	0xFDE
 36021                           postdec2	equ	0xFDD
 36022                           plusw2	equ	0xFDB
 36023                           fsr2h	equ	0xFDA
 36024                           fsr2l	equ	0xFD9
 36025                           status	equ	0xFD8
 36026                           
 36027 ;; *************** function _TMR_GetDeltaTime *****************
 36028 ;; Defined at:
 36029 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36030 ;; Parameters:    Size  Location     Type
 36031 ;;		None
 36032 ;; Auto vars:     Size  Location     Type
 36033 ;;		None
 36034 ;; Return value:  Size  Location     Type
 36035 ;;                  4   12[BANK0 ] unsigned long 
 36036 ;; Registers used:
 36037 ;;		wreg, status,2, status,0, cstack
 36038 ;; Tracked objects:
 36039 ;;		On entry : F/0
 36040 ;;		On exit  : F/0
 36041 ;;		Unchanged: 0/0
 36042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36045 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36046 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36047 ;;Total ram usage:       16 bytes
 36048 ;; Hardware stack levels used:    1
 36049 ;; Hardware stack levels required when called:    8
 36050 ;; This function calls:
 36051 ;;		_TMR1_ReadTimer
 36052 ;; This function is called by:
 36053 ;;		_SwTimersInterrupt
 36054 ;; This function uses a non-reentrant model
 36055 ;;
 36056                           
 36057                           	psect	text192
 36058  004D48                     __ptext192:
 36059                           	opt stack 0
 36060  004D48                     _TMR_GetDeltaTime:
 36061                           	opt stack 17
 36062                           
 36063                           ; BSR set to: 0
 36064                           ;sw_timer.c: 90: static uint32_t retVal;
 36065                           ;sw_timer.c: 91: static uint16_t tmrVal;
 36066                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 36067                           
 36068                           ; BSR set to: 0
 36069                           ;incstack = 0
 36070  004D48  EC7D  F03A         	call	_TMR1_ReadTimer	;wreg free
 36071  004D4C  C064  F03E         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 36072  004D50  C065  F03F         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 36073                           
 36074                           ; BSR set to: 0
 36075                           ;sw_timer.c: 95: if (timerOverflow == 1)
 36076  004D54  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 36077  004D56  E13D               	bnz	l11958
 36078                           
 36079                           ; BSR set to: 0
 36080                           ;sw_timer.c: 96: {
 36081                           ;sw_timer.c: 97: timerOverflow = 0;
 36082  004D58  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 36083                           
 36084                           ; BSR set to: 0
 36085                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 36086  004D5A  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36087  004D5C  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36088  004D5E  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36089  004D60  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36090  004D62  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36091  004D64  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36092  004D66  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36093  004D68  A0D8               	btfss	status,0,c
 36094  004D6A  0772               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36095  004D6C  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36096  004D6E  6F73               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36097  004D70  5036               	movf	_ticksAccounted,w,c	;volatile
 36098  004D72  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36099  004D74  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36100  004D76  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36101  004D78  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36102  004D7A  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36103  004D7C  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36104  004D7E  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36105  004D80  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36106  004D82  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36107  004D84  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36108  004D86  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36109  004D88  503A               	movf	_ticksAdded,w,c	;volatile
 36110  004D8A  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36111  004D8C  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 36112  004D8E  503B               	movf	_ticksAdded+1,w,c	;volatile
 36113  004D90  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36114  004D92  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 36115  004D94  503C               	movf	_ticksAdded+2,w,c	;volatile
 36116  004D96  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36117  004D98  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 36118  004D9A  503D               	movf	_ticksAdded+3,w,c	;volatile
 36119  004D9C  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36120  004D9E  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 36121  004DA0  0E00               	movlw	0
 36122  004DA2  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 36123  004DA4  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36124  004DA6  0E00               	movlw	0
 36125  004DA8  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 36126  004DAA  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36127  004DAC  0E01               	movlw	1
 36128  004DAE  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 36129  004DB0  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36130  004DB2  0E00               	movlw	0
 36131  004DB4  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 36132  004DB6  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36133                           
 36134                           ; BSR set to: 0
 36135                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 36136  004DB8  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 36137  004DBC  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 36138  004DC0  6A38               	clrf	_ticksAccounted+2,c	;volatile
 36139  004DC2  6A39               	clrf	_ticksAccounted+3,c	;volatile
 36140                           
 36141                           ; BSR set to: 0
 36142                           ;sw_timer.c: 100: ticksAdded = 0;
 36143  004DC4  6A3A               	clrf	_ticksAdded,c	;volatile
 36144  004DC6  6A3B               	clrf	_ticksAdded+1,c	;volatile
 36145  004DC8  6A3C               	clrf	_ticksAdded+2,c	;volatile
 36146  004DCA  6A3D               	clrf	_ticksAdded+3,c	;volatile
 36147                           
 36148                           ; BSR set to: 0
 36149                           ;sw_timer.c: 101: reloadVal = 0;
 36150  004DCC  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 36151  004DCE  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 36152                           
 36153                           ;sw_timer.c: 102: }
 36154  004DD0  D028               	goto	l11960
 36155  004DD2                     l11958:
 36156                           
 36157                           ; BSR set to: 0
 36158                           ;sw_timer.c: 103: else
 36159                           ;sw_timer.c: 104: {
 36160                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 36161  004DD2  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36162  004DD4  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36163  004DD6  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36164  004DD8  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36165  004DDA  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36166  004DDC  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36167  004DDE  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36168  004DE0  6B73               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36169  004DE2  5036               	movf	_ticksAccounted,w,c	;volatile
 36170  004DE4  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36171  004DE6  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36172  004DE8  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36173  004DEA  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36174  004DEC  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36175  004DEE  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36176  004DF0  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36177  004DF2  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36178  004DF4  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36179  004DF6  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36180  004DF8  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36181  004DFA  503A               	movf	_ticksAdded,w,c	;volatile
 36182  004DFC  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36183  004DFE  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36184  004E00  503B               	movf	_ticksAdded+1,w,c	;volatile
 36185  004E02  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36186  004E04  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36187  004E06  503C               	movf	_ticksAdded+2,w,c	;volatile
 36188  004E08  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36189  004E0A  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36190  004E0C  503D               	movf	_ticksAdded+3,w,c	;volatile
 36191  004E0E  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36192  004E10  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36193                           
 36194                           ;sw_timer.c: 106: ticksAccounted += retVal;
 36195  004E12  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 36196  004E14  2636               	addwf	_ticksAccounted,f,c	;volatile
 36197  004E16  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 36198  004E18  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 36199  004E1A  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 36200  004E1C  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 36201  004E1E  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 36202  004E20  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 36203  004E22                     l11960:
 36204                           
 36205                           ; BSR set to: 0
 36206                           ;sw_timer.c: 107: }
 36207                           ;sw_timer.c: 109: return retVal;
 36208  004E22  C032  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 36209  004E26  C033  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 36210  004E2A  C034  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 36211  004E2E  C035  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 36212                           
 36213                           ; BSR set to: 0
 36214  004E32  0012               	return		;funcret
 36215  004E34                     __end_of_TMR_GetDeltaTime:
 36216                           	opt stack 0
 36217                           tosu	equ	0xFFF
 36218                           tosh	equ	0xFFE
 36219                           tosl	equ	0xFFD
 36220                           pclath	equ	0xFFA
 36221                           tblptru	equ	0xFF8
 36222                           tblptrh	equ	0xFF7
 36223                           tblptrl	equ	0xFF6
 36224                           tablat	equ	0xFF5
 36225                           prodh	equ	0xFF4
 36226                           prodl	equ	0xFF3
 36227                           intcon	equ	0xFF2
 36228                           intcon2	equ	0xFF1
 36229                           intcon3	equ	0xFF0
 36230                           indf0	equ	0xFEF
 36231                           postinc0	equ	0xFEE
 36232                           plusw0	equ	0xFEB
 36233                           fsr0h	equ	0xFEA
 36234                           fsr0l	equ	0xFE9
 36235                           wreg	equ	0xFE8
 36236                           postinc1	equ	0xFE6
 36237                           postdec1	equ	0xFE5
 36238                           plusw1	equ	0xFE3
 36239                           fsr1h	equ	0xFE2
 36240                           fsr1l	equ	0xFE1
 36241                           indf2	equ	0xFDF
 36242                           postinc2	equ	0xFDE
 36243                           postdec2	equ	0xFDD
 36244                           plusw2	equ	0xFDB
 36245                           fsr2h	equ	0xFDA
 36246                           fsr2l	equ	0xFD9
 36247                           status	equ	0xFD8
 36248                           
 36249 ;; *************** function _TMR1_ReadTimer *****************
 36250 ;; Defined at:
 36251 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 36252 ;; Parameters:    Size  Location     Type
 36253 ;;		None
 36254 ;; Auto vars:     Size  Location     Type
 36255 ;;  readVal         2    8[BANK0 ] unsigned int 
 36256 ;;  readValLow      1   11[BANK0 ] unsigned char 
 36257 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 36258 ;; Return value:  Size  Location     Type
 36259 ;;                  2    4[BANK0 ] unsigned int 
 36260 ;; Registers used:
 36261 ;;		wreg, status,2
 36262 ;; Tracked objects:
 36263 ;;		On entry : F/0
 36264 ;;		On exit  : F/0
 36265 ;;		Unchanged: 0/0
 36266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36270 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36271 ;;Total ram usage:        8 bytes
 36272 ;; Hardware stack levels used:    1
 36273 ;; Hardware stack levels required when called:    7
 36274 ;; This function calls:
 36275 ;;		Nothing
 36276 ;; This function is called by:
 36277 ;;		_TMR_GetDeltaTime
 36278 ;;		_TMR_SwapTimer
 36279 ;; This function uses a non-reentrant model
 36280 ;;
 36281                           
 36282                           	psect	text193
 36283  0074FA                     __ptext193:
 36284                           	opt stack 0
 36285  0074FA                     _TMR1_ReadTimer:
 36286                           	opt stack 17
 36287                           
 36288                           ; BSR set to: 0
 36289                           ;tmr1.c: 108: uint16_t readVal;
 36290                           ;tmr1.c: 109: uint8_t readValHigh;
 36291                           ;tmr1.c: 110: uint8_t readValLow;
 36292                           ;tmr1.c: 112: readValLow = TMR1L;
 36293                           
 36294                           ; BSR set to: 0
 36295                           ;incstack = 0
 36296  0074FA  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 36297                           
 36298                           ;tmr1.c: 113: readValHigh = TMR1H;
 36299  0074FE  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 36300                           
 36301                           ; BSR set to: 0
 36302                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 36303  007502  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 36304  007504  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 36305  007506  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 36306  007508  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 36307  00750A  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 36308                           
 36309                           ; BSR set to: 0
 36310                           ;tmr1.c: 117: return readVal;
 36311  00750E  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 36312  007512  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 36313                           
 36314                           ; BSR set to: 0
 36315  007516  0012               	return		;funcret
 36316  007518                     __end_of_TMR1_ReadTimer:
 36317                           	opt stack 0
 36318                           tosu	equ	0xFFF
 36319                           tosh	equ	0xFFE
 36320                           tosl	equ	0xFFD
 36321                           pclath	equ	0xFFA
 36322                           tblptru	equ	0xFF8
 36323                           tblptrh	equ	0xFF7
 36324                           tblptrl	equ	0xFF6
 36325                           tablat	equ	0xFF5
 36326                           prodh	equ	0xFF4
 36327                           prodl	equ	0xFF3
 36328                           intcon	equ	0xFF2
 36329                           intcon2	equ	0xFF1
 36330                           intcon3	equ	0xFF0
 36331                           indf0	equ	0xFEF
 36332                           postinc0	equ	0xFEE
 36333                           plusw0	equ	0xFEB
 36334                           fsr0h	equ	0xFEA
 36335                           fsr0l	equ	0xFE9
 36336                           wreg	equ	0xFE8
 36337                           postinc1	equ	0xFE6
 36338                           postdec1	equ	0xFE5
 36339                           plusw1	equ	0xFE3
 36340                           fsr1h	equ	0xFE2
 36341                           fsr1l	equ	0xFE1
 36342                           indf2	equ	0xFDF
 36343                           postinc2	equ	0xFDE
 36344                           postdec2	equ	0xFDD
 36345                           plusw2	equ	0xFDB
 36346                           fsr2h	equ	0xFDA
 36347                           fsr2l	equ	0xFD9
 36348                           status	equ	0xFD8
 36349                           
 36350 ;; *************** function _SwTimerSetTimeout *****************
 36351 ;; Defined at:
 36352 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36353 ;; Parameters:    Size  Location     Type
 36354 ;;  timerId         1    wreg     unsigned char 
 36355 ;;  timeout         4   17[BANK0 ] unsigned long 
 36356 ;; Auto vars:     Size  Location     Type
 36357 ;;  timerId         1   25[BANK0 ] unsigned char 
 36358 ;; Return value:  Size  Location     Type
 36359 ;;                  1    wreg      void 
 36360 ;; Registers used:
 36361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36362 ;; Tracked objects:
 36363 ;;		On entry : C/2
 36364 ;;		On exit  : F/0
 36365 ;;		Unchanged: 0/0
 36366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36367 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36369 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36370 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36371 ;;Total ram usage:        9 bytes
 36372 ;; Hardware stack levels used:    1
 36373 ;; Hardware stack levels required when called:    7
 36374 ;; This function calls:
 36375 ;;		Nothing
 36376 ;; This function is called by:
 36377 ;;		_RADIO_Transmit
 36378 ;;		_RADIO_ReceiveStart
 36379 ;;		_LORAWAN_TxDone
 36380 ;;		_LORAWAN_RxTimeout
 36381 ;;		_StartReTxTimer
 36382 ;;		_DutyCycleCallback
 36383 ;;		_LORAWAN_Join
 36384 ;;		_LORAWAN_LinkCheckConfigure
 36385 ;;		_LORAWAN_LinkCheckCallback
 36386 ;;		_UpdateRetransmissionAckTimeoutState
 36387 ;;		_UpdateJoinSuccessState
 36388 ;; This function uses a non-reentrant model
 36389 ;;
 36390                           
 36391                           	psect	text194
 36392  006CEA                     __ptext194:
 36393                           	opt stack 0
 36394  006CEA                     _SwTimerSetTimeout:
 36395                           	opt stack 20
 36396                           
 36397                           ; BSR set to: 0
 36398                           ;incstack = 0
 36399                           ;SwTimerSetTimeout@timerId stored from wreg
 36400  006CEA  0100               	movlb	0	; () banked
 36401  006CEC  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 36402                           
 36403                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 36404  006CEE  9EF2               	bcf	intcon,7,c	;volatile
 36405                           
 36406                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 36407  006CF0  0EE0               	movlw	224
 36408  006CF2  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 36409  006CF4  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 36410  006CF6  0EFF               	movlw	255
 36411  006CF8  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 36412  006CFA  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 36413  006CFC  0EFF               	movlw	255
 36414  006CFE  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 36415  006D00  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 36416  006D02  0EFF               	movlw	255
 36417  006D04  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 36418  006D06  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 36419  006D08  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 36420  006D0A  0D08               	mullw	8
 36421  006D0C  0E00               	movlw	low _swTimers
 36422  006D0E  24F3               	addwf	prodl,w,c
 36423  006D10  6ED9               	movwf	fsr2l,c
 36424  006D12  0E03               	movlw	high _swTimers
 36425  006D14  20F4               	addwfc	prodh,w,c
 36426  006D16  6EDA               	movwf	fsr2h,c
 36427  006D18  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 36428  006D1C  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 36429  006D20  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 36430  006D24  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 36431                           
 36432                           ; BSR set to: 0
 36433                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 36434  006D28  8EF2               	bsf	intcon,7,c	;volatile
 36435                           
 36436                           ; BSR set to: 0
 36437  006D2A  0012               	return		;funcret
 36438  006D2C                     __end_of_SwTimerSetTimeout:
 36439                           	opt stack 0
 36440                           tosu	equ	0xFFF
 36441                           tosh	equ	0xFFE
 36442                           tosl	equ	0xFFD
 36443                           pclath	equ	0xFFA
 36444                           tblptru	equ	0xFF8
 36445                           tblptrh	equ	0xFF7
 36446                           tblptrl	equ	0xFF6
 36447                           tablat	equ	0xFF5
 36448                           prodh	equ	0xFF4
 36449                           prodl	equ	0xFF3
 36450                           intcon	equ	0xFF2
 36451                           intcon2	equ	0xFF1
 36452                           intcon3	equ	0xFF0
 36453                           indf0	equ	0xFEF
 36454                           postinc0	equ	0xFEE
 36455                           plusw0	equ	0xFEB
 36456                           fsr0h	equ	0xFEA
 36457                           fsr0l	equ	0xFE9
 36458                           wreg	equ	0xFE8
 36459                           postinc1	equ	0xFE6
 36460                           postdec1	equ	0xFE5
 36461                           plusw1	equ	0xFE3
 36462                           fsr1h	equ	0xFE2
 36463                           fsr1l	equ	0xFE1
 36464                           indf2	equ	0xFDF
 36465                           postinc2	equ	0xFDE
 36466                           postdec2	equ	0xFDD
 36467                           plusw2	equ	0xFDB
 36468                           fsr2h	equ	0xFDA
 36469                           fsr2l	equ	0xFD9
 36470                           status	equ	0xFD8
 36471                           
 36472 ;; *************** function _InitDefault868Channels *****************
 36473 ;; Defined at:
 36474 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36475 ;; Parameters:    Size  Location     Type
 36476 ;;		None
 36477 ;; Auto vars:     Size  Location     Type
 36478 ;;  i               1   14[BANK0 ] unsigned char 
 36479 ;; Return value:  Size  Location     Type
 36480 ;;                  1    wreg      void 
 36481 ;; Registers used:
 36482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36483 ;; Tracked objects:
 36484 ;;		On entry : F/1
 36485 ;;		On exit  : F/0
 36486 ;;		Unchanged: 0/0
 36487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36491 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36492 ;;Total ram usage:        1 bytes
 36493 ;; Hardware stack levels used:    1
 36494 ;; Hardware stack levels required when called:    8
 36495 ;; This function calls:
 36496 ;;		_memcpy
 36497 ;;		_memset
 36498 ;; This function is called by:
 36499 ;;		_LORAWAN_Reset
 36500 ;; This function uses a non-reentrant model
 36501 ;;
 36502                           
 36503                           	psect	text195
 36504  00639E                     __ptext195:
 36505                           	opt stack 0
 36506  00639E                     _InitDefault868Channels:
 36507                           	opt stack 20
 36508                           
 36509                           ; BSR set to: 1
 36510                           ;lorawan_eu.c: 981: uint8_t i;
 36511                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 36512                           
 36513                           ; BSR set to: 0
 36514                           ;incstack = 0
 36515  00639E  0E00               	movlw	low _Channels
 36516  0063A0  0100               	movlb	0	; () banked
 36517  0063A2  6F64               	movwf	memset@p1& (0+255),b
 36518  0063A4  0E04               	movlw	high _Channels
 36519  0063A6  6F65               	movwf	(memset@p1+1)& (0+255),b
 36520  0063A8  6B67               	clrf	(memset@c+1)& (0+255),b
 36521  0063AA  6B66               	clrf	memset@c& (0+255),b
 36522  0063AC  6B69               	clrf	(memset@n+1)& (0+255),b
 36523  0063AE  0EE0               	movlw	224
 36524  0063B0  6F68               	movwf	memset@n& (0+255),b
 36525  0063B2  EC20  F039         	call	_memset	;wreg free
 36526                           
 36527                           ; BSR set to: 0
 36528                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 36529  0063B6  0E00               	movlw	low _Channels
 36530  0063B8  6F64               	movwf	memcpy@d1& (0+255),b
 36531  0063BA  0E04               	movlw	high _Channels
 36532  0063BC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36533  0063BE  0ED2               	movlw	low _DefaultChannels868
 36534  0063C0  6F66               	movwf	memcpy@s1& (0+255),b
 36535  0063C2  0EFF               	movlw	high _DefaultChannels868
 36536  0063C4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36537  0063C6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36538  0063C8  0E2A               	movlw	42
 36539  0063CA  6F68               	movwf	memcpy@n& (0+255),b
 36540  0063CC  EC14  F034         	call	_memcpy	;wreg free
 36541                           
 36542                           ; BSR set to: 0
 36543                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 36544  0063D0  0E03               	movlw	3
 36545  0063D2  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 36546  0063D4                     l14974:
 36547                           
 36548                           ; BSR set to: 0
 36549                           ;lorawan_eu.c: 986: {
 36550                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 36551  0063D4  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36552  0063D6  0D0E               	mullw	14
 36553  0063D8  0E06               	movlw	low (_Channels+6)
 36554  0063DA  24F3               	addwf	prodl,w,c
 36555  0063DC  6ED9               	movwf	fsr2l,c
 36556  0063DE  0E04               	movlw	high (_Channels+6)
 36557  0063E0  20F4               	addwfc	prodh,w,c
 36558  0063E2  6EDA               	movwf	fsr2h,c
 36559  0063E4  68DE               	setf	postinc2,c
 36560  0063E6  68DD               	setf	postdec2,c
 36561                           
 36562                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 36563  0063E8  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36564  0063EA  0D0E               	mullw	14
 36565  0063EC  0E05               	movlw	low (_Channels+5)
 36566  0063EE  24F3               	addwf	prodl,w,c
 36567  0063F0  6ED9               	movwf	fsr2l,c
 36568  0063F2  0E04               	movlw	high (_Channels+5)
 36569  0063F4  20F4               	addwfc	prodh,w,c
 36570  0063F6  6EDA               	movwf	fsr2h,c
 36571  0063F8  68DF               	setf	indf2,c
 36572                           
 36573                           ; BSR set to: 0
 36574  0063FA  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 36575                           
 36576                           ; BSR set to: 0
 36577  0063FC  0E0F               	movlw	15
 36578  0063FE  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 36579  006400  D7E9               	goto	l14974
 36580  006402  0C0F               	retlw	15
 36581  006404                     __end_of_InitDefault868Channels:
 36582                           	opt stack 0
 36583                           tosu	equ	0xFFF
 36584                           tosh	equ	0xFFE
 36585                           tosl	equ	0xFFD
 36586                           pclath	equ	0xFFA
 36587                           tblptru	equ	0xFF8
 36588                           tblptrh	equ	0xFF7
 36589                           tblptrl	equ	0xFF6
 36590                           tablat	equ	0xFF5
 36591                           prodh	equ	0xFF4
 36592                           prodl	equ	0xFF3
 36593                           intcon	equ	0xFF2
 36594                           intcon2	equ	0xFF1
 36595                           intcon3	equ	0xFF0
 36596                           indf0	equ	0xFEF
 36597                           postinc0	equ	0xFEE
 36598                           plusw0	equ	0xFEB
 36599                           fsr0h	equ	0xFEA
 36600                           fsr0l	equ	0xFE9
 36601                           wreg	equ	0xFE8
 36602                           postinc1	equ	0xFE6
 36603                           postdec1	equ	0xFE5
 36604                           plusw1	equ	0xFE3
 36605                           fsr1h	equ	0xFE2
 36606                           fsr1l	equ	0xFE1
 36607                           indf2	equ	0xFDF
 36608                           postinc2	equ	0xFDE
 36609                           postdec2	equ	0xFDD
 36610                           plusw2	equ	0xFDB
 36611                           fsr2h	equ	0xFDA
 36612                           fsr2l	equ	0xFD9
 36613                           status	equ	0xFD8
 36614                           
 36615 ;; *************** function _InitDefault433Channels *****************
 36616 ;; Defined at:
 36617 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36618 ;; Parameters:    Size  Location     Type
 36619 ;;		None
 36620 ;; Auto vars:     Size  Location     Type
 36621 ;;  i               1   14[BANK0 ] unsigned char 
 36622 ;; Return value:  Size  Location     Type
 36623 ;;                  1    wreg      void 
 36624 ;; Registers used:
 36625 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36626 ;; Tracked objects:
 36627 ;;		On entry : F/1
 36628 ;;		On exit  : F/0
 36629 ;;		Unchanged: 0/0
 36630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36632 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36635 ;;Total ram usage:        1 bytes
 36636 ;; Hardware stack levels used:    1
 36637 ;; Hardware stack levels required when called:    8
 36638 ;; This function calls:
 36639 ;;		_memcpy
 36640 ;;		_memset
 36641 ;; This function is called by:
 36642 ;;		_LORAWAN_Reset
 36643 ;; This function uses a non-reentrant model
 36644 ;;
 36645                           
 36646                           	psect	text196
 36647  006404                     __ptext196:
 36648                           	opt stack 0
 36649  006404                     _InitDefault433Channels:
 36650                           	opt stack 20
 36651                           
 36652                           ; BSR set to: 1
 36653                           ;lorawan_eu.c: 996: uint8_t i;
 36654                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 36655                           
 36656                           ; BSR set to: 0
 36657                           ;incstack = 0
 36658  006404  0E00               	movlw	low _Channels
 36659  006406  0100               	movlb	0	; () banked
 36660  006408  6F64               	movwf	memset@p1& (0+255),b
 36661  00640A  0E04               	movlw	high _Channels
 36662  00640C  6F65               	movwf	(memset@p1+1)& (0+255),b
 36663  00640E  6B67               	clrf	(memset@c+1)& (0+255),b
 36664  006410  6B66               	clrf	memset@c& (0+255),b
 36665  006412  6B69               	clrf	(memset@n+1)& (0+255),b
 36666  006414  0EE0               	movlw	224
 36667  006416  6F68               	movwf	memset@n& (0+255),b
 36668  006418  EC20  F039         	call	_memset	;wreg free
 36669                           
 36670                           ; BSR set to: 0
 36671                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 36672  00641C  0E00               	movlw	low _Channels
 36673  00641E  6F64               	movwf	memcpy@d1& (0+255),b
 36674  006420  0E04               	movlw	high _Channels
 36675  006422  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36676  006424  0EA8               	movlw	low _DefaultChannels433
 36677  006426  6F66               	movwf	memcpy@s1& (0+255),b
 36678  006428  0EFF               	movlw	high _DefaultChannels433
 36679  00642A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36680  00642C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36681  00642E  0E2A               	movlw	42
 36682  006430  6F68               	movwf	memcpy@n& (0+255),b
 36683  006432  EC14  F034         	call	_memcpy	;wreg free
 36684                           
 36685                           ; BSR set to: 0
 36686                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 36687  006436  0E03               	movlw	3
 36688  006438  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 36689  00643A                     l14990:
 36690                           
 36691                           ; BSR set to: 0
 36692                           ;lorawan_eu.c: 1001: {
 36693                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 36694  00643A  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36695  00643C  0D0E               	mullw	14
 36696  00643E  0E06               	movlw	low (_Channels+6)
 36697  006440  24F3               	addwf	prodl,w,c
 36698  006442  6ED9               	movwf	fsr2l,c
 36699  006444  0E04               	movlw	high (_Channels+6)
 36700  006446  20F4               	addwfc	prodh,w,c
 36701  006448  6EDA               	movwf	fsr2h,c
 36702  00644A  68DE               	setf	postinc2,c
 36703  00644C  68DD               	setf	postdec2,c
 36704                           
 36705                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 36706  00644E  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36707  006450  0D0E               	mullw	14
 36708  006452  0E05               	movlw	low (_Channels+5)
 36709  006454  24F3               	addwf	prodl,w,c
 36710  006456  6ED9               	movwf	fsr2l,c
 36711  006458  0E04               	movlw	high (_Channels+5)
 36712  00645A  20F4               	addwfc	prodh,w,c
 36713  00645C  6EDA               	movwf	fsr2h,c
 36714  00645E  68DF               	setf	indf2,c
 36715                           
 36716                           ; BSR set to: 0
 36717  006460  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 36718                           
 36719                           ; BSR set to: 0
 36720  006462  0E0F               	movlw	15
 36721  006464  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 36722  006466  D7E9               	goto	l14990
 36723  006468  0C0F               	retlw	15
 36724  00646A                     __end_of_InitDefault433Channels:
 36725                           	opt stack 0
 36726                           tosu	equ	0xFFF
 36727                           tosh	equ	0xFFE
 36728                           tosl	equ	0xFFD
 36729                           pclath	equ	0xFFA
 36730                           tblptru	equ	0xFF8
 36731                           tblptrh	equ	0xFF7
 36732                           tblptrl	equ	0xFF6
 36733                           tablat	equ	0xFF5
 36734                           prodh	equ	0xFF4
 36735                           prodl	equ	0xFF3
 36736                           intcon	equ	0xFF2
 36737                           intcon2	equ	0xFF1
 36738                           intcon3	equ	0xFF0
 36739                           indf0	equ	0xFEF
 36740                           postinc0	equ	0xFEE
 36741                           plusw0	equ	0xFEB
 36742                           fsr0h	equ	0xFEA
 36743                           fsr0l	equ	0xFE9
 36744                           wreg	equ	0xFE8
 36745                           postinc1	equ	0xFE6
 36746                           postdec1	equ	0xFE5
 36747                           plusw1	equ	0xFE3
 36748                           fsr1h	equ	0xFE2
 36749                           fsr1l	equ	0xFE1
 36750                           indf2	equ	0xFDF
 36751                           postinc2	equ	0xFDE
 36752                           postdec2	equ	0xFDD
 36753                           plusw2	equ	0xFDB
 36754                           fsr2h	equ	0xFDA
 36755                           fsr2l	equ	0xFD9
 36756                           status	equ	0xFD8
 36757                           
 36758 ;; *************** function _memset *****************
 36759 ;; Defined at:
 36760 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 36761 ;; Parameters:    Size  Location     Type
 36762 ;;  p1              2    4[BANK0 ] PTR void 
 36763 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36764 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36765 ;;  c               2    6[BANK0 ] int 
 36766 ;;  n               2    8[BANK0 ] unsigned int 
 36767 ;; Auto vars:     Size  Location     Type
 36768 ;;  p               2   10[BANK0 ] PTR unsigned char 
 36769 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36770 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36771 ;; Return value:  Size  Location     Type
 36772 ;;                  2    4[BANK0 ] PTR void 
 36773 ;; Registers used:
 36774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36775 ;; Tracked objects:
 36776 ;;		On entry : F/0
 36777 ;;		On exit  : F/0
 36778 ;;		Unchanged: 0/0
 36779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36781 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36783 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36784 ;;Total ram usage:        8 bytes
 36785 ;; Hardware stack levels used:    1
 36786 ;; Hardware stack levels required when called:    7
 36787 ;; This function calls:
 36788 ;;		Nothing
 36789 ;; This function is called by:
 36790 ;;		_LORAWAN_Reset
 36791 ;;		_InitDefault868Channels
 36792 ;;		_InitDefault433Channels
 36793 ;;		_AESCmac
 36794 ;;		_GenerateSubkey
 36795 ;;		_AssemblePacket
 36796 ;;		_PrepareJoinRequestFrame
 36797 ;;		_PrepareSessionKeys
 36798 ;;		_AssembleEncryptionBlock
 36799 ;; This function uses a non-reentrant model
 36800 ;;
 36801                           
 36802                           	psect	text197
 36803  007240                     __ptext197:
 36804                           	opt stack 0
 36805  007240                     _memset:
 36806                           	opt stack 20
 36807                           
 36808                           ; BSR set to: 0
 36809                           
 36810                           ; BSR set to: 0
 36811                           ;incstack = 0
 36812  007240  C064  F06A         	movff	memset@p1,memset@p
 36813  007244  C065  F06B         	movff	memset@p1+1,memset@p+1
 36814  007248  D008               	goto	l12364
 36815  00724A                     l12360:
 36816                           
 36817                           ; BSR set to: 0
 36818  00724A  C06A  FFD9         	movff	memset@p,fsr2l
 36819  00724E  C06B  FFDA         	movff	memset@p+1,fsr2h
 36820  007252  C066  FFDF         	movff	memset@c,indf2
 36821                           
 36822                           ; BSR set to: 0
 36823  007256  4B6A               	infsnz	memset@p& (0+255),f,b
 36824  007258  2B6B               	incf	(memset@p+1)& (0+255),f,b
 36825  00725A                     l12364:
 36826                           
 36827                           ; BSR set to: 0
 36828  00725A  0768               	decf	memset@n& (0+255),f,b
 36829  00725C  A0D8               	btfss	status,0,c
 36830  00725E  0769               	decf	(memset@n+1)& (0+255),f,b
 36831  007260  2968               	incf	memset@n& (0+255),w,b
 36832  007262  E1F3               	bnz	l12360
 36833  007264  2969               	incf	(memset@n+1)& (0+255),w,b
 36834  007266  E1F1               	bnz	l12360
 36835                           
 36836                           ; BSR set to: 0
 36837  007268  0012               	return		;funcret
 36838  00726A                     __end_of_memset:
 36839                           	opt stack 0
 36840                           tosu	equ	0xFFF
 36841                           tosh	equ	0xFFE
 36842                           tosl	equ	0xFFD
 36843                           pclath	equ	0xFFA
 36844                           tblptru	equ	0xFF8
 36845                           tblptrh	equ	0xFF7
 36846                           tblptrl	equ	0xFF6
 36847                           tablat	equ	0xFF5
 36848                           prodh	equ	0xFF4
 36849                           prodl	equ	0xFF3
 36850                           intcon	equ	0xFF2
 36851                           intcon2	equ	0xFF1
 36852                           intcon3	equ	0xFF0
 36853                           indf0	equ	0xFEF
 36854                           postinc0	equ	0xFEE
 36855                           plusw0	equ	0xFEB
 36856                           fsr0h	equ	0xFEA
 36857                           fsr0l	equ	0xFE9
 36858                           wreg	equ	0xFE8
 36859                           postinc1	equ	0xFE6
 36860                           postdec1	equ	0xFE5
 36861                           plusw1	equ	0xFE3
 36862                           fsr1h	equ	0xFE2
 36863                           fsr1l	equ	0xFE1
 36864                           indf2	equ	0xFDF
 36865                           postinc2	equ	0xFDE
 36866                           postdec2	equ	0xFDD
 36867                           plusw2	equ	0xFDB
 36868                           fsr2h	equ	0xFDA
 36869                           fsr2l	equ	0xFD9
 36870                           status	equ	0xFD8
 36871                           
 36872 ;; *************** function _memcpy *****************
 36873 ;; Defined at:
 36874 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 36875 ;; Parameters:    Size  Location     Type
 36876 ;;  d1              2    4[BANK0 ] PTR void 
 36877 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36878 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36879 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36880 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36881 ;;  s1              2    6[BANK0 ] PTR const void 
 36882 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36883 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36884 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36885 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36886 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36887 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36888 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36889 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36890 ;;		 -> NULL(0), 
 36891 ;;  n               2    8[BANK0 ] unsigned int 
 36892 ;; Auto vars:     Size  Location     Type
 36893 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 36894 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36895 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36896 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36897 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36898 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36899 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36900 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36901 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36902 ;;		 -> NULL(0), 
 36903 ;;  d               2   10[BANK0 ] PTR unsigned char 
 36904 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36905 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36906 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36907 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36908 ;; Return value:  Size  Location     Type
 36909 ;;                  2    4[BANK0 ] PTR void 
 36910 ;; Registers used:
 36911 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36912 ;; Tracked objects:
 36913 ;;		On entry : F/0
 36914 ;;		On exit  : F/0
 36915 ;;		Unchanged: 0/0
 36916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36917 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36918 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36920 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36921 ;;Total ram usage:       10 bytes
 36922 ;; Hardware stack levels used:    1
 36923 ;; Hardware stack levels required when called:    7
 36924 ;; This function calls:
 36925 ;;		Nothing
 36926 ;; This function is called by:
 36927 ;;		_RADIO_SetFSKSyncWord
 36928 ;;		_UpdateCfList
 36929 ;;		_InitDefault868Channels
 36930 ;;		_InitDefault433Channels
 36931 ;;		_AESCmac
 36932 ;;		_LORAWAN_SetNetworkSessionKey
 36933 ;;		_LORAWAN_SetApplicationSessionKey
 36934 ;;		_LORAWAN_RxDone
 36935 ;;		_AssemblePacket
 36936 ;;		_PrepareJoinRequestFrame
 36937 ;;		_PrepareSessionKeys
 36938 ;;		_AssembleEncryptionBlock
 36939 ;;		_ExtractMic
 36940 ;;		_ComputeMic
 36941 ;;		_AESEncodeLoRa
 36942 ;; This function uses a non-reentrant model
 36943 ;;
 36944                           
 36945                           	psect	text198
 36946  006828                     __ptext198:
 36947                           	opt stack 0
 36948  006828                     _memcpy:
 36949                           	opt stack 17
 36950                           
 36951                           ; BSR set to: 0
 36952                           
 36953                           ; BSR set to: 0
 36954                           ;incstack = 0
 36955  006828  C066  F06C         	movff	memcpy@s1,memcpy@s
 36956  00682C  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 36957  006830  C064  F06A         	movff	memcpy@d1,memcpy@d
 36958  006834  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 36959  006838  D01B               	goto	l12006
 36960  00683A                     l12000:
 36961                           
 36962                           ; BSR set to: 0
 36963  00683A  C06C  FFF6         	movff	memcpy@s,tblptrl
 36964  00683E  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 36965  006842  0E00               	movlw	low (__mediumconst shr (0+16))
 36966  006844  6EF8               	movwf	tblptru,c
 36967  006846  C06A  FFD9         	movff	memcpy@d,fsr2l
 36968  00684A  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 36969  00684E  0E0F               	movlw	(high __ramtop+-1)
 36970  006850  64F7               	cpfsgt	tblptrh,c
 36971  006852  D003               	bra	u12627
 36972  006854  0008               	tblrd		*
 36973  006856  50F5               	movf	tablat,w,c
 36974  006858  D005               	bra	u12620
 36975  00685A                     u12627:
 36976  00685A  CFF6 FFE9          	movff	tblptrl,fsr0l
 36977  00685E  CFF7 FFEA          	movff	tblptrh,fsr0h
 36978  006862  50EF               	movf	indf0,w,c
 36979  006864                     u12620:
 36980  006864  6EDF               	movwf	indf2,c
 36981  006866  0100               	movlb	0	; () banked
 36982  006868  4B6C               	infsnz	memcpy@s& (0+255),f,b
 36983  00686A  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 36984                           
 36985                           ; BSR set to: 0
 36986  00686C  4B6A               	infsnz	memcpy@d& (0+255),f,b
 36987  00686E  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 36988  006870                     l12006:
 36989                           
 36990                           ; BSR set to: 0
 36991  006870  0768               	decf	memcpy@n& (0+255),f,b
 36992  006872  A0D8               	btfss	status,0,c
 36993  006874  0769               	decf	(memcpy@n+1)& (0+255),f,b
 36994  006876  2968               	incf	memcpy@n& (0+255),w,b
 36995  006878  E1E0               	bnz	l12000
 36996  00687A  2969               	incf	(memcpy@n+1)& (0+255),w,b
 36997  00687C  E1DE               	bnz	l12000
 36998                           
 36999                           ; BSR set to: 0
 37000  00687E  0012               	return		;funcret
 37001  006880                     __end_of_memcpy:
 37002                           	opt stack 0
 37003                           tosu	equ	0xFFF
 37004                           tosh	equ	0xFFE
 37005                           tosl	equ	0xFFD
 37006                           pclath	equ	0xFFA
 37007                           tblptru	equ	0xFF8
 37008                           tblptrh	equ	0xFF7
 37009                           tblptrl	equ	0xFF6
 37010                           tablat	equ	0xFF5
 37011                           prodh	equ	0xFF4
 37012                           prodl	equ	0xFF3
 37013                           intcon	equ	0xFF2
 37014                           intcon2	equ	0xFF1
 37015                           intcon3	equ	0xFF0
 37016                           indf0	equ	0xFEF
 37017                           postinc0	equ	0xFEE
 37018                           plusw0	equ	0xFEB
 37019                           fsr0h	equ	0xFEA
 37020                           fsr0l	equ	0xFE9
 37021                           wreg	equ	0xFE8
 37022                           postinc1	equ	0xFE6
 37023                           postdec1	equ	0xFE5
 37024                           plusw1	equ	0xFE3
 37025                           fsr1h	equ	0xFE2
 37026                           fsr1l	equ	0xFE1
 37027                           indf2	equ	0xFDF
 37028                           postinc2	equ	0xFDE
 37029                           postdec2	equ	0xFDD
 37030                           plusw2	equ	0xFDB
 37031                           fsr2h	equ	0xFDA
 37032                           fsr2l	equ	0xFD9
 37033                           status	equ	0xFD8
 37034                           
 37035 ;; *************** function _CreateAllSoftwareTimers *****************
 37036 ;; Defined at:
 37037 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37038 ;; Parameters:    Size  Location     Type
 37039 ;;		None
 37040 ;; Auto vars:     Size  Location     Type
 37041 ;;		None
 37042 ;; Return value:  Size  Location     Type
 37043 ;;                  1    wreg      void 
 37044 ;; Registers used:
 37045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37046 ;; Tracked objects:
 37047 ;;		On entry : F/2
 37048 ;;		On exit  : F/2
 37049 ;;		Unchanged: 0/0
 37050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37055 ;;Total ram usage:        0 bytes
 37056 ;; Hardware stack levels used:    1
 37057 ;; Hardware stack levels required when called:    8
 37058 ;; This function calls:
 37059 ;;		_SwTimerCreate
 37060 ;; This function is called by:
 37061 ;;		_LORAWAN_Init
 37062 ;; This function uses a non-reentrant model
 37063 ;;
 37064                           
 37065                           	psect	text199
 37066  006924                     __ptext199:
 37067                           	opt stack 0
 37068  006924                     _CreateAllSoftwareTimers:
 37069                           	opt stack 21
 37070                           
 37071                           ; BSR set to: 2
 37072                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 37073                           
 37074                           ; BSR set to: 0
 37075                           ;incstack = 0
 37076  006924  EC34  F031         	call	_SwTimerCreate	;wreg free
 37077  006928  0102               	movlb	2	; () banked
 37078  00692A  6FE2               	movwf	(_loRa+226)& (0+255),b
 37079                           
 37080                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 37081  00692C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37082  006930  0102               	movlb	2	; () banked
 37083  006932  6FE3               	movwf	(_loRa+227)& (0+255),b
 37084                           
 37085                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 37086  006934  EC34  F031         	call	_SwTimerCreate	;wreg free
 37087  006938  0102               	movlb	2	; () banked
 37088  00693A  6FE4               	movwf	(_loRa+228)& (0+255),b
 37089                           
 37090                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 37091  00693C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37092  006940  0102               	movlb	2	; () banked
 37093  006942  6FE5               	movwf	(_loRa+229)& (0+255),b
 37094                           
 37095                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 37096  006944  EC34  F031         	call	_SwTimerCreate	;wreg free
 37097  006948  0102               	movlb	2	; () banked
 37098  00694A  6FE7               	movwf	(_loRa+231)& (0+255),b
 37099                           
 37100                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 37101  00694C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37102  006950  0102               	movlb	2	; () banked
 37103  006952  6FE8               	movwf	(_loRa+232)& (0+255),b
 37104                           
 37105                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 37106  006954  EC34  F031         	call	_SwTimerCreate	;wreg free
 37107  006958  0102               	movlb	2	; () banked
 37108  00695A  6FE6               	movwf	(_loRa+230)& (0+255),b
 37109                           
 37110                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 37111  00695C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37112  006960  0102               	movlb	2	; () banked
 37113  006962  6FEA               	movwf	(_loRa+234)& (0+255),b
 37114                           
 37115                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 37116  006964  EC34  F031         	call	_SwTimerCreate	;wreg free
 37117  006968  0102               	movlb	2	; () banked
 37118  00696A  6FF3               	movwf	(_loRa+243)& (0+255),b
 37119                           
 37120                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 37121  00696C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37122  006970  0102               	movlb	2	; () banked
 37123  006972  6FE9               	movwf	(_loRa+233)& (0+255),b
 37124                           
 37125                           ; BSR set to: 2
 37126  006974  0012               	return		;funcret
 37127  006976                     __end_of_CreateAllSoftwareTimers:
 37128                           	opt stack 0
 37129                           tosu	equ	0xFFF
 37130                           tosh	equ	0xFFE
 37131                           tosl	equ	0xFFD
 37132                           pclath	equ	0xFFA
 37133                           tblptru	equ	0xFF8
 37134                           tblptrh	equ	0xFF7
 37135                           tblptrl	equ	0xFF6
 37136                           tablat	equ	0xFF5
 37137                           prodh	equ	0xFF4
 37138                           prodl	equ	0xFF3
 37139                           intcon	equ	0xFF2
 37140                           intcon2	equ	0xFF1
 37141                           intcon3	equ	0xFF0
 37142                           indf0	equ	0xFEF
 37143                           postinc0	equ	0xFEE
 37144                           plusw0	equ	0xFEB
 37145                           fsr0h	equ	0xFEA
 37146                           fsr0l	equ	0xFE9
 37147                           wreg	equ	0xFE8
 37148                           postinc1	equ	0xFE6
 37149                           postdec1	equ	0xFE5
 37150                           plusw1	equ	0xFE3
 37151                           fsr1h	equ	0xFE2
 37152                           fsr1l	equ	0xFE1
 37153                           indf2	equ	0xFDF
 37154                           postinc2	equ	0xFDE
 37155                           postdec2	equ	0xFDD
 37156                           plusw2	equ	0xFDB
 37157                           fsr2h	equ	0xFDA
 37158                           fsr2l	equ	0xFD9
 37159                           status	equ	0xFD8
 37160                           
 37161 ;; *************** function _SwTimerCreate *****************
 37162 ;; Defined at:
 37163 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37164 ;; Parameters:    Size  Location     Type
 37165 ;;		None
 37166 ;; Auto vars:     Size  Location     Type
 37167 ;;  retVal          1    4[BANK0 ] unsigned char 
 37168 ;; Return value:  Size  Location     Type
 37169 ;;                  1    wreg      unsigned char 
 37170 ;; Registers used:
 37171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37172 ;; Tracked objects:
 37173 ;;		On entry : C/1
 37174 ;;		On exit  : F/0
 37175 ;;		Unchanged: 0/0
 37176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37180 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37181 ;;Total ram usage:        1 bytes
 37182 ;; Hardware stack levels used:    1
 37183 ;; Hardware stack levels required when called:    7
 37184 ;; This function calls:
 37185 ;;		Nothing
 37186 ;; This function is called by:
 37187 ;;		_RADIO_Init
 37188 ;;		_CreateAllSoftwareTimers
 37189 ;; This function uses a non-reentrant model
 37190 ;;
 37191                           
 37192                           	psect	text200
 37193  006268                     __ptext200:
 37194                           	opt stack 0
 37195  006268                     _SwTimerCreate:
 37196                           	opt stack 21
 37197                           
 37198                           ;sw_timer.c: 156: uint8_t retVal;
 37199                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 37200                           
 37201                           ; BSR set to: 2
 37202                           ;incstack = 0
 37203  006268  0E14               	movlw	20
 37204  00626A  0100               	movlb	0	; () banked
 37205  00626C  61EF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 37206  00626E  D02E               	goto	l126
 37207                           
 37208                           ; BSR set to: 0
 37209                           ;sw_timer.c: 158: {
 37210                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 37211  006270  9EF2               	bcf	intcon,7,c	;volatile
 37212                           
 37213                           ;sw_timer.c: 160: retVal = allocatedTimers;
 37214  006272  C0EF  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 37215                           
 37216                           ; BSR set to: 0
 37217                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 37218  006276  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37219  006278  0D08               	mullw	8
 37220  00627A  0E04               	movlw	low (_swTimers+4)
 37221  00627C  24F3               	addwf	prodl,w,c
 37222  00627E  6ED9               	movwf	fsr2l,c
 37223  006280  0E03               	movlw	high (_swTimers+4)
 37224  006282  20F4               	addwfc	prodh,w,c
 37225  006284  6EDA               	movwf	fsr2h,c
 37226  006286  6ADF               	clrf	indf2,c
 37227                           
 37228                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 37229  006288  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37230  00628A  0D08               	mullw	8
 37231  00628C  0E00               	movlw	low _swTimers
 37232  00628E  24F3               	addwf	prodl,w,c
 37233  006290  6ED9               	movwf	fsr2l,c
 37234  006292  0E03               	movlw	high _swTimers
 37235  006294  20F4               	addwfc	prodh,w,c
 37236  006296  6EDA               	movwf	fsr2h,c
 37237  006298  6ADE               	clrf	postinc2,c
 37238  00629A  6ADE               	clrf	postinc2,c
 37239  00629C  6ADE               	clrf	postinc2,c
 37240  00629E  6ADD               	clrf	postdec2,c
 37241                           
 37242                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 37243  0062A0  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37244  0062A2  0D08               	mullw	8
 37245  0062A4  0E05               	movlw	low (_swTimers+5)
 37246  0062A6  24F3               	addwf	prodl,w,c
 37247  0062A8  6ED9               	movwf	fsr2l,c
 37248  0062AA  0E03               	movlw	high (_swTimers+5)
 37249  0062AC  20F4               	addwfc	prodh,w,c
 37250  0062AE  6EDA               	movwf	fsr2h,c
 37251  0062B0  6ADF               	clrf	indf2,c
 37252                           
 37253                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 37254  0062B2  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37255  0062B4  0D08               	mullw	8
 37256  0062B6  0E06               	movlw	low (_swTimers+6)
 37257  0062B8  24F3               	addwf	prodl,w,c
 37258  0062BA  6ED9               	movwf	fsr2l,c
 37259  0062BC  0E03               	movlw	high (_swTimers+6)
 37260  0062BE  20F4               	addwfc	prodh,w,c
 37261  0062C0  6EDA               	movwf	fsr2h,c
 37262  0062C2  6ADE               	clrf	postinc2,c
 37263  0062C4  6ADD               	clrf	postdec2,c
 37264                           
 37265                           ; BSR set to: 0
 37266                           ;sw_timer.c: 165: allocatedTimers++;
 37267  0062C6  2BEF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 37268                           
 37269                           ; BSR set to: 0
 37270                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 37271  0062C8  8EF2               	bsf	intcon,7,c	;volatile
 37272                           
 37273                           ;sw_timer.c: 167: }
 37274  0062CA  D001               	goto	l9986
 37275  0062CC                     l126:
 37276  0062CC  D7FF               	goto	l126
 37277  0062CE                     l9986:
 37278                           
 37279                           ; BSR set to: 0
 37280                           ;sw_timer.c: 175: }
 37281                           ;sw_timer.c: 176: }
 37282                           ;sw_timer.c: 177: return retVal;
 37283  0062CE  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37284                           
 37285                           ; BSR set to: 0
 37286  0062D0  0012               	return		;funcret
 37287  0062D2                     __end_of_SwTimerCreate:
 37288                           	opt stack 0
 37289                           tosu	equ	0xFFF
 37290                           tosh	equ	0xFFE
 37291                           tosl	equ	0xFFD
 37292                           pclath	equ	0xFFA
 37293                           tblptru	equ	0xFF8
 37294                           tblptrh	equ	0xFF7
 37295                           tblptrl	equ	0xFF6
 37296                           tablat	equ	0xFF5
 37297                           prodh	equ	0xFF4
 37298                           prodl	equ	0xFF3
 37299                           intcon	equ	0xFF2
 37300                           intcon2	equ	0xFF1
 37301                           intcon3	equ	0xFF0
 37302                           indf0	equ	0xFEF
 37303                           postinc0	equ	0xFEE
 37304                           plusw0	equ	0xFEB
 37305                           fsr0h	equ	0xFEA
 37306                           fsr0l	equ	0xFE9
 37307                           wreg	equ	0xFE8
 37308                           postinc1	equ	0xFE6
 37309                           postdec1	equ	0xFE5
 37310                           plusw1	equ	0xFE3
 37311                           fsr1h	equ	0xFE2
 37312                           fsr1l	equ	0xFE1
 37313                           indf2	equ	0xFDF
 37314                           postinc2	equ	0xFDE
 37315                           postdec2	equ	0xFDD
 37316                           plusw2	equ	0xFDB
 37317                           fsr2h	equ	0xFDA
 37318                           fsr2l	equ	0xFD9
 37319                           status	equ	0xFD8
 37320                           
 37321 ;; *************** function _LORAWAN_GetState *****************
 37322 ;; Defined at:
 37323 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37324 ;; Parameters:    Size  Location     Type
 37325 ;;		None
 37326 ;; Auto vars:     Size  Location     Type
 37327 ;;		None
 37328 ;; Return value:  Size  Location     Type
 37329 ;;                  1    wreg      unsigned char 
 37330 ;; Registers used:
 37331 ;;		wreg, status,2, status,0
 37332 ;; Tracked objects:
 37333 ;;		On entry : F/1
 37334 ;;		On exit  : F/2
 37335 ;;		Unchanged: 0/0
 37336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37341 ;;Total ram usage:        0 bytes
 37342 ;; Hardware stack levels used:    1
 37343 ;; Hardware stack levels required when called:    7
 37344 ;; This function calls:
 37345 ;;		Nothing
 37346 ;; This function is called by:
 37347 ;;		_main
 37348 ;; This function uses a non-reentrant model
 37349 ;;
 37350                           
 37351                           	psect	text201
 37352  0078EE                     __ptext201:
 37353                           	opt stack 0
 37354  0078EE                     _LORAWAN_GetState:
 37355                           	opt stack 23
 37356                           
 37357                           ; BSR set to: 1
 37358                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 37359                           
 37360                           ; BSR set to: 0
 37361                           ;incstack = 0
 37362  0078EE  0102               	movlb	2	; () banked
 37363  0078F0  5102               	movf	(_loRa+2)& (0+255),w,b
 37364  0078F2  0B0F               	andlw	15
 37365                           
 37366                           ; BSR set to: 2
 37367  0078F4  0012               	return		;funcret
 37368  0078F6                     __end_of_LORAWAN_GetState:
 37369                           	opt stack 0
 37370                           tosu	equ	0xFFF
 37371                           tosh	equ	0xFFE
 37372                           tosl	equ	0xFFD
 37373                           pclath	equ	0xFFA
 37374                           tblptru	equ	0xFF8
 37375                           tblptrh	equ	0xFF7
 37376                           tblptrl	equ	0xFF6
 37377                           tablat	equ	0xFF5
 37378                           prodh	equ	0xFF4
 37379                           prodl	equ	0xFF3
 37380                           intcon	equ	0xFF2
 37381                           intcon2	equ	0xFF1
 37382                           intcon3	equ	0xFF0
 37383                           indf0	equ	0xFEF
 37384                           postinc0	equ	0xFEE
 37385                           plusw0	equ	0xFEB
 37386                           fsr0h	equ	0xFEA
 37387                           fsr0l	equ	0xFE9
 37388                           wreg	equ	0xFE8
 37389                           postinc1	equ	0xFE6
 37390                           postdec1	equ	0xFE5
 37391                           plusw1	equ	0xFE3
 37392                           fsr1h	equ	0xFE2
 37393                           fsr1l	equ	0xFE1
 37394                           indf2	equ	0xFDF
 37395                           postinc2	equ	0xFDE
 37396                           postdec2	equ	0xFDD
 37397                           plusw2	equ	0xFDB
 37398                           fsr2h	equ	0xFDA
 37399                           fsr2l	equ	0xFD9
 37400                           status	equ	0xFD8
 37401                           
 37402 ;; *************** function _IO_pins_init *****************
 37403 ;; Defined at:
 37404 ;;		line 131 in file "main.c"
 37405 ;; Parameters:    Size  Location     Type
 37406 ;;		None
 37407 ;; Auto vars:     Size  Location     Type
 37408 ;;		None
 37409 ;; Return value:  Size  Location     Type
 37410 ;;                  1    wreg      void 
 37411 ;; Registers used:
 37412 ;;		None
 37413 ;; Tracked objects:
 37414 ;;		On entry : F/F
 37415 ;;		On exit  : F/F
 37416 ;;		Unchanged: 0/0
 37417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37422 ;;Total ram usage:        0 bytes
 37423 ;; Hardware stack levels used:    1
 37424 ;; Hardware stack levels required when called:    7
 37425 ;; This function calls:
 37426 ;;		Nothing
 37427 ;; This function is called by:
 37428 ;;		_main
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text202
 37433  007768                     __ptext202:
 37434                           	opt stack 0
 37435  007768                     _IO_pins_init:
 37436                           	opt stack 23
 37437                           
 37438                           ; BSR set to: 15
 37439                           ;main.c: 133: TRISCbits.TRISC5 = 0;
 37440                           
 37441                           ; BSR set to: 2
 37442                           ;incstack = 0
 37443  007768  9A94               	bcf	3988,5,c	;volatile
 37444                           
 37445                           ;main.c: 134: TRISDbits.TRISD5 = 0;
 37446  00776A  9A95               	bcf	3989,5,c	;volatile
 37447                           
 37448                           ;main.c: 135: TRISDbits.TRISD6 = 1;
 37449  00776C  8C95               	bsf	3989,6,c	;volatile
 37450                           
 37451                           ;main.c: 136: TRISDbits.TRISD7 = 1;
 37452  00776E  8E95               	bsf	3989,7,c	;volatile
 37453                           
 37454                           ;main.c: 138: ANSELCbits.ANSC5 = 0;
 37455  007770  9B3A               	bcf	58,5,b	;volatile
 37456                           
 37457                           ;main.c: 139: ANSELDbits.ANSD5 = 0;
 37458  007772  9B3B               	bcf	59,5,b	;volatile
 37459                           
 37460                           ;main.c: 140: ANSELDbits.ANSD6 = 1;
 37461  007774  8D3B               	bsf	59,6,b	;volatile
 37462                           
 37463                           ;main.c: 141: ANSELDbits.ANSD7 = 1;
 37464  007776  8F3B               	bsf	59,7,b	;volatile
 37465                           
 37466                           ; BSR set to: 15
 37467  007778  0012               	return		;funcret
 37468  00777A                     __end_of_IO_pins_init:
 37469                           	opt stack 0
 37470                           tosu	equ	0xFFF
 37471                           tosh	equ	0xFFE
 37472                           tosl	equ	0xFFD
 37473                           pclath	equ	0xFFA
 37474                           tblptru	equ	0xFF8
 37475                           tblptrh	equ	0xFF7
 37476                           tblptrl	equ	0xFF6
 37477                           tablat	equ	0xFF5
 37478                           prodh	equ	0xFF4
 37479                           prodl	equ	0xFF3
 37480                           intcon	equ	0xFF2
 37481                           intcon2	equ	0xFF1
 37482                           intcon3	equ	0xFF0
 37483                           indf0	equ	0xFEF
 37484                           postinc0	equ	0xFEE
 37485                           plusw0	equ	0xFEB
 37486                           fsr0h	equ	0xFEA
 37487                           fsr0l	equ	0xFE9
 37488                           wreg	equ	0xFE8
 37489                           postinc1	equ	0xFE6
 37490                           postdec1	equ	0xFE5
 37491                           plusw1	equ	0xFE3
 37492                           fsr1h	equ	0xFE2
 37493                           fsr1l	equ	0xFE1
 37494                           indf2	equ	0xFDF
 37495                           postinc2	equ	0xFDE
 37496                           postdec2	equ	0xFDD
 37497                           plusw2	equ	0xFDB
 37498                           fsr2h	equ	0xFDA
 37499                           fsr2l	equ	0xFD9
 37500                           status	equ	0xFD8
 37501                           
 37502 ;; *************** function _ADC_Init *****************
 37503 ;; Defined at:
 37504 ;;		line 159 in file "main.c"
 37505 ;; Parameters:    Size  Location     Type
 37506 ;;		None
 37507 ;; Auto vars:     Size  Location     Type
 37508 ;;		None
 37509 ;; Return value:  Size  Location     Type
 37510 ;;                  1    wreg      void 
 37511 ;; Registers used:
 37512 ;;		wreg, status,2
 37513 ;; Tracked objects:
 37514 ;;		On entry : F/F
 37515 ;;		On exit  : F/F
 37516 ;;		Unchanged: E/0
 37517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37522 ;;Total ram usage:        0 bytes
 37523 ;; Hardware stack levels used:    1
 37524 ;; Hardware stack levels required when called:    7
 37525 ;; This function calls:
 37526 ;;		Nothing
 37527 ;; This function is called by:
 37528 ;;		_main
 37529 ;; This function uses a non-reentrant model
 37530 ;;
 37531                           
 37532                           	psect	text203
 37533  0077C2                     __ptext203:
 37534                           	opt stack 0
 37535  0077C2                     _ADC_Init:
 37536                           	opt stack 23
 37537                           
 37538                           ; BSR set to: 15
 37539                           ;main.c: 160: ADCON0bits.GO = 0;
 37540                           
 37541                           ; BSR set to: 15
 37542                           ;incstack = 0
 37543  0077C2  92C2               	bcf	4034,1,c	;volatile
 37544                           
 37545                           ;main.c: 161: ADCON2bits.ADFM = 1;
 37546  0077C4  8EC0               	bsf	4032,7,c	;volatile
 37547                           
 37548                           ; BSR set to: 15
 37549                           ;main.c: 162: ADCON2bits.ADCS = 3;
 37550  0077C6  50C0               	movf	4032,w,c	;volatile
 37551  0077C8  0BF8               	andlw	-8
 37552  0077CA  0903               	iorlw	3
 37553  0077CC  6EC0               	movwf	4032,c	;volatile
 37554                           
 37555                           ; BSR set to: 15
 37556  0077CE  0012               	return		;funcret
 37557  0077D0                     __end_of_ADC_Init:
 37558                           	opt stack 0
 37559                           tosu	equ	0xFFF
 37560                           tosh	equ	0xFFE
 37561                           tosl	equ	0xFFD
 37562                           pclath	equ	0xFFA
 37563                           tblptru	equ	0xFF8
 37564                           tblptrh	equ	0xFF7
 37565                           tblptrl	equ	0xFF6
 37566                           tablat	equ	0xFF5
 37567                           prodh	equ	0xFF4
 37568                           prodl	equ	0xFF3
 37569                           intcon	equ	0xFF2
 37570                           intcon2	equ	0xFF1
 37571                           intcon3	equ	0xFF0
 37572                           indf0	equ	0xFEF
 37573                           postinc0	equ	0xFEE
 37574                           plusw0	equ	0xFEB
 37575                           fsr0h	equ	0xFEA
 37576                           fsr0l	equ	0xFE9
 37577                           wreg	equ	0xFE8
 37578                           postinc1	equ	0xFE6
 37579                           postdec1	equ	0xFE5
 37580                           plusw1	equ	0xFE3
 37581                           fsr1h	equ	0xFE2
 37582                           fsr1l	equ	0xFE1
 37583                           indf2	equ	0xFDF
 37584                           postinc2	equ	0xFDE
 37585                           postdec2	equ	0xFDD
 37586                           plusw2	equ	0xFDB
 37587                           fsr2h	equ	0xFDA
 37588                           fsr2l	equ	0xFD9
 37589                           status	equ	0xFD8
 37590                           
 37591 ;; *************** function _INTERRUPT_InterruptManager *****************
 37592 ;; Defined at:
 37593 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 37594 ;; Parameters:    Size  Location     Type
 37595 ;;		None
 37596 ;; Auto vars:     Size  Location     Type
 37597 ;;		None
 37598 ;; Return value:  Size  Location     Type
 37599 ;;                  1    wreg      void 
 37600 ;; Registers used:
 37601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37602 ;; Tracked objects:
 37603 ;;		On entry : 0/0
 37604 ;;		On exit  : 0/0
 37605 ;;		Unchanged: 0/0
 37606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37609 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37610 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37611 ;;Total ram usage:        8 bytes
 37612 ;; Hardware stack levels used:    1
 37613 ;; Hardware stack levels required when called:    6
 37614 ;; This function calls:
 37615 ;;		_INT1_ISR
 37616 ;;		_INT2_ISR
 37617 ;;		_PIN_MANAGER_IOC
 37618 ;;		_TMR1_ISR
 37619 ;;		_TMR3_ISR
 37620 ;; This function is called by:
 37621 ;;		Interrupt level 2
 37622 ;; This function uses a non-reentrant model
 37623 ;;
 37624                           
 37625                           	psect	intcode
 37626  000008                     __pintcode:
 37627                           	opt stack 0
 37628  000008                     _INTERRUPT_InterruptManager:
 37629                           	opt stack 12
 37630                           
 37631                           ; BSR set to: 15
 37632                           ;incstack = 0
 37633  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 37634  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 37635  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 37636  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 37637  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 37638  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 37639  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 37640  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 37641  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 37642                           
 37643                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 37644  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 37645  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 37646  000030  D003               	goto	i2l2497
 37647                           
 37648                           ;interrupt_manager.c: 61: {
 37649                           ;interrupt_manager.c: 62: INT1_ISR();
 37650  000032  EC93  F03C         	call	_INT1_ISR	;wreg free
 37651                           
 37652                           ;interrupt_manager.c: 63: }
 37653  000036  D01B               	goto	i2l2507
 37654  000038                     i2l2497:
 37655                           
 37656                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 37657  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 37658  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 37659  00003C  D003               	goto	i2l2499
 37660                           
 37661                           ;interrupt_manager.c: 65: {
 37662                           ;interrupt_manager.c: 66: INT2_ISR();
 37663  00003E  EC8D  F03C         	call	_INT2_ISR	;wreg free
 37664                           
 37665                           ;interrupt_manager.c: 67: }
 37666  000042  D015               	goto	i2l2507
 37667  000044                     i2l2499:
 37668                           
 37669                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE2bits.TMR3IE == 1 && PIR2bi
      +                          ts.TMR3IF == 1)
 37670  000044  BCF2               	btfsc	intcon,6,c	;volatile
 37671  000046  A2A0               	btfss	4000,1,c	;volatile
 37672  000048  D005               	goto	i2l2501
 37673  00004A  A2A1               	btfss	4001,1,c	;volatile
 37674  00004C  D003               	goto	i2l2501
 37675                           
 37676                           ;interrupt_manager.c: 69: {
 37677                           ;interrupt_manager.c: 70: TMR3_ISR();
 37678  00004E  ECE8  F03B         	call	_TMR3_ISR	;wreg free
 37679                           
 37680                           ;interrupt_manager.c: 71: }
 37681  000052  D00D               	goto	i2l2507
 37682  000054                     i2l2501:
 37683                           
 37684                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 37685  000054  BCF2               	btfsc	intcon,6,c	;volatile
 37686  000056  A09D               	btfss	3997,0,c	;volatile
 37687  000058  D005               	goto	i2l2503
 37688  00005A  A09E               	btfss	3998,0,c	;volatile
 37689  00005C  D003               	goto	i2l2503
 37690                           
 37691                           ;interrupt_manager.c: 73: {
 37692                           ;interrupt_manager.c: 74: TMR1_ISR();
 37693  00005E  ECEF  F03B         	call	_TMR1_ISR	;wreg free
 37694                           
 37695                           ;interrupt_manager.c: 75: }
 37696  000062  D005               	goto	i2l2507
 37697  000064                     i2l2503:
 37698                           
 37699                           ;interrupt_manager.c: 76: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 37700  000064  B6F2               	btfsc	intcon,3,c	;volatile
 37701  000066  A0F2               	btfss	intcon,0,c	;volatile
 37702  000068  D002               	goto	i2l2507
 37703                           
 37704                           ;interrupt_manager.c: 77: {
 37705                           ;interrupt_manager.c: 78: PIN_MANAGER_IOC();
 37706  00006A  EC51  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 37707  00006E                     i2l2507:
 37708  00006E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37709  000072  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37710  000076  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37711  00007A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37712  00007E  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37713  000082  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37714  000086  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37715  00008A  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37716  00008E  0011               	retfie		f
 37717  000090                     __end_of_INTERRUPT_InterruptManager:
 37718                           	opt stack 0
 37719                           tosu	equ	0xFFF
 37720                           tosh	equ	0xFFE
 37721                           tosl	equ	0xFFD
 37722                           pclatu	equ	0xFFB
 37723                           pclath	equ	0xFFA
 37724                           tblptru	equ	0xFF8
 37725                           tblptrh	equ	0xFF7
 37726                           tblptrl	equ	0xFF6
 37727                           tablat	equ	0xFF5
 37728                           prodh	equ	0xFF4
 37729                           prodl	equ	0xFF3
 37730                           intcon	equ	0xFF2
 37731                           intcon2	equ	0xFF1
 37732                           intcon3	equ	0xFF0
 37733                           indf0	equ	0xFEF
 37734                           postinc0	equ	0xFEE
 37735                           plusw0	equ	0xFEB
 37736                           fsr0h	equ	0xFEA
 37737                           fsr0l	equ	0xFE9
 37738                           wreg	equ	0xFE8
 37739                           postinc1	equ	0xFE6
 37740                           postdec1	equ	0xFE5
 37741                           plusw1	equ	0xFE3
 37742                           fsr1h	equ	0xFE2
 37743                           fsr1l	equ	0xFE1
 37744                           indf2	equ	0xFDF
 37745                           postinc2	equ	0xFDE
 37746                           postdec2	equ	0xFDD
 37747                           plusw2	equ	0xFDB
 37748                           fsr2h	equ	0xFDA
 37749                           fsr2l	equ	0xFD9
 37750                           status	equ	0xFD8
 37751                           
 37752 ;; *************** function _TMR3_ISR *****************
 37753 ;; Defined at:
 37754 ;;		line 159 in file "mcc_generated_files/tmr3.c"
 37755 ;; Parameters:    Size  Location     Type
 37756 ;;		None
 37757 ;; Auto vars:     Size  Location     Type
 37758 ;;		None
 37759 ;; Return value:  Size  Location     Type
 37760 ;;                  1    wreg      void 
 37761 ;; Registers used:
 37762 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37763 ;; Tracked objects:
 37764 ;;		On entry : 0/0
 37765 ;;		On exit  : 0/0
 37766 ;;		Unchanged: 0/0
 37767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37772 ;;Total ram usage:        0 bytes
 37773 ;; Hardware stack levels used:    1
 37774 ;; Hardware stack levels required when called:    2
 37775 ;; This function calls:
 37776 ;;		_TMR3_CallBack
 37777 ;; This function is called by:
 37778 ;;		_INTERRUPT_InterruptManager
 37779 ;; This function uses a non-reentrant model
 37780 ;;
 37781                           
 37782                           	psect	text205
 37783  0077D0                     __ptext205:
 37784                           	opt stack 0
 37785  0077D0                     _TMR3_ISR:
 37786                           	opt stack 15
 37787                           
 37788                           ;tmr3.c: 163: PIR2bits.TMR3IF = 0;
 37789                           
 37790                           ;incstack = 0
 37791  0077D0  92A1               	bcf	4001,1,c	;volatile
 37792                           
 37793                           ;tmr3.c: 166: TMR3H = (timer3ReloadVal >> 8);
 37794  0077D2  C05E  FFB3         	movff	_timer3ReloadVal+1,4019	;volatile
 37795                           
 37796                           ;tmr3.c: 167: TMR3L = (uint8_t) timer3ReloadVal;
 37797  0077D6  C05D  FFB2         	movff	_timer3ReloadVal,4018	;volatile
 37798                           
 37799                           ;tmr3.c: 171: TMR3_CallBack();
 37800  0077DA  EFB7  F03A         	goto	_TMR3_CallBack	;wreg free
 37801  0077DE                     __end_of_TMR3_ISR:
 37802                           	opt stack 0
 37803                           tosu	equ	0xFFF
 37804                           tosh	equ	0xFFE
 37805                           tosl	equ	0xFFD
 37806                           pclatu	equ	0xFFB
 37807                           pclath	equ	0xFFA
 37808                           tblptru	equ	0xFF8
 37809                           tblptrh	equ	0xFF7
 37810                           tblptrl	equ	0xFF6
 37811                           tablat	equ	0xFF5
 37812                           prodh	equ	0xFF4
 37813                           prodl	equ	0xFF3
 37814                           intcon	equ	0xFF2
 37815                           intcon2	equ	0xFF1
 37816                           intcon3	equ	0xFF0
 37817                           indf0	equ	0xFEF
 37818                           postinc0	equ	0xFEE
 37819                           plusw0	equ	0xFEB
 37820                           fsr0h	equ	0xFEA
 37821                           fsr0l	equ	0xFE9
 37822                           wreg	equ	0xFE8
 37823                           postinc1	equ	0xFE6
 37824                           postdec1	equ	0xFE5
 37825                           plusw1	equ	0xFE3
 37826                           fsr1h	equ	0xFE2
 37827                           fsr1l	equ	0xFE1
 37828                           indf2	equ	0xFDF
 37829                           postinc2	equ	0xFDE
 37830                           postdec2	equ	0xFDD
 37831                           plusw2	equ	0xFDB
 37832                           fsr2h	equ	0xFDA
 37833                           fsr2l	equ	0xFD9
 37834                           status	equ	0xFD8
 37835                           
 37836 ;; *************** function _TMR3_CallBack *****************
 37837 ;; Defined at:
 37838 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 37839 ;; Parameters:    Size  Location     Type
 37840 ;;		None
 37841 ;; Auto vars:     Size  Location     Type
 37842 ;;		None
 37843 ;; Return value:  Size  Location     Type
 37844 ;;                  1    wreg      void 
 37845 ;; Registers used:
 37846 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37847 ;; Tracked objects:
 37848 ;;		On entry : 0/0
 37849 ;;		On exit  : 0/0
 37850 ;;		Unchanged: 0/0
 37851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37856 ;;Total ram usage:        0 bytes
 37857 ;; Hardware stack levels used:    1
 37858 ;; Hardware stack levels required when called:    1
 37859 ;; This function calls:
 37860 ;;		Absolute function
 37861 ;;		_TMR3_DefaultInterruptHandler
 37862 ;;		_handle16sInterrupt
 37863 ;; This function is called by:
 37864 ;;		_TMR3_ISR
 37865 ;; This function uses a non-reentrant model
 37866 ;;
 37867                           
 37868                           	psect	text206
 37869  00756E                     __ptext206:
 37870                           	opt stack 0
 37871  00756E                     _TMR3_CallBack:
 37872                           	opt stack 15
 37873                           
 37874                           ;tmr3.c: 177: if(TMR3_InterruptHandler)
 37875                           
 37876                           ;incstack = 0
 37877  00756E  0101               	movlb	1	; () banked
 37878  007570  51EC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37879  007572  11ED               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37880  007574  B4D8               	btfsc	status,2,c
 37881  007576  0012               	return	
 37882                           
 37883                           ; BSR set to: 1
 37884                           ;tmr3.c: 178: {
 37885                           ;tmr3.c: 179: TMR3_InterruptHandler();
 37886  007578  0005               	push	
 37887  00757A  6EFA               	movwf	pclath,c
 37888  00757C  51EC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37889  00757E  6EFD               	movwf	tosl,c
 37890  007580  51ED               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37891  007582  6EFE               	movwf	tosh,c
 37892  007584  6AFF               	clrf	tosu,c
 37893  007586  50FA               	movf	pclath,w,c
 37894  007588  0012               	return		;indir
 37895  00758A                     __end_of_TMR3_CallBack:
 37896                           	opt stack 0
 37897                           tosu	equ	0xFFF
 37898                           tosh	equ	0xFFE
 37899                           tosl	equ	0xFFD
 37900                           pclatu	equ	0xFFB
 37901                           pclath	equ	0xFFA
 37902                           tblptru	equ	0xFF8
 37903                           tblptrh	equ	0xFF7
 37904                           tblptrl	equ	0xFF6
 37905                           tablat	equ	0xFF5
 37906                           prodh	equ	0xFF4
 37907                           prodl	equ	0xFF3
 37908                           intcon	equ	0xFF2
 37909                           intcon2	equ	0xFF1
 37910                           intcon3	equ	0xFF0
 37911                           indf0	equ	0xFEF
 37912                           postinc0	equ	0xFEE
 37913                           plusw0	equ	0xFEB
 37914                           fsr0h	equ	0xFEA
 37915                           fsr0l	equ	0xFE9
 37916                           wreg	equ	0xFE8
 37917                           postinc1	equ	0xFE6
 37918                           postdec1	equ	0xFE5
 37919                           plusw1	equ	0xFE3
 37920                           fsr1h	equ	0xFE2
 37921                           fsr1l	equ	0xFE1
 37922                           indf2	equ	0xFDF
 37923                           postinc2	equ	0xFDE
 37924                           postdec2	equ	0xFDD
 37925                           plusw2	equ	0xFDB
 37926                           fsr2h	equ	0xFDA
 37927                           fsr2l	equ	0xFD9
 37928                           status	equ	0xFD8
 37929                           
 37930 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37931 ;; Defined at:
 37932 ;;		line 187 in file "mcc_generated_files/tmr3.c"
 37933 ;; Parameters:    Size  Location     Type
 37934 ;;		None
 37935 ;; Auto vars:     Size  Location     Type
 37936 ;;		None
 37937 ;; Return value:  Size  Location     Type
 37938 ;;                  1    wreg      void 
 37939 ;; Registers used:
 37940 ;;		None
 37941 ;; Tracked objects:
 37942 ;;		On entry : F/1
 37943 ;;		On exit  : F/1
 37944 ;;		Unchanged: F/0
 37945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37950 ;;Total ram usage:        0 bytes
 37951 ;; Hardware stack levels used:    1
 37952 ;; This function calls:
 37953 ;;		Nothing
 37954 ;; This function is called by:
 37955 ;;		_TMR3_Initialize
 37956 ;;		_TMR3_CallBack
 37957 ;; This function uses a non-reentrant model
 37958 ;;
 37959                           
 37960                           	psect	text207
 37961  00795C                     __ptext207:
 37962                           	opt stack 0
 37963  00795C                     _TMR3_DefaultInterruptHandler:
 37964                           	opt stack 15
 37965                           
 37966                           ; BSR set to: 1
 37967                           
 37968                           ;incstack = 0
 37969  00795C  0012               	return		;funcret
 37970  00795E                     __end_of_TMR3_DefaultInterruptHandler:
 37971                           	opt stack 0
 37972                           tosu	equ	0xFFF
 37973                           tosh	equ	0xFFE
 37974                           tosl	equ	0xFFD
 37975                           pclatu	equ	0xFFB
 37976                           pclath	equ	0xFFA
 37977                           tblptru	equ	0xFF8
 37978                           tblptrh	equ	0xFF7
 37979                           tblptrl	equ	0xFF6
 37980                           tablat	equ	0xFF5
 37981                           prodh	equ	0xFF4
 37982                           prodl	equ	0xFF3
 37983                           intcon	equ	0xFF2
 37984                           intcon2	equ	0xFF1
 37985                           intcon3	equ	0xFF0
 37986                           indf0	equ	0xFEF
 37987                           postinc0	equ	0xFEE
 37988                           plusw0	equ	0xFEB
 37989                           fsr0h	equ	0xFEA
 37990                           fsr0l	equ	0xFE9
 37991                           wreg	equ	0xFE8
 37992                           postinc1	equ	0xFE6
 37993                           postdec1	equ	0xFE5
 37994                           plusw1	equ	0xFE3
 37995                           fsr1h	equ	0xFE2
 37996                           fsr1l	equ	0xFE1
 37997                           indf2	equ	0xFDF
 37998                           postinc2	equ	0xFDE
 37999                           postdec2	equ	0xFDD
 38000                           plusw2	equ	0xFDB
 38001                           fsr2h	equ	0xFDA
 38002                           fsr2l	equ	0xFD9
 38003                           status	equ	0xFD8
 38004                           
 38005 ;; *************** function _handle16sInterrupt *****************
 38006 ;; Defined at:
 38007 ;;		line 91 in file "main.c"
 38008 ;; Parameters:    Size  Location     Type
 38009 ;;		None
 38010 ;; Auto vars:     Size  Location     Type
 38011 ;;		None
 38012 ;; Return value:  Size  Location     Type
 38013 ;;                  1    wreg      void 
 38014 ;; Registers used:
 38015 ;;		wreg, status,2, status,0
 38016 ;; Tracked objects:
 38017 ;;		On entry : F/1
 38018 ;;		On exit  : 0/0
 38019 ;;		Unchanged: 0/0
 38020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38025 ;;Total ram usage:        0 bytes
 38026 ;; Hardware stack levels used:    1
 38027 ;; This function calls:
 38028 ;;		Nothing
 38029 ;; This function is called by:
 38030 ;;		_main
 38031 ;;		_TMR3_CallBack
 38032 ;; This function uses a non-reentrant model
 38033 ;;
 38034                           
 38035                           	psect	text208
 38036  007742                     __ptext208:
 38037                           	opt stack 0
 38038  007742                     _handle16sInterrupt:
 38039                           	opt stack 15
 38040                           
 38041                           ; BSR set to: 1
 38042                           ;main.c: 93: static volatile uint8_t counterSleepTimeout = 0;
 38043                           ;main.c: 94: if( ++counterSleepTimeout == ONE_HOUR_TIMEOUT_COUNTS )
 38044                           
 38045                           ; BSR set to: 1
 38046                           ;incstack = 0
 38047  007742  2A45               	incf	handle16sInterrupt@counterSleepTimeout,f,c	;volatile
 38048  007744  505A               	movf	_ONE_HOUR_TIMEOUT_COUNTS,w,c
 38049  007746  1845               	xorwf	handle16sInterrupt@counterSleepTimeout,w,c	;volatile
 38050  007748  E104               	bnz	i2l2724
 38051                           
 38052                           ; BSR set to: 1
 38053                           ;main.c: 95: {
 38054                           ;main.c: 97: TimeToSend = 1;
 38055  00774A  0E01               	movlw	1
 38056  00774C  6F69               	movwf	_TimeToSend& (0+255),b
 38057                           
 38058                           ; BSR set to: 1
 38059                           ;main.c: 98: counterSleepTimeout = 0;
 38060  00774E  6A45               	clrf	handle16sInterrupt@counterSleepTimeout,c	;volatile
 38061                           
 38062                           ;main.c: 99: }
 38063  007750  0012               	return	
 38064  007752                     i2l2724:
 38065                           
 38066                           ; BSR set to: 1
 38067  007752  0003               	sleep		;# 
 38068  007754  0012               	return		;funcret
 38069  007756                     __end_of_handle16sInterrupt:
 38070                           	opt stack 0
 38071                           tosu	equ	0xFFF
 38072                           tosh	equ	0xFFE
 38073                           tosl	equ	0xFFD
 38074                           pclatu	equ	0xFFB
 38075                           pclath	equ	0xFFA
 38076                           tblptru	equ	0xFF8
 38077                           tblptrh	equ	0xFF7
 38078                           tblptrl	equ	0xFF6
 38079                           tablat	equ	0xFF5
 38080                           prodh	equ	0xFF4
 38081                           prodl	equ	0xFF3
 38082                           intcon	equ	0xFF2
 38083                           intcon2	equ	0xFF1
 38084                           intcon3	equ	0xFF0
 38085                           indf0	equ	0xFEF
 38086                           postinc0	equ	0xFEE
 38087                           plusw0	equ	0xFEB
 38088                           fsr0h	equ	0xFEA
 38089                           fsr0l	equ	0xFE9
 38090                           wreg	equ	0xFE8
 38091                           postinc1	equ	0xFE6
 38092                           postdec1	equ	0xFE5
 38093                           plusw1	equ	0xFE3
 38094                           fsr1h	equ	0xFE2
 38095                           fsr1l	equ	0xFE1
 38096                           indf2	equ	0xFDF
 38097                           postinc2	equ	0xFDE
 38098                           postdec2	equ	0xFDD
 38099                           plusw2	equ	0xFDB
 38100                           fsr2h	equ	0xFDA
 38101                           fsr2l	equ	0xFD9
 38102                           status	equ	0xFD8
 38103                           
 38104 ;; *************** function _TMR1_ISR *****************
 38105 ;; Defined at:
 38106 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 38107 ;; Parameters:    Size  Location     Type
 38108 ;;		None
 38109 ;; Auto vars:     Size  Location     Type
 38110 ;;		None
 38111 ;; Return value:  Size  Location     Type
 38112 ;;                  1    wreg      void 
 38113 ;; Registers used:
 38114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38115 ;; Tracked objects:
 38116 ;;		On entry : 0/0
 38117 ;;		On exit  : 0/0
 38118 ;;		Unchanged: 0/0
 38119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38124 ;;Total ram usage:        0 bytes
 38125 ;; Hardware stack levels used:    1
 38126 ;; Hardware stack levels required when called:    5
 38127 ;; This function calls:
 38128 ;;		_TMR1_CallBack
 38129 ;; This function is called by:
 38130 ;;		_INTERRUPT_InterruptManager
 38131 ;; This function uses a non-reentrant model
 38132 ;;
 38133                           
 38134                           	psect	text209
 38135  0077DE                     __ptext209:
 38136                           	opt stack 0
 38137  0077DE                     _TMR1_ISR:
 38138                           	opt stack 12
 38139                           
 38140                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 38141                           
 38142                           ;incstack = 0
 38143  0077DE  909E               	bcf	3998,0,c	;volatile
 38144                           
 38145                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 38146  0077E0  C05C  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 38147                           
 38148                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 38149  0077E4  C05B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 38150                           
 38151                           ;tmr1.c: 171: TMR1_CallBack();
 38152  0077E8  EFC5  F03A         	goto	_TMR1_CallBack	;wreg free
 38153  0077EC                     __end_of_TMR1_ISR:
 38154                           	opt stack 0
 38155                           tosu	equ	0xFFF
 38156                           tosh	equ	0xFFE
 38157                           tosl	equ	0xFFD
 38158                           pclatu	equ	0xFFB
 38159                           pclath	equ	0xFFA
 38160                           tblptru	equ	0xFF8
 38161                           tblptrh	equ	0xFF7
 38162                           tblptrl	equ	0xFF6
 38163                           tablat	equ	0xFF5
 38164                           prodh	equ	0xFF4
 38165                           prodl	equ	0xFF3
 38166                           intcon	equ	0xFF2
 38167                           intcon2	equ	0xFF1
 38168                           intcon3	equ	0xFF0
 38169                           indf0	equ	0xFEF
 38170                           postinc0	equ	0xFEE
 38171                           plusw0	equ	0xFEB
 38172                           fsr0h	equ	0xFEA
 38173                           fsr0l	equ	0xFE9
 38174                           wreg	equ	0xFE8
 38175                           postinc1	equ	0xFE6
 38176                           postdec1	equ	0xFE5
 38177                           plusw1	equ	0xFE3
 38178                           fsr1h	equ	0xFE2
 38179                           fsr1l	equ	0xFE1
 38180                           indf2	equ	0xFDF
 38181                           postinc2	equ	0xFDE
 38182                           postdec2	equ	0xFDD
 38183                           plusw2	equ	0xFDB
 38184                           fsr2h	equ	0xFDA
 38185                           fsr2l	equ	0xFD9
 38186                           status	equ	0xFD8
 38187                           
 38188 ;; *************** function _TMR1_CallBack *****************
 38189 ;; Defined at:
 38190 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 38191 ;; Parameters:    Size  Location     Type
 38192 ;;		None
 38193 ;; Auto vars:     Size  Location     Type
 38194 ;;		None
 38195 ;; Return value:  Size  Location     Type
 38196 ;;                  1    wreg      void 
 38197 ;; Registers used:
 38198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38199 ;; Tracked objects:
 38200 ;;		On entry : 0/0
 38201 ;;		On exit  : 0/0
 38202 ;;		Unchanged: 0/0
 38203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38208 ;;Total ram usage:        0 bytes
 38209 ;; Hardware stack levels used:    1
 38210 ;; Hardware stack levels required when called:    4
 38211 ;; This function calls:
 38212 ;;		Absolute function
 38213 ;;		_TMR1_DefaultInterruptHandler
 38214 ;;		_TMR_ISR_lora
 38215 ;; This function is called by:
 38216 ;;		_TMR1_ISR
 38217 ;; This function uses a non-reentrant model
 38218 ;;
 38219                           
 38220                           	psect	text210
 38221  00758A                     __ptext210:
 38222                           	opt stack 0
 38223  00758A                     _TMR1_CallBack:
 38224                           	opt stack 12
 38225                           
 38226                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 38227                           
 38228                           ;incstack = 0
 38229  00758A  0101               	movlb	1	; () banked
 38230  00758C  51EA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38231  00758E  11EB               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38232  007590  B4D8               	btfsc	status,2,c
 38233  007592  0012               	return	
 38234                           
 38235                           ; BSR set to: 1
 38236                           ;tmr1.c: 178: {
 38237                           ;tmr1.c: 179: TMR1_InterruptHandler();
 38238  007594  0005               	push	
 38239  007596  6EFA               	movwf	pclath,c
 38240  007598  51EA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38241  00759A  6EFD               	movwf	tosl,c
 38242  00759C  51EB               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38243  00759E  6EFE               	movwf	tosh,c
 38244  0075A0  6AFF               	clrf	tosu,c
 38245  0075A2  50FA               	movf	pclath,w,c
 38246  0075A4  0012               	return		;indir
 38247  0075A6                     __end_of_TMR1_CallBack:
 38248                           	opt stack 0
 38249                           tosu	equ	0xFFF
 38250                           tosh	equ	0xFFE
 38251                           tosl	equ	0xFFD
 38252                           pclatu	equ	0xFFB
 38253                           pclath	equ	0xFFA
 38254                           tblptru	equ	0xFF8
 38255                           tblptrh	equ	0xFF7
 38256                           tblptrl	equ	0xFF6
 38257                           tablat	equ	0xFF5
 38258                           prodh	equ	0xFF4
 38259                           prodl	equ	0xFF3
 38260                           intcon	equ	0xFF2
 38261                           intcon2	equ	0xFF1
 38262                           intcon3	equ	0xFF0
 38263                           indf0	equ	0xFEF
 38264                           postinc0	equ	0xFEE
 38265                           plusw0	equ	0xFEB
 38266                           fsr0h	equ	0xFEA
 38267                           fsr0l	equ	0xFE9
 38268                           wreg	equ	0xFE8
 38269                           postinc1	equ	0xFE6
 38270                           postdec1	equ	0xFE5
 38271                           plusw1	equ	0xFE3
 38272                           fsr1h	equ	0xFE2
 38273                           fsr1l	equ	0xFE1
 38274                           indf2	equ	0xFDF
 38275                           postinc2	equ	0xFDE
 38276                           postdec2	equ	0xFDD
 38277                           plusw2	equ	0xFDB
 38278                           fsr2h	equ	0xFDA
 38279                           fsr2l	equ	0xFD9
 38280                           status	equ	0xFD8
 38281                           
 38282 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38283 ;; Defined at:
 38284 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 38285 ;; Parameters:    Size  Location     Type
 38286 ;;		None
 38287 ;; Auto vars:     Size  Location     Type
 38288 ;;		None
 38289 ;; Return value:  Size  Location     Type
 38290 ;;                  1    wreg      void 
 38291 ;; Registers used:
 38292 ;;		None
 38293 ;; Tracked objects:
 38294 ;;		On entry : F/1
 38295 ;;		On exit  : F/1
 38296 ;;		Unchanged: F/0
 38297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38302 ;;Total ram usage:        0 bytes
 38303 ;; Hardware stack levels used:    1
 38304 ;; This function calls:
 38305 ;;		Nothing
 38306 ;; This function is called by:
 38307 ;;		_TMR1_Initialize
 38308 ;;		_TMR1_CallBack
 38309 ;; This function uses a non-reentrant model
 38310 ;;
 38311                           
 38312                           	psect	text211
 38313  00795E                     __ptext211:
 38314                           	opt stack 0
 38315  00795E                     _TMR1_DefaultInterruptHandler:
 38316                           	opt stack 15
 38317                           
 38318                           ; BSR set to: 1
 38319                           
 38320                           ;incstack = 0
 38321  00795E  0012               	return		;funcret
 38322  007960                     __end_of_TMR1_DefaultInterruptHandler:
 38323                           	opt stack 0
 38324                           tosu	equ	0xFFF
 38325                           tosh	equ	0xFFE
 38326                           tosl	equ	0xFFD
 38327                           pclatu	equ	0xFFB
 38328                           pclath	equ	0xFFA
 38329                           tblptru	equ	0xFF8
 38330                           tblptrh	equ	0xFF7
 38331                           tblptrl	equ	0xFF6
 38332                           tablat	equ	0xFF5
 38333                           prodh	equ	0xFF4
 38334                           prodl	equ	0xFF3
 38335                           intcon	equ	0xFF2
 38336                           intcon2	equ	0xFF1
 38337                           intcon3	equ	0xFF0
 38338                           indf0	equ	0xFEF
 38339                           postinc0	equ	0xFEE
 38340                           plusw0	equ	0xFEB
 38341                           fsr0h	equ	0xFEA
 38342                           fsr0l	equ	0xFE9
 38343                           wreg	equ	0xFE8
 38344                           postinc1	equ	0xFE6
 38345                           postdec1	equ	0xFE5
 38346                           plusw1	equ	0xFE3
 38347                           fsr1h	equ	0xFE2
 38348                           fsr1l	equ	0xFE1
 38349                           indf2	equ	0xFDF
 38350                           postinc2	equ	0xFDE
 38351                           postdec2	equ	0xFDD
 38352                           plusw2	equ	0xFDB
 38353                           fsr2h	equ	0xFDA
 38354                           fsr2l	equ	0xFD9
 38355                           status	equ	0xFD8
 38356                           
 38357 ;; *************** function _TMR_ISR_lora *****************
 38358 ;; Defined at:
 38359 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38360 ;; Parameters:    Size  Location     Type
 38361 ;;		None
 38362 ;; Auto vars:     Size  Location     Type
 38363 ;;		None
 38364 ;; Return value:  Size  Location     Type
 38365 ;;                  1    wreg      void 
 38366 ;; Registers used:
 38367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38368 ;; Tracked objects:
 38369 ;;		On entry : F/1
 38370 ;;		On exit  : 0/0
 38371 ;;		Unchanged: 0/0
 38372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38377 ;;Total ram usage:        0 bytes
 38378 ;; Hardware stack levels used:    1
 38379 ;; Hardware stack levels required when called:    3
 38380 ;; This function calls:
 38381 ;;		i2_SwTimersInterrupt
 38382 ;;		i2_TMR_SwapTimer
 38383 ;; This function is called by:
 38384 ;;		_TMR_ISR_Lora_Init
 38385 ;;		_TMR1_CallBack
 38386 ;; This function uses a non-reentrant model
 38387 ;;
 38388                           
 38389                           	psect	text212
 38390  006A60                     __ptext212:
 38391                           	opt stack 0
 38392  006A60                     _TMR_ISR_lora:
 38393                           	opt stack 12
 38394                           
 38395                           ; BSR set to: 1
 38396                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38397                           
 38398                           ; BSR set to: 1
 38399                           ;incstack = 0
 38400  006A60  0E01               	movlw	1
 38401  006A62  0100               	movlb	0	; () banked
 38402  006A64  6FF2               	movwf	_timerOverflow& (0+255),b	;volatile
 38403                           
 38404                           ; BSR set to: 0
 38405                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38406  006A66  EC1A  F027         	call	i2_SwTimersInterrupt	;wreg free
 38407  006A6A  C019  F056         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38408  006A6E  C01A  F057         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38409  006A72  C01B  F058         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38410  006A76  C01C  F059         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38411                           
 38412                           ; BSR set to: 0
 38413                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38414  006A7A  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38415  006A7C  E117               	bnz	i2l242
 38416  006A7E  0458               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38417  006A80  B0D8               	btfsc	status,0,c
 38418  006A82  0012               	return	
 38419                           
 38420                           ; BSR set to: 0
 38421                           ;tmr_lora_addons.c: 66: {
 38422                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38423  006A84  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38424  006A86  0800               	sublw	0
 38425  006A88  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 38426  006A8A  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38427  006A8C  A0D8               	btfss	status,0,c
 38428  006A8E  2AE8               	incf	wreg,f,c
 38429  006A90  0800               	sublw	0
 38430  006A92  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38431                           
 38432                           ; BSR set to: 0
 38433                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38434  006A94  C0EC  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38435  006A98  C0ED  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38436  006A9C  ECF3  F036         	call	i2_TMR_SwapTimer	;wreg free
 38437  006AA0  C009  F03A         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38438  006AA4  C00A  F03B         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38439  006AA8  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38440  006AAA  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38441  006AAC                     i2l242:
 38442  006AAC  0012               	return		;funcret
 38443  006AAE                     __end_of_TMR_ISR_lora:
 38444                           	opt stack 0
 38445                           tosu	equ	0xFFF
 38446                           tosh	equ	0xFFE
 38447                           tosl	equ	0xFFD
 38448                           pclatu	equ	0xFFB
 38449                           pclath	equ	0xFFA
 38450                           tblptru	equ	0xFF8
 38451                           tblptrh	equ	0xFF7
 38452                           tblptrl	equ	0xFF6
 38453                           tablat	equ	0xFF5
 38454                           prodh	equ	0xFF4
 38455                           prodl	equ	0xFF3
 38456                           intcon	equ	0xFF2
 38457                           intcon2	equ	0xFF1
 38458                           intcon3	equ	0xFF0
 38459                           indf0	equ	0xFEF
 38460                           postinc0	equ	0xFEE
 38461                           plusw0	equ	0xFEB
 38462                           fsr0h	equ	0xFEA
 38463                           fsr0l	equ	0xFE9
 38464                           wreg	equ	0xFE8
 38465                           postinc1	equ	0xFE6
 38466                           postdec1	equ	0xFE5
 38467                           plusw1	equ	0xFE3
 38468                           fsr1h	equ	0xFE2
 38469                           fsr1l	equ	0xFE1
 38470                           indf2	equ	0xFDF
 38471                           postinc2	equ	0xFDE
 38472                           postdec2	equ	0xFDD
 38473                           plusw2	equ	0xFDB
 38474                           fsr2h	equ	0xFDA
 38475                           fsr2l	equ	0xFD9
 38476                           status	equ	0xFD8
 38477                           
 38478 ;; *************** function i2_TMR_SwapTimer *****************
 38479 ;; Defined at:
 38480 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38481 ;; Parameters:    Size  Location     Type
 38482 ;;  timerVal        2    8[COMRAM] unsigned int 
 38483 ;; Auto vars:     Size  Location     Type
 38484 ;;		None
 38485 ;; Return value:  Size  Location     Type
 38486 ;;                  2    8[COMRAM] unsigned int 
 38487 ;; Registers used:
 38488 ;;		wreg, status,2, status,0, cstack
 38489 ;; Tracked objects:
 38490 ;;		On entry : F/0
 38491 ;;		On exit  : 0/0
 38492 ;;		Unchanged: 0/0
 38493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38498 ;;Total ram usage:        2 bytes
 38499 ;; Hardware stack levels used:    1
 38500 ;; Hardware stack levels required when called:    1
 38501 ;; This function calls:
 38502 ;;		i2_TMR1_ReadTimer
 38503 ;;		i2_TMR1_WriteTimer
 38504 ;; This function is called by:
 38505 ;;		_TMR_ISR_lora
 38506 ;; This function uses a non-reentrant model
 38507 ;;
 38508                           
 38509                           	psect	text213
 38510  006DE6                     __ptext213:
 38511                           	opt stack 0
 38512  006DE6                     i2_TMR_SwapTimer:
 38513                           	opt stack 13
 38514                           
 38515                           ; BSR set to: 0
 38516                           ;sw_timer.c: 114: static uint16_t oldVal;
 38517                           ;sw_timer.c: 115: static uint16_t retVal;
 38518                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38519                           
 38520                           ;incstack = 0
 38521  006DE6  EC8C  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38522  006DEA  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38523  006DEE  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38524  006DF2                     i2l10626:
 38525  006DF2  EC8C  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38526  006DF6  5040               	movf	TMR_SwapTimer@oldVal,w,c
 38527  006DF8  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38528  006DFA  E103               	bnz	i2u1100_40
 38529  006DFC  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 38530  006DFE  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38531  006E00  E0F8               	bz	i2l10626
 38532  006E02                     i2u1100_40:
 38533                           
 38534                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38535  006E02  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38536  006E06  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38537  006E0A  ECD3  F03A         	call	i2_TMR1_WriteTimer	;wreg free
 38538                           
 38539                           ;sw_timer.c: 128: oldVal++;
 38540  006E0E  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 38541  006E10  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 38542                           
 38543                           ;sw_timer.c: 130: retVal = oldVal;
 38544  006E12  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38545  006E16  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38546                           
 38547                           ;sw_timer.c: 132: return retVal;
 38548  006E1A  C042  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38549  006E1E  C043  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38550  006E22  0012               	return		;funcret
 38551  006E24                     __end_ofi2_TMR_SwapTimer:
 38552                           	opt stack 0
 38553                           tosu	equ	0xFFF
 38554                           tosh	equ	0xFFE
 38555                           tosl	equ	0xFFD
 38556                           pclatu	equ	0xFFB
 38557                           pclath	equ	0xFFA
 38558                           tblptru	equ	0xFF8
 38559                           tblptrh	equ	0xFF7
 38560                           tblptrl	equ	0xFF6
 38561                           tablat	equ	0xFF5
 38562                           prodh	equ	0xFF4
 38563                           prodl	equ	0xFF3
 38564                           intcon	equ	0xFF2
 38565                           intcon2	equ	0xFF1
 38566                           intcon3	equ	0xFF0
 38567                           indf0	equ	0xFEF
 38568                           postinc0	equ	0xFEE
 38569                           plusw0	equ	0xFEB
 38570                           fsr0h	equ	0xFEA
 38571                           fsr0l	equ	0xFE9
 38572                           wreg	equ	0xFE8
 38573                           postinc1	equ	0xFE6
 38574                           postdec1	equ	0xFE5
 38575                           plusw1	equ	0xFE3
 38576                           fsr1h	equ	0xFE2
 38577                           fsr1l	equ	0xFE1
 38578                           indf2	equ	0xFDF
 38579                           postinc2	equ	0xFDE
 38580                           postdec2	equ	0xFDD
 38581                           plusw2	equ	0xFDB
 38582                           fsr2h	equ	0xFDA
 38583                           fsr2l	equ	0xFD9
 38584                           status	equ	0xFD8
 38585                           
 38586 ;; *************** function i2_TMR1_WriteTimer *****************
 38587 ;; Defined at:
 38588 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 38589 ;; Parameters:    Size  Location     Type
 38590 ;;  timerVal        2    0[COMRAM] unsigned int 
 38591 ;; Auto vars:     Size  Location     Type
 38592 ;;		None
 38593 ;; Return value:  Size  Location     Type
 38594 ;;                  1    wreg      void 
 38595 ;; Registers used:
 38596 ;;		None
 38597 ;; Tracked objects:
 38598 ;;		On entry : 0/0
 38599 ;;		On exit  : 0/0
 38600 ;;		Unchanged: 0/0
 38601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38606 ;;Total ram usage:        2 bytes
 38607 ;; Hardware stack levels used:    1
 38608 ;; This function calls:
 38609 ;;		Nothing
 38610 ;; This function is called by:
 38611 ;;		i2_TMR_SwapTimer
 38612 ;; This function uses a non-reentrant model
 38613 ;;
 38614                           
 38615                           	psect	text214
 38616  0075A6                     __ptext214:
 38617                           	opt stack 0
 38618  0075A6                     i2_TMR1_WriteTimer:
 38619                           	opt stack 13
 38620                           
 38621                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 38622                           
 38623                           ;incstack = 0
 38624  0075A6  A4CD               	btfss	4045,2,c	;volatile
 38625  0075A8  D007               	goto	i2l1347
 38626                           
 38627                           ;tmr1.c: 123: {
 38628                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 38629  0075AA  90CD               	bcf	4045,0,c	;volatile
 38630                           
 38631                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 38632  0075AC  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38633                           
 38634                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 38635  0075B0  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38636                           
 38637                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 38638  0075B4  80CD               	bsf	4045,0,c	;volatile
 38639                           
 38640                           ;tmr1.c: 133: }
 38641  0075B6  0012               	return	
 38642  0075B8                     i2l1347:
 38643                           
 38644                           ;tmr1.c: 134: else
 38645                           ;tmr1.c: 135: {
 38646                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 38647  0075B8  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38648                           
 38649                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 38650  0075BC  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38651  0075C0  0012               	return		;funcret
 38652  0075C2                     __end_ofi2_TMR1_WriteTimer:
 38653                           	opt stack 0
 38654                           tosu	equ	0xFFF
 38655                           tosh	equ	0xFFE
 38656                           tosl	equ	0xFFD
 38657                           pclatu	equ	0xFFB
 38658                           pclath	equ	0xFFA
 38659                           tblptru	equ	0xFF8
 38660                           tblptrh	equ	0xFF7
 38661                           tblptrl	equ	0xFF6
 38662                           tablat	equ	0xFF5
 38663                           prodh	equ	0xFF4
 38664                           prodl	equ	0xFF3
 38665                           intcon	equ	0xFF2
 38666                           intcon2	equ	0xFF1
 38667                           intcon3	equ	0xFF0
 38668                           indf0	equ	0xFEF
 38669                           postinc0	equ	0xFEE
 38670                           plusw0	equ	0xFEB
 38671                           fsr0h	equ	0xFEA
 38672                           fsr0l	equ	0xFE9
 38673                           wreg	equ	0xFE8
 38674                           postinc1	equ	0xFE6
 38675                           postdec1	equ	0xFE5
 38676                           plusw1	equ	0xFE3
 38677                           fsr1h	equ	0xFE2
 38678                           fsr1l	equ	0xFE1
 38679                           indf2	equ	0xFDF
 38680                           postinc2	equ	0xFDE
 38681                           postdec2	equ	0xFDD
 38682                           plusw2	equ	0xFDB
 38683                           fsr2h	equ	0xFDA
 38684                           fsr2l	equ	0xFD9
 38685                           status	equ	0xFD8
 38686                           
 38687 ;; *************** function i2_SwTimersInterrupt *****************
 38688 ;; Defined at:
 38689 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38690 ;; Parameters:    Size  Location     Type
 38691 ;;		None
 38692 ;; Auto vars:     Size  Location     Type
 38693 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 38694 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 38695 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 38696 ;; Return value:  Size  Location     Type
 38697 ;;                  4   24[COMRAM] unsigned long 
 38698 ;; Registers used:
 38699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38700 ;; Tracked objects:
 38701 ;;		On entry : F/0
 38702 ;;		On exit  : F/0
 38703 ;;		Unchanged: 0/0
 38704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38706 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38707 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38708 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38709 ;;Total ram usage:       17 bytes
 38710 ;; Hardware stack levels used:    1
 38711 ;; Hardware stack levels required when called:    2
 38712 ;; This function calls:
 38713 ;;		i2_TMR_GetDeltaTime
 38714 ;; This function is called by:
 38715 ;;		_TMR_ISR_lora
 38716 ;; This function uses a non-reentrant model
 38717 ;;
 38718                           
 38719                           	psect	text215
 38720  004E34                     __ptext215:
 38721                           	opt stack 0
 38722  004E34                     i2_SwTimersInterrupt:
 38723                           	opt stack 12
 38724                           
 38725                           ; BSR set to: 0
 38726                           ;sw_timer.c: 289: uint8_t i;
 38727                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38728                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38729                           
 38730                           ;incstack = 0
 38731  004E34  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 38732  004E36  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 38733  004E38  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 38734  004E3A  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 38735                           
 38736                           ; BSR set to: 0
 38737                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38738  004E3C  EC2D  F026         	call	i2_TMR_GetDeltaTime	;wreg free
 38739  004E40  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 38740  004E44  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 38741  004E48  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 38742  004E4C  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 38743                           
 38744                           ; BSR set to: 0
 38745                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38746  004E50  6A29               	clrf	i2SwTimersInterrupt@i,c
 38747  004E52  D05A               	goto	i2l10656
 38748  004E54                     i2l10644:
 38749                           
 38750                           ; BSR set to: 0
 38751                           ;sw_timer.c: 298: {
 38752                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38753  004E54  5029               	movf	i2SwTimersInterrupt@i,w,c
 38754  004E56  0D08               	mullw	8
 38755  004E58  0E04               	movlw	low (_swTimers+4)
 38756  004E5A  24F3               	addwf	prodl,w,c
 38757  004E5C  6ED9               	movwf	fsr2l,c
 38758  004E5E  0E03               	movlw	high (_swTimers+4)
 38759  004E60  20F4               	addwfc	prodh,w,c
 38760  004E62  6EDA               	movwf	fsr2h,c
 38761  004E64  04DE               	decf	postinc2,w,c
 38762  004E66  E14F               	bnz	i2l10654
 38763                           
 38764                           ; BSR set to: 0
 38765                           ;sw_timer.c: 302: {
 38766                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38767  004E68  5029               	movf	i2SwTimersInterrupt@i,w,c
 38768  004E6A  0D08               	mullw	8
 38769  004E6C  0E00               	movlw	low _swTimers
 38770  004E6E  24F3               	addwf	prodl,w,c
 38771  004E70  6ED9               	movwf	fsr2l,c
 38772  004E72  0E03               	movlw	high _swTimers
 38773  004E74  20F4               	addwfc	prodh,w,c
 38774  004E76  6EDA               	movwf	fsr2h,c
 38775  004E78  50DE               	movf	postinc2,w,c
 38776  004E7A  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 38777  004E7C  50DE               	movf	postinc2,w,c
 38778  004E7E  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 38779  004E80  50DE               	movf	postinc2,w,c
 38780  004E82  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 38781  004E84  50DE               	movf	postinc2,w,c
 38782  004E86  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 38783  004E88  E30D               	bnc	i2l10650
 38784                           
 38785                           ; BSR set to: 0
 38786                           ;sw_timer.c: 304: {
 38787                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38788  004E8A  5029               	movf	i2SwTimersInterrupt@i,w,c
 38789  004E8C  0D08               	mullw	8
 38790  004E8E  0E00               	movlw	low _swTimers
 38791  004E90  24F3               	addwf	prodl,w,c
 38792  004E92  6ED9               	movwf	fsr2l,c
 38793  004E94  0E03               	movlw	high _swTimers
 38794  004E96  20F4               	addwfc	prodh,w,c
 38795  004E98  6EDA               	movwf	fsr2h,c
 38796  004E9A  6ADE               	clrf	postinc2,c
 38797  004E9C  6ADE               	clrf	postinc2,c
 38798  004E9E  6ADE               	clrf	postinc2,c
 38799  004EA0  6ADD               	clrf	postdec2,c
 38800                           
 38801                           ;sw_timer.c: 306: }
 38802  004EA2  D031               	goto	i2l10654
 38803  004EA4                     i2l10650:
 38804                           
 38805                           ; BSR set to: 0
 38806                           ;sw_timer.c: 307: else
 38807                           ;sw_timer.c: 308: {
 38808                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38809  004EA4  5029               	movf	i2SwTimersInterrupt@i,w,c
 38810  004EA6  0D08               	mullw	8
 38811  004EA8  0E00               	movlw	low _swTimers
 38812  004EAA  24F3               	addwf	prodl,w,c
 38813  004EAC  6ED9               	movwf	fsr2l,c
 38814  004EAE  0E03               	movlw	high _swTimers
 38815  004EB0  20F4               	addwfc	prodh,w,c
 38816  004EB2  6EDA               	movwf	fsr2h,c
 38817  004EB4  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 38818  004EB6  5EDE               	subwf	postinc2,f,c
 38819  004EB8  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 38820  004EBA  5ADE               	subwfb	postinc2,f,c
 38821  004EBC  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 38822  004EBE  5ADE               	subwfb	postinc2,f,c
 38823  004EC0  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 38824  004EC2  5ADE               	subwfb	postinc2,f,c
 38825                           
 38826                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38827  004EC4  5029               	movf	i2SwTimersInterrupt@i,w,c
 38828  004EC6  0D08               	mullw	8
 38829  004EC8  0E00               	movlw	low _swTimers
 38830  004ECA  24F3               	addwf	prodl,w,c
 38831  004ECC  6ED9               	movwf	fsr2l,c
 38832  004ECE  0E03               	movlw	high _swTimers
 38833  004ED0  20F4               	addwfc	prodh,w,c
 38834  004ED2  6EDA               	movwf	fsr2h,c
 38835  004ED4  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 38836  004ED6  5CDE               	subwf	postinc2,w,c
 38837  004ED8  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 38838  004EDA  58DE               	subwfb	postinc2,w,c
 38839  004EDC  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 38840  004EDE  58DE               	subwfb	postinc2,w,c
 38841  004EE0  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 38842  004EE2  58DE               	subwfb	postinc2,w,c
 38843  004EE4  E210               	bc	i2l10654
 38844                           
 38845                           ; BSR set to: 0
 38846                           ;sw_timer.c: 313: {
 38847                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38848  004EE6  5029               	movf	i2SwTimersInterrupt@i,w,c
 38849  004EE8  0D08               	mullw	8
 38850  004EEA  0E00               	movlw	low _swTimers
 38851  004EEC  24F3               	addwf	prodl,w,c
 38852  004EEE  6ED9               	movwf	fsr2l,c
 38853  004EF0  0E03               	movlw	high _swTimers
 38854  004EF2  20F4               	addwfc	prodh,w,c
 38855  004EF4  6EDA               	movwf	fsr2h,c
 38856  004EF6  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 38857  004EFA  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 38858  004EFE  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 38859  004F02  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 38860  004F06                     i2l10654:
 38861                           
 38862                           ; BSR set to: 0
 38863  004F06  2A29               	incf	i2SwTimersInterrupt@i,f,c
 38864  004F08                     i2l10656:
 38865                           
 38866                           ; BSR set to: 0
 38867  004F08  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38868  004F0A  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 38869  004F0C  E3A3               	bnc	i2l10644
 38870                           
 38871                           ; BSR set to: 0
 38872                           ;sw_timer.c: 315: }
 38873                           ;sw_timer.c: 316: }
 38874                           ;sw_timer.c: 317: }
 38875                           ;sw_timer.c: 318: }
 38876                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38877  004F0E  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 38878  004F12  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 38879  004F16  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 38880  004F1A  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 38881                           
 38882                           ; BSR set to: 0
 38883  004F1E  0012               	return		;funcret
 38884  004F20                     __end_ofi2_SwTimersInterrupt:
 38885                           	opt stack 0
 38886                           tosu	equ	0xFFF
 38887                           tosh	equ	0xFFE
 38888                           tosl	equ	0xFFD
 38889                           pclatu	equ	0xFFB
 38890                           pclath	equ	0xFFA
 38891                           tblptru	equ	0xFF8
 38892                           tblptrh	equ	0xFF7
 38893                           tblptrl	equ	0xFF6
 38894                           tablat	equ	0xFF5
 38895                           prodh	equ	0xFF4
 38896                           prodl	equ	0xFF3
 38897                           intcon	equ	0xFF2
 38898                           intcon2	equ	0xFF1
 38899                           intcon3	equ	0xFF0
 38900                           indf0	equ	0xFEF
 38901                           postinc0	equ	0xFEE
 38902                           plusw0	equ	0xFEB
 38903                           fsr0h	equ	0xFEA
 38904                           fsr0l	equ	0xFE9
 38905                           wreg	equ	0xFE8
 38906                           postinc1	equ	0xFE6
 38907                           postdec1	equ	0xFE5
 38908                           plusw1	equ	0xFE3
 38909                           fsr1h	equ	0xFE2
 38910                           fsr1l	equ	0xFE1
 38911                           indf2	equ	0xFDF
 38912                           postinc2	equ	0xFDE
 38913                           postdec2	equ	0xFDD
 38914                           plusw2	equ	0xFDB
 38915                           fsr2h	equ	0xFDA
 38916                           fsr2l	equ	0xFD9
 38917                           status	equ	0xFD8
 38918                           
 38919 ;; *************** function i2_TMR_GetDeltaTime *****************
 38920 ;; Defined at:
 38921 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38922 ;; Parameters:    Size  Location     Type
 38923 ;;		None
 38924 ;; Auto vars:     Size  Location     Type
 38925 ;;		None
 38926 ;; Return value:  Size  Location     Type
 38927 ;;                  4    8[COMRAM] unsigned long 
 38928 ;; Registers used:
 38929 ;;		wreg, status,2, status,0, cstack
 38930 ;; Tracked objects:
 38931 ;;		On entry : F/0
 38932 ;;		On exit  : F/0
 38933 ;;		Unchanged: 0/0
 38934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38937 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38938 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38939 ;;Total ram usage:       16 bytes
 38940 ;; Hardware stack levels used:    1
 38941 ;; Hardware stack levels required when called:    1
 38942 ;; This function calls:
 38943 ;;		i2_TMR1_ReadTimer
 38944 ;; This function is called by:
 38945 ;;		i2_SwTimersInterrupt
 38946 ;; This function uses a non-reentrant model
 38947 ;;
 38948                           
 38949                           	psect	text216
 38950  004C5A                     __ptext216:
 38951                           	opt stack 0
 38952  004C5A                     i2_TMR_GetDeltaTime:
 38953                           	opt stack 12
 38954                           
 38955                           ; BSR set to: 0
 38956                           ;sw_timer.c: 90: static uint32_t retVal;
 38957                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38958                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38959                           
 38960                           ; BSR set to: 0
 38961                           ;incstack = 0
 38962  004C5A  EC8C  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38963  004C5E  C001  F03E         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38964  004C62  C002  F03F         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38965                           
 38966                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38967  004C66  0100               	movlb	0	; () banked
 38968  004C68  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 38969  004C6A  E13D               	bnz	i2l9962
 38970                           
 38971                           ; BSR set to: 0
 38972                           ;sw_timer.c: 96: {
 38973                           ;sw_timer.c: 97: timerOverflow = 0;
 38974  004C6C  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 38975                           
 38976                           ; BSR set to: 0
 38977                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38978  004C6E  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 38979  004C70  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38980  004C72  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 38981  004C74  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 38982  004C76  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38983  004C78  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 38984  004C7A  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 38985  004C7C  A0D8               	btfss	status,0,c
 38986  004C7E  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 38987  004C80  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 38988  004C82  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 38989  004C84  5036               	movf	_ticksAccounted,w,c	;volatile
 38990  004C86  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 38991  004C88  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 38992  004C8A  5037               	movf	_ticksAccounted+1,w,c	;volatile
 38993  004C8C  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 38994  004C8E  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 38995  004C90  5038               	movf	_ticksAccounted+2,w,c	;volatile
 38996  004C92  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 38997  004C94  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 38998  004C96  5039               	movf	_ticksAccounted+3,w,c	;volatile
 38999  004C98  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39000  004C9A  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39001  004C9C  503A               	movf	_ticksAdded,w,c	;volatile
 39002  004C9E  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39003  004CA0  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 39004  004CA2  503B               	movf	_ticksAdded+1,w,c	;volatile
 39005  004CA4  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39006  004CA6  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 39007  004CA8  503C               	movf	_ticksAdded+2,w,c	;volatile
 39008  004CAA  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39009  004CAC  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 39010  004CAE  503D               	movf	_ticksAdded+3,w,c	;volatile
 39011  004CB0  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39012  004CB2  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 39013  004CB4  0E00               	movlw	0
 39014  004CB6  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 39015  004CB8  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39016  004CBA  0E00               	movlw	0
 39017  004CBC  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 39018  004CBE  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39019  004CC0  0E01               	movlw	1
 39020  004CC2  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 39021  004CC4  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39022  004CC6  0E00               	movlw	0
 39023  004CC8  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 39024  004CCA  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39025                           
 39026                           ; BSR set to: 0
 39027                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 39028  004CCC  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 39029  004CD0  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 39030  004CD4  6A38               	clrf	_ticksAccounted+2,c	;volatile
 39031  004CD6  6A39               	clrf	_ticksAccounted+3,c	;volatile
 39032                           
 39033                           ; BSR set to: 0
 39034                           ;sw_timer.c: 100: ticksAdded = 0;
 39035  004CD8  6A3A               	clrf	_ticksAdded,c	;volatile
 39036  004CDA  6A3B               	clrf	_ticksAdded+1,c	;volatile
 39037  004CDC  6A3C               	clrf	_ticksAdded+2,c	;volatile
 39038  004CDE  6A3D               	clrf	_ticksAdded+3,c	;volatile
 39039                           
 39040                           ; BSR set to: 0
 39041                           ;sw_timer.c: 101: reloadVal = 0;
 39042  004CE0  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 39043  004CE2  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 39044                           
 39045                           ;sw_timer.c: 102: }
 39046  004CE4  D028               	goto	i2l9964
 39047  004CE6                     i2l9962:
 39048                           
 39049                           ; BSR set to: 0
 39050                           ;sw_timer.c: 103: else
 39051                           ;sw_timer.c: 104: {
 39052                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 39053  004CE6  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 39054  004CE8  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 39055  004CEA  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 39056  004CEC  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 39057  004CEE  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 39058  004CF0  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 39059  004CF2  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 39060  004CF4  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 39061  004CF6  5036               	movf	_ticksAccounted,w,c	;volatile
 39062  004CF8  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 39063  004CFA  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 39064  004CFC  5037               	movf	_ticksAccounted+1,w,c	;volatile
 39065  004CFE  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 39066  004D00  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 39067  004D02  5038               	movf	_ticksAccounted+2,w,c	;volatile
 39068  004D04  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 39069  004D06  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 39070  004D08  5039               	movf	_ticksAccounted+3,w,c	;volatile
 39071  004D0A  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39072  004D0C  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39073  004D0E  503A               	movf	_ticksAdded,w,c	;volatile
 39074  004D10  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39075  004D12  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39076  004D14  503B               	movf	_ticksAdded+1,w,c	;volatile
 39077  004D16  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39078  004D18  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39079  004D1A  503C               	movf	_ticksAdded+2,w,c	;volatile
 39080  004D1C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39081  004D1E  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39082  004D20  503D               	movf	_ticksAdded+3,w,c	;volatile
 39083  004D22  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39084  004D24  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39085                           
 39086                           ;sw_timer.c: 106: ticksAccounted += retVal;
 39087  004D26  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 39088  004D28  2636               	addwf	_ticksAccounted,f,c	;volatile
 39089  004D2A  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 39090  004D2C  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 39091  004D2E  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 39092  004D30  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 39093  004D32  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 39094  004D34  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 39095  004D36                     i2l9964:
 39096                           
 39097                           ; BSR set to: 0
 39098                           ;sw_timer.c: 107: }
 39099                           ;sw_timer.c: 109: return retVal;
 39100  004D36  C032  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 39101  004D3A  C033  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 39102  004D3E  C034  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 39103  004D42  C035  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 39104                           
 39105                           ; BSR set to: 0
 39106  004D46  0012               	return		;funcret
 39107  004D48                     __end_ofi2_TMR_GetDeltaTime:
 39108                           	opt stack 0
 39109                           tosu	equ	0xFFF
 39110                           tosh	equ	0xFFE
 39111                           tosl	equ	0xFFD
 39112                           pclatu	equ	0xFFB
 39113                           pclath	equ	0xFFA
 39114                           tblptru	equ	0xFF8
 39115                           tblptrh	equ	0xFF7
 39116                           tblptrl	equ	0xFF6
 39117                           tablat	equ	0xFF5
 39118                           prodh	equ	0xFF4
 39119                           prodl	equ	0xFF3
 39120                           intcon	equ	0xFF2
 39121                           intcon2	equ	0xFF1
 39122                           intcon3	equ	0xFF0
 39123                           indf0	equ	0xFEF
 39124                           postinc0	equ	0xFEE
 39125                           plusw0	equ	0xFEB
 39126                           fsr0h	equ	0xFEA
 39127                           fsr0l	equ	0xFE9
 39128                           wreg	equ	0xFE8
 39129                           postinc1	equ	0xFE6
 39130                           postdec1	equ	0xFE5
 39131                           plusw1	equ	0xFE3
 39132                           fsr1h	equ	0xFE2
 39133                           fsr1l	equ	0xFE1
 39134                           indf2	equ	0xFDF
 39135                           postinc2	equ	0xFDE
 39136                           postdec2	equ	0xFDD
 39137                           plusw2	equ	0xFDB
 39138                           fsr2h	equ	0xFDA
 39139                           fsr2l	equ	0xFD9
 39140                           status	equ	0xFD8
 39141                           
 39142 ;; *************** function i2_TMR1_ReadTimer *****************
 39143 ;; Defined at:
 39144 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 39145 ;; Parameters:    Size  Location     Type
 39146 ;;		None
 39147 ;; Auto vars:     Size  Location     Type
 39148 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 39149 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 39150 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 39151 ;; Return value:  Size  Location     Type
 39152 ;;                  2    0[COMRAM] unsigned int 
 39153 ;; Registers used:
 39154 ;;		wreg, status,2
 39155 ;; Tracked objects:
 39156 ;;		On entry : 0/0
 39157 ;;		On exit  : 0/0
 39158 ;;		Unchanged: 0/0
 39159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39161 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39163 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39164 ;;Total ram usage:        8 bytes
 39165 ;; Hardware stack levels used:    1
 39166 ;; This function calls:
 39167 ;;		Nothing
 39168 ;; This function is called by:
 39169 ;;		i2_TMR_GetDeltaTime
 39170 ;;		i2_TMR_SwapTimer
 39171 ;; This function uses a non-reentrant model
 39172 ;;
 39173                           
 39174                           	psect	text217
 39175  007518                     __ptext217:
 39176                           	opt stack 0
 39177  007518                     i2_TMR1_ReadTimer:
 39178                           	opt stack 13
 39179                           
 39180                           ;tmr1.c: 108: uint16_t readVal;
 39181                           ;tmr1.c: 109: uint8_t readValHigh;
 39182                           ;tmr1.c: 110: uint8_t readValLow;
 39183                           ;tmr1.c: 112: readValLow = TMR1L;
 39184                           
 39185                           ; BSR set to: 0
 39186                           ;incstack = 0
 39187  007518  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39188                           
 39189                           ;tmr1.c: 113: readValHigh = TMR1H;
 39190  00751C  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39191                           
 39192                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39193  007520  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39194  007522  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39195  007524  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39196  007526  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39197  007528  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39198                           
 39199                           ;tmr1.c: 117: return readVal;
 39200  00752C  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39201  007530  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39202  007534  0012               	return		;funcret
 39203  007536                     __end_ofi2_TMR1_ReadTimer:
 39204                           	opt stack 0
 39205                           tosu	equ	0xFFF
 39206                           tosh	equ	0xFFE
 39207                           tosl	equ	0xFFD
 39208                           pclatu	equ	0xFFB
 39209                           pclath	equ	0xFFA
 39210                           tblptru	equ	0xFF8
 39211                           tblptrh	equ	0xFF7
 39212                           tblptrl	equ	0xFF6
 39213                           tablat	equ	0xFF5
 39214                           prodh	equ	0xFF4
 39215                           prodl	equ	0xFF3
 39216                           intcon	equ	0xFF2
 39217                           intcon2	equ	0xFF1
 39218                           intcon3	equ	0xFF0
 39219                           indf0	equ	0xFEF
 39220                           postinc0	equ	0xFEE
 39221                           plusw0	equ	0xFEB
 39222                           fsr0h	equ	0xFEA
 39223                           fsr0l	equ	0xFE9
 39224                           wreg	equ	0xFE8
 39225                           postinc1	equ	0xFE6
 39226                           postdec1	equ	0xFE5
 39227                           plusw1	equ	0xFE3
 39228                           fsr1h	equ	0xFE2
 39229                           fsr1l	equ	0xFE1
 39230                           indf2	equ	0xFDF
 39231                           postinc2	equ	0xFDE
 39232                           postdec2	equ	0xFDD
 39233                           plusw2	equ	0xFDB
 39234                           fsr2h	equ	0xFDA
 39235                           fsr2l	equ	0xFD9
 39236                           status	equ	0xFD8
 39237                           
 39238 ;; *************** function _PIN_MANAGER_IOC *****************
 39239 ;; Defined at:
 39240 ;;		line 103 in file "mcc_generated_files/pin_manager.c"
 39241 ;; Parameters:    Size  Location     Type
 39242 ;;		None
 39243 ;; Auto vars:     Size  Location     Type
 39244 ;;		None
 39245 ;; Return value:  Size  Location     Type
 39246 ;;                  1    wreg      void 
 39247 ;; Registers used:
 39248 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39249 ;; Tracked objects:
 39250 ;;		On entry : 0/0
 39251 ;;		On exit  : 0/0
 39252 ;;		Unchanged: 0/0
 39253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39258 ;;Total ram usage:        0 bytes
 39259 ;; Hardware stack levels used:    1
 39260 ;; Hardware stack levels required when called:    2
 39261 ;; This function calls:
 39262 ;;		_IOCB4_ISR
 39263 ;; This function is called by:
 39264 ;;		_INTERRUPT_InterruptManager
 39265 ;; This function uses a non-reentrant model
 39266 ;;
 39267                           
 39268                           	psect	text218
 39269  0078A2                     __ptext218:
 39270                           	opt stack 0
 39271  0078A2                     _PIN_MANAGER_IOC:
 39272                           	opt stack 15
 39273                           
 39274                           ;pin_manager.c: 106: if(IOCBbits.IOCB4 == 1)
 39275                           
 39276                           ;incstack = 0
 39277  0078A2  B862               	btfsc	3938,4,c	;volatile
 39278                           
 39279                           ;pin_manager.c: 107: {
 39280                           ;pin_manager.c: 108: IOCB4_ISR();
 39281  0078A4  ECE1  F03A         	call	_IOCB4_ISR	;wreg free
 39282                           
 39283                           ;pin_manager.c: 109: }
 39284                           ;pin_manager.c: 112: INTCONbits.RBIF = 0;
 39285  0078A8  90F2               	bcf	intcon,0,c	;volatile
 39286  0078AA  0012               	return		;funcret
 39287  0078AC                     __end_of_PIN_MANAGER_IOC:
 39288                           	opt stack 0
 39289                           tosu	equ	0xFFF
 39290                           tosh	equ	0xFFE
 39291                           tosl	equ	0xFFD
 39292                           pclatu	equ	0xFFB
 39293                           pclath	equ	0xFFA
 39294                           tblptru	equ	0xFF8
 39295                           tblptrh	equ	0xFF7
 39296                           tblptrl	equ	0xFF6
 39297                           tablat	equ	0xFF5
 39298                           prodh	equ	0xFF4
 39299                           prodl	equ	0xFF3
 39300                           intcon	equ	0xFF2
 39301                           intcon2	equ	0xFF1
 39302                           intcon3	equ	0xFF0
 39303                           indf0	equ	0xFEF
 39304                           postinc0	equ	0xFEE
 39305                           plusw0	equ	0xFEB
 39306                           fsr0h	equ	0xFEA
 39307                           fsr0l	equ	0xFE9
 39308                           wreg	equ	0xFE8
 39309                           postinc1	equ	0xFE6
 39310                           postdec1	equ	0xFE5
 39311                           plusw1	equ	0xFE3
 39312                           fsr1h	equ	0xFE2
 39313                           fsr1l	equ	0xFE1
 39314                           indf2	equ	0xFDF
 39315                           postinc2	equ	0xFDE
 39316                           postdec2	equ	0xFDD
 39317                           plusw2	equ	0xFDB
 39318                           fsr2h	equ	0xFDA
 39319                           fsr2l	equ	0xFD9
 39320                           status	equ	0xFD8
 39321                           
 39322 ;; *************** function _IOCB4_ISR *****************
 39323 ;; Defined at:
 39324 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
 39325 ;; Parameters:    Size  Location     Type
 39326 ;;		None
 39327 ;; Auto vars:     Size  Location     Type
 39328 ;;		None
 39329 ;; Return value:  Size  Location     Type
 39330 ;;                  1    wreg      void 
 39331 ;; Registers used:
 39332 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39333 ;; Tracked objects:
 39334 ;;		On entry : 0/0
 39335 ;;		On exit  : 0/0
 39336 ;;		Unchanged: 0/0
 39337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39342 ;;Total ram usage:        0 bytes
 39343 ;; Hardware stack levels used:    1
 39344 ;; Hardware stack levels required when called:    1
 39345 ;; This function calls:
 39346 ;;		Absolute function
 39347 ;;		_DIO2_ISR_Lora
 39348 ;;		_IOCB4_DefaultInterruptHandler
 39349 ;; This function is called by:
 39350 ;;		_PIN_MANAGER_IOC
 39351 ;; This function uses a non-reentrant model
 39352 ;;
 39353                           
 39354                           	psect	text219
 39355  0075C2                     __ptext219:
 39356                           	opt stack 0
 39357  0075C2                     _IOCB4_ISR:
 39358                           	opt stack 15
 39359                           
 39360                           ;pin_manager.c: 124: if(IOCB4_InterruptHandler)
 39361                           
 39362                           ;incstack = 0
 39363  0075C2  0101               	movlb	1	; () banked
 39364  0075C4  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39365  0075C6  11E9               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39366  0075C8  B4D8               	btfsc	status,2,c
 39367  0075CA  0012               	return	
 39368                           
 39369                           ; BSR set to: 1
 39370                           ;pin_manager.c: 125: {
 39371                           ;pin_manager.c: 126: IOCB4_InterruptHandler();
 39372  0075CC  0005               	push	
 39373  0075CE  6EFA               	movwf	pclath,c
 39374  0075D0  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39375  0075D2  6EFD               	movwf	tosl,c
 39376  0075D4  51E9               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39377  0075D6  6EFE               	movwf	tosh,c
 39378  0075D8  6AFF               	clrf	tosu,c
 39379  0075DA  50FA               	movf	pclath,w,c
 39380  0075DC  0012               	return		;indir
 39381  0075DE                     __end_of_IOCB4_ISR:
 39382                           	opt stack 0
 39383                           tosu	equ	0xFFF
 39384                           tosh	equ	0xFFE
 39385                           tosl	equ	0xFFD
 39386                           pclatu	equ	0xFFB
 39387                           pclath	equ	0xFFA
 39388                           tblptru	equ	0xFF8
 39389                           tblptrh	equ	0xFF7
 39390                           tblptrl	equ	0xFF6
 39391                           tablat	equ	0xFF5
 39392                           prodh	equ	0xFF4
 39393                           prodl	equ	0xFF3
 39394                           intcon	equ	0xFF2
 39395                           intcon2	equ	0xFF1
 39396                           intcon3	equ	0xFF0
 39397                           indf0	equ	0xFEF
 39398                           postinc0	equ	0xFEE
 39399                           plusw0	equ	0xFEB
 39400                           fsr0h	equ	0xFEA
 39401                           fsr0l	equ	0xFE9
 39402                           wreg	equ	0xFE8
 39403                           postinc1	equ	0xFE6
 39404                           postdec1	equ	0xFE5
 39405                           plusw1	equ	0xFE3
 39406                           fsr1h	equ	0xFE2
 39407                           fsr1l	equ	0xFE1
 39408                           indf2	equ	0xFDF
 39409                           postinc2	equ	0xFDE
 39410                           postdec2	equ	0xFDD
 39411                           plusw2	equ	0xFDB
 39412                           fsr2h	equ	0xFDA
 39413                           fsr2l	equ	0xFD9
 39414                           status	equ	0xFD8
 39415                           
 39416 ;; *************** function _DIO2_ISR_Lora *****************
 39417 ;; Defined at:
 39418 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39419 ;; Parameters:    Size  Location     Type
 39420 ;;		None
 39421 ;; Auto vars:     Size  Location     Type
 39422 ;;		None
 39423 ;; Return value:  Size  Location     Type
 39424 ;;                  1    wreg      void 
 39425 ;; Registers used:
 39426 ;;		status,2, status,0
 39427 ;; Tracked objects:
 39428 ;;		On entry : F/1
 39429 ;;		On exit  : F/0
 39430 ;;		Unchanged: 0/0
 39431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39436 ;;Total ram usage:        0 bytes
 39437 ;; Hardware stack levels used:    1
 39438 ;; This function calls:
 39439 ;;		Nothing
 39440 ;; This function is called by:
 39441 ;;		_DIO2_ISR_Lora_Init
 39442 ;;		_IOCB4_ISR
 39443 ;; This function uses a non-reentrant model
 39444 ;;
 39445                           
 39446                           	psect	text220
 39447  007914                     __ptext220:
 39448                           	opt stack 0
 39449  007914                     _DIO2_ISR_Lora:
 39450                           	opt stack 15
 39451                           
 39452                           ; BSR set to: 1
 39453                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39454                           
 39455                           ;incstack = 0
 39456  007914  0100               	movlb	0	; () banked
 39457  007916  85F0               	bsf	_dioStatus& (0+255),2,b	;volatile
 39458                           
 39459                           ; BSR set to: 0
 39460  007918  0012               	return		;funcret
 39461  00791A                     __end_of_DIO2_ISR_Lora:
 39462                           	opt stack 0
 39463                           tosu	equ	0xFFF
 39464                           tosh	equ	0xFFE
 39465                           tosl	equ	0xFFD
 39466                           pclatu	equ	0xFFB
 39467                           pclath	equ	0xFFA
 39468                           tblptru	equ	0xFF8
 39469                           tblptrh	equ	0xFF7
 39470                           tblptrl	equ	0xFF6
 39471                           tablat	equ	0xFF5
 39472                           prodh	equ	0xFF4
 39473                           prodl	equ	0xFF3
 39474                           intcon	equ	0xFF2
 39475                           intcon2	equ	0xFF1
 39476                           intcon3	equ	0xFF0
 39477                           indf0	equ	0xFEF
 39478                           postinc0	equ	0xFEE
 39479                           plusw0	equ	0xFEB
 39480                           fsr0h	equ	0xFEA
 39481                           fsr0l	equ	0xFE9
 39482                           wreg	equ	0xFE8
 39483                           postinc1	equ	0xFE6
 39484                           postdec1	equ	0xFE5
 39485                           plusw1	equ	0xFE3
 39486                           fsr1h	equ	0xFE2
 39487                           fsr1l	equ	0xFE1
 39488                           indf2	equ	0xFDF
 39489                           postinc2	equ	0xFDE
 39490                           postdec2	equ	0xFDD
 39491                           plusw2	equ	0xFDB
 39492                           fsr2h	equ	0xFDA
 39493                           fsr2l	equ	0xFD9
 39494                           status	equ	0xFD8
 39495                           
 39496 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 39497 ;; Defined at:
 39498 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 39499 ;; Parameters:    Size  Location     Type
 39500 ;;		None
 39501 ;; Auto vars:     Size  Location     Type
 39502 ;;		None
 39503 ;; Return value:  Size  Location     Type
 39504 ;;                  1    wreg      void 
 39505 ;; Registers used:
 39506 ;;		None
 39507 ;; Tracked objects:
 39508 ;;		On entry : F/1
 39509 ;;		On exit  : F/1
 39510 ;;		Unchanged: F/0
 39511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39516 ;;Total ram usage:        0 bytes
 39517 ;; Hardware stack levels used:    1
 39518 ;; This function calls:
 39519 ;;		Nothing
 39520 ;; This function is called by:
 39521 ;;		_PIN_MANAGER_Initialize
 39522 ;;		_IOCB4_ISR
 39523 ;; This function uses a non-reentrant model
 39524 ;;
 39525                           
 39526                           	psect	text221
 39527  007960                     __ptext221:
 39528                           	opt stack 0
 39529  007960                     _IOCB4_DefaultInterruptHandler:
 39530                           	opt stack 15
 39531                           
 39532                           ; BSR set to: 1
 39533                           
 39534                           ; BSR set to: 0
 39535                           ;incstack = 0
 39536  007960  0012               	return		;funcret
 39537  007962                     __end_of_IOCB4_DefaultInterruptHandler:
 39538                           	opt stack 0
 39539                           tosu	equ	0xFFF
 39540                           tosh	equ	0xFFE
 39541                           tosl	equ	0xFFD
 39542                           pclatu	equ	0xFFB
 39543                           pclath	equ	0xFFA
 39544                           tblptru	equ	0xFF8
 39545                           tblptrh	equ	0xFF7
 39546                           tblptrl	equ	0xFF6
 39547                           tablat	equ	0xFF5
 39548                           prodh	equ	0xFF4
 39549                           prodl	equ	0xFF3
 39550                           intcon	equ	0xFF2
 39551                           intcon2	equ	0xFF1
 39552                           intcon3	equ	0xFF0
 39553                           indf0	equ	0xFEF
 39554                           postinc0	equ	0xFEE
 39555                           plusw0	equ	0xFEB
 39556                           fsr0h	equ	0xFEA
 39557                           fsr0l	equ	0xFE9
 39558                           wreg	equ	0xFE8
 39559                           postinc1	equ	0xFE6
 39560                           postdec1	equ	0xFE5
 39561                           plusw1	equ	0xFE3
 39562                           fsr1h	equ	0xFE2
 39563                           fsr1l	equ	0xFE1
 39564                           indf2	equ	0xFDF
 39565                           postinc2	equ	0xFDE
 39566                           postdec2	equ	0xFDD
 39567                           plusw2	equ	0xFDB
 39568                           fsr2h	equ	0xFDA
 39569                           fsr2l	equ	0xFD9
 39570                           status	equ	0xFD8
 39571                           
 39572 ;; *************** function _INT2_ISR *****************
 39573 ;; Defined at:
 39574 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 39575 ;; Parameters:    Size  Location     Type
 39576 ;;		None
 39577 ;; Auto vars:     Size  Location     Type
 39578 ;;		None
 39579 ;; Return value:  Size  Location     Type
 39580 ;;                  1    wreg      void 
 39581 ;; Registers used:
 39582 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39583 ;; Tracked objects:
 39584 ;;		On entry : 0/0
 39585 ;;		On exit  : 0/0
 39586 ;;		Unchanged: 0/0
 39587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39592 ;;Total ram usage:        0 bytes
 39593 ;; Hardware stack levels used:    1
 39594 ;; Hardware stack levels required when called:    2
 39595 ;; This function calls:
 39596 ;;		_INT2_CallBack
 39597 ;; This function is called by:
 39598 ;;		_INTERRUPT_InterruptManager
 39599 ;; This function uses a non-reentrant model
 39600 ;;
 39601                           
 39602                           	psect	text222
 39603  00791A                     __ptext222:
 39604                           	opt stack 0
 39605  00791A                     _INT2_ISR:
 39606                           	opt stack 15
 39607                           
 39608                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 39609                           
 39610                           ; BSR set to: 1
 39611                           ;incstack = 0
 39612  00791A  92F0               	bcf	intcon3,1,c	;volatile
 39613                           
 39614                           ;ext_int.c: 95: INT2_CallBack();
 39615  00791C  EFEF  F03A         	goto	_INT2_CallBack	;wreg free
 39616  007920                     __end_of_INT2_ISR:
 39617                           	opt stack 0
 39618                           tosu	equ	0xFFF
 39619                           tosh	equ	0xFFE
 39620                           tosl	equ	0xFFD
 39621                           pclatu	equ	0xFFB
 39622                           pclath	equ	0xFFA
 39623                           tblptru	equ	0xFF8
 39624                           tblptrh	equ	0xFF7
 39625                           tblptrl	equ	0xFF6
 39626                           tablat	equ	0xFF5
 39627                           prodh	equ	0xFF4
 39628                           prodl	equ	0xFF3
 39629                           intcon	equ	0xFF2
 39630                           intcon2	equ	0xFF1
 39631                           intcon3	equ	0xFF0
 39632                           indf0	equ	0xFEF
 39633                           postinc0	equ	0xFEE
 39634                           plusw0	equ	0xFEB
 39635                           fsr0h	equ	0xFEA
 39636                           fsr0l	equ	0xFE9
 39637                           wreg	equ	0xFE8
 39638                           postinc1	equ	0xFE6
 39639                           postdec1	equ	0xFE5
 39640                           plusw1	equ	0xFE3
 39641                           fsr1h	equ	0xFE2
 39642                           fsr1l	equ	0xFE1
 39643                           indf2	equ	0xFDF
 39644                           postinc2	equ	0xFDE
 39645                           postdec2	equ	0xFDD
 39646                           plusw2	equ	0xFDB
 39647                           fsr2h	equ	0xFDA
 39648                           fsr2l	equ	0xFD9
 39649                           status	equ	0xFD8
 39650                           
 39651 ;; *************** function _INT2_CallBack *****************
 39652 ;; Defined at:
 39653 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 39654 ;; Parameters:    Size  Location     Type
 39655 ;;		None
 39656 ;; Auto vars:     Size  Location     Type
 39657 ;;		None
 39658 ;; Return value:  Size  Location     Type
 39659 ;;                  1    wreg      void 
 39660 ;; Registers used:
 39661 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39662 ;; Tracked objects:
 39663 ;;		On entry : 0/0
 39664 ;;		On exit  : 0/0
 39665 ;;		Unchanged: 0/0
 39666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39671 ;;Total ram usage:        0 bytes
 39672 ;; Hardware stack levels used:    1
 39673 ;; Hardware stack levels required when called:    1
 39674 ;; This function calls:
 39675 ;;		Absolute function
 39676 ;;		_DIO1_ISR_Lora
 39677 ;;		_INT2_DefaultInterruptHandler
 39678 ;; This function is called by:
 39679 ;;		_INT2_ISR
 39680 ;; This function uses a non-reentrant model
 39681 ;;
 39682                           
 39683                           	psect	text223
 39684  0075DE                     __ptext223:
 39685                           	opt stack 0
 39686  0075DE                     _INT2_CallBack:
 39687                           	opt stack 15
 39688                           
 39689                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 39690                           
 39691                           ;incstack = 0
 39692  0075DE  0101               	movlb	1	; () banked
 39693  0075E0  51E6               	movf	_INT2_InterruptHandler& (0+255),w,b
 39694  0075E2  11E7               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39695  0075E4  B4D8               	btfsc	status,2,c
 39696  0075E6  0012               	return	
 39697                           
 39698                           ; BSR set to: 1
 39699                           ;ext_int.c: 105: {
 39700                           ;ext_int.c: 106: INT2_InterruptHandler();
 39701  0075E8  0005               	push	
 39702  0075EA  6EFA               	movwf	pclath,c
 39703  0075EC  51E6               	movf	_INT2_InterruptHandler& (0+255),w,b
 39704  0075EE  6EFD               	movwf	tosl,c
 39705  0075F0  51E7               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39706  0075F2  6EFE               	movwf	tosh,c
 39707  0075F4  6AFF               	clrf	tosu,c
 39708  0075F6  50FA               	movf	pclath,w,c
 39709  0075F8  0012               	return		;indir
 39710  0075FA                     __end_of_INT2_CallBack:
 39711                           	opt stack 0
 39712                           tosu	equ	0xFFF
 39713                           tosh	equ	0xFFE
 39714                           tosl	equ	0xFFD
 39715                           pclatu	equ	0xFFB
 39716                           pclath	equ	0xFFA
 39717                           tblptru	equ	0xFF8
 39718                           tblptrh	equ	0xFF7
 39719                           tblptrl	equ	0xFF6
 39720                           tablat	equ	0xFF5
 39721                           prodh	equ	0xFF4
 39722                           prodl	equ	0xFF3
 39723                           intcon	equ	0xFF2
 39724                           intcon2	equ	0xFF1
 39725                           intcon3	equ	0xFF0
 39726                           indf0	equ	0xFEF
 39727                           postinc0	equ	0xFEE
 39728                           plusw0	equ	0xFEB
 39729                           fsr0h	equ	0xFEA
 39730                           fsr0l	equ	0xFE9
 39731                           wreg	equ	0xFE8
 39732                           postinc1	equ	0xFE6
 39733                           postdec1	equ	0xFE5
 39734                           plusw1	equ	0xFE3
 39735                           fsr1h	equ	0xFE2
 39736                           fsr1l	equ	0xFE1
 39737                           indf2	equ	0xFDF
 39738                           postinc2	equ	0xFDE
 39739                           postdec2	equ	0xFDD
 39740                           plusw2	equ	0xFDB
 39741                           fsr2h	equ	0xFDA
 39742                           fsr2l	equ	0xFD9
 39743                           status	equ	0xFD8
 39744                           
 39745 ;; *************** function _DIO1_ISR_Lora *****************
 39746 ;; Defined at:
 39747 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39748 ;; Parameters:    Size  Location     Type
 39749 ;;		None
 39750 ;; Auto vars:     Size  Location     Type
 39751 ;;		None
 39752 ;; Return value:  Size  Location     Type
 39753 ;;                  1    wreg      void 
 39754 ;; Registers used:
 39755 ;;		status,2, status,0
 39756 ;; Tracked objects:
 39757 ;;		On entry : F/1
 39758 ;;		On exit  : F/0
 39759 ;;		Unchanged: 0/0
 39760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39765 ;;Total ram usage:        0 bytes
 39766 ;; Hardware stack levels used:    1
 39767 ;; This function calls:
 39768 ;;		Nothing
 39769 ;; This function is called by:
 39770 ;;		_DIO1_ISR_Lora_Init
 39771 ;;		_INT2_CallBack
 39772 ;; This function uses a non-reentrant model
 39773 ;;
 39774                           
 39775                           	psect	text224
 39776  007920                     __ptext224:
 39777                           	opt stack 0
 39778  007920                     _DIO1_ISR_Lora:
 39779                           	opt stack 15
 39780                           
 39781                           ; BSR set to: 1
 39782                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 39783                           
 39784                           ;incstack = 0
 39785  007920  0100               	movlb	0	; () banked
 39786  007922  83F0               	bsf	_dioStatus& (0+255),1,b	;volatile
 39787                           
 39788                           ; BSR set to: 0
 39789  007924  0012               	return		;funcret
 39790  007926                     __end_of_DIO1_ISR_Lora:
 39791                           	opt stack 0
 39792                           tosu	equ	0xFFF
 39793                           tosh	equ	0xFFE
 39794                           tosl	equ	0xFFD
 39795                           pclatu	equ	0xFFB
 39796                           pclath	equ	0xFFA
 39797                           tblptru	equ	0xFF8
 39798                           tblptrh	equ	0xFF7
 39799                           tblptrl	equ	0xFF6
 39800                           tablat	equ	0xFF5
 39801                           prodh	equ	0xFF4
 39802                           prodl	equ	0xFF3
 39803                           intcon	equ	0xFF2
 39804                           intcon2	equ	0xFF1
 39805                           intcon3	equ	0xFF0
 39806                           indf0	equ	0xFEF
 39807                           postinc0	equ	0xFEE
 39808                           plusw0	equ	0xFEB
 39809                           fsr0h	equ	0xFEA
 39810                           fsr0l	equ	0xFE9
 39811                           wreg	equ	0xFE8
 39812                           postinc1	equ	0xFE6
 39813                           postdec1	equ	0xFE5
 39814                           plusw1	equ	0xFE3
 39815                           fsr1h	equ	0xFE2
 39816                           fsr1l	equ	0xFE1
 39817                           indf2	equ	0xFDF
 39818                           postinc2	equ	0xFDE
 39819                           postdec2	equ	0xFDD
 39820                           plusw2	equ	0xFDB
 39821                           fsr2h	equ	0xFDA
 39822                           fsr2l	equ	0xFD9
 39823                           status	equ	0xFD8
 39824                           
 39825 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39826 ;; Defined at:
 39827 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 39828 ;; Parameters:    Size  Location     Type
 39829 ;;		None
 39830 ;; Auto vars:     Size  Location     Type
 39831 ;;		None
 39832 ;; Return value:  Size  Location     Type
 39833 ;;                  1    wreg      void 
 39834 ;; Registers used:
 39835 ;;		None
 39836 ;; Tracked objects:
 39837 ;;		On entry : F/1
 39838 ;;		On exit  : F/1
 39839 ;;		Unchanged: F/0
 39840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39845 ;;Total ram usage:        0 bytes
 39846 ;; Hardware stack levels used:    1
 39847 ;; This function calls:
 39848 ;;		Nothing
 39849 ;; This function is called by:
 39850 ;;		_EXT_INT_Initialize
 39851 ;;		_INT2_CallBack
 39852 ;; This function uses a non-reentrant model
 39853 ;;
 39854                           
 39855                           	psect	text225
 39856  007962                     __ptext225:
 39857                           	opt stack 0
 39858  007962                     _INT2_DefaultInterruptHandler:
 39859                           	opt stack 15
 39860                           
 39861                           ; BSR set to: 1
 39862                           
 39863                           ; BSR set to: 0
 39864                           ;incstack = 0
 39865  007962  0012               	return		;funcret
 39866  007964                     __end_of_INT2_DefaultInterruptHandler:
 39867                           	opt stack 0
 39868                           tosu	equ	0xFFF
 39869                           tosh	equ	0xFFE
 39870                           tosl	equ	0xFFD
 39871                           pclatu	equ	0xFFB
 39872                           pclath	equ	0xFFA
 39873                           tblptru	equ	0xFF8
 39874                           tblptrh	equ	0xFF7
 39875                           tblptrl	equ	0xFF6
 39876                           tablat	equ	0xFF5
 39877                           prodh	equ	0xFF4
 39878                           prodl	equ	0xFF3
 39879                           intcon	equ	0xFF2
 39880                           intcon2	equ	0xFF1
 39881                           intcon3	equ	0xFF0
 39882                           indf0	equ	0xFEF
 39883                           postinc0	equ	0xFEE
 39884                           plusw0	equ	0xFEB
 39885                           fsr0h	equ	0xFEA
 39886                           fsr0l	equ	0xFE9
 39887                           wreg	equ	0xFE8
 39888                           postinc1	equ	0xFE6
 39889                           postdec1	equ	0xFE5
 39890                           plusw1	equ	0xFE3
 39891                           fsr1h	equ	0xFE2
 39892                           fsr1l	equ	0xFE1
 39893                           indf2	equ	0xFDF
 39894                           postinc2	equ	0xFDE
 39895                           postdec2	equ	0xFDD
 39896                           plusw2	equ	0xFDB
 39897                           fsr2h	equ	0xFDA
 39898                           fsr2l	equ	0xFD9
 39899                           status	equ	0xFD8
 39900                           
 39901 ;; *************** function _INT1_ISR *****************
 39902 ;; Defined at:
 39903 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 39904 ;; Parameters:    Size  Location     Type
 39905 ;;		None
 39906 ;; Auto vars:     Size  Location     Type
 39907 ;;		None
 39908 ;; Return value:  Size  Location     Type
 39909 ;;                  1    wreg      void 
 39910 ;; Registers used:
 39911 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39912 ;; Tracked objects:
 39913 ;;		On entry : 0/0
 39914 ;;		On exit  : 0/0
 39915 ;;		Unchanged: 0/0
 39916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39921 ;;Total ram usage:        0 bytes
 39922 ;; Hardware stack levels used:    1
 39923 ;; Hardware stack levels required when called:    2
 39924 ;; This function calls:
 39925 ;;		_INT1_CallBack
 39926 ;; This function is called by:
 39927 ;;		_INTERRUPT_InterruptManager
 39928 ;; This function uses a non-reentrant model
 39929 ;;
 39930                           
 39931                           	psect	text226
 39932  007926                     __ptext226:
 39933                           	opt stack 0
 39934  007926                     _INT1_ISR:
 39935                           	opt stack 15
 39936                           
 39937                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 39938                           
 39939                           ; BSR set to: 1
 39940                           ;incstack = 0
 39941  007926  90F0               	bcf	intcon3,0,c	;volatile
 39942                           
 39943                           ;ext_int.c: 54: INT1_CallBack();
 39944  007928  EFFD  F03A         	goto	_INT1_CallBack	;wreg free
 39945  00792C                     __end_of_INT1_ISR:
 39946                           	opt stack 0
 39947                           tosu	equ	0xFFF
 39948                           tosh	equ	0xFFE
 39949                           tosl	equ	0xFFD
 39950                           pclatu	equ	0xFFB
 39951                           pclath	equ	0xFFA
 39952                           tblptru	equ	0xFF8
 39953                           tblptrh	equ	0xFF7
 39954                           tblptrl	equ	0xFF6
 39955                           tablat	equ	0xFF5
 39956                           prodh	equ	0xFF4
 39957                           prodl	equ	0xFF3
 39958                           intcon	equ	0xFF2
 39959                           intcon2	equ	0xFF1
 39960                           intcon3	equ	0xFF0
 39961                           indf0	equ	0xFEF
 39962                           postinc0	equ	0xFEE
 39963                           plusw0	equ	0xFEB
 39964                           fsr0h	equ	0xFEA
 39965                           fsr0l	equ	0xFE9
 39966                           wreg	equ	0xFE8
 39967                           postinc1	equ	0xFE6
 39968                           postdec1	equ	0xFE5
 39969                           plusw1	equ	0xFE3
 39970                           fsr1h	equ	0xFE2
 39971                           fsr1l	equ	0xFE1
 39972                           indf2	equ	0xFDF
 39973                           postinc2	equ	0xFDE
 39974                           postdec2	equ	0xFDD
 39975                           plusw2	equ	0xFDB
 39976                           fsr2h	equ	0xFDA
 39977                           fsr2l	equ	0xFD9
 39978                           status	equ	0xFD8
 39979                           
 39980 ;; *************** function _INT1_CallBack *****************
 39981 ;; Defined at:
 39982 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 39983 ;; Parameters:    Size  Location     Type
 39984 ;;		None
 39985 ;; Auto vars:     Size  Location     Type
 39986 ;;		None
 39987 ;; Return value:  Size  Location     Type
 39988 ;;                  1    wreg      void 
 39989 ;; Registers used:
 39990 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39991 ;; Tracked objects:
 39992 ;;		On entry : 0/0
 39993 ;;		On exit  : 0/0
 39994 ;;		Unchanged: 0/0
 39995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40000 ;;Total ram usage:        0 bytes
 40001 ;; Hardware stack levels used:    1
 40002 ;; Hardware stack levels required when called:    1
 40003 ;; This function calls:
 40004 ;;		Absolute function
 40005 ;;		_DIO0_ISR_Lora
 40006 ;;		_INT1_DefaultInterruptHandler
 40007 ;; This function is called by:
 40008 ;;		_INT1_ISR
 40009 ;; This function uses a non-reentrant model
 40010 ;;
 40011                           
 40012                           	psect	text227
 40013  0075FA                     __ptext227:
 40014                           	opt stack 0
 40015  0075FA                     _INT1_CallBack:
 40016                           	opt stack 15
 40017                           
 40018                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 40019                           
 40020                           ;incstack = 0
 40021  0075FA  0101               	movlb	1	; () banked
 40022  0075FC  51E4               	movf	_INT1_InterruptHandler& (0+255),w,b
 40023  0075FE  11E5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40024  007600  B4D8               	btfsc	status,2,c
 40025  007602  0012               	return	
 40026                           
 40027                           ; BSR set to: 1
 40028                           ;ext_int.c: 64: {
 40029                           ;ext_int.c: 65: INT1_InterruptHandler();
 40030  007604  0005               	push	
 40031  007606  6EFA               	movwf	pclath,c
 40032  007608  51E4               	movf	_INT1_InterruptHandler& (0+255),w,b
 40033  00760A  6EFD               	movwf	tosl,c
 40034  00760C  51E5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40035  00760E  6EFE               	movwf	tosh,c
 40036  007610  6AFF               	clrf	tosu,c
 40037  007612  50FA               	movf	pclath,w,c
 40038  007614  0012               	return		;indir
 40039  007616                     __end_of_INT1_CallBack:
 40040                           	opt stack 0
 40041                           tosu	equ	0xFFF
 40042                           tosh	equ	0xFFE
 40043                           tosl	equ	0xFFD
 40044                           pclatu	equ	0xFFB
 40045                           pclath	equ	0xFFA
 40046                           tblptru	equ	0xFF8
 40047                           tblptrh	equ	0xFF7
 40048                           tblptrl	equ	0xFF6
 40049                           tablat	equ	0xFF5
 40050                           prodh	equ	0xFF4
 40051                           prodl	equ	0xFF3
 40052                           intcon	equ	0xFF2
 40053                           intcon2	equ	0xFF1
 40054                           intcon3	equ	0xFF0
 40055                           indf0	equ	0xFEF
 40056                           postinc0	equ	0xFEE
 40057                           plusw0	equ	0xFEB
 40058                           fsr0h	equ	0xFEA
 40059                           fsr0l	equ	0xFE9
 40060                           wreg	equ	0xFE8
 40061                           postinc1	equ	0xFE6
 40062                           postdec1	equ	0xFE5
 40063                           plusw1	equ	0xFE3
 40064                           fsr1h	equ	0xFE2
 40065                           fsr1l	equ	0xFE1
 40066                           indf2	equ	0xFDF
 40067                           postinc2	equ	0xFDE
 40068                           postdec2	equ	0xFDD
 40069                           plusw2	equ	0xFDB
 40070                           fsr2h	equ	0xFDA
 40071                           fsr2l	equ	0xFD9
 40072                           status	equ	0xFD8
 40073                           
 40074 ;; *************** function _DIO0_ISR_Lora *****************
 40075 ;; Defined at:
 40076 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 40077 ;; Parameters:    Size  Location     Type
 40078 ;;		None
 40079 ;; Auto vars:     Size  Location     Type
 40080 ;;		None
 40081 ;; Return value:  Size  Location     Type
 40082 ;;                  1    wreg      void 
 40083 ;; Registers used:
 40084 ;;		status,2, status,0
 40085 ;; Tracked objects:
 40086 ;;		On entry : F/1
 40087 ;;		On exit  : F/0
 40088 ;;		Unchanged: 0/0
 40089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40094 ;;Total ram usage:        0 bytes
 40095 ;; Hardware stack levels used:    1
 40096 ;; This function calls:
 40097 ;;		Nothing
 40098 ;; This function is called by:
 40099 ;;		_DIO0_ISR_Lora_Init
 40100 ;;		_INT1_CallBack
 40101 ;; This function uses a non-reentrant model
 40102 ;;
 40103                           
 40104                           	psect	text228
 40105  00792C                     __ptext228:
 40106                           	opt stack 0
 40107  00792C                     _DIO0_ISR_Lora:
 40108                           	opt stack 15
 40109                           
 40110                           ; BSR set to: 1
 40111                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 40112                           
 40113                           ;incstack = 0
 40114  00792C  0100               	movlb	0	; () banked
 40115  00792E  81F0               	bsf	_dioStatus& (0+255),0,b	;volatile
 40116                           
 40117                           ; BSR set to: 0
 40118  007930  0012               	return		;funcret
 40119  007932                     __end_of_DIO0_ISR_Lora:
 40120                           	opt stack 0
 40121                           tosu	equ	0xFFF
 40122                           tosh	equ	0xFFE
 40123                           tosl	equ	0xFFD
 40124                           pclatu	equ	0xFFB
 40125                           pclath	equ	0xFFA
 40126                           tblptru	equ	0xFF8
 40127                           tblptrh	equ	0xFF7
 40128                           tblptrl	equ	0xFF6
 40129                           tablat	equ	0xFF5
 40130                           prodh	equ	0xFF4
 40131                           prodl	equ	0xFF3
 40132                           intcon	equ	0xFF2
 40133                           intcon2	equ	0xFF1
 40134                           intcon3	equ	0xFF0
 40135                           indf0	equ	0xFEF
 40136                           postinc0	equ	0xFEE
 40137                           plusw0	equ	0xFEB
 40138                           fsr0h	equ	0xFEA
 40139                           fsr0l	equ	0xFE9
 40140                           wreg	equ	0xFE8
 40141                           postinc1	equ	0xFE6
 40142                           postdec1	equ	0xFE5
 40143                           plusw1	equ	0xFE3
 40144                           fsr1h	equ	0xFE2
 40145                           fsr1l	equ	0xFE1
 40146                           indf2	equ	0xFDF
 40147                           postinc2	equ	0xFDE
 40148                           postdec2	equ	0xFDD
 40149                           plusw2	equ	0xFDB
 40150                           fsr2h	equ	0xFDA
 40151                           fsr2l	equ	0xFD9
 40152                           status	equ	0xFD8
 40153                           
 40154 ;; *************** function _INT1_DefaultInterruptHandler *****************
 40155 ;; Defined at:
 40156 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 40157 ;; Parameters:    Size  Location     Type
 40158 ;;		None
 40159 ;; Auto vars:     Size  Location     Type
 40160 ;;		None
 40161 ;; Return value:  Size  Location     Type
 40162 ;;                  1    wreg      void 
 40163 ;; Registers used:
 40164 ;;		None
 40165 ;; Tracked objects:
 40166 ;;		On entry : F/1
 40167 ;;		On exit  : F/1
 40168 ;;		Unchanged: F/0
 40169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40174 ;;Total ram usage:        0 bytes
 40175 ;; Hardware stack levels used:    1
 40176 ;; This function calls:
 40177 ;;		Nothing
 40178 ;; This function is called by:
 40179 ;;		_EXT_INT_Initialize
 40180 ;;		_INT1_CallBack
 40181 ;; This function uses a non-reentrant model
 40182 ;;
 40183                           
 40184                           	psect	text229
 40185  007964                     __ptext229:
 40186                           	opt stack 0
 40187  007964                     _INT1_DefaultInterruptHandler:
 40188                           	opt stack 15
 40189                           
 40190                           ; BSR set to: 1
 40191                           
 40192                           ; BSR set to: 0
 40193                           ;incstack = 0
 40194  007964  0012               	return		;funcret
 40195  007966                     __end_of_INT1_DefaultInterruptHandler:
 40196                           	opt stack 0
 40197                           tosu	equ	0xFFF
 40198                           tosh	equ	0xFFE
 40199                           tosl	equ	0xFFD
 40200                           pclatu	equ	0xFFB
 40201                           pclath	equ	0xFFA
 40202                           tblptru	equ	0xFF8
 40203                           tblptrh	equ	0xFF7
 40204                           tblptrl	equ	0xFF6
 40205                           tablat	equ	0xFF5
 40206                           prodh	equ	0xFF4
 40207                           prodl	equ	0xFF3
 40208                           intcon	equ	0xFF2
 40209                           intcon2	equ	0xFF1
 40210                           intcon3	equ	0xFF0
 40211                           indf0	equ	0xFEF
 40212                           postinc0	equ	0xFEE
 40213                           plusw0	equ	0xFEB
 40214                           fsr0h	equ	0xFEA
 40215                           fsr0l	equ	0xFE9
 40216                           wreg	equ	0xFE8
 40217                           postinc1	equ	0xFE6
 40218                           postdec1	equ	0xFE5
 40219                           plusw1	equ	0xFE3
 40220                           fsr1h	equ	0xFE2
 40221                           fsr1l	equ	0xFE1
 40222                           indf2	equ	0xFDF
 40223                           postinc2	equ	0xFDE
 40224                           postdec2	equ	0xFDD
 40225                           plusw2	equ	0xFDB
 40226                           fsr2h	equ	0xFDA
 40227                           fsr2l	equ	0xFD9
 40228                           status	equ	0xFD8
 40229                           tosu	equ	0xFFF
 40230                           tosh	equ	0xFFE
 40231                           tosl	equ	0xFFD
 40232                           pclatu	equ	0xFFB
 40233                           pclath	equ	0xFFA
 40234                           tblptru	equ	0xFF8
 40235                           tblptrh	equ	0xFF7
 40236                           tblptrl	equ	0xFF6
 40237                           tablat	equ	0xFF5
 40238                           prodh	equ	0xFF4
 40239                           prodl	equ	0xFF3
 40240                           intcon	equ	0xFF2
 40241                           intcon2	equ	0xFF1
 40242                           intcon3	equ	0xFF0
 40243                           indf0	equ	0xFEF
 40244                           postinc0	equ	0xFEE
 40245                           plusw0	equ	0xFEB
 40246                           fsr0h	equ	0xFEA
 40247                           fsr0l	equ	0xFE9
 40248                           wreg	equ	0xFE8
 40249                           postinc1	equ	0xFE6
 40250                           postdec1	equ	0xFE5
 40251                           plusw1	equ	0xFE3
 40252                           fsr1h	equ	0xFE2
 40253                           fsr1l	equ	0xFE1
 40254                           indf2	equ	0xFDF
 40255                           postinc2	equ	0xFDE
 40256                           postdec2	equ	0xFDD
 40257                           plusw2	equ	0xFDB
 40258                           fsr2h	equ	0xFDA
 40259                           fsr2l	equ	0xFD9
 40260                           status	equ	0xFD8
 40261                           
 40262                           	psect	text230
 40263  000000                     __ptext230:
 40264                           	opt stack 0
 40265                           tosu	equ	0xFFF
 40266                           tosh	equ	0xFFE
 40267                           tosl	equ	0xFFD
 40268                           pclatu	equ	0xFFB
 40269                           pclath	equ	0xFFA
 40270                           tblptru	equ	0xFF8
 40271                           tblptrh	equ	0xFF7
 40272                           tblptrl	equ	0xFF6
 40273                           tablat	equ	0xFF5
 40274                           prodh	equ	0xFF4
 40275                           prodl	equ	0xFF3
 40276                           intcon	equ	0xFF2
 40277                           intcon2	equ	0xFF1
 40278                           intcon3	equ	0xFF0
 40279                           indf0	equ	0xFEF
 40280                           postinc0	equ	0xFEE
 40281                           plusw0	equ	0xFEB
 40282                           fsr0h	equ	0xFEA
 40283                           fsr0l	equ	0xFE9
 40284                           wreg	equ	0xFE8
 40285                           postinc1	equ	0xFE6
 40286                           postdec1	equ	0xFE5
 40287                           plusw1	equ	0xFE3
 40288                           fsr1h	equ	0xFE2
 40289                           fsr1l	equ	0xFE1
 40290                           indf2	equ	0xFDF
 40291                           postinc2	equ	0xFDE
 40292                           postdec2	equ	0xFDD
 40293                           plusw2	equ	0xFDB
 40294                           fsr2h	equ	0xFDA
 40295                           fsr2l	equ	0xFD9
 40296                           status	equ	0xFD8
 40297                           
 40298                           	psect	rparam
 40299  0000                     tosu	equ	0xFFF
 40300                           tosh	equ	0xFFE
 40301                           tosl	equ	0xFFD
 40302                           pclatu	equ	0xFFB
 40303                           pclath	equ	0xFFA
 40304                           tblptru	equ	0xFF8
 40305                           tblptrh	equ	0xFF7
 40306                           tblptrl	equ	0xFF6
 40307                           tablat	equ	0xFF5
 40308                           prodh	equ	0xFF4
 40309                           prodl	equ	0xFF3
 40310                           intcon	equ	0xFF2
 40311                           intcon2	equ	0xFF1
 40312                           intcon3	equ	0xFF0
 40313                           indf0	equ	0xFEF
 40314                           postinc0	equ	0xFEE
 40315                           plusw0	equ	0xFEB
 40316                           fsr0h	equ	0xFEA
 40317                           fsr0l	equ	0xFE9
 40318                           wreg	equ	0xFE8
 40319                           postinc1	equ	0xFE6
 40320                           postdec1	equ	0xFE5
 40321                           plusw1	equ	0xFE3
 40322                           fsr1h	equ	0xFE2
 40323                           fsr1l	equ	0xFE1
 40324                           indf2	equ	0xFDF
 40325                           postinc2	equ	0xFDE
 40326                           postdec2	equ	0xFDD
 40327                           plusw2	equ	0xFDB
 40328                           fsr2h	equ	0xFDA
 40329                           fsr2l	equ	0xFD9
 40330                           status	equ	0xFD8
 40331                           
 40332                           	psect	temp
 40333  000046                     btemp:
 40334                           	opt stack 0
 40335  000046                     	ds	12
 40336                           tosu	equ	0xFFF
 40337                           tosh	equ	0xFFE
 40338                           tosl	equ	0xFFD
 40339                           pclatu	equ	0xFFB
 40340                           pclath	equ	0xFFA
 40341                           tblptru	equ	0xFF8
 40342                           tblptrh	equ	0xFF7
 40343                           tblptrl	equ	0xFF6
 40344                           tablat	equ	0xFF5
 40345                           prodh	equ	0xFF4
 40346                           prodl	equ	0xFF3
 40347                           intcon	equ	0xFF2
 40348                           intcon2	equ	0xFF1
 40349                           intcon3	equ	0xFF0
 40350                           indf0	equ	0xFEF
 40351                           postinc0	equ	0xFEE
 40352                           plusw0	equ	0xFEB
 40353                           fsr0h	equ	0xFEA
 40354                           fsr0l	equ	0xFE9
 40355                           wreg	equ	0xFE8
 40356                           postinc1	equ	0xFE6
 40357                           postdec1	equ	0xFE5
 40358                           plusw1	equ	0xFE3
 40359                           fsr1h	equ	0xFE2
 40360                           fsr1l	equ	0xFE1
 40361                           indf2	equ	0xFDF
 40362                           postinc2	equ	0xFDE
 40363                           postdec2	equ	0xFDD
 40364                           plusw2	equ	0xFDB
 40365                           fsr2h	equ	0xFDA
 40366                           fsr2l	equ	0xFD9
 40367                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    402
    Data        57
    BSS         1277
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      82
    BANK0           160    136     147
    BANK1           256    105     238
    BANK2           256      0     245
    BANK3           256     20     180
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1658$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[4]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK3[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1658$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1658$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S983$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S983$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RxDataDone->_LORAWAN_SetCurrentDataRate
    _LORAWAN_SetCurrentDataRate->_ValidateDataRate
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6571498
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
           _TMR3_SetInterruptHandler
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          0     0      0  311853
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      68
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2178
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     200
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     989
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     189
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     589
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     189
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5815090
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2272914
                                            125 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  148400
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  665021
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  490519
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153169
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9360
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9803
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  311785
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  158351
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  536425
                                             80 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  500071
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2939774
                                            132 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  200722
                                            114 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1036670
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     389
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1501171
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  474640
                                             71 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  316728
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1010491
                                            125 BANK0      5     5      0
                                            102 BANK1      3     0      3
                                              0 BANK3     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9221
                                             54 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9258
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9512
                                             54 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  163593
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  311785
                                            118 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151121
                                            106 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   43958
                                             52 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37564
                                             52 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  191170
                                            114 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  174697
                                             64 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             45 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      45
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  158364
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           5     1      4    5229
                                              7 BANK0      5     1      4
         _LORAWAN_SetCurrentDataRate
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_SetCurrentDataRate                           1     1      0     223
                                              6 BANK0      1     1      0
              _UpdateCurrentDataRate
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (6) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122779
                                             54 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248062
                                            124 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19265
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4535
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123906
                                             54 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101368
                                            115 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3326
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             18 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   80839
                                            106 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   66989
                                             92 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26238
                                             52 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19756
                                             32 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           23    20      3    4744
                                             10 BANK0     22    19      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  167548
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   92735
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   45810
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     662
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9554
                                             54 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1430
                                             45 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     811
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     546
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             28 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                             12 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             41 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                 _handle16sInterrupt *
 ---------------------------------------------------------------------------------
 (16) _handle16sInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     547
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
   _SysConfigSleep
   _TMR3_SetInterruptHandler
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _handle16sInterrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      B4      11       70.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      93       5       91.9%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      52       1       98.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45C      12        0.0%
DATA                 0      0     67C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Aug 21 12:57:52 2022

                                        ??_LORAWAN_TxDone 00A2  
                              __end_of_DIO3_ISR_Lora_Init 795A  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 76DA  
                         __size_of_UpdateJoinSuccessState 012C  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6A60  
                                   __end_of_AESEncodeLoRa 72E2  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A7  
                                                     l126 62CC  
                                                     l192 7782  
                                                     l460 1548  
                                                     l453 14C0  
                                                     l382 510C  
                                                     l447 14F8  
                                                     l466 1732  
                                             ?_RADIO_Init 007D  
                                                     l670 6FA8  
                                                     l479 1804  
                                                     l592 715E  
                                                     l673 6C92  
                                                     l690 5E2E  
                                                     l676 6CA4  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 66B8  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 6658  
                                  _ExecuteRxParamSetupReq 42A8  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 7804  
                                      __size_of_AESEncode 02DA  
                                         _timer1ReloadVal 005B  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 618E  
                                   _RADIO_SetLoRaSyncWord 788E  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B34  
                                 __end_of_SwTimersExecute 5862  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00DC  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 59BA  
                     __end_of_RADIO_SetFrequencyHopPeriod 788E  
                             _RADIO_SetFrequencyHopPeriod 7884  
                                              _CheckFlags 66B8  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 75FA  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 001C  
                                                    l1110 3452  
                                                    l1031 1212  
                                                    l1204 4A0A  
                                                    l2012 5670  
                                                    l1133 4F3A  
                                                    l2014 56F2  
                                                    l1215 4812  
                                                    l1231 67CC  
                                                    l1223 7716  
                                                    l1127 437E  
                                                    l1151 31C4  
                                                    l1063 2806  
                                                    l1136 4FC8  
                                                    l2121 010E  
                                                    l1049 2716  
                                                    l2017 5406  
                                                    l2041 414A  
                                                    l1146 4FFC  
                                                    l1250 76D6  
                                                    l2026 5416  
                                                    l1091 69B0  
                                                    l1083 73DC  
                                                    l1244 74BA  
                                                    l2133 0266  
                                                    l1238 6FDE  
                                                    l2150 054A  
                                                    l1079 772A  
                                                    l2231 1E92  
                                                    l2151 0552  
                                                    l2063 4B66  
                                                    l3104 6098  
                                                    l2232 1F38  
                                                    l1264 6F14  
                                                    l2241 1F46  
                                                    l2233 1F36  
                                                    l3114 6646  
                                                    l2090 4646  
                                                    l1347 7564  
                                                    l1099 3614  
                                                    l2307 634E  
                                                    l2171 0996  
                                         _timer3ReloadVal 005D  
                                                    l2236 1F32  
                                                    l2069 6334  
                                                    l1454 1884  
                                                    l2095 5756  
                                                    l1279 67FE  
                                                    l1297 23FE  
                                                    l2522 2436  
                                                    l2283 1DB4  
                                                    l2292 5928  
                                                    l1469 19EC  
                                                    l1717 5C38  
                                                    l1718 5C80  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l3167 6D9E  
                                                    l1746 54C8  
                                                    l2745 6F50  
                                                    l1993 37D0  
                                                    l9618 773A  
                                        _RADIO_WritePower 5284  
                                                    l9986 62CE  
                            ??_LORAWAN_SetCurrentDataRate 0066  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 4650  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1196 00A1  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    _TMR1 000FCE  
                                                    _TMR3 000FB2  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 75DE  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 5F3C  
                                                    _loRa 0200  
                                                    _main 5AFA  
                                                    _rand 69C4  
                          __end_of_UpdateMinMaxChDataRate 57B0  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 0046  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00CF  
                                           ComputeMic@key 00CA  
                               __end_of_LORAWAN_RxTimeout 2980  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0048  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init 77D0  
                                        __end_of_ADC_Read 6F78  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6A60  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0090  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5592  
                                         _TMR3_Initialize 726A  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00CF  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 7902  
                                            ___param_bank 000010  
                                              _GetRx1Freq 7756  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 6976  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 6594  
                                __size_of_SystemTimerInit 0004  
                                        __end_of_INT1_ISR 792C  
                                        __end_of_INT2_ISR 7920  
                          __size_of_OSCILLATOR_Initialize 000C  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 77F8  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l12000 683A  
                                                   l12006 6870  
                                                   l12104 604C  
                                                   l12016 2412  
                                                   l10600 68A6  
                                                   l12106 6058  
                                                   l12210 516E  
                                                   l12050 254A  
                                                   l12042 248A  
                                                   l12026 2438  
                                                   l12116 608A  
                                                   l12108 605C  
                                                   l12132 6638  
                                                   l12124 6606  
                                                   l12212 5172  
                                                   l12052 2554  
                                                   l13100 19CE  
                                                   l12300 5302  
                                                   l13012 4FCC  
                                                   l13020 4FE2  
                                                   l10620 68CE  
                                                   l10612 68C0  
                                                   l10604 68AC  
                                                   l12126 6612  
                                                   l12214 517C  
                                                   l12062 25A2  
                                                   l13022 4FE6  
                                                   l10606 68B0  
                                                   l12160 4BDE  
                                                   l12128 6616  
                                                   l12224 519C  
                                                   l12064 25AC  
                                                   l12056 2576  
                                                   l12320 5330  
                                                   l13016 4FD6  
                                                   l13008 4FC6  
                                                   l10616 68C8  
                                                   l12154 4B8E  
                                                   l12226 51A6  
                                                   l12082 26B4  
                                                   l12058 2580  
                                                   l12074 26AA  
                                                   l12314 5328  
                                                   l13026 4FF8  
                                         __end_of___abdiv 68D2  
                                                   l12164 4C40  
                                                   l12412 6B86  
                                                   l13124 1AC6  
                                                   l13108 19F0  
                                                   l13220 4298  
                                                   l12166 4C42  
                                                   l12190 512E  
                                                   l12182 510E  
                                                   l12174 50F4  
                                                   l13118 1A8E  
                                                   l13062 1896  
                                                   l13070 190A  
                                                   l12430 6D82  
                                                   l12334 5DE4  
                                                   l13230 5582  
                                                   l13214 4252  
                                                   l13206 4206  
                                                   l13310 1D46  
                                                   l13302 1D1C  
                                                   l14110 2EA4  
                                                   l12360 724A  
                                                   l12408 6B4E  
                                                   l13080 195A  
                                                   l13056 1870  
                                                   l12272 52A8  
                                                   l12600 17BE  
                                                   l14040 60E0  
                                                   l13224 54DE  
                                                   l13232 5584  
                                                   l13152 5980  
                                                   l13144 592C  
                                                   l13320 1D8C  
                                                   l14120 2F12  
                                                   l14112 2EBA  
                                                   l14104 2DE0  
                                                   l12194 5138  
                                                   l12434 6D94  
                                                   l12426 6D76  
                                                   l12610 17FA  
                                                   l12514 158E  
                                                   l12338 5E08  
                                                   l12354 71A2  
                                                   l13234 558E  
                                                   l13154 5982  
                                                   l13162 599C  
                                                   l13170 59B4  
                                                   l13306 1D2E  
                                                   l14122 2F28  
                                                   l14114 2ED0  
                                                   l10594 689A  
                                                   l12364 725A  
                                                   l12452 5D0C  
                                                   l15020 381A  
                                                   l15012 37C0  
                                                   l12196 5140  
                                                   l13084 1978  
                                                   l13076 1930  
                                                   l13068 18D2  
                                                   l12428 6D7E  
                                                   l12292 52EA  
                                                   l12268 529C  
                                                   l12604 17DA  
                                                   l12524 15B8  
                                                   l12532 15D4  
                                                   l13404 3098  
                                                   l13228 5546  
                                                   l13156 598C  
                                                   l13252 1BC6  
                                                   l13244 1B42  
                                                   l13340 1E14  
                                                   l12380 47C4  
                                                   l13180 6B34  
                                                   l14124 2F3E  
                                                   l14116 2EE6  
                                                   l14108 2E90  
                                                   l14132 2F50  
                                                   l14140 2F9C  
                                                   l14220 024C  
                                                   l10588 6890  
                                                   l15100 4012  
                                                   l15006 3794  
                                                   l15014 37C4  
                                                   l12198 514A  
                                                   l11902 2A7A  
                                                   l12702 4912  
                                                   l13094 1990  
                                                   l13086 1986  
                                                   l12286 52D0  
                                                   l12470 146A  
                                                   l14054 6106  
                                                   l13166 59AC  
                                                   l13326 1DBA  
                                                   l13270 1C5A  
                                                   l13262 1C0C  
                                                   l13342 1E20  
                                                   l12390 485C  
                                                   l12630 74B6  
                                                   l14118 2EFC  
                                                   l14134 2F7E  
                                                   l14310 0498  
                                                   l14302 0472  
                                                   l10944 5708  
                                                   l11904 2A84  
                                                   l12296 52F6  
                                                   l12288 52DC  
                                                   l12480 1502  
                                                   l12472 148C  
                                                   l13432 313A  
                                                   l13408 30AE  
                                                   l13360 2FD6  
                                                   l14048 60F4  
                                                   l13272 1C60  
                                                   l13336 1DDE  
                                                   l12392 4860  
                                                   l13600 3524  
                                                   l14144 2FBA  
                                                   l14400 075A  
                                                   l14232 02B8  
                                                   l10954 57A0  
                                                   l12714 4950  
                                                   l12706 4936  
                                                   l12650 5C16  
                                                   l12802 2CA4  
                                                   l13282 1CA6  
                                                   l13338 1E12  
                                                   l13266 1C32  
                                                   l12378 47C0  
                                                   l13602 352E  
                                                   l14306 048A  
                                                   l14170 00D0  
                                                   l15122 40B4  
                                                   l15106 402E  
                                                   l11932 6DB4  
                                                   l10956 57A4  
                                                   l12492 153E  
                                                   l12468 1448  
                                                   l12476 14CC  
                                                   l12820 2DCC  
                                                   l14092 66E4  
                                                   l13196 419C  
                                                   l13188 4164  
                                                   l13292 1CE4  
                                                   l13268 1C48  
                                                   l12660 67EA  
                                                   l13524 35F4  
                                                   l13516 35C4  
                                                   l13604 3532  
                                                   l14076 6386  
                                                   l14420 07AE  
                                                   l15108 403A  
                                                   l15116 405E  
                                                   l15044 220A  
                                                   l15036 2150  
                                                   l16020 57B8  
                                                   l12582 171A  
                                                   l12574 16E8  
                                                   l12566 16A4  
                                                   l12494 1544  
                                                   l12478 14DE  
                                                   l13438 31AA  
                                                   l13374 3004  
                                                   l13366 2FEC  
                                                   l12814 2D5C  
                                                   l12750 58C0  
                                                   l13286 1CCC  
                                                   l13702 1EFC  
                                                   l12398 4876  
                                                   l12670 6816  
                                                   l12662 67F2  
                                                   l13550 36E4  
                                                   l14078 638A  
                                                   l14510 0A40  
                                                   l14430 07B4  
                                                   l14342 05B6  
                                                   l14350 05C2  
                                                   l14270 0420  
                                                   l14238 02C6  
                                                   l15230 6492  
                                                   l15046 2224  
                                                   l15054 22BC  
                                                   l16030 5852  
                                                   l11960 4E22  
                                                   l12576 16F4  
                                                   l12488 1532  
                                                   l12584 173C  
                                                   l13392 3064  
                                                   l12808 2D0E  
                                                   l12728 7190  
                                                   l14096 66FA  
                                                   l14088 66CE  
                                                   l13720 1F58  
                                                   l12656 67DC  
                                                   l13544 3696  
                                                   l12904 6EE6  
                                                   l12840 67A2  
                                                   l13624 433A  
                                                   l14504 0A12  
                                                   l14512 0A46  
                                                   l14408 0796  
                                                   l14272 0438  
                                                   l14176 0110  
                                                   l14600 27F8  
                                                   l15240 64B8  
                                                   l15152 4B0A  
                                                   l16032 5854  
                                                   l11970 7234  
                                                   l13394 3078  
                                                   l12754 58E0  
                                                   l13722 1F60  
                                                   l12674 6820  
                                                   l12930 73D0  
                                                   l13546 36AA  
                                                   l12842 67A8  
                                                   l13642 43E6  
                                                   l14530 0A94  
                                                   l14522 0A84  
                                                   l14514 0A4C  
                                                   l14442 081E  
                                                   l14434 07C2  
                                                   l14418 079C  
                                                   l14370 06BA  
                                                   l14290 045E  
                                                   l14258 0406  
                                                   l14338 058A  
                                                   l14194 01A0  
                                                   l15234 6498  
                                                   l15250 64C8  
                                                   l15082 5672  
                                                   l15162 4B2C  
                                                   l15066 2360  
                                                   l16034 5858  
                                                   l15316 5EEC  
                                                   l12596 17AE  
                                                   l13476 66B2  
                                                   l12772 2BE6  
                                                   l12748 58BA  
                                                   l13724 1F6E  
                                                   l13492 69BA  
                                                   l12668 680E  
                                                   l12932 73D8  
                                                   l13548 36AE  
                                                   l13580 341E  
                                                   l13628 435C  
                                                   l13900 43FE  
                                                   l14508 0A3A  
                                                   l14460 0900  
                                                   l14444 0828  
                                                   l14620 28C0  
                                                   l15236 64AA  
                                                   l15260 6E7C  
                                                   l15156 4B10  
                                                   l15172 4B62  
                                                   l11958 4DD2  
                                                   l11966 7218  
                                                   l13398 3088  
                                                   l12790 2C6C  
                                                   l12782 2C10  
                                                   l14710 12D0  
                                                   l13750 203A  
                                                   l13654 6AD4  
                                                   l12862 6FDA  
                                                   l13582 3432  
                                                   l14470 099E  
                                                   l14198 01B0  
                                                   l14606 280A  
                                                   l14630 295A  
                                                   l15246 64C2  
                                                   l15182 6308  
                                                   l15078 5660  
                                                   l16150 5B70  
                                                   l15336 3EAC  
                                                   l15520 6730  
                                                   l12696 48EE  
                                                   l12688 48D6  
                                                   l12784 2C1C  
                                                   l13656 6AF4  
                                                   l13912 44B0  
                                                   l14384 073C  
                                                   l14624 2930  
                                                   l15264 6E82  
                                                   l15280 6C04  
                                                   l16160 5B86  
                                                   l12778 2BFC  
                                                   l14722 1354  
                                                   l13738 1FC4  
                                                   l13594 34CA  
                                                   l13914 44B4  
                                                   l14554 0AF6  
                                                   l14618 28BC  
                                                   l14802 5214  
                                                   l13850 540E  
                                                   l13842 53F0  
                                                   l12788 2C44  
                                                   l14716 133E  
                                                   l14660 0E6E  
                                                   l14652 0D68  
                                                   l13756 2090  
                                                   l13676 1E8A  
                                                   l13940 5442  
                                                   l12964 6F32  
                                                   l12876 49BC  
                                                   l13596 34D4  
                                                   l14548 0ABE  
                                                   l15268 6E94  
                                                   l15276 6BFE  
                                                   l15518 672C  
                                                   l12798 2C8C  
                                                   l14726 137C  
                                                   l14670 1076  
                                                   l14662 0FA2  
                                                   l13950 5464  
                                                   l12894 4A6E  
                                                   l12886 4A54  
                                                   l14494 0A00  
                                                   l14398 0742  
                                                   l14582 2792  
                                                   l14566 2708  
                                                   l14806 522E  
                                                   l13846 53FE  
                                                   l15480 46C2  
                                                   l14680 1142  
                                                   l13944 5458  
                                                   l13936 5434  
                                                   l12888 4A58  
                                                   l14816 525E  
                                                   l14690 11FA  
                                                   l14674 1140  
                                                   l14914 3AEC  
                                                   l13962 547E  
                                                   l14586 27A0  
                                                   l14842 5AAC  
                                                   l14818 5262  
                                                   l15468 4684  
                                                   l12996 4F3E  
                                                   l13884 3360  
                                                   l14588 27BA  
                                                   l14766 3964  
                                                   l15398 3F5C  
                                                   l13958 5472  
                                                   l13886 336A  
                                                   l13894 7624  
                                                   l14862 5AE4  
                                                   l14838 5A92  
                                                   l14926 73AC  
                                  __end_of_SysConfigSleep 61FE  
                                                   l14776 39AC  
                                                   l14768 397A  
                                                   l14856 5ADA  
                                                   l13992 4592  
                                                   l14698 1274  
                                                   l14858 5AE0  
                                                   l14794 51F0  
                                                   l14892 3C7E  
                                                   l14990 643A  
                                                   l14974 63D4  
                                                   l13998 4628  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                              _FillSubKey 6B44  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer 7936  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler 7852  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 60AA  
                                         RADIO_Transmit@i 00A6  
                                                   _IDLEN 007E9F  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 6658  
                                                   u13330 14F2  
                                                   u12620 6864  
                                       ??_EnableChannels1 006D  
                                                   u13335 14E8  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _T3CON 000FB1  
                                                   _LATD1 007C61  
                                    RxJoinResponse@status 0001  
                                                   u12627 685A  
                                                   u13435 15EC  
                                                   _LATD3 007C63  
                                                   u12580 6DC4  
                                                   _LATD4 007C64  
                                                   u14245 1854  
                                                   u16200 04D6  
                       __end_of_AckRetransmissionCallback 4B6C  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u13651 488C  
                                                   u16051 02A2  
                                                   u13820 2D2A  
                                                   u13805 2CC2  
                                                   u12790 5FC8  
                                                   u16230 05B2  
                                                   u16128 041E  
                                                   u17105 12E2  
                                                   u15505 44D6  
                                                   u14570 1BC4  
                                                   u16250 06B4  
                                                   u13835 2D4C  
                                                   u16308 072A  
                                                   u16228 0578  
                                                   u17300 3C08  
                                                   u15348 53DE  
                                                   u14805 314C  
                                                   u13845 2D6E  
                                                   u17310 3D04  
                                                   u17080 12A0  
                                                   u17305 3BFE  
                                                   u18025 6476  
                                                   u17315 3CFA  
                                                   u14780 3108  
                                                   u17340 3A60  
                                                   u15708 4634  
                                                   u15660 4550  
                                                   u15645 621C  
                                                   u17350 3A76  
                                                   u16390 0860  
                                          __CFG_DEBUG$OFF 000000  
                                                   u17095 12C0  
                                                   u17360 3B72  
                                                   u14864 69A0  
                                                   u16528 0A72  
                                                   u17505 380A  
                                                   u14865 699A  
                                                   u16458 09EE  
                                                   u17290 3BF2  
                                                   u17515 382C  
                                                   u14795 312A  
                                                   u17355 3A6C  
                                                   u16715 2746  
                                                   u15675 4582  
                                                   u15828 6374  
                                                   u17365 3B68  
                                                   u15685 45A4  
                                                   u17605 2350  
                                                   u17615 237A  
                                                   u17720 4072  
                                                   u17490 37E8  
                                                   u15970 017E  
                                                   u16915 0B7C  
                                                   u17820 4B04  
                                                   u16925 0BF6  
                                                   u16845 28DA  
                                                   u17590 2310  
                                                   u16935 0D9C  
                                                   u17735 40A4  
                                                   u16945 0E16  
                                                   u17745 40C6  
                                                   u16970 0FE2  
                                                   u16980 1000  
                                                   u16990 1104  
                                                   u17928 6322  
                                                   u17848 4B2A  
                                                   u16985 0FF6  
                                                   u19378 5840  
                                                   u16995 10FA  
                                                   u17888 4B50  
                                                   u19667 721E  
                                         __end_of___lwmod 6DA8  
                                                   i2l242 6AAC  
                                           ?_RADIO_RxDone 0001  
                     __size_of_LORAWAN_SetCurrentDataRate 002C  
                             __size_of_RADIO_ReceiveStart 0200  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR3H 000FB3  
                                                   _TMR1L 000FCE  
                                                   _TMR3L 000FB2  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 0028  
                                              _LoRaWakeUp 78B6  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                       __size_of_TMR3_SetInterruptHandler 000A  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 7942  
                                 ?_SetReceptionNotOkState 0001  
                               ?_TMR3_SetInterruptHandler 0064  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 77EC  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                        __end_of_TMR3_ISR 77DE  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00AB  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 00EE  
                          ??_TMR3_DefaultInterruptHandler 0001  
                                 __end_of_PIN_MANAGER_IOC 78AC  
                            ??_IncludeMacCommandsResponse 0068  
                           __end_of_RADIO_WatchdogTimeout 6CA8  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0052  
                          LORAWAN_RxDone@frmPayloadLength 03B1  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 77B4  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 03AF  
                                  _UpdateJoinSuccessState 4524  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 785C  
                                              _ComputeMic 68D2  
                                 __end_of_TMR1_Initialize 7308  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 78CE  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 4882  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2DD4  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 7552  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 03A0  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 26E2  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 1818  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 59BA  
                            __size_ofi2_SwTimersInterrupt 00EC  
                                        LORAWAN_Send@port 00D6  
                             __size_of_DIO1_ISR_Lora_Init 000C  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 777A  
                                            __end_of_main 5B96  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 6A12  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5F3C  
                                        _SetJoinFailState 7354  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 7630  
                                    _ExecuteRxTimingSetup 7378  
                                       __end_of_IOCB4_ISR 75DE  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00BE  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 78D6  
                                               ??_AESCmac 00C3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00E8  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00E2  
                                          ??_RADIO_TxDone 00D2  
                                         _TMR3_StartTimer 7932  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 7946  
                                   _TMR3_InterruptHandler 01EC  
                       __end_of_LORAWAN_LinkCheckCallback 4154  
                          __end_of_SetReceptionNotOkState 639E  
                             __end_of_UpdateReceiveDelays 6B44  
                         __end_of_AssembleEncryptionBlock 5914  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0096  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6DA8  
                                              _RxDataDone 611C  
                                          _EnableChannels 76F0  
                                      __size_of_LoRaSleep 0020  
                               ??_PrepareJoinRequestFrame 00D3  
                                          _HALSPICSAssert 794A  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00A0  
                                              _ExtractMic 6CA8  
                         __size_of_SearchAvailableChannel 00E0  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 772E  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 56FC  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B4  
                          _LORAWAN_ReceiveWindow1Callback 5648  
                                _RADIO_FSKPacketSent$1215 00DA  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 73BE  
                                                  _T1GCON 000FCC  
                                                  _T3GCON 000FB4  
                                 SwTimerReadValue@timerId 0095  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 353C  
                                 __end_of_TMR3_Initialize 7292  
                  __end_of_LORAWAN_ReceiveWindow2Callback 541A  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback 5352  
                                                  i2l1347 75B8  
                                                  i2l2501 0054  
                                                  i2l2503 0064  
                                                  i2l2507 006E  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2724 7752  
                                                  i2l2497 0038  
                                                  i2l2499 0044  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  i2l9962 4CE6  
                                                  i2l9964 4D36  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 0018  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00D6  
                         __size_of_AutomaticReplyCallback 001E  
                              __size_of_LORAWAN_RxTimeout 029E  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 7828  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable FE6D  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C5  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 778A  
                                     LORAWAN_TxDone@found 00C4  
                                         _CheckMcastFlags 60AA  
                                     LORAWAN_TxDone@minim 00CD  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 73E0  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C9  
                                              _TimeToSend 0169  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 7960  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 795E  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 713C  
                                               ??___abdiv 0065  
                                                  ___lmul 5D38  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 793A  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0096  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 5914  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009E  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 6828  
                                                  _memset 7240  
                                                  clear_0 5A02  
                                                  clear_1 5A14  
                                                  clear_2 5A20  
                                                  clear_3 5A2C  
                                                  clear_4 5A38  
                                                  clear_5 5A44  
                                                  clear_6 5A50  
                                 SwTimerIsRunning@timerId 0064  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 7706  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 7964  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 7962  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 794E  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 008D  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE6C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0091  
                                         _UpdateDataRange 4984  
                                  __end_of_ExecuteLinkAdr 36EE  
                                      ??_ExecuteDutyCycle 0066  
                      __end_of_LORAWAN_SetCurrentDataRate 7196  
                              _LORAWAN_SetCurrentDataRate 716A  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR3_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 6F0A  
                              _LORAWAN_SetChannelIdStatus 6ED2  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007D  
                                           AESEncode@aux2 007C  
                                           AESEncode@aux3 007E  
                                 __end_of_TMR1_WriteTimer 756E  
                                   __end_of_SwTimerCreate 62D2  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 00CA  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 75A6  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00B0  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 7402  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DC  
                                          ??_LORAWAN_Send 00DA  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 5A56  
                           __end_of_RADIO_FSKPayloadReady 5AFA  
                                          _RADIO_Transmit 2FC4  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 7308  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6C1E  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 03A9  
                                          _maxPayloadSize FF6D  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                                   __end_of_TMR3_CallBack 758A  
                               ExecuteLinkAdr@channelMask 0074  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend 78A2  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 7462  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 4F20  
                              __end_of_handle16sInterrupt 7756  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 70DE  
                                     ??_SYSTEM_Initialize 0066  
                                 __end_of_TMR3_StartTimer 7936  
                              __end_of_DIO4_ISR_Lora_Init 7958  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                               ?_TMR3_ISR 0001  
                                _RADIO_WriteConfiguration 13A0  
                                    __size_of_readAndSend 0032  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF9B  
                               __size_of_LORAWAN_Mainloop 003A  
                                        ??_EncKeySchedule 0065  
                   __end_of_IOCB4_DefaultInterruptHandler 7962  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 7960  
                                __end_of_RADIO_WritePower 5352  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 77C2  
                                       LORAWAN_RxDone@hdr 03B2  
                                            ??_RADIO_DIO0 00E4  
                                            ??_RADIO_DIO1 00B0  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 6404  
                                         _UpdateFrequency 6E98  
                                  _AutomaticReplyCallback 7482  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 03A1  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 002E  
                                         _UpdateDutyCycle 7048  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 73E0  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 7958  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput 7956  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 785C  
                                        RADIO_DIO0@opMode 00E7  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0067  
                      __end_of_IncludeMacCommandsResponse 1E2C  
                              _IncludeMacCommandsResponse 1B34  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                                   LORAWAN_Send@confirmed 00DC  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 771A  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 7422  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                  __end_of_RADIO_Transmit 31B2  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3E9E  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00E8  
                                              __pbssBANK1 0169  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 7552  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 611C  
                                        ?_TMR3_Initialize 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF75  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 008C  
                                    _RADIO_SetOutputPower 78CE  
                                              __pnvCOMRAM 005B  
                                    __end_of_RADIO_SetCRC 7884  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 5284  
                              __end_of_RADIO_RxFSKTimeout 6FAE  
                                    __end_of_RADIO_TxDone 3D3C  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 64CE  
                                      __end_of_RADIO_DIO1 6E98  
                                      __end_of_RADIO_DIO2 6C1E  
                                      __end_of_RADIO_DIO3 76C2  
                                      __end_of_RADIO_DIO4 76AA  
                                      __end_of_RADIO_DIO5 7692  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init 3A20  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00A0  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 7518  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 67D0  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                     __size_of_LoRaWakeUp 0008  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 43F0  
                        __end_of_TMR3_SetInterruptHandler 783E  
                                      ??_CountfOptsLength 0064  
                                  __size_of_DIO2_ISR_Lora 0006  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00A8  
                                      EncryptFRMPayload@j 00A9  
                                      EncryptFRMPayload@k 00A7  
                                              ??_TMR1_ISR 002A  
                                              ??_TMR3_ISR 0001  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 7616  
                                        _ValidateRxOffset 7706  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 77F8  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0052  
                                  RADIO_Transmit@regValue 00A5  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A20  
                                                 _AESCmac 1818  
                                  ComputeMic@bufferLength 00CE  
                                 __size_of_ADC_SelChannel 0018  
                                 __end_of_UpdateDataRange 4A7A  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10650 4EA4  
                                                 i2l10626 6DF2  
                                                 i2l10644 4E54  
                                                 i2l10654 4F06  
                                                 i2l10656 4F08  
                                    EncryptFRMPayload@dir 0097  
                                      _RADIO_GetPacketSnr 78FC  
                                    EncryptFRMPayload@key 009C  
                                   __end_of_UpdateTxPower 78C6  
                                     _RADIO_SetIQInverted 7870  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 008E  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 00EE  
                                     i2_SwTimersInterrupt 4E34  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF94  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 7378  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0096  
                                 _ValidateChannelMaskCntl 76C2  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 009A  
                              AssemblePacket@bufferLength 00CD  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 5E40  
                             PrepareJoinRequestFrame@iCtr 00DB  
                               _IOCB4_SetInterruptHandler 7848  
                       __end_of_SetCallbackSoftwareTimers 5648  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4A7A  
                             PrepareJoinRequestFrame@mhdr 00D9  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 0036  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00BC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FFA2  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D5  
                                  _InitDefault868Channels 639E  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00D9  
                                   _StopAllSoftwareTimers 6A12  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0019  
                                 __end_of_UpdateFrequency 6ED2  
                                     AssemblePacket@fCtrl 00D3  
                                                 ___abdiv 6880  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 0072  
                                              AESEncode@i 007F  
                                               _AESEncode 2408  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 7804  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 000C  
                                        ?_TMR3_StartTimer 0001  
                                 __end_of_UpdateDutyCycle 707A  
                                                 ___lldiv 6034  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 65F6  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6D6A  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 59BA  
                      __size_of_LORAWAN_GetMaxPayloadSize 004C  
                                                 _appSKey 01C4  
                                         __size_of_memcpy 0058  
                              __end_of_RADIO_ReceiveStart 2DD4  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00A1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 5AFA  
                                                 __ptext1 7016  
                                                 __ptext2 6F42  
                                                 __ptext3 764A  
                                                 __ptext4 618E  
                                                 __ptext5 7402  
                                                 __ptext6 726A  
                                                 __ptext7 7932  
                                                 __ptext8 7834  
                                                 __ptext9 72E2  
                                    __end_of_LORAWAN_Init 6774  
                                    __end_of_LORAWAN_Join 5CB0  
                                    __end_of_LORAWAN_Send 54D6  
                                           _DIO0_ISR_Lora 792C  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D3C  
                                               _IOCB4_ISR 75C2  
                              ExecuteNewChannel@frequency 0073  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0086  
                                 __size_of_LORAWAN_RxDone 0A80  
                                   _OSCILLATOR_Initialize 77EC  
                          __end_of_UpdateJoinSuccessState 4650  
                                 __size_of_LORAWAN_TxDone 0888  
                              __end_of_RADIO_SetBandwidth 78EE  
                                         _RADIO_GetStatus 7902  
                                               _T3CONbits 000FB1  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF9B  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 7920  
                                             _SwTimerStop 7536  
                                                 _payload 01B0  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01D4  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 337A  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                           _DIO2_ISR_Lora 7914  
                              __size_of_SYSTEM_Initialize 0020  
                    __end_of_LORAWAN_SetNetworkSessionKey 71EC  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 71C2  
                                      ?_ExecuteNewChannel 0070  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00CC  
                                    end_of_initialization 5A56  
                                 _CreateAllSoftwareTimers 6924  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 7852  
                                   ??_RADIO_FSKPacketSent 00D2  
                                          _GenerateSubkey 4882  
                                   _RADIO_WatchdogTimeout 6C66  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF75  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 6828  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 3FFC  
                                               i2u1100_40 6E02  
                                          ??_SwTimerStart 008D  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 78C6  
                                   _UpdateChannelIdStatus 477C  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 781C  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 6F0A  
                                              _ticksAdded 003A  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 001D  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 0094  
                                        _LORAWAN_GetState 78EE  
                                    _HALResetPinMakeInput 7952  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A8  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 78DE  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                                         _SystemTimerInit 793A  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 6E24  
                            __end_of_RADIO_SetFSKSyncWord 71C2  
                                      LORAWAN_Join@result 00DD  
                                      __end_of_CheckFlags 6716  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3E9E  
                                      _DIO0_ISR_Lora_Init 781C  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01E4  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                        RxDataDone@status 006A  
                                            ??_FillSubKey 0069  
                            SwTimersInterrupt@timeElapsed 0084  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 72BA  
                               __size_of_ExecuteDevStatus 000A  
                                _TMR3_SetInterruptHandler 7834  
                            __end_of_RADIO_WriteFrequency 50DC  
                              __end_of_RADIO_RegisterRead 7354  
                       __end_of_LORAWAN_GetMaxPayloadSize 6AFA  
                          __end_of_HALResetPinOutputValue 7742  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 732E  
                                __end_of_ConfigureRadioTx 6C66  
                                         _RADIO_RxTimeout 7292  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 353C  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02F4  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 6CEA  
                                          _TMR1_ReadTimer 74FA  
                                          ??_UpdateCfList 0072  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 4984  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 0036  
                                           RADIO_RxDone@i 00E3  
                                   __size_of_RADIO_SetCRC 000A  
                             ?_LORAWAN_SetCurrentDataRate 0001  
                                 AssemblePacket@macCmdIdx 00D4  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 00F1  
                                      __end_of_GetRx1Freq 7768  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00CF  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 009E  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A5  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 5EBE  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B2  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 77A6  
                                         _RADIO_WriteMode 50DC  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DE  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00D1  
                                      __end_of_FillSubKey 6B8E  
                                 _AssembleEncryptionBlock 5862  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF6D  
                                     AESEncodeLoRa@useKey 0084  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp 78BE  
                                      LORAWAN_Send@buffer 00D7  
                                          __end_of_Random 7402  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 772E  
                            __end_of_INTERRUPT_Initialize 7942  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 78FC  
                                 __end_of_RADIO_GetStatus 7908  
                                          __end_of___lmul 5DBE  
                                      LORAWAN_Send@result 00DB  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 7442  
                                           __pidataCOMRAM 78AC  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0080  
                                       __size_of_TMR1_ISR 000E  
                                       __size_of_TMR3_ISR 000E  
                                          _ADC_SelChannel 764A  
                                      __end_of_ComputeMic 6924  
                                               Random@max 0077  
                                          __end_of_memcpy 6880  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6D2C  
                                  __end_of_TMR1_ReadTimer 7518  
                                          __end_of_memset 726A  
                                         _SPI2_Initialize 7828  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 787A  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                            _RADIO_RxDone 51B4  
                                            _RADIO_TxDone 3BB2  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 59BA  
                                      _handle16sInterrupt 7742  
                                          _ConfigureRadio 5B96  
                                      LORAWAN_RxDone@mhdr 03A2  
                                      LORAWAN_RxDone@temp 03A8  
                                            ??_RxDataDone 006B  
                                      _DIO4_ISR_Lora_Init 7956  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer 7536  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 74DC  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0069  
                         __size_of_PIN_MANAGER_Initialize 0048  
                           __end_of_TMR_OverrideRemaining 6034  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 7616  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 009F  
                                            AESCmac@input 00C0  
                        __end_of_LORAWAN_SetDeviceAddress 767A  
                                         ?_GenerateSubkey 0094  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00D1  
                                   LORAWAN_Init@RxPayload 00A6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                 _ONE_HOUR_TIMEOUT_COUNTS 005A  
                                   __end_of_INT2_CallBack 75FA  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 7630  
                              SwTimerStart@ticksRemaining 0091  
                                  RADIO_WriteMode@newMode 006E  
                                     ?_handle16sInterrupt 0001  
                                __end_of_ValidateRxOffset 771A  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 78DE  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 5000  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 6DE6  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 793E  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0040  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0042  
                                   _RADIO_FSKPayloadReady 5A5C  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 7952  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00DD  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0091  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 646A  
                          __end_of_AutomaticReplyCallback 74A0  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0026  
                                    _macEndDevCmdReplyLen FF94  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00F2  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00BC  
                                 __end_of_RADIO_RxTimeout 72BA  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 618E  
                                ??_SetReceptionNotOkState 00A0  
                                          ??_TMR_ISR_lora 002A  
                                  __end_of_ADC_SelChannel 7662  
                                         ??_DIO0_ISR_Lora 0001  
                                    ??_handle16sInterrupt 0001  
                                             __pdataBANK1 01B4  
                                       _ValidateDataRange 6FAE  
                                      __end_of_ExtractMic 6CEA  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
                  SwTimersInterrupt@ticksToNextTimerEvent 0088  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 006A  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 713C  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 74A0  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor 78D6  
                                      _RADIO_RxFSKTimeout 6F78  
                                                ?_AESCmac 00BC  
                                  __size_of_TMR1_CallBack 001C  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 007B  
                                            AESEncode@key 006C  
                                  TMR_GetDeltaTime@retVal 0032  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 5C24  
                                          _LORAWAN_RxDone 0098  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 003E  
                                          _LORAWAN_TxDone 0B18  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5D38  
                  __end_of_LORAWAN_EnterContinuousReceive 6594  
                 __size_of_LORAWAN_EnterContinuousReceive 0062  
                          _LORAWAN_EnterContinuousReceive 6532  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00BC  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0032  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 0099  
                        __end_of_INT0_SetInterruptHandler 795C  
                                      LORAWAN_RxTimeout@i 00AF  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                           __pcstackBANK3 03A0  
                                  __size_of_TMR3_CallBack 001C  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4D48  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 51B4  
                 __end_of_UnconfirmedTransmissionCallback 6338  
                __size_of_UnconfirmedTransmissionCallback 0066  
                         _UnconfirmedTransmissionCallback 62D2  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                                 _RADIO_ReceiveStart$1199 009C  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01A0  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0095  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 7196  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 70DE  
       __end_of_ResetParametersForUnconfirmedTransmission 7798  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 778A  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01E6  
                                               _bandwidth FF8D  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 6716  
                                            _LORAWAN_Join 5C24  
                                            _LORAWAN_Send 541A  
                                  RADIO_FSKPayloadReady@i 00E3  
                                       _ValidateFrequency 6774  
                                               __pnvBANK1 01E4  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 5000  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 7946  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 7016  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 6B8E  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 337A  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                __size_of_TMR3_Initialize 0028  
                                               _macBuffer 04E0  
                                               _dioStatus 00F0  
                               __end_of_ValidateDataRange 6FE2  
                           RADIO_FSKPayloadReady@irqFlags 00E2  
                                       _SwTimersInterrupt 4B6C  
                                       ??_SwTimersExecute 00DD  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 7848  
                                           __pmediumconst FE6C  
                                 RADIO_Transmit@bufferLen 0098  
                                 __end_of_SPI2_Initialize 7834  
                                               __ptext100 5914  
                                               __ptext101 4154  
                                               __ptext110 0B18  
                                               __ptext102 5862  
                               __end_of_ValidateChannelId 74BE  
                                               __ptext111 6D2C  
                                               __ptext103 54D6  
                                               __ptext200 6268  
                                               __ptext120 7798  
                                               __ptext112 7462  
                                               __ptext104 6CA8  
                                               __ptext201 78EE  
                                               __ptext121 7908  
                                               __ptext113 7902  
                                               __ptext105 5E40  
                                               __ptext210 758A  
                                               __ptext202 7768  
                                               __ptext130 6C1E  
                                               __ptext122 74BE  
                                               __ptext114 6532  
                                               __ptext106 5F3C  
                                               __ptext211 795E  
                                               __ptext203 77C2  
                                               __ptext131 78CE  
                                               __ptext123 2BD4  
                                               __ptext115 611C  
                                               __ptext107 60AA  
                                               __ptext220 7914  
                                               __ptext212 6A60  
                                               __ptext140 78E6  
                                               __ptext132 7870  
                                               __ptext124 7308  
                                               __ptext116 716A  
                                               __ptext108 66B8  
                                               __ptext221 7960  
                                               __ptext213 6DE6  
                                               __ptext205 77D0  
                                               __ptext141 2FC4  
                                               __ptext133 787A  
                                               __ptext125 77A6  
                                               __ptext117 771A  
                                               __ptext109 3A20  
                                               __ptext230 0000  
                                               __ptext222 791A  
                                               __ptext214 75A6  
                                               __ptext206 756E  
                                               __ptext150 6D6A  
                                               __ptext142 13A0  
                                               __ptext134 5B96  
                                               __ptext126 5C24  
                                               __ptext118 78C6  
                                               __ptext223 75DE  
                                               __ptext215 4E34  
                                               __ptext207 795C  
                                               __ptext151 68D2  
                                               __ptext143 5284  
                                               __ptext135 78D6  
                                               __ptext127 7630  
                                               __ptext119 778A  
                                               __ptext224 7920  
                                               __ptext216 4C5A  
                                               __ptext208 7742  
                                               __ptext160 77B4  
                                               __ptext152 1818  
                                               __ptext144 64CE  
                                               __ptext136 78DE  
                                               __ptext128 6658  
                                               __ptext225 7962  
                                               __ptext217 7518  
                                               __ptext209 77DE  
                                               __ptext161 5592  
                                               __ptext153 4882  
                                               __ptext145 6594  
                                               __ptext137 7884  
                                               __ptext129 4F20  
                                               __ptext226 7926  
                                               __ptext218 78A2  
                                               __ptext170 732E  
                                               __ptext162 5EBE  
                                               __ptext154 6B44  
                                               __ptext146 4650  
                                               __ptext138 7196  
                                               __ptext227 75FA  
                                               __ptext219 75C2  
                                               __ptext171 790E  
                                               __ptext163 3E9E  
                                               __ptext155 72BA  
                                               __ptext147 73E0  
                                               __ptext139 5DBE  
                                               __ptext228 792C  
                                               __ptext180 7216  
                                               __ptext172 5000  
                                               __ptext164 56FC  
                                               __ptext156 2408  
                                               __ptext148 69C4  
                                               __ptext229 7964  
                                               __ptext181 772E  
                                               __ptext173 65F6  
                                               __ptext165 6A12  
                                               __ptext157 3D3C  
                                               __ptext149 5D38  
                                               __ptext190 7552  
                                               __ptext182 794E  
                                               __ptext174 74DC  
                                               __ptext166 788E  
                                               __ptext158 2980  
                                               __ptext191 4B6C  
                                               __ptext183 7952  
                                               __ptext175 7898  
                                               __ptext167 388A  
                                               __ptext159 6716  
                                               __ptext192 4D48  
                                               __ptext184 36EE  
                                               __ptext176 777A  
                                               __ptext168 70AC  
                                               __ptext193 74FA  
                                               __ptext185 6034  
                                               __ptext177 7946  
                                               __ptext169 50DC  
                                               __ptext194 6CEA  
                                               __ptext186 7536  
                                               __ptext178 794A  
                                               __ptext195 639E  
                                               __ptext187 5CB0  
                                               __ptext179 6FE2  
                                               __ptext196 6404  
                                               __ptext188 5FB8  
                                               __ptext197 7240  
                                               __ptext189 6DA8  
                                               __ptext198 6828  
                                               __ptext199 6924  
                                       _EncryptFRMPayload 4154  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D6  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0084  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 477C  
                                                ?___lwmod 0072  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 007C  
                               _RADIO_SetChannelFrequency 5DBE  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 5592  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0B18  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 13A0  
                                      ?_EncryptFRMPayload 0094  
                                     __end_of_readAndSend 7048  
                            ??_INTERRUPT_InterruptManager 002A  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 7442  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 7866  
                           __end_of_RADIO_SetLoRaSyncWord 7898  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1E2C  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00D5  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 4D48  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0080  
                                    RADIO_DIO0@dioMapping 00E6  
                                       _DutyCycleCallback 2120  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6DE6  
                                                _ADC_Init 77C2  
                                                _ADC_Read 6F42  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00A2  
                                __end_of_LORAWAN_GetState 78F6  
                                 __end_ofi2_TMR_SwapTimer 6E24  
                                 __size_of_EncKeySchedule 0254  
                                      AssemblePacket@mhdr 00D2  
                                      AssemblePacket@port 00CA  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2BD4  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 6E5E  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 793E  
                                           _SwTimerCreate 6268  
                          __end_of_InitDefault868Channels 6404  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 758A  
                      LORAWAN_SetCurrentDataRate@valueNew 0066  
                               __end_of_ValidateFrequency 67D0  
                                        _SwTimerIsRunning 7462  
                                        _ExecuteLinkCheck 707A  
                                    i2SwTimersInterrupt@i 0029  
                                                _INT1_ISR 7926  
                                _LORAWAN_SetDeviceAddress 7662  
                                                _INT2_ISR 791A  
                                       EncKeySchedule@key 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 78E6  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF8D  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00EC  
                                     ?_RADIO_ReceiveStart 0096  
                                        _SwTimerReadValue 6D2C  
                                                _PIE1bits 000F9D  
                                                _PIE2bits 000FA0  
                                        _ExecuteDutyCycle 6976  
                                         _HALDIO5PinValue 790E  
                                    RADIO_DIO1@dioMapping 00B1  
                               __end_of_SwTimersInterrupt 4C5A  
                                __size_of_TMR1_WriteTimer 001C  
                     __size_of_INTERRUPT_InterruptManager 0088  
                              __end_of_DIO2_ISR_Lora_Init 7810  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0096  
                                        GenerateSubkey@k2 0098  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0076  
                              ??_TMR3_SetInterruptHandler 0066  
                                           _TMR3_CallBack 756E  
                               __end_of_EncryptFRMPayload 42A8  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 03A7  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 65F6  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0067  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 00E8  
                                    __end_of_IO_pins_init 777A  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 56FC  
                           EncryptFRMPayload@bufferLength 0096  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 77DE  
                                ConfigureRadioTx@dataRate 007A  
                                                _TMR3_ISR 77D0  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F8  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0098  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6AFA  
                         __size_of_SetReceptionNotOkState 0066  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2120  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00A0  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0068  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init 7810  
                               __end_of_DutyCycleCallback 2408  
                                        __size_of_AESCmac 031C  
                                    ??_RADIO_ReceiveStart 0098  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 5FB8  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                __size_of_TMR3_StartTimer 0004  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0080  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3BB2  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 03AB  
                                       ___lmul@multiplier 0064  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 59CE  
                                               copy_data1 59EE  
                                   ?_INTERRUPT_Initialize 0001  
                                     _EncKeySchedule$4148 0068  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                _INT0_SetInterruptHandler 795A  
                             __end_of_RADIO_SetIQInverted 787A  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 6AAE  
                                             _RADIO_Reset 6FE2  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0021  
                                      _RADIO_RegisterRead 732E  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 43F0  
                             __end_ofi2_SwTimersInterrupt 4F20  
                               _LORAWAN_GetMaxPayloadSize 6AAE  
                              LORAWAN_RxDone@extractedMic 03A3  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0098  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00C2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                   handle16sInterrupt@counterSleepTimeout 0045  
                                          ?_TMR3_CallBack 0001  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 7240  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 75A6  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 7016  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0072  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 0056  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 5E40  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 00CA  
                                    AssemblePacket@buffer 00CB  
                                        SwTimersExecute@i 00E1  
                                      ??_ValidateDataRate 0064  
                                       ??_TMR3_Initialize 0066  
                                _TMR1_SetInterruptHandler 783E  
                                  _IOCB4_InterruptHandler 01E8  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 77A6  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 7798  
                                   _TMR1_InterruptHandler 01EA  
                                        ??_GenerateSubkey 009A  
                                        _CountfOptsLength 54D6  
                                              _HALSPISend 7898  
                                     ?_ComputeSessionKeys 0094  
                                          _rxWindowOffset FF7D  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 2FC4  
                                 __size_of_SysConfigSleep 0070  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 73BE  
                                           _UpdateTxPower 78BE  
                                    RADIO_Transmit@buffer 0096  
                         __end_of_RADIO_FHSSChangeChannel 716A  
                                         _allocatedTimers 00EF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 77B4  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 78F6  
                                                __ptext10 7936  
                                                __ptext11 6B8E  
                                                __ptext20 7804  
                                                __ptext12 77EC  
                                                __ptext21 7848  
                                                __ptext13 7422  
                                                __ptext30 7828  
                                                __ptext22 7810  
                                                __ptext14 77F8  
                                                __ptext31 7442  
                                                __ptext23 781C  
                                                __ptext15 783E  
                                                __ptext40 4A7A  
                                                __ptext32 71C2  
                                                __ptext24 793E  
                                                __ptext16 793A  
                                                __ptext41 3FFC  
                                                __ptext33 7662  
                                                __ptext25 710E  
                                                __ptext17 78F6  
                                                __ptext50 76AA  
                                                __ptext42 5648  
                                                __ptext34 71EC  
                                                __ptext26 7852  
                                                __ptext18 7956  
                                                __ptext51 6BD6  
                                                __ptext43 5352  
                                                __ptext35 6E24  
                                                __ptext27 785C  
                                                __ptext19 7958  
                                                __ptext60 5A5C  
                                                __ptext52 6E5E  
                                                __ptext44 6C66  
                                                __ptext36 57B0  
                                                __ptext28 795A  
                                                __ptext61 26E2  
                                                __ptext53 7292  
                                                __ptext45 6F78  
                                                __ptext37 2120  
                                                __ptext29 78B6  
                                                __ptext70 2DD4  
                                                __ptext62 0098  
                                                __ptext54 713C  
                                                __ptext46 62D2  
                                                __ptext38 4524  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 7378  
                                                __ptext63 61FE  
                                                __ptext55 646A  
                                                __ptext47 7756  
                                                __ptext39 7482  
                                                __ptext80 7048  
                                                __ptext72 6AFA  
                                                __ptext64 7616  
                                                __ptext56 739C  
                                                __ptext48 767A  
                                                __ptext81 4984  
                                                __ptext73 42A8  
                                                __ptext65 31B2  
                                                __ptext57 3BB2  
                                                __ptext49 7692  
                                                __ptext90 76F0  
                                                __ptext82 6ED2  
                                                __ptext74 7706  
                                                __ptext66 43F0  
                                                __ptext58 51B4  
                                                __ptext91 67D0  
                                                __ptext83 74A0  
                                                __ptext75 76DA  
                                                __ptext67 6338  
                                                __ptext59 6880  
                                                __ptext92 477C  
                                                __ptext84 707A  
                                                __ptext76 337A  
                                                __ptext68 7354  
                                                __ptext93 6976  
                                                __ptext85 353C  
                                                __ptext77 6774  
                                                __ptext69 7942  
                                                __ptext94 7866  
                                                __ptext86 73BE  
                                                __ptext78 6FAE  
                                                __ptext95 541A  
                                                __ptext87 76C2  
                                                __ptext79 6E98  
                                                __ptext96 6AAE  
                                                __ptext88 6F0A  
                                                __ptext97 1E2C  
                                                __ptext89 78BE  
                                                __ptext98 1B34  
                                                __ptext99 78FC  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 3FFC  
                                  __end_of_StartReTxTimer 4524  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 6338  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01B4  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 7914  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012C  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 009C  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 74BE  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 7422  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 75C2  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 0096  
                                           _timerOverflow 00F2  
                                            _SwTimerStart 5CB0  
                              __size_of_SwTimersInterrupt 00EE  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D6  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 000C  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00BB  
                                         GenerateSubkey@l 00AB  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 4E34  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00E2  
                             __end_of_ValidateChannelMask 6F42  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 0090  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 7908  
                                       ??_TMR1_WriteTimer 0066  
                    __end_of_TMR3_DefaultInterruptHandler 795E  
                   __size_of_TMR3_DefaultInterruptHandler 0002  
                            _TMR3_DefaultInterruptHandler 795C  
                                              _RADIO_DIO0 646A  
                                              _RADIO_DIO1 6E5E  
                                              _RADIO_DIO2 6BD6  
                                              _RADIO_DIO3 76AA  
                                              _RADIO_DIO4 7692  
                                              _RADIO_DIO5 767A  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 7966  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 7964  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset FF85  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 0094  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation FF7D  
                                              _RADIO_Init 388A  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0044  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 794A  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 2980  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 31B2  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 002A  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 5EBE  
                                       _RADIO_TxDone$1211 00DA  
                                      _EXT_INT_Initialize 710E  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 5FB8  
                                       ??_TMR3_StartTimer 0064  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0096  
                               __end_of_RADIO_ReceiveStop 74DC  
                                         _SwTimersExecute 57B0  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 7870  
                                 ?_PIN_MANAGER_Initialize 0001  
                                         ??_TMR3_CallBack 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0012  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 009B  
                         __size_of_ExecuteRxParamSetupReq 0148  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2092 00BC  
                                     _LORAWAN_TxDone$2093 00C0  
                      __end_of_LORAWAN_LinkCheckConfigure 388A  
                               __end_of_RADIO_ReleaseData 790E  
                              _LORAWAN_LinkCheckConfigure 36EE  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 794E  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001C  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0082  
                               __size_of_SetJoinFailState 0024  
                        LORAWAN_LinkCheckConfigure@period 0096  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 70AC  
             __end_of_UpdateRetransmissionAckTimeoutState 6268  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0096  
                     _UpdateRetransmissionAckTimeoutState 61FE  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                             __size_of_handle16sInterrupt 0014  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001C  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$4143 0075  
                                          _AESEncode$4144 0077  
                                          _AESEncode$4145 0079  
                                   __end_of_DIO0_ISR_Lora 7932  
                                __end_of_SwTimerIsRunning 7482  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 70AC  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                           ?_TMR3_DefaultInterruptHandler 0001  
                                            _rxWindowSize FF85  
                                  __end_of_EncKeySchedule 2BD4  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 7926  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6D6A  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 69C4  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 76F0  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 76DA  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3502 00A0  
                        __end_of_INT1_SetInterruptHandler 7866  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00DE  
                                   __size_of_TMR_ISR_lora 004E  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 791A  
                                    _SystemBlockingWaitMs 7216  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 0094  
                                 __size_of_EnableChannels 0016  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress 764A  
                            __end_of_ExecuteRxTimingSetup 739C  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init 7768  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 6532  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 64CE  
                __end_of_LORAWAN_SetApplicationSessionKey 7216  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 71EC  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00E2  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 739C  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6BD6  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 74FA  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4C5A  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 78A2  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00E8  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 72E2  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 016A  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 26E2  
                             __end_of_RADIO_SetModulation 78E6  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00DD  
                                     ?i2_TMR_GetDeltaTime 0009  
