

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Tue Aug 09 15:49:05 2022

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	text225,global,reloc=2,class=CODE,delta=1
   250                           	psect	text226,global,reloc=2,class=CODE,delta=1
   251                           	psect	text227,global,reloc=2,class=CODE,delta=1
   252                           	psect	text228,global,reloc=2,class=CODE,delta=1
   253                           	psect	text229,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258  0000                     
   259 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   260  0000                     
   261 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   262  0000                     
   263 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   264 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   265 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   266 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   267 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   268 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   269 ;;_LORAWAN_LinkCheckCallback$3516	offset	0
   270 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   271 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   272 ;;_DutyCycleCallback$2268	offset	0
   273 ;;DutyCycleCallback@minim	offset	4
   274 ;;DutyCycleCallback@i	offset	8
   275 ;;DutyCycleCallback@found	offset	9
   276 ;;DutyCycleCallback@param	offset=-1 (param)
   277 ;;AutomaticReplyCallback@param	offset=-1 (param)
   278 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   279 ;;AckRetransmissionCallback@param	offset=-1 (param)
   280 ;;_param	offset=-1 (param)
   281 ;;_UpdateJoinSuccessState$3533	offset	0
   282 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   283                           
   284                           	psect	idataCOMRAM
   285  0078DA                     __pidataCOMRAM:
   286                           	opt stack 0
   287                           
   288                           ;initializer for _randx
   289  0078DA  0001               	dw	1
   290  0078DC  0000               	dw	0
   291                           
   292                           ;initializer for _ticksToScheduledInterrupt
   293  0078DE  FFFF               	dw	65535
   294  0078E0  FFFF               	dw	65535
   295                           
   296                           ;initializer for _ONE_HOUR_TIMEOUT_COUNTS
   297  0078E2  04                 	db	4
   298                           
   299                           	psect	idataBANK1
   300  00710C                     __pidataBANK1:
   301                           	opt stack 0
   302                           
   303                           ;initializer for GenerateSubkey@F7870
   304  00710C  00                 	db	0
   305  00710D  00                 	db	0
   306  00710E  00                 	db	0
   307  00710F  00                 	db	0
   308  007110  00                 	db	0
   309  007111  00                 	db	0
   310  007112  00                 	db	0
   311  007113  00                 	db	0
   312  007114  00                 	db	0
   313  007115  00                 	db	0
   314  007116  00                 	db	0
   315  007117  00                 	db	0
   316  007118  00                 	db	0
   317  007119  00                 	db	0
   318  00711A  00                 	db	0
   319  00711B  87                 	db	135
   320                           
   321                           ;initializer for _appSKey
   322  00711C  DD                 	db	221
   323  00711D  32                 	db	50
   324  00711E  54                 	db	84
   325  00711F  F0                 	db	240
   326  007120  8D                 	db	141
   327  007121  55                 	db	85
   328  007122  D6                 	db	214
   329  007123  52                 	db	82
   330  007124  E7                 	db	231
   331  007125  73                 	db	115
   332  007126  0B                 	db	11
   333  007127  BC                 	db	188
   334  007128  26                 	db	38
   335  007129  3E                 	db	62
   336  00712A  0A                 	db	10
   337  00712B  DA                 	db	218
   338                           
   339                           ;initializer for _nwkSKey
   340  00712C  75                 	db	117
   341  00712D  E0                 	db	224
   342  00712E  66                 	db	102
   343  00712F  1A                 	db	26
   344  007130  A0                 	db	160
   345  007131  BC                 	db	188
   346  007132  21                 	db	33
   347  007133  E4                 	db	228
   348  007134  4B                 	db	75
   349  007135  57                 	db	87
   350  007136  21                 	db	33
   351  007137  B0                 	db	176
   352  007138  D6                 	db	214
   353  007139  30                 	db	48
   354  00713A  F7                 	db	247
   355  00713B  B2                 	db	178
   356                           
   357                           	psect	mediumconst
   358  00FE6C                     __pmediumconst:
   359                           	opt stack 0
   360  00FE6C  00                 	db	0
   361  00FE6D                     _STable:
   362                           	opt stack 0
   363  00FE6D  63                 	db	99
   364  00FE6E  7C                 	db	124
   365  00FE6F  77                 	db	119
   366  00FE70  7B                 	db	123
   367  00FE71  F2                 	db	242
   368  00FE72  6B                 	db	107
   369  00FE73  6F                 	db	111
   370  00FE74  C5                 	db	197
   371  00FE75  30                 	db	48
   372  00FE76  01                 	db	1
   373  00FE77  67                 	db	103
   374  00FE78  2B                 	db	43
   375  00FE79  FE                 	db	254
   376  00FE7A  D7                 	db	215
   377  00FE7B  AB                 	db	171
   378  00FE7C  76                 	db	118
   379  00FE7D  CA                 	db	202
   380  00FE7E  82                 	db	130
   381  00FE7F  C9                 	db	201
   382  00FE80  7D                 	db	125
   383  00FE81  FA                 	db	250
   384  00FE82  59                 	db	89
   385  00FE83  47                 	db	71
   386  00FE84  F0                 	db	240
   387  00FE85  AD                 	db	173
   388  00FE86  D4                 	db	212
   389  00FE87  A2                 	db	162
   390  00FE88  AF                 	db	175
   391  00FE89  9C                 	db	156
   392  00FE8A  A4                 	db	164
   393  00FE8B  72                 	db	114
   394  00FE8C  C0                 	db	192
   395  00FE8D  B7                 	db	183
   396  00FE8E  FD                 	db	253
   397  00FE8F  93                 	db	147
   398  00FE90  26                 	db	38
   399  00FE91  36                 	db	54
   400  00FE92  3F                 	db	63
   401  00FE93  F7                 	db	247
   402  00FE94  CC                 	db	204
   403  00FE95  34                 	db	52
   404  00FE96  A5                 	db	165
   405  00FE97  E5                 	db	229
   406  00FE98  F1                 	db	241
   407  00FE99  71                 	db	113
   408  00FE9A  D8                 	db	216
   409  00FE9B  31                 	db	49
   410  00FE9C  15                 	db	21
   411  00FE9D  04                 	db	4
   412  00FE9E  C7                 	db	199
   413  00FE9F  23                 	db	35
   414  00FEA0  C3                 	db	195
   415  00FEA1  18                 	db	24
   416  00FEA2  96                 	db	150
   417  00FEA3  05                 	db	5
   418  00FEA4  9A                 	db	154
   419  00FEA5  07                 	db	7
   420  00FEA6  12                 	db	18
   421  00FEA7  80                 	db	128
   422  00FEA8  E2                 	db	226
   423  00FEA9  EB                 	db	235
   424  00FEAA  27                 	db	39
   425  00FEAB  B2                 	db	178
   426  00FEAC  75                 	db	117
   427  00FEAD  09                 	db	9
   428  00FEAE  83                 	db	131
   429  00FEAF  2C                 	db	44
   430  00FEB0  1A                 	db	26
   431  00FEB1  1B                 	db	27
   432  00FEB2  6E                 	db	110
   433  00FEB3  5A                 	db	90
   434  00FEB4  A0                 	db	160
   435  00FEB5  52                 	db	82
   436  00FEB6  3B                 	db	59
   437  00FEB7  D6                 	db	214
   438  00FEB8  B3                 	db	179
   439  00FEB9  29                 	db	41
   440  00FEBA  E3                 	db	227
   441  00FEBB  2F                 	db	47
   442  00FEBC  84                 	db	132
   443  00FEBD  53                 	db	83
   444  00FEBE  D1                 	db	209
   445  00FEBF  00                 	db	0
   446  00FEC0  ED                 	db	237
   447  00FEC1  20                 	db	32
   448  00FEC2  FC                 	db	252
   449  00FEC3  B1                 	db	177
   450  00FEC4  5B                 	db	91
   451  00FEC5  6A                 	db	106
   452  00FEC6  CB                 	db	203
   453  00FEC7  BE                 	db	190
   454  00FEC8  39                 	db	57
   455  00FEC9  4A                 	db	74
   456  00FECA  4C                 	db	76
   457  00FECB  58                 	db	88
   458  00FECC  CF                 	db	207
   459  00FECD  D0                 	db	208
   460  00FECE  EF                 	db	239
   461  00FECF  AA                 	db	170
   462  00FED0  FB                 	db	251
   463  00FED1  43                 	db	67
   464  00FED2  4D                 	db	77
   465  00FED3  33                 	db	51
   466  00FED4  85                 	db	133
   467  00FED5  45                 	db	69
   468  00FED6  F9                 	db	249
   469  00FED7  02                 	db	2
   470  00FED8  7F                 	db	127
   471  00FED9  50                 	db	80
   472  00FEDA  3C                 	db	60
   473  00FEDB  9F                 	db	159
   474  00FEDC  A8                 	db	168
   475  00FEDD  51                 	db	81
   476  00FEDE  A3                 	db	163
   477  00FEDF  40                 	db	64
   478  00FEE0  8F                 	db	143
   479  00FEE1  92                 	db	146
   480  00FEE2  9D                 	db	157
   481  00FEE3  38                 	db	56
   482  00FEE4  F5                 	db	245
   483  00FEE5  BC                 	db	188
   484  00FEE6  B6                 	db	182
   485  00FEE7  DA                 	db	218
   486  00FEE8  21                 	db	33
   487  00FEE9  10                 	db	16
   488  00FEEA  FF                 	db	255
   489  00FEEB  F3                 	db	243
   490  00FEEC  D2                 	db	210
   491  00FEED  CD                 	db	205
   492  00FEEE  0C                 	db	12
   493  00FEEF  13                 	db	19
   494  00FEF0  EC                 	db	236
   495  00FEF1  5F                 	db	95
   496  00FEF2  97                 	db	151
   497  00FEF3  44                 	db	68
   498  00FEF4  17                 	db	23
   499  00FEF5  C4                 	db	196
   500  00FEF6  A7                 	db	167
   501  00FEF7  7E                 	db	126
   502  00FEF8  3D                 	db	61
   503  00FEF9  64                 	db	100
   504  00FEFA  5D                 	db	93
   505  00FEFB  19                 	db	25
   506  00FEFC  73                 	db	115
   507  00FEFD  60                 	db	96
   508  00FEFE  81                 	db	129
   509  00FEFF  4F                 	db	79
   510  00FF00  DC                 	db	220
   511  00FF01  22                 	db	34
   512  00FF02  2A                 	db	42
   513  00FF03  90                 	db	144
   514  00FF04  88                 	db	136
   515  00FF05  46                 	db	70
   516  00FF06  EE                 	db	238
   517  00FF07  B8                 	db	184
   518  00FF08  14                 	db	20
   519  00FF09  DE                 	db	222
   520  00FF0A  5E                 	db	94
   521  00FF0B  0B                 	db	11
   522  00FF0C  DB                 	db	219
   523  00FF0D  E0                 	db	224
   524  00FF0E  32                 	db	50
   525  00FF0F  3A                 	db	58
   526  00FF10  0A                 	db	10
   527  00FF11  49                 	db	73
   528  00FF12  06                 	db	6
   529  00FF13  24                 	db	36
   530  00FF14  5C                 	db	92
   531  00FF15  C2                 	db	194
   532  00FF16  D3                 	db	211
   533  00FF17  AC                 	db	172
   534  00FF18  62                 	db	98
   535  00FF19  91                 	db	145
   536  00FF1A  95                 	db	149
   537  00FF1B  E4                 	db	228
   538  00FF1C  79                 	db	121
   539  00FF1D  E7                 	db	231
   540  00FF1E  C8                 	db	200
   541  00FF1F  37                 	db	55
   542  00FF20  6D                 	db	109
   543  00FF21  8D                 	db	141
   544  00FF22  D5                 	db	213
   545  00FF23  4E                 	db	78
   546  00FF24  A9                 	db	169
   547  00FF25  6C                 	db	108
   548  00FF26  56                 	db	86
   549  00FF27  F4                 	db	244
   550  00FF28  EA                 	db	234
   551  00FF29  65                 	db	101
   552  00FF2A  7A                 	db	122
   553  00FF2B  AE                 	db	174
   554  00FF2C  08                 	db	8
   555  00FF2D  BA                 	db	186
   556  00FF2E  78                 	db	120
   557  00FF2F  25                 	db	37
   558  00FF30  2E                 	db	46
   559  00FF31  1C                 	db	28
   560  00FF32  A6                 	db	166
   561  00FF33  B4                 	db	180
   562  00FF34  C6                 	db	198
   563  00FF35  E8                 	db	232
   564  00FF36  DD                 	db	221
   565  00FF37  74                 	db	116
   566  00FF38  1F                 	db	31
   567  00FF39  4B                 	db	75
   568  00FF3A  BD                 	db	189
   569  00FF3B  8B                 	db	139
   570  00FF3C  8A                 	db	138
   571  00FF3D  70                 	db	112
   572  00FF3E  3E                 	db	62
   573  00FF3F  B5                 	db	181
   574  00FF40  66                 	db	102
   575  00FF41  48                 	db	72
   576  00FF42  03                 	db	3
   577  00FF43  F6                 	db	246
   578  00FF44  0E                 	db	14
   579  00FF45  61                 	db	97
   580  00FF46  35                 	db	53
   581  00FF47  57                 	db	87
   582  00FF48  B9                 	db	185
   583  00FF49  86                 	db	134
   584  00FF4A  C1                 	db	193
   585  00FF4B  1D                 	db	29
   586  00FF4C  9E                 	db	158
   587  00FF4D  E1                 	db	225
   588  00FF4E  F8                 	db	248
   589  00FF4F  98                 	db	152
   590  00FF50  11                 	db	17
   591  00FF51  69                 	db	105
   592  00FF52  D9                 	db	217
   593  00FF53  8E                 	db	142
   594  00FF54  94                 	db	148
   595  00FF55  9B                 	db	155
   596  00FF56  1E                 	db	30
   597  00FF57  87                 	db	135
   598  00FF58  E9                 	db	233
   599  00FF59  CE                 	db	206
   600  00FF5A  55                 	db	85
   601  00FF5B  28                 	db	40
   602  00FF5C  DF                 	db	223
   603  00FF5D  8C                 	db	140
   604  00FF5E  A1                 	db	161
   605  00FF5F  89                 	db	137
   606  00FF60  0D                 	db	13
   607  00FF61  BF                 	db	191
   608  00FF62  E6                 	db	230
   609  00FF63  42                 	db	66
   610  00FF64  68                 	db	104
   611  00FF65  41                 	db	65
   612  00FF66  99                 	db	153
   613  00FF67  2D                 	db	45
   614  00FF68  0F                 	db	15
   615  00FF69  B0                 	db	176
   616  00FF6A  54                 	db	84
   617  00FF6B  BB                 	db	187
   618  00FF6C  16                 	db	22
   619  00FF6D                     __end_of_STable:
   620                           	opt stack 0
   621  00FF6D                     _maxPayloadSize:
   622                           	opt stack 0
   623  00FF6D  33                 	db	51
   624  00FF6E  33                 	db	51
   625  00FF6F  33                 	db	51
   626  00FF70  73                 	db	115
   627  00FF71  F2                 	db	242
   628  00FF72  F2                 	db	242
   629  00FF73  F2                 	db	242
   630  00FF74  38                 	db	56
   631  00FF75                     __end_of_maxPayloadSize:
   632                           	opt stack 0
   633  00FF75                     _modulation:
   634                           	opt stack 0
   635  00FF75  01                 	db	1
   636  00FF76  01                 	db	1
   637  00FF77  01                 	db	1
   638  00FF78  01                 	db	1
   639  00FF79  01                 	db	1
   640  00FF7A  01                 	db	1
   641  00FF7B  01                 	db	1
   642  00FF7C  00                 	db	0
   643  00FF7D                     __end_of_modulation:
   644                           	opt stack 0
   645  00FF7D                     _rxWindowOffset:
   646                           	opt stack 0
   647  00FF7D  DF                 	db	223
   648  00FF7E  CE                 	db	206
   649  00FF7F  C6                 	db	198
   650  00FF80  C2                 	db	194
   651  00FF81  BE                 	db	190
   652  00FF82  BC                 	db	188
   653  00FF83  F1                 	db	241
   654  00FF84  FE                 	db	254
   655  00FF85                     __end_of_rxWindowOffset:
   656                           	opt stack 0
   657  00FF85                     _rxWindowSize:
   658                           	opt stack 0
   659  00FF85  08                 	db	8
   660  00FF86  0A                 	db	10
   661  00FF87  0E                 	db	14
   662  00FF88  1A                 	db	26
   663  00FF89  31                 	db	49
   664  00FF8A  58                 	db	88
   665  00FF8B  3C                 	db	60
   666  00FF8C  08                 	db	8
   667  00FF8D                     __end_of_rxWindowSize:
   668                           	opt stack 0
   669  00FF8D                     _bandwidth:
   670                           	opt stack 0
   671  00FF8D  07                 	db	7
   672  00FF8E  07                 	db	7
   673  00FF8F  07                 	db	7
   674  00FF90  07                 	db	7
   675  00FF91  07                 	db	7
   676  00FF92  07                 	db	7
   677  00FF93  08                 	db	8
   678  00FF94                     __end_of_bandwidth:
   679                           	opt stack 0
   680  00FF94                     _macEndDevCmdReplyLen:
   681                           	opt stack 0
   682  00FF94  01                 	db	1
   683  00FF95  02                 	db	2
   684  00FF96  01                 	db	1
   685  00FF97  02                 	db	2
   686  00FF98  03                 	db	3
   687  00FF99  02                 	db	2
   688  00FF9A  01                 	db	1
   689  00FF9B                     __end_of_macEndDevCmdReplyLen:
   690                           	opt stack 0
   691  00FF9B                     _spreadingFactor:
   692                           	opt stack 0
   693  00FF9B  0C                 	db	12
   694  00FF9C  0B                 	db	11
   695  00FF9D  0A                 	db	10
   696  00FF9E  09                 	db	9
   697  00FF9F  08                 	db	8
   698  00FFA0  07                 	db	7
   699  00FFA1  07                 	db	7
   700  00FFA2                     __end_of_spreadingFactor:
   701                           	opt stack 0
   702  00FFA2                     _txPower868:
   703                           	opt stack 0
   704  00FFA2  14                 	db	20
   705  00FFA3  0E                 	db	14
   706  00FFA4  0B                 	db	11
   707  00FFA5  08                 	db	8
   708  00FFA6  05                 	db	5
   709  00FFA7  02                 	db	2
   710  00FFA8                     __end_of_txPower868:
   711                           	opt stack 0
   712  00FFA8                     _DefaultChannels433:
   713                           	opt stack 0
   714  00FFA8  B9D8               	dw	47576
   715  00FFAA  19D1               	dw	6609
   716  00FFAC  01                 	db	1
   717  00FFAD  50                 	db	80
   718  00FFAE  012E               	dw	302
   719  00FFB0  0000               	dw	0
   720  00FFB2  0000               	dw	0
   721  00FFB4  01                 	db	1
   722  00FFB5  FF                 	db	255
   723  00FFB6  C718               	dw	50968
   724  00FFB8  19D4               	dw	6612
   725  00FFBA  01                 	db	1
   726  00FFBB  50                 	db	80
   727  00FFBC  012E               	dw	302
   728  00FFBE  0000               	dw	0
   729  00FFC0  0000               	dw	0
   730  00FFC2  01                 	db	1
   731  00FFC3  FF                 	db	255
   732  00FFC4  D458               	dw	54360
   733  00FFC6  19D7               	dw	6615
   734  00FFC8  01                 	db	1
   735  00FFC9  50                 	db	80
   736  00FFCA  012E               	dw	302
   737  00FFCC  0000               	dw	0
   738  00FFCE  0000               	dw	0
   739  00FFD0  01                 	db	1
   740  00FFD1  FF                 	db	255
   741  00FFD2                     __end_of_DefaultChannels433:
   742                           	opt stack 0
   743  00FFD2                     _DefaultChannels868:
   744                           	opt stack 0
   745  00FFD2  27A0               	dw	10144
   746  00FFD4  33BE               	dw	13246
   747  00FFD6  01                 	db	1
   748  00FFD7  50                 	db	80
   749  00FFD8  012E               	dw	302
   750  00FFDA  0000               	dw	0
   751  00FFDC  0000               	dw	0
   752  00FFDE  01                 	db	1
   753  00FFDF  FF                 	db	255
   754  00FFE0  34E0               	dw	13536
   755  00FFE2  33C1               	dw	13249
   756  00FFE4  01                 	db	1
   757  00FFE5  50                 	db	80
   758  00FFE6  012E               	dw	302
   759  00FFE8  0000               	dw	0
   760  00FFEA  0000               	dw	0
   761  00FFEC  01                 	db	1
   762  00FFED  FF                 	db	255
   763  00FFEE  4220               	dw	16928
   764  00FFF0  33C4               	dw	13252
   765  00FFF2  01                 	db	1
   766  00FFF3  50                 	db	80
   767  00FFF4  012E               	dw	302
   768  00FFF6  0000               	dw	0
   769  00FFF8  0000               	dw	0
   770  00FFFA  01                 	db	1
   771  00FFFB  FF                 	db	255
   772  00FFFC                     __end_of_DefaultChannels868:
   773                           	opt stack 0
   774  00FFFC                     _FskSyncWordBuff:
   775                           	opt stack 0
   776  00FFFC  C1                 	db	193
   777  00FFFD  94                 	db	148
   778  00FFFE  C1                 	db	193
   779  00FFFF                     __end_of_FskSyncWordBuff:
   780                           	opt stack 0
   781  00FFFF  00                 	db	0	; dummy byte at the end
   782  0000                     
   783                           	psect	nvCOMRAM
   784  00005B                     __pnvCOMRAM:
   785                           	opt stack 0
   786  00005B                     _timer1ReloadVal:
   787                           	opt stack 0
   788  00005B                     	ds	2
   789  00005D                     _timer3ReloadVal:
   790                           	opt stack 0
   791  00005D                     	ds	2
   792                           
   793                           	psect	nvBANK1
   794  0001E4                     __pnvBANK1:
   795                           	opt stack 0
   796  0001E4                     _INT1_InterruptHandler:
   797                           	opt stack 0
   798  0001E4                     	ds	2
   799  0001E6                     _INT2_InterruptHandler:
   800                           	opt stack 0
   801  0001E6                     	ds	2
   802  0001E8                     _IOCB4_InterruptHandler:
   803                           	opt stack 0
   804  0001E8                     	ds	2
   805  0001EA                     _TMR1_InterruptHandler:
   806                           	opt stack 0
   807  0001EA                     	ds	2
   808  0001EC                     _TMR3_InterruptHandler:
   809                           	opt stack 0
   810  0001EC                     	ds	2
   811  0000                     _ANSELA	set	3896
   812  0000                     _ANSELB	set	3897
   813  0000                     _ANSELC	set	3898
   814  0000                     _ANSELCbits	set	3898
   815  0000                     _ANSELD	set	3899
   816  0000                     _ANSELDbits	set	3899
   817  0000                     _ANSELE	set	3900
   818  0000                     _ANSD0	set	31192
   819  0000                     _ANSD1	set	31193
   820  0000                     _ANSD3	set	31195
   821  0000                     _ANSD4	set	31196
   822  0000                     _CCP1MD	set	31216
   823  0000                     _CCP2MD	set	31217
   824  0000                     _CCP3MD	set	31218
   825  0000                     _CCP4MD	set	31219
   826  0000                     _CCP5MD	set	31220
   827  0000                     _CMP1MD	set	31209
   828  0000                     _CMP2MD	set	31210
   829  0000                     _CTMUMD	set	31211
   830  0000                     _MSSP1MD	set	31222
   831  0000                     _MSSP2MD	set	31223
   832  0000                     _TMR2MD	set	31225
   833  0000                     _TMR4MD	set	31227
   834  0000                     _TMR5MD	set	31228
   835  0000                     _TMR6MD	set	31229
   836  0000                     _UART1MD	set	31230
   837  0000                     _UART2MD	set	31231
   838  0000                     _TMR1	set	4046
   839  0000                     _TMR3	set	4018
   840  0000                     _ADCON0bits	set	4034
   841  0000                     _ADCON2bits	set	4032
   842  0000                     _ADRESH	set	4036
   843  0000                     _ADRESL	set	4035
   844  0000                     _INTCON2bits	set	4081
   845  0000                     _INTCON3bits	set	4080
   846  0000                     _INTCONbits	set	4082
   847  0000                     _IOCBbits	set	3938
   848  0000                     _LATA	set	3977
   849  0000                     _LATB	set	3978
   850  0000                     _LATBbits	set	3978
   851  0000                     _LATC	set	3979
   852  0000                     _LATCbits	set	3979
   853  0000                     _LATD	set	3980
   854  0000                     _LATDbits	set	3980
   855  0000                     _LATE	set	3981
   856  0000                     _LATEbits	set	3981
   857  0000                     _OSCCON	set	4051
   858  0000                     _OSCCON2	set	4050
   859  0000                     _OSCTUNE	set	3995
   860  0000                     _PIE1bits	set	3997
   861  0000                     _PIE2bits	set	4000
   862  0000                     _PIR1bits	set	3998
   863  0000                     _PIR2bits	set	4001
   864  0000                     _PORTBbits	set	3969
   865  0000                     _PORTCbits	set	3970
   866  0000                     _PORTDbits	set	3971
   867  0000                     _RCONbits	set	4048
   868  0000                     _SSP2ADD	set	3950
   869  0000                     _SSP2BUF	set	3951
   870  0000                     _SSP2CON1	set	3948
   871  0000                     _SSP2CON1bits	set	3948
   872  0000                     _SSP2STAT	set	3949
   873  0000                     _SSP2STATbits	set	3949
   874  0000                     _T1CON	set	4045
   875  0000                     _T1CONbits	set	4045
   876  0000                     _T1GCON	set	4044
   877  0000                     _T3CON	set	4017
   878  0000                     _T3CONbits	set	4017
   879  0000                     _T3GCON	set	4020
   880  0000                     _TMR1H	set	4047
   881  0000                     _TMR1L	set	4046
   882  0000                     _TMR3H	set	4019
   883  0000                     _TMR3L	set	4018
   884  0000                     _TRISA	set	3986
   885  0000                     _TRISB	set	3987
   886  0000                     _TRISBbits	set	3987
   887  0000                     _TRISC	set	3988
   888  0000                     _TRISCbits	set	3988
   889  0000                     _TRISD	set	3989
   890  0000                     _TRISDbits	set	3989
   891  0000                     _TRISE	set	3990
   892  0000                     _TRISEbits	set	3990
   893  0000                     _WPUB	set	3937
   894  0000                     _IDLEN	set	32415
   895  0000                     _LATC2	set	31834
   896  0000                     _LATD0	set	31840
   897  0000                     _LATD1	set	31841
   898  0000                     _LATD3	set	31843
   899  0000                     _LATD4	set	31844
   900  0000                     _TRISC2	set	31906
   901  0000                     _TRISD0	set	31912
   902  0000                     _TRISD1	set	31913
   903  0000                     _TRISD3	set	31915
   904  0000                     _TRISD4	set	31916
   905                           
   906                           ; #config settings
   907  0000                     
   908                           	psect	cinit
   909  0059BA                     __pcinit:
   910                           	opt stack 0
   911  0059BA                     start_initialization:
   912                           	opt stack 0
   913  0059BA                     __initialization:
   914                           	opt stack 0
   915                           
   916                           ; Initialize objects allocated to BANK1 (48 bytes)
   917                           ; load TBLPTR registers with __pidataBANK1
   918  0059BA  0E0C               	movlw	low __pidataBANK1
   919  0059BC  6EF6               	movwf	tblptrl,c
   920  0059BE  0E71               	movlw	high __pidataBANK1
   921  0059C0  6EF7               	movwf	tblptrh,c
   922  0059C2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   923  0059C4  6EF8               	movwf	tblptru,c
   924  0059C6  EE01  F0B4         	lfsr	0,__pdataBANK1
   925  0059CA  EE20 F030          	lfsr	2,48
   926  0059CE                     copy_data0:
   927  0059CE  0009               	tblrd		*+
   928  0059D0  CFF5 FFEE          	movff	tablat,postinc0
   929  0059D4  50DD               	movf	postdec2,w,c
   930  0059D6  50D9               	movf	fsr2l,w,c
   931  0059D8  E1FA               	bnz	copy_data0
   932                           
   933                           ; Initialize objects allocated to COMRAM (9 bytes)
   934                           ; load TBLPTR registers with __pidataCOMRAM
   935  0059DA  0EDA               	movlw	low __pidataCOMRAM
   936  0059DC  6EF6               	movwf	tblptrl,c
   937  0059DE  0E78               	movlw	high __pidataCOMRAM
   938  0059E0  6EF7               	movwf	tblptrh,c
   939  0059E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   940  0059E4  6EF8               	movwf	tblptru,c
   941  0059E6  EE00  F052         	lfsr	0,__pdataCOMRAM
   942  0059EA  EE20 F009          	lfsr	2,9
   943  0059EE                     copy_data1:
   944  0059EE  0009               	tblrd		*+
   945  0059F0  CFF5 FFEE          	movff	tablat,postinc0
   946  0059F4  50DD               	movf	postdec2,w,c
   947  0059F6  50D9               	movf	fsr2l,w,c
   948  0059F8  E1FA               	bnz	copy_data1
   949                           
   950                           ; Clear objects allocated to BIGRAM (542 bytes)
   951  0059FA  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   952  0059FE  EE22 F01E          	lfsr	2,542
   953  005A02                     clear_0:
   954  005A02  6AEE               	clrf	postinc0,c
   955  005A04  50DD               	movf	postdec2,w,c
   956  005A06  50D9               	movf	fsr2l,w,c
   957  005A08  E1FC               	bnz	clear_0
   958  005A0A  50DA               	movf	fsr2h,w,c
   959  005A0C  E1FA               	bnz	clear_0
   960                           
   961                           ; Clear objects allocated to BANK4 (224 bytes)
   962  005A0E  EE04  F000         	lfsr	0,__pbssBANK4
   963  005A12  0EE0               	movlw	224
   964  005A14                     clear_1:
   965  005A14  6AEE               	clrf	postinc0,c
   966  005A16  06E8               	decf	wreg,f,c
   967  005A18  E1FD               	bnz	clear_1
   968                           
   969                           ; Clear objects allocated to BANK3 (160 bytes)
   970  005A1A  EE03  F000         	lfsr	0,__pbssBANK3
   971  005A1E  0EA0               	movlw	160
   972  005A20                     clear_2:
   973  005A20  6AEE               	clrf	postinc0,c
   974  005A22  06E8               	decf	wreg,f,c
   975  005A24  E1FD               	bnz	clear_2
   976                           
   977                           ; Clear objects allocated to BANK2 (245 bytes)
   978  005A26  EE02  F000         	lfsr	0,__pbssBANK2
   979  005A2A  0EF5               	movlw	245
   980  005A2C                     clear_3:
   981  005A2C  6AEE               	clrf	postinc0,c
   982  005A2E  06E8               	decf	wreg,f,c
   983  005A30  E1FD               	bnz	clear_3
   984                           
   985                           ; Clear objects allocated to BANK1 (75 bytes)
   986  005A32  EE01  F069         	lfsr	0,__pbssBANK1
   987  005A36  0E4B               	movlw	75
   988  005A38                     clear_4:
   989  005A38  6AEE               	clrf	postinc0,c
   990  005A3A  06E8               	decf	wreg,f,c
   991  005A3C  E1FD               	bnz	clear_4
   992                           
   993                           ; Clear objects allocated to BANK0 (11 bytes)
   994  005A3E  EE00  F0E8         	lfsr	0,__pbssBANK0
   995  005A42  0E0B               	movlw	11
   996  005A44                     clear_5:
   997  005A44  6AEE               	clrf	postinc0,c
   998  005A46  06E8               	decf	wreg,f,c
   999  005A48  E1FD               	bnz	clear_5
  1000                           
  1001                           ; Clear objects allocated to COMRAM (20 bytes)
  1002  005A4A  EE00  F032         	lfsr	0,__pbssCOMRAM
  1003  005A4E  0E14               	movlw	20
  1004  005A50                     clear_6:
  1005  005A50  6AEE               	clrf	postinc0,c
  1006  005A52  06E8               	decf	wreg,f,c
  1007  005A54  E1FD               	bnz	clear_6
  1008  005A56                     end_of_initialization:
  1009                           	opt stack 0
  1010  005A56                     __end_of__initialization:
  1011                           	opt stack 0
  1012  005A56  0100               	movlb	0
  1013  005A58  EF7D  F02D         	goto	_main	;jump to C main() function
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec2	equ	0xFDD
  1021                           fsr2h	equ	0xFDA
  1022                           fsr2l	equ	0xFD9
  1023                           
  1024                           	psect	bssCOMRAM
  1025  000032                     __pbssCOMRAM:
  1026                           	opt stack 0
  1027  000032                     TMR_GetDeltaTime@retVal:
  1028                           	opt stack 0
  1029  000032                     	ds	4
  1030  000036                     _ticksAccounted:
  1031                           	opt stack 0
  1032  000036                     	ds	4
  1033  00003A                     _ticksAdded:
  1034                           	opt stack 0
  1035  00003A                     	ds	4
  1036  00003E                     TMR_GetDeltaTime@tmrVal:
  1037                           	opt stack 0
  1038  00003E                     	ds	2
  1039  000040                     TMR_SwapTimer@oldVal:
  1040                           	opt stack 0
  1041  000040                     	ds	2
  1042  000042                     TMR_SwapTimer@retVal:
  1043                           	opt stack 0
  1044  000042                     	ds	2
  1045  000044                     __roundCounter:
  1046                           	opt stack 0
  1047  000044                     	ds	1
  1048  000045                     handle16sInterrupt@counterSleepTimeout:
  1049                           	opt stack 0
  1050  000045                     	ds	1
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           postinc0	equ	0xFEE
  1056                           wreg	equ	0xFE8
  1057                           postdec2	equ	0xFDD
  1058                           fsr2h	equ	0xFDA
  1059                           fsr2l	equ	0xFD9
  1060                           
  1061                           	psect	dataCOMRAM
  1062  000052                     __pdataCOMRAM:
  1063                           	opt stack 0
  1064  000052                     _randx:
  1065                           	opt stack 0
  1066  000052                     	ds	4
  1067  000056                     _ticksToScheduledInterrupt:
  1068                           	opt stack 0
  1069  000056                     	ds	4
  1070  00005A                     _ONE_HOUR_TIMEOUT_COUNTS:
  1071                           	opt stack 0
  1072  00005A                     	ds	1
  1073                           tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec2	equ	0xFDD
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           
  1083                           	psect	bssBANK0
  1084  0000E8                     __pbssBANK0:
  1085                           	opt stack 0
  1086  0000E8                     _rxPayload:
  1087                           	opt stack 0
  1088  0000E8                     	ds	4
  1089  0000EC                     _reloadVal:
  1090                           	opt stack 0
  1091  0000EC                     	ds	2
  1092  0000EE                     __rcon:
  1093                           	opt stack 0
  1094  0000EE                     	ds	1
  1095  0000EF                     _allocatedTimers:
  1096                           	opt stack 0
  1097  0000EF                     	ds	1
  1098  0000F0                     _dioStatus:
  1099                           	opt stack 0
  1100  0000F0                     	ds	1
  1101  0000F1                     _localDioStatus:
  1102                           	opt stack 0
  1103  0000F1                     	ds	1
  1104  0000F2                     _timerOverflow:
  1105                           	opt stack 0
  1106  0000F2                     	ds	1
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           postinc0	equ	0xFEE
  1112                           wreg	equ	0xFE8
  1113                           postdec2	equ	0xFDD
  1114                           fsr2h	equ	0xFDA
  1115                           fsr2l	equ	0xFD9
  1116                           
  1117                           	psect	bssBANK1
  1118  000169                     __pbssBANK1:
  1119                           	opt stack 0
  1120  000169                     _TimeToSend:
  1121                           	opt stack 0
  1122  000169                     	ds	1
  1123  00016A                     _RadioConfiguration:
  1124                           	opt stack 0
  1125  00016A                     	ds	54
  1126  0001A0                     _aesBuffer:
  1127                           	opt stack 0
  1128  0001A0                     	ds	16
  1129  0001B0                     _payload:
  1130                           	opt stack 0
  1131  0001B0                     	ds	4
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec2	equ	0xFDD
  1139                           fsr2h	equ	0xFDA
  1140                           fsr2l	equ	0xFD9
  1141                           
  1142                           	psect	dataBANK1
  1143  0001B4                     __pdataBANK1:
  1144                           	opt stack 0
  1145  0001B4                     GenerateSubkey@F7870:
  1146                           	opt stack 0
  1147  0001B4                     	ds	16
  1148  0001C4                     _appSKey:
  1149                           	opt stack 0
  1150  0001C4                     	ds	16
  1151  0001D4                     _nwkSKey:
  1152                           	opt stack 0
  1153  0001D4                     	ds	16
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           postdec2	equ	0xFDD
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           
  1164                           	psect	bssBANK2
  1165  000200                     __pbssBANK2:
  1166                           	opt stack 0
  1167  000200                     _loRa:
  1168                           	opt stack 0
  1169  000200                     	ds	245
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec2	equ	0xFDD
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           
  1180                           	psect	bssBANK3
  1181  000300                     __pbssBANK3:
  1182                           	opt stack 0
  1183  000300                     _swTimers:
  1184                           	opt stack 0
  1185  000300                     	ds	160
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec2	equ	0xFDD
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           
  1196                           	psect	bssBANK4
  1197  000400                     __pbssBANK4:
  1198                           	opt stack 0
  1199  000400                     _Channels:
  1200                           	opt stack 0
  1201  000400                     	ds	224
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec2	equ	0xFDD
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           
  1212                           	psect	bssBIGRAM
  1213  0004E0                     __pbssBIGRAM:
  1214                           	opt stack 0
  1215  0004E0                     _macBuffer:
  1216                           	opt stack 0
  1217  0004E0                     	ds	271
  1218  0005EF                     _radioBuffer:
  1219                           	opt stack 0
  1220  0005EF                     	ds	271
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec2	equ	0xFDD
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           
  1231                           	psect	cstackBANK3
  1232  0003A0                     __pcstackBANK3:
  1233                           	opt stack 0
  1234  0003A0                     LORAWAN_RxDone@fPort:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x0
  1238  0003A0                     	ds	1
  1239  0003A1                     LORAWAN_RxDone@channelIndex:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x1
  1243  0003A1                     	ds	1
  1244  0003A2                     LORAWAN_RxDone@mhdr:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x2
  1248  0003A2                     	ds	1
  1249  0003A3                     LORAWAN_RxDone@extractedMic:
  1250                           	opt stack 0
  1251                           
  1252                           ; 4 bytes @ 0x3
  1253  0003A3                     	ds	4
  1254  0003A7                     LORAWAN_RxDone@bufferIndex:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x7
  1258  0003A7                     	ds	1
  1259  0003A8                     LORAWAN_RxDone@temp:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x8
  1263  0003A8                     	ds	1
  1264  0003A9                     LORAWAN_RxDone@packet:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x9
  1268  0003A9                     	ds	2
  1269  0003AB                     LORAWAN_RxDone@computedMic:
  1270                           	opt stack 0
  1271                           
  1272                           ; 4 bytes @ 0xB
  1273  0003AB                     	ds	4
  1274  0003AF                     LORAWAN_RxDone@joinAccept:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0xF
  1278  0003AF                     	ds	2
  1279  0003B1                     LORAWAN_RxDone@frmPayloadLength:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x11
  1283  0003B1                     	ds	1
  1284  0003B2                     LORAWAN_RxDone@hdr:
  1285                           	opt stack 0
  1286                           
  1287                           ; 2 bytes @ 0x12
  1288  0003B2                     	ds	2
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           postinc0	equ	0xFEE
  1294                           wreg	equ	0xFE8
  1295                           postdec2	equ	0xFDD
  1296                           fsr2h	equ	0xFDA
  1297                           fsr2l	equ	0xFD9
  1298                           
  1299                           	psect	cstackBANK1
  1300  000100                     __pcstackBANK1:
  1301                           	opt stack 0
  1302  000100                     AESCmac@k2:
  1303                           	opt stack 0
  1304                           
  1305                           ; 16 bytes @ 0x0
  1306  000100                     	ds	16
  1307  000110                     AESCmac@k1:
  1308                           	opt stack 0
  1309                           
  1310                           ; 16 bytes @ 0x10
  1311  000110                     	ds	16
  1312  000120                     AESCmac@mLast:
  1313                           	opt stack 0
  1314                           
  1315                           ; 16 bytes @ 0x20
  1316  000120                     	ds	16
  1317  000130                     AESCmac@padded:
  1318                           	opt stack 0
  1319                           
  1320                           ; 16 bytes @ 0x30
  1321  000130                     	ds	16
  1322  000140                     AESCmac@y:
  1323                           	opt stack 0
  1324                           
  1325                           ; 16 bytes @ 0x40
  1326  000140                     	ds	16
  1327  000150                     AESCmac@x:
  1328                           	opt stack 0
  1329                           
  1330                           ; 16 bytes @ 0x50
  1331  000150                     	ds	16
  1332  000160                     AESCmac@ptr:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x60
  1336  000160                     	ds	2
  1337  000162                     AESCmac@flag:
  1338                           	opt stack 0
  1339                           
  1340                           ; 1 bytes @ 0x62
  1341  000162                     	ds	1
  1342  000163                     AESCmac@n:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x63
  1346  000163                     	ds	1
  1347  000164                     AESCmac@j:
  1348                           	opt stack 0
  1349                           
  1350                           ; 1 bytes @ 0x64
  1351  000164                     	ds	1
  1352  000165                     AESCmac@i:
  1353                           	opt stack 0
  1354                           
  1355                           ; 1 bytes @ 0x65
  1356  000165                     	ds	1
  1357  000166                     LORAWAN_RxDone@buffer:
  1358                           	opt stack 0
  1359                           
  1360                           ; 2 bytes @ 0x66
  1361  000166                     	ds	2
  1362  000168                     LORAWAN_RxDone@bufferLength:
  1363                           	opt stack 0
  1364                           
  1365                           ; 1 bytes @ 0x68
  1366  000168                     	ds	1
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           postdec2	equ	0xFDD
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           
  1377                           	psect	cstackBANK0
  1378  000060                     __pcstackBANK0:
  1379                           	opt stack 0
  1380  000060                     	ds	4
  1381  000064                     ??_UpdateMinMaxChDataRate:
  1382  000064                     ??_FindSmallestDataRate:
  1383  000064                     ??_UpdateReceiveDelays:
  1384  000064                     ??_CountfOptsLength:
  1385  000064                     ??_ADC_SelChannel:
  1386  000064                     ?_TMR1_ReadTimer:
  1387                           	opt stack 0
  1388  000064                     ?_ExecuteLinkCheck:
  1389                           	opt stack 0
  1390  000064                     ?_ExecuteDutyCycle:
  1391                           	opt stack 0
  1392  000064                     ?_ExecuteDevStatus:
  1393                           	opt stack 0
  1394  000064                     ?_GetRx1Freq:
  1395                           	opt stack 0
  1396  000064                     ?___lmul:
  1397                           	opt stack 0
  1398  000064                     ?___lldiv:
  1399                           	opt stack 0
  1400  000064                     ?___llmod:
  1401                           	opt stack 0
  1402  000064                     SwTimerCreate@retVal:
  1403                           	opt stack 0
  1404  000064                     SwTimerIsRunning@timerId:
  1405                           	opt stack 0
  1406  000064                     SwTimerStop@timerId:
  1407                           	opt stack 0
  1408  000064                     SPI2_Exchange8bit@data:
  1409                           	opt stack 0
  1410  000064                     HALResetPinOutputValue@value:
  1411                           	opt stack 0
  1412  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1413                           	opt stack 0
  1414  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1415                           	opt stack 0
  1416  000064                     RADIO_SetOutputPower@power:
  1417                           	opt stack 0
  1418  000064                     RADIO_SetCRC@crc:
  1419                           	opt stack 0
  1420  000064                     RADIO_SetIQInverted@iqInverted:
  1421                           	opt stack 0
  1422  000064                     RADIO_SetBandwidth@bandwidth:
  1423                           	opt stack 0
  1424  000064                     RADIO_SetModulation@modulation:
  1425                           	opt stack 0
  1426  000064                     ValidateDataRate@dataRate:
  1427                           	opt stack 0
  1428  000064                     ValidateTxPower@result:
  1429                           	opt stack 0
  1430  000064                     UpdateDLSettings@dlRx1DrOffset:
  1431                           	opt stack 0
  1432  000064                     UpdateDataRange@dataRangeNew:
  1433                           	opt stack 0
  1434  000064                     UpdateChannelIdStatus@statusNew:
  1435                           	opt stack 0
  1436  000064                     ValidateRxOffset@rxOffset:
  1437                           	opt stack 0
  1438  000064                     ValidateChannelId@allowedForDefaultChannels:
  1439                           	opt stack 0
  1440  000064                     ValidateChannelMaskCntl@result:
  1441                           	opt stack 0
  1442  000064                     UpdateCurrentDataRate@valueNew:
  1443                           	opt stack 0
  1444  000064                     UpdateTxPower@txPowerNew:
  1445                           	opt stack 0
  1446  000064                     UpdateJoinInProgress@state:
  1447                           	opt stack 0
  1448  000064                     INTERRUPT_GetDioStatus@a:
  1449                           	opt stack 0
  1450  000064                     EncKeySchedule@key:
  1451                           	opt stack 0
  1452  000064                     ___abdiv@divisor:
  1453                           	opt stack 0
  1454  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1455                           	opt stack 0
  1456  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1457                           	opt stack 0
  1458  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1459                           	opt stack 0
  1460  000064                     SwTimerSetCallback@callback:
  1461                           	opt stack 0
  1462  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1463                           	opt stack 0
  1464  000064                     ExecuteDutyCycle@ptr:
  1465                           	opt stack 0
  1466  000064                     ExecuteDevStatus@ptr:
  1467                           	opt stack 0
  1468  000064                     UpdateDutyCycle@dutyCycleNew:
  1469                           	opt stack 0
  1470  000064                     ValidateChannelMask@channelMask:
  1471                           	opt stack 0
  1472  000064                     TMR1_WriteTimer@timerVal:
  1473                           	opt stack 0
  1474  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1475                           	opt stack 0
  1476  000064                     TMR3_SetInterruptHandler@InterruptHandler:
  1477                           	opt stack 0
  1478  000064                     FillSubKey@source:
  1479                           	opt stack 0
  1480  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1481                           	opt stack 0
  1482  000064                     ExecuteLinkCheck@ptr:
  1483                           	opt stack 0
  1484  000064                     IncludeMacCommandsResponse@macBuffer:
  1485                           	opt stack 0
  1486  000064                     CheckFlags@hdr:
  1487                           	opt stack 0
  1488  000064                     CheckMcastFlags@hdr:
  1489                           	opt stack 0
  1490  000064                     EncodeShiftRow@stateTable:
  1491                           	opt stack 0
  1492  000064                     memcpy@d1:
  1493                           	opt stack 0
  1494  000064                     memset@p1:
  1495                           	opt stack 0
  1496  000064                     SystemBlockingWaitMs@ms:
  1497                           	opt stack 0
  1498  000064                     RADIO_SetChannelFrequency@frequency:
  1499                           	opt stack 0
  1500  000064                     ValidateFrequency@frequencyNew:
  1501                           	opt stack 0
  1502  000064                     UpdateFrequency@frequencyNew:
  1503                           	opt stack 0
  1504  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1505                           	opt stack 0
  1506  000064                     UpdateReceiveWindow2Parameters@frequency:
  1507                           	opt stack 0
  1508  000064                     ___lmul@multiplier:
  1509                           	opt stack 0
  1510  000064                     ___lldiv@dividend:
  1511                           	opt stack 0
  1512  000064                     ___llmod@dividend:
  1513                           	opt stack 0
  1514                           
  1515                           ; 4 bytes @ 0x4
  1516  000064                     	ds	1
  1517  000065                     ??_UpdateDataRange:
  1518  000065                     ??_UpdateChannelIdStatus:
  1519  000065                     ??_EncKeySchedule:
  1520  000065                     SwTimerIsRunning@isRunning:
  1521                           	opt stack 0
  1522  000065                     HALSPISend@data:
  1523                           	opt stack 0
  1524  000065                     ValidateDataRate@result:
  1525                           	opt stack 0
  1526  000065                     ValidateTxPower@txPowerNew:
  1527                           	opt stack 0
  1528  000065                     UpdateDLSettings@dlRx2Dr:
  1529                           	opt stack 0
  1530  000065                     ValidateRxOffset@result:
  1531                           	opt stack 0
  1532  000065                     ValidateChannelId@result:
  1533                           	opt stack 0
  1534  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1535                           	opt stack 0
  1536  000065                     UpdateMinMaxChDataRate@i:
  1537                           	opt stack 0
  1538  000065                     FindSmallestDataRate@found:
  1539                           	opt stack 0
  1540  000065                     ADC_SelChannel@c:
  1541                           	opt stack 0
  1542  000065                     ___abdiv@counter:
  1543                           	opt stack 0
  1544                           
  1545                           ; 1 bytes @ 0x5
  1546  000065                     	ds	1
  1547  000066                     ??_TMR1_ReadTimer:
  1548  000066                     ??_ExecuteDutyCycle:
  1549  000066                     ?_ADC_Read:
  1550                           	opt stack 0
  1551  000066                     SwTimerSetCallback@callbackParameter:
  1552                           	opt stack 0
  1553  000066                     RADIO_RegisterWrite@value:
  1554                           	opt stack 0
  1555  000066                     RADIO_RegisterRead@reg:
  1556                           	opt stack 0
  1557  000066                     UpdateDataRange@channelId:
  1558                           	opt stack 0
  1559  000066                     UpdateChannelIdStatus@channelId:
  1560                           	opt stack 0
  1561  000066                     ValidateDataRange@result:
  1562                           	opt stack 0
  1563  000066                     ValidateChannelId@channelId:
  1564                           	opt stack 0
  1565  000066                     UpdateDutyCycle@channelId:
  1566                           	opt stack 0
  1567  000066                     ValidateChannelMask@i:
  1568                           	opt stack 0
  1569  000066                     LORAWAN_SetCurrentDataRate@valueNew:
  1570                           	opt stack 0
  1571  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1572                           	opt stack 0
  1573  000066                     FindSmallestDataRate@i:
  1574                           	opt stack 0
  1575  000066                     EncodeShiftRow@temp:
  1576                           	opt stack 0
  1577  000066                     ___abdiv@sign:
  1578                           	opt stack 0
  1579  000066                     FillSubKey@key:
  1580                           	opt stack 0
  1581  000066                     memcpy@s1:
  1582                           	opt stack 0
  1583  000066                     memset@c:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x6
  1587  000066                     	ds	1
  1588  000067                     SwTimerSetCallback@timerId:
  1589                           	opt stack 0
  1590  000067                     RADIO_RegisterWrite@reg:
  1591                           	opt stack 0
  1592  000067                     RADIO_RegisterRead@readValue:
  1593                           	opt stack 0
  1594  000067                     UpdateDataRange@i:
  1595                           	opt stack 0
  1596  000067                     UpdateChannelIdStatus@i:
  1597                           	opt stack 0
  1598  000067                     ValidateDataRange@dataRangeNew:
  1599                           	opt stack 0
  1600  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  1601                           	opt stack 0
  1602  000067                     FindSmallestDataRate@dataRate:
  1603                           	opt stack 0
  1604  000067                     ___abdiv@quotient:
  1605                           	opt stack 0
  1606  000067                     RxDataDone@pData:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0x7
  1610  000067                     	ds	1
  1611  000068                     ??_IncludeMacCommandsResponse:
  1612  000068                     ??_ADC_Read:
  1613  000068                     ??_SystemBlockingWaitMs:
  1614  000068                     RADIO_WritePower@ocp:
  1615                           	opt stack 0
  1616  000068                     RADIO_UnhandledInterrupt@modulation:
  1617                           	opt stack 0
  1618  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1619                           	opt stack 0
  1620  000068                     ValidateFrequency@result:
  1621                           	opt stack 0
  1622  000068                     ValidateDataRange@dataRateMax:
  1623                           	opt stack 0
  1624  000068                     UpdateFrequency@channelId:
  1625                           	opt stack 0
  1626  000068                     FillSubKey@size:
  1627                           	opt stack 0
  1628  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1629                           	opt stack 0
  1630  000068                     UpdateReceiveDelays@delay:
  1631                           	opt stack 0
  1632  000068                     ___abdiv@dividend:
  1633                           	opt stack 0
  1634  000068                     EnableChannels1@channelMask:
  1635                           	opt stack 0
  1636  000068                     TMR1_ReadTimer@readVal:
  1637                           	opt stack 0
  1638  000068                     _EncKeySchedule$4148:
  1639                           	opt stack 0
  1640  000068                     memcpy@n:
  1641                           	opt stack 0
  1642  000068                     memset@n:
  1643                           	opt stack 0
  1644  000068                     ___lmul@multiplicand:
  1645                           	opt stack 0
  1646  000068                     ___lldiv@divisor:
  1647                           	opt stack 0
  1648  000068                     ___llmod@divisor:
  1649                           	opt stack 0
  1650                           
  1651                           ; 4 bytes @ 0x8
  1652  000068                     	ds	1
  1653  000069                     ??_FillSubKey:
  1654  000069                     ??_RADIO_DIO3:
  1655  000069                     ??_RADIO_DIO4:
  1656  000069                     ??_RADIO_DIO5:
  1657  000069                     ?_ExecuteRxTimingSetup:
  1658                           	opt stack 0
  1659  000069                     RADIO_WriteMode@newModulation:
  1660                           	opt stack 0
  1661  000069                     RADIO_WritePower@paDac:
  1662                           	opt stack 0
  1663  000069                     ExecuteDutyCycle@maxDCycle:
  1664                           	opt stack 0
  1665  000069                     ValidateDataRange@dataRateMin:
  1666                           	opt stack 0
  1667  000069                     RxDataDone@dataLength:
  1668                           	opt stack 0
  1669  000069                     ExecuteRxTimingSetup@ptr:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x9
  1673  000069                     	ds	1
  1674  00006A                     RADIO_WriteMode@blocking:
  1675                           	opt stack 0
  1676  00006A                     RADIO_WritePower@power:
  1677                           	opt stack 0
  1678  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1679                           	opt stack 0
  1680  00006A                     EnableChannels1@channelMaskCntl:
  1681                           	opt stack 0
  1682  00006A                     TMR1_ReadTimer@readValHigh:
  1683                           	opt stack 0
  1684  00006A                     FillSubKey@carry:
  1685                           	opt stack 0
  1686  00006A                     CountfOptsLength@macCommandLength:
  1687                           	opt stack 0
  1688  00006A                     RxDataDone@status:
  1689                           	opt stack 0
  1690  00006A                     ADC_Read@channel:
  1691                           	opt stack 0
  1692  00006A                     AESEncode@block:
  1693                           	opt stack 0
  1694  00006A                     memcpy@d:
  1695                           	opt stack 0
  1696  00006A                     memset@p:
  1697                           	opt stack 0
  1698                           
  1699                           ; 2 bytes @ 0xA
  1700  00006A                     	ds	1
  1701  00006B                     ??_RxDataDone:
  1702  00006B                     RADIO_WriteMode@currentModulation:
  1703                           	opt stack 0
  1704  00006B                     EnableChannels1@channelIndexMin:
  1705                           	opt stack 0
  1706  00006B                     TMR1_ReadTimer@readValLow:
  1707                           	opt stack 0
  1708  00006B                     FillSubKey@i:
  1709                           	opt stack 0
  1710  00006B                     ExecuteRxTimingSetup@delay:
  1711                           	opt stack 0
  1712  00006B                     CountfOptsLength@i:
  1713                           	opt stack 0
  1714  00006B                     ADC_Read@result:
  1715                           	opt stack 0
  1716                           
  1717                           ; 2 bytes @ 0xB
  1718  00006B                     	ds	1
  1719  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1720  00006C                     ?_TMR_SwapTimer:
  1721                           	opt stack 0
  1722  00006C                     ?_TMR_GetDeltaTime:
  1723                           	opt stack 0
  1724  00006C                     RADIO_WriteMode@dioMapping:
  1725                           	opt stack 0
  1726  00006C                     EnableChannels1@channelIndexMax:
  1727                           	opt stack 0
  1728  00006C                     AESEncode@key:
  1729                           	opt stack 0
  1730  00006C                     ___llmod@counter:
  1731                           	opt stack 0
  1732  00006C                     TMR_SwapTimer@timerVal:
  1733                           	opt stack 0
  1734  00006C                     memcpy@s:
  1735                           	opt stack 0
  1736  00006C                     ___lmul@product:
  1737                           	opt stack 0
  1738  00006C                     ___lldiv@quotient:
  1739                           	opt stack 0
  1740                           
  1741                           ; 4 bytes @ 0xC
  1742  00006C                     	ds	1
  1743  00006D                     ??_AESEncode:
  1744  00006D                     RADIO_WriteMode@currentMode:
  1745                           	opt stack 0
  1746  00006D                     EnableChannels1@i:
  1747                           	opt stack 0
  1748  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1749                           	opt stack 0
  1750                           
  1751                           ; 1 bytes @ 0xD
  1752  00006D                     	ds	1
  1753  00006E                     ?_ExtractMic:
  1754                           	opt stack 0
  1755  00006E                     RADIO_WriteMode@newMode:
  1756                           	opt stack 0
  1757  00006E                     InitDefault868Channels@i:
  1758                           	opt stack 0
  1759  00006E                     InitDefault433Channels@i:
  1760                           	opt stack 0
  1761  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1762                           	opt stack 0
  1763  00006E                     IncludeMacCommandsResponse@i:
  1764                           	opt stack 0
  1765  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1766                           	opt stack 0
  1767  00006E                     EnableChannels@channelMask:
  1768                           	opt stack 0
  1769  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1770                           	opt stack 0
  1771  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1772                           	opt stack 0
  1773  00006E                     PrepareSessionKeys@sessionKey:
  1774                           	opt stack 0
  1775  00006E                     ExtractMic@buffer:
  1776                           	opt stack 0
  1777  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1778                           	opt stack 0
  1779  00006E                     AssembleEncryptionBlock@frameCounter:
  1780                           	opt stack 0
  1781                           
  1782                           ; 4 bytes @ 0xE
  1783  00006E                     	ds	1
  1784  00006F                     RADIO_WriteMode@opMode:
  1785                           	opt stack 0
  1786  00006F                     IncludeMacCommandsResponse@bufferIndex:
  1787                           	opt stack 0
  1788                           
  1789                           ; 1 bytes @ 0xF
  1790  00006F                     	ds	1
  1791  000070                     ??_TMR_GetDeltaTime:
  1792  000070                     ?_rand:
  1793                           	opt stack 0
  1794  000070                     ?_RADIO_ReadRandom:
  1795                           	opt stack 0
  1796  000070                     ?_ExecuteNewChannel:
  1797                           	opt stack 0
  1798  000070                     ?_ExecuteRxParamSetupReq:
  1799                           	opt stack 0
  1800  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1801                           	opt stack 0
  1802  000070                     EnableChannels@channelMaskCntl:
  1803                           	opt stack 0
  1804  000070                     ExtractMic@bufferLength:
  1805                           	opt stack 0
  1806  000070                     ___lldiv@counter:
  1807                           	opt stack 0
  1808  000070                     ExecuteNewChannel@ptr:
  1809                           	opt stack 0
  1810  000070                     ExecuteRxParamSetupReq@ptr:
  1811                           	opt stack 0
  1812  000070                     UpdateCfList@joinAccept:
  1813                           	opt stack 0
  1814  000070                     PrepareSessionKeys@appNonce:
  1815                           	opt stack 0
  1816                           
  1817                           ; 2 bytes @ 0x10
  1818  000070                     	ds	1
  1819  000071                     ?_ExecuteLinkAdr:
  1820                           	opt stack 0
  1821  000071                     ExecuteLinkAdr@ptr:
  1822                           	opt stack 0
  1823  000071                     SwTimerSetTimeout@timeout:
  1824                           	opt stack 0
  1825  000071                     RADIO_WriteFrequency@frequency:
  1826                           	opt stack 0
  1827  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1828                           	opt stack 0
  1829  000071                     RADIO_WriteFSKBitRate@bitRate:
  1830                           	opt stack 0
  1831  000071                     ConfigureRadio@freq:
  1832                           	opt stack 0
  1833                           
  1834                           ; 4 bytes @ 0x11
  1835  000071                     	ds	1
  1836  000072                     ??_ExtractMic:
  1837  000072                     ??_TMR_OverrideRemaining:
  1838  000072                     ??_UpdateCfList:
  1839  000072                     ?___lwmod:
  1840                           	opt stack 0
  1841  000072                     ExecuteNewChannel@drRange:
  1842                           	opt stack 0
  1843  000072                     AssembleEncryptionBlock@blockId:
  1844                           	opt stack 0
  1845  000072                     RADIO_ReadRandom@retVal:
  1846                           	opt stack 0
  1847  000072                     PrepareSessionKeys@networkId:
  1848                           	opt stack 0
  1849  000072                     ___lwmod@dividend:
  1850                           	opt stack 0
  1851  000072                     ExecuteRxParamSetupReq@frequency:
  1852                           	opt stack 0
  1853                           
  1854                           ; 4 bytes @ 0x12
  1855  000072                     	ds	1
  1856  000073                     ??_ExecuteLinkAdr:
  1857  000073                     AssembleEncryptionBlock@firstByte:
  1858                           	opt stack 0
  1859  000073                     ExecuteNewChannel@frequency:
  1860                           	opt stack 0
  1861                           
  1862                           ; 4 bytes @ 0x13
  1863  000073                     	ds	1
  1864  000074                     RADIO_ReadRandom@i:
  1865                           	opt stack 0
  1866  000074                     UpdateCfList@bufferLength:
  1867                           	opt stack 0
  1868  000074                     PrepareSessionKeys@index:
  1869                           	opt stack 0
  1870  000074                     AssembleEncryptionBlock@multicastStatus:
  1871                           	opt stack 0
  1872  000074                     TMR_OverrideRemaining@tmrVal:
  1873                           	opt stack 0
  1874  000074                     ExecuteLinkAdr@channelMask:
  1875                           	opt stack 0
  1876  000074                     ___lwmod@divisor:
  1877                           	opt stack 0
  1878  000074                     ExtractMic@mic:
  1879                           	opt stack 0
  1880                           
  1881                           ; 4 bytes @ 0x14
  1882  000074                     	ds	1
  1883  000075                     ??_SwTimerSetTimeout:
  1884  000075                     ConfigureRadio@dataRate:
  1885                           	opt stack 0
  1886  000075                     AssembleEncryptionBlock@dir:
  1887                           	opt stack 0
  1888  000075                     _AESEncode$4143:
  1889                           	opt stack 0
  1890  000075                     srand@x:
  1891                           	opt stack 0
  1892  000075                     RADIO_WriteFrequency@num_mod:
  1893                           	opt stack 0
  1894  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1895                           	opt stack 0
  1896  000075                     RADIO_WriteFSKBitRate@num:
  1897                           	opt stack 0
  1898  000075                     UpdateCfList@frequency:
  1899                           	opt stack 0
  1900                           
  1901                           ; 4 bytes @ 0x15
  1902  000075                     	ds	1
  1903  000076                     ExecuteLinkAdr@txPower:
  1904                           	opt stack 0
  1905  000076                     ExecuteRxParamSetupReq@dlSettings:
  1906                           	opt stack 0
  1907  000076                     AssembleEncryptionBlock@bufferIndex:
  1908                           	opt stack 0
  1909  000076                     ___lwmod@counter:
  1910                           	opt stack 0
  1911  000076                     TMR_OverrideRemaining@oldReloadVal:
  1912                           	opt stack 0
  1913  000076                     ConfigureRadioTx@freq:
  1914                           	opt stack 0
  1915  000076                     ConfigureRadioRx@freq:
  1916                           	opt stack 0
  1917                           
  1918                           ; 4 bytes @ 0x16
  1919  000076                     	ds	1
  1920  000077                     ?_Random:
  1921                           	opt stack 0
  1922  000077                     ExecuteNewChannel@channelIndex:
  1923                           	opt stack 0
  1924  000077                     ExecuteLinkAdr@redundancy:
  1925                           	opt stack 0
  1926  000077                     Random@max:
  1927                           	opt stack 0
  1928  000077                     _AESEncode$4144:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x17
  1932  000077                     	ds	2
  1933  000079                     SwTimerSetTimeout@timerId:
  1934                           	opt stack 0
  1935  000079                     ExecuteLinkAdr@dataRate:
  1936                           	opt stack 0
  1937  000079                     SearchAvailableChannel@transmissionType:
  1938                           	opt stack 0
  1939  000079                     UpdateCfList@channelIndex:
  1940                           	opt stack 0
  1941  000079                     _AESEncode$4145:
  1942                           	opt stack 0
  1943  000079                     RADIO_WriteFrequency@num:
  1944                           	opt stack 0
  1945                           
  1946                           ; 4 bytes @ 0x19
  1947  000079                     	ds	1
  1948  00007A                     ?_MacExecuteCommands:
  1949                           	opt stack 0
  1950  00007A                     UpdateCfList@i:
  1951                           	opt stack 0
  1952  00007A                     ConfigureRadioTx@dataRate:
  1953                           	opt stack 0
  1954  00007A                     ConfigureRadioRx@dataRate:
  1955                           	opt stack 0
  1956  00007A                     SearchAvailableChannel@channelIndex:
  1957                           	opt stack 0
  1958  00007A                     MacExecuteCommands@buffer:
  1959                           	opt stack 0
  1960                           
  1961                           ; 2 bytes @ 0x1A
  1962  00007A                     	ds	1
  1963  00007B                     ConfigureRadioTx@txPower:
  1964                           	opt stack 0
  1965  00007B                     AESEncode@aux:
  1966                           	opt stack 0
  1967                           
  1968                           ; 1 bytes @ 0x1B
  1969  00007B                     	ds	1
  1970  00007C                     ??_SearchAvailableChannel:
  1971  00007C                     ?_SwTimersInterrupt:
  1972                           	opt stack 0
  1973  00007C                     MacExecuteCommands@fOptsLen:
  1974                           	opt stack 0
  1975  00007C                     AESEncode@aux2:
  1976                           	opt stack 0
  1977                           
  1978                           ; 1 bytes @ 0x1C
  1979  00007C                     	ds	1
  1980  00007D                     ??_MacExecuteCommands:
  1981  00007D                     ??_RADIO_DIO2:
  1982  00007D                     AESEncode@aux1:
  1983                           	opt stack 0
  1984  00007D                     RADIO_Init@radioBuffer:
  1985                           	opt stack 0
  1986  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  1987                           	opt stack 0
  1988                           
  1989                           ; 2 bytes @ 0x1D
  1990  00007D                     	ds	1
  1991  00007E                     RADIO_DIO2@dioMapping:
  1992                           	opt stack 0
  1993  00007E                     AESEncode@aux3:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0x1E
  1997  00007E                     	ds	1
  1998  00007F                     ??_RADIO_WriteConfiguration:
  1999  00007F                     MacExecuteCommands@done:
  2000                           	opt stack 0
  2001  00007F                     AESEncode@i:
  2002                           	opt stack 0
  2003  00007F                     RADIO_Init@frequency:
  2004                           	opt stack 0
  2005                           
  2006                           ; 4 bytes @ 0x1F
  2007  00007F                     	ds	1
  2008  000080                     SearchAvailableChannel@randomNumberCopy:
  2009                           	opt stack 0
  2010  000080                     MacExecuteCommands@ptr:
  2011                           	opt stack 0
  2012  000080                     AESEncodeLoRa@block:
  2013                           	opt stack 0
  2014                           
  2015                           ; 2 bytes @ 0x20
  2016  000080                     	ds	1
  2017  000081                     RADIO_WriteConfiguration@i:
  2018                           	opt stack 0
  2019  000081                     SearchAvailableChannel@result:
  2020                           	opt stack 0
  2021                           
  2022                           ; 1 bytes @ 0x21
  2023  000081                     	ds	1
  2024  000082                     SearchAvailableChannel@maxChannels:
  2025                           	opt stack 0
  2026  000082                     AESEncodeLoRa@key:
  2027                           	opt stack 0
  2028  000082                     RADIO_WriteConfiguration@tempValue:
  2029                           	opt stack 0
  2030                           
  2031                           ; 4 bytes @ 0x22
  2032  000082                     	ds	1
  2033  000083                     ??_RADIO_Init:
  2034  000083                     SearchAvailableChannel@randomNumber:
  2035                           	opt stack 0
  2036                           
  2037                           ; 1 bytes @ 0x23
  2038  000083                     	ds	1
  2039  000084                     SearchAvailableChannel@i:
  2040                           	opt stack 0
  2041  000084                     SwTimersInterrupt@timeElapsed:
  2042                           	opt stack 0
  2043  000084                     AESEncodeLoRa@useKey:
  2044                           	opt stack 0
  2045                           
  2046                           ; 16 bytes @ 0x24
  2047  000084                     	ds	1
  2048  000085                     SelectChannelForTransmission@transmissionType:
  2049                           	opt stack 0
  2050                           
  2051                           ; 1 bytes @ 0x25
  2052  000085                     	ds	1
  2053  000086                     RADIO_WriteConfiguration@regValue:
  2054                           	opt stack 0
  2055  000086                     SelectChannelForTransmission@result:
  2056                           	opt stack 0
  2057                           
  2058                           ; 1 bytes @ 0x26
  2059  000086                     	ds	1
  2060  000087                     SelectChannelForTransmission@channelIndex:
  2061                           	opt stack 0
  2062                           
  2063                           ; 1 bytes @ 0x27
  2064  000087                     	ds	1
  2065  000088                     SwTimersInterrupt@ticksToNextTimerEvent:
  2066                           	opt stack 0
  2067                           
  2068                           ; 4 bytes @ 0x28
  2069  000088                     	ds	4
  2070  00008C                     SwTimersInterrupt@i:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x2C
  2074  00008C                     	ds	1
  2075  00008D                     ?_SwTimerReadValue:
  2076                           	opt stack 0
  2077                           
  2078                           ; 4 bytes @ 0x2D
  2079  00008D                     	ds	4
  2080  000091                     SwTimerReadValue@ticksCount:
  2081                           	opt stack 0
  2082  000091                     SwTimerStart@ticksRemaining:
  2083                           	opt stack 0
  2084                           
  2085                           ; 4 bytes @ 0x31
  2086  000091                     	ds	3
  2087  000094                     GenerateSubkey@key:
  2088                           	opt stack 0
  2089  000094                     ComputeSessionKeys@joinAcceptBuffer:
  2090                           	opt stack 0
  2091  000094                     EncryptFRMPayload@buffer:
  2092                           	opt stack 0
  2093                           
  2094                           ; 2 bytes @ 0x34
  2095  000094                     	ds	1
  2096  000095                     SwTimerReadValue@timerId:
  2097                           	opt stack 0
  2098  000095                     SwTimerStart@timerId:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x35
  2102  000095                     	ds	1
  2103  000096                     ??_UpdateRetransmissionAckTimeoutState:
  2104  000096                     ??_StartReTxTimer:
  2105  000096                     ?_RADIO_Transmit:
  2106                           	opt stack 0
  2107  000096                     ?_RADIO_ReceiveStart:
  2108                           	opt stack 0
  2109  000096                     EncryptFRMPayload@bufferLength:
  2110                           	opt stack 0
  2111  000096                     RADIO_Transmit@buffer:
  2112                           	opt stack 0
  2113  000096                     RADIO_ReceiveStart@rxWindowSize:
  2114                           	opt stack 0
  2115  000096                     GenerateSubkey@k1:
  2116                           	opt stack 0
  2117  000096                     LORAWAN_LinkCheckConfigure@period:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x36
  2121  000096                     	ds	1
  2122  000097                     EncryptFRMPayload@dir:
  2123                           	opt stack 0
  2124                           
  2125                           ; 1 bytes @ 0x37
  2126  000097                     	ds	1
  2127  000098                     ??_LORAWAN_LinkCheckConfigure:
  2128  000098                     ??_RADIO_ReceiveStart:
  2129  000098                     RADIO_Transmit@bufferLen:
  2130                           	opt stack 0
  2131  000098                     GenerateSubkey@k2:
  2132                           	opt stack 0
  2133  000098                     EncryptFRMPayload@frameCounter:
  2134                           	opt stack 0
  2135                           
  2136                           ; 4 bytes @ 0x38
  2137  000098                     	ds	1
  2138  000099                     ??_RADIO_Transmit:
  2139                           
  2140                           ; 1 bytes @ 0x39
  2141  000099                     	ds	1
  2142  00009A                     ??_GenerateSubkey:
  2143  00009A                     StartReTxTimer@minim:
  2144                           	opt stack 0
  2145                           
  2146                           ; 4 bytes @ 0x3A
  2147  00009A                     	ds	1
  2148  00009B                     GenerateSubkey@const_Rb:
  2149                           	opt stack 0
  2150                           
  2151                           ; 16 bytes @ 0x3B
  2152  00009B                     	ds	1
  2153  00009C                     EncryptFRMPayload@key:
  2154                           	opt stack 0
  2155  00009C                     _RADIO_ReceiveStart$1199:
  2156                           	opt stack 0
  2157                           
  2158                           ; 4 bytes @ 0x3C
  2159  00009C                     	ds	2
  2160  00009E                     StartReTxTimer@i:
  2161                           	opt stack 0
  2162  00009E                     EncryptFRMPayload@macBufferIndex:
  2163                           	opt stack 0
  2164                           
  2165                           ; 1 bytes @ 0x3E
  2166  00009E                     	ds	1
  2167  00009F                     EncryptFRMPayload@bufferToBeEncrypted:
  2168                           	opt stack 0
  2169                           
  2170                           ; 2 bytes @ 0x3F
  2171  00009F                     	ds	1
  2172  0000A0                     LORAWAN_TxDone@timeOnAir:
  2173                           	opt stack 0
  2174  0000A0                     _LORAWAN_LinkCheckConfigure$3502:
  2175                           	opt stack 0
  2176                           
  2177                           ; 4 bytes @ 0x40
  2178  0000A0                     	ds	1
  2179  0000A1                     EncryptFRMPayload@multicastStatus:
  2180                           	opt stack 0
  2181  0000A1                     _RADIO_Transmit$1196:
  2182                           	opt stack 0
  2183                           
  2184                           ; 4 bytes @ 0x41
  2185  0000A1                     	ds	1
  2186  0000A2                     ??_LORAWAN_TxDone:
  2187  0000A2                     ??_EncryptFRMPayload:
  2188                           
  2189                           ; 1 bytes @ 0x42
  2190  0000A2                     	ds	2
  2191  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  2192                           	opt stack 0
  2193                           
  2194                           ; 1 bytes @ 0x44
  2195  0000A4                     	ds	1
  2196  0000A5                     RADIO_Transmit@regValue:
  2197                           	opt stack 0
  2198  0000A5                     LORAWAN_Reset@ismBandNew:
  2199                           	opt stack 0
  2200                           
  2201                           ; 1 bytes @ 0x45
  2202  0000A5                     	ds	1
  2203  0000A6                     RADIO_Transmit@i:
  2204                           	opt stack 0
  2205  0000A6                     LORAWAN_Init@RxPayload:
  2206                           	opt stack 0
  2207                           
  2208                           ; 2 bytes @ 0x46
  2209  0000A6                     	ds	1
  2210  0000A7                     ??_LORAWAN_RxTimeout:
  2211  0000A7                     EncryptFRMPayload@k:
  2212                           	opt stack 0
  2213                           
  2214                           ; 1 bytes @ 0x47
  2215  0000A7                     	ds	1
  2216  0000A8                     EncryptFRMPayload@i:
  2217                           	opt stack 0
  2218  0000A8                     LORAWAN_Init@RxJoinResponse:
  2219                           	opt stack 0
  2220                           
  2221                           ; 2 bytes @ 0x48
  2222  0000A8                     	ds	1
  2223  0000A9                     EncryptFRMPayload@j:
  2224                           	opt stack 0
  2225                           
  2226                           ; 1 bytes @ 0x49
  2227  0000A9                     	ds	1
  2228  0000AA                     
  2229                           ; 1 bytes @ 0x4A
  2230  0000AA                     	ds	1
  2231  0000AB                     LORAWAN_RxTimeout@minim:
  2232                           	opt stack 0
  2233  0000AB                     GenerateSubkey@l:
  2234                           	opt stack 0
  2235                           
  2236                           ; 16 bytes @ 0x4B
  2237  0000AB                     	ds	4
  2238  0000AF                     LORAWAN_RxTimeout@i:
  2239                           	opt stack 0
  2240                           
  2241                           ; 1 bytes @ 0x4F
  2242  0000AF                     	ds	1
  2243  0000B0                     ??_RADIO_DIO1:
  2244                           
  2245                           ; 1 bytes @ 0x50
  2246  0000B0                     	ds	1
  2247  0000B1                     RADIO_DIO1@dioMapping:
  2248                           	opt stack 0
  2249                           
  2250                           ; 1 bytes @ 0x51
  2251  0000B1                     	ds	10
  2252  0000BB                     GenerateSubkey@i:
  2253                           	opt stack 0
  2254                           
  2255                           ; 1 bytes @ 0x5B
  2256  0000BB                     	ds	1
  2257  0000BC                     AESCmac@key:
  2258                           	opt stack 0
  2259  0000BC                     _LORAWAN_TxDone$2092:
  2260                           	opt stack 0
  2261                           
  2262                           ; 4 bytes @ 0x5C
  2263  0000BC                     	ds	2
  2264  0000BE                     AESCmac@output:
  2265                           	opt stack 0
  2266                           
  2267                           ; 2 bytes @ 0x5E
  2268  0000BE                     	ds	2
  2269  0000C0                     AESCmac@input:
  2270                           	opt stack 0
  2271  0000C0                     _LORAWAN_TxDone$2093:
  2272                           	opt stack 0
  2273                           
  2274                           ; 4 bytes @ 0x60
  2275  0000C0                     	ds	2
  2276  0000C2                     AESCmac@size:
  2277                           	opt stack 0
  2278                           
  2279                           ; 1 bytes @ 0x62
  2280  0000C2                     	ds	1
  2281  0000C3                     ??_AESCmac:
  2282                           
  2283                           ; 1 bytes @ 0x63
  2284  0000C3                     	ds	1
  2285  0000C4                     LORAWAN_TxDone@found:
  2286                           	opt stack 0
  2287                           
  2288                           ; 1 bytes @ 0x64
  2289  0000C4                     	ds	1
  2290  0000C5                     LORAWAN_TxDone@delta:
  2291                           	opt stack 0
  2292                           
  2293                           ; 4 bytes @ 0x65
  2294  0000C5                     	ds	4
  2295  0000C9                     LORAWAN_TxDone@ticks:
  2296                           	opt stack 0
  2297                           
  2298                           ; 4 bytes @ 0x69
  2299  0000C9                     	ds	1
  2300  0000CA                     ?_ComputeMic:
  2301                           	opt stack 0
  2302  0000CA                     AssemblePacket@port:
  2303                           	opt stack 0
  2304  0000CA                     ComputeMic@key:
  2305                           	opt stack 0
  2306                           
  2307                           ; 2 bytes @ 0x6A
  2308  0000CA                     	ds	1
  2309  0000CB                     AssemblePacket@buffer:
  2310                           	opt stack 0
  2311                           
  2312                           ; 2 bytes @ 0x6B
  2313  0000CB                     	ds	1
  2314  0000CC                     ComputeMic@buffer:
  2315                           	opt stack 0
  2316                           
  2317                           ; 2 bytes @ 0x6C
  2318  0000CC                     	ds	1
  2319  0000CD                     AssemblePacket@bufferLength:
  2320                           	opt stack 0
  2321  0000CD                     LORAWAN_TxDone@minim:
  2322                           	opt stack 0
  2323                           
  2324                           ; 4 bytes @ 0x6D
  2325  0000CD                     	ds	1
  2326  0000CE                     ComputeMic@bufferLength:
  2327                           	opt stack 0
  2328                           
  2329                           ; 1 bytes @ 0x6E
  2330  0000CE                     	ds	1
  2331  0000CF                     ??_AssemblePacket:
  2332  0000CF                     ComputeMic@mic:
  2333                           	opt stack 0
  2334                           
  2335                           ; 4 bytes @ 0x6F
  2336  0000CF                     	ds	2
  2337  0000D1                     LORAWAN_TxDone@i:
  2338                           	opt stack 0
  2339  0000D1                     AssemblePacket@confirmed:
  2340                           	opt stack 0
  2341                           
  2342                           ; 1 bytes @ 0x71
  2343  0000D1                     	ds	1
  2344  0000D2                     ??_RADIO_TxDone:
  2345  0000D2                     ??_RADIO_FSKPacketSent:
  2346  0000D2                     AssemblePacket@mhdr:
  2347                           	opt stack 0
  2348                           
  2349                           ; 1 bytes @ 0x72
  2350  0000D2                     	ds	1
  2351  0000D3                     ??_PrepareJoinRequestFrame:
  2352  0000D3                     AssemblePacket@fCtrl:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x73
  2356  0000D3                     	ds	1
  2357  0000D4                     AssemblePacket@macCmdIdx:
  2358                           	opt stack 0
  2359                           
  2360                           ; 1 bytes @ 0x74
  2361  0000D4                     	ds	1
  2362  0000D5                     AssemblePacket@bufferIndex:
  2363                           	opt stack 0
  2364  0000D5                     PrepareJoinRequestFrame@mic:
  2365                           	opt stack 0
  2366                           
  2367                           ; 4 bytes @ 0x75
  2368  0000D5                     	ds	1
  2369  0000D6                     LORAWAN_Send@port:
  2370                           	opt stack 0
  2371  0000D6                     RADIO_TxDone@timeOnAir:
  2372                           	opt stack 0
  2373  0000D6                     RADIO_FSKPacketSent@timeOnAir:
  2374                           	opt stack 0
  2375                           
  2376                           ; 4 bytes @ 0x76
  2377  0000D6                     	ds	1
  2378  0000D7                     LORAWAN_Send@buffer:
  2379                           	opt stack 0
  2380                           
  2381                           ; 2 bytes @ 0x77
  2382  0000D7                     	ds	2
  2383  0000D9                     LORAWAN_Send@bufferLength:
  2384                           	opt stack 0
  2385  0000D9                     PrepareJoinRequestFrame@mhdr:
  2386                           	opt stack 0
  2387                           
  2388                           ; 1 bytes @ 0x79
  2389  0000D9                     	ds	1
  2390  0000DA                     ??_LORAWAN_Send:
  2391  0000DA                     PrepareJoinRequestFrame@bufferIndex:
  2392                           	opt stack 0
  2393  0000DA                     _RADIO_TxDone$1211:
  2394                           	opt stack 0
  2395  0000DA                     _RADIO_FSKPacketSent$1215:
  2396                           	opt stack 0
  2397                           
  2398                           ; 4 bytes @ 0x7A
  2399  0000DA                     	ds	1
  2400  0000DB                     LORAWAN_Send@result:
  2401                           	opt stack 0
  2402  0000DB                     PrepareJoinRequestFrame@iCtr:
  2403                           	opt stack 0
  2404                           
  2405                           ; 1 bytes @ 0x7B
  2406  0000DB                     	ds	1
  2407  0000DC                     LORAWAN_Join@bufferIndex:
  2408                           	opt stack 0
  2409  0000DC                     LORAWAN_Send@confirmed:
  2410                           	opt stack 0
  2411                           
  2412                           ; 1 bytes @ 0x7C
  2413  0000DC                     	ds	1
  2414  0000DD                     ??_LORAWAN_RxDone:
  2415  0000DD                     ??_readAndSend:
  2416  0000DD                     ??_SwTimersExecute:
  2417  0000DD                     LORAWAN_Join@result:
  2418                           	opt stack 0
  2419                           
  2420                           ; 1 bytes @ 0x7D
  2421  0000DD                     	ds	1
  2422  0000DE                     RADIO_FSKPacketSent@irqFlags:
  2423                           	opt stack 0
  2424  0000DE                     LORAWAN_Join@activationTypeNew:
  2425                           	opt stack 0
  2426  0000DE                     readAndSend@j:
  2427                           	opt stack 0
  2428                           
  2429                           ; 2 bytes @ 0x7E
  2430  0000DE                     	ds	3
  2431  0000E1                     SwTimersExecute@i:
  2432                           	opt stack 0
  2433                           
  2434                           ; 1 bytes @ 0x81
  2435  0000E1                     	ds	1
  2436  0000E2                     RADIO_RxDone@irqFlags:
  2437                           	opt stack 0
  2438  0000E2                     RADIO_FSKPayloadReady@irqFlags:
  2439                           	opt stack 0
  2440                           
  2441                           ; 1 bytes @ 0x82
  2442  0000E2                     	ds	1
  2443  0000E3                     RADIO_RxDone@i:
  2444                           	opt stack 0
  2445  0000E3                     RADIO_FSKPayloadReady@i:
  2446                           	opt stack 0
  2447                           
  2448                           ; 1 bytes @ 0x83
  2449  0000E3                     	ds	1
  2450  0000E4                     ??_RADIO_DIO0:
  2451                           
  2452                           ; 1 bytes @ 0x84
  2453  0000E4                     	ds	2
  2454  0000E6                     RADIO_DIO0@dioMapping:
  2455                           	opt stack 0
  2456                           
  2457                           ; 1 bytes @ 0x86
  2458  0000E6                     	ds	1
  2459  0000E7                     RADIO_DIO0@opMode:
  2460                           	opt stack 0
  2461                           
  2462                           ; 1 bytes @ 0x87
  2463  0000E7                     	ds	1
  2464  0000E8                     tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           postinc0	equ	0xFEE
  2469                           wreg	equ	0xFE8
  2470                           postdec2	equ	0xFDD
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           
  2474                           ; 1 bytes @ 0x88
  2475                           
  2476                           	psect	cstackCOMRAM
  2477  000001                     __pcstackCOMRAM:
  2478                           	opt stack 0
  2479  000001                     ?i2_TMR1_ReadTimer:
  2480                           	opt stack 0
  2481  000001                     i2TMR1_WriteTimer@timerVal:
  2482                           	opt stack 0
  2483                           
  2484                           ; 2 bytes @ 0x0
  2485  000001                     	ds	2
  2486  000003                     ??i2_TMR1_ReadTimer:
  2487  000003                     
  2488                           ; 1 bytes @ 0x2
  2489  000003                     	ds	2
  2490  000005                     i2TMR1_ReadTimer@readVal:
  2491                           	opt stack 0
  2492                           
  2493                           ; 2 bytes @ 0x4
  2494  000005                     	ds	2
  2495  000007                     i2TMR1_ReadTimer@readValHigh:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0x6
  2499  000007                     	ds	1
  2500  000008                     i2TMR1_ReadTimer@readValLow:
  2501                           	opt stack 0
  2502                           
  2503                           ; 1 bytes @ 0x7
  2504  000008                     	ds	1
  2505  000009                     ?i2_TMR_SwapTimer:
  2506                           	opt stack 0
  2507  000009                     ?i2_TMR_GetDeltaTime:
  2508                           	opt stack 0
  2509  000009                     i2TMR_SwapTimer@timerVal:
  2510                           	opt stack 0
  2511                           
  2512                           ; 2 bytes @ 0x8
  2513  000009                     	ds	2
  2514  00000B                     
  2515                           ; 1 bytes @ 0xA
  2516  00000B                     	ds	2
  2517  00000D                     ??i2_TMR_GetDeltaTime:
  2518                           
  2519                           ; 1 bytes @ 0xC
  2520  00000D                     	ds	12
  2521  000019                     ?i2_SwTimersInterrupt:
  2522                           	opt stack 0
  2523                           
  2524                           ; 4 bytes @ 0x18
  2525  000019                     	ds	4
  2526  00001D                     
  2527                           ; 1 bytes @ 0x1C
  2528  00001D                     	ds	4
  2529  000021                     i2SwTimersInterrupt@timeElapsed:
  2530                           	opt stack 0
  2531                           
  2532                           ; 4 bytes @ 0x20
  2533  000021                     	ds	4
  2534  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x24
  2538  000025                     	ds	4
  2539  000029                     i2SwTimersInterrupt@i:
  2540                           	opt stack 0
  2541                           
  2542                           ; 1 bytes @ 0x28
  2543  000029                     	ds	1
  2544  00002A                     ??_INTERRUPT_InterruptManager:
  2545                           
  2546                           ; 1 bytes @ 0x29
  2547  00002A                     	ds	8
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           postdec2	equ	0xFDD
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           
  2558 ;;
  2559 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2560 ;;
  2561 ;; *************** function _main *****************
  2562 ;; Defined at:
  2563 ;;		line 48 in file "main.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels required when called:   19
  2583 ;; This function calls:
  2584 ;;		_ADC_Init
  2585 ;;		_IO_pins_init
  2586 ;;		_LORAWAN_GetState
  2587 ;;		_LORAWAN_Init
  2588 ;;		_LORAWAN_Join
  2589 ;;		_LORAWAN_Mainloop
  2590 ;;		_LORAWAN_SetApplicationSessionKey
  2591 ;;		_LORAWAN_SetDeviceAddress
  2592 ;;		_LORAWAN_SetNetworkSessionKey
  2593 ;;		_LoRaSleep
  2594 ;;		_LoRaWakeUp
  2595 ;;		_SYSTEM_Initialize
  2596 ;;		_SysConfigSleep
  2597 ;;		_TMR3_SetInterruptHandler
  2598 ;;		_readAndSend
  2599 ;; This function is called by:
  2600 ;;		Startup code after reset
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text0
  2605  005AFA                     __ptext0:
  2606                           	opt stack 0
  2607  005AFA                     _main:
  2608                           	opt stack 12
  2609                           
  2610                           ;main.c: 50: SYSTEM_Initialize();
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;incstack = 0
  2614  005AFA  EC18  F03A         	call	_SYSTEM_Initialize	;wreg free
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 51: PORTCbits.RC5 = 1;
  2618  005AFE  8A82               	bsf	3970,5,c	;volatile
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;main.c: 54: (INTCONbits.GIE = 1);
  2622  005B00  8EF2               	bsf	intcon,7,c	;volatile
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;main.c: 55: (INTCONbits.PEIE = 1);
  2626  005B02  8CF2               	bsf	intcon,6,c	;volatile
  2627                           
  2628                           ;main.c: 56: TMR3_SetInterruptHandler(handle16sInterrupt);
  2629  005B04  0E70               	movlw	low _handle16sInterrupt
  2630  005B06  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  2631  005B08  0E77               	movlw	high _handle16sInterrupt
  2632  005B0A  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2633  005B0C  EC31  F03C         	call	_TMR3_SetInterruptHandler	;wreg free
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;main.c: 57: SysConfigSleep();
  2637  005B10  ECC7  F030         	call	_SysConfigSleep	;wreg free
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;main.c: 58: ADC_Init();
  2641  005B14  ECF8  F03B         	call	_ADC_Init	;wreg free
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;main.c: 59: IO_pins_init();
  2645  005B18  ECCB  F03B         	call	_IO_pins_init	;wreg free
  2646                           
  2647                           ; BSR set to: 15
  2648                           ;main.c: 61: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2649  005B1C  0E1C               	movlw	low _RxDataDone
  2650  005B1E  0100               	movlb	0	; () banked
  2651  005B20  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2652  005B22  0E61               	movlw	high _RxDataDone
  2653  005B24  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2654  005B26  0E70               	movlw	low _RxJoinResponse
  2655  005B28  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2656  005B2A  0E79               	movlw	high _RxJoinResponse
  2657  005B2C  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2658  005B2E  ECBB  F033         	call	_LORAWAN_Init	;wreg free
  2659                           
  2660                           ;main.c: 62: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2661  005B32  0ED4               	movlw	low _nwkSKey
  2662  005B34  0100               	movlb	0	; () banked
  2663  005B36  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2664  005B38  0E01               	movlw	high _nwkSKey
  2665  005B3A  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2666  005B3C  ECF8  F038         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2667                           
  2668                           ;main.c: 63: LORAWAN_SetApplicationSessionKey(appSKey);
  2669  005B40  0EC4               	movlw	low _appSKey
  2670  005B42  0100               	movlb	0	; () banked
  2671  005B44  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2672  005B46  0E01               	movlw	high _appSKey
  2673  005B48  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2674  005B4A  EC0D  F039         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2675                           
  2676                           ;main.c: 64: LORAWAN_SetDeviceAddress(devAddr);
  2677  005B4E  0E78               	movlw	120
  2678  005B50  0100               	movlb	0	; () banked
  2679  005B52  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  2680  005B54  0E56               	movlw	86
  2681  005B56  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  2682  005B58  0E34               	movlw	52
  2683  005B5A  6F66               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  2684  005B5C  0E12               	movlw	18
  2685  005B5E  6F67               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  2686  005B60  EC48  F03B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2687                           
  2688                           ; BSR set to: 2
  2689                           ;main.c: 65: LORAWAN_Join(ABP);
  2690  005B64  0E01               	movlw	1
  2691  005B66  EC12  F02E         	call	_LORAWAN_Join
  2692                           
  2693                           ;main.c: 68: TimeToSend = 1;
  2694  005B6A  0E01               	movlw	1
  2695  005B6C  0101               	movlb	1	; () banked
  2696  005B6E  6F69               	movwf	_TimeToSend& (0+255),b
  2697  005B70                     l16184:
  2698                           
  2699                           ;main.c: 71: {
  2700                           ;main.c: 72: LORAWAN_Mainloop();
  2701  005B70  EC42  F037         	call	_LORAWAN_Mainloop	;wreg free
  2702                           
  2703                           ;main.c: 74: if(TimeToSend){
  2704  005B74  0101               	movlb	1	; () banked
  2705  005B76  5169               	movf	_TimeToSend& (0+255),w,b
  2706  005B78  E006               	bz	l16194
  2707                           
  2708                           ; BSR set to: 1
  2709                           ;main.c: 75: LoRaWakeUp();
  2710  005B7A  EC72  F03C         	call	_LoRaWakeUp	;wreg free
  2711                           
  2712                           ;main.c: 76: readAndSend();
  2713  005B7E  EC2C  F033         	call	_readAndSend	;wreg free
  2714                           
  2715                           ;main.c: 77: TimeToSend = 0;
  2716  005B82  0101               	movlb	1	; () banked
  2717  005B84  6B69               	clrf	_TimeToSend& (0+255),b
  2718  005B86                     l16194:
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;main.c: 79: }
  2722                           ;main.c: 81: if(LORAWAN_GetState() == IDLE){
  2723  005B86  EC8E  F03C         	call	_LORAWAN_GetState	;wreg free
  2724  005B8A  0900               	iorlw	0
  2725  005B8C  E1F1               	bnz	l16184
  2726                           
  2727                           ; BSR set to: 2
  2728                           ;main.c: 82: LoRaSleep();
  2729  005B8E  EC38  F03A         	call	_LoRaSleep	;wreg free
  2730  005B92  0003               	sleep		;# 
  2731  005B94  D7ED               	goto	l16184
  2732  005B96                     __end_of_main:
  2733                           	opt stack 0
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           intcon	equ	0xFF2
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec2	equ	0xFDD
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           
  2745 ;; *************** function _readAndSend *****************
  2746 ;; Defined at:
  2747 ;;		line 122 in file "main.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  j               2  126[BANK0 ] int 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/1
  2758 ;;		On exit  : D/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;Total ram usage:        3 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:   14
  2768 ;; This function calls:
  2769 ;;		_ADC_Read
  2770 ;;		_LORAWAN_Send
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text1
  2777  006658                     __ptext1:
  2778                           	opt stack 0
  2779  006658                     _readAndSend:
  2780                           	opt stack 16
  2781                           
  2782                           ;main.c: 123: for(int j = 1; j<100; j++) _delay((unsigned long)((1)*(16000000/4000.0)));
  2783                           
  2784                           ;incstack = 0
  2785  006658  0E00               	movlw	0
  2786  00665A  0100               	movlb	0	; () banked
  2787  00665C  6FDF               	movwf	(readAndSend@j+1)& (0+255),b
  2788  00665E  0E01               	movlw	1
  2789  006660  6FDE               	movwf	readAndSend@j& (0+255),b
  2790  006662                     l15662:
  2791                           
  2792                           ; BSR set to: 0
  2793  006662  0E06               	movlw	6
  2794  006664  6FDD               	movwf	??_readAndSend& (0+255),b
  2795  006666  0E30               	movlw	48
  2796  006668                     u19697:
  2797  006668  2EE8               	decfsz	wreg,f,c
  2798  00666A  D7FE               	goto	u19697
  2799  00666C  2FDD               	decfsz	??_readAndSend& (0+255),f,b
  2800  00666E  D7FC               	goto	u19697
  2801  006670  D000               	nop2	
  2802  006672  0100               	movlb	0	; () banked
  2803  006674  4BDE               	infsnz	readAndSend@j& (0+255),f,b
  2804  006676  2BDF               	incf	(readAndSend@j+1)& (0+255),f,b
  2805  006678  BFDF               	btfsc	(readAndSend@j+1)& (0+255),7,b
  2806  00667A  D7F3               	goto	l15662
  2807  00667C  51DF               	movf	(readAndSend@j+1)& (0+255),w,b
  2808  00667E  E103               	bnz	u18460
  2809  006680  0E64               	movlw	100
  2810  006682  5DDE               	subwf	readAndSend@j& (0+255),w,b
  2811  006684  E3EE               	bnc	l15662
  2812  006686                     u18460:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;main.c: 124: payload[0] = ADC_Read(27);
  2816  006686  0E1B               	movlw	27
  2817  006688  ECD1  F037         	call	_ADC_Read
  2818  00668C  C066  F1B0         	movff	?_ADC_Read,_payload
  2819  006690  C067  F1B1         	movff	?_ADC_Read+1,_payload+1
  2820                           
  2821                           ;main.c: 125: payload[1] = ADC_Read(26);
  2822  006694  0E1A               	movlw	26
  2823  006696  ECD1  F037         	call	_ADC_Read
  2824  00669A  C066  F1B2         	movff	?_ADC_Read,_payload+2
  2825  00669E  C067  F1B3         	movff	?_ADC_Read+1,_payload+3
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;main.c: 126: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  2829  0066A2  0E02               	movlw	2
  2830  0066A4  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  2831  0066A6  0EB0               	movlw	low _payload
  2832  0066A8  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  2833  0066AA  0E01               	movlw	high _payload
  2834  0066AC  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2835  0066AE  0E04               	movlw	4
  2836  0066B0  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2837  0066B2  0E00               	movlw	0
  2838  0066B4  EF0D  F02A         	goto	_LORAWAN_Send
  2839  0066B8                     __end_of_readAndSend:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           intcon	equ	0xFF2
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec2	equ	0xFDD
  2849                           fsr2h	equ	0xFDA
  2850                           fsr2l	equ	0xFD9
  2851                           
  2852 ;; *************** function _ADC_Read *****************
  2853 ;; Defined at:
  2854 ;;		line 147 in file "main.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  channel         1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  channel         1   10[BANK0 ] unsigned char 
  2859 ;;  result          2   11[BANK0 ] unsigned int 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    6[BANK0 ] unsigned int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : F/0
  2866 ;;		On exit  : F/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;Total ram usage:        7 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    8
  2876 ;; This function calls:
  2877 ;;		_ADC_SelChannel
  2878 ;; This function is called by:
  2879 ;;		_readAndSend
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text2
  2884  006FA2                     __ptext2:
  2885                           	opt stack 0
  2886  006FA2                     _ADC_Read:
  2887                           	opt stack 21
  2888                           
  2889                           ;incstack = 0
  2890                           ;ADC_Read@channel stored from wreg
  2891  006FA2  6F6A               	movwf	ADC_Read@channel& (0+255),b
  2892                           
  2893                           ;main.c: 149: ADCON0bits.ADON = 1;
  2894  006FA4  80C2               	bsf	4034,0,c	;volatile
  2895                           
  2896                           ;main.c: 150: ADC_SelChannel(channel);
  2897  006FA6  0100               	movlb	0	; () banked
  2898  006FA8  516A               	movf	ADC_Read@channel& (0+255),w,b
  2899  006FAA  EC3C  F03B         	call	_ADC_SelChannel
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;main.c: 151: ADCON0bits.GO = 1;
  2903  006FAE  82C2               	bsf	4034,1,c	;volatile
  2904  006FB0                     l2749:
  2905  006FB0  B2C2               	btfsc	4034,1,c	;volatile
  2906  006FB2  D7FE               	goto	l2749
  2907                           
  2908                           ;main.c: 153: result = (ADRESH<<8) | ADRESL;
  2909  006FB4  50C3               	movf	4035,w,c	;volatile
  2910  006FB6  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  2911  006FBA  0100               	movlb	0	; () banked
  2912  006FBC  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  2913  006FBE  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  2914  006FC2  6B68               	clrf	??_ADC_Read& (0+255),b
  2915  006FC4  1168               	iorwf	??_ADC_Read& (0+255),w,b
  2916  006FC6  6F6B               	movwf	ADC_Read@result& (0+255),b
  2917  006FC8  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  2918  006FCA  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;main.c: 154: ADCON0bits.ADON = 0;
  2922  006FCC  90C2               	bcf	4034,0,c	;volatile
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;main.c: 155: return result;
  2926  006FCE  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  2927  006FD2  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  2928                           
  2929                           ; BSR set to: 0
  2930  006FD6  0012               	return		;funcret
  2931  006FD8                     __end_of_ADC_Read:
  2932                           	opt stack 0
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           intcon	equ	0xFF2
  2938                           postinc0	equ	0xFEE
  2939                           wreg	equ	0xFE8
  2940                           postdec2	equ	0xFDD
  2941                           fsr2h	equ	0xFDA
  2942                           fsr2l	equ	0xFD9
  2943                           
  2944 ;; *************** function _ADC_SelChannel *****************
  2945 ;; Defined at:
  2946 ;;		line 142 in file "main.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  c               1    wreg     unsigned char 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  c               1    5[BANK0 ] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : F/0
  2957 ;;		On exit  : F/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:        2 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    7
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_ADC_Read
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text3
  2975  007678                     __ptext3:
  2976                           	opt stack 0
  2977  007678                     _ADC_SelChannel:
  2978                           	opt stack 21
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;incstack = 0
  2982                           ;ADC_SelChannel@c stored from wreg
  2983  007678  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  2984                           
  2985                           ;main.c: 143: ADCON0bits.CHS = c;
  2986  00767A  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  2987  00767E  0100               	movlb	0	; () banked
  2988  007680  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2989  007682  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  2990  007684  50C2               	movf	4034,w,c	;volatile
  2991  007686  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2992  007688  0B83               	andlw	-125
  2993  00768A  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  2994  00768C  6EC2               	movwf	4034,c	;volatile
  2995                           
  2996                           ; BSR set to: 0
  2997  00768E  0012               	return		;funcret
  2998  007690                     __end_of_ADC_SelChannel:
  2999                           	opt stack 0
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           intcon	equ	0xFF2
  3005                           postinc0	equ	0xFEE
  3006                           wreg	equ	0xFE8
  3007                           postdec2	equ	0xFDD
  3008                           fsr2h	equ	0xFDA
  3009                           fsr2l	equ	0xFD9
  3010                           
  3011 ;; *************** function _SysConfigSleep *****************
  3012 ;; Defined at:
  3013 ;;		line 165 in file "main.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		None
  3022 ;; Tracked objects:
  3023 ;;		On entry : F/0
  3024 ;;		On exit  : F/F
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        0 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    7
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_main
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text4
  3042  00618E                     __ptext4:
  3043                           	opt stack 0
  3044  00618E                     _SysConfigSleep:
  3045                           	opt stack 23
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;main.c: 168: UART2MD = 1;
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;incstack = 0
  3052  00618E  010F               	movlb	15	; () banked
  3053  006190  8F3F               	bsf	63,7,b	;volatile
  3054                           
  3055                           ;main.c: 169: UART1MD = 1;
  3056  006192  8D3F               	bsf	63,6,b	;volatile
  3057                           
  3058                           ;main.c: 170: TMR6MD = 1;
  3059  006194  8B3F               	bsf	63,5,b	;volatile
  3060                           
  3061                           ;main.c: 171: TMR5MD = 1;
  3062  006196  893F               	bsf	63,4,b	;volatile
  3063                           
  3064                           ;main.c: 172: TMR4MD = 1;
  3065  006198  873F               	bsf	63,3,b	;volatile
  3066                           
  3067                           ;main.c: 173: TMR2MD = 1;
  3068  00619A  833F               	bsf	63,1,b	;volatile
  3069                           
  3070                           ;main.c: 174: MSSP1MD = 1;
  3071  00619C  8D3E               	bsf	62,6,b	;volatile
  3072                           
  3073                           ;main.c: 175: CCP5MD = 1;
  3074  00619E  893E               	bsf	62,4,b	;volatile
  3075                           
  3076                           ;main.c: 176: CCP4MD = 1;
  3077  0061A0  873E               	bsf	62,3,b	;volatile
  3078                           
  3079                           ;main.c: 177: CCP3MD = 1;
  3080  0061A2  853E               	bsf	62,2,b	;volatile
  3081                           
  3082                           ;main.c: 178: CCP2MD = 1;
  3083  0061A4  833E               	bsf	62,1,b	;volatile
  3084                           
  3085                           ;main.c: 179: CCP1MD = 1;
  3086  0061A6  813E               	bsf	62,0,b	;volatile
  3087                           
  3088                           ;main.c: 180: CTMUMD = 1;
  3089  0061A8  873D               	bsf	61,3,b	;volatile
  3090                           
  3091                           ;main.c: 181: CMP2MD = 1;
  3092  0061AA  853D               	bsf	61,2,b	;volatile
  3093                           
  3094                           ;main.c: 182: CMP1MD = 1;
  3095  0061AC  833D               	bsf	61,1,b	;volatile
  3096                           
  3097                           ;main.c: 185: IDLEN = 0;
  3098  0061AE  9ED3               	bcf	4051,7,c	;volatile
  3099                           
  3100                           ;main.c: 189: TRISA = 0x00;
  3101  0061B0  6A92               	clrf	3986,c	;volatile
  3102                           
  3103                           ;main.c: 190: LATA = 0x00;
  3104  0061B2  6A89               	clrf	3977,c	;volatile
  3105                           
  3106                           ;main.c: 193: TRISBbits.RB4 = 0;
  3107  0061B4  9893               	bcf	3987,4,c	;volatile
  3108                           
  3109                           ;main.c: 194: TRISBbits.RB5 = 0;
  3110  0061B6  9A93               	bcf	3987,5,c	;volatile
  3111                           
  3112                           ;main.c: 195: TRISBbits.RB6 = 0;
  3113  0061B8  9C93               	bcf	3987,6,c	;volatile
  3114                           
  3115                           ;main.c: 196: TRISBbits.RB7 = 0;
  3116  0061BA  9E93               	bcf	3987,7,c	;volatile
  3117                           
  3118                           ;main.c: 197: LATBbits.LATB4 = 0;
  3119  0061BC  988A               	bcf	3978,4,c	;volatile
  3120                           
  3121                           ;main.c: 198: LATBbits.LATB5 = 0;
  3122  0061BE  9A8A               	bcf	3978,5,c	;volatile
  3123                           
  3124                           ;main.c: 199: LATBbits.LATB6 = 0;
  3125  0061C0  9C8A               	bcf	3978,6,c	;volatile
  3126                           
  3127                           ;main.c: 200: LATBbits.LATB7 = 0;
  3128  0061C2  9E8A               	bcf	3978,7,c	;volatile
  3129                           
  3130                           ;main.c: 203: TRISCbits.RC0 = 0;
  3131  0061C4  9094               	bcf	3988,0,c	;volatile
  3132                           
  3133                           ;main.c: 204: TRISCbits.RC1 = 0;
  3134  0061C6  9294               	bcf	3988,1,c	;volatile
  3135                           
  3136                           ;main.c: 205: TRISCbits.RC3 = 0;
  3137  0061C8  9694               	bcf	3988,3,c	;volatile
  3138                           
  3139                           ;main.c: 206: TRISCbits.RC4 = 0;
  3140  0061CA  9894               	bcf	3988,4,c	;volatile
  3141                           
  3142                           ;main.c: 208: TRISCbits.RC6 = 0;
  3143  0061CC  9C94               	bcf	3988,6,c	;volatile
  3144                           
  3145                           ;main.c: 209: TRISCbits.RC7 = 0;
  3146  0061CE  9E94               	bcf	3988,7,c	;volatile
  3147                           
  3148                           ;main.c: 210: LATCbits.LATC0 = 0;
  3149  0061D0  908B               	bcf	3979,0,c	;volatile
  3150                           
  3151                           ;main.c: 211: LATCbits.LATC1 = 0;
  3152  0061D2  928B               	bcf	3979,1,c	;volatile
  3153                           
  3154                           ;main.c: 212: LATCbits.LATC3 = 0;
  3155  0061D4  968B               	bcf	3979,3,c	;volatile
  3156                           
  3157                           ;main.c: 213: LATCbits.LATC4 = 0;
  3158  0061D6  988B               	bcf	3979,4,c	;volatile
  3159                           
  3160                           ;main.c: 215: LATCbits.LATC6 = 0;
  3161  0061D8  9C8B               	bcf	3979,6,c	;volatile
  3162                           
  3163                           ;main.c: 216: LATCbits.LATC7 = 0;
  3164  0061DA  9E8B               	bcf	3979,7,c	;volatile
  3165                           
  3166                           ;main.c: 219: TRISDbits.RD0 = 0;
  3167  0061DC  9095               	bcf	3989,0,c	;volatile
  3168                           
  3169                           ;main.c: 220: TRISDbits.RD1 = 0;
  3170  0061DE  9295               	bcf	3989,1,c	;volatile
  3171                           
  3172                           ;main.c: 221: TRISDbits.RD2 = 0;
  3173  0061E0  9495               	bcf	3989,2,c	;volatile
  3174                           
  3175                           ;main.c: 222: TRISDbits.RD4 = 0;
  3176  0061E2  9895               	bcf	3989,4,c	;volatile
  3177                           
  3178                           ;main.c: 223: TRISDbits.RD5 = 0;
  3179  0061E4  9A95               	bcf	3989,5,c	;volatile
  3180                           
  3181                           ;main.c: 224: TRISDbits.RD7 = 0;
  3182  0061E6  9E95               	bcf	3989,7,c	;volatile
  3183                           
  3184                           ;main.c: 225: LATDbits.LATD0 = 0;
  3185  0061E8  908C               	bcf	3980,0,c	;volatile
  3186                           
  3187                           ;main.c: 226: LATDbits.LATD1 = 0;
  3188  0061EA  928C               	bcf	3980,1,c	;volatile
  3189                           
  3190                           ;main.c: 227: LATDbits.LATD2 = 0;
  3191  0061EC  948C               	bcf	3980,2,c	;volatile
  3192                           
  3193                           ;main.c: 228: LATDbits.LATD4 = 0;
  3194  0061EE  988C               	bcf	3980,4,c	;volatile
  3195                           
  3196                           ;main.c: 233: TRISEbits.RE0 = 0;
  3197  0061F0  9096               	bcf	3990,0,c	;volatile
  3198                           
  3199                           ;main.c: 234: TRISEbits.RE1 = 0;
  3200  0061F2  9296               	bcf	3990,1,c	;volatile
  3201                           
  3202                           ;main.c: 235: TRISEbits.RE2 = 0;
  3203  0061F4  9496               	bcf	3990,2,c	;volatile
  3204                           
  3205                           ;main.c: 236: LATEbits.LATE0 = 0;
  3206  0061F6  908D               	bcf	3981,0,c	;volatile
  3207                           
  3208                           ;main.c: 237: LATEbits.LATE1 = 0;
  3209  0061F8  928D               	bcf	3981,1,c	;volatile
  3210                           
  3211                           ;main.c: 238: LATEbits.LATE2 = 0;
  3212  0061FA  948D               	bcf	3981,2,c	;volatile
  3213                           
  3214                           ; BSR set to: 15
  3215  0061FC  0012               	return		;funcret
  3216  0061FE                     __end_of_SysConfigSleep:
  3217                           	opt stack 0
  3218                           tblptru	equ	0xFF8
  3219                           tblptrh	equ	0xFF7
  3220                           tblptrl	equ	0xFF6
  3221                           tablat	equ	0xFF5
  3222                           intcon	equ	0xFF2
  3223                           postinc0	equ	0xFEE
  3224                           wreg	equ	0xFE8
  3225                           postdec2	equ	0xFDD
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           
  3229 ;; *************** function _SYSTEM_Initialize *****************
  3230 ;; Defined at:
  3231 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : F/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:   10
  3252 ;; This function calls:
  3253 ;;		_EXT_INT_Initialize
  3254 ;;		_INTERRUPT_Initialize
  3255 ;;		_LORAWAN_PlatformInit
  3256 ;;		_OSCILLATOR_Initialize
  3257 ;;		_PIN_MANAGER_Initialize
  3258 ;;		_SPI2_Initialize
  3259 ;;		_TMR1_Initialize
  3260 ;;		_TMR3_Initialize
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text5
  3267  007430                     __ptext5:
  3268                           	opt stack 0
  3269  007430                     _SYSTEM_Initialize:
  3270                           	opt stack 20
  3271                           
  3272                           ;mcc.c: 114: INTERRUPT_Initialize();
  3273                           
  3274                           ; BSR set to: 15
  3275                           ;incstack = 0
  3276  007430  ECB6  F03C         	call	_INTERRUPT_Initialize	;wreg free
  3277                           
  3278                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3279  007434  ECF7  F035         	call	_PIN_MANAGER_Initialize	;wreg free
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3283  007438  EC0D  F03C         	call	_OSCILLATOR_Initialize	;wreg free
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;mcc.c: 117: SPI2_Initialize();
  3287  00743C  EC2B  F03C         	call	_SPI2_Initialize	;wreg free
  3288                           
  3289                           ;mcc.c: 118: TMR3_Initialize();
  3290  007440  EC4C  F039         	call	_TMR3_Initialize	;wreg free
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;mcc.c: 119: EXT_INT_Initialize();
  3294  007444  EC9E  F038         	call	_EXT_INT_Initialize	;wreg free
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;mcc.c: 120: TMR1_Initialize();
  3298  007448  EC88  F039         	call	_TMR1_Initialize	;wreg free
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;mcc.c: 121: LORAWAN_PlatformInit();
  3302  00744C  EF28  F03A         	goto	_LORAWAN_PlatformInit	;wreg free
  3303  007450                     __end_of_SYSTEM_Initialize:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           postdec2	equ	0xFDD
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           
  3316 ;; *************** function _TMR3_Initialize *****************
  3317 ;; Defined at:
  3318 ;;		line 62 in file "mcc_generated_files/tmr3.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : F/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    8
  3339 ;; This function calls:
  3340 ;;		_TMR3_SetInterruptHandler
  3341 ;;		_TMR3_StartTimer
  3342 ;; This function is called by:
  3343 ;;		_SYSTEM_Initialize
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text6
  3348  007298                     __ptext6:
  3349                           	opt stack 0
  3350  007298                     _TMR3_Initialize:
  3351                           	opt stack 21
  3352                           
  3353                           ;tmr3.c: 67: T3CON = 0xBC;
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;incstack = 0
  3357  007298  0EBC               	movlw	188
  3358  00729A  6EB1               	movwf	4017,c	;volatile
  3359                           
  3360                           ;tmr3.c: 70: T3GCON = 0x00;
  3361  00729C  6AB4               	clrf	4020,c	;volatile
  3362                           
  3363                           ;tmr3.c: 73: TMR3H = 0x00;
  3364  00729E  6AB3               	clrf	4019,c	;volatile
  3365                           
  3366                           ;tmr3.c: 76: TMR3L = 0x00;
  3367  0072A0  6AB2               	clrf	4018,c	;volatile
  3368                           
  3369                           ;tmr3.c: 79: timer3ReloadVal=TMR3;
  3370  0072A2  CFB2 F05D          	movff	4018,_timer3ReloadVal	;volatile
  3371  0072A6  CFB3 F05E          	movff	4019,_timer3ReloadVal+1	;volatile
  3372                           
  3373                           ;tmr3.c: 82: PIR2bits.TMR3IF = 0;
  3374  0072AA  92A1               	bcf	4001,1,c	;volatile
  3375                           
  3376                           ;tmr3.c: 85: PIE2bits.TMR3IE = 1;
  3377  0072AC  82A0               	bsf	4000,1,c	;volatile
  3378                           
  3379                           ;tmr3.c: 88: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  3380  0072AE  0E8A               	movlw	low _TMR3_DefaultInterruptHandler
  3381  0072B0  0100               	movlb	0	; () banked
  3382  0072B2  6F64               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3383  0072B4  0E79               	movlw	high _TMR3_DefaultInterruptHandler
  3384  0072B6  6F65               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3385  0072B8  EC31  F03C         	call	_TMR3_SetInterruptHandler	;wreg free
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;tmr3.c: 91: TMR3_StartTimer();
  3389  0072BC  EFB0  F03C         	goto	_TMR3_StartTimer	;wreg free
  3390  0072C0                     __end_of_TMR3_Initialize:
  3391                           	opt stack 0
  3392                           tblptru	equ	0xFF8
  3393                           tblptrh	equ	0xFF7
  3394                           tblptrl	equ	0xFF6
  3395                           tablat	equ	0xFF5
  3396                           intcon	equ	0xFF2
  3397                           postinc0	equ	0xFEE
  3398                           wreg	equ	0xFE8
  3399                           postdec2	equ	0xFDD
  3400                           fsr2h	equ	0xFDA
  3401                           fsr2l	equ	0xFD9
  3402                           
  3403 ;; *************** function _TMR3_StartTimer *****************
  3404 ;; Defined at:
  3405 ;;		line 94 in file "mcc_generated_files/tmr3.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		None
  3414 ;; Tracked objects:
  3415 ;;		On entry : F/0
  3416 ;;		On exit  : F/0
  3417 ;;		Unchanged: F/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    7
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_TMR3_Initialize
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text7
  3434  007960                     __ptext7:
  3435                           	opt stack 0
  3436  007960                     _TMR3_StartTimer:
  3437                           	opt stack 21
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;tmr3.c: 97: T3CONbits.TMR3ON = 1;
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;incstack = 0
  3444  007960  80B1               	bsf	4017,0,c	;volatile
  3445                           
  3446                           ; BSR set to: 0
  3447  007962  0012               	return		;funcret
  3448  007964                     __end_of_TMR3_StartTimer:
  3449                           	opt stack 0
  3450                           tblptru	equ	0xFF8
  3451                           tblptrh	equ	0xFF7
  3452                           tblptrl	equ	0xFF6
  3453                           tablat	equ	0xFF5
  3454                           intcon	equ	0xFF2
  3455                           postinc0	equ	0xFEE
  3456                           wreg	equ	0xFE8
  3457                           postdec2	equ	0xFDD
  3458                           fsr2h	equ	0xFDA
  3459                           fsr2l	equ	0xFD9
  3460                           
  3461 ;; *************** function _TMR3_SetInterruptHandler *****************
  3462 ;; Defined at:
  3463 ;;		line 183 in file "mcc_generated_files/tmr3.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3466 ;;		 -> handle16sInterrupt(1), TMR3_DefaultInterruptHandler(1), 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : F/0
  3475 ;;		On exit  : F/0
  3476 ;;		Unchanged: F/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:        2 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    7
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_TMR3_Initialize
  3489 ;;		_main
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text8
  3494  007862                     __ptext8:
  3495                           	opt stack 0
  3496  007862                     _TMR3_SetInterruptHandler:
  3497                           	opt stack 23
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;tmr3.c: 184: TMR3_InterruptHandler = InterruptHandler;
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;incstack = 0
  3504  007862  C064  F1EC         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3505  007866  C065  F1ED         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3506                           
  3507                           ; BSR set to: 0
  3508  00786A  0012               	return		;funcret
  3509  00786C                     __end_of_TMR3_SetInterruptHandler:
  3510                           	opt stack 0
  3511                           tblptru	equ	0xFF8
  3512                           tblptrh	equ	0xFF7
  3513                           tblptrl	equ	0xFF6
  3514                           tablat	equ	0xFF5
  3515                           intcon	equ	0xFF2
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           postdec2	equ	0xFDD
  3519                           fsr2h	equ	0xFDA
  3520                           fsr2l	equ	0xFD9
  3521                           
  3522 ;; *************** function _TMR1_Initialize *****************
  3523 ;; Defined at:
  3524 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : F/0
  3535 ;;		On exit  : F/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    8
  3545 ;; This function calls:
  3546 ;;		_TMR1_SetInterruptHandler
  3547 ;;		_TMR1_StartTimer
  3548 ;; This function is called by:
  3549 ;;		_SYSTEM_Initialize
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text9
  3554  007310                     __ptext9:
  3555                           	opt stack 0
  3556  007310                     _TMR1_Initialize:
  3557                           	opt stack 21
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;tmr1.c: 67: T1CON = 0x8C;
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;incstack = 0
  3564  007310  0E8C               	movlw	140
  3565  007312  6ECD               	movwf	4045,c	;volatile
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;tmr1.c: 70: T1GCON = 0x00;
  3569  007314  6ACC               	clrf	4044,c	;volatile
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;tmr1.c: 73: TMR1H = 0x00;
  3573  007316  6ACF               	clrf	4047,c	;volatile
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;tmr1.c: 76: TMR1L = 0x00;
  3577  007318  6ACE               	clrf	4046,c	;volatile
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3581  00731A  CFCE F05B          	movff	4046,_timer1ReloadVal	;volatile
  3582  00731E  CFCF F05C          	movff	4047,_timer1ReloadVal+1	;volatile
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3586  007322  909E               	bcf	3998,0,c	;volatile
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3590  007324  809D               	bsf	3997,0,c	;volatile
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3594  007326  0E8C               	movlw	low _TMR1_DefaultInterruptHandler
  3595  007328  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3596  00732A  0E79               	movlw	high _TMR1_DefaultInterruptHandler
  3597  00732C  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3598  00732E  EC36  F03C         	call	_TMR1_SetInterruptHandler	;wreg free
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;tmr1.c: 91: TMR1_StartTimer();
  3602  007332  EFB2  F03C         	goto	_TMR1_StartTimer	;wreg free
  3603  007336                     __end_of_TMR1_Initialize:
  3604                           	opt stack 0
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postdec2	equ	0xFDD
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           
  3616 ;; *************** function _TMR1_StartTimer *****************
  3617 ;; Defined at:
  3618 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		None
  3627 ;; Tracked objects:
  3628 ;;		On entry : F/0
  3629 ;;		On exit  : F/0
  3630 ;;		Unchanged: F/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    7
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_TMR1_Initialize
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text10
  3647  007964                     __ptext10:
  3648                           	opt stack 0
  3649  007964                     _TMR1_StartTimer:
  3650                           	opt stack 21
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;incstack = 0
  3657  007964  80CD               	bsf	4045,0,c	;volatile
  3658                           
  3659                           ; BSR set to: 0
  3660  007966  0012               	return		;funcret
  3661  007968                     __end_of_TMR1_StartTimer:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           intcon	equ	0xFF2
  3668                           postinc0	equ	0xFEE
  3669                           wreg	equ	0xFE8
  3670                           postdec2	equ	0xFDD
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           
  3674 ;; *************** function _PIN_MANAGER_Initialize *****************
  3675 ;; Defined at:
  3676 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : F/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    8
  3697 ;; This function calls:
  3698 ;;		_IOCB4_SetInterruptHandler
  3699 ;; This function is called by:
  3700 ;;		_SYSTEM_Initialize
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text11
  3705  006BEE                     __ptext11:
  3706                           	opt stack 0
  3707  006BEE                     _PIN_MANAGER_Initialize:
  3708                           	opt stack 21
  3709                           
  3710                           ;pin_manager.c: 57: LATE = 0x00;
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;incstack = 0
  3714  006BEE  6A8D               	clrf	3981,c	;volatile
  3715                           
  3716                           ;pin_manager.c: 58: LATD = 0x00;
  3717  006BF0  6A8C               	clrf	3980,c	;volatile
  3718                           
  3719                           ;pin_manager.c: 59: LATA = 0x00;
  3720  006BF2  6A89               	clrf	3977,c	;volatile
  3721                           
  3722                           ;pin_manager.c: 60: LATB = 0x00;
  3723  006BF4  6A8A               	clrf	3978,c	;volatile
  3724                           
  3725                           ;pin_manager.c: 61: LATC = 0x00;
  3726  006BF6  6A8B               	clrf	3979,c	;volatile
  3727                           
  3728                           ;pin_manager.c: 66: TRISE = 0x07;
  3729  006BF8  0E07               	movlw	7
  3730  006BFA  6E96               	movwf	3990,c	;volatile
  3731                           
  3732                           ;pin_manager.c: 67: TRISA = 0xFF;
  3733  006BFC  6892               	setf	3986,c	;volatile
  3734                           
  3735                           ;pin_manager.c: 68: TRISB = 0xFF;
  3736  006BFE  6893               	setf	3987,c	;volatile
  3737                           
  3738                           ;pin_manager.c: 69: TRISC = 0xFE;
  3739  006C00  0EFE               	movlw	254
  3740  006C02  6E94               	movwf	3988,c	;volatile
  3741                           
  3742                           ;pin_manager.c: 70: TRISD = 0xE6;
  3743  006C04  0EE6               	movlw	230
  3744  006C06  6E95               	movwf	3989,c	;volatile
  3745                           
  3746                           ;pin_manager.c: 75: ANSELC = 0xF8;
  3747  006C08  0EF8               	movlw	248
  3748  006C0A  010F               	movlb	15	; () banked
  3749  006C0C  6F3A               	movwf	58,b	;volatile
  3750                           
  3751                           ;pin_manager.c: 76: ANSELB = 0x28;
  3752  006C0E  0E28               	movlw	40
  3753  006C10  6F39               	movwf	57,b	;volatile
  3754                           
  3755                           ;pin_manager.c: 77: ANSELD = 0xE4;
  3756  006C12  0EE4               	movlw	228
  3757  006C14  6F3B               	movwf	59,b	;volatile
  3758                           
  3759                           ;pin_manager.c: 78: ANSELE = 0x07;
  3760  006C16  0E07               	movlw	7
  3761  006C18  6F3C               	movwf	60,b	;volatile
  3762                           
  3763                           ;pin_manager.c: 79: ANSELA = 0x2F;
  3764  006C1A  0E2F               	movlw	47
  3765  006C1C  6F38               	movwf	56,b	;volatile
  3766                           
  3767                           ; BSR set to: 15
  3768                           ;pin_manager.c: 84: WPUB = 0xFF;
  3769  006C1E  6861               	setf	3937,c	;volatile
  3770                           
  3771                           ; BSR set to: 15
  3772                           ;pin_manager.c: 85: INTCON2bits.nRBPU = 0;
  3773  006C20  9EF1               	bcf	intcon2,7,c	;volatile
  3774                           
  3775                           ; BSR set to: 15
  3776                           ;pin_manager.c: 93: IOCBbits.IOCB4 = 1;
  3777  006C22  8862               	bsf	3938,4,c	;volatile
  3778                           
  3779                           ; BSR set to: 15
  3780                           ;pin_manager.c: 96: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3781  006C24  0E8E               	movlw	low _IOCB4_DefaultInterruptHandler
  3782  006C26  0100               	movlb	0	; () banked
  3783  006C28  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3784  006C2A  0E79               	movlw	high _IOCB4_DefaultInterruptHandler
  3785  006C2C  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3786  006C2E  EC3B  F03C         	call	_IOCB4_SetInterruptHandler	;wreg free
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;pin_manager.c: 99: INTCONbits.RBIE = 1;
  3790  006C32  86F2               	bsf	intcon,3,c	;volatile
  3791                           
  3792                           ; BSR set to: 0
  3793  006C34  0012               	return		;funcret
  3794  006C36                     __end_of_PIN_MANAGER_Initialize:
  3795                           	opt stack 0
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           intcon	equ	0xFF2
  3801                           intcon2	equ	0xFF1
  3802                           postinc0	equ	0xFEE
  3803                           wreg	equ	0xFE8
  3804                           postdec2	equ	0xFDD
  3805                           fsr2h	equ	0xFDA
  3806                           fsr2l	equ	0xFD9
  3807                           
  3808 ;; *************** function _OSCILLATOR_Initialize *****************
  3809 ;; Defined at:
  3810 ;;		line 124 in file "mcc_generated_files/mcc.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2
  3819 ;; Tracked objects:
  3820 ;;		On entry : F/0
  3821 ;;		On exit  : F/0
  3822 ;;		Unchanged: F/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    7
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_SYSTEM_Initialize
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text12
  3839  00781A                     __ptext12:
  3840                           	opt stack 0
  3841  00781A                     _OSCILLATOR_Initialize:
  3842                           	opt stack 22
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;mcc.c: 127: OSCCON = 0x70;
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;incstack = 0
  3849  00781A  0E70               	movlw	112
  3850  00781C  6ED3               	movwf	4051,c	;volatile
  3851                           
  3852                           ;mcc.c: 129: OSCCON2 = 0x04;
  3853  00781E  0E04               	movlw	4
  3854  007820  6ED2               	movwf	4050,c	;volatile
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;mcc.c: 131: OSCTUNE = 0x00;
  3858  007822  6A9B               	clrf	3995,c	;volatile
  3859                           
  3860                           ; BSR set to: 0
  3861  007824  0012               	return		;funcret
  3862  007826                     __end_of_OSCILLATOR_Initialize:
  3863                           	opt stack 0
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           intcon	equ	0xFF2
  3869                           intcon2	equ	0xFF1
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           postdec2	equ	0xFDD
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           
  3876 ;; *************** function _LORAWAN_PlatformInit *****************
  3877 ;; Defined at:
  3878 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : F/0
  3889 ;;		On exit  : F/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;Total ram usage:        0 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    9
  3899 ;; This function calls:
  3900 ;;		_DIO0_ISR_Lora_Init
  3901 ;;		_DIO1_ISR_Lora_Init
  3902 ;;		_DIO2_ISR_Lora_Init
  3903 ;;		_DIO3_ISR_Lora_Init
  3904 ;;		_DIO4_ISR_Lora_Init
  3905 ;;		_DIO5_ISR_Lora_Init
  3906 ;;		_SystemTimerInit
  3907 ;;		_TMR_ISR_Lora_Init
  3908 ;; This function is called by:
  3909 ;;		_SYSTEM_Initialize
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text13
  3914  007450                     __ptext13:
  3915                           	opt stack 0
  3916  007450                     _LORAWAN_PlatformInit:
  3917                           	opt stack 20
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;incstack = 0
  3924  007450  EC13  F03C         	call	_TMR_ISR_Lora_Init	;wreg free
  3925                           
  3926                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3927  007454  EC25  F03C         	call	_DIO0_ISR_Lora_Init	;wreg free
  3928                           
  3929                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3930  007458  EC1F  F03C         	call	_DIO1_ISR_Lora_Init	;wreg free
  3931                           
  3932                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3933  00745C  EC19  F03C         	call	_DIO2_ISR_Lora_Init	;wreg free
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3937  007460  ECC3  F03C         	call	_DIO3_ISR_Lora_Init	;wreg free
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3941  007464  ECC2  F03C         	call	_DIO4_ISR_Lora_Init	;wreg free
  3942                           
  3943                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3944  007468  EC92  F03C         	call	_DIO5_ISR_Lora_Init	;wreg free
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;lorawan_init.c: 81: SystemTimerInit();
  3948  00746C  EFB4  F03C         	goto	_SystemTimerInit	;wreg free
  3949  007470                     __end_of_LORAWAN_PlatformInit:
  3950                           	opt stack 0
  3951                           tblptru	equ	0xFF8
  3952                           tblptrh	equ	0xFF7
  3953                           tblptrl	equ	0xFF6
  3954                           tablat	equ	0xFF5
  3955                           intcon	equ	0xFF2
  3956                           intcon2	equ	0xFF1
  3957                           postinc0	equ	0xFEE
  3958                           wreg	equ	0xFE8
  3959                           postdec2	equ	0xFDD
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           
  3963 ;; *************** function _TMR_ISR_Lora_Init *****************
  3964 ;; Defined at:
  3965 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;		None
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;		None
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      void 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : F/0
  3976 ;;		On exit  : F/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;Total ram usage:        0 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    8
  3986 ;; This function calls:
  3987 ;;		_TMR1_SetInterruptHandler
  3988 ;; This function is called by:
  3989 ;;		_LORAWAN_PlatformInit
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text14
  3994  007826                     __ptext14:
  3995                           	opt stack 0
  3996  007826                     _TMR_ISR_Lora_Init:
  3997                           	opt stack 20
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;incstack = 0
  4004  007826  0EC0               	movlw	low _TMR_ISR_lora
  4005  007828  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4006  00782A  0E6A               	movlw	high _TMR_ISR_lora
  4007  00782C  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4008  00782E  EF36  F03C         	goto	_TMR1_SetInterruptHandler	;wreg free
  4009  007832                     __end_of_TMR_ISR_Lora_Init:
  4010                           	opt stack 0
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           intcon	equ	0xFF2
  4016                           intcon2	equ	0xFF1
  4017                           postinc0	equ	0xFEE
  4018                           wreg	equ	0xFE8
  4019                           postdec2	equ	0xFDD
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           
  4023 ;; *************** function _TMR1_SetInterruptHandler *****************
  4024 ;; Defined at:
  4025 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4028 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0
  4035 ;; Tracked objects:
  4036 ;;		On entry : F/0
  4037 ;;		On exit  : F/0
  4038 ;;		Unchanged: F/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;Total ram usage:        2 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    7
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_TMR_ISR_Lora_Init
  4051 ;;		_TMR1_Initialize
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text15
  4056  00786C                     __ptext15:
  4057                           	opt stack 0
  4058  00786C                     _TMR1_SetInterruptHandler:
  4059                           	opt stack 21
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;incstack = 0
  4066  00786C  C064  F1EA         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4067  007870  C065  F1EB         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4068                           
  4069                           ; BSR set to: 0
  4070  007874  0012               	return		;funcret
  4071  007876                     __end_of_TMR1_SetInterruptHandler:
  4072                           	opt stack 0
  4073                           tblptru	equ	0xFF8
  4074                           tblptrh	equ	0xFF7
  4075                           tblptrl	equ	0xFF6
  4076                           tablat	equ	0xFF5
  4077                           intcon	equ	0xFF2
  4078                           intcon2	equ	0xFF1
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec2	equ	0xFDD
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           
  4085 ;; *************** function _SystemTimerInit *****************
  4086 ;; Defined at:
  4087 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		None
  4096 ;; Tracked objects:
  4097 ;;		On entry : F/0
  4098 ;;		On exit  : F/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;Total ram usage:        0 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    7
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_LORAWAN_PlatformInit
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text16
  4116  007968                     __ptext16:
  4117                           	opt stack 0
  4118  007968                     _SystemTimerInit:
  4119                           	opt stack 21
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;sw_timer.c: 137: allocatedTimers = 0;
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;incstack = 0
  4126  007968  6BEF               	clrf	_allocatedTimers& (0+255),b	;volatile
  4127                           
  4128                           ; BSR set to: 0
  4129  00796A  0012               	return		;funcret
  4130  00796C                     __end_of_SystemTimerInit:
  4131                           	opt stack 0
  4132                           tblptru	equ	0xFF8
  4133                           tblptrh	equ	0xFF7
  4134                           tblptrl	equ	0xFF6
  4135                           tablat	equ	0xFF5
  4136                           intcon	equ	0xFF2
  4137                           intcon2	equ	0xFF1
  4138                           postinc0	equ	0xFEE
  4139                           wreg	equ	0xFE8
  4140                           postdec2	equ	0xFDD
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           
  4144 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4145 ;; Defined at:
  4146 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : F/0
  4157 ;;		On exit  : F/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;Total ram usage:        0 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    8
  4167 ;; This function calls:
  4168 ;;		_INT0_SetInterruptHandler
  4169 ;; This function is called by:
  4170 ;;		_LORAWAN_PlatformInit
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text17
  4175  007924                     __ptext17:
  4176                           	opt stack 0
  4177  007924                     _DIO5_ISR_Lora_Init:
  4178                           	opt stack 20
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;incstack = 0
  4185  007924  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4186  007926  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4187  007928  0C00               	retlw	0	;wreg free
  4188  00792A                     __end_of_DIO5_ISR_Lora_Init:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           intcon	equ	0xFF2
  4195                           intcon2	equ	0xFF1
  4196                           postinc0	equ	0xFEE
  4197                           wreg	equ	0xFE8
  4198                           postdec2	equ	0xFDD
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           
  4202 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4203 ;; Defined at:
  4204 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		None
  4213 ;; Tracked objects:
  4214 ;;		On entry : F/0
  4215 ;;		On exit  : F/0
  4216 ;;		Unchanged: F/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    7
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_LORAWAN_PlatformInit
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text18
  4233  007984                     __ptext18:
  4234                           	opt stack 0
  4235  007984                     _DIO4_ISR_Lora_Init:
  4236                           	opt stack 21
  4237                           
  4238                           ; BSR set to: 0
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;incstack = 0
  4242  007984  0012               	return		;funcret
  4243  007986                     __end_of_DIO4_ISR_Lora_Init:
  4244                           	opt stack 0
  4245                           tblptru	equ	0xFF8
  4246                           tblptrh	equ	0xFF7
  4247                           tblptrl	equ	0xFF6
  4248                           tablat	equ	0xFF5
  4249                           intcon	equ	0xFF2
  4250                           intcon2	equ	0xFF1
  4251                           postinc0	equ	0xFEE
  4252                           wreg	equ	0xFE8
  4253                           postdec2	equ	0xFDD
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           
  4257 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4258 ;; Defined at:
  4259 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		None
  4268 ;; Tracked objects:
  4269 ;;		On entry : F/0
  4270 ;;		On exit  : F/0
  4271 ;;		Unchanged: F/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    7
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_LORAWAN_PlatformInit
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text19
  4288  007986                     __ptext19:
  4289                           	opt stack 0
  4290  007986                     _DIO3_ISR_Lora_Init:
  4291                           	opt stack 21
  4292                           
  4293                           ; BSR set to: 0
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;incstack = 0
  4297  007986  0012               	return		;funcret
  4298  007988                     __end_of_DIO3_ISR_Lora_Init:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           intcon	equ	0xFF2
  4305                           intcon2	equ	0xFF1
  4306                           postinc0	equ	0xFEE
  4307                           wreg	equ	0xFE8
  4308                           postdec2	equ	0xFDD
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           
  4312 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4313 ;; Defined at:
  4314 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : F/0
  4325 ;;		On exit  : F/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    8
  4335 ;; This function calls:
  4336 ;;		_IOCB4_SetInterruptHandler
  4337 ;; This function is called by:
  4338 ;;		_LORAWAN_PlatformInit
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text20
  4343  007832                     __ptext20:
  4344                           	opt stack 0
  4345  007832                     _DIO2_ISR_Lora_Init:
  4346                           	opt stack 20
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;incstack = 0
  4353  007832  0E42               	movlw	low _DIO2_ISR_Lora
  4354  007834  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4355  007836  0E79               	movlw	high _DIO2_ISR_Lora
  4356  007838  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4357  00783A  EF3B  F03C         	goto	_IOCB4_SetInterruptHandler	;wreg free
  4358  00783E                     __end_of_DIO2_ISR_Lora_Init:
  4359                           	opt stack 0
  4360                           tblptru	equ	0xFF8
  4361                           tblptrh	equ	0xFF7
  4362                           tblptrl	equ	0xFF6
  4363                           tablat	equ	0xFF5
  4364                           intcon	equ	0xFF2
  4365                           intcon2	equ	0xFF1
  4366                           postinc0	equ	0xFEE
  4367                           wreg	equ	0xFE8
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           
  4372 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4373 ;; Defined at:
  4374 ;;		line 133 in file "mcc_generated_files/pin_manager.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4377 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : F/0
  4386 ;;		On exit  : F/0
  4387 ;;		Unchanged: F/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;Total ram usage:        2 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    7
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_PIN_MANAGER_Initialize
  4400 ;;		_DIO2_ISR_Lora_Init
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text21
  4405  007876                     __ptext21:
  4406                           	opt stack 0
  4407  007876                     _IOCB4_SetInterruptHandler:
  4408                           	opt stack 21
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;pin_manager.c: 134: IOCB4_InterruptHandler = InterruptHandler;
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;incstack = 0
  4415  007876  C064  F1E8         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4416  00787A  C065  F1E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4417                           
  4418                           ; BSR set to: 0
  4419  00787E  0012               	return		;funcret
  4420  007880                     __end_of_IOCB4_SetInterruptHandler:
  4421                           	opt stack 0
  4422                           tblptru	equ	0xFF8
  4423                           tblptrh	equ	0xFF7
  4424                           tblptrl	equ	0xFF6
  4425                           tablat	equ	0xFF5
  4426                           intcon	equ	0xFF2
  4427                           intcon2	equ	0xFF1
  4428                           postinc0	equ	0xFEE
  4429                           wreg	equ	0xFE8
  4430                           postdec2	equ	0xFDD
  4431                           fsr2h	equ	0xFDA
  4432                           fsr2l	equ	0xFD9
  4433                           
  4434 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4435 ;; Defined at:
  4436 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : F/0
  4447 ;;		On exit  : F/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    8
  4457 ;; This function calls:
  4458 ;;		_INT2_SetInterruptHandler
  4459 ;; This function is called by:
  4460 ;;		_LORAWAN_PlatformInit
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text22
  4465  00783E                     __ptext22:
  4466                           	opt stack 0
  4467  00783E                     _DIO1_ISR_Lora_Init:
  4468                           	opt stack 20
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;incstack = 0
  4475  00783E  0E4E               	movlw	low _DIO1_ISR_Lora
  4476  007840  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4477  007842  0E79               	movlw	high _DIO1_ISR_Lora
  4478  007844  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4479  007846  EF40  F03C         	goto	_INT2_SetInterruptHandler	;wreg free
  4480  00784A                     __end_of_DIO1_ISR_Lora_Init:
  4481                           	opt stack 0
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           intcon	equ	0xFF2
  4487                           intcon2	equ	0xFF1
  4488                           postinc0	equ	0xFEE
  4489                           wreg	equ	0xFE8
  4490                           postdec2	equ	0xFDD
  4491                           fsr2h	equ	0xFDA
  4492                           fsr2l	equ	0xFD9
  4493                           
  4494 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4495 ;; Defined at:
  4496 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : F/0
  4507 ;;		On exit  : F/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    8
  4517 ;; This function calls:
  4518 ;;		_INT1_SetInterruptHandler
  4519 ;; This function is called by:
  4520 ;;		_LORAWAN_PlatformInit
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text23
  4525  00784A                     __ptext23:
  4526                           	opt stack 0
  4527  00784A                     _DIO0_ISR_Lora_Init:
  4528                           	opt stack 20
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;incstack = 0
  4535  00784A  0E5A               	movlw	low _DIO0_ISR_Lora
  4536  00784C  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4537  00784E  0E79               	movlw	high _DIO0_ISR_Lora
  4538  007850  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4539  007852  EF45  F03C         	goto	_INT1_SetInterruptHandler	;wreg free
  4540  007856                     __end_of_DIO0_ISR_Lora_Init:
  4541                           	opt stack 0
  4542                           tblptru	equ	0xFF8
  4543                           tblptrh	equ	0xFF7
  4544                           tblptrl	equ	0xFF6
  4545                           tablat	equ	0xFF5
  4546                           intcon	equ	0xFF2
  4547                           intcon2	equ	0xFF1
  4548                           postinc0	equ	0xFEE
  4549                           wreg	equ	0xFE8
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           
  4554 ;; *************** function _INTERRUPT_Initialize *****************
  4555 ;; Defined at:
  4556 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		None
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    7
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_SYSTEM_Initialize
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text24
  4585  00796C                     __ptext24:
  4586                           	opt stack 0
  4587  00796C                     _INTERRUPT_Initialize:
  4588                           	opt stack 22
  4589                           
  4590                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;incstack = 0
  4594  00796C  9ED0               	bcf	4048,7,c	;volatile
  4595  00796E  0012               	return		;funcret
  4596  007970                     __end_of_INTERRUPT_Initialize:
  4597                           	opt stack 0
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           intcon	equ	0xFF2
  4603                           intcon2	equ	0xFF1
  4604                           postinc0	equ	0xFEE
  4605                           wreg	equ	0xFE8
  4606                           postdec2	equ	0xFDD
  4607                           fsr2h	equ	0xFDA
  4608                           fsr2l	equ	0xFD9
  4609                           
  4610 ;; *************** function _EXT_INT_Initialize *****************
  4611 ;; Defined at:
  4612 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : F/0
  4623 ;;		On exit  : F/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    8
  4633 ;; This function calls:
  4634 ;;		_INT0_SetInterruptHandler
  4635 ;;		_INT1_SetInterruptHandler
  4636 ;;		_INT2_SetInterruptHandler
  4637 ;; This function is called by:
  4638 ;;		_SYSTEM_Initialize
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text25
  4643  00713C                     __ptext25:
  4644                           	opt stack 0
  4645  00713C                     _EXT_INT_Initialize:
  4646                           	opt stack 21
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4650                           
  4651                           ;incstack = 0
  4652  00713C  90F0               	bcf	intcon3,0,c	;volatile
  4653                           
  4654                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4655  00713E  8AF1               	bsf	intcon2,5,c	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4659  007140  0E92               	movlw	low _INT1_DefaultInterruptHandler
  4660  007142  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4661  007144  0E79               	movlw	high _INT1_DefaultInterruptHandler
  4662  007146  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4663  007148  EC45  F03C         	call	_INT1_SetInterruptHandler	;wreg free
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4667  00714C  86F0               	bsf	intcon3,3,c	;volatile
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4671  00714E  92F0               	bcf	intcon3,1,c	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4675  007150  88F1               	bsf	intcon2,4,c	;volatile
  4676                           
  4677                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4678  007152  0E90               	movlw	low _INT2_DefaultInterruptHandler
  4679  007154  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4680  007156  0E79               	movlw	high _INT2_DefaultInterruptHandler
  4681  007158  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4682  00715A  EC40  F03C         	call	_INT2_SetInterruptHandler	;wreg free
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4686  00715E  88F0               	bsf	intcon3,4,c	;volatile
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4690  007160  92F2               	bcf	intcon,1,c	;volatile
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4694  007162  8CF1               	bsf	intcon2,6,c	;volatile
  4695                           
  4696                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4697  007164  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4698  007166  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4699  007168  0C00               	retlw	0	;wreg free
  4700  00716A                     __end_of_EXT_INT_Initialize:
  4701                           	opt stack 0
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           intcon	equ	0xFF2
  4707                           intcon2	equ	0xFF1
  4708                           intcon3	equ	0xFF0
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           postdec2	equ	0xFDD
  4712                           fsr2h	equ	0xFDA
  4713                           fsr2l	equ	0xFD9
  4714                           
  4715 ;; *************** function _INT2_SetInterruptHandler *****************
  4716 ;; Defined at:
  4717 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4718 ;; Parameters:    Size  Location     Type
  4719 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4720 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      void 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2, status,0
  4727 ;; Tracked objects:
  4728 ;;		On entry : F/0
  4729 ;;		On exit  : F/0
  4730 ;;		Unchanged: F/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;Total ram usage:        2 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    7
  4739 ;; This function calls:
  4740 ;;		Nothing
  4741 ;; This function is called by:
  4742 ;;		_EXT_INT_Initialize
  4743 ;;		_DIO1_ISR_Lora_Init
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text26
  4748  007880                     __ptext26:
  4749                           	opt stack 0
  4750  007880                     _INT2_SetInterruptHandler:
  4751                           	opt stack 20
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;incstack = 0
  4758  007880  C064  F1E6         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4759  007884  C065  F1E7         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4760                           
  4761                           ; BSR set to: 0
  4762  007888  0012               	return		;funcret
  4763  00788A                     __end_of_INT2_SetInterruptHandler:
  4764                           	opt stack 0
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           intcon	equ	0xFF2
  4770                           intcon2	equ	0xFF1
  4771                           intcon3	equ	0xFF0
  4772                           postinc0	equ	0xFEE
  4773                           wreg	equ	0xFE8
  4774                           postdec2	equ	0xFDD
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           
  4778 ;; *************** function _INT1_SetInterruptHandler *****************
  4779 ;; Defined at:
  4780 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4783 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : F/0
  4792 ;;		On exit  : F/0
  4793 ;;		Unchanged: F/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4795 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;Total ram usage:        2 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    7
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_EXT_INT_Initialize
  4806 ;;		_DIO0_ISR_Lora_Init
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text27
  4811  00788A                     __ptext27:
  4812                           	opt stack 0
  4813  00788A                     _INT1_SetInterruptHandler:
  4814                           	opt stack 20
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;incstack = 0
  4821  00788A  C064  F1E4         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4822  00788E  C065  F1E5         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4823                           
  4824                           ; BSR set to: 0
  4825  007892  0012               	return		;funcret
  4826  007894                     __end_of_INT1_SetInterruptHandler:
  4827                           	opt stack 0
  4828                           tblptru	equ	0xFF8
  4829                           tblptrh	equ	0xFF7
  4830                           tblptrl	equ	0xFF6
  4831                           tablat	equ	0xFF5
  4832                           intcon	equ	0xFF2
  4833                           intcon2	equ	0xFF1
  4834                           intcon3	equ	0xFF0
  4835                           postinc0	equ	0xFEE
  4836                           wreg	equ	0xFE8
  4837                           postdec2	equ	0xFDD
  4838                           fsr2h	equ	0xFDA
  4839                           fsr2l	equ	0xFD9
  4840                           
  4841 ;; *************** function _INT0_SetInterruptHandler *****************
  4842 ;; Defined at:
  4843 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4846 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		None
  4853 ;; Tracked objects:
  4854 ;;		On entry : F/0
  4855 ;;		On exit  : F/0
  4856 ;;		Unchanged: F/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;Total ram usage:        2 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    7
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_EXT_INT_Initialize
  4869 ;;		_DIO5_ISR_Lora_Init
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text28
  4874  007988                     __ptext28:
  4875                           	opt stack 0
  4876  007988                     _INT0_SetInterruptHandler:
  4877                           	opt stack 20
  4878                           
  4879                           ; BSR set to: 0
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;incstack = 0
  4883  007988  0012               	return		;funcret
  4884  00798A                     __end_of_INT0_SetInterruptHandler:
  4885                           	opt stack 0
  4886                           tblptru	equ	0xFF8
  4887                           tblptrh	equ	0xFF7
  4888                           tblptrl	equ	0xFF6
  4889                           tablat	equ	0xFF5
  4890                           intcon	equ	0xFF2
  4891                           intcon2	equ	0xFF1
  4892                           intcon3	equ	0xFF0
  4893                           postinc0	equ	0xFEE
  4894                           wreg	equ	0xFE8
  4895                           postdec2	equ	0xFDD
  4896                           fsr2h	equ	0xFDA
  4897                           fsr2l	equ	0xFD9
  4898                           
  4899 ;; *************** function _LoRaWakeUp *****************
  4900 ;; Defined at:
  4901 ;;		line 272 in file "main.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : F/1
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    8
  4922 ;; This function calls:
  4923 ;;		_SPI2_Initialize
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text29
  4930  0078E4                     __ptext29:
  4931                           	opt stack 0
  4932  0078E4                     _LoRaWakeUp:
  4933                           	opt stack 22
  4934                           
  4935                           ; BSR set to: 1
  4936                           ;main.c: 274: MSSP2MD = 0;
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;incstack = 0
  4940  0078E4  010F               	movlb	15	; () banked
  4941  0078E6  9F3E               	bcf	62,7,b	;volatile
  4942                           
  4943                           ; BSR set to: 15
  4944                           ;main.c: 275: SPI2_Initialize();
  4945  0078E8  EF2B  F03C         	goto	_SPI2_Initialize	;wreg free
  4946  0078EC                     __end_of_LoRaWakeUp:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           intcon	equ	0xFF2
  4953                           intcon2	equ	0xFF1
  4954                           intcon3	equ	0xFF0
  4955                           postinc0	equ	0xFEE
  4956                           wreg	equ	0xFE8
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           
  4961 ;; *************** function _SPI2_Initialize *****************
  4962 ;; Defined at:
  4963 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  1    wreg      void 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;Total ram usage:        0 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    7
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_SYSTEM_Initialize
  4988 ;;		_LoRaWakeUp
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text30
  4993  007856                     __ptext30:
  4994                           	opt stack 0
  4995  007856                     _SPI2_Initialize:
  4996                           	opt stack 22
  4997                           
  4998                           ;spi2.c: 68: SSP2STAT = 0x40;
  4999                           
  5000                           ;incstack = 0
  5001  007856  0E40               	movlw	64
  5002  007858  6E6D               	movwf	3949,c	;volatile
  5003                           
  5004                           ;spi2.c: 71: SSP2CON1 = 0x20;
  5005  00785A  0E20               	movlw	32
  5006  00785C  6E6C               	movwf	3948,c	;volatile
  5007                           
  5008                           ;spi2.c: 74: SSP2ADD = 0x00;
  5009  00785E  6A6E               	clrf	3950,c	;volatile
  5010  007860  0012               	return		;funcret
  5011  007862                     __end_of_SPI2_Initialize:
  5012                           	opt stack 0
  5013                           tblptru	equ	0xFF8
  5014                           tblptrh	equ	0xFF7
  5015                           tblptrl	equ	0xFF6
  5016                           tablat	equ	0xFF5
  5017                           intcon	equ	0xFF2
  5018                           intcon2	equ	0xFF1
  5019                           intcon3	equ	0xFF0
  5020                           postinc0	equ	0xFEE
  5021                           wreg	equ	0xFE8
  5022                           postdec2	equ	0xFDD
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           
  5026 ;; *************** function _LoRaSleep *****************
  5027 ;; Defined at:
  5028 ;;		line 242 in file "main.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;		None
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		None
  5037 ;; Tracked objects:
  5038 ;;		On entry : F/2
  5039 ;;		On exit  : F/F
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;Total ram usage:        0 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    7
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text31
  5057  007470                     __ptext31:
  5058                           	opt stack 0
  5059  007470                     _LoRaSleep:
  5060                           	opt stack 23
  5061                           
  5062                           ; BSR set to: 2
  5063                           ;main.c: 245: SSP2CON1 = 0x00;
  5064                           
  5065                           ;incstack = 0
  5066  007470  6A6C               	clrf	3948,c	;volatile
  5067                           
  5068                           ;main.c: 248: MSSP2MD = 1;
  5069  007472  010F               	movlb	15	; () banked
  5070  007474  8F3E               	bsf	62,7,b	;volatile
  5071                           
  5072                           ;main.c: 252: ANSD3 = 0;
  5073  007476  973B               	bcf	59,3,b	;volatile
  5074                           
  5075                           ;main.c: 253: TRISD3 = 0;
  5076  007478  9695               	bcf	3989,3,c	;volatile
  5077                           
  5078                           ;main.c: 254: LATD3 = 1;
  5079  00747A  868C               	bsf	3980,3,c	;volatile
  5080                           
  5081                           ;main.c: 257: ANSD1 = 0;
  5082  00747C  933B               	bcf	59,1,b	;volatile
  5083                           
  5084                           ;main.c: 258: TRISD1 = 0;
  5085  00747E  9295               	bcf	3989,1,c	;volatile
  5086                           
  5087                           ;main.c: 259: LATD1 = 0;
  5088  007480  928C               	bcf	3980,1,c	;volatile
  5089                           
  5090                           ;main.c: 262: ANSD4 = 0;
  5091  007482  993B               	bcf	59,4,b	;volatile
  5092                           
  5093                           ;main.c: 263: TRISD4 = 0;
  5094  007484  9895               	bcf	3989,4,c	;volatile
  5095                           
  5096                           ;main.c: 264: LATD4 = 0;
  5097  007486  988C               	bcf	3980,4,c	;volatile
  5098                           
  5099                           ;main.c: 267: ANSD0 = 0;
  5100  007488  913B               	bcf	59,0,b	;volatile
  5101                           
  5102                           ;main.c: 268: TRISD0 = 0;
  5103  00748A  9095               	bcf	3989,0,c	;volatile
  5104                           
  5105                           ;main.c: 269: LATD0 = 0;
  5106  00748C  908C               	bcf	3980,0,c	;volatile
  5107                           
  5108                           ; BSR set to: 15
  5109  00748E  0012               	return		;funcret
  5110  007490                     __end_of_LoRaSleep:
  5111                           	opt stack 0
  5112                           tblptru	equ	0xFF8
  5113                           tblptrh	equ	0xFF7
  5114                           tblptrl	equ	0xFF6
  5115                           tablat	equ	0xFF5
  5116                           intcon	equ	0xFF2
  5117                           intcon2	equ	0xFF1
  5118                           intcon3	equ	0xFF0
  5119                           postinc0	equ	0xFEE
  5120                           wreg	equ	0xFE8
  5121                           postdec2	equ	0xFDD
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           
  5125 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5126 ;; Defined at:
  5127 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5130 ;;		 -> nwkSKey(16), 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : F/0
  5139 ;;		On exit  : D/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;Total ram usage:        2 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:    8
  5149 ;; This function calls:
  5150 ;;		_memcpy
  5151 ;; This function is called by:
  5152 ;;		_main
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text32
  5157  0071F0                     __ptext32:
  5158                           	opt stack 0
  5159  0071F0                     _LORAWAN_SetNetworkSessionKey:
  5160                           	opt stack 22
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5164                           
  5165                           ; BSR set to: 15
  5166                           ;incstack = 0
  5167  0071F0  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5168  0071F2  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5169  0071F4  B4D8               	btfsc	status,2,c
  5170  0071F6  0012               	return	
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;lorawan.c: 382: {
  5174                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5175  0071F8  0E22               	movlw	low (_loRa+34)
  5176  0071FA  6F64               	movwf	memcpy@d1& (0+255),b
  5177  0071FC  0E02               	movlw	high (_loRa+34)
  5178  0071FE  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5179  007200  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5180  007204  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5181  007208  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5182  00720A  0E10               	movlw	16
  5183  00720C  6F68               	movwf	memcpy@n& (0+255),b
  5184  00720E  EC44  F034         	call	_memcpy	;wreg free
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5188  007212  0102               	movlb	2	; () banked
  5189  007214  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5190                           
  5191                           ; BSR set to: 2
  5192                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5193  007216  9902               	bcf	(_loRa+2)& (0+255),4,b
  5194  007218  0012               	return		;funcret
  5195  00721A                     __end_of_LORAWAN_SetNetworkSessionKey:
  5196                           	opt stack 0
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           intcon	equ	0xFF2
  5202                           intcon2	equ	0xFF1
  5203                           intcon3	equ	0xFF0
  5204                           postinc0	equ	0xFEE
  5205                           wreg	equ	0xFE8
  5206                           postdec2	equ	0xFDD
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5212 ;; Defined at:
  5213 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		None
  5222 ;; Tracked objects:
  5223 ;;		On entry : F/0
  5224 ;;		On exit  : F/2
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;Total ram usage:        4 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    7
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_main
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text33
  5242  007690                     __ptext33:
  5243                           	opt stack 0
  5244  007690                     _LORAWAN_SetDeviceAddress:
  5245                           	opt stack 23
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5249                           
  5250                           ;incstack = 0
  5251  007690  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5252  007694  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5253  007698  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5254  00769C  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5255                           
  5256                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5257  0076A0  0102               	movlb	2	; () banked
  5258  0076A2  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5259                           
  5260                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5261  0076A4  9902               	bcf	(_loRa+2)& (0+255),4,b
  5262                           
  5263                           ; BSR set to: 2
  5264  0076A6  0012               	return		;funcret
  5265  0076A8                     __end_of_LORAWAN_SetDeviceAddress:
  5266                           	opt stack 0
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           intcon	equ	0xFF2
  5272                           intcon2	equ	0xFF1
  5273                           intcon3	equ	0xFF0
  5274                           postinc0	equ	0xFEE
  5275                           wreg	equ	0xFE8
  5276                           postdec2	equ	0xFDD
  5277                           fsr2h	equ	0xFDA
  5278                           fsr2l	equ	0xFD9
  5279                           status	equ	0xFD8
  5280                           
  5281 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5282 ;; Defined at:
  5283 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5286 ;;		 -> appSKey(16), 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : F/0
  5295 ;;		On exit  : D/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5298 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5302 ;;Total ram usage:        2 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    8
  5305 ;; This function calls:
  5306 ;;		_memcpy
  5307 ;; This function is called by:
  5308 ;;		_main
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text34
  5313  00721A                     __ptext34:
  5314                           	opt stack 0
  5315  00721A                     _LORAWAN_SetApplicationSessionKey:
  5316                           	opt stack 22
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5320                           
  5321                           ; BSR set to: 2
  5322                           ;incstack = 0
  5323  00721A  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5324  00721C  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5325  00721E  B4D8               	btfsc	status,2,c
  5326  007220  0012               	return	
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;lorawan.c: 397: {
  5330                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5331  007222  0E32               	movlw	low (_loRa+50)
  5332  007224  6F64               	movwf	memcpy@d1& (0+255),b
  5333  007226  0E02               	movlw	high (_loRa+50)
  5334  007228  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5335  00722A  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5336  00722E  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5337  007232  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5338  007234  0E10               	movlw	16
  5339  007236  6F68               	movwf	memcpy@n& (0+255),b
  5340  007238  EC44  F034         	call	_memcpy	;wreg free
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5344  00723C  0102               	movlb	2	; () banked
  5345  00723E  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5346                           
  5347                           ; BSR set to: 2
  5348                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5349  007240  9902               	bcf	(_loRa+2)& (0+255),4,b
  5350  007242  0012               	return		;funcret
  5351  007244                     __end_of_LORAWAN_SetApplicationSessionKey:
  5352                           	opt stack 0
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           intcon	equ	0xFF2
  5358                           intcon2	equ	0xFF1
  5359                           intcon3	equ	0xFF0
  5360                           postinc0	equ	0xFEE
  5361                           wreg	equ	0xFE8
  5362                           postdec2	equ	0xFDD
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8
  5366                           
  5367 ;; *************** function _LORAWAN_Mainloop *****************
  5368 ;; Defined at:
  5369 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/1
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:   18
  5390 ;; This function calls:
  5391 ;;		_INTERRUPT_GetDioStatus
  5392 ;;		_RADIO_DIO0
  5393 ;;		_RADIO_DIO1
  5394 ;;		_RADIO_DIO2
  5395 ;;		_RADIO_DIO3
  5396 ;;		_RADIO_DIO4
  5397 ;;		_RADIO_DIO5
  5398 ;;		_SwTimersExecute
  5399 ;; This function is called by:
  5400 ;;		_main
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text35
  5405  006E84                     __ptext35:
  5406                           	opt stack 0
  5407  006E84                     _LORAWAN_Mainloop:
  5408                           	opt stack 12
  5409                           
  5410                           ;lorawan.c: 2240: SwTimersExecute();
  5411                           
  5412                           ;incstack = 0
  5413  006E84  ECD8  F02B         	call	_SwTimersExecute	;wreg free
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5417  006E88  ECEA  F03B         	call	_INTERRUPT_GetDioStatus	;wreg free
  5418  006E8C  6FF1               	movwf	_localDioStatus& (0+255),b
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5422  006E8E  B1F1               	btfsc	_localDioStatus& (0+255),0,b
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;lorawan.c: 2246: {
  5426                           ;lorawan.c: 2247: RADIO_DIO0();
  5427  006E90  EC35  F032         	call	_RADIO_DIO0	;wreg free
  5428                           
  5429                           ;lorawan.c: 2248: }
  5430                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5431  006E94  0100               	movlb	0	; () banked
  5432  006E96  B3F1               	btfsc	_localDioStatus& (0+255),1,b
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;lorawan.c: 2250: {
  5436                           ;lorawan.c: 2251: RADIO_DIO1();
  5437  006E98  EC5F  F037         	call	_RADIO_DIO1	;wreg free
  5438                           
  5439                           ;lorawan.c: 2252: }
  5440                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5441  006E9C  0100               	movlb	0	; () banked
  5442  006E9E  B5F1               	btfsc	_localDioStatus& (0+255),2,b
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;lorawan.c: 2254: {
  5446                           ;lorawan.c: 2255: RADIO_DIO2();
  5447  006EA0  EC1B  F036         	call	_RADIO_DIO2	;wreg free
  5448                           
  5449                           ;lorawan.c: 2256: }
  5450                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5451  006EA4  0100               	movlb	0	; () banked
  5452  006EA6  B7F1               	btfsc	_localDioStatus& (0+255),3,b
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;lorawan.c: 2258: {
  5456                           ;lorawan.c: 2259: RADIO_DIO3();
  5457  006EA8  EC6C  F03B         	call	_RADIO_DIO3	;wreg free
  5458                           
  5459                           ;lorawan.c: 2260: }
  5460                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5461  006EAC  0100               	movlb	0	; () banked
  5462  006EAE  B9F1               	btfsc	_localDioStatus& (0+255),4,b
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;lorawan.c: 2262: {
  5466                           ;lorawan.c: 2263: RADIO_DIO4();
  5467  006EB0  EC60  F03B         	call	_RADIO_DIO4	;wreg free
  5468                           
  5469                           ;lorawan.c: 2264: }
  5470                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5471  006EB4  0100               	movlb	0	; () banked
  5472  006EB6  BBF1               	btfsc	_localDioStatus& (0+255),5,b
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;lorawan.c: 2266: {
  5476                           ;lorawan.c: 2267: RADIO_DIO5();
  5477  006EB8  EC54  F03B         	call	_RADIO_DIO5	;wreg free
  5478  006EBC  0012               	return		;funcret
  5479  006EBE                     __end_of_LORAWAN_Mainloop:
  5480                           	opt stack 0
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           intcon	equ	0xFF2
  5486                           intcon2	equ	0xFF1
  5487                           intcon3	equ	0xFF0
  5488                           postinc0	equ	0xFEE
  5489                           wreg	equ	0xFE8
  5490                           postdec2	equ	0xFDD
  5491                           fsr2h	equ	0xFDA
  5492                           fsr2l	equ	0xFD9
  5493                           status	equ	0xFD8
  5494                           
  5495 ;; *************** function _SwTimersExecute *****************
  5496 ;; Defined at:
  5497 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  i               1  129[BANK0 ] unsigned char 
  5502 ;; Return value:  Size  Location     Type
  5503 ;;                  1    wreg      void 
  5504 ;; Registers used:
  5505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/1
  5508 ;;		On exit  : F/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;Total ram usage:        5 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:   17
  5518 ;; This function calls:
  5519 ;;		Absolute function
  5520 ;;		_AckRetransmissionCallback
  5521 ;;		_AutomaticReplyCallback
  5522 ;;		_DutyCycleCallback
  5523 ;;		_LORAWAN_LinkCheckCallback
  5524 ;;		_LORAWAN_ReceiveWindow1Callback
  5525 ;;		_LORAWAN_ReceiveWindow2Callback
  5526 ;;		_RADIO_RxFSKTimeout
  5527 ;;		_RADIO_WatchdogTimeout
  5528 ;;		_UnconfirmedTransmissionCallback
  5529 ;;		_UpdateJoinSuccessState
  5530 ;; This function is called by:
  5531 ;;		_LORAWAN_Mainloop
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text36
  5536  0057B0                     __ptext36:
  5537                           	opt stack 0
  5538  0057B0                     _SwTimersExecute:
  5539                           	opt stack 12
  5540                           
  5541                           ;sw_timer.c: 262: uint8_t i;
  5542                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5543                           
  5544                           ;incstack = 0
  5545  0057B0  9EF2               	bcf	intcon,7,c	;volatile
  5546                           
  5547                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5548  0057B2  0100               	movlb	0	; () banked
  5549  0057B4  6BE1               	clrf	SwTimersExecute@i& (0+255),b
  5550  0057B6  D050               	goto	l16068
  5551  0057B8                     l16054:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;sw_timer.c: 266: {
  5555                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5556  0057B8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5557  0057BA  0D08               	mullw	8
  5558  0057BC  0E04               	movlw	low (_swTimers+4)
  5559  0057BE  24F3               	addwf	prodl,w,c
  5560  0057C0  6ED9               	movwf	fsr2l,c
  5561  0057C2  0E03               	movlw	high (_swTimers+4)
  5562  0057C4  20F4               	addwfc	prodh,w,c
  5563  0057C6  6EDA               	movwf	fsr2h,c
  5564  0057C8  04DE               	decf	postinc2,w,c
  5565  0057CA  E144               	bnz	l16066
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;sw_timer.c: 270: {
  5569                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5570  0057CC  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5571  0057CE  0D08               	mullw	8
  5572  0057D0  0E00               	movlw	low _swTimers
  5573  0057D2  24F3               	addwf	prodl,w,c
  5574  0057D4  6ED9               	movwf	fsr2l,c
  5575  0057D6  0E03               	movlw	high _swTimers
  5576  0057D8  20F4               	addwfc	prodh,w,c
  5577  0057DA  6EDA               	movwf	fsr2h,c
  5578  0057DC  50DE               	movf	postinc2,w,c
  5579  0057DE  10DE               	iorwf	postinc2,w,c
  5580  0057E0  10DE               	iorwf	postinc2,w,c
  5581  0057E2  10DE               	iorwf	postinc2,w,c
  5582  0057E4  E137               	bnz	l16066
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;sw_timer.c: 272: {
  5586                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5587  0057E6  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5588  0057E8  0D08               	mullw	8
  5589  0057EA  0E04               	movlw	low (_swTimers+4)
  5590  0057EC  24F3               	addwf	prodl,w,c
  5591  0057EE  6ED9               	movwf	fsr2l,c
  5592  0057F0  0E03               	movlw	high (_swTimers+4)
  5593  0057F2  20F4               	addwfc	prodh,w,c
  5594  0057F4  6EDA               	movwf	fsr2h,c
  5595  0057F6  6ADF               	clrf	indf2,c
  5596                           
  5597                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5598  0057F8  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5599  0057FA  0D08               	mullw	8
  5600  0057FC  0E06               	movlw	low (_swTimers+6)
  5601  0057FE  24F3               	addwf	prodl,w,c
  5602  005800  6ED9               	movwf	fsr2l,c
  5603  005802  0E03               	movlw	high (_swTimers+6)
  5604  005804  20F4               	addwfc	prodh,w,c
  5605  005806  6EDA               	movwf	fsr2h,c
  5606  005808  50DE               	movf	postinc2,w,c
  5607  00580A  10DE               	iorwf	postinc2,w,c
  5608  00580C  E023               	bz	l16066
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;sw_timer.c: 275: {
  5612                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5613  00580E  8EF2               	bsf	intcon,7,c	;volatile
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5617  005810  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5618  005812  0D08               	mullw	8
  5619  005814  0E05               	movlw	low (_swTimers+5)
  5620  005816  24F3               	addwf	prodl,w,c
  5621  005818  6ED9               	movwf	fsr2l,c
  5622  00581A  0E03               	movlw	high (_swTimers+5)
  5623  00581C  20F4               	addwfc	prodh,w,c
  5624  00581E  6EDA               	movwf	fsr2h,c
  5625  005820  50DF               	movf	indf2,w,c
  5626  005822  6EE6               	movwf	postinc1,c
  5627  005824  51E1               	movf	SwTimersExecute@i& (0+255),w,b
  5628  005826  0D08               	mullw	8
  5629  005828  0E06               	movlw	low (_swTimers+6)
  5630  00582A  24F3               	addwf	prodl,w,c
  5631  00582C  6ED9               	movwf	fsr2l,c
  5632  00582E  0E03               	movlw	high (_swTimers+6)
  5633  005830  20F4               	addwfc	prodh,w,c
  5634  005832  6EDA               	movwf	fsr2h,c
  5635  005834  CFDE F0DD          	movff	postinc2,??_SwTimersExecute
  5636  005838  CFDD F0DE          	movff	postdec2,??_SwTimersExecute+1
  5637  00583C  D801               	call	u19408
  5638  00583E  D009               	goto	l16064
  5639  005840                     u19408:
  5640  005840  0005               	push	
  5641  005842  6EFA               	movwf	pclath,c
  5642  005844  51DD               	movf	??_SwTimersExecute& (0+255),w,b
  5643  005846  6EFD               	movwf	tosl,c
  5644  005848  51DE               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5645  00584A  6EFE               	movwf	tosh,c
  5646  00584C  6AFF               	clrf	tosu,c
  5647  00584E  50FA               	movf	pclath,w,c
  5648  005850  0012               	return		;indir
  5649  005852                     l16064:
  5650                           
  5651                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5652  005852  9EF2               	bcf	intcon,7,c	;volatile
  5653  005854                     l16066:
  5654  005854  0100               	movlb	0	; () banked
  5655  005856  2BE1               	incf	SwTimersExecute@i& (0+255),f,b
  5656  005858                     l16068:
  5657                           
  5658                           ; BSR set to: 0
  5659  005858  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5660  00585A  5DE1               	subwf	SwTimersExecute@i& (0+255),w,b
  5661  00585C  E3AD               	bnc	l16054
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;sw_timer.c: 279: }
  5665                           ;sw_timer.c: 280: }
  5666                           ;sw_timer.c: 281: }
  5667                           ;sw_timer.c: 282: }
  5668                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5669  00585E  8EF2               	bsf	intcon,7,c	;volatile
  5670                           
  5671                           ; BSR set to: 0
  5672  005860  0012               	return		;funcret
  5673  005862                     __end_of_SwTimersExecute:
  5674                           	opt stack 0
  5675                           tosu	equ	0xFFF
  5676                           tosh	equ	0xFFE
  5677                           tosl	equ	0xFFD
  5678                           pclath	equ	0xFFA
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           prodh	equ	0xFF4
  5684                           prodl	equ	0xFF3
  5685                           intcon	equ	0xFF2
  5686                           intcon2	equ	0xFF1
  5687                           intcon3	equ	0xFF0
  5688                           postinc0	equ	0xFEE
  5689                           wreg	equ	0xFE8
  5690                           postinc1	equ	0xFE6
  5691                           indf2	equ	0xFDF
  5692                           postinc2	equ	0xFDE
  5693                           postdec2	equ	0xFDD
  5694                           fsr2h	equ	0xFDA
  5695                           fsr2l	equ	0xFD9
  5696                           status	equ	0xFD8
  5697                           
  5698 ;; *************** function _DutyCycleCallback *****************
  5699 ;; Defined at:
  5700 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  param           1  [STACK] unsigned char 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  minim           4  [STACK] unsigned long 
  5705 ;;  i               1  [STACK] unsigned char 
  5706 ;;  found           1  [STACK] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1  [STACK] void 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : F/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;Total ram usage:        0 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:   11
  5723 ;; This function calls:
  5724 ;;		_SwTimerSetTimeout
  5725 ;;		_SwTimerStart
  5726 ;;		___lldiv
  5727 ;; This function is called by:
  5728 ;;		_SetCallbackSoftwareTimers
  5729 ;;		_SwTimersExecute
  5730 ;; This function uses a reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text37
  5734  002120                     __ptext37:
  5735                           	opt stack 0
  5736  002120                     _DutyCycleCallback:
  5737                           	opt stack 0
  5738                           
  5739                           ; BSR set to: 0
  5740                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5741  002120  0E0A               	movlw	10
  5742  002122  26E1               	addwf	fsr1l,f,c
  5743  002124  0E00               	movlw	0
  5744  002126  22E2               	addwfc	fsr1h,f,c
  5745                           
  5746                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5747                           
  5748                           ;incstack = 0
  5749  002128  684E               	setf	btemp+8,c
  5750  00212A  684F               	setf	btemp+9,c
  5751  00212C  6850               	setf	btemp+10,c
  5752  00212E  6851               	setf	btemp+11,c
  5753                           
  5754                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5755  002130  0EFA               	movlw	-6
  5756  002132  C04E  FFE3         	movff	btemp+8,plusw1
  5757  002136  0EFB               	movlw	-5
  5758  002138  C04F  FFE3         	movff	btemp+9,plusw1
  5759  00213C  0EFC               	movlw	-4
  5760  00213E  C050  FFE3         	movff	btemp+10,plusw1
  5761  002142  0EFD               	movlw	-3
  5762  002144  C051  FFE3         	movff	btemp+11,plusw1
  5763                           
  5764                           ;lorawan_eu.c: 1224: bool found = 0;
  5765                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5766  002148  0EFF               	movlw	-1
  5767  00214A  6AE3               	clrf	plusw1,c
  5768                           
  5769                           ;lorawan_eu.c: 1225: uint8_t i;
  5770                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5771                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5772  00214C  0EFE               	movlw	-2
  5773  00214E  6AE3               	clrf	plusw1,c
  5774  002150                     l15060:
  5775                           
  5776                           ;lorawan_eu.c: 1228: {
  5777                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5778                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5779  002150  0EFE               	movlw	-2
  5780  002152  50E3               	movf	plusw1,w,c
  5781  002154  0D0E               	mullw	14
  5782  002156  0E04               	movlw	low (_Channels+4)
  5783  002158  24F3               	addwf	prodl,w,c
  5784  00215A  6ED9               	movwf	fsr2l,c
  5785  00215C  0E04               	movlw	high (_Channels+4)
  5786  00215E  20F4               	addwfc	prodh,w,c
  5787  002160  6EDA               	movwf	fsr2h,c
  5788  002162  04DE               	decf	postinc2,w,c
  5789  002164  E001 D0AA          	bnz	l15078
  5790                           
  5791                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5792  002168  0EFE               	movlw	-2
  5793  00216A  50E3               	movf	plusw1,w,c
  5794  00216C  0D0E               	mullw	14
  5795  00216E  0E08               	movlw	low (_Channels+8)
  5796  002170  24F3               	addwf	prodl,w,c
  5797  002172  6ED9               	movwf	fsr2l,c
  5798  002174  0E04               	movlw	high (_Channels+8)
  5799  002176  20F4               	addwfc	prodh,w,c
  5800  002178  6EDA               	movwf	fsr2h,c
  5801  00217A  50DE               	movf	postinc2,w,c
  5802  00217C  10DE               	iorwf	postinc2,w,c
  5803  00217E  10DE               	iorwf	postinc2,w,c
  5804  002180  10DE               	iorwf	postinc2,w,c
  5805  002182  E101 D09B          	bz	l15078
  5806                           
  5807                           ;lorawan_eu.c: 1231: {
  5808                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5809                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5810  002186  0EFE               	movlw	-2
  5811  002188  50E3               	movf	plusw1,w,c
  5812  00218A  0D0E               	mullw	14
  5813  00218C  0E08               	movlw	low (_Channels+8)
  5814  00218E  24F3               	addwf	prodl,w,c
  5815  002190  6ED9               	movwf	fsr2l,c
  5816  002192  0E04               	movlw	high (_Channels+8)
  5817  002194  20F4               	addwfc	prodh,w,c
  5818  002196  6EDA               	movwf	fsr2h,c
  5819  002198  50DE               	movf	postinc2,w,c
  5820  00219A  0102               	movlb	2	; () banked
  5821  00219C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5822  00219E  50DE               	movf	postinc2,w,c
  5823  0021A0  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5824  0021A2  50DE               	movf	postinc2,w,c
  5825  0021A4  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5826  0021A6  50DE               	movf	postinc2,w,c
  5827  0021A8  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5828  0021AA  E22F               	bc	l15068
  5829                           
  5830                           ; BSR set to: 2
  5831                           ;lorawan_eu.c: 1233: {
  5832                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5833                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5834  0021AC  0EFE               	movlw	-2
  5835  0021AE  50E3               	movf	plusw1,w,c
  5836  0021B0  0D0E               	mullw	14
  5837  0021B2  0E08               	movlw	low (_Channels+8)
  5838  0021B4  24F3               	addwf	prodl,w,c
  5839  0021B6  6ED9               	movwf	fsr2l,c
  5840  0021B8  0E04               	movlw	high (_Channels+8)
  5841  0021BA  20F4               	addwfc	prodh,w,c
  5842  0021BC  6EDA               	movwf	fsr2h,c
  5843  0021BE  CFDE F04E          	movff	postinc2,btemp+8
  5844  0021C2  CFDE F04F          	movff	postinc2,btemp+9
  5845  0021C6  CFDE F050          	movff	postinc2,btemp+10
  5846  0021CA  CFDE F051          	movff	postinc2,btemp+11
  5847  0021CE  51C8               	movf	(_loRa+200)& (0+255),w,b
  5848  0021D0  5C4E               	subwf	btemp+8,w,c
  5849  0021D2  6E4A               	movwf	btemp+4,c
  5850  0021D4  51C9               	movf	(_loRa+201)& (0+255),w,b
  5851  0021D6  584F               	subwfb	btemp+9,w,c
  5852  0021D8  6E4B               	movwf	btemp+5,c
  5853  0021DA  51CA               	movf	(_loRa+202)& (0+255),w,b
  5854  0021DC  5850               	subwfb	btemp+10,w,c
  5855  0021DE  6E4C               	movwf	btemp+6,c
  5856  0021E0  51CB               	movf	(_loRa+203)& (0+255),w,b
  5857  0021E2  5851               	subwfb	btemp+11,w,c
  5858  0021E4  6E4D               	movwf	btemp+7,c
  5859                           
  5860                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5861  0021E6  0EFE               	movlw	-2
  5862  0021E8  50E3               	movf	plusw1,w,c
  5863  0021EA  0D0E               	mullw	14
  5864  0021EC  0E08               	movlw	low (_Channels+8)
  5865  0021EE  24F3               	addwf	prodl,w,c
  5866  0021F0  6ED9               	movwf	fsr2l,c
  5867  0021F2  0E04               	movlw	high (_Channels+8)
  5868  0021F4  20F4               	addwfc	prodh,w,c
  5869  0021F6  6EDA               	movwf	fsr2h,c
  5870  0021F8  C04A  FFDE         	movff	btemp+4,postinc2
  5871  0021FC  C04B  FFDE         	movff	btemp+5,postinc2
  5872  002200  C04C  FFDE         	movff	btemp+6,postinc2
  5873  002204  C04D  FFDE         	movff	btemp+7,postinc2
  5874                           
  5875                           ;lorawan_eu.c: 1235: }
  5876  002208  D00D               	goto	l15070
  5877  00220A                     l15068:
  5878                           
  5879                           ; BSR set to: 2
  5880                           ;lorawan_eu.c: 1236: else
  5881                           ;lorawan_eu.c: 1237: {
  5882                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5883                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5884  00220A  0EFE               	movlw	-2
  5885  00220C  50E3               	movf	plusw1,w,c
  5886  00220E  0D0E               	mullw	14
  5887  002210  0E08               	movlw	low (_Channels+8)
  5888  002212  24F3               	addwf	prodl,w,c
  5889  002214  6ED9               	movwf	fsr2l,c
  5890  002216  0E04               	movlw	high (_Channels+8)
  5891  002218  20F4               	addwfc	prodh,w,c
  5892  00221A  6EDA               	movwf	fsr2h,c
  5893  00221C  6ADE               	clrf	postinc2,c
  5894  00221E  6ADE               	clrf	postinc2,c
  5895  002220  6ADE               	clrf	postinc2,c
  5896  002222  6ADD               	clrf	postdec2,c
  5897  002224                     l15070:
  5898                           
  5899                           ; BSR set to: 2
  5900                           ;lorawan_eu.c: 1239: }
  5901                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  5902                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5903  002224  0EFE               	movlw	-2
  5904  002226  50E3               	movf	plusw1,w,c
  5905  002228  0D0E               	mullw	14
  5906  00222A  0E08               	movlw	low (_Channels+8)
  5907  00222C  24F3               	addwf	prodl,w,c
  5908  00222E  6ED9               	movwf	fsr2l,c
  5909  002230  0E04               	movlw	high (_Channels+8)
  5910  002232  20F4               	addwfc	prodh,w,c
  5911  002234  6EDA               	movwf	fsr2h,c
  5912                           
  5913                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5914  002236  0EFA               	movlw	-6
  5915  002238  CFE3 F047          	movff	plusw1,btemp+1
  5916  00223C  50DE               	movf	postinc2,w,c
  5917  00223E  5C47               	subwf	btemp+1,w,c
  5918  002240  0EFB               	movlw	-5
  5919  002242  CFE3 F047          	movff	plusw1,btemp+1
  5920  002246  50DE               	movf	postinc2,w,c
  5921  002248  5847               	subwfb	btemp+1,w,c
  5922  00224A  0EFC               	movlw	-4
  5923  00224C  CFE3 F047          	movff	plusw1,btemp+1
  5924  002250  50DE               	movf	postinc2,w,c
  5925  002252  5847               	subwfb	btemp+1,w,c
  5926  002254  0EFD               	movlw	-3
  5927  002256  CFE3 F047          	movff	plusw1,btemp+1
  5928  00225A  50DE               	movf	postinc2,w,c
  5929  00225C  5847               	subwfb	btemp+1,w,c
  5930  00225E  E32E               	bnc	l15078
  5931                           
  5932                           ; BSR set to: 2
  5933                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5934  002260  0EFE               	movlw	-2
  5935  002262  50E3               	movf	plusw1,w,c
  5936  002264  0D0E               	mullw	14
  5937  002266  0E08               	movlw	low (_Channels+8)
  5938  002268  24F3               	addwf	prodl,w,c
  5939  00226A  6ED9               	movwf	fsr2l,c
  5940  00226C  0E04               	movlw	high (_Channels+8)
  5941  00226E  20F4               	addwfc	prodh,w,c
  5942  002270  6EDA               	movwf	fsr2h,c
  5943  002272  50DE               	movf	postinc2,w,c
  5944  002274  10DE               	iorwf	postinc2,w,c
  5945  002276  10DE               	iorwf	postinc2,w,c
  5946  002278  10DE               	iorwf	postinc2,w,c
  5947  00227A  E020               	bz	l15078
  5948                           
  5949                           ; BSR set to: 2
  5950                           ;lorawan_eu.c: 1241: {
  5951                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  5952                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5953  00227C  0EFE               	movlw	-2
  5954  00227E  50E3               	movf	plusw1,w,c
  5955  002280  0D0E               	mullw	14
  5956  002282  0E08               	movlw	low (_Channels+8)
  5957  002284  24F3               	addwf	prodl,w,c
  5958  002286  6ED9               	movwf	fsr2l,c
  5959  002288  0E04               	movlw	high (_Channels+8)
  5960  00228A  20F4               	addwfc	prodh,w,c
  5961  00228C  6EDA               	movwf	fsr2h,c
  5962  00228E  CFDE F04E          	movff	postinc2,btemp+8
  5963  002292  CFDE F04F          	movff	postinc2,btemp+9
  5964  002296  CFDE F050          	movff	postinc2,btemp+10
  5965  00229A  CFDE F051          	movff	postinc2,btemp+11
  5966                           
  5967                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5968  00229E  0EFA               	movlw	-6
  5969  0022A0  C04E  FFE3         	movff	btemp+8,plusw1
  5970  0022A4  0EFB               	movlw	-5
  5971  0022A6  C04F  FFE3         	movff	btemp+9,plusw1
  5972  0022AA  0EFC               	movlw	-4
  5973  0022AC  C050  FFE3         	movff	btemp+10,plusw1
  5974  0022B0  0EFD               	movlw	-3
  5975  0022B2  C051  FFE3         	movff	btemp+11,plusw1
  5976                           
  5977                           ; BSR set to: 2
  5978                           ;lorawan_eu.c: 1243: found = 1;
  5979                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5980  0022B6  0EFF               	movlw	-1
  5981  0022B8  6AE3               	clrf	plusw1,c
  5982  0022BA  2AE3               	incf	plusw1,f,c
  5983  0022BC                     l15078:
  5984                           
  5985                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5986  0022BC  0EFE               	movlw	-2
  5987  0022BE  2AE3               	incf	plusw1,f,c
  5988                           
  5989                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5990  0022C0  CFE3 F047          	movff	plusw1,btemp+1
  5991  0022C4  0E0F               	movlw	15
  5992  0022C6  6447               	cpfsgt	btemp+1,c
  5993  0022C8  D743               	goto	l15060
  5994                           
  5995                           ;lorawan_eu.c: 1244: }
  5996                           ;lorawan_eu.c: 1245: }
  5997                           ;lorawan_eu.c: 1246: }
  5998                           ;lorawan_eu.c: 1247: if ( found == 1 )
  5999                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6000  0022CA  0EFF               	movlw	-1
  6001  0022CC  04E3               	decf	plusw1,w,c
  6002  0022CE  E001 D096          	bnz	l1297
  6003                           
  6004                           ;lorawan_eu.c: 1248: {
  6005                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  6006                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6007  0022D2  50E1               	movf	fsr1l,w,c
  6008  0022D4  0FFA               	addlw	-6
  6009  0022D6  6ED9               	movwf	fsr2l,c
  6010  0022D8  50E2               	movf	fsr1h,w,c
  6011  0022DA  6EDA               	movwf	fsr2h,c
  6012  0022DC  0EFF               	movlw	255
  6013  0022DE  22DA               	addwfc	fsr2h,f,c
  6014  0022E0  CFDE F2C8          	movff	postinc2,_loRa+200
  6015  0022E4  CFDE F2C9          	movff	postinc2,_loRa+201
  6016  0022E8  CFDE F2CA          	movff	postinc2,_loRa+202
  6017  0022EC  CFDE F2CB          	movff	postinc2,_loRa+203
  6018                           
  6019                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6020                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6021  0022F0  0EFD               	movlw	-3
  6022  0022F2  50E3               	movf	plusw1,w,c
  6023  0022F4  E10D               	bnz	u17610
  6024  0022F6  0EFA               	movlw	-6
  6025  0022F8  28E3               	incf	plusw1,w,c
  6026  0022FA  0EFB               	movlw	-5
  6027  0022FC  CFE3 F047          	movff	plusw1,btemp+1
  6028  002300  0EFF               	movlw	255
  6029  002302  5A47               	subwfb	btemp+1,f,c
  6030  002304  0EFC               	movlw	-4
  6031  002306  CFE3 F047          	movff	plusw1,btemp+1
  6032  00230A  0E0F               	movlw	15
  6033  00230C  5A47               	subwfb	btemp+1,f,c
  6034  00230E  E328               	bnc	l15090
  6035  002310                     u17610:
  6036                           
  6037                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6038  002310  50E1               	movf	fsr1l,w,c
  6039  002312  0FFA               	addlw	-6
  6040  002314  6ED9               	movwf	fsr2l,c
  6041  002316  50E2               	movf	fsr1h,w,c
  6042  002318  6EDA               	movwf	fsr2h,c
  6043  00231A  0EFF               	movlw	255
  6044  00231C  22DA               	addwfc	fsr2h,f,c
  6045  00231E  CFDE F064          	movff	postinc2,___lldiv@dividend
  6046  002322  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6047  002326  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6048  00232A  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6049  00232E  0E7D               	movlw	125
  6050  002330  0100               	movlb	0	; () banked
  6051  002332  6F68               	movwf	___lldiv@divisor& (0+255),b
  6052  002334  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6053  002336  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6054  002338  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6055  00233A  EC1A  F030         	call	___lldiv	;wreg free
  6056  00233E  C064  F04E         	movff	?___lldiv,btemp+8
  6057  002342  C065  F04F         	movff	?___lldiv+1,btemp+9
  6058  002346  C066  F050         	movff	?___lldiv+2,btemp+10
  6059  00234A  C067  F051         	movff	?___lldiv+3,btemp+11
  6060  00234E  0E0C               	movlw	12
  6061  002350                     u17625:
  6062  002350  90D8               	bcf	status,0,c
  6063  002352  364E               	rlcf	btemp+8,f,c
  6064  002354  364F               	rlcf	btemp+9,f,c
  6065  002356  3650               	rlcf	btemp+10,f,c
  6066  002358  3651               	rlcf	btemp+11,f,c
  6067  00235A  2EE8               	decfsz	wreg,f,c
  6068  00235C  D7F9               	goto	u17625
  6069  00235E  D02C               	goto	L1
  6070  002360                     l15090:
  6071                           
  6072                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6073  002360  0EFA               	movlw	-6
  6074  002362  CFE3 F04E          	movff	plusw1,btemp+8
  6075  002366  0EFB               	movlw	-5
  6076  002368  CFE3 F04F          	movff	plusw1,btemp+9
  6077  00236C  0EFC               	movlw	-4
  6078  00236E  CFE3 F050          	movff	plusw1,btemp+10
  6079  002372  0EFD               	movlw	-3
  6080  002374  CFE3 F051          	movff	plusw1,btemp+11
  6081  002378  0E0C               	movlw	12
  6082  00237A                     u17635:
  6083  00237A  90D8               	bcf	status,0,c
  6084  00237C  364E               	rlcf	btemp+8,f,c
  6085  00237E  364F               	rlcf	btemp+9,f,c
  6086  002380  3650               	rlcf	btemp+10,f,c
  6087  002382  3651               	rlcf	btemp+11,f,c
  6088  002384  2EE8               	decfsz	wreg,f,c
  6089  002386  D7F9               	goto	u17635
  6090  002388  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6091  00238C  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6092  002390  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6093  002394  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6094  002398  0E7D               	movlw	125
  6095  00239A  0100               	movlb	0	; () banked
  6096  00239C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6097  00239E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6098  0023A0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6099  0023A2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6100  0023A4  EC1A  F030         	call	___lldiv	;wreg free
  6101  0023A8  C064  F04E         	movff	?___lldiv,btemp+8
  6102  0023AC  C065  F04F         	movff	?___lldiv+1,btemp+9
  6103  0023B0  C066  F050         	movff	?___lldiv+2,btemp+10
  6104  0023B4  C067  F051         	movff	?___lldiv+3,btemp+11
  6105  0023B8                     L1:
  6106                           
  6107                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6108  0023B8  0EF6               	movlw	-10
  6109  0023BA  C04E  FFE3         	movff	btemp+8,plusw1
  6110  0023BE  0EF7               	movlw	-9
  6111  0023C0  C04F  FFE3         	movff	btemp+9,plusw1
  6112  0023C4  0EF8               	movlw	-8
  6113  0023C6  C050  FFE3         	movff	btemp+10,plusw1
  6114  0023CA  0EF9               	movlw	-7
  6115  0023CC  C051  FFE3         	movff	btemp+11,plusw1
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;stkvar	_DutyCycleCallback$2268 @ sp[(-10)+0]
  6119  0023D0  50E1               	movf	fsr1l,w,c
  6120  0023D2  0FF6               	addlw	-10
  6121  0023D4  6ED9               	movwf	fsr2l,c
  6122  0023D6  50E2               	movf	fsr1h,w,c
  6123  0023D8  6EDA               	movwf	fsr2h,c
  6124  0023DA  0EFF               	movlw	255
  6125  0023DC  22DA               	addwfc	fsr2h,f,c
  6126  0023DE  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6127  0023E2  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6128  0023E6  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6129  0023EA  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6130  0023EE  0102               	movlb	2	; () banked
  6131  0023F0  51E9               	movf	(_loRa+233)& (0+255),w,b
  6132  0023F2  ECA5  F036         	call	_SwTimerSetTimeout
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6136  0023F6  0102               	movlb	2	; () banked
  6137  0023F8  51E9               	movf	(_loRa+233)& (0+255),w,b
  6138  0023FA  EC58  F02E         	call	_SwTimerStart
  6139  0023FE                     l1297:
  6140                           
  6141                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6142  0023FE  0EF5               	movlw	245
  6143  002400  26E1               	addwf	fsr1l,f,c
  6144  002402  0EFF               	movlw	255
  6145  002404  22E2               	addwfc	fsr1h,f,c
  6146  002406  0CFF               	retlw	255	;funcret
  6147  002408                     __end_of_DutyCycleCallback:
  6148                           	opt stack 0
  6149                           tosu	equ	0xFFF
  6150                           tosh	equ	0xFFE
  6151                           tosl	equ	0xFFD
  6152                           pclath	equ	0xFFA
  6153                           tblptru	equ	0xFF8
  6154                           tblptrh	equ	0xFF7
  6155                           tblptrl	equ	0xFF6
  6156                           tablat	equ	0xFF5
  6157                           prodh	equ	0xFF4
  6158                           prodl	equ	0xFF3
  6159                           intcon	equ	0xFF2
  6160                           intcon2	equ	0xFF1
  6161                           intcon3	equ	0xFF0
  6162                           postinc0	equ	0xFEE
  6163                           wreg	equ	0xFE8
  6164                           postinc1	equ	0xFE6
  6165                           plusw1	equ	0xFE3
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _UpdateJoinSuccessState *****************
  6176 ;; Defined at:
  6177 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;  param           1  [STACK] unsigned char 
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1  [STACK] void 
  6184 ;; Registers used:
  6185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : F/0
  6188 ;;		On exit  : F/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:   11
  6198 ;; This function calls:
  6199 ;;		_RxJoinResponse
  6200 ;;		_SwTimerSetTimeout
  6201 ;;		_SwTimerStart
  6202 ;;		___lldiv
  6203 ;; This function is called by:
  6204 ;;		_SetCallbackSoftwareTimers
  6205 ;;		_LORAWAN_RxDone
  6206 ;;		_SwTimersExecute
  6207 ;; This function uses a reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text38
  6211  004524                     __ptext38:
  6212                           	opt stack 0
  6213  004524                     _UpdateJoinSuccessState:
  6214                           	opt stack 0
  6215                           
  6216                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6217  004524  52E6               	movf	postinc1,f,c
  6218  004526  52E6               	movf	postinc1,f,c
  6219  004528  52E6               	movf	postinc1,f,c
  6220  00452A  52E6               	movf	postinc1,f,c
  6221                           
  6222                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6223                           
  6224                           ;incstack = 0
  6225  00452C  0102               	movlb	2	; () banked
  6226  00452E  9500               	bcf	_loRa& (0+255),2,b
  6227                           
  6228                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6229  004530  8902               	bsf	(_loRa+2)& (0+255),4,b
  6230                           
  6231                           ; BSR set to: 2
  6232                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6233  004532  0EF0               	movlw	-16
  6234  004534  1702               	andwf	(_loRa+2)& (0+255),f,b
  6235                           
  6236                           ; BSR set to: 2
  6237                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6238  004536  6BD0               	clrf	(_loRa+208)& (0+255),b
  6239  004538  6BD1               	clrf	(_loRa+209)& (0+255),b
  6240                           
  6241                           ; BSR set to: 2
  6242                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6243  00453A  6BEE               	clrf	(_loRa+238)& (0+255),b
  6244                           
  6245                           ; BSR set to: 2
  6246                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6247  00453C  A503               	btfss	(_loRa+3)& (0+255),2,b
  6248  00453E  D074               	goto	l14022
  6249                           
  6250                           ; BSR set to: 2
  6251                           ;lorawan.c: 1052: {
  6252                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6253  004540  51CF               	movf	(_loRa+207)& (0+255),w,b
  6254  004542  E106               	bnz	u15680
  6255  004544  29CC               	incf	(_loRa+204)& (0+255),w,b
  6256  004546  0EFF               	movlw	255
  6257  004548  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6258  00454A  0E0F               	movlw	15
  6259  00454C  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6260  00454E  E321               	bnc	l14016
  6261  004550                     u15680:
  6262                           
  6263                           ; BSR set to: 2
  6264  004550  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6265  004554  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6266  004558  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6267  00455C  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6268  004560  0E7D               	movlw	125
  6269  004562  0100               	movlb	0	; () banked
  6270  004564  6F68               	movwf	___lldiv@divisor& (0+255),b
  6271  004566  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6272  004568  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6273  00456A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6274  00456C  EC1A  F030         	call	___lldiv	;wreg free
  6275  004570  C064  F04E         	movff	?___lldiv,btemp+8
  6276  004574  C065  F04F         	movff	?___lldiv+1,btemp+9
  6277  004578  C066  F050         	movff	?___lldiv+2,btemp+10
  6278  00457C  C067  F051         	movff	?___lldiv+3,btemp+11
  6279  004580  0E0C               	movlw	12
  6280  004582                     u15695:
  6281  004582  90D8               	bcf	status,0,c
  6282  004584  364E               	rlcf	btemp+8,f,c
  6283  004586  364F               	rlcf	btemp+9,f,c
  6284  004588  3650               	rlcf	btemp+10,f,c
  6285  00458A  3651               	rlcf	btemp+11,f,c
  6286  00458C  2EE8               	decfsz	wreg,f,c
  6287  00458E  D7F9               	goto	u15695
  6288  004590  D028               	goto	L2
  6289  004592                     l14016:
  6290                           
  6291                           ; BSR set to: 2
  6292  004592  C2CC  F04E         	movff	_loRa+204,btemp+8
  6293  004596  C2CD  F04F         	movff	_loRa+205,btemp+9
  6294  00459A  C2CE  F050         	movff	_loRa+206,btemp+10
  6295  00459E  C2CF  F051         	movff	_loRa+207,btemp+11
  6296  0045A2  0E0C               	movlw	12
  6297  0045A4                     u15705:
  6298  0045A4  90D8               	bcf	status,0,c
  6299  0045A6  364E               	rlcf	btemp+8,f,c
  6300  0045A8  364F               	rlcf	btemp+9,f,c
  6301  0045AA  3650               	rlcf	btemp+10,f,c
  6302  0045AC  3651               	rlcf	btemp+11,f,c
  6303  0045AE  2EE8               	decfsz	wreg,f,c
  6304  0045B0  D7F9               	goto	u15705
  6305  0045B2  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6306  0045B6  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6307  0045BA  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6308  0045BE  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6309  0045C2  0E7D               	movlw	125
  6310  0045C4  0100               	movlb	0	; () banked
  6311  0045C6  6F68               	movwf	___lldiv@divisor& (0+255),b
  6312  0045C8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6313  0045CA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6314  0045CC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6315  0045CE  EC1A  F030         	call	___lldiv	;wreg free
  6316  0045D2  C064  F04E         	movff	?___lldiv,btemp+8
  6317  0045D6  C065  F04F         	movff	?___lldiv+1,btemp+9
  6318  0045DA  C066  F050         	movff	?___lldiv+2,btemp+10
  6319  0045DE  C067  F051         	movff	?___lldiv+3,btemp+11
  6320  0045E2                     L2:
  6321                           
  6322                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6323  0045E2  0EFC               	movlw	-4
  6324  0045E4  C04E  FFE3         	movff	btemp+8,plusw1
  6325  0045E8  0EFD               	movlw	-3
  6326  0045EA  C04F  FFE3         	movff	btemp+9,plusw1
  6327  0045EE  0EFE               	movlw	-2
  6328  0045F0  C050  FFE3         	movff	btemp+10,plusw1
  6329  0045F4  0EFF               	movlw	-1
  6330  0045F6  C051  FFE3         	movff	btemp+11,plusw1
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;stkvar	_UpdateJoinSuccessState$3533 @ sp[(-4)+0]
  6334  0045FA  50E1               	movf	fsr1l,w,c
  6335  0045FC  0FFC               	addlw	-4
  6336  0045FE  6ED9               	movwf	fsr2l,c
  6337  004600  50E2               	movf	fsr1h,w,c
  6338  004602  6EDA               	movwf	fsr2h,c
  6339  004604  0EFF               	movlw	255
  6340  004606  22DA               	addwfc	fsr2h,f,c
  6341  004608  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6342  00460C  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6343  004610  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6344  004614  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6345  004618  0102               	movlb	2	; () banked
  6346  00461A  51E7               	movf	(_loRa+231)& (0+255),w,b
  6347  00461C  ECA5  F036         	call	_SwTimerSetTimeout
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6351  004620  0102               	movlb	2	; () banked
  6352  004622  51E7               	movf	(_loRa+231)& (0+255),w,b
  6353  004624  EC58  F02E         	call	_SwTimerStart
  6354  004628                     l14022:
  6355                           
  6356                           ;lorawan.c: 1055: }
  6357                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6358  004628  0100               	movlb	0	; () banked
  6359  00462A  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6360  00462C  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
  6361  00462E  E00B               	bz	l2090
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;lorawan.c: 1058: {
  6365                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6366  004630  D801               	call	u15728
  6367  004632  D009               	goto	l2090
  6368  004634                     u15728:
  6369  004634  0005               	push	
  6370  004636  6EFA               	movwf	pclath,c
  6371  004638  51EA               	movf	(_rxPayload+2)& (0+255),w,b
  6372  00463A  6EFD               	movwf	tosl,c
  6373  00463C  51EB               	movf	(_rxPayload+3)& (0+255),w,b
  6374  00463E  6EFE               	movwf	tosh,c
  6375  004640  6AFF               	clrf	tosu,c
  6376  004642  50FA               	movf	pclath,w,c
  6377  004644  0C01               	retlw	1	;indir
  6378  004646                     l2090:
  6379                           
  6380                           ; BSR set to: 0
  6381                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6382  004646  0EFB               	movlw	251
  6383  004648  26E1               	addwf	fsr1l,f,c
  6384  00464A  0EFF               	movlw	255
  6385  00464C  22E2               	addwfc	fsr1h,f,c
  6386  00464E  0CFF               	retlw	255	;funcret
  6387  004650                     __end_of_UpdateJoinSuccessState:
  6388                           	opt stack 0
  6389                           tosu	equ	0xFFF
  6390                           tosh	equ	0xFFE
  6391                           tosl	equ	0xFFD
  6392                           pclath	equ	0xFFA
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           prodh	equ	0xFF4
  6398                           prodl	equ	0xFF3
  6399                           intcon	equ	0xFF2
  6400                           intcon2	equ	0xFF1
  6401                           intcon3	equ	0xFF0
  6402                           postinc0	equ	0xFEE
  6403                           wreg	equ	0xFE8
  6404                           postinc1	equ	0xFE6
  6405                           plusw1	equ	0xFE3
  6406                           fsr1h	equ	0xFE2
  6407                           fsr1l	equ	0xFE1
  6408                           indf2	equ	0xFDF
  6409                           postinc2	equ	0xFDE
  6410                           postdec2	equ	0xFDD
  6411                           fsr2h	equ	0xFDA
  6412                           fsr2l	equ	0xFD9
  6413                           status	equ	0xFD8
  6414                           
  6415 ;; *************** function _AutomaticReplyCallback *****************
  6416 ;; Defined at:
  6417 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  param           1  [STACK] unsigned char 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;		None
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1  [STACK] void 
  6424 ;; Registers used:
  6425 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : F/0
  6428 ;;		On exit  : F/2
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;Total ram usage:        0 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:   14
  6438 ;; This function calls:
  6439 ;;		_LORAWAN_Send
  6440 ;; This function is called by:
  6441 ;;		_SetCallbackSoftwareTimers
  6442 ;;		_SwTimersExecute
  6443 ;; This function uses a reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text39
  6447  0074B0                     __ptext39:
  6448                           	opt stack 0
  6449  0074B0                     _AutomaticReplyCallback:
  6450                           	opt stack 14
  6451                           
  6452                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6453                           
  6454                           ; BSR set to: 0
  6455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6456                           ;incstack = 0
  6457  0074B0  0EF0               	movlw	-16
  6458  0074B2  0102               	movlb	2	; () banked
  6459  0074B4  1702               	andwf	(_loRa+2)& (0+255),f,b
  6460                           
  6461                           ; BSR set to: 2
  6462                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6463  0074B6  0E00               	movlw	0
  6464  0074B8  0100               	movlb	0	; () banked
  6465  0074BA  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
  6466  0074BC  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
  6467  0074BE  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6468  0074C0  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6469  0074C2  EC0D  F02A         	call	_LORAWAN_Send
  6470                           
  6471                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6472  0074C6  0102               	movlb	2	; () banked
  6473  0074C8  9700               	bcf	_loRa& (0+255),3,b
  6474                           
  6475                           ; BSR set to: 2
  6476                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6477  0074CA  52E5               	movf	postdec1,f,c
  6478  0074CC  0012               	return		;funcret
  6479  0074CE                     __end_of_AutomaticReplyCallback:
  6480                           	opt stack 0
  6481                           tosu	equ	0xFFF
  6482                           tosh	equ	0xFFE
  6483                           tosl	equ	0xFFD
  6484                           pclath	equ	0xFFA
  6485                           tblptru	equ	0xFF8
  6486                           tblptrh	equ	0xFF7
  6487                           tblptrl	equ	0xFF6
  6488                           tablat	equ	0xFF5
  6489                           prodh	equ	0xFF4
  6490                           prodl	equ	0xFF3
  6491                           intcon	equ	0xFF2
  6492                           intcon2	equ	0xFF1
  6493                           intcon3	equ	0xFF0
  6494                           postinc0	equ	0xFEE
  6495                           wreg	equ	0xFE8
  6496                           postinc1	equ	0xFE6
  6497                           postdec1	equ	0xFE5
  6498                           plusw1	equ	0xFE3
  6499                           fsr1h	equ	0xFE2
  6500                           fsr1l	equ	0xFE1
  6501                           indf2	equ	0xFDF
  6502                           postinc2	equ	0xFDE
  6503                           postdec2	equ	0xFDD
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function _AckRetransmissionCallback *****************
  6509 ;; Defined at:
  6510 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  param           1  [STACK] unsigned char 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  maximumPacke    1  [STACK] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1  [STACK] void 
  6517 ;; Registers used:
  6518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : F/0
  6521 ;;		On exit  : D/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6528 ;;Total ram usage:        0 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:   13
  6531 ;; This function calls:
  6532 ;;		_FindSmallestDataRate
  6533 ;;		_LORAWAN_GetMaxPayloadSize
  6534 ;;		_RADIO_Transmit
  6535 ;;		_ResetParametersForConfirmedTransmission
  6536 ;;		_RxDataDone
  6537 ;;		_SelectChannelForTransmission
  6538 ;;		_UpdateRetransmissionAckTimeoutState
  6539 ;; This function is called by:
  6540 ;;		_SetCallbackSoftwareTimers
  6541 ;;		_SwTimersExecute
  6542 ;; This function uses a reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text40
  6546  004A7A                     __ptext40:
  6547                           	opt stack 0
  6548  004A7A                     _AckRetransmissionCallback:
  6549                           	opt stack 0
  6550                           
  6551                           ; BSR set to: 2
  6552                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6553  004A7A  52E6               	movf	postinc1,f,c
  6554                           
  6555                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6556                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6557                           
  6558                           ;incstack = 0
  6559  004A7C  0102               	movlb	2	; () banked
  6560  004A7E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6561  004A80  D070               	goto	l15196
  6562                           
  6563                           ; BSR set to: 2
  6564                           ;lorawan.c: 939: {
  6565                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6566  004A82  51D9               	movf	(_loRa+217)& (0+255),w,b
  6567  004A84  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6568  004A86  E352               	bnc	l15186
  6569                           
  6570                           ; BSR set to: 2
  6571                           ;lorawan.c: 941: {
  6572                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6573  004A88  EC87  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6574  004A8C  6E51               	movwf	btemp+11,c
  6575  004A8E  0E0D               	movlw	13
  6576  004A90  2651               	addwf	btemp+11,f,c
  6577                           
  6578                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6579  004A92  0EFF               	movlw	-1
  6580  004A94  C051  FFE3         	movff	btemp+11,plusw1
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6584                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6585  004A98  50E3               	movf	plusw1,w,c
  6586  004A9A  6E47               	movwf	btemp+1,c
  6587  004A9C  6A48               	clrf	btemp+2,c
  6588  004A9E  0102               	movlb	2	; () banked
  6589  004AA0  51D4               	movf	(_loRa+212)& (0+255),w,b
  6590  004AA2  5C47               	subwf	btemp+1,w,c
  6591  004AA4  51D5               	movf	(_loRa+213)& (0+255),w,b
  6592  004AA6  5848               	subwfb	btemp+2,w,c
  6593  004AA8  E333               	bnc	l15180
  6594                           
  6595                           ; BSR set to: 2
  6596                           ;lorawan.c: 946: {
  6597                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6598  004AAA  0E01               	movlw	1
  6599  004AAC  EC5C  F033         	call	_SelectChannelForTransmission
  6600  004AB0  0900               	iorlw	0
  6601  004AB2  E12B               	bnz	l15176
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;lorawan.c: 948: {
  6605                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6606  004AB4  0EF0               	movlw	low (_macBuffer+16)
  6607  004AB6  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  6608  004AB8  0E04               	movlw	high (_macBuffer+16)
  6609  004ABA  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6610  004ABC  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6611  004AC0  ECE2  F017         	call	_RADIO_Transmit	;wreg free
  6612  004AC4  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  6613  004AC8  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  6614  004ACC  5047               	movf	btemp+1,w,c
  6615  004ACE  1048               	iorwf	btemp+2,w,c
  6616  004AD0  E11C               	bnz	l15176
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;lorawan.c: 951: {
  6620                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6621  004AD2  0102               	movlb	2	; () banked
  6622  004AD4  5102               	movf	(_loRa+2)& (0+255),w,b
  6623  004AD6  0BF0               	andlw	-16
  6624  004AD8  0901               	iorlw	1
  6625  004ADA  6F02               	movwf	(_loRa+2)& (0+255),b
  6626                           
  6627                           ; BSR set to: 2
  6628                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6629  004ADC  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6630                           
  6631                           ; BSR set to: 2
  6632                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6633  004ADE  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6634  004AE0  D042               	goto	l2063
  6635                           
  6636                           ; BSR set to: 2
  6637  004AE2  51DF               	movf	(_loRa+223)& (0+255),w,b
  6638  004AE4  E040               	bz	l2063
  6639                           
  6640                           ; BSR set to: 2
  6641  004AE6  51D9               	movf	(_loRa+217)& (0+255),w,b
  6642  004AE8  6E47               	movwf	btemp+1,c
  6643  004AEA  6A48               	clrf	btemp+2,c
  6644  004AEC  51D7               	movf	(_loRa+215)& (0+255),w,b
  6645  004AEE  6E50               	movwf	btemp+10,c
  6646  004AF0  6A51               	clrf	btemp+11,c
  6647  004AF2  2A50               	incf	btemp+10,f,c
  6648  004AF4  0E00               	movlw	0
  6649  004AF6  2251               	addwfc	btemp+11,f,c
  6650  004AF8  5047               	movf	btemp+1,w,c
  6651  004AFA  1850               	xorwf	btemp+10,w,c
  6652  004AFC  E103               	bnz	u17840
  6653  004AFE  5048               	movf	btemp+2,w,c
  6654  004B00  1851               	xorwf	btemp+11,w,c
  6655  004B02  E031               	bz	l2063
  6656  004B04                     u17840:
  6657                           
  6658                           ; BSR set to: 2
  6659                           ;lorawan.c: 957: {
  6660                           ;lorawan.c: 958: FindSmallestDataRate();
  6661  004B04  EC8A  F02C         	call	_FindSmallestDataRate	;wreg free
  6662  004B08  D02E               	goto	l2063
  6663  004B0A                     l15176:
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;lorawan.c: 961: else
  6667                           ;lorawan.c: 962: {
  6668                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6669  004B0A  ECFF  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6670  004B0E  D02B               	goto	l2063
  6671  004B10                     l15180:
  6672                           
  6673                           ; BSR set to: 2
  6674                           ;lorawan.c: 973: else
  6675                           ;lorawan.c: 974: {
  6676                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6677  004B10  ECE3  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6678                           
  6679                           ; BSR set to: 2
  6680                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6681  004B14  0100               	movlb	0	; () banked
  6682  004B16  51E8               	movf	_rxPayload& (0+255),w,b
  6683  004B18  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6684  004B1A  E025               	bz	l2063
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;lorawan.c: 977: {
  6688                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6689  004B1C  6B67               	clrf	RxDataDone@pData& (0+255),b
  6690  004B1E  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  6691  004B20  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  6692  004B22  0E04               	movlw	4
  6693  004B24  6F6A               	movwf	RxDataDone@status& (0+255),b
  6694  004B26  D801               	call	u17868
  6695  004B28  D01E               	goto	l2063
  6696  004B2A                     u17868:
  6697  004B2A  D012               	goto	u17908
  6698  004B2C                     l15186:
  6699                           
  6700                           ; BSR set to: 2
  6701                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6702  004B2C  51D9               	movf	(_loRa+217)& (0+255),w,b
  6703  004B2E  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6704  004B30  E21A               	bc	l2063
  6705                           
  6706                           ; BSR set to: 2
  6707  004B32  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6708  004B34  D018               	goto	l2063
  6709                           
  6710                           ; BSR set to: 2
  6711                           ;lorawan.c: 983: {
  6712                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6713  004B36  ECE3  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6714                           
  6715                           ; BSR set to: 2
  6716                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6717  004B3A  0100               	movlb	0	; () banked
  6718  004B3C  51E8               	movf	_rxPayload& (0+255),w,b
  6719  004B3E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  6720  004B40  E012               	bz	l2063
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;lorawan.c: 986: {
  6724                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6725  004B42  0E00               	movlw	0
  6726  004B44  6B67               	clrf	RxDataDone@pData& (0+255),b
  6727  004B46  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  6728  004B48  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  6729  004B4A  6B6A               	clrf	RxDataDone@status& (0+255),b
  6730  004B4C  D801               	call	u17908
  6731  004B4E  D00B               	goto	l2063
  6732  004B50                     u17908:
  6733  004B50  0005               	push	
  6734  004B52  6EFA               	movwf	pclath,c
  6735  004B54  51E8               	movf	_rxPayload& (0+255),w,b
  6736  004B56  6EFD               	movwf	tosl,c
  6737  004B58  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  6738  004B5A  6EFE               	movwf	tosh,c
  6739  004B5C  6AFF               	clrf	tosu,c
  6740  004B5E  50FA               	movf	pclath,w,c
  6741  004B60  0012               	return		;indir
  6742  004B62                     l15196:
  6743                           
  6744                           ; BSR set to: 2
  6745                           ;lorawan.c: 991: else
  6746                           ;lorawan.c: 992: {
  6747                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6748  004B62  ECE3  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6749  004B66                     l2063:
  6750                           
  6751                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6752  004B66  52E5               	movf	postdec1,f,c
  6753  004B68  52E5               	movf	postdec1,f,c
  6754  004B6A  0012               	return		;funcret
  6755  004B6C                     __end_of_AckRetransmissionCallback:
  6756                           	opt stack 0
  6757                           tosu	equ	0xFFF
  6758                           tosh	equ	0xFFE
  6759                           tosl	equ	0xFFD
  6760                           pclath	equ	0xFFA
  6761                           tblptru	equ	0xFF8
  6762                           tblptrh	equ	0xFF7
  6763                           tblptrl	equ	0xFF6
  6764                           tablat	equ	0xFF5
  6765                           prodh	equ	0xFF4
  6766                           prodl	equ	0xFF3
  6767                           intcon	equ	0xFF2
  6768                           intcon2	equ	0xFF1
  6769                           intcon3	equ	0xFF0
  6770                           postinc0	equ	0xFEE
  6771                           wreg	equ	0xFE8
  6772                           postinc1	equ	0xFE6
  6773                           postdec1	equ	0xFE5
  6774                           plusw1	equ	0xFE3
  6775                           fsr1h	equ	0xFE2
  6776                           fsr1l	equ	0xFE1
  6777                           indf2	equ	0xFDF
  6778                           postinc2	equ	0xFDE
  6779                           postdec2	equ	0xFDD
  6780                           fsr2h	equ	0xFDA
  6781                           fsr2l	equ	0xFD9
  6782                           status	equ	0xFD8
  6783                           
  6784 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6785 ;; Defined at:
  6786 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  param           1  [STACK] unsigned char 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  iCtr            1  [STACK] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1  [STACK] void 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  6795 ;; Tracked objects:
  6796 ;;		On entry : F/0
  6797 ;;		On exit  : D/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;Total ram usage:        0 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:   11
  6807 ;; This function calls:
  6808 ;;		_SwTimerSetTimeout
  6809 ;;		_SwTimerStart
  6810 ;;		___lldiv
  6811 ;; This function is called by:
  6812 ;;		_SetCallbackSoftwareTimers
  6813 ;;		_SwTimersExecute
  6814 ;; This function uses a reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text41
  6818  003FFC                     __ptext41:
  6819                           	opt stack 0
  6820  003FFC                     _LORAWAN_LinkCheckCallback:
  6821                           	opt stack 0
  6822                           
  6823                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6824  003FFC  0E05               	movlw	5
  6825  003FFE  26E1               	addwf	fsr1l,f,c
  6826  004000  0E00               	movlw	0
  6827  004002  22E2               	addwfc	fsr1h,f,c
  6828                           
  6829                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  6830                           
  6831                           ;incstack = 0
  6832  004004  0102               	movlb	2	; () banked
  6833  004006  A103               	btfss	(_loRa+3)& (0+255),0,b
  6834                           
  6835                           ; BSR set to: 2
  6836  004008  A503               	btfss	(_loRa+3)& (0+255),2,b
  6837  00400A  D029               	goto	l15140
  6838                           
  6839                           ; BSR set to: 2
  6840                           ;lorawan.c: 886: {
  6841                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  6842                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6843  00400C  0EFF               	movlw	-1
  6844  00400E  6AE3               	clrf	plusw1,c
  6845  004010  D00E               	goto	l15130
  6846  004012                     l15124:
  6847                           
  6848                           ; BSR set to: 2
  6849                           ;lorawan.c: 889: {
  6850                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  6851                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6852  004012  0EFF               	movlw	-1
  6853  004014  50E3               	movf	plusw1,w,c
  6854  004016  0D02               	mullw	2
  6855  004018  0EA8               	movlw	low (_loRa+168)
  6856  00401A  24F3               	addwf	prodl,w,c
  6857  00401C  6ED9               	movwf	fsr2l,c
  6858  00401E  0E02               	movlw	high (_loRa+168)
  6859  004020  20F4               	addwfc	prodh,w,c
  6860  004022  6EDA               	movwf	fsr2h,c
  6861  004024  0E02               	movlw	2
  6862  004026  18DE               	xorwf	postinc2,w,c
  6863  004028  E008               	bz	l15132
  6864                           
  6865                           ; BSR set to: 2
  6866                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6867  00402A  0EFF               	movlw	-1
  6868  00402C  2AE3               	incf	plusw1,f,c
  6869  00402E                     l15130:
  6870                           
  6871                           ; BSR set to: 2
  6872                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6873  00402E  0EFF               	movlw	-1
  6874  004030  CFE3 F047          	movff	plusw1,btemp+1
  6875  004034  51A7               	movf	(_loRa+167)& (0+255),w,b
  6876  004036  5C47               	subwf	btemp+1,w,c
  6877  004038  E3EC               	bnc	l15124
  6878  00403A                     l15132:
  6879                           
  6880                           ; BSR set to: 2
  6881                           ;lorawan.c: 893: }
  6882                           ;lorawan.c: 894: }
  6883                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  6884                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  6885  00403A  0EFF               	movlw	-1
  6886  00403C  50E3               	movf	plusw1,w,c
  6887  00403E  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  6888  004040  E10E               	bnz	l15140
  6889                           
  6890                           ; BSR set to: 2
  6891                           ;lorawan.c: 897: {
  6892                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  6893  004042  51A7               	movf	(_loRa+167)& (0+255),w,b
  6894  004044  0D02               	mullw	2
  6895  004046  0EA8               	movlw	low (_loRa+168)
  6896  004048  24F3               	addwf	prodl,w,c
  6897  00404A  6ED9               	movwf	fsr2l,c
  6898  00404C  0E02               	movlw	high (_loRa+168)
  6899  00404E  20F4               	addwfc	prodh,w,c
  6900  004050  6EDA               	movwf	fsr2h,c
  6901  004052  0E02               	movlw	2
  6902  004054  6EDF               	movwf	indf2,c
  6903                           
  6904                           ; BSR set to: 2
  6905                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  6906  004056  0E10               	movlw	16
  6907  004058  61A7               	cpfslt	(_loRa+167)& (0+255),b
  6908  00405A  D001               	goto	l15140
  6909                           
  6910                           ; BSR set to: 2
  6911                           ;lorawan.c: 901: {
  6912                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  6913  00405C  2BA7               	incf	(_loRa+167)& (0+255),f,b
  6914  00405E                     l15140:
  6915                           
  6916                           ; BSR set to: 2
  6917                           ;lorawan.c: 903: }
  6918                           ;lorawan.c: 904: }
  6919                           ;lorawan.c: 905: }
  6920                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  6921  00405E  A503               	btfss	(_loRa+3)& (0+255),2,b
  6922  004060  D074               	goto	l2041
  6923                           
  6924                           ; BSR set to: 2
  6925                           ;lorawan.c: 909: {
  6926                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6927  004062  51CF               	movf	(_loRa+207)& (0+255),w,b
  6928  004064  E106               	bnz	u17740
  6929  004066  29CC               	incf	(_loRa+204)& (0+255),w,b
  6930  004068  0EFF               	movlw	255
  6931  00406A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6932  00406C  0E0F               	movlw	15
  6933  00406E  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6934  004070  E321               	bnc	l15146
  6935  004072                     u17740:
  6936                           
  6937                           ; BSR set to: 2
  6938  004072  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6939  004076  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6940  00407A  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6941  00407E  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6942  004082  0E7D               	movlw	125
  6943  004084  0100               	movlb	0	; () banked
  6944  004086  6F68               	movwf	___lldiv@divisor& (0+255),b
  6945  004088  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6946  00408A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6947  00408C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6948  00408E  EC1A  F030         	call	___lldiv	;wreg free
  6949  004092  C064  F04E         	movff	?___lldiv,btemp+8
  6950  004096  C065  F04F         	movff	?___lldiv+1,btemp+9
  6951  00409A  C066  F050         	movff	?___lldiv+2,btemp+10
  6952  00409E  C067  F051         	movff	?___lldiv+3,btemp+11
  6953  0040A2  0E0C               	movlw	12
  6954  0040A4                     u17755:
  6955  0040A4  90D8               	bcf	status,0,c
  6956  0040A6  364E               	rlcf	btemp+8,f,c
  6957  0040A8  364F               	rlcf	btemp+9,f,c
  6958  0040AA  3650               	rlcf	btemp+10,f,c
  6959  0040AC  3651               	rlcf	btemp+11,f,c
  6960  0040AE  2EE8               	decfsz	wreg,f,c
  6961  0040B0  D7F9               	goto	u17755
  6962  0040B2  D028               	goto	L3
  6963  0040B4                     l15146:
  6964                           
  6965                           ; BSR set to: 2
  6966  0040B4  C2CC  F04E         	movff	_loRa+204,btemp+8
  6967  0040B8  C2CD  F04F         	movff	_loRa+205,btemp+9
  6968  0040BC  C2CE  F050         	movff	_loRa+206,btemp+10
  6969  0040C0  C2CF  F051         	movff	_loRa+207,btemp+11
  6970  0040C4  0E0C               	movlw	12
  6971  0040C6                     u17765:
  6972  0040C6  90D8               	bcf	status,0,c
  6973  0040C8  364E               	rlcf	btemp+8,f,c
  6974  0040CA  364F               	rlcf	btemp+9,f,c
  6975  0040CC  3650               	rlcf	btemp+10,f,c
  6976  0040CE  3651               	rlcf	btemp+11,f,c
  6977  0040D0  2EE8               	decfsz	wreg,f,c
  6978  0040D2  D7F9               	goto	u17765
  6979  0040D4  C04E  F064         	movff	btemp+8,___lldiv@dividend
  6980  0040D8  C04F  F065         	movff	btemp+9,___lldiv@dividend+1
  6981  0040DC  C050  F066         	movff	btemp+10,___lldiv@dividend+2
  6982  0040E0  C051  F067         	movff	btemp+11,___lldiv@dividend+3
  6983  0040E4  0E7D               	movlw	125
  6984  0040E6  0100               	movlb	0	; () banked
  6985  0040E8  6F68               	movwf	___lldiv@divisor& (0+255),b
  6986  0040EA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6987  0040EC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6988  0040EE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6989  0040F0  EC1A  F030         	call	___lldiv	;wreg free
  6990  0040F4  C064  F04E         	movff	?___lldiv,btemp+8
  6991  0040F8  C065  F04F         	movff	?___lldiv+1,btemp+9
  6992  0040FC  C066  F050         	movff	?___lldiv+2,btemp+10
  6993  004100  C067  F051         	movff	?___lldiv+3,btemp+11
  6994  004104                     L3:
  6995                           
  6996                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  6997  004104  0EFB               	movlw	-5
  6998  004106  C04E  FFE3         	movff	btemp+8,plusw1
  6999  00410A  0EFC               	movlw	-4
  7000  00410C  C04F  FFE3         	movff	btemp+9,plusw1
  7001  004110  0EFD               	movlw	-3
  7002  004112  C050  FFE3         	movff	btemp+10,plusw1
  7003  004116  0EFE               	movlw	-2
  7004  004118  C051  FFE3         	movff	btemp+11,plusw1
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;stkvar	_LORAWAN_LinkCheckCallback$3516 @ sp[(-5)+0]
  7008  00411C  50E1               	movf	fsr1l,w,c
  7009  00411E  0FFB               	addlw	-5
  7010  004120  6ED9               	movwf	fsr2l,c
  7011  004122  50E2               	movf	fsr1h,w,c
  7012  004124  6EDA               	movwf	fsr2h,c
  7013  004126  0EFF               	movlw	255
  7014  004128  22DA               	addwfc	fsr2h,f,c
  7015  00412A  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  7016  00412E  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7017  004132  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7018  004136  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7019  00413A  0102               	movlb	2	; () banked
  7020  00413C  51E7               	movf	(_loRa+231)& (0+255),w,b
  7021  00413E  ECA5  F036         	call	_SwTimerSetTimeout
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7025  004142  0102               	movlb	2	; () banked
  7026  004144  51E7               	movf	(_loRa+231)& (0+255),w,b
  7027  004146  EC58  F02E         	call	_SwTimerStart
  7028  00414A                     l2041:
  7029                           
  7030                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7031  00414A  0EFA               	movlw	250
  7032  00414C  26E1               	addwf	fsr1l,f,c
  7033  00414E  0EFF               	movlw	255
  7034  004150  22E2               	addwfc	fsr1h,f,c
  7035  004152  0CFF               	retlw	255	;funcret
  7036  004154                     __end_of_LORAWAN_LinkCheckCallback:
  7037                           	opt stack 0
  7038                           tosu	equ	0xFFF
  7039                           tosh	equ	0xFFE
  7040                           tosl	equ	0xFFD
  7041                           pclath	equ	0xFFA
  7042                           tblptru	equ	0xFF8
  7043                           tblptrh	equ	0xFF7
  7044                           tblptrl	equ	0xFF6
  7045                           tablat	equ	0xFF5
  7046                           prodh	equ	0xFF4
  7047                           prodl	equ	0xFF3
  7048                           intcon	equ	0xFF2
  7049                           intcon2	equ	0xFF1
  7050                           intcon3	equ	0xFF0
  7051                           postinc0	equ	0xFEE
  7052                           wreg	equ	0xFE8
  7053                           postinc1	equ	0xFE6
  7054                           postdec1	equ	0xFE5
  7055                           plusw1	equ	0xFE3
  7056                           fsr1h	equ	0xFE2
  7057                           fsr1l	equ	0xFE1
  7058                           indf2	equ	0xFDF
  7059                           postinc2	equ	0xFDE
  7060                           postdec2	equ	0xFDD
  7061                           fsr2h	equ	0xFDA
  7062                           fsr2l	equ	0xFD9
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7066 ;; Defined at:
  7067 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  param           1  [STACK] unsigned char 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  freq            4  [STACK] unsigned long 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1  [STACK] void 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : F/0
  7078 ;;		On exit  : D/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;Total ram usage:        0 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:   13
  7088 ;; This function calls:
  7089 ;;		_ConfigureRadioRx
  7090 ;;		_GetRx1Freq
  7091 ;;		_RADIO_ReceiveStart
  7092 ;;		_RADIO_ReceiveStop
  7093 ;;		_RADIO_ReleaseData
  7094 ;; This function is called by:
  7095 ;;		_SetCallbackSoftwareTimers
  7096 ;;		_SwTimersExecute
  7097 ;; This function uses a reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text42
  7101  005648                     __ptext42:
  7102                           	opt stack 0
  7103  005648                     _LORAWAN_ReceiveWindow1Callback:
  7104                           	opt stack 0
  7105                           
  7106                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7107  005648  52E6               	movf	postinc1,f,c
  7108  00564A  52E6               	movf	postinc1,f,c
  7109  00564C  52E6               	movf	postinc1,f,c
  7110  00564E  52E6               	movf	postinc1,f,c
  7111                           
  7112                           ;lorawan.c: 798: uint32_t freq;
  7113                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7114                           
  7115                           ;incstack = 0
  7116  005650  0102               	movlb	2	; () banked
  7117  005652  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7118  005654  D04E               	goto	l2014
  7119                           
  7120                           ; BSR set to: 2
  7121                           ;lorawan.c: 801: {
  7122                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7123  005656  0E02               	movlw	2
  7124  005658  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7125  00565A  E102               	bnz	l15102
  7126                           
  7127                           ; BSR set to: 2
  7128                           ;lorawan.c: 803: {
  7129                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7130  00565C  EC76  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7131  005660                     l15102:
  7132                           
  7133                           ;lorawan.c: 805: }
  7134                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7135  005660  0102               	movlb	2	; () banked
  7136  005662  51EF               	movf	(_loRa+239)& (0+255),w,b
  7137  005664  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7138  005666  E304               	bnc	l2012
  7139                           
  7140                           ; BSR set to: 2
  7141                           ;lorawan.c: 807: {
  7142                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7143  005668  51EF               	movf	(_loRa+239)& (0+255),w,b
  7144  00566A  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7145  00566C  6F17               	movwf	(_loRa+23)& (0+255),b
  7146                           
  7147                           ;lorawan.c: 809: }
  7148  00566E  D001               	goto	l15106
  7149  005670                     l2012:
  7150                           
  7151                           ; BSR set to: 2
  7152                           ;lorawan.c: 810: else
  7153                           ;lorawan.c: 811: {
  7154                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7155  005670  6B17               	clrf	(_loRa+23)& (0+255),b
  7156  005672                     l15106:
  7157                           
  7158                           ; BSR set to: 2
  7159                           ;lorawan.c: 813: }
  7160                           ;lorawan.c: 815: freq = GetRx1Freq();
  7161  005672  ECC2  F03B         	call	_GetRx1Freq	;wreg free
  7162  005676  C064  F04E         	movff	?_GetRx1Freq,btemp+8
  7163  00567A  C065  F04F         	movff	?_GetRx1Freq+1,btemp+9
  7164  00567E  C066  F050         	movff	?_GetRx1Freq+2,btemp+10
  7165  005682  C067  F051         	movff	?_GetRx1Freq+3,btemp+11
  7166                           
  7167                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7168  005686  0EFC               	movlw	-4
  7169  005688  C04E  FFE3         	movff	btemp+8,plusw1
  7170  00568C  0EFD               	movlw	-3
  7171  00568E  C04F  FFE3         	movff	btemp+9,plusw1
  7172  005692  0EFE               	movlw	-2
  7173  005694  C050  FFE3         	movff	btemp+10,plusw1
  7174  005698  0EFF               	movlw	-1
  7175  00569A  C051  FFE3         	movff	btemp+11,plusw1
  7176                           
  7177                           ; BSR set to: 2
  7178                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7179  00569E  5102               	movf	(_loRa+2)& (0+255),w,b
  7180  0056A0  0BF0               	andlw	-16
  7181  0056A2  0903               	iorlw	3
  7182  0056A4  6F02               	movwf	(_loRa+2)& (0+255),b
  7183                           
  7184                           ; BSR set to: 2
  7185                           ;lorawan.c: 819: RADIO_ReleaseData();
  7186  0056A6  EC9B  F03C         	call	_RADIO_ReleaseData	;wreg free
  7187                           
  7188                           ; BSR set to: 1
  7189                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7190                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7191  0056AA  50E1               	movf	fsr1l,w,c
  7192  0056AC  0FFC               	addlw	-4
  7193  0056AE  6ED9               	movwf	fsr2l,c
  7194  0056B0  50E2               	movf	fsr1h,w,c
  7195  0056B2  6EDA               	movwf	fsr2h,c
  7196  0056B4  0EFF               	movlw	255
  7197  0056B6  22DA               	addwfc	fsr2h,f,c
  7198  0056B8  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7199  0056BC  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7200  0056C0  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7201  0056C4  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7202  0056C8  0102               	movlb	2	; () banked
  7203  0056CA  5117               	movf	(_loRa+23)& (0+255),w,b
  7204  0056CC  EC9B  F039         	call	_ConfigureRadioRx
  7205                           
  7206                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7207  0056D0  0E85               	movlw	low _rxWindowSize
  7208  0056D2  0102               	movlb	2	; () banked
  7209  0056D4  2517               	addwf	(_loRa+23)& (0+255),w,b
  7210  0056D6  6EF6               	movwf	tblptrl,c
  7211  0056D8  6AF7               	clrf	tblptrh,c
  7212  0056DA  0EFF               	movlw	high _rxWindowSize
  7213  0056DC  22F7               	addwfc	tblptrh,f,c
  7214  0056DE                     	if	1	;There are 3 active tblptr bytes
  7215  0056DE  6AF8               	clrf	tblptru,c
  7216  0056E0  0E00               	movlw	low (__mediumconst shr (0+16))
  7217  0056E2  22F8               	addwfc	tblptru,f,c
  7218  0056E4                     	endif
  7219  0056E4  0008               	tblrd		*
  7220  0056E6  50F5               	movf	tablat,w,c
  7221  0056E8  0100               	movlb	0	; () banked
  7222  0056EA  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7223  0056EC  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7224  0056EE  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
  7225  0056F2                     l2014:
  7226                           
  7227                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7228  0056F2  0EFB               	movlw	251
  7229  0056F4  26E1               	addwf	fsr1l,f,c
  7230  0056F6  0EFF               	movlw	255
  7231  0056F8  22E2               	addwfc	fsr1h,f,c
  7232  0056FA  0CFF               	retlw	255	;funcret
  7233  0056FC                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7234                           	opt stack 0
  7235                           tosu	equ	0xFFF
  7236                           tosh	equ	0xFFE
  7237                           tosl	equ	0xFFD
  7238                           pclath	equ	0xFFA
  7239                           tblptru	equ	0xFF8
  7240                           tblptrh	equ	0xFF7
  7241                           tblptrl	equ	0xFF6
  7242                           tablat	equ	0xFF5
  7243                           prodh	equ	0xFF4
  7244                           prodl	equ	0xFF3
  7245                           intcon	equ	0xFF2
  7246                           intcon2	equ	0xFF1
  7247                           intcon3	equ	0xFF0
  7248                           postinc0	equ	0xFEE
  7249                           wreg	equ	0xFE8
  7250                           postinc1	equ	0xFE6
  7251                           postdec1	equ	0xFE5
  7252                           plusw1	equ	0xFE3
  7253                           fsr1h	equ	0xFE2
  7254                           fsr1l	equ	0xFE1
  7255                           indf2	equ	0xFDF
  7256                           postinc2	equ	0xFDE
  7257                           postdec2	equ	0xFDD
  7258                           fsr2h	equ	0xFDA
  7259                           fsr2l	equ	0xFD9
  7260                           status	equ	0xFD8
  7261                           
  7262 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7263 ;; Defined at:
  7264 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  param           1  [STACK] unsigned char 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1  [STACK] void 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : D/0
  7275 ;;		On exit  : D/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:   14
  7285 ;; This function calls:
  7286 ;;		_ConfigureRadioRx
  7287 ;;		_LORAWAN_EnterContinuousReceive
  7288 ;;		_RADIO_GetStatus
  7289 ;;		_RADIO_ReceiveStart
  7290 ;;		_RADIO_ReceiveStop
  7291 ;;		_RADIO_ReleaseData
  7292 ;;		_ResetParametersForConfirmedTransmission
  7293 ;;		_ResetParametersForUnconfirmedTransmission
  7294 ;;		_RxDataDone
  7295 ;; This function is called by:
  7296 ;;		_LORAWAN_RxTimeout
  7297 ;;		_SetCallbackSoftwareTimers
  7298 ;;		_SwTimersExecute
  7299 ;; This function uses a reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text43
  7303  005352                     __ptext43:
  7304                           	opt stack 0
  7305  005352                     _LORAWAN_ReceiveWindow2Callback:
  7306                           	opt stack 12
  7307                           
  7308                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7309                           
  7310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7311                           ;incstack = 0
  7312  005352  0102               	movlb	2	; () banked
  7313  005354  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7314  005356  D057               	goto	l2017
  7315                           
  7316                           ; BSR set to: 2
  7317                           ;lorawan.c: 831: {
  7318                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7319  005358  EC98  F03C         	call	_RADIO_GetStatus	;wreg free
  7320  00535C  6E51               	movwf	btemp+11,c
  7321  00535E  B251               	btfsc	btemp+11,1,c
  7322  005360  D04E               	goto	l13870
  7323                           
  7324                           ; BSR set to: 1
  7325                           ;lorawan.c: 833: {
  7326                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7327  005362  0102               	movlb	2	; () banked
  7328  005364  5102               	movf	(_loRa+2)& (0+255),w,b
  7329  005366  0BF0               	andlw	-16
  7330  005368  0905               	iorlw	5
  7331  00536A  6F02               	movwf	(_loRa+2)& (0+255),b
  7332                           
  7333                           ; BSR set to: 2
  7334                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7335  00536C  EC76  F03A         	call	_RADIO_ReceiveStop	;wreg free
  7336                           
  7337                           ; BSR set to: 1
  7338                           ;lorawan.c: 837: RADIO_ReleaseData();
  7339  005370  EC9B  F03C         	call	_RADIO_ReleaseData	;wreg free
  7340                           
  7341                           ; BSR set to: 1
  7342                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7343  005374  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7344  005378  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7345  00537C  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7346  005380  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7347  005384  0102               	movlb	2	; () banked
  7348  005386  511C               	movf	(_loRa+28)& (0+255),w,b
  7349  005388  EC9B  F039         	call	_ConfigureRadioRx
  7350                           
  7351                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7352  00538C  0102               	movlb	2	; () banked
  7353  00538E  5112               	movf	(_loRa+18)& (0+255),w,b
  7354  005390  E12F               	bnz	l13866
  7355                           
  7356                           ; BSR set to: 2
  7357                           ;lorawan.c: 842: {
  7358                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7359  005392  0E85               	movlw	low _rxWindowSize
  7360  005394  251C               	addwf	(_loRa+28)& (0+255),w,b
  7361  005396  6EF6               	movwf	tblptrl,c
  7362  005398  6AF7               	clrf	tblptrh,c
  7363  00539A  0EFF               	movlw	high _rxWindowSize
  7364  00539C  22F7               	addwfc	tblptrh,f,c
  7365  00539E                     	if	1	;There are 3 active tblptr bytes
  7366  00539E  6AF8               	clrf	tblptru,c
  7367  0053A0  0E00               	movlw	low (__mediumconst shr (0+16))
  7368  0053A2  22F8               	addwfc	tblptru,f,c
  7369  0053A4                     	endif
  7370  0053A4  0008               	tblrd		*
  7371  0053A6  50F5               	movf	tablat,w,c
  7372  0053A8  0100               	movlb	0	; () banked
  7373  0053AA  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7374  0053AC  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7375  0053AE  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
  7376  0053B2  C096  F047         	movff	?_RADIO_ReceiveStart,btemp+1
  7377  0053B6  C097  F048         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7378  0053BA  5047               	movf	btemp+1,w,c
  7379  0053BC  1048               	iorwf	btemp+2,w,c
  7380  0053BE  E02B               	bz	l2026
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;lorawan.c: 844: {
  7384                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7385  0053C0  ECE3  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7386                           
  7387                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7388  0053C4  ECDC  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7389                           
  7390                           ; BSR set to: 2
  7391                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7392  0053C8  0100               	movlb	0	; () banked
  7393  0053CA  51E8               	movf	_rxPayload& (0+255),w,b
  7394  0053CC  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7395  0053CE  E023               	bz	l2026
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;lorawan.c: 848: {
  7399                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7400  0053D0  0E00               	movlw	0
  7401  0053D2  6B67               	clrf	RxDataDone@pData& (0+255),b
  7402  0053D4  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  7403  0053D6  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  7404  0053D8  6B6A               	clrf	RxDataDone@status& (0+255),b
  7405  0053DA  D801               	call	u15368
  7406  0053DC  D01C               	goto	l2026
  7407  0053DE                     u15368:
  7408  0053DE  0005               	push	
  7409  0053E0  6EFA               	movwf	pclath,c
  7410  0053E2  51E8               	movf	_rxPayload& (0+255),w,b
  7411  0053E4  6EFD               	movwf	tosl,c
  7412  0053E6  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7413  0053E8  6EFE               	movwf	tosh,c
  7414  0053EA  6AFF               	clrf	tosu,c
  7415  0053EC  50FA               	movf	pclath,w,c
  7416  0053EE  0012               	return		;indir
  7417  0053F0                     l13866:
  7418                           
  7419                           ; BSR set to: 2
  7420                           ;lorawan.c: 853: else
  7421                           ;lorawan.c: 854: {
  7422                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7423  0053F0  5102               	movf	(_loRa+2)& (0+255),w,b
  7424  0053F2  0BF0               	andlw	-16
  7425  0053F4  0909               	iorlw	9
  7426  0053F6  6F02               	movwf	(_loRa+2)& (0+255),b
  7427                           
  7428                           ; BSR set to: 2
  7429                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7430  0053F8  EC99  F032         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7431  0053FC  D00C               	goto	l2026
  7432  0053FE                     l13870:
  7433                           
  7434                           ; BSR set to: 1
  7435                           ;lorawan.c: 859: else
  7436                           ;lorawan.c: 860: {
  7437                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7438  0053FE  0E01               	movlw	1
  7439  005400  0102               	movlb	2	; () banked
  7440  005402  6FF1               	movwf	(_loRa+241)& (0+255),b
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;lorawan.c: 864: }
  7444                           ;lorawan.c: 865: }
  7445  005404  D008               	goto	l2026
  7446  005406                     l2017:
  7447                           
  7448                           ; BSR set to: 2
  7449                           ;lorawan.c: 866: else
  7450                           ;lorawan.c: 867: {
  7451                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7452  005406  A500               	btfss	_loRa& (0+255),2,b
  7453  005408  D002               	goto	l13874
  7454                           
  7455                           ; BSR set to: 2
  7456                           ;lorawan.c: 871: {
  7457                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7458  00540A  9500               	bcf	_loRa& (0+255),2,b
  7459                           
  7460                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7461  00540C  9902               	bcf	(_loRa+2)& (0+255),4,b
  7462  00540E                     l13874:
  7463                           
  7464                           ; BSR set to: 2
  7465                           ;lorawan.c: 874: }
  7466                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7467  00540E  ECDC  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7468                           
  7469                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7470  005412  ECE3  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7471  005416                     l2026:
  7472                           
  7473                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7474  005416  52E5               	movf	postdec1,f,c
  7475  005418  0012               	return		;funcret
  7476  00541A                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7477                           	opt stack 0
  7478                           tosu	equ	0xFFF
  7479                           tosh	equ	0xFFE
  7480                           tosl	equ	0xFFD
  7481                           pclath	equ	0xFFA
  7482                           tblptru	equ	0xFF8
  7483                           tblptrh	equ	0xFF7
  7484                           tblptrl	equ	0xFF6
  7485                           tablat	equ	0xFF5
  7486                           prodh	equ	0xFF4
  7487                           prodl	equ	0xFF3
  7488                           intcon	equ	0xFF2
  7489                           intcon2	equ	0xFF1
  7490                           intcon3	equ	0xFF0
  7491                           postinc0	equ	0xFEE
  7492                           wreg	equ	0xFE8
  7493                           postinc1	equ	0xFE6
  7494                           postdec1	equ	0xFE5
  7495                           plusw1	equ	0xFE3
  7496                           fsr1h	equ	0xFE2
  7497                           fsr1l	equ	0xFE1
  7498                           indf2	equ	0xFDF
  7499                           postinc2	equ	0xFDE
  7500                           postdec2	equ	0xFDD
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8
  7504                           
  7505 ;; *************** function _RADIO_WatchdogTimeout *****************
  7506 ;; Defined at:
  7507 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  param           1  [STACK] unsigned char 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1  [STACK] void 
  7514 ;; Registers used:
  7515 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : F/0
  7518 ;;		On exit  : C/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;Total ram usage:        0 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:   16
  7528 ;; This function calls:
  7529 ;;		_LORAWAN_RxTimeout
  7530 ;;		_LORAWAN_TxDone
  7531 ;;		_RADIO_WriteMode
  7532 ;; This function is called by:
  7533 ;;		_RADIO_Init
  7534 ;;		_SwTimersExecute
  7535 ;; This function uses a reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text44
  7539  006CC6                     __ptext44:
  7540                           	opt stack 0
  7541  006CC6                     _RADIO_WatchdogTimeout:
  7542                           	opt stack 12
  7543                           
  7544                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7545                           
  7546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7547                           ;incstack = 0
  7548  006CC6  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7549  006CCA  0E01               	movlw	1
  7550  006CCC  0100               	movlb	0	; () banked
  7551  006CCE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7552  006CD0  EC6E  F028         	call	_RADIO_WriteMode
  7553                           
  7554                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7555  006CD4  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7556  006CD8  0E00               	movlw	0
  7557  006CDA  0100               	movlb	0	; () banked
  7558  006CDC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7559  006CDE  EC6E  F028         	call	_RADIO_WriteMode
  7560                           
  7561                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7562  006CE2  0101               	movlb	1	; () banked
  7563  006CE4  898D               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7564                           
  7565                           ; BSR set to: 1
  7566                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7567  006CE6  A38D               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7568  006CE8  D004               	goto	l673
  7569                           
  7570                           ; BSR set to: 1
  7571                           ;radio_driver_SX1276.c: 1414: {
  7572                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7573  006CEA  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7574                           
  7575                           ; BSR set to: 1
  7576                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7577  006CEC  EC71  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7578                           
  7579                           ;radio_driver_SX1276.c: 1417: }
  7580  006CF0  D009               	goto	l676
  7581  006CF2                     l673:
  7582                           
  7583                           ; BSR set to: 1
  7584                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7585  006CF2  A18D               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7586  006CF4  D007               	goto	l676
  7587                           
  7588                           ; BSR set to: 1
  7589                           ;radio_driver_SX1276.c: 1419: {
  7590                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7591  006CF6  918D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7592                           
  7593                           ; BSR set to: 1
  7594                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7595  006CF8  C194  F0A0         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7596  006CFC  C195  F0A1         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7597  006D00  EC8C  F005         	call	_LORAWAN_TxDone	;wreg free
  7598  006D04                     l676:
  7599                           
  7600                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7601  006D04  52E5               	movf	postdec1,f,c
  7602  006D06  0012               	return		;funcret
  7603  006D08                     __end_of_RADIO_WatchdogTimeout:
  7604                           	opt stack 0
  7605                           tosu	equ	0xFFF
  7606                           tosh	equ	0xFFE
  7607                           tosl	equ	0xFFD
  7608                           pclath	equ	0xFFA
  7609                           tblptru	equ	0xFF8
  7610                           tblptrh	equ	0xFF7
  7611                           tblptrl	equ	0xFF6
  7612                           tablat	equ	0xFF5
  7613                           prodh	equ	0xFF4
  7614                           prodl	equ	0xFF3
  7615                           intcon	equ	0xFF2
  7616                           intcon2	equ	0xFF1
  7617                           intcon3	equ	0xFF0
  7618                           postinc0	equ	0xFEE
  7619                           wreg	equ	0xFE8
  7620                           postinc1	equ	0xFE6
  7621                           postdec1	equ	0xFE5
  7622                           plusw1	equ	0xFE3
  7623                           fsr1h	equ	0xFE2
  7624                           fsr1l	equ	0xFE1
  7625                           indf2	equ	0xFDF
  7626                           postinc2	equ	0xFDE
  7627                           postdec2	equ	0xFDD
  7628                           fsr2h	equ	0xFDA
  7629                           fsr2l	equ	0xFD9
  7630                           status	equ	0xFD8
  7631                           
  7632 ;; *************** function _RADIO_RxFSKTimeout *****************
  7633 ;; Defined at:
  7634 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  param           1  [STACK] unsigned char 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  irqFlags        1  [STACK] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1  [STACK] void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : F/0
  7645 ;;		On exit  : D/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7652 ;;Total ram usage:        0 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:   16
  7655 ;; This function calls:
  7656 ;;		_LORAWAN_RxTimeout
  7657 ;;		_RADIO_RegisterRead
  7658 ;;		_RADIO_WriteMode
  7659 ;;		_SwTimerStop
  7660 ;; This function is called by:
  7661 ;;		_RADIO_Init
  7662 ;;		_SwTimersExecute
  7663 ;; This function uses a reentrant model
  7664 ;;
  7665                           
  7666                           	psect	text45
  7667  006FD8                     __ptext45:
  7668                           	opt stack 0
  7669  006FD8                     _RADIO_RxFSKTimeout:
  7670                           	opt stack 0
  7671                           
  7672                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7673  006FD8  52E6               	movf	postinc1,f,c
  7674                           
  7675                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7676                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7677                           
  7678                           ;incstack = 0
  7679  006FDA  0E3E               	movlw	62
  7680  006FDC  ECAE  F039         	call	_RADIO_RegisterRead
  7681  006FE0  6E51               	movwf	btemp+11,c
  7682                           
  7683                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7684  006FE2  0EFF               	movlw	-1
  7685  006FE4  C051  FFE3         	movff	btemp+11,plusw1
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7689                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7690  006FE8  B0E3               	btfsc	plusw1,0,c
  7691  006FEA  D00E               	goto	l670
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;radio_driver_SX1276.c: 1397: {
  7695                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7696  006FEC  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7697  006FF0  0E00               	movlw	0
  7698  006FF2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7699  006FF4  EC6E  F028         	call	_RADIO_WriteMode
  7700                           
  7701                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7702  006FF8  0101               	movlb	1	; () banked
  7703  006FFA  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7704  006FFC  ECB2  F03A         	call	_SwTimerStop
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7708  007000  0101               	movlb	1	; () banked
  7709  007002  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7710                           
  7711                           ; BSR set to: 1
  7712                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7713  007004  EC71  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7714  007008                     l670:
  7715                           
  7716                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7717  007008  52E5               	movf	postdec1,f,c
  7718  00700A  52E5               	movf	postdec1,f,c
  7719  00700C  0012               	return		;funcret
  7720  00700E                     __end_of_RADIO_RxFSKTimeout:
  7721                           	opt stack 0
  7722                           tosu	equ	0xFFF
  7723                           tosh	equ	0xFFE
  7724                           tosl	equ	0xFFD
  7725                           pclath	equ	0xFFA
  7726                           tblptru	equ	0xFF8
  7727                           tblptrh	equ	0xFF7
  7728                           tblptrl	equ	0xFF6
  7729                           tablat	equ	0xFF5
  7730                           prodh	equ	0xFF4
  7731                           prodl	equ	0xFF3
  7732                           intcon	equ	0xFF2
  7733                           intcon2	equ	0xFF1
  7734                           intcon3	equ	0xFF0
  7735                           postinc0	equ	0xFEE
  7736                           wreg	equ	0xFE8
  7737                           postinc1	equ	0xFE6
  7738                           postdec1	equ	0xFE5
  7739                           plusw1	equ	0xFE3
  7740                           fsr1h	equ	0xFE2
  7741                           fsr1l	equ	0xFE1
  7742                           indf2	equ	0xFDF
  7743                           postinc2	equ	0xFDE
  7744                           postdec2	equ	0xFDD
  7745                           fsr2h	equ	0xFDA
  7746                           fsr2l	equ	0xFD9
  7747                           status	equ	0xFD8
  7748                           
  7749 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7750 ;; Defined at:
  7751 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  param           1  [STACK] unsigned char 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1  [STACK] void 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : F/0
  7762 ;;		On exit  : D/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;Total ram usage:        0 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:   13
  7772 ;; This function calls:
  7773 ;;		_RADIO_Transmit
  7774 ;;		_ResetParametersForUnconfirmedTransmission
  7775 ;;		_RxDataDone
  7776 ;;		_SelectChannelForTransmission
  7777 ;; This function is called by:
  7778 ;;		_SetCallbackSoftwareTimers
  7779 ;;		_SwTimersExecute
  7780 ;; This function uses a reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text46
  7784  0062D2                     __ptext46:
  7785                           	opt stack 0
  7786  0062D2                     _UnconfirmedTransmissionCallback:
  7787                           	opt stack 15
  7788                           
  7789                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  7790                           
  7791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7792                           ;incstack = 0
  7793  0062D2  0E01               	movlw	1
  7794  0062D4  EC5C  F033         	call	_SelectChannelForTransmission
  7795  0062D8  0900               	iorlw	0
  7796  0062DA  E116               	bnz	l15206
  7797                           
  7798                           ; BSR set to: 0
  7799  0062DC  0EF0               	movlw	low (_macBuffer+16)
  7800  0062DE  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  7801  0062E0  0E04               	movlw	high (_macBuffer+16)
  7802  0062E2  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  7803  0062E4  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7804  0062E8  ECE2  F017         	call	_RADIO_Transmit	;wreg free
  7805  0062EC  C096  F047         	movff	?_RADIO_Transmit,btemp+1
  7806  0062F0  C097  F048         	movff	?_RADIO_Transmit+1,btemp+2
  7807  0062F4  5047               	movf	btemp+1,w,c
  7808  0062F6  1048               	iorwf	btemp+2,w,c
  7809  0062F8  E107               	bnz	l15206
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;lorawan.c: 1001: {
  7813                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7814  0062FA  0102               	movlb	2	; () banked
  7815  0062FC  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7816                           
  7817                           ; BSR set to: 2
  7818                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7819  0062FE  5102               	movf	(_loRa+2)& (0+255),w,b
  7820  006300  0BF0               	andlw	-16
  7821  006302  0901               	iorlw	1
  7822  006304  6F02               	movwf	(_loRa+2)& (0+255),b
  7823                           
  7824                           ;lorawan.c: 1005: }
  7825  006306  D016               	goto	l2069
  7826  006308                     l15206:
  7827                           
  7828                           ; BSR set to: 0
  7829                           ;lorawan.c: 1006: else
  7830                           ;lorawan.c: 1008: {
  7831                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  7832  006308  ECDC  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7833                           
  7834                           ; BSR set to: 2
  7835                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  7836  00630C  0100               	movlb	0	; () banked
  7837  00630E  51E8               	movf	_rxPayload& (0+255),w,b
  7838  006310  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
  7839  006312  E010               	bz	l2069
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;lorawan.c: 1011: {
  7843                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7844  006314  0E00               	movlw	0
  7845  006316  6B67               	clrf	RxDataDone@pData& (0+255),b
  7846  006318  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
  7847  00631A  6B69               	clrf	RxDataDone@dataLength& (0+255),b
  7848  00631C  6B6A               	clrf	RxDataDone@status& (0+255),b
  7849  00631E  D801               	call	u17948
  7850  006320  D009               	goto	l2069
  7851  006322                     u17948:
  7852  006322  0005               	push	
  7853  006324  6EFA               	movwf	pclath,c
  7854  006326  51E8               	movf	_rxPayload& (0+255),w,b
  7855  006328  6EFD               	movwf	tosl,c
  7856  00632A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
  7857  00632C  6EFE               	movwf	tosh,c
  7858  00632E  6AFF               	clrf	tosu,c
  7859  006330  50FA               	movf	pclath,w,c
  7860  006332  0012               	return		;indir
  7861  006334                     l2069:
  7862                           
  7863                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  7864  006334  52E5               	movf	postdec1,f,c
  7865  006336  0012               	return		;funcret
  7866  006338                     __end_of_UnconfirmedTransmissionCallback:
  7867                           	opt stack 0
  7868                           tosu	equ	0xFFF
  7869                           tosh	equ	0xFFE
  7870                           tosl	equ	0xFFD
  7871                           pclath	equ	0xFFA
  7872                           tblptru	equ	0xFF8
  7873                           tblptrh	equ	0xFF7
  7874                           tblptrl	equ	0xFF6
  7875                           tablat	equ	0xFF5
  7876                           prodh	equ	0xFF4
  7877                           prodl	equ	0xFF3
  7878                           intcon	equ	0xFF2
  7879                           intcon2	equ	0xFF1
  7880                           intcon3	equ	0xFF0
  7881                           postinc0	equ	0xFEE
  7882                           wreg	equ	0xFE8
  7883                           postinc1	equ	0xFE6
  7884                           postdec1	equ	0xFE5
  7885                           plusw1	equ	0xFE3
  7886                           fsr1h	equ	0xFE2
  7887                           fsr1l	equ	0xFE1
  7888                           indf2	equ	0xFDF
  7889                           postinc2	equ	0xFDE
  7890                           postdec2	equ	0xFDD
  7891                           fsr2h	equ	0xFDA
  7892                           fsr2l	equ	0xFD9
  7893                           status	equ	0xFD8
  7894                           
  7895 ;; *************** function _GetRx1Freq *****************
  7896 ;; Defined at:
  7897 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;		None
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  4    4[BANK0 ] unsigned long 
  7904 ;; Registers used:
  7905 ;;		None
  7906 ;; Tracked objects:
  7907 ;;		On entry : F/2
  7908 ;;		On exit  : F/2
  7909 ;;		Unchanged: F/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7911 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;Total ram usage:        4 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    7
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_LORAWAN_ReceiveWindow1Callback
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text47
  7926  007784                     __ptext47:
  7927                           	opt stack 0
  7928  007784                     _GetRx1Freq:
  7929                           	opt stack 20
  7930                           
  7931                           ; BSR set to: 2
  7932                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  7933                           
  7934                           ;incstack = 0
  7935  007784  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  7936  007788  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  7937  00778C  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  7938  007790  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  7939                           
  7940                           ; BSR set to: 2
  7941  007794  0012               	return		;funcret
  7942  007796                     __end_of_GetRx1Freq:
  7943                           	opt stack 0
  7944                           tosu	equ	0xFFF
  7945                           tosh	equ	0xFFE
  7946                           tosl	equ	0xFFD
  7947                           pclath	equ	0xFFA
  7948                           tblptru	equ	0xFF8
  7949                           tblptrh	equ	0xFF7
  7950                           tblptrl	equ	0xFF6
  7951                           tablat	equ	0xFF5
  7952                           prodh	equ	0xFF4
  7953                           prodl	equ	0xFF3
  7954                           intcon	equ	0xFF2
  7955                           intcon2	equ	0xFF1
  7956                           intcon3	equ	0xFF0
  7957                           postinc0	equ	0xFEE
  7958                           wreg	equ	0xFE8
  7959                           postinc1	equ	0xFE6
  7960                           postdec1	equ	0xFE5
  7961                           plusw1	equ	0xFE3
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           indf2	equ	0xFDF
  7965                           postinc2	equ	0xFDE
  7966                           postdec2	equ	0xFDD
  7967                           fsr2h	equ	0xFDA
  7968                           fsr2l	equ	0xFD9
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function _RADIO_DIO5 *****************
  7972 ;; Defined at:
  7973 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  dioMapping      1    0        unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, status,2, status,0, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : F/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;Total ram usage:        1 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:   11
  7994 ;; This function calls:
  7995 ;;		_RADIO_RegisterRead
  7996 ;;		_RADIO_UnhandledInterrupt
  7997 ;; This function is called by:
  7998 ;;		_LORAWAN_Mainloop
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text48
  8003  0076A8                     __ptext48:
  8004                           	opt stack 0
  8005  0076A8                     _RADIO_DIO5:
  8006                           	opt stack 18
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  8010                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  8011                           
  8012                           ; BSR set to: 2
  8013                           ;incstack = 0
  8014  0076A8  0E41               	movlw	65
  8015  0076AA  ECAE  F039         	call	_RADIO_RegisterRead
  8016                           
  8017                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8018  0076AE  0E01               	movlw	1
  8019  0076B0  ECAE  F039         	call	_RADIO_RegisterRead
  8020  0076B4  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8021  0076B6  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  8022  0076B8  0012               	return	
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8026  0076BA  0E01               	movlw	1
  8027  0076BC  EFE5  F039         	goto	_RADIO_UnhandledInterrupt
  8028  0076C0                     __end_of_RADIO_DIO5:
  8029                           	opt stack 0
  8030                           tosu	equ	0xFFF
  8031                           tosh	equ	0xFFE
  8032                           tosl	equ	0xFFD
  8033                           pclath	equ	0xFFA
  8034                           tblptru	equ	0xFF8
  8035                           tblptrh	equ	0xFF7
  8036                           tblptrl	equ	0xFF6
  8037                           tablat	equ	0xFF5
  8038                           prodh	equ	0xFF4
  8039                           prodl	equ	0xFF3
  8040                           intcon	equ	0xFF2
  8041                           intcon2	equ	0xFF1
  8042                           intcon3	equ	0xFF0
  8043                           postinc0	equ	0xFEE
  8044                           wreg	equ	0xFE8
  8045                           postinc1	equ	0xFE6
  8046                           postdec1	equ	0xFE5
  8047                           plusw1	equ	0xFE3
  8048                           fsr1h	equ	0xFE2
  8049                           fsr1l	equ	0xFE1
  8050                           indf2	equ	0xFDF
  8051                           postinc2	equ	0xFDE
  8052                           postdec2	equ	0xFDD
  8053                           fsr2h	equ	0xFDA
  8054                           fsr2l	equ	0xFD9
  8055                           status	equ	0xFD8
  8056                           
  8057 ;; *************** function _RADIO_DIO4 *****************
  8058 ;; Defined at:
  8059 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;		None
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  dioMapping      1    0        unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      void 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : F/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;Total ram usage:        1 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:   11
  8080 ;; This function calls:
  8081 ;;		_RADIO_RegisterRead
  8082 ;;		_RADIO_UnhandledInterrupt
  8083 ;; This function is called by:
  8084 ;;		_LORAWAN_Mainloop
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text49
  8089  0076C0                     __ptext49:
  8090                           	opt stack 0
  8091  0076C0                     _RADIO_DIO4:
  8092                           	opt stack 18
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8096                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8097                           
  8098                           ;incstack = 0
  8099  0076C0  0E41               	movlw	65
  8100  0076C2  ECAE  F039         	call	_RADIO_RegisterRead
  8101                           
  8102                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8103  0076C6  0E01               	movlw	1
  8104  0076C8  ECAE  F039         	call	_RADIO_RegisterRead
  8105  0076CC  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8106  0076CE  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8107  0076D0  0012               	return	
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8111  0076D2  0E01               	movlw	1
  8112  0076D4  EFE5  F039         	goto	_RADIO_UnhandledInterrupt
  8113  0076D8                     __end_of_RADIO_DIO4:
  8114                           	opt stack 0
  8115                           tosu	equ	0xFFF
  8116                           tosh	equ	0xFFE
  8117                           tosl	equ	0xFFD
  8118                           pclath	equ	0xFFA
  8119                           tblptru	equ	0xFF8
  8120                           tblptrh	equ	0xFF7
  8121                           tblptrl	equ	0xFF6
  8122                           tablat	equ	0xFF5
  8123                           prodh	equ	0xFF4
  8124                           prodl	equ	0xFF3
  8125                           intcon	equ	0xFF2
  8126                           intcon2	equ	0xFF1
  8127                           intcon3	equ	0xFF0
  8128                           postinc0	equ	0xFEE
  8129                           wreg	equ	0xFE8
  8130                           postinc1	equ	0xFE6
  8131                           postdec1	equ	0xFE5
  8132                           plusw1	equ	0xFE3
  8133                           fsr1h	equ	0xFE2
  8134                           fsr1l	equ	0xFE1
  8135                           indf2	equ	0xFDF
  8136                           postinc2	equ	0xFDE
  8137                           postdec2	equ	0xFDD
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8
  8141                           
  8142 ;; *************** function _RADIO_DIO3 *****************
  8143 ;; Defined at:
  8144 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;  dioMapping      1    0        unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2, status,0, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : F/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8162 ;;Total ram usage:        1 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:   11
  8165 ;; This function calls:
  8166 ;;		_RADIO_RegisterRead
  8167 ;;		_RADIO_UnhandledInterrupt
  8168 ;; This function is called by:
  8169 ;;		_LORAWAN_Mainloop
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text50
  8174  0076D8                     __ptext50:
  8175                           	opt stack 0
  8176  0076D8                     _RADIO_DIO3:
  8177                           	opt stack 18
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8181                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8182                           
  8183                           ;incstack = 0
  8184  0076D8  0E40               	movlw	64
  8185  0076DA  ECAE  F039         	call	_RADIO_RegisterRead
  8186                           
  8187                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8188  0076DE  0E01               	movlw	1
  8189  0076E0  ECAE  F039         	call	_RADIO_RegisterRead
  8190  0076E4  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8191  0076E6  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8192  0076E8  0012               	return	
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8196  0076EA  0E01               	movlw	1
  8197  0076EC  EFE5  F039         	goto	_RADIO_UnhandledInterrupt
  8198  0076F0                     __end_of_RADIO_DIO3:
  8199                           	opt stack 0
  8200                           tosu	equ	0xFFF
  8201                           tosh	equ	0xFFE
  8202                           tosl	equ	0xFFD
  8203                           pclath	equ	0xFFA
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           prodh	equ	0xFF4
  8209                           prodl	equ	0xFF3
  8210                           intcon	equ	0xFF2
  8211                           intcon2	equ	0xFF1
  8212                           intcon3	equ	0xFF0
  8213                           postinc0	equ	0xFEE
  8214                           wreg	equ	0xFE8
  8215                           postinc1	equ	0xFE6
  8216                           postdec1	equ	0xFE5
  8217                           plusw1	equ	0xFE3
  8218                           fsr1h	equ	0xFE2
  8219                           fsr1l	equ	0xFE1
  8220                           indf2	equ	0xFDF
  8221                           postinc2	equ	0xFDE
  8222                           postdec2	equ	0xFDD
  8223                           fsr2h	equ	0xFDA
  8224                           fsr2l	equ	0xFD9
  8225                           status	equ	0xFD8
  8226                           
  8227 ;; *************** function _RADIO_DIO2 *****************
  8228 ;; Defined at:
  8229 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8234 ;;  opMode          1    0        unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg, status,2, status,0, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : F/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8248 ;;Total ram usage:        2 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:   12
  8251 ;; This function calls:
  8252 ;;		_RADIO_FHSSChangeChannel
  8253 ;;		_RADIO_RegisterRead
  8254 ;;		_RADIO_UnhandledInterrupt
  8255 ;; This function is called by:
  8256 ;;		_LORAWAN_Mainloop
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text51
  8261  006C36                     __ptext51:
  8262                           	opt stack 0
  8263  006C36                     _RADIO_DIO2:
  8264                           	opt stack 17
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8268                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8269                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8270                           
  8271                           ;incstack = 0
  8272  006C36  0E40               	movlw	64
  8273  006C38  ECAE  F039         	call	_RADIO_RegisterRead
  8274  006C3C  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8275  006C3E  90D8               	bcf	status,0,c
  8276  006C40  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8277  006C42  90D8               	bcf	status,0,c
  8278  006C44  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8279  006C46  0B03               	andlw	3
  8280  006C48  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8281                           
  8282                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8283  006C4A  0E01               	movlw	1
  8284  006C4C  ECAE  F039         	call	_RADIO_RegisterRead
  8285                           
  8286                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8287  006C50  0E01               	movlw	1
  8288  006C52  ECAE  F039         	call	_RADIO_RegisterRead
  8289  006C56  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8290  006C58  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8291  006C5A  0012               	return	
  8292  006C5C  D003               	goto	l15304
  8293  006C5E                     l15300:
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8297  006C5E  0E01               	movlw	1
  8298  006C60  EFE5  F039         	goto	_RADIO_UnhandledInterrupt
  8299  006C64                     l15304:
  8300                           
  8301                           ; BSR set to: 0
  8302  006C64  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8303                           
  8304                           ; Switch size 1, requested type "speed"
  8305                           ; Number of cases is 3, Range of values is 0 to 2
  8306                           ; switch strategies available:
  8307                           ; Name         Instructions Cycles
  8308                           ; simple_byte           10     6 (average)
  8309                           ;	Chosen strategy is simple_byte
  8310  006C66  E102 EFB5  F038    	bz	_RADIO_FHSSChangeChannel
  8311  006C6C  0A01               	xorlw	1	; case 1
  8312  006C6E  E102 EFB5  F038    	bz	_RADIO_FHSSChangeChannel
  8313  006C74  0A03               	xorlw	3	; case 2
  8314  006C76  E102 EFB5  F038    	bz	_RADIO_FHSSChangeChannel
  8315  006C7C  D7F0               	goto	l15300
  8316  006C7E                     __end_of_RADIO_DIO2:
  8317                           	opt stack 0
  8318                           tosu	equ	0xFFF
  8319                           tosh	equ	0xFFE
  8320                           tosl	equ	0xFFD
  8321                           pclath	equ	0xFFA
  8322                           tblptru	equ	0xFF8
  8323                           tblptrh	equ	0xFF7
  8324                           tblptrl	equ	0xFF6
  8325                           tablat	equ	0xFF5
  8326                           prodh	equ	0xFF4
  8327                           prodl	equ	0xFF3
  8328                           intcon	equ	0xFF2
  8329                           intcon2	equ	0xFF1
  8330                           intcon3	equ	0xFF0
  8331                           postinc0	equ	0xFEE
  8332                           wreg	equ	0xFE8
  8333                           postinc1	equ	0xFE6
  8334                           postdec1	equ	0xFE5
  8335                           plusw1	equ	0xFE3
  8336                           fsr1h	equ	0xFE2
  8337                           fsr1l	equ	0xFE1
  8338                           indf2	equ	0xFDF
  8339                           postinc2	equ	0xFDE
  8340                           postdec2	equ	0xFDD
  8341                           fsr2h	equ	0xFDA
  8342                           fsr2l	equ	0xFD9
  8343                           status	equ	0xFD8
  8344                           
  8345 ;; *************** function _RADIO_DIO1 *****************
  8346 ;; Defined at:
  8347 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  dioMapping      1   81[BANK0 ] unsigned char 
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : F/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;Total ram usage:        2 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:   17
  8368 ;; This function calls:
  8369 ;;		_RADIO_FHSSChangeChannel
  8370 ;;		_RADIO_RegisterRead
  8371 ;;		_RADIO_RxTimeout
  8372 ;;		_RADIO_UnhandledInterrupt
  8373 ;; This function is called by:
  8374 ;;		_LORAWAN_Mainloop
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text52
  8379  006EBE                     __ptext52:
  8380                           	opt stack 0
  8381  006EBE                     _RADIO_DIO1:
  8382                           	opt stack 12
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8386                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8387                           
  8388                           ;incstack = 0
  8389  006EBE  0E40               	movlw	64
  8390  006EC0  ECAE  F039         	call	_RADIO_RegisterRead
  8391  006EC4  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8392  006EC6  39B0               	swapf	??_RADIO_DIO1& (0+255),w,b
  8393  006EC8  0B0F               	andlw	15
  8394  006ECA  0B03               	andlw	3
  8395  006ECC  6FB1               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8396                           
  8397                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8398  006ECE  0E01               	movlw	1
  8399  006ED0  ECAE  F039         	call	_RADIO_RegisterRead
  8400  006ED4  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8401  006ED6  AFB0               	btfss	??_RADIO_DIO1& (0+255),7,b
  8402  006ED8  D00D               	goto	l15292
  8403  006EDA  D003               	goto	l15288
  8404  006EDC                     l15284:
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8408  006EDC  0E01               	movlw	1
  8409  006EDE  EFE5  F039         	goto	_RADIO_UnhandledInterrupt
  8410  006EE2                     l15288:
  8411                           
  8412                           ; BSR set to: 0
  8413  006EE2  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8414                           
  8415                           ; Switch size 1, requested type "speed"
  8416                           ; Number of cases is 2, Range of values is 0 to 1
  8417                           ; switch strategies available:
  8418                           ; Name         Instructions Cycles
  8419                           ; simple_byte            7     4 (average)
  8420                           ;	Chosen strategy is simple_byte
  8421  006EE4  E102 EF60  F039    	bz	_RADIO_RxTimeout
  8422  006EEA  0A01               	xorlw	1	; case 1
  8423  006EEC  E102 EFB5  F038    	bz	_RADIO_FHSSChangeChannel
  8424  006EF2  D7F4               	goto	l15284
  8425  006EF4                     l15292:
  8426                           
  8427                           ; BSR set to: 0
  8428  006EF4  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8429                           
  8430                           ; Switch size 1, requested type "speed"
  8431                           ; Number of cases is 1, Range of values is 0 to 0
  8432                           ; switch strategies available:
  8433                           ; Name         Instructions Cycles
  8434                           ; simple_byte            4     3 (average)
  8435                           ;	Chosen strategy is simple_byte
  8436  006EF6  0012               	return	
  8437  006EF8                     __end_of_RADIO_DIO1:
  8438                           	opt stack 0
  8439                           tosu	equ	0xFFF
  8440                           tosh	equ	0xFFE
  8441                           tosl	equ	0xFFD
  8442                           pclath	equ	0xFFA
  8443                           tblptru	equ	0xFF8
  8444                           tblptrh	equ	0xFF7
  8445                           tblptrl	equ	0xFF6
  8446                           tablat	equ	0xFF5
  8447                           prodh	equ	0xFF4
  8448                           prodl	equ	0xFF3
  8449                           intcon	equ	0xFF2
  8450                           intcon2	equ	0xFF1
  8451                           intcon3	equ	0xFF0
  8452                           postinc0	equ	0xFEE
  8453                           wreg	equ	0xFE8
  8454                           postinc1	equ	0xFE6
  8455                           postdec1	equ	0xFE5
  8456                           plusw1	equ	0xFE3
  8457                           fsr1h	equ	0xFE2
  8458                           fsr1l	equ	0xFE1
  8459                           indf2	equ	0xFDF
  8460                           postinc2	equ	0xFDE
  8461                           postdec2	equ	0xFDD
  8462                           fsr2h	equ	0xFDA
  8463                           fsr2l	equ	0xFD9
  8464                           status	equ	0xFD8
  8465                           
  8466 ;; *************** function _RADIO_RxTimeout *****************
  8467 ;; Defined at:
  8468 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8477 ;; Tracked objects:
  8478 ;;		On entry : F/0
  8479 ;;		On exit  : D/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;Total ram usage:        0 bytes
  8487 ;; Hardware stack levels used:    1
  8488 ;; Hardware stack levels required when called:   16
  8489 ;; This function calls:
  8490 ;;		_LORAWAN_RxTimeout
  8491 ;;		_RADIO_RegisterWrite
  8492 ;;		_RADIO_WriteMode
  8493 ;;		_SwTimerStop
  8494 ;; This function is called by:
  8495 ;;		_RADIO_DIO1
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text53
  8500  0072C0                     __ptext53:
  8501                           	opt stack 0
  8502  0072C0                     _RADIO_RxTimeout:
  8503                           	opt stack 12
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8507                           
  8508                           ;incstack = 0
  8509  0072C0  0101               	movlb	1	; () banked
  8510  0072C2  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8511  0072C4  ECB2  F03A         	call	_SwTimerStop
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8515  0072C8  0E80               	movlw	128
  8516  0072CA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8517  0072CC  0E12               	movlw	18
  8518  0072CE  EC85  F03A         	call	_RADIO_RegisterWrite
  8519                           
  8520                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8521  0072D2  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8522  0072D6  0E00               	movlw	0
  8523  0072D8  0100               	movlb	0	; () banked
  8524  0072DA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8525  0072DC  EC6E  F028         	call	_RADIO_WriteMode
  8526                           
  8527                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8528  0072E0  0101               	movlb	1	; () banked
  8529  0072E2  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8533  0072E4  EF71  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8534  0072E8                     __end_of_RADIO_RxTimeout:
  8535                           	opt stack 0
  8536                           tosu	equ	0xFFF
  8537                           tosh	equ	0xFFE
  8538                           tosl	equ	0xFFD
  8539                           pclath	equ	0xFFA
  8540                           tblptru	equ	0xFF8
  8541                           tblptrh	equ	0xFF7
  8542                           tblptrl	equ	0xFF6
  8543                           tablat	equ	0xFF5
  8544                           prodh	equ	0xFF4
  8545                           prodl	equ	0xFF3
  8546                           intcon	equ	0xFF2
  8547                           intcon2	equ	0xFF1
  8548                           intcon3	equ	0xFF0
  8549                           postinc0	equ	0xFEE
  8550                           wreg	equ	0xFE8
  8551                           postinc1	equ	0xFE6
  8552                           postdec1	equ	0xFE5
  8553                           plusw1	equ	0xFE3
  8554                           fsr1h	equ	0xFE2
  8555                           fsr1l	equ	0xFE1
  8556                           indf2	equ	0xFDF
  8557                           postinc2	equ	0xFDE
  8558                           postdec2	equ	0xFDD
  8559                           fsr2h	equ	0xFDA
  8560                           fsr2l	equ	0xFD9
  8561                           status	equ	0xFD8
  8562                           
  8563 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8564 ;; Defined at:
  8565 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;		None
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  irqFlags        1    0        unsigned char 
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1    wreg      void 
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : F/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;Total ram usage:        0 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:   11
  8586 ;; This function calls:
  8587 ;;		_RADIO_RegisterRead
  8588 ;;		_RADIO_RegisterWrite
  8589 ;;		_RADIO_WriteFrequency
  8590 ;; This function is called by:
  8591 ;;		_RADIO_DIO1
  8592 ;;		_RADIO_DIO2
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text54
  8597  00716A                     __ptext54:
  8598                           	opt stack 0
  8599  00716A                     _RADIO_FHSSChangeChannel:
  8600                           	opt stack 17
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8604                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8605                           
  8606                           ;incstack = 0
  8607  00716A  0E12               	movlw	18
  8608  00716C  ECAE  F039         	call	_RADIO_RegisterRead
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8612  007170  0101               	movlb	1	; () banked
  8613  007172  5188               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8614  007174  1189               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8615  007176  E00A               	bz	l592
  8616                           
  8617                           ; BSR set to: 1
  8618                           ;radio_driver_SX1276.c: 1164: {
  8619                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8620  007178  5199               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8621  00717A  119A               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8622  00717C  E007               	bz	l592
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;radio_driver_SX1276.c: 1166: {
  8626                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8627  00717E  0100               	movlb	0	; () banked
  8628  007180  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8629  007182  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8630  007184  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8631  007186  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8632  007188  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
  8633  00718C                     l592:
  8634                           
  8635                           ;radio_driver_SX1276.c: 1168: }
  8636                           ;radio_driver_SX1276.c: 1169: }
  8637                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  8638  00718C  0E02               	movlw	2
  8639  00718E  0100               	movlb	0	; () banked
  8640  007190  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8641  007192  0E12               	movlw	18
  8642  007194  EF85  F03A         	goto	_RADIO_RegisterWrite
  8643  007198                     __end_of_RADIO_FHSSChangeChannel:
  8644                           	opt stack 0
  8645                           tosu	equ	0xFFF
  8646                           tosh	equ	0xFFE
  8647                           tosl	equ	0xFFD
  8648                           pclath	equ	0xFFA
  8649                           tblptru	equ	0xFF8
  8650                           tblptrh	equ	0xFF7
  8651                           tblptrl	equ	0xFF6
  8652                           tablat	equ	0xFF5
  8653                           prodh	equ	0xFF4
  8654                           prodl	equ	0xFF3
  8655                           intcon	equ	0xFF2
  8656                           intcon2	equ	0xFF1
  8657                           intcon3	equ	0xFF0
  8658                           postinc0	equ	0xFEE
  8659                           wreg	equ	0xFE8
  8660                           postinc1	equ	0xFE6
  8661                           postdec1	equ	0xFE5
  8662                           plusw1	equ	0xFE3
  8663                           fsr1h	equ	0xFE2
  8664                           fsr1l	equ	0xFE1
  8665                           indf2	equ	0xFDF
  8666                           postinc2	equ	0xFDE
  8667                           postdec2	equ	0xFDD
  8668                           fsr2h	equ	0xFDA
  8669                           fsr2l	equ	0xFD9
  8670                           status	equ	0xFD8
  8671                           
  8672 ;; *************** function _RADIO_DIO0 *****************
  8673 ;; Defined at:
  8674 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;		None
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  opMode          1  135[BANK0 ] unsigned char 
  8679 ;;  dioMapping      1  134[BANK0 ] unsigned char 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8684 ;; Tracked objects:
  8685 ;;		On entry : F/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;Total ram usage:        4 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:   17
  8696 ;; This function calls:
  8697 ;;		_RADIO_FSKPacketSent
  8698 ;;		_RADIO_FSKPayloadReady
  8699 ;;		_RADIO_RegisterRead
  8700 ;;		_RADIO_RxDone
  8701 ;;		_RADIO_TxDone
  8702 ;;		_RADIO_UnhandledInterrupt
  8703 ;; This function is called by:
  8704 ;;		_LORAWAN_Mainloop
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text55
  8709  00646A                     __ptext55:
  8710                           	opt stack 0
  8711  00646A                     _RADIO_DIO0:
  8712                           	opt stack 12
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  8716                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  8717                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  8718                           
  8719                           ;incstack = 0
  8720  00646A  0E40               	movlw	64
  8721  00646C  ECAE  F039         	call	_RADIO_RegisterRead
  8722  006470  6FE4               	movwf	??_RADIO_DIO0& (0+255),b
  8723  006472  0E06               	movlw	6
  8724  006474  6FE5               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  8725  006476                     u18045:
  8726  006476  90D8               	bcf	status,0,c
  8727  006478  33E4               	rrcf	??_RADIO_DIO0& (0+255),f,b
  8728  00647A  2FE5               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  8729  00647C  D7FC               	goto	u18045
  8730  00647E  51E4               	movf	??_RADIO_DIO0& (0+255),w,b
  8731  006480  0B03               	andlw	3
  8732  006482  6FE6               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  8733                           
  8734                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  8735  006484  0E01               	movlw	1
  8736  006486  ECAE  F039         	call	_RADIO_RegisterRead
  8737  00648A  6FE7               	movwf	RADIO_DIO0@opMode& (0+255),b
  8738                           
  8739                           ; BSR set to: 0
  8740                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  8741  00648C  AFE7               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  8742  00648E  D01C               	goto	l15274
  8743  006490  D003               	goto	l15258
  8744  006492                     l15254:
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8748  006492  0E01               	movlw	1
  8749  006494  EFE5  F039         	goto	_RADIO_UnhandledInterrupt
  8750  006498                     l15258:
  8751                           
  8752                           ; BSR set to: 0
  8753  006498  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8754                           
  8755                           ; Switch size 1, requested type "speed"
  8756                           ; Number of cases is 2, Range of values is 0 to 1
  8757                           ; switch strategies available:
  8758                           ; Name         Instructions Cycles
  8759                           ; simple_byte            7     4 (average)
  8760                           ;	Chosen strategy is simple_byte
  8761  00649A  E102 EFDA  F028    	bz	_RADIO_RxDone
  8762  0064A0  0A01               	xorlw	1	; case 1
  8763  0064A2  E102 EFD9  F01D    	bz	_RADIO_TxDone
  8764  0064A8  D7F4               	goto	l15254
  8765  0064AA                     l15260:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  8769  0064AA  0E07               	movlw	7
  8770  0064AC  17E7               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  8771                           
  8772                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  8773  0064AE  0E03               	movlw	3
  8774  0064B0  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8775  0064B2  E102               	bnz	l15264
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;radio_driver_SX1276.c: 1209: {
  8779                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  8780  0064B4  EF10  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  8781  0064B8                     l15264:
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  8785  0064B8  0E05               	movlw	5
  8786  0064BA  19E7               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  8787  0064BC  E102               	bnz	l15270
  8788                           
  8789                           ; BSR set to: 0
  8790                           ;radio_driver_SX1276.c: 1214: {
  8791                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  8792  0064BE  EF2E  F02D         	goto	_RADIO_FSKPayloadReady	;wreg free
  8793  0064C2                     l15270:
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  8797  0064C2  0E00               	movlw	0
  8798  0064C4  EFE5  F039         	goto	_RADIO_UnhandledInterrupt
  8799  0064C8                     l15274:
  8800                           
  8801                           ; BSR set to: 0
  8802  0064C8  51E6               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  8803                           
  8804                           ; Switch size 1, requested type "speed"
  8805                           ; Number of cases is 1, Range of values is 0 to 0
  8806                           ; switch strategies available:
  8807                           ; Name         Instructions Cycles
  8808                           ; simple_byte            4     3 (average)
  8809                           ;	Chosen strategy is simple_byte
  8810  0064CA  E0EF               	bz	l15260
  8811  0064CC  D7FA               	goto	l15270
  8812  0064CE                     __end_of_RADIO_DIO0:
  8813                           	opt stack 0
  8814                           tosu	equ	0xFFF
  8815                           tosh	equ	0xFFE
  8816                           tosl	equ	0xFFD
  8817                           pclath	equ	0xFFA
  8818                           tblptru	equ	0xFF8
  8819                           tblptrh	equ	0xFF7
  8820                           tblptrl	equ	0xFF6
  8821                           tablat	equ	0xFF5
  8822                           prodh	equ	0xFF4
  8823                           prodl	equ	0xFF3
  8824                           intcon	equ	0xFF2
  8825                           intcon2	equ	0xFF1
  8826                           intcon3	equ	0xFF0
  8827                           postinc0	equ	0xFEE
  8828                           wreg	equ	0xFE8
  8829                           postinc1	equ	0xFE6
  8830                           postdec1	equ	0xFE5
  8831                           plusw1	equ	0xFE3
  8832                           fsr1h	equ	0xFE2
  8833                           fsr1l	equ	0xFE1
  8834                           indf2	equ	0xFDF
  8835                           postinc2	equ	0xFDE
  8836                           postdec2	equ	0xFDD
  8837                           fsr2h	equ	0xFDA
  8838                           fsr2l	equ	0xFD9
  8839                           status	equ	0xFD8
  8840                           
  8841 ;; *************** function _RADIO_UnhandledInterrupt *****************
  8842 ;; Defined at:
  8843 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;  modulation      1    wreg     enum E7751
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  modulation      1    8[BANK0 ] enum E7751
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2, status,0, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : F/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;Total ram usage:        1 bytes
  8862 ;; Hardware stack levels used:    1
  8863 ;; Hardware stack levels required when called:   10
  8864 ;; This function calls:
  8865 ;;		_RADIO_RegisterWrite
  8866 ;; This function is called by:
  8867 ;;		_RADIO_DIO0
  8868 ;;		_RADIO_DIO1
  8869 ;;		_RADIO_DIO2
  8870 ;;		_RADIO_DIO3
  8871 ;;		_RADIO_DIO4
  8872 ;;		_RADIO_DIO5
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text56
  8877  0073CA                     __ptext56:
  8878                           	opt stack 0
  8879  0073CA                     _RADIO_UnhandledInterrupt:
  8880                           	opt stack 18
  8881                           
  8882                           ;incstack = 0
  8883                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  8884  0073CA  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  8885                           
  8886                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  8887  0073CC  0100               	movlb	0	; () banked
  8888  0073CE  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  8889  0073D0  E104               	bnz	l14950
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;radio_driver_SX1276.c: 1145: {
  8893                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  8894  0073D2  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8895  0073D4  0E12               	movlw	18
  8896  0073D6  EF85  F03A         	goto	_RADIO_RegisterWrite
  8897  0073DA                     l14950:
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;radio_driver_SX1276.c: 1148: else
  8901                           ;radio_driver_SX1276.c: 1149: {
  8902                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  8903  0073DA  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8904  0073DC  0E3E               	movlw	62
  8905  0073DE  EC85  F03A         	call	_RADIO_RegisterWrite
  8906                           
  8907                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  8908  0073E2  0100               	movlb	0	; () banked
  8909  0073E4  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  8910  0073E6  0E3F               	movlw	63
  8911  0073E8  EF85  F03A         	goto	_RADIO_RegisterWrite
  8912  0073EC                     __end_of_RADIO_UnhandledInterrupt:
  8913                           	opt stack 0
  8914                           tosu	equ	0xFFF
  8915                           tosh	equ	0xFFE
  8916                           tosl	equ	0xFFD
  8917                           pclath	equ	0xFFA
  8918                           tblptru	equ	0xFF8
  8919                           tblptrh	equ	0xFF7
  8920                           tblptrl	equ	0xFF6
  8921                           tablat	equ	0xFF5
  8922                           prodh	equ	0xFF4
  8923                           prodl	equ	0xFF3
  8924                           intcon	equ	0xFF2
  8925                           intcon2	equ	0xFF1
  8926                           intcon3	equ	0xFF0
  8927                           postinc0	equ	0xFEE
  8928                           wreg	equ	0xFE8
  8929                           postinc1	equ	0xFE6
  8930                           postdec1	equ	0xFE5
  8931                           plusw1	equ	0xFE3
  8932                           fsr1h	equ	0xFE2
  8933                           fsr1l	equ	0xFE1
  8934                           indf2	equ	0xFDF
  8935                           postinc2	equ	0xFDE
  8936                           postdec2	equ	0xFDD
  8937                           fsr2h	equ	0xFDA
  8938                           fsr2l	equ	0xFD9
  8939                           status	equ	0xFD8
  8940                           
  8941 ;; *************** function _RADIO_TxDone *****************
  8942 ;; Defined at:
  8943 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;		None
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : F/0
  8954 ;;		On exit  : C/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;Total ram usage:       12 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; Hardware stack levels required when called:   15
  8964 ;; This function calls:
  8965 ;;		_LORAWAN_TxDone
  8966 ;;		_RADIO_RegisterWrite
  8967 ;;		_RADIO_WriteMode
  8968 ;;		_SwTimerReadValue
  8969 ;;		_SwTimerStop
  8970 ;; This function is called by:
  8971 ;;		_RADIO_DIO0
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text57
  8976  003BB2                     __ptext57:
  8977                           	opt stack 0
  8978  003BB2                     _RADIO_TxDone:
  8979                           	opt stack 13
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  8983                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8984                           
  8985                           ;incstack = 0
  8986  003BB2  0101               	movlb	1	; () banked
  8987  003BB4  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8988  003BB6  ECB2  F03A         	call	_SwTimerStop
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  8992  003BBA  0E08               	movlw	8
  8993  003BBC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8994  003BBE  0E12               	movlw	18
  8995  003BC0  EC85  F03A         	call	_RADIO_RegisterWrite
  8996                           
  8997                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8998  003BC4  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8999  003BC8  0E00               	movlw	0
  9000  003BCA  0100               	movlb	0	; () banked
  9001  003BCC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9002  003BCE  EC6E  F028         	call	_RADIO_WriteMode
  9003                           
  9004                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  9005  003BD2  0101               	movlb	1	; () banked
  9006  003BD4  918D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9007                           
  9008                           ; BSR set to: 1
  9009                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  9010  003BD6  B98D               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  9011  003BD8  0012               	return	
  9012                           
  9013                           ; BSR set to: 1
  9014                           ;radio_driver_SX1276.c: 1087: {
  9015                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  9016  003BDA  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9017  003BDC  ECC6  F036         	call	_SwTimerReadValue
  9018  003BE0  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9019  003BE2  E107               	bnz	u17310
  9020  003BE4  0E1F               	movlw	31
  9021  003BE6  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
  9022  003BE8  0EAC               	movlw	172
  9023  003BEA  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9024  003BEC  0EDF               	movlw	223
  9025  003BEE  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9026  003BF0  E346               	bnc	l14916
  9027  003BF2                     u17310:
  9028                           
  9029                           ; BSR set to: 0
  9030  003BF2  0101               	movlb	1	; () banked
  9031  003BF4  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9032  003BF6  ECC6  F036         	call	_SwTimerReadValue
  9033  003BFA  0E0D               	movlw	13
  9034  003BFC  D005               	goto	u17320
  9035  003BFE                     u17325:
  9036  003BFE  90D8               	bcf	status,0,c
  9037  003C00  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9038  003C02  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9039  003C04  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9040  003C06  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9041  003C08                     u17320:
  9042  003C08  2EE8               	decfsz	wreg,f,c
  9043  003C0A  D7F9               	goto	u17325
  9044  003C0C  0E7D               	movlw	125
  9045  003C0E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9046  003C10  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9047  003C14  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9048  003C18  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9049  003C1A  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9050  003C1C  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9051  003C1E  50F3               	movf	prodl,w,c
  9052  003C20  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9053  003C22  50F4               	movf	prodh,w,c
  9054  003C24  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9055  003C26  0E00               	movlw	0
  9056  003C28  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9057  003C2A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9058  003C2C  50F3               	movf	prodl,w,c
  9059  003C2E  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9060  003C30  50F4               	movf	prodh,w,c
  9061  003C32  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9062  003C34  0E00               	movlw	0
  9063  003C36  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9064  003C38  0E7D               	movlw	125
  9065  003C3A  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9066  003C3C  50F3               	movf	prodl,w,c
  9067  003C3E  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9068  003C40  50F4               	movf	prodh,w,c
  9069  003C42  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9070  003C44  0E00               	movlw	0
  9071  003C46  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9072  003C48  50F3               	movf	prodl,w,c
  9073  003C4A  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9074  003C4C  50F4               	movf	prodh,w,c
  9075  003C4E  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9076  003C50  0E00               	movlw	0
  9077  003C52  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9078  003C54  50F3               	movf	prodl,w,c
  9079  003C56  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9080  003C58  50F4               	movf	prodh,w,c
  9081  003C5A  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9082  003C5C  0E7D               	movlw	125
  9083  003C5E  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9084  003C60  50F3               	movf	prodl,w,c
  9085  003C62  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9086  003C64  0E00               	movlw	0
  9087  003C66  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9088  003C68  50F3               	movf	prodl,w,c
  9089  003C6A  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9090  003C6C  0E00               	movlw	0
  9091  003C6E  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9092  003C70  50F3               	movf	prodl,w,c
  9093  003C72  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9094  003C74  0E00               	movlw	0
  9095  003C76  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9096  003C78  50F3               	movf	prodl,w,c
  9097  003C7A  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9098  003C7C  D045               	goto	L4
  9099  003C7E                     l14916:
  9100                           
  9101                           ; BSR set to: 0
  9102  003C7E  0101               	movlb	1	; () banked
  9103  003C80  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9104  003C82  ECC6  F036         	call	_SwTimerReadValue
  9105  003C86  0E7D               	movlw	125
  9106  003C88  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9107  003C8A  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9108  003C8E  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9109  003C92  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9110  003C94  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9111  003C96  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9112  003C98  50F3               	movf	prodl,w,c
  9113  003C9A  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9114  003C9C  50F4               	movf	prodh,w,c
  9115  003C9E  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9116  003CA0  0E00               	movlw	0
  9117  003CA2  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9118  003CA4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9119  003CA6  50F3               	movf	prodl,w,c
  9120  003CA8  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9121  003CAA  50F4               	movf	prodh,w,c
  9122  003CAC  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9123  003CAE  0E00               	movlw	0
  9124  003CB0  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9125  003CB2  0E7D               	movlw	125
  9126  003CB4  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9127  003CB6  50F3               	movf	prodl,w,c
  9128  003CB8  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9129  003CBA  50F4               	movf	prodh,w,c
  9130  003CBC  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9131  003CBE  0E00               	movlw	0
  9132  003CC0  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9133  003CC2  50F3               	movf	prodl,w,c
  9134  003CC4  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9135  003CC6  50F4               	movf	prodh,w,c
  9136  003CC8  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9137  003CCA  0E00               	movlw	0
  9138  003CCC  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9139  003CCE  50F3               	movf	prodl,w,c
  9140  003CD0  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9141  003CD2  50F4               	movf	prodh,w,c
  9142  003CD4  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9143  003CD6  0E7D               	movlw	125
  9144  003CD8  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9145  003CDA  50F3               	movf	prodl,w,c
  9146  003CDC  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9147  003CDE  0E00               	movlw	0
  9148  003CE0  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9149  003CE2  50F3               	movf	prodl,w,c
  9150  003CE4  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9151  003CE6  0E00               	movlw	0
  9152  003CE8  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9153  003CEA  50F3               	movf	prodl,w,c
  9154  003CEC  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9155  003CEE  0E00               	movlw	0
  9156  003CF0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9157  003CF2  50F3               	movf	prodl,w,c
  9158  003CF4  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9159  003CF6  0E0D               	movlw	13
  9160  003CF8  D005               	goto	u17330
  9161  003CFA                     u17335:
  9162  003CFA  90D8               	bcf	status,0,c
  9163  003CFC  33D5               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9164  003CFE  33D4               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9165  003D00  33D3               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9166  003D02  33D2               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9167  003D04                     u17330:
  9168  003D04  2EE8               	decfsz	wreg,f,c
  9169  003D06  D7F9               	goto	u17335
  9170  003D08                     L4:
  9171  003D08  C0D2  F0DA         	movff	??_RADIO_TxDone,_RADIO_TxDone$1211
  9172  003D0C  C0D3  F0DB         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1211+1
  9173  003D10  C0D4  F0DC         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1211+2
  9174  003D14  C0D5  F0DD         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1211+3
  9175                           
  9176                           ; BSR set to: 0
  9177  003D18  51DA               	movf	_RADIO_TxDone$1211& (0+255),w,b
  9178  003D1A  0820               	sublw	32
  9179  003D1C  6FD6               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9180  003D1E  0E4E               	movlw	78
  9181  003D20  55DB               	subfwb	(_RADIO_TxDone$1211+1)& (0+255),w,b
  9182  003D22  6FD7               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9183  003D24  0E00               	movlw	0
  9184  003D26  55DC               	subfwb	(_RADIO_TxDone$1211+2)& (0+255),w,b
  9185  003D28  6FD8               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9186  003D2A  0E00               	movlw	0
  9187  003D2C  55DD               	subfwb	(_RADIO_TxDone$1211+3)& (0+255),w,b
  9188  003D2E  6FD9               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9192  003D30  C0D6  F0A0         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9193  003D34  C0D7  F0A1         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9194  003D38  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
  9195  003D3C                     __end_of_RADIO_TxDone:
  9196                           	opt stack 0
  9197                           tosu	equ	0xFFF
  9198                           tosh	equ	0xFFE
  9199                           tosl	equ	0xFFD
  9200                           pclath	equ	0xFFA
  9201                           tblptru	equ	0xFF8
  9202                           tblptrh	equ	0xFF7
  9203                           tblptrl	equ	0xFF6
  9204                           tablat	equ	0xFF5
  9205                           prodh	equ	0xFF4
  9206                           prodl	equ	0xFF3
  9207                           intcon	equ	0xFF2
  9208                           intcon2	equ	0xFF1
  9209                           intcon3	equ	0xFF0
  9210                           postinc0	equ	0xFEE
  9211                           wreg	equ	0xFE8
  9212                           postinc1	equ	0xFE6
  9213                           postdec1	equ	0xFE5
  9214                           plusw1	equ	0xFE3
  9215                           fsr1h	equ	0xFE2
  9216                           fsr1l	equ	0xFE1
  9217                           indf2	equ	0xFDF
  9218                           postinc2	equ	0xFDE
  9219                           postdec2	equ	0xFDD
  9220                           fsr2h	equ	0xFDA
  9221                           fsr2l	equ	0xFD9
  9222                           status	equ	0xFD8
  9223                           
  9224 ;; *************** function _RADIO_RxDone *****************
  9225 ;; Defined at:
  9226 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;		None
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  i               1  131[BANK0 ] unsigned char 
  9231 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : F/0
  9238 ;;		On exit  : D/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9245 ;;Total ram usage:        2 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; Hardware stack levels required when called:   16
  9248 ;; This function calls:
  9249 ;;		_HALSPICSAssert
  9250 ;;		_HALSPICSDeassert
  9251 ;;		_HALSPISend
  9252 ;;		_LORAWAN_RxDone
  9253 ;;		_RADIO_RegisterRead
  9254 ;;		_RADIO_RegisterWrite
  9255 ;;		_RADIO_WriteMode
  9256 ;;		_SwTimerStop
  9257 ;;		___abdiv
  9258 ;; This function is called by:
  9259 ;;		_RADIO_DIO0
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text58
  9264  0051B4                     __ptext58:
  9265                           	opt stack 0
  9266  0051B4                     _RADIO_RxDone:
  9267                           	opt stack 12
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9271                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9272                           
  9273                           ;incstack = 0
  9274  0051B4  0E12               	movlw	18
  9275  0051B6  ECAE  F039         	call	_RADIO_RegisterRead
  9276  0051BA  6FE2               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9277                           
  9278                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9279  0051BC  0E70               	movlw	112
  9280  0051BE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9281  0051C0  0E12               	movlw	18
  9282  0051C2  EC85  F03A         	call	_RADIO_RegisterWrite
  9283                           
  9284                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9285  0051C6  0100               	movlb	0	; () banked
  9286  0051C8  51E2               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9287  0051CA  0B50               	andlw	80
  9288  0051CC  0A50               	xorlw	80
  9289  0051CE  A4D8               	btfss	status,2,c
  9290  0051D0  0012               	return	
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;radio_driver_SX1276.c: 969: {
  9294                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9295  0051D2  0101               	movlb	1	; () banked
  9296  0051D4  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9297  0051D6  ECB2  F03A         	call	_SwTimerStop
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9301  0051DA  0E1C               	movlw	28
  9302  0051DC  ECAE  F039         	call	_RADIO_RegisterRead
  9303  0051E0  6FE3               	movwf	RADIO_RxDone@i& (0+255),b
  9304                           
  9305                           ; BSR set to: 0
  9306                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9307  0051E2  0101               	movlb	1	; () banked
  9308  0051E4  5186               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9309  0051E6  E004               	bz	l14818
  9310                           
  9311                           ; BSR set to: 1
  9312  0051E8  0100               	movlb	0	; () banked
  9313  0051EA  ABE2               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9314                           
  9315                           ; BSR set to: 0
  9316  0051EC  ADE3               	btfss	RADIO_RxDone@i& (0+255),6,b
  9317  0051EE  D037               	goto	l14840
  9318  0051F0                     l14818:
  9319                           
  9320                           ;radio_driver_SX1276.c: 976: {
  9321                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9322  0051F0  0E13               	movlw	19
  9323  0051F2  ECAE  F039         	call	_RADIO_RegisterRead
  9324  0051F6  0101               	movlb	1	; () banked
  9325  0051F8  6F8E               	movwf	(_RadioConfiguration+36)& (0+255),b
  9326                           
  9327                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9328  0051FA  0100               	movlb	0	; () banked
  9329  0051FC  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9330  0051FE  0E0D               	movlw	13
  9331  005200  EC85  F03A         	call	_RADIO_RegisterWrite
  9332                           
  9333                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9334  005204  ECBC  F03C         	call	_HALSPICSAssert	;wreg free
  9335                           
  9336                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9337  005208  0E00               	movlw	0
  9338  00520A  EC63  F03C         	call	_HALSPISend
  9339                           
  9340                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9341  00520E  0100               	movlb	0	; () banked
  9342  005210  6BE3               	clrf	RADIO_RxDone@i& (0+255),b
  9343  005212  D00D               	goto	l14830
  9344  005214                     l14826:
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;radio_driver_SX1276.c: 990: {
  9348                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9349  005214  51E3               	movf	RADIO_RxDone@i& (0+255),w,b
  9350  005216  0101               	movlb	1	; () banked
  9351  005218  258F               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9352  00521A  6ED9               	movwf	fsr2l,c
  9353  00521C  0E00               	movlw	0
  9354  00521E  2190               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9355  005220  6EDA               	movwf	fsr2h,c
  9356  005222  0EFF               	movlw	255
  9357  005224  EC63  F03C         	call	_HALSPISend
  9358  005228  6EDF               	movwf	indf2,c
  9359  00522A  0100               	movlb	0	; () banked
  9360  00522C  2BE3               	incf	RADIO_RxDone@i& (0+255),f,b
  9361  00522E                     l14830:
  9362                           
  9363                           ; BSR set to: 0
  9364  00522E  0101               	movlb	1	; () banked
  9365  005230  518E               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9366  005232  0100               	movlb	0	; () banked
  9367  005234  5DE3               	subwf	RADIO_RxDone@i& (0+255),w,b
  9368  005236  E3EE               	bnc	l14826
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;radio_driver_SX1276.c: 992: }
  9372                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9373  005238  ECBA  F03C         	call	_HALSPICSDeassert	;wreg free
  9374                           
  9375                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9376  00523C  0101               	movlb	1	; () banked
  9377  00523E  858D               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9378                           
  9379                           ; BSR set to: 1
  9380                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9381  005240  0E19               	movlw	25
  9382  005242  ECAE  F039         	call	_RADIO_RegisterRead
  9383  005246  0101               	movlb	1	; () banked
  9384  005248  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
  9385                           
  9386                           ; BSR set to: 1
  9387                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9388  00524A  0E04               	movlw	4
  9389  00524C  0100               	movlb	0	; () banked
  9390  00524E  6F64               	movwf	___abdiv@divisor& (0+255),b
  9391  005250  0101               	movlb	1	; () banked
  9392  005252  519C               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9393  005254  EC70  F034         	call	___abdiv
  9394  005258  0101               	movlb	1	; () banked
  9395  00525A  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
  9396                           
  9397                           ;radio_driver_SX1276.c: 998: }
  9398  00525C  D002               	goto	l14842
  9399  00525E                     l14840:
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;radio_driver_SX1276.c: 999: else
  9403                           ;radio_driver_SX1276.c: 1000: {
  9404                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9405  00525E  0101               	movlb	1	; () banked
  9406  005260  878D               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9407  005262                     l14842:
  9408                           
  9409                           ; BSR set to: 1
  9410                           ;radio_driver_SX1276.c: 1003: }
  9411                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9412  005262  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9413  005266  0E00               	movlw	0
  9414  005268  0100               	movlb	0	; () banked
  9415  00526A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9416  00526C  EC6E  F028         	call	_RADIO_WriteMode
  9417                           
  9418                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9419  005270  0101               	movlb	1	; () banked
  9420  005272  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9421                           
  9422                           ; BSR set to: 1
  9423                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9424  005274  C18F  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9425  005278  C190  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9426  00527C  C18E  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9427  005280  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9428  005284                     __end_of_RADIO_RxDone:
  9429                           	opt stack 0
  9430                           tosu	equ	0xFFF
  9431                           tosh	equ	0xFFE
  9432                           tosl	equ	0xFFD
  9433                           pclath	equ	0xFFA
  9434                           tblptru	equ	0xFF8
  9435                           tblptrh	equ	0xFF7
  9436                           tblptrl	equ	0xFF6
  9437                           tablat	equ	0xFF5
  9438                           prodh	equ	0xFF4
  9439                           prodl	equ	0xFF3
  9440                           intcon	equ	0xFF2
  9441                           intcon2	equ	0xFF1
  9442                           intcon3	equ	0xFF0
  9443                           postinc0	equ	0xFEE
  9444                           wreg	equ	0xFE8
  9445                           postinc1	equ	0xFE6
  9446                           postdec1	equ	0xFE5
  9447                           plusw1	equ	0xFE3
  9448                           fsr1h	equ	0xFE2
  9449                           fsr1l	equ	0xFE1
  9450                           indf2	equ	0xFDF
  9451                           postinc2	equ	0xFDE
  9452                           postdec2	equ	0xFDD
  9453                           fsr2h	equ	0xFDA
  9454                           fsr2l	equ	0xFD9
  9455                           status	equ	0xFD8
  9456                           
  9457 ;; *************** function ___abdiv *****************
  9458 ;; Defined at:
  9459 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  dividend        1    wreg     char 
  9462 ;;  divisor         1    4[BANK0 ] char 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  dividend        1    8[BANK0 ] char 
  9465 ;;  quotient        1    7[BANK0 ] char 
  9466 ;;  sign            1    6[BANK0 ] unsigned char 
  9467 ;;  counter         1    5[BANK0 ] unsigned char 
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  1    wreg      char 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2, status,0
  9472 ;; Tracked objects:
  9473 ;;		On entry : F/1
  9474 ;;		On exit  : F/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9477 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9480 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;Total ram usage:        5 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    7
  9484 ;; This function calls:
  9485 ;;		Nothing
  9486 ;; This function is called by:
  9487 ;;		_RADIO_RxDone
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text59
  9492  0068E0                     __ptext59:
  9493                           	opt stack 0
  9494  0068E0                     ___abdiv:
  9495                           	opt stack 20
  9496                           
  9497                           ;incstack = 0
  9498                           ;___abdiv@dividend stored from wreg
  9499  0068E0  0100               	movlb	0	; () banked
  9500  0068E2  6F68               	movwf	___abdiv@dividend& (0+255),b
  9501  0068E4  6B66               	clrf	___abdiv@sign& (0+255),b
  9502                           
  9503                           ; BSR set to: 0
  9504  0068E6  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9505  0068E8  D003               	goto	l10602
  9506                           
  9507                           ; BSR set to: 0
  9508  0068EA  6D64               	negf	___abdiv@divisor& (0+255),b
  9509                           
  9510                           ; BSR set to: 0
  9511  0068EC  0E01               	movlw	1
  9512  0068EE  6F66               	movwf	___abdiv@sign& (0+255),b
  9513  0068F0                     l10602:
  9514                           
  9515                           ; BSR set to: 0
  9516  0068F0  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9517  0068F2  D003               	goto	l10608
  9518                           
  9519                           ; BSR set to: 0
  9520  0068F4  6D68               	negf	___abdiv@dividend& (0+255),b
  9521                           
  9522                           ; BSR set to: 0
  9523  0068F6  0E01               	movlw	1
  9524  0068F8  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9525  0068FA                     l10608:
  9526                           
  9527                           ; BSR set to: 0
  9528  0068FA  6B67               	clrf	___abdiv@quotient& (0+255),b
  9529                           
  9530                           ; BSR set to: 0
  9531  0068FC  5164               	movf	___abdiv@divisor& (0+255),w,b
  9532  0068FE  E014               	bz	l10630
  9533                           
  9534                           ; BSR set to: 0
  9535  006900  0E01               	movlw	1
  9536  006902  6F65               	movwf	___abdiv@counter& (0+255),b
  9537  006904  D003               	goto	l10618
  9538  006906                     l10614:
  9539                           
  9540                           ; BSR set to: 0
  9541  006906  90D8               	bcf	status,0,c
  9542  006908  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9543                           
  9544                           ; BSR set to: 0
  9545  00690A  2B65               	incf	___abdiv@counter& (0+255),f,b
  9546  00690C                     l10618:
  9547                           
  9548                           ; BSR set to: 0
  9549  00690C  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9550  00690E  D7FB               	goto	l10614
  9551  006910                     l10620:
  9552                           
  9553                           ; BSR set to: 0
  9554  006910  90D8               	bcf	status,0,c
  9555  006912  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9556  006914  5164               	movf	___abdiv@divisor& (0+255),w,b
  9557  006916  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9558  006918  E303               	bnc	l10626
  9559                           
  9560                           ; BSR set to: 0
  9561  00691A  5164               	movf	___abdiv@divisor& (0+255),w,b
  9562  00691C  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9563                           
  9564                           ; BSR set to: 0
  9565  00691E  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9566  006920                     l10626:
  9567                           
  9568                           ; BSR set to: 0
  9569  006920  90D8               	bcf	status,0,c
  9570  006922  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9571                           
  9572                           ; BSR set to: 0
  9573  006924  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9574  006926  D7F4               	goto	l10620
  9575  006928                     l10630:
  9576                           
  9577                           ; BSR set to: 0
  9578  006928  5166               	movf	___abdiv@sign& (0+255),w,b
  9579  00692A  E001               	bz	l10634
  9580                           
  9581                           ; BSR set to: 0
  9582  00692C  6D67               	negf	___abdiv@quotient& (0+255),b
  9583  00692E                     l10634:
  9584                           
  9585                           ; BSR set to: 0
  9586  00692E  5167               	movf	___abdiv@quotient& (0+255),w,b
  9587                           
  9588                           ; BSR set to: 0
  9589  006930  0012               	return		;funcret
  9590  006932                     __end_of___abdiv:
  9591                           	opt stack 0
  9592                           tosu	equ	0xFFF
  9593                           tosh	equ	0xFFE
  9594                           tosl	equ	0xFFD
  9595                           pclath	equ	0xFFA
  9596                           tblptru	equ	0xFF8
  9597                           tblptrh	equ	0xFF7
  9598                           tblptrl	equ	0xFF6
  9599                           tablat	equ	0xFF5
  9600                           prodh	equ	0xFF4
  9601                           prodl	equ	0xFF3
  9602                           intcon	equ	0xFF2
  9603                           intcon2	equ	0xFF1
  9604                           intcon3	equ	0xFF0
  9605                           postinc0	equ	0xFEE
  9606                           wreg	equ	0xFE8
  9607                           postinc1	equ	0xFE6
  9608                           postdec1	equ	0xFE5
  9609                           plusw1	equ	0xFE3
  9610                           fsr1h	equ	0xFE2
  9611                           fsr1l	equ	0xFE1
  9612                           indf2	equ	0xFDF
  9613                           postinc2	equ	0xFDE
  9614                           postdec2	equ	0xFDD
  9615                           fsr2h	equ	0xFDA
  9616                           fsr2l	equ	0xFD9
  9617                           status	equ	0xFD8
  9618                           
  9619 ;; *************** function _RADIO_FSKPayloadReady *****************
  9620 ;; Defined at:
  9621 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;		None
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;  i               1  131[BANK0 ] unsigned char 
  9626 ;;  irqFlags        1  130[BANK0 ] unsigned char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;                  1    wreg      void 
  9629 ;; Registers used:
  9630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : F/0
  9633 ;;		On exit  : D/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;Total ram usage:        2 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:   16
  9643 ;; This function calls:
  9644 ;;		_HALSPICSAssert
  9645 ;;		_HALSPICSDeassert
  9646 ;;		_HALSPISend
  9647 ;;		_LORAWAN_RxDone
  9648 ;;		_LORAWAN_RxTimeout
  9649 ;;		_RADIO_RegisterRead
  9650 ;;		_RADIO_WriteMode
  9651 ;;		_SwTimerStop
  9652 ;; This function is called by:
  9653 ;;		_RADIO_DIO0
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text60
  9658  005A5C                     __ptext60:
  9659                           	opt stack 0
  9660  005A5C                     _RADIO_FSKPayloadReady:
  9661                           	opt stack 12
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
  9665                           ;radio_driver_SX1276.c: 1013: uint8_t i;
  9666                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;incstack = 0
  9670  005A5C  0E3F               	movlw	63
  9671  005A5E  ECAE  F039         	call	_RADIO_RegisterRead
  9672  005A62  6FE2               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  9676  005A64  A5E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  9677  005A66  0012               	return	
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;radio_driver_SX1276.c: 1017: {
  9681                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9682  005A68  0101               	movlb	1	; () banked
  9683  005A6A  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9684  005A6C  ECB2  F03A         	call	_SwTimerStop
  9685                           
  9686                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  9687  005A70  0101               	movlb	1	; () banked
  9688  005A72  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
  9689  005A74  ECB2  F03A         	call	_SwTimerStop
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  9693  005A78  ECBC  F03C         	call	_HALSPICSAssert	;wreg free
  9694                           
  9695                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  9696  005A7C  0E00               	movlw	0
  9697  005A7E  EC63  F03C         	call	_HALSPISend
  9698                           
  9699                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  9700  005A82  0EFF               	movlw	255
  9701  005A84  EC63  F03C         	call	_HALSPISend
  9702  005A88  0101               	movlb	1	; () banked
  9703  005A8A  6F8E               	movwf	(_RadioConfiguration+36)& (0+255),b
  9704                           
  9705                           ; BSR set to: 1
  9706                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9707  005A8C  0100               	movlb	0	; () banked
  9708  005A8E  6BE3               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
  9709  005A90  D00D               	goto	l14866
  9710  005A92                     l14862:
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;radio_driver_SX1276.c: 1029: {
  9714                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9715  005A92  51E3               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9716  005A94  0101               	movlb	1	; () banked
  9717  005A96  258F               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9718  005A98  6ED9               	movwf	fsr2l,c
  9719  005A9A  0E00               	movlw	0
  9720  005A9C  2190               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9721  005A9E  6EDA               	movwf	fsr2h,c
  9722  005AA0  0EFF               	movlw	255
  9723  005AA2  EC63  F03C         	call	_HALSPISend
  9724  005AA6  6EDF               	movwf	indf2,c
  9725  005AA8  0100               	movlb	0	; () banked
  9726  005AAA  2BE3               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  9727  005AAC                     l14866:
  9728                           
  9729                           ; BSR set to: 0
  9730  005AAC  0101               	movlb	1	; () banked
  9731  005AAE  518E               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9732  005AB0  0100               	movlb	0	; () banked
  9733  005AB2  5DE3               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  9734  005AB4  E3EE               	bnc	l14862
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;radio_driver_SX1276.c: 1031: }
  9738                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  9739  005AB6  ECBA  F03C         	call	_HALSPICSDeassert	;wreg free
  9740                           
  9741                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9742  005ABA  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9743  005ABE  0E00               	movlw	0
  9744  005AC0  0100               	movlb	0	; () banked
  9745  005AC2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9746  005AC4  EC6E  F028         	call	_RADIO_WriteMode
  9747                           
  9748                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  9749  005AC8  0101               	movlb	1	; () banked
  9750  005ACA  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9751                           
  9752                           ; BSR set to: 1
  9753                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  9754  005ACC  0E80               	movlw	128
  9755  005ACE  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
  9756                           
  9757                           ; BSR set to: 1
  9758                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  9759  005AD0  0586               	decf	(_RadioConfiguration+28)& (0+255),w,b
  9760  005AD2  E103               	bnz	l14880
  9761                           
  9762                           ; BSR set to: 1
  9763                           ;radio_driver_SX1276.c: 1040: {
  9764                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
  9765  005AD4  0100               	movlb	0	; () banked
  9766  005AD6  A3E2               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  9767  005AD8  D003               	goto	l14882
  9768  005ADA                     l14880:
  9769                           
  9770                           ;radio_driver_SX1276.c: 1042: {
  9771                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
  9772  005ADA  0101               	movlb	1	; () banked
  9773  005ADC  858D               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9774                           
  9775                           ;radio_driver_SX1276.c: 1044: }
  9776  005ADE  D002               	goto	l14886
  9777  005AE0                     l14882:
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;radio_driver_SX1276.c: 1045: else
  9781                           ;radio_driver_SX1276.c: 1046: {
  9782                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
  9783  005AE0  0101               	movlb	1	; () banked
  9784  005AE2  958D               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  9785  005AE4                     l14886:
  9786                           
  9787                           ; BSR set to: 1
  9788                           ;radio_driver_SX1276.c: 1053: }
  9789                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
  9790  005AE4  A58D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  9791  005AE6  EF71  F013         	goto	_LORAWAN_RxTimeout
  9792                           
  9793                           ; BSR set to: 1
  9794                           ;radio_driver_SX1276.c: 1056: {
  9795                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9796  005AEA  C18F  F166         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9797  005AEE  C190  F167         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9798  005AF2  C18E  F168         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9799  005AF6  EF4C  F000         	goto	_LORAWAN_RxDone	;wreg free
  9800  005AFA                     __end_of_RADIO_FSKPayloadReady:
  9801                           	opt stack 0
  9802                           tosu	equ	0xFFF
  9803                           tosh	equ	0xFFE
  9804                           tosl	equ	0xFFD
  9805                           pclath	equ	0xFFA
  9806                           tblptru	equ	0xFF8
  9807                           tblptrh	equ	0xFF7
  9808                           tblptrl	equ	0xFF6
  9809                           tablat	equ	0xFF5
  9810                           prodh	equ	0xFF4
  9811                           prodl	equ	0xFF3
  9812                           intcon	equ	0xFF2
  9813                           intcon2	equ	0xFF1
  9814                           intcon3	equ	0xFF0
  9815                           postinc0	equ	0xFEE
  9816                           wreg	equ	0xFE8
  9817                           postinc1	equ	0xFE6
  9818                           postdec1	equ	0xFE5
  9819                           plusw1	equ	0xFE3
  9820                           fsr1h	equ	0xFE2
  9821                           fsr1l	equ	0xFE1
  9822                           indf2	equ	0xFDF
  9823                           postinc2	equ	0xFDE
  9824                           postdec2	equ	0xFDD
  9825                           fsr2h	equ	0xFDA
  9826                           fsr2l	equ	0xFD9
  9827                           status	equ	0xFD8
  9828                           
  9829 ;; *************** function _LORAWAN_RxTimeout *****************
  9830 ;; Defined at:
  9831 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;		None
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  minim           4   75[BANK0 ] unsigned long 
  9836 ;;  i               1   79[BANK0 ] unsigned char 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      void 
  9839 ;; Registers used:
  9840 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9841 ;; Tracked objects:
  9842 ;;		On entry : F/1
  9843 ;;		On exit  : D/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9849 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9850 ;;Total ram usage:        9 bytes
  9851 ;; Hardware stack levels used:    1
  9852 ;; Hardware stack levels required when called:   15
  9853 ;; This function calls:
  9854 ;;		_LORAWAN_ReceiveWindow2Callback
  9855 ;;		_RADIO_Transmit
  9856 ;;		_ResetParametersForConfirmedTransmission
  9857 ;;		_ResetParametersForUnconfirmedTransmission
  9858 ;;		_RxDataDone
  9859 ;;		_SelectChannelForTransmission
  9860 ;;		_SetJoinFailState
  9861 ;;		_SwTimerSetTimeout
  9862 ;;		_SwTimerStart
  9863 ;;		___lldiv
  9864 ;; This function is called by:
  9865 ;;		_RADIO_FSKPayloadReady
  9866 ;;		_RADIO_RxTimeout
  9867 ;;		_RADIO_RxFSKTimeout
  9868 ;;		_RADIO_WatchdogTimeout
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text61
  9873  0026E2                     __ptext61:
  9874                           	opt stack 0
  9875  0026E2                     _LORAWAN_RxTimeout:
  9876                           	opt stack 12
  9877                           
  9878                           ; BSR set to: 1
  9879                           ;lorawan_eu.c: 466: uint8_t i;
  9880                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  9881                           
  9882                           ;incstack = 0
  9883  0026E2  0100               	movlb	0	; () banked
  9884  0026E4  69AB               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  9885  0026E6  69AC               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  9886  0026E8  69AD               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  9887  0026EA  69AE               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  9888                           
  9889                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  9890  0026EC  0102               	movlb	2	; () banked
  9891  0026EE  B103               	btfsc	(_loRa+3)& (0+255),0,b
  9892  0026F0  D134               	goto	l14654
  9893                           
  9894                           ; BSR set to: 2
  9895                           ;lorawan_eu.c: 470: {
  9896                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  9897  0026F2  5102               	movf	(_loRa+2)& (0+255),w,b
  9898  0026F4  0B0F               	andlw	15
  9899  0026F6  0A03               	xorlw	3
  9900  0026F8  E10E               	bnz	l1049
  9901                           
  9902                           ; BSR set to: 2
  9903                           ;lorawan_eu.c: 473: {
  9904                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  9905  0026FA  5112               	movf	(_loRa+18)& (0+255),w,b
  9906  0026FC  E105               	bnz	l14590
  9907                           
  9908                           ; BSR set to: 2
  9909                           ;lorawan_eu.c: 475: {
  9910                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  9911  0026FE  5102               	movf	(_loRa+2)& (0+255),w,b
  9912  002700  0BF0               	andlw	-16
  9913  002702  0904               	iorlw	4
  9914  002704  6F02               	movwf	(_loRa+2)& (0+255),b
  9915                           
  9916                           ;lorawan_eu.c: 477: }
  9917  002706  0012               	return	
  9918  002708                     l14590:
  9919                           
  9920                           ; BSR set to: 2
  9921                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  9922  002708  0E02               	movlw	2
  9923  00270A  1912               	xorwf	(_loRa+18)& (0+255),w,b
  9924  00270C  A4D8               	btfss	status,2,c
  9925  00270E  0012               	return	
  9926                           
  9927                           ; BSR set to: 2
  9928                           ;lorawan_eu.c: 479: {
  9929                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  9930  002710  6AE6               	clrf	postinc1,c
  9931  002712  EFA9  F029         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
  9932  002716                     l1049:
  9933                           
  9934                           ; BSR set to: 2
  9935                           ;lorawan_eu.c: 483: else
  9936                           ;lorawan_eu.c: 484: {
  9937                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
  9938  002716  B500               	btfsc	_loRa& (0+255),2,b
  9939                           
  9940                           ; BSR set to: 2
  9941                           ;lorawan_eu.c: 487: {
  9942                           ;lorawan_eu.c: 488: SetJoinFailState();
  9943  002718  EFC1  F039         	goto	_SetJoinFailState	;wreg free
  9944                           
  9945                           ; BSR set to: 2
  9946                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  9947                           
  9948                           ;lorawan_eu.c: 489: }
  9949  00271C  A902               	btfss	(_loRa+2)& (0+255),4,b
  9950  00271E  0012               	return	
  9951                           
  9952                           ; BSR set to: 2
  9953                           ;lorawan_eu.c: 492: {
  9954                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
  9955  002720  A100               	btfss	_loRa& (0+255),0,b
  9956  002722  D04B               	goto	l14612
  9957                           
  9958                           ; BSR set to: 2
  9959                           ;lorawan_eu.c: 494: {
  9960                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
  9961  002724  51D9               	movf	(_loRa+217)& (0+255),w,b
  9962  002726  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  9963  002728  E334               	bnc	l14606
  9964                           
  9965                           ; BSR set to: 2
  9966                           ;lorawan_eu.c: 496: {
  9967                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9968  00272A  5102               	movf	(_loRa+2)& (0+255),w,b
  9969  00272C  0BF0               	andlw	-16
  9970  00272E  0906               	iorlw	6
  9971  002730  6F02               	movwf	(_loRa+2)& (0+255),b
  9972                           
  9973                           ; BSR set to: 2
  9974                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  9975  002732  51A0               	movf	(_loRa+160)& (0+255),w,b
  9976  002734  0100               	movlb	0	; () banked
  9977  002736  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
  9978  002738  0102               	movlb	2	; () banked
  9979  00273A  51A1               	movf	(_loRa+161)& (0+255),w,b
  9980  00273C  0100               	movlb	0	; () banked
  9981  00273E  6FA8               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
  9982  002740  6BA9               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
  9983  002742  6BAA               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
  9984  002744  0E0C               	movlw	12
  9985  002746                     u16735:
  9986  002746  90D8               	bcf	status,0,c
  9987  002748  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
  9988  00274A  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
  9989  00274C  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
  9990  00274E  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
  9991  002750  2EE8               	decfsz	wreg,f,c
  9992  002752  D7F9               	goto	u16735
  9993  002754  C0A7  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  9994  002758  C0A8  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  9995  00275C  C0A9  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  9996  002760  C0AA  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  9997  002764  0E7D               	movlw	125
  9998  002766  6F68               	movwf	___lldiv@divisor& (0+255),b
  9999  002768  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10000  00276A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10001  00276C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10002  00276E  EC1A  F030         	call	___lldiv	;wreg free
 10003  002772  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10004  002776  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10005  00277A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10006  00277E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10007  002782  0102               	movlb	2	; () banked
 10008  002784  51E8               	movf	(_loRa+232)& (0+255),w,b
 10009  002786  ECA5  F036         	call	_SwTimerSetTimeout
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 10013  00278A  0102               	movlb	2	; () banked
 10014  00278C  51E8               	movf	(_loRa+232)& (0+255),w,b
 10015  00278E  EF58  F02E         	goto	_SwTimerStart
 10016  002792                     l14606:
 10017                           
 10018                           ; BSR set to: 2
 10019                           ;lorawan_eu.c: 501: else
 10020                           ;lorawan_eu.c: 502: {
 10021                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10022  002792  ECE3  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10023                           
 10024                           ; BSR set to: 2
 10025                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10026  002796  0100               	movlb	0	; () banked
 10027  002798  51E8               	movf	_rxPayload& (0+255),w,b
 10028  00279A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10029  00279C  B4D8               	btfsc	status,2,c
 10030  00279E  0012               	return	
 10031  0027A0                     l14610:
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;lorawan_eu.c: 505: {
 10035                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10036  0027A0  6B67               	clrf	RxDataDone@pData& (0+255),b
 10037  0027A2  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10038  0027A4  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10039  0027A6  6B6A               	clrf	RxDataDone@status& (0+255),b
 10040  0027A8  0005               	push	
 10041  0027AA  6AFA               	clrf	pclath,c
 10042  0027AC  51E8               	movf	_rxPayload& (0+255),w,b
 10043  0027AE  6EFD               	movwf	tosl,c
 10044  0027B0  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10045  0027B2  6EFE               	movwf	tosh,c
 10046  0027B4  6AFF               	clrf	tosu,c
 10047  0027B6  50FA               	movf	pclath,w,c
 10048  0027B8  0012               	return		;indir
 10049  0027BA                     l14612:
 10050                           
 10051                           ; BSR set to: 2
 10052                           ;lorawan_eu.c: 511: else
 10053                           ;lorawan_eu.c: 512: {
 10054                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10055  0027BA  51D8               	movf	(_loRa+216)& (0+255),w,b
 10056  0027BC  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10057  0027BE  E201 D0B7          	bnc	l14648
 10058                           
 10059                           ; BSR set to: 2
 10060                           ;lorawan_eu.c: 514: {
 10061                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10062  0027C2  5102               	movf	(_loRa+2)& (0+255),w,b
 10063  0027C4  0BF0               	andlw	-16
 10064  0027C6  0906               	iorlw	6
 10065  0027C8  6F02               	movwf	(_loRa+2)& (0+255),b
 10066                           
 10067                           ; BSR set to: 2
 10068                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10069  0027CA  0E01               	movlw	1
 10070  0027CC  EC5C  F033         	call	_SelectChannelForTransmission
 10071  0027D0  0900               	iorlw	0
 10072  0027D2  E119               	bnz	l1063
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;lorawan_eu.c: 517: {
 10076                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10077  0027D4  0EF0               	movlw	low (_macBuffer+16)
 10078  0027D6  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 10079  0027D8  0E04               	movlw	high (_macBuffer+16)
 10080  0027DA  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10081  0027DC  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10082  0027E0  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 10083  0027E4  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 10084  0027E6  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10085  0027E8  E107               	bnz	l14624
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;lorawan_eu.c: 520: {
 10089                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10090  0027EA  0102               	movlb	2	; () banked
 10091  0027EC  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10092                           
 10093                           ; BSR set to: 2
 10094                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10095  0027EE  5102               	movf	(_loRa+2)& (0+255),w,b
 10096  0027F0  0BF0               	andlw	-16
 10097  0027F2  0901               	iorlw	1
 10098  0027F4  6F02               	movwf	(_loRa+2)& (0+255),b
 10099                           
 10100                           ;lorawan_eu.c: 523: }
 10101  0027F6  0012               	return	
 10102  0027F8                     l14624:
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;lorawan_eu.c: 524: else
 10106                           ;lorawan_eu.c: 526: {
 10107                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10108  0027F8  ECDC  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10109                           
 10110                           ; BSR set to: 2
 10111                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10112  0027FC  0100               	movlb	0	; () banked
 10113  0027FE  51E8               	movf	_rxPayload& (0+255),w,b
 10114  002800  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10115  002802  E1CE               	bnz	l14610
 10116  002804  0012               	return	
 10117  002806                     l1063:
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;lorawan_eu.c: 534: else
 10121                           ;lorawan_eu.c: 535: {
 10122                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10123  002806  6BAF               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10124  002808  D05B               	goto	l14644
 10125  00280A                     l14630:
 10126                           
 10127                           ; BSR set to: 2
 10128                           ;lorawan_eu.c: 538: {
 10129                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10130  00280A  0100               	movlb	0	; () banked
 10131  00280C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10132  00280E  0D0E               	mullw	14
 10133  002810  0E04               	movlw	low (_Channels+4)
 10134  002812  24F3               	addwf	prodl,w,c
 10135  002814  6ED9               	movwf	fsr2l,c
 10136  002816  0E04               	movlw	high (_Channels+4)
 10137  002818  20F4               	addwfc	prodh,w,c
 10138  00281A  6EDA               	movwf	fsr2h,c
 10139  00281C  04DE               	decf	postinc2,w,c
 10140  00281E  E14E               	bnz	l14642
 10141                           
 10142                           ; BSR set to: 0
 10143  002820  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10144  002822  0D0E               	mullw	14
 10145  002824  0E08               	movlw	low (_Channels+8)
 10146  002826  24F3               	addwf	prodl,w,c
 10147  002828  6ED9               	movwf	fsr2l,c
 10148  00282A  0E04               	movlw	high (_Channels+8)
 10149  00282C  20F4               	addwfc	prodh,w,c
 10150  00282E  6EDA               	movwf	fsr2h,c
 10151  002830  50DE               	movf	postinc2,w,c
 10152  002832  10DE               	iorwf	postinc2,w,c
 10153  002834  10DE               	iorwf	postinc2,w,c
 10154  002836  10DE               	iorwf	postinc2,w,c
 10155  002838  E041               	bz	l14642
 10156                           
 10157                           ; BSR set to: 0
 10158  00283A  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10159  00283C  0D0E               	mullw	14
 10160  00283E  0E08               	movlw	low (_Channels+8)
 10161  002840  24F3               	addwf	prodl,w,c
 10162  002842  6ED9               	movwf	fsr2l,c
 10163  002844  0E04               	movlw	high (_Channels+8)
 10164  002846  20F4               	addwfc	prodh,w,c
 10165  002848  6EDA               	movwf	fsr2h,c
 10166  00284A  50DE               	movf	postinc2,w,c
 10167  00284C  5DAB               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10168  00284E  50DE               	movf	postinc2,w,c
 10169  002850  59AC               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10170  002852  50DE               	movf	postinc2,w,c
 10171  002854  59AD               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10172  002856  50DE               	movf	postinc2,w,c
 10173  002858  59AE               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10174  00285A  E330               	bnc	l14642
 10175                           
 10176                           ; BSR set to: 0
 10177  00285C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10178  00285E  0D0E               	mullw	14
 10179  002860  0E05               	movlw	low (_Channels+5)
 10180  002862  24F3               	addwf	prodl,w,c
 10181  002864  6ED9               	movwf	fsr2l,c
 10182  002866  0E04               	movlw	high (_Channels+5)
 10183  002868  20F4               	addwfc	prodh,w,c
 10184  00286A  6EDA               	movwf	fsr2h,c
 10185  00286C  50DF               	movf	223,w,c
 10186  00286E  0B0F               	andlw	15
 10187  002870  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10188  002872  51A7               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10189  002874  0102               	movlb	2	; () banked
 10190  002876  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10191  002878  E321               	bnc	l14642
 10192                           
 10193                           ; BSR set to: 2
 10194  00287A  0100               	movlb	0	; () banked
 10195  00287C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10196  00287E  0D0E               	mullw	14
 10197  002880  0E05               	movlw	low (_Channels+5)
 10198  002882  24F3               	addwf	prodl,w,c
 10199  002884  6ED9               	movwf	fsr2l,c
 10200  002886  0E04               	movlw	high (_Channels+5)
 10201  002888  20F4               	addwfc	prodh,w,c
 10202  00288A  6EDA               	movwf	fsr2h,c
 10203  00288C  38DF               	swapf	223,w,c
 10204  00288E  0B0F               	andlw	15
 10205  002890  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10206  002892  0102               	movlb	2	; () banked
 10207  002894  51DF               	movf	(_loRa+223)& (0+255),w,b
 10208  002896  0100               	movlb	0	; () banked
 10209  002898  5DA7               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10210  00289A  E310               	bnc	l14642
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;lorawan_eu.c: 540: {
 10214                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10215  00289C  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10216  00289E  0D0E               	mullw	14
 10217  0028A0  0E08               	movlw	low (_Channels+8)
 10218  0028A2  24F3               	addwf	prodl,w,c
 10219  0028A4  6ED9               	movwf	fsr2l,c
 10220  0028A6  0E04               	movlw	high (_Channels+8)
 10221  0028A8  20F4               	addwfc	prodh,w,c
 10222  0028AA  6EDA               	movwf	fsr2h,c
 10223  0028AC  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim
 10224  0028B0  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10225  0028B4  CFDE F0AD          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10226  0028B8  CFDE F0AE          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10227  0028BC                     l14642:
 10228  0028BC  0100               	movlb	0	; () banked
 10229  0028BE  2BAF               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10230  0028C0                     l14644:
 10231                           
 10232                           ; BSR set to: 0
 10233  0028C0  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10234  0028C2  0102               	movlb	2	; () banked
 10235  0028C4  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10236  0028C6  E2A1               	bc	l14630
 10237                           
 10238                           ; BSR set to: 2
 10239                           ;lorawan_eu.c: 542: }
 10240                           ;lorawan_eu.c: 543: }
 10241                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10242  0028C8  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10243  0028CC  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10244  0028D0  C0AD  F0A9         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10245  0028D4  C0AE  F0AA         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10246  0028D8  0E0C               	movlw	12
 10247  0028DA                     u16865:
 10248  0028DA  90D8               	bcf	status,0,c
 10249  0028DC  0100               	movlb	0	; () banked
 10250  0028DE  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10251  0028E0  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10252  0028E2  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10253  0028E4  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10254  0028E6  2EE8               	decfsz	wreg,f,c
 10255  0028E8  D7F8               	goto	u16865
 10256  0028EA  0E00               	movlw	0
 10257  0028EC  25A7               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10258  0028EE  6F64               	movwf	___lldiv@dividend& (0+255),b
 10259  0028F0  0E20               	movlw	32
 10260  0028F2  21A8               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10261  0028F4  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10262  0028F6  0E03               	movlw	3
 10263  0028F8  21A9               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10264  0028FA  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10265  0028FC  0E00               	movlw	0
 10266  0028FE  21AA               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10267  002900  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10268  002902  0E7D               	movlw	125
 10269  002904  6F68               	movwf	___lldiv@divisor& (0+255),b
 10270  002906  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10271  002908  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10272  00290A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10273  00290C  EC1A  F030         	call	___lldiv	;wreg free
 10274  002910  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10275  002914  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10276  002918  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10277  00291C  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10278  002920  0102               	movlb	2	; () banked
 10279  002922  51EA               	movf	(_loRa+234)& (0+255),w,b
 10280  002924  ECA5  F036         	call	_SwTimerSetTimeout
 10281                           
 10282                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10283  002928  0102               	movlb	2	; () banked
 10284  00292A  51EA               	movf	(_loRa+234)& (0+255),w,b
 10285  00292C  EF58  F02E         	goto	_SwTimerStart
 10286  002930                     l14648:
 10287                           
 10288                           ; BSR set to: 2
 10289                           ;lorawan_eu.c: 548: else
 10290                           ;lorawan_eu.c: 549: {
 10291                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10292  002930  ECDC  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10293                           
 10294                           ; BSR set to: 2
 10295                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10296  002934  0100               	movlb	0	; () banked
 10297  002936  51E8               	movf	_rxPayload& (0+255),w,b
 10298  002938  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10299  00293A  B4D8               	btfsc	status,2,c
 10300  00293C  0012               	return	
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;lorawan_eu.c: 552: {
 10304                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10305  00293E  6B67               	clrf	RxDataDone@pData& (0+255),b
 10306  002940  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10307  002942  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10308  002944  0E01               	movlw	1
 10309  002946  6F6A               	movwf	RxDataDone@status& (0+255),b
 10310  002948  0005               	push	
 10311  00294A  6EFA               	movwf	pclath,c
 10312  00294C  51E8               	movf	_rxPayload& (0+255),w,b
 10313  00294E  6EFD               	movwf	tosl,c
 10314  002950  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10315  002952  6EFE               	movwf	tosh,c
 10316  002954  6AFF               	clrf	tosu,c
 10317  002956  50FA               	movf	pclath,w,c
 10318  002958  0012               	return		;indir
 10319  00295A                     l14654:
 10320                           
 10321                           ; BSR set to: 2
 10322                           ;lorawan_eu.c: 560: else
 10323                           ;lorawan_eu.c: 561: {
 10324                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10325  00295A  0100               	movlb	0	; () banked
 10326  00295C  51E8               	movf	_rxPayload& (0+255),w,b
 10327  00295E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10328  002960  B4D8               	btfsc	status,2,c
 10329  002962  0012               	return	
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;lorawan_eu.c: 564: {
 10333                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10334  002964  6B67               	clrf	RxDataDone@pData& (0+255),b
 10335  002966  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 10336  002968  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 10337  00296A  0E02               	movlw	2
 10338  00296C  6F6A               	movwf	RxDataDone@status& (0+255),b
 10339  00296E  0005               	push	
 10340  002970  6EFA               	movwf	pclath,c
 10341  002972  51E8               	movf	_rxPayload& (0+255),w,b
 10342  002974  6EFD               	movwf	tosl,c
 10343  002976  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 10344  002978  6EFE               	movwf	tosh,c
 10345  00297A  6AFF               	clrf	tosu,c
 10346  00297C  50FA               	movf	pclath,w,c
 10347  00297E  0012               	return		;indir
 10348  002980                     __end_of_LORAWAN_RxTimeout:
 10349                           	opt stack 0
 10350                           tosu	equ	0xFFF
 10351                           tosh	equ	0xFFE
 10352                           tosl	equ	0xFFD
 10353                           pclath	equ	0xFFA
 10354                           tblptru	equ	0xFF8
 10355                           tblptrh	equ	0xFF7
 10356                           tblptrl	equ	0xFF6
 10357                           tablat	equ	0xFF5
 10358                           prodh	equ	0xFF4
 10359                           prodl	equ	0xFF3
 10360                           intcon	equ	0xFF2
 10361                           intcon2	equ	0xFF1
 10362                           intcon3	equ	0xFF0
 10363                           postinc0	equ	0xFEE
 10364                           wreg	equ	0xFE8
 10365                           postinc1	equ	0xFE6
 10366                           postdec1	equ	0xFE5
 10367                           plusw1	equ	0xFE3
 10368                           fsr1h	equ	0xFE2
 10369                           fsr1l	equ	0xFE1
 10370                           indf2	equ	0xFDF
 10371                           postinc2	equ	0xFDE
 10372                           postdec2	equ	0xFDD
 10373                           fsr2h	equ	0xFDA
 10374                           fsr2l	equ	0xFD9
 10375                           status	equ	0xFD8
 10376                           
 10377 ;; *************** function _LORAWAN_RxDone *****************
 10378 ;; Defined at:
 10379 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 10382 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10383 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;  hdr             2   18[BANK3 ] PTR struct .
 10386 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10387 ;;  joinAccept      2   15[BANK3 ] PTR struct .
 10388 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10389 ;;  computedMic     4   11[BANK3 ] unsigned long 
 10390 ;;  extractedMic    4    3[BANK3 ] unsigned long 
 10391 ;;  packet          2    9[BANK3 ] PTR unsigned char 
 10392 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10393 ;;  frmPayloadLe    1   17[BANK3 ] unsigned char 
 10394 ;;  temp            1    8[BANK3 ] unsigned char 
 10395 ;;  bufferIndex     1    7[BANK3 ] unsigned char 
 10396 ;;  mhdr            1    2[BANK3 ] struct .
 10397 ;;  channelIndex    1    1[BANK3 ] unsigned char 
 10398 ;;  fPort           1    0[BANK3 ] unsigned char 
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      enum E8191
 10401 ;; Registers used:
 10402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : F/1
 10405 ;;		On exit  : D/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10408 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10409 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10410 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10411 ;;      Totals:         0       5       3       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10412 ;;Total ram usage:       28 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:   15
 10415 ;; This function calls:
 10416 ;;		_AESCmac
 10417 ;;		_AESEncodeLoRa
 10418 ;;		_AssembleEncryptionBlock
 10419 ;;		_CheckFlags
 10420 ;;		_CheckMcastFlags
 10421 ;;		_ComputeMic
 10422 ;;		_ComputeSessionKeys
 10423 ;;		_EncryptFRMPayload
 10424 ;;		_ExtractMic
 10425 ;;		_LORAWAN_EnterContinuousReceive
 10426 ;;		_LORAWAN_Send
 10427 ;;		_MacExecuteCommands
 10428 ;;		_RADIO_GetStatus
 10429 ;;		_RADIO_ReleaseData
 10430 ;;		_RxDataDone
 10431 ;;		_SearchAvailableChannel
 10432 ;;		_SetJoinFailState
 10433 ;;		_SetReceptionNotOkState
 10434 ;;		_StartReTxTimer
 10435 ;;		_SwTimerStop
 10436 ;;		_UpdateCfList
 10437 ;;		_UpdateDLSettings
 10438 ;;		_UpdateJoinSuccessState
 10439 ;;		_UpdateReceiveDelays
 10440 ;;		_UpdateRetransmissionAckTimeoutState
 10441 ;;		_memcpy
 10442 ;; This function is called by:
 10443 ;;		_RADIO_RxDone
 10444 ;;		_RADIO_FSKPayloadReady
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           	psect	text62
 10449  000098                     __ptext62:
 10450                           	opt stack 0
 10451  000098                     _LORAWAN_RxDone:
 10452                           	opt stack 12
 10453                           
 10454                           ; BSR set to: 1
 10455                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10456                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10457                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10458                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10459                           ;lorawan.c: 1127: uint8_t *packet;
 10460                           ;lorawan.c: 1128: uint8_t temp;
 10461                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10462                           
 10463                           ;incstack = 0
 10464  000098  EC9B  F03C         	call	_RADIO_ReleaseData	;wreg free
 10465                           
 10466                           ; BSR set to: 1
 10467                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10468  00009C  0102               	movlb	2	; () banked
 10469  00009E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10470  0000A0  EF5F  F005         	goto	l14572
 10471                           
 10472                           ; BSR set to: 2
 10473                           ;lorawan.c: 1133: {
 10474                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10475  0000A4  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10476  0000A8  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10477  0000AC  50DF               	movf	indf2,w,c
 10478  0000AE  0103               	movlb	3	; () banked
 10479  0000B0  6FA2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10480                           
 10481                           ; BSR set to: 3
 10482                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10483  0000B2  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10484  0000B4  32E8               	rrcf	wreg,f,c
 10485  0000B6  0B07               	andlw	7
 10486  0000B8  06E8               	decf	wreg,f,c
 10487  0000BA  E001 D0C7          	bnz	l14244
 10488                           
 10489                           ; BSR set to: 3
 10490  0000BE  0102               	movlb	2	; () banked
 10491  0000C0  511D               	movf	(_loRa+29)& (0+255),w,b
 10492  0000C2  E001 D0C3          	bnz	l14244
 10493                           
 10494                           ; BSR set to: 2
 10495                           ;lorawan.c: 1136: {
 10496                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10497  0000C6  0101               	movlb	1	; () banked
 10498  0000C8  0568               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10499  0000CA  0103               	movlb	3	; () banked
 10500  0000CC  6FA8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10501                           
 10502                           ;lorawan.c: 1138: while (temp > 0)
 10503  0000CE  D020               	goto	l14200
 10504  0000D0                     l14194:
 10505                           
 10506                           ; BSR set to: 3
 10507                           ;lorawan.c: 1139: {
 10508                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10509  0000D0  0101               	movlb	1	; () banked
 10510  0000D2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10511  0000D4  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10512  0000D6  0100               	movlb	0	; () banked
 10513  0000D8  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 10514  0000DA  0E00               	movlw	0
 10515  0000DC  0101               	movlb	1	; () banked
 10516  0000DE  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10517  0000E0  0100               	movlb	0	; () banked
 10518  0000E2  6FDE               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10519  0000E4  0103               	movlb	3	; () banked
 10520  0000E6  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10521  0000E8  0100               	movlb	0	; () banked
 10522  0000EA  5DDD               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10523  0000EC  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 10524  0000EE  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10525  0000F0  A0D8               	btfss	status,0,c
 10526  0000F2  05DE               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10527  0000F4  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10528  0000F6  0E42               	movlw	low (_loRa+66)
 10529  0000F8  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 10530  0000FA  0E02               	movlw	high (_loRa+66)
 10531  0000FC  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10532  0000FE  EC74  F039         	call	_AESEncodeLoRa	;wreg free
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;lorawan.c: 1142: if (temp > 16)
 10536  000102  0E10               	movlw	16
 10537  000104  0103               	movlb	3	; () banked
 10538  000106  65A8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10539  000108  D002               	goto	l2121
 10540                           
 10541                           ; BSR set to: 3
 10542                           ;lorawan.c: 1143: {
 10543                           ;lorawan.c: 1144: temp -= 16;
 10544  00010A  5FA8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10545                           
 10546                           ;lorawan.c: 1145: }
 10547  00010C  D001               	goto	l14200
 10548  00010E                     l2121:
 10549                           
 10550                           ; BSR set to: 3
 10551                           ;lorawan.c: 1146: else
 10552                           ;lorawan.c: 1147: {
 10553                           ;lorawan.c: 1148: temp = 0;
 10554  00010E  6BA8               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10555  000110                     l14200:
 10556                           
 10557                           ; BSR set to: 3
 10558  000110  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10559  000112  E1DE               	bnz	l14194
 10560                           
 10561                           ; BSR set to: 3
 10562                           ;lorawan.c: 1149: }
 10563                           ;lorawan.c: 1150: }
 10564                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10565  000114  0E42               	movlw	low (_loRa+66)
 10566  000116  0100               	movlb	0	; () banked
 10567  000118  6FCA               	movwf	ComputeMic@key& (0+255),b
 10568  00011A  0E02               	movlw	high (_loRa+66)
 10569  00011C  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 10570  00011E  C166  F0CC         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10571  000122  C167  F0CD         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10572  000126  0101               	movlb	1	; () banked
 10573  000128  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10574  00012A  0FFC               	addlw	252
 10575  00012C  0100               	movlb	0	; () banked
 10576  00012E  6FCE               	movwf	ComputeMic@bufferLength& (0+255),b
 10577  000130  EC99  F034         	call	_ComputeMic	;wreg free
 10578  000134  C0CA  F3AB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10579  000138  C0CB  F3AC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10580  00013C  C0CC  F3AD         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10581  000140  C0CD  F3AE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10585  000144  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10586  000148  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10587  00014C  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10588  000150  EC84  F036         	call	_ExtractMic	;wreg free
 10589  000154  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10590  000158  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10591  00015C  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10592  000160  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10596  000164  0103               	movlb	3	; () banked
 10597  000166  51AB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10598  000168  19A3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10599  00016A  E109               	bnz	u15990
 10600  00016C  51AC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10601  00016E  19A4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10602  000170  E106               	bnz	u15990
 10603  000172  51AD               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10604  000174  19A5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10605  000176  E103               	bnz	u15990
 10606  000178  51AE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10607  00017A  19A6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10608  00017C  E011               	bz	l14218
 10609  00017E                     u15990:
 10610                           
 10611                           ; BSR set to: 3
 10612                           ;lorawan.c: 1156: {
 10613                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10614  00017E  0102               	movlb	2	; () banked
 10615  000180  5102               	movf	(_loRa+2)& (0+255),w,b
 10616  000182  0B0F               	andlw	15
 10617  000184  0A05               	xorlw	5
 10618  000186  E102 EFC1  F039    	bz	_SetJoinFailState
 10619                           
 10620                           ; BSR set to: 2
 10621  00018C  5102               	movf	(_loRa+2)& (0+255),w,b
 10622  00018E  0B0F               	andlw	15
 10623  000190  0A03               	xorlw	3
 10624  000192  A4D8               	btfss	status,2,c
 10625  000194  0012               	return	
 10626                           
 10627                           ; BSR set to: 2
 10628  000196  51F1               	movf	(_loRa+241)& (0+255),w,b
 10629  000198  B4D8               	btfsc	status,2,c
 10630  00019A  0012               	return	
 10631                           
 10632                           ; BSR set to: 2
 10633                           ;lorawan.c: 1158: {
 10634                           ;lorawan.c: 1159: SetJoinFailState();
 10635  00019C  EFC1  F039         	goto	_SetJoinFailState	;wreg free
 10636  0001A0                     l14218:
 10637                           
 10638                           ; BSR set to: 3
 10639                           ;lorawan.c: 1163: }
 10640                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 10641  0001A0  0102               	movlb	2	; () banked
 10642  0001A2  5102               	movf	(_loRa+2)& (0+255),w,b
 10643  0001A4  0B0F               	andlw	15
 10644  0001A6  0A03               	xorlw	3
 10645  0001A8  E103               	bnz	l14222
 10646                           
 10647                           ; BSR set to: 2
 10648                           ;lorawan.c: 1167: {
 10649                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 10650  0001AA  51E3               	movf	(_loRa+227)& (0+255),w,b
 10651  0001AC  ECB2  F03A         	call	_SwTimerStop
 10652  0001B0                     l14222:
 10653                           
 10654                           ;lorawan.c: 1169: }
 10655                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 10656                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 10657  0001B0  C166  F3AF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 10658  0001B4  C167  F3B0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 10659                           
 10660                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 10661  0001B8  0103               	movlb	3	; () banked
 10662  0001BA  EE20 F007          	lfsr	2,7
 10663  0001BE  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10664  0001C0  26D9               	addwf	fsr2l,f,c
 10665  0001C2  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10666  0001C4  22DA               	addwfc	fsr2h,f,c
 10667  0001C6  CFDE F21E          	movff	postinc2,_loRa+30
 10668  0001CA  CFDE F21F          	movff	postinc2,_loRa+31
 10669  0001CE  CFDE F220          	movff	postinc2,_loRa+32
 10670  0001D2  CFDE F221          	movff	postinc2,_loRa+33
 10671                           
 10672                           ; BSR set to: 3
 10673                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 10674  0001D6  EE20 F00C          	lfsr	2,12
 10675  0001DA  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10676  0001DC  26D9               	addwf	fsr2l,f,c
 10677  0001DE  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10678  0001E0  22DA               	addwfc	fsr2h,f,c
 10679  0001E2  50DF               	movf	indf2,w,c
 10680  0001E4  0B0F               	andlw	15
 10681  0001E6  ECAD  F035         	call	_UpdateReceiveDelays
 10682                           
 10683                           ; BSR set to: 2
 10684                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 10685  0001EA  0103               	movlb	3	; () banked
 10686  0001EC  EE20 F00B          	lfsr	2,11
 10687  0001F0  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10688  0001F2  26D9               	addwf	fsr2l,f,c
 10689  0001F4  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10690  0001F6  22DA               	addwfc	fsr2h,f,c
 10691  0001F8  38DF               	swapf	223,w,c
 10692  0001FA  0B07               	andlw	7
 10693  0001FC  0100               	movlb	0	; () banked
 10694  0001FE  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 10695  000200  0103               	movlb	3	; () banked
 10696  000202  EE20 F00B          	lfsr	2,11
 10697  000206  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 10698  000208  26D9               	addwf	fsr2l,f,c
 10699  00020A  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 10700  00020C  22DA               	addwfc	fsr2h,f,c
 10701  00020E  50DF               	movf	223,w,c
 10702  000210  0B0F               	andlw	15
 10703  000212  EC22  F03B         	call	_UpdateDLSettings
 10704                           
 10705                           ; BSR set to: 0
 10706                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 10707  000216  C3AF  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 10708  00021A  C3B0  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 10709  00021E  0101               	movlb	1	; () banked
 10710  000220  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10711  000222  ECD9  F018         	call	_UpdateCfList
 10712                           
 10713                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 10714  000226  C3AF  F094         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 10715  00022A  C3B0  F095         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 10716  00022E  EC20  F02F         	call	_ComputeSessionKeys	;wreg free
 10717                           
 10718                           ; BSR set to: 0
 10719                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 10720  000232  6AE6               	clrf	postinc1,c
 10721  000234  EC92  F022         	call	_UpdateJoinSuccessState	;wreg free
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 10725  000238  0102               	movlb	2	; () banked
 10726  00023A  6B06               	clrf	(_loRa+6)& (0+255),b
 10727  00023C  6B07               	clrf	(_loRa+7)& (0+255),b
 10728  00023E  6B08               	clrf	(_loRa+8)& (0+255),b
 10729  000240  6B09               	clrf	(_loRa+9)& (0+255),b
 10730                           
 10731                           ; BSR set to: 2
 10732                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 10733  000242  6B0A               	clrf	(_loRa+10)& (0+255),b
 10734  000244  6B0B               	clrf	(_loRa+11)& (0+255),b
 10735  000246  6B0C               	clrf	(_loRa+12)& (0+255),b
 10736  000248  6B0D               	clrf	(_loRa+13)& (0+255),b
 10737  00024A  0012               	return	
 10738  00024C                     l14244:
 10739                           
 10740                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 10741  00024C  0103               	movlb	3	; () banked
 10742  00024E  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10743  000250  32E8               	rrcf	wreg,f,c
 10744  000252  0B07               	andlw	7
 10745  000254  0A03               	xorlw	3
 10746  000256  E007               	bz	l2133
 10747                           
 10748                           ; BSR set to: 3
 10749  000258  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10750  00025A  32E8               	rrcf	wreg,f,c
 10751  00025C  0B07               	andlw	7
 10752  00025E  0A05               	xorlw	5
 10753  000260  E002 EF9C  F031    	bnz	_SetReceptionNotOkState
 10754  000266                     l2133:
 10755                           
 10756                           ; BSR set to: 3
 10757                           ;lorawan.c: 1192: {
 10758                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 10759  000266  0102               	movlb	2	; () banked
 10760  000268  6BA7               	clrf	(_loRa+167)& (0+255),b
 10761                           
 10762                           ; BSR set to: 2
 10763                           ;lorawan.c: 1195: Hdr_t *hdr;
 10764                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 10765  00026A  C166  F3B2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 10766  00026E  C167  F3B3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 10767                           
 10768                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 10769  000272  0E02               	movlw	2
 10770  000274  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10771  000276  E001 D188          	bnz	l14362
 10772                           
 10773                           ; BSR set to: 2
 10774  00027A  0103               	movlb	3	; () banked
 10775  00027C  EE20 F001          	lfsr	2,1
 10776  000280  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10777  000282  26D9               	addwf	fsr2l,f,c
 10778  000284  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10779  000286  22DA               	addwfc	fsr2h,f,c
 10780  000288  0102               	movlb	2	; () banked
 10781  00028A  5162               	movf	(_loRa+98)& (0+255),w,b
 10782  00028C  18DE               	xorwf	postinc2,w,c
 10783  00028E  E109               	bnz	u16071
 10784  000290  5163               	movf	(_loRa+99)& (0+255),w,b
 10785  000292  18DE               	xorwf	postinc2,w,c
 10786  000294  E106               	bnz	u16071
 10787  000296  5164               	movf	(_loRa+100)& (0+255),w,b
 10788  000298  18DE               	xorwf	postinc2,w,c
 10789  00029A  E103               	bnz	u16071
 10790  00029C  5165               	movf	(_loRa+101)& (0+255),w,b
 10791  00029E  18DE               	xorwf	postinc2,w,c
 10792  0002A0  A4D8               	btfss	status,2,c
 10793  0002A2                     u16071:
 10794  0002A2  D173               	goto	l14362
 10795                           
 10796                           ; BSR set to: 2
 10797  0002A4  A504               	btfss	(_loRa+4)& (0+255),2,b
 10798  0002A6  D171               	goto	l14362
 10799                           
 10800                           ; BSR set to: 2
 10801                           ;lorawan.c: 1200: {
 10802                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 10803  0002A8  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 10804  0002AC  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 10805  0002B0  EC55  F030         	call	_CheckMcastFlags	;wreg free
 10806  0002B4  0900               	iorlw	0
 10807  0002B6  E107               	bnz	l14262
 10808  0002B8                     l14256:
 10809                           
 10810                           ;lorawan.c: 1203: {
 10811                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10812  0002B8  0102               	movlb	2	; () banked
 10813  0002BA  5102               	movf	(_loRa+2)& (0+255),w,b
 10814  0002BC  0BF0               	andlw	-16
 10815  0002BE  0909               	iorlw	9
 10816  0002C0  6F02               	movwf	(_loRa+2)& (0+255),b
 10817                           
 10818                           ; BSR set to: 2
 10819                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 10820  0002C2  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 10821  0002C6                     l14262:
 10822                           
 10823                           ;lorawan.c: 1207: }
 10824                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 10825  0002C6  0103               	movlb	3	; () banked
 10826  0002C8  EE20 F006          	lfsr	2,6
 10827  0002CC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10828  0002CE  26D9               	addwf	fsr2l,f,c
 10829  0002D0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10830  0002D2  22DA               	addwfc	fsr2h,f,c
 10831  0002D4  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10832  0002D8  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10833  0002DC  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 10834  0002E0  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 10835  0002E4  0100               	movlb	0	; () banked
 10836  0002E6  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 10837  0002E8  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 10838  0002EA  0101               	movlb	1	; () banked
 10839  0002EC  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10840  0002EE  0FFC               	addlw	252
 10841  0002F0  0100               	movlb	0	; () banked
 10842  0002F2  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 10843  0002F4  0E49               	movlw	73
 10844  0002F6  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 10845  0002F8  0E01               	movlw	1
 10846  0002FA  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 10847  0002FC  EC31  F02C         	call	_AssembleEncryptionBlock
 10848                           
 10849                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 10850  000300  0EEF               	movlw	low _radioBuffer
 10851  000302  6F64               	movwf	memcpy@d1& (0+255),b
 10852  000304  0E05               	movlw	high _radioBuffer
 10853  000306  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10854  000308  0EA0               	movlw	low _aesBuffer
 10855  00030A  6F66               	movwf	memcpy@s1& (0+255),b
 10856  00030C  0E01               	movlw	high _aesBuffer
 10857  00030E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10858  000310  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10859  000312  0E10               	movlw	16
 10860  000314  6F68               	movwf	memcpy@n& (0+255),b
 10861  000316  EC44  F034         	call	_memcpy	;wreg free
 10862                           
 10863                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 10864  00031A  0EFF               	movlw	low (_radioBuffer+16)
 10865  00031C  6F64               	movwf	memcpy@d1& (0+255),b
 10866  00031E  0E05               	movlw	high (_radioBuffer+16)
 10867  000320  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10868  000322  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 10869  000326  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 10870  00032A  0EFC               	movlw	252
 10871  00032C  0101               	movlb	1	; () banked
 10872  00032E  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10873  000330  0100               	movlb	0	; () banked
 10874  000332  6F68               	movwf	memcpy@n& (0+255),b
 10875  000334  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10876  000336  0EFF               	movlw	255
 10877  000338  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 10878  00033A  EC44  F034         	call	_memcpy	;wreg free
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 10882  00033E  0E66               	movlw	low (_loRa+102)
 10883  000340  6FBC               	movwf	AESCmac@key& (0+255),b
 10884  000342  0E02               	movlw	high (_loRa+102)
 10885  000344  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 10886  000346  0EA0               	movlw	low _aesBuffer
 10887  000348  6FBE               	movwf	AESCmac@output& (0+255),b
 10888  00034A  0E01               	movlw	high _aesBuffer
 10889  00034C  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 10890  00034E  0EEF               	movlw	low _radioBuffer
 10891  000350  6FC0               	movwf	AESCmac@input& (0+255),b
 10892  000352  0E05               	movlw	high _radioBuffer
 10893  000354  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 10894  000356  0101               	movlb	1	; () banked
 10895  000358  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10896  00035A  0F0C               	addlw	12
 10897  00035C  0100               	movlb	0	; () banked
 10898  00035E  6FC2               	movwf	AESCmac@size& (0+255),b
 10899  000360  EC0C  F00C         	call	_AESCmac	;wreg free
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 10903  000364  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 10904  000366  6F64               	movwf	memcpy@d1& (0+255),b
 10905  000368  0E03               	movlw	high LORAWAN_RxDone@computedMic
 10906  00036A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 10907  00036C  0EA0               	movlw	low _aesBuffer
 10908  00036E  6F66               	movwf	memcpy@s1& (0+255),b
 10909  000370  0E01               	movlw	high _aesBuffer
 10910  000372  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 10911  000374  6B69               	clrf	(memcpy@n+1)& (0+255),b
 10912  000376  0E04               	movlw	4
 10913  000378  6F68               	movwf	memcpy@n& (0+255),b
 10914  00037A  EC44  F034         	call	_memcpy	;wreg free
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 10918  00037E  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10919  000382  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10920  000386  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10921  00038A  EC84  F036         	call	_ExtractMic	;wreg free
 10922  00038E  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10923  000392  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10924  000396  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10925  00039A  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 10929  00039E  0103               	movlb	3	; () banked
 10930  0003A0  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10931  0003A2  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10932  0003A4  E189               	bnz	l14256
 10933  0003A6  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10934  0003A8  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10935  0003AA  E186               	bnz	l14256
 10936  0003AC  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10937  0003AE  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10938  0003B0  E183               	bnz	l14256
 10939  0003B2  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10940  0003B4  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10941  0003B6  E180               	bnz	l14256
 10942                           
 10943                           ; BSR set to: 3
 10944                           ;lorawan.c: 1222: }
 10945                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 10946  0003B8  EE20 F006          	lfsr	2,6
 10947  0003BC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10948  0003BE  26D9               	addwf	fsr2l,f,c
 10949  0003C0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10950  0003C2  22DA               	addwfc	fsr2h,f,c
 10951  0003C4  0102               	movlb	2	; () banked
 10952  0003C6  510E               	movf	(_loRa+14)& (0+255),w,b
 10953  0003C8  5CDE               	subwf	postinc2,w,c
 10954  0003CA  510F               	movf	(_loRa+15)& (0+255),w,b
 10955  0003CC  58DE               	subwfb	postinc2,w,c
 10956  0003CE  E334               	bnc	l14296
 10957                           
 10958                           ; BSR set to: 2
 10959                           ;lorawan.c: 1225: {
 10960                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 10961  0003D0  0103               	movlb	3	; () banked
 10962  0003D2  EE20 F006          	lfsr	2,6
 10963  0003D6  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 10964  0003D8  26D9               	addwf	fsr2l,f,c
 10965  0003DA  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 10966  0003DC  22DA               	addwfc	fsr2h,f,c
 10967  0003DE  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 10968  0003E2  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 10969  0003E6  0102               	movlb	2	; () banked
 10970  0003E8  510E               	movf	(_loRa+14)& (0+255),w,b
 10971  0003EA  0100               	movlb	0	; () banked
 10972  0003EC  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 10973  0003EE  0102               	movlb	2	; () banked
 10974  0003F0  510F               	movf	(_loRa+15)& (0+255),w,b
 10975  0003F2  0100               	movlb	0	; () banked
 10976  0003F4  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 10977  0003F6  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 10978  0003F8  0102               	movlb	2	; () banked
 10979  0003FA  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 10980  0003FC  0100               	movlb	0	; () banked
 10981  0003FE  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10982  000400  0102               	movlb	2	; () banked
 10983  000402  599F               	subwfb	(_loRa+159)& (0+255),w,b
 10984  000404  E20D               	bc	l14294
 10985  000406                     l14282:
 10986                           
 10987                           ; BSR set to: 2
 10988                           ;lorawan.c: 1227: {
 10989                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 10990  000406  0100               	movlb	0	; () banked
 10991  000408  51E8               	movf	_rxPayload& (0+255),w,b
 10992  00040A  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 10993  00040C  E101 D754          	bz	l14256
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;lorawan.c: 1229: {
 10997                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 10998  000410  6B67               	clrf	RxDataDone@pData& (0+255),b
 10999  000412  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 11000  000414  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 11001  000416  0E05               	movlw	5
 11002  000418  6F6A               	movwf	RxDataDone@status& (0+255),b
 11003  00041A  D801               	call	u16148
 11004  00041C  D74D               	goto	l14256
 11005  00041E                     u16148:
 11006  00041E  D0AC               	goto	u16248
 11007  000420                     l14294:
 11008                           
 11009                           ; BSR set to: 2
 11010                           ;lorawan.c: 1237: else
 11011                           ;lorawan.c: 1238: {
 11012                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 11013  000420  0103               	movlb	3	; () banked
 11014  000422  EE20 F006          	lfsr	2,6
 11015  000426  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11016  000428  26D9               	addwf	fsr2l,f,c
 11017  00042A  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11018  00042C  22DA               	addwfc	fsr2h,f,c
 11019  00042E  CFDE F20E          	movff	postinc2,_loRa+14
 11020  000432  CFDD F20F          	movff	postdec2,_loRa+15
 11021  000436  D013               	goto	l14314
 11022  000438                     l14296:
 11023                           
 11024                           ; BSR set to: 2
 11025                           ;lorawan.c: 1242: else
 11026                           ;lorawan.c: 1243: {
 11027                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11028  000438  0103               	movlb	3	; () banked
 11029  00043A  EE20 F006          	lfsr	2,6
 11030  00043E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11031  000440  26D9               	addwf	fsr2l,f,c
 11032  000442  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11033  000444  22DA               	addwfc	fsr2h,f,c
 11034  000446  50DE               	movf	postinc2,w,c
 11035  000448  10DE               	iorwf	postinc2,w,c
 11036  00044A  E1DD               	bnz	l14282
 11037                           
 11038                           ; BSR set to: 3
 11039  00044C  0102               	movlb	2	; () banked
 11040  00044E  290E               	incf	(_loRa+14)& (0+255),w,b
 11041  000450  E1DA               	bnz	l14282
 11042  000452  290F               	incf	(_loRa+15)& (0+255),w,b
 11043  000454  E1D8               	bnz	l14282
 11044                           
 11045                           ; BSR set to: 2
 11046                           ;lorawan.c: 1245: {
 11047                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11048  000456  6B0E               	clrf	(_loRa+14)& (0+255),b
 11049  000458  6B0F               	clrf	(_loRa+15)& (0+255),b
 11050                           
 11051                           ; BSR set to: 2
 11052                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11053  00045A  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11054  00045C  2B11               	incf	(_loRa+17)& (0+255),f,b
 11055  00045E                     l14314:
 11056                           
 11057                           ;lorawan.c: 1259: }
 11058                           ;lorawan.c: 1260: }
 11059                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11060  00045E  0102               	movlb	2	; () banked
 11061  000460  290E               	incf	(_loRa+14)& (0+255),w,b
 11062  000462  E107               	bnz	l14326
 11063  000464  290F               	incf	(_loRa+15)& (0+255),w,b
 11064  000466  E105               	bnz	l14326
 11065  000468  2910               	incf	(_loRa+16)& (0+255),w,b
 11066  00046A  E103               	bnz	l14326
 11067  00046C  2911               	incf	(_loRa+17)& (0+255),w,b
 11068  00046E  E101               	bnz	l14326
 11069  000470  D7CA               	goto	l14282
 11070  000472                     l14326:
 11071                           
 11072                           ; BSR set to: 2
 11073                           ;lorawan.c: 1272: }
 11074                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11075  000472  5102               	movf	(_loRa+2)& (0+255),w,b
 11076  000474  0B0F               	andlw	15
 11077  000476  0A08               	xorlw	8
 11078  000478  E108               	bnz	l14330
 11079                           
 11080                           ; BSR set to: 2
 11081                           ;lorawan.c: 1275: {
 11082                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11083  00047A  51E4               	movf	(_loRa+228)& (0+255),w,b
 11084  00047C  ECB2  F03A         	call	_SwTimerStop
 11085                           
 11086                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11087  000480  0102               	movlb	2	; () banked
 11088  000482  51E5               	movf	(_loRa+229)& (0+255),w,b
 11089  000484  ECB2  F03A         	call	_SwTimerStop
 11090                           
 11091                           ;lorawan.c: 1278: }
 11092  000488  D007               	goto	l14334
 11093  00048A                     l14330:
 11094                           
 11095                           ; BSR set to: 2
 11096                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11097  00048A  5102               	movf	(_loRa+2)& (0+255),w,b
 11098  00048C  0B0F               	andlw	15
 11099  00048E  0A03               	xorlw	3
 11100  000490  E103               	bnz	l14334
 11101                           
 11102                           ; BSR set to: 2
 11103                           ;lorawan.c: 1280: {
 11104                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11105  000492  51E5               	movf	(_loRa+229)& (0+255),w,b
 11106  000494  ECB2  F03A         	call	_SwTimerStop
 11107  000498                     l14334:
 11108                           
 11109                           ;lorawan.c: 1282: }
 11110                           ;lorawan.c: 1284: buffer = buffer + 8;
 11111  000498  0E08               	movlw	8
 11112  00049A  0101               	movlb	1	; () banked
 11113  00049C  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11114  00049E  0E00               	movlw	0
 11115  0004A0  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11116                           
 11117                           ; BSR set to: 1
 11118                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11119  0004A2  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11120  0004A4  0100               	movlb	0	; () banked
 11121  0004A6  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11122  0004A8  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11123  0004AA  0103               	movlb	3	; () banked
 11124  0004AC  EE20 F005          	lfsr	2,5
 11125  0004B0  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11126  0004B2  26D9               	addwf	fsr2l,f,c
 11127  0004B4  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11128  0004B6  22DA               	addwfc	fsr2h,f,c
 11129  0004B8  50DF               	movf	223,w,c
 11130  0004BA  0B0F               	andlw	15
 11131  0004BC  0100               	movlb	0	; () banked
 11132  0004BE  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11133  0004C0  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11134  0004C2  0E0C               	movlw	12
 11135  0004C4  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11136  0004C6  0E00               	movlw	0
 11137  0004C8  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11138  0004CA  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11139  0004CC  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11140  0004CE  E103               	bnz	u16220
 11141  0004D0  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11142  0004D2  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11143  0004D4  E03A               	bz	l2150
 11144  0004D6                     u16220:
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;lorawan.c: 1287: {
 11148                           ;lorawan.c: 1288: fPort = *(buffer++);
 11149  0004D6  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11150  0004DA  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11151  0004DE  50DF               	movf	indf2,w,c
 11152  0004E0  0103               	movlb	3	; () banked
 11153  0004E2  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11154                           
 11155                           ; BSR set to: 3
 11156  0004E4  0101               	movlb	1	; () banked
 11157  0004E6  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11158  0004E8  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11159                           
 11160                           ; BSR set to: 1
 11161                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11162  0004EA  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11163  0004EC  0FF4               	addlw	244
 11164  0004EE  0103               	movlb	3	; () banked
 11165  0004F0  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11166                           
 11167                           ; BSR set to: 3
 11168                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11169  0004F2  0E19               	movlw	25
 11170  0004F4  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11171                           
 11172                           ; BSR set to: 3
 11173                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11174  0004F6  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11175  0004FA  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11176  0004FE  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11177  000500  0100               	movlb	0	; () banked
 11178  000502  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11179  000504  0E01               	movlw	1
 11180  000506  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11181  000508  C20E  F098         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11182  00050C  C20F  F099         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11183  000510  C210  F09A         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11184  000514  C211  F09B         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11185  000518  0E76               	movlw	low (_loRa+118)
 11186  00051A  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11187  00051C  0E02               	movlw	high (_loRa+118)
 11188  00051E  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11189  000520  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11190  000524  0EEF               	movlw	low _radioBuffer
 11191  000526  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11192  000528  0E05               	movlw	high _radioBuffer
 11193  00052A  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11194  00052C  0E01               	movlw	1
 11195  00052E  6FA1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11196  000530  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;lorawan.c: 1294: packet = buffer - 1;
 11200  000534  0EFF               	movlw	255
 11201  000536  0101               	movlb	1	; () banked
 11202  000538  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11203  00053A  0103               	movlb	3	; () banked
 11204  00053C  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11205  00053E  0EFF               	movlw	255
 11206  000540  0101               	movlb	1	; () banked
 11207  000542  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11208  000544  0103               	movlb	3	; () banked
 11209  000546  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11210                           
 11211                           ;lorawan.c: 1295: }
 11212  000548  D004               	goto	l2151
 11213  00054A                     l2150:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;lorawan.c: 1296: else
 11217                           ;lorawan.c: 1297: {
 11218                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11219  00054A  0103               	movlb	3	; () banked
 11220  00054C  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11221                           
 11222                           ;lorawan.c: 1299: packet = (0);
 11223  00054E  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11224  000550  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11225  000552                     l2151:
 11226                           
 11227                           ; BSR set to: 3
 11228                           ;lorawan.c: 1300: }
 11229                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11230  000552  0102               	movlb	2	; () banked
 11231  000554  8303               	bsf	(_loRa+3)& (0+255),1,b
 11232                           
 11233                           ; BSR set to: 2
 11234                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11235  000556  0EF0               	movlw	-16
 11236  000558  1702               	andwf	(_loRa+2)& (0+255),f,b
 11237                           
 11238                           ; BSR set to: 2
 11239                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11240  00055A  0100               	movlb	0	; () banked
 11241  00055C  51E8               	movf	_rxPayload& (0+255),w,b
 11242  00055E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11243  000560  E101 D6AA          	bz	l14256
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;lorawan.c: 1306: {
 11247                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11248  000564  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11249  000568  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11250  00056C  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11251  000570  0E01               	movlw	1
 11252  000572  6F6A               	movwf	RxDataDone@status& (0+255),b
 11253  000574  D801               	call	u16248
 11254  000576  D6A0               	goto	l14256
 11255  000578                     u16248:
 11256  000578  0005               	push	
 11257  00057A  6EFA               	movwf	pclath,c
 11258  00057C  51E8               	movf	_rxPayload& (0+255),w,b
 11259  00057E  6EFD               	movwf	tosl,c
 11260  000580  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11261  000582  6EFE               	movwf	tosh,c
 11262  000584  6AFF               	clrf	tosu,c
 11263  000586  50FA               	movf	pclath,w,c
 11264  000588  0012               	return		;indir
 11265  00058A                     l14362:
 11266                           
 11267                           ; BSR set to: 2
 11268                           ;lorawan.c: 1313: }
 11269                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11270  00058A  0103               	movlb	3	; () banked
 11271  00058C  EE20 F001          	lfsr	2,1
 11272  000590  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11273  000592  26D9               	addwf	fsr2l,f,c
 11274  000594  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11275  000596  22DA               	addwfc	fsr2h,f,c
 11276  000598  0102               	movlb	2	; () banked
 11277  00059A  511E               	movf	(_loRa+30)& (0+255),w,b
 11278  00059C  18DE               	xorwf	postinc2,w,c
 11279  00059E  E109               	bnz	u16250
 11280  0005A0  511F               	movf	(_loRa+31)& (0+255),w,b
 11281  0005A2  18DE               	xorwf	postinc2,w,c
 11282  0005A4  E106               	bnz	u16250
 11283  0005A6  5120               	movf	(_loRa+32)& (0+255),w,b
 11284  0005A8  18DE               	xorwf	postinc2,w,c
 11285  0005AA  E103               	bnz	u16250
 11286  0005AC  5121               	movf	(_loRa+33)& (0+255),w,b
 11287  0005AE  18DE               	xorwf	postinc2,w,c
 11288  0005B0  E008               	bz	l14374
 11289  0005B2                     u16250:
 11290                           
 11291                           ; BSR set to: 2
 11292                           ;lorawan.c: 1317: {
 11293                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11294  0005B2  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11295  0005B6                     l14366:
 11296                           
 11297                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11298  0005B6  0E02               	movlw	2
 11299  0005B8  0102               	movlb	2	; () banked
 11300  0005BA                     L5:
 11301  0005BA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11302  0005BC  E101 D67C          	bz	l14256
 11303  0005C0  0012               	return	
 11304  0005C2                     l14374:
 11305                           
 11306                           ; BSR set to: 2
 11307                           ;lorawan.c: 1325: }
 11308                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11309  0005C2  0103               	movlb	3	; () banked
 11310  0005C4  EE20 F006          	lfsr	2,6
 11311  0005C8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11312  0005CA  26D9               	addwf	fsr2l,f,c
 11313  0005CC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11314  0005CE  22DA               	addwfc	fsr2h,f,c
 11315  0005D0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11316  0005D4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11317  0005D8  C0DD  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11318  0005DC  C0DE  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11319  0005E0  0100               	movlb	0	; () banked
 11320  0005E2  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11321  0005E4  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11322  0005E6  0101               	movlb	1	; () banked
 11323  0005E8  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11324  0005EA  0FFC               	addlw	252
 11325  0005EC  0100               	movlb	0	; () banked
 11326  0005EE  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11327  0005F0  0E49               	movlw	73
 11328  0005F2  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11329  0005F4  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11330  0005F6  0E01               	movlw	1
 11331  0005F8  EC31  F02C         	call	_AssembleEncryptionBlock
 11332                           
 11333                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11334  0005FC  0EEF               	movlw	low _radioBuffer
 11335  0005FE  6F64               	movwf	memcpy@d1& (0+255),b
 11336  000600  0E05               	movlw	high _radioBuffer
 11337  000602  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11338  000604  0EA0               	movlw	low _aesBuffer
 11339  000606  6F66               	movwf	memcpy@s1& (0+255),b
 11340  000608  0E01               	movlw	high _aesBuffer
 11341  00060A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11342  00060C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11343  00060E  0E10               	movlw	16
 11344  000610  6F68               	movwf	memcpy@n& (0+255),b
 11345  000612  EC44  F034         	call	_memcpy	;wreg free
 11346                           
 11347                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11348  000616  0EFF               	movlw	low (_radioBuffer+16)
 11349  000618  6F64               	movwf	memcpy@d1& (0+255),b
 11350  00061A  0E05               	movlw	high (_radioBuffer+16)
 11351  00061C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11352  00061E  C166  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11353  000622  C167  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11354  000626  0EFC               	movlw	252
 11355  000628  0101               	movlb	1	; () banked
 11356  00062A  2568               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11357  00062C  0100               	movlb	0	; () banked
 11358  00062E  6F68               	movwf	memcpy@n& (0+255),b
 11359  000630  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11360  000632  0EFF               	movlw	255
 11361  000634  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11362  000636  EC44  F034         	call	_memcpy	;wreg free
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11366  00063A  0E22               	movlw	low (_loRa+34)
 11367  00063C  6FBC               	movwf	AESCmac@key& (0+255),b
 11368  00063E  0E02               	movlw	high (_loRa+34)
 11369  000640  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 11370  000642  0EA0               	movlw	low _aesBuffer
 11371  000644  6FBE               	movwf	AESCmac@output& (0+255),b
 11372  000646  0E01               	movlw	high _aesBuffer
 11373  000648  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 11374  00064A  0EEF               	movlw	low _radioBuffer
 11375  00064C  6FC0               	movwf	AESCmac@input& (0+255),b
 11376  00064E  0E05               	movlw	high _radioBuffer
 11377  000650  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 11378  000652  0101               	movlb	1	; () banked
 11379  000654  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11380  000656  0F0C               	addlw	12
 11381  000658  0100               	movlb	0	; () banked
 11382  00065A  6FC2               	movwf	AESCmac@size& (0+255),b
 11383  00065C  EC0C  F00C         	call	_AESCmac	;wreg free
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11387  000660  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 11388  000662  6F64               	movwf	memcpy@d1& (0+255),b
 11389  000664  0E03               	movlw	high LORAWAN_RxDone@computedMic
 11390  000666  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11391  000668  0EA0               	movlw	low _aesBuffer
 11392  00066A  6F66               	movwf	memcpy@s1& (0+255),b
 11393  00066C  0E01               	movlw	high _aesBuffer
 11394  00066E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11395  000670  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11396  000672  0E04               	movlw	4
 11397  000674  6F68               	movwf	memcpy@n& (0+255),b
 11398  000676  EC44  F034         	call	_memcpy	;wreg free
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11402  00067A  C166  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11403  00067E  C167  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11404  000682  C168  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11405  000686  EC84  F036         	call	_ExtractMic	;wreg free
 11406  00068A  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11407  00068E  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11408  000692  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11409  000696  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11413  00069A  0103               	movlb	3	; () banked
 11414  00069C  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11415  00069E  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11416  0006A0  E109               	bnz	u16270
 11417  0006A2  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11418  0006A4  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11419  0006A6  E106               	bnz	u16270
 11420  0006A8  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11421  0006AA  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11422  0006AC  E103               	bnz	u16270
 11423  0006AE  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11424  0006B0  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11425  0006B2  E003               	bz	l14394
 11426  0006B4                     u16270:
 11427                           
 11428                           ; BSR set to: 3
 11429                           ;lorawan.c: 1337: {
 11430                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11431  0006B4  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11432  0006B8  D77E               	goto	l14366
 11433  0006BA                     l14394:
 11434                           
 11435                           ; BSR set to: 3
 11436                           ;lorawan.c: 1345: }
 11437                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11438  0006BA  EE20 F006          	lfsr	2,6
 11439  0006BE  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11440  0006C0  26D9               	addwf	fsr2l,f,c
 11441  0006C2  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11442  0006C4  22DA               	addwfc	fsr2h,f,c
 11443  0006C6  0102               	movlb	2	; () banked
 11444  0006C8  510A               	movf	(_loRa+10)& (0+255),w,b
 11445  0006CA  5CDE               	subwf	postinc2,w,c
 11446  0006CC  510B               	movf	(_loRa+11)& (0+255),w,b
 11447  0006CE  58DE               	subwfb	postinc2,w,c
 11448  0006D0  E344               	bnc	l14424
 11449                           
 11450                           ; BSR set to: 2
 11451                           ;lorawan.c: 1349: {
 11452                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11453  0006D2  0103               	movlb	3	; () banked
 11454  0006D4  EE20 F006          	lfsr	2,6
 11455  0006D8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11456  0006DA  26D9               	addwf	fsr2l,f,c
 11457  0006DC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11458  0006DE  22DA               	addwfc	fsr2h,f,c
 11459  0006E0  CFDE F0DD          	movff	postinc2,??_LORAWAN_RxDone
 11460  0006E4  CFDD F0DE          	movff	postdec2,??_LORAWAN_RxDone+1
 11461  0006E8  0102               	movlb	2	; () banked
 11462  0006EA  510A               	movf	(_loRa+10)& (0+255),w,b
 11463  0006EC  0100               	movlb	0	; () banked
 11464  0006EE  5FDD               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11465  0006F0  0102               	movlb	2	; () banked
 11466  0006F2  510B               	movf	(_loRa+11)& (0+255),w,b
 11467  0006F4  0100               	movlb	0	; () banked
 11468  0006F6  5BDE               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11469  0006F8  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11470  0006FA  0102               	movlb	2	; () banked
 11471  0006FC  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11472  0006FE  0100               	movlb	0	; () banked
 11473  000700  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11474  000702  0102               	movlb	2	; () banked
 11475  000704  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11476  000706  E21D               	bc	l14422
 11477                           
 11478                           ; BSR set to: 2
 11479                           ;lorawan.c: 1351: {
 11480                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11481  000708  9100               	bcf	_loRa& (0+255),0,b
 11482                           
 11483                           ; BSR set to: 2
 11484                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11485  00070A  0EF0               	movlw	-16
 11486  00070C  1702               	andwf	(_loRa+2)& (0+255),f,b
 11487                           
 11488                           ; BSR set to: 2
 11489                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11490  00070E  0100               	movlb	0	; () banked
 11491  000710  51E8               	movf	_rxPayload& (0+255),w,b
 11492  000712  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11493  000714  E013               	bz	l14408
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;lorawan.c: 1355: {
 11497                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11498  000716  0102               	movlb	2	; () banked
 11499  000718  9B00               	bcf	_loRa& (0+255),5,b
 11500                           
 11501                           ; BSR set to: 2
 11502                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11503  00071A  0E00               	movlw	0
 11504  00071C  0100               	movlb	0	; () banked
 11505  00071E  6B67               	clrf	RxDataDone@pData& (0+255),b
 11506  000720  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 11507  000722  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 11508  000724  6B6A               	clrf	RxDataDone@status& (0+255),b
 11509  000726  D801               	call	u16328
 11510  000728  D009               	goto	l14408
 11511  00072A                     u16328:
 11512  00072A  0005               	push	
 11513  00072C  6EFA               	movwf	pclath,c
 11514  00072E  51E8               	movf	_rxPayload& (0+255),w,b
 11515  000730  6EFD               	movwf	tosl,c
 11516  000732  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11517  000734  6EFE               	movwf	tosh,c
 11518  000736  6AFF               	clrf	tosu,c
 11519  000738  50FA               	movf	pclath,w,c
 11520  00073A  0012               	return		;indir
 11521  00073C                     l14408:
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;lorawan.c: 1358: }
 11525                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11526  00073C  0102               	movlb	2	; () banked
 11527  00073E  9303               	bcf	(_loRa+3)& (0+255),1,b
 11528  000740  D036               	goto	l14444
 11529  000742                     l14422:
 11530                           
 11531                           ; BSR set to: 2
 11532                           ;lorawan.c: 1370: else
 11533                           ;lorawan.c: 1371: {
 11534                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11535  000742  0103               	movlb	3	; () banked
 11536  000744  EE20 F006          	lfsr	2,6
 11537  000748  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11538  00074A  26D9               	addwf	fsr2l,f,c
 11539  00074C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11540  00074E  22DA               	addwfc	fsr2h,f,c
 11541  000750  CFDE F20A          	movff	postinc2,_loRa+10
 11542  000754  CFDD F20B          	movff	postdec2,_loRa+11
 11543  000758  D021               	goto	l14442
 11544  00075A                     l14424:
 11545                           
 11546                           ; BSR set to: 2
 11547                           ;lorawan.c: 1375: else
 11548                           ;lorawan.c: 1376: {
 11549                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11550  00075A  0103               	movlb	3	; () banked
 11551  00075C  EE20 F006          	lfsr	2,6
 11552  000760  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11553  000762  26D9               	addwf	fsr2l,f,c
 11554  000764  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11555  000766  22DA               	addwfc	fsr2h,f,c
 11556  000768  50DE               	movf	postinc2,w,c
 11557  00076A  10DE               	iorwf	postinc2,w,c
 11558  00076C  E114               	bnz	l14432
 11559                           
 11560                           ; BSR set to: 3
 11561  00076E  0102               	movlb	2	; () banked
 11562  000770  290A               	incf	(_loRa+10)& (0+255),w,b
 11563  000772  E111               	bnz	l14432
 11564  000774  290B               	incf	(_loRa+11)& (0+255),w,b
 11565  000776  E10F               	bnz	l14432
 11566                           
 11567                           ; BSR set to: 2
 11568                           ;lorawan.c: 1378: {
 11569                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11570  000778  0103               	movlb	3	; () banked
 11571  00077A  EE20 F006          	lfsr	2,6
 11572  00077E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11573  000780  26D9               	addwf	fsr2l,f,c
 11574  000782  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11575  000784  22DA               	addwfc	fsr2h,f,c
 11576  000786  CFDE F20A          	movff	postinc2,_loRa+10
 11577  00078A  CFDD F20B          	movff	postdec2,_loRa+11
 11578                           
 11579                           ; BSR set to: 3
 11580                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11581  00078E  0102               	movlb	2	; () banked
 11582  000790  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11583  000792  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11584                           
 11585                           ;lorawan.c: 1382: }
 11586  000794  D003               	goto	l14442
 11587  000796                     l14432:
 11588                           
 11589                           ;lorawan.c: 1383: else
 11590                           ;lorawan.c: 1384: {
 11591                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11592  000796  EC9C  F031         	call	_SetReceptionNotOkState	;wreg free
 11593  00079A  D70D               	goto	l14366
 11594  00079C                     l14442:
 11595                           
 11596                           ;lorawan.c: 1393: }
 11597                           ;lorawan.c: 1394: }
 11598                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11599  00079C  0102               	movlb	2	; () banked
 11600  00079E  290A               	incf	(_loRa+10)& (0+255),w,b
 11601  0007A0  E109               	bnz	l14454
 11602  0007A2  290B               	incf	(_loRa+11)& (0+255),w,b
 11603  0007A4  E107               	bnz	l14454
 11604  0007A6  290C               	incf	(_loRa+12)& (0+255),w,b
 11605  0007A8  E105               	bnz	l14454
 11606  0007AA  290D               	incf	(_loRa+13)& (0+255),w,b
 11607  0007AC  E103               	bnz	l14454
 11608  0007AE                     l14444:
 11609                           
 11610                           ; BSR set to: 2
 11611                           ;lorawan.c: 1397: {
 11612                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11613  0007AE  8304               	bsf	(_loRa+4)& (0+255),1,b
 11614                           
 11615                           ; BSR set to: 2
 11616                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11617  0007B0  0E02               	movlw	2
 11618  0007B2  D703               	goto	L5
 11619  0007B4                     l14454:
 11620                           
 11621                           ; BSR set to: 2
 11622                           ;lorawan.c: 1407: }
 11623                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11624  0007B4  5102               	movf	(_loRa+2)& (0+255),w,b
 11625  0007B6  0B0F               	andlw	15
 11626  0007B8  0A03               	xorlw	3
 11627  0007BA  E103               	bnz	l14458
 11628                           
 11629                           ; BSR set to: 2
 11630                           ;lorawan.c: 1411: {
 11631                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 11632  0007BC  51E5               	movf	(_loRa+229)& (0+255),w,b
 11633  0007BE  ECB2  F03A         	call	_SwTimerStop
 11634  0007C2                     l14458:
 11635                           
 11636                           ;lorawan.c: 1413: }
 11637                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11638  0007C2  0E01               	movlw	1
 11639  0007C4  0102               	movlb	2	; () banked
 11640  0007C6  6FD8               	movwf	(_loRa+216)& (0+255),b
 11641                           
 11642                           ; BSR set to: 2
 11643                           ;lorawan.c: 1417: CheckFlags (hdr);
 11644  0007C8  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 11645  0007CC  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 11646  0007D0  EC8C  F033         	call	_CheckFlags	;wreg free
 11647                           
 11648                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 11649  0007D4  0103               	movlb	3	; () banked
 11650  0007D6  EE20 F005          	lfsr	2,5
 11651  0007DA  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11652  0007DC  26D9               	addwf	fsr2l,f,c
 11653  0007DE  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11654  0007E0  22DA               	addwfc	fsr2h,f,c
 11655  0007E2  50DF               	movf	223,w,c
 11656  0007E4  0B0F               	andlw	15
 11657  0007E6  E01B               	bz	l14466
 11658                           
 11659                           ; BSR set to: 3
 11660                           ;lorawan.c: 1420: {
 11661                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 11662  0007E8  0E08               	movlw	8
 11663  0007EA  25B2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 11664  0007EC  0100               	movlb	0	; () banked
 11665  0007EE  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 11666  0007F0  0E00               	movlw	0
 11667  0007F2  0103               	movlb	3	; () banked
 11668  0007F4  21B3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11669  0007F6  0100               	movlb	0	; () banked
 11670  0007F8  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 11671  0007FA  0103               	movlb	3	; () banked
 11672  0007FC  EE20 F005          	lfsr	2,5
 11673  000800  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11674  000802  26D9               	addwf	fsr2l,f,c
 11675  000804  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11676  000806  22DA               	addwfc	fsr2h,f,c
 11677  000808  50DF               	movf	223,w,c
 11678  00080A  0B0F               	andlw	15
 11679  00080C  0100               	movlb	0	; () banked
 11680  00080E  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11681  000810  ECEA  F016         	call	_MacExecuteCommands	;wreg free
 11682  000814  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11683  000818  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11684                           
 11685                           ;lorawan.c: 1422: }
 11686  00081C  D005               	goto	l14468
 11687  00081E                     l14466:
 11688                           
 11689                           ; BSR set to: 3
 11690                           ;lorawan.c: 1423: else
 11691                           ;lorawan.c: 1424: {
 11692                           ;lorawan.c: 1425: buffer = buffer + 8;
 11693  00081E  0E08               	movlw	8
 11694  000820  0101               	movlb	1	; () banked
 11695  000822  2766               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11696  000824  0E00               	movlw	0
 11697  000826  2367               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11698  000828                     l14468:
 11699                           
 11700                           ;lorawan.c: 1426: }
 11701                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11702  000828  0101               	movlb	1	; () banked
 11703  00082A  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11704  00082C  0100               	movlb	0	; () banked
 11705  00082E  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11706  000830  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11707  000832  0103               	movlb	3	; () banked
 11708  000834  EE20 F005          	lfsr	2,5
 11709  000838  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11710  00083A  26D9               	addwf	fsr2l,f,c
 11711  00083C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11712  00083E  22DA               	addwfc	fsr2h,f,c
 11713  000840  50DF               	movf	223,w,c
 11714  000842  0B0F               	andlw	15
 11715  000844  0100               	movlb	0	; () banked
 11716  000846  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11717  000848  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11718  00084A  0E0C               	movlw	12
 11719  00084C  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11720  00084E  0E00               	movlw	0
 11721  000850  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11722  000852  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11723  000854  19DF               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11724  000856  E104               	bnz	u16410
 11725  000858  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11726  00085A  19E0               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11727  00085C  E101 D09B          	bz	l2171
 11728  000860                     u16410:
 11729                           
 11730                           ; BSR set to: 0
 11731                           ;lorawan.c: 1428: {
 11732                           ;lorawan.c: 1429: fPort = *(buffer++);
 11733  000860  C166  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11734  000864  C167  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11735  000868  50DF               	movf	indf2,w,c
 11736  00086A  0103               	movlb	3	; () banked
 11737  00086C  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11738                           
 11739                           ; BSR set to: 3
 11740  00086E  0101               	movlb	1	; () banked
 11741  000870  4B66               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11742  000872  2B67               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11743                           
 11744                           ; BSR set to: 1
 11745                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 11746  000874  0103               	movlb	3	; () banked
 11747  000876  EE20 F005          	lfsr	2,5
 11748  00087A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11749  00087C  26D9               	addwf	fsr2l,f,c
 11750  00087E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11751  000880  22DA               	addwfc	fsr2h,f,c
 11752  000882  50DF               	movf	223,w,c
 11753  000884  0B0F               	andlw	15
 11754  000886  0100               	movlb	0	; () banked
 11755  000888  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11756  00088A  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11757  00088C  0101               	movlb	1	; () banked
 11758  00088E  5D68               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11759  000890  0FF4               	addlw	244
 11760  000892  0103               	movlb	3	; () banked
 11761  000894  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11762                           
 11763                           ; BSR set to: 3
 11764                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 11765  000896  EE20 F005          	lfsr	2,5
 11766  00089A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11767  00089C  26D9               	addwf	fsr2l,f,c
 11768  00089E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11769  0008A0  22DA               	addwfc	fsr2h,f,c
 11770  0008A2  50DF               	movf	223,w,c
 11771  0008A4  0B0F               	andlw	15
 11772  0008A6  0F19               	addlw	25
 11773  0008A8  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11774                           
 11775                           ; BSR set to: 3
 11776                           ;lorawan.c: 1434: if (fPort != 0)
 11777  0008AA  51A0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 11778  0008AC  E029               	bz	l14484
 11779                           
 11780                           ; BSR set to: 3
 11781                           ;lorawan.c: 1435: {
 11782                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 11783  0008AE  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11784  0008B2  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11785  0008B6  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11786  0008B8  0100               	movlb	0	; () banked
 11787  0008BA  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11788  0008BC  0E01               	movlw	1
 11789  0008BE  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11790  0008C0  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11791  0008C4  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11792  0008C8  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11793  0008CC  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11794  0008D0  0E32               	movlw	low (_loRa+50)
 11795  0008D2  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11796  0008D4  0E02               	movlw	high (_loRa+50)
 11797  0008D6  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11798  0008D8  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11799  0008DC  0EEF               	movlw	low _radioBuffer
 11800  0008DE  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11801  0008E0  0E05               	movlw	high _radioBuffer
 11802  0008E2  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11803  0008E4  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11804  0008E6  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;lorawan.c: 1437: packet = buffer - 1;
 11808  0008EA  0EFF               	movlw	255
 11809  0008EC  0101               	movlb	1	; () banked
 11810  0008EE  2566               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11811  0008F0  0103               	movlb	3	; () banked
 11812  0008F2  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11813  0008F4  0EFF               	movlw	255
 11814  0008F6  0101               	movlb	1	; () banked
 11815  0008F8  2167               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11816  0008FA  0103               	movlb	3	; () banked
 11817  0008FC  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11818                           
 11819                           ;lorawan.c: 1438: }
 11820  0008FE  D04F               	goto	l14494
 11821  000900                     l14484:
 11822                           
 11823                           ; BSR set to: 3
 11824                           ;lorawan.c: 1439: else
 11825                           ;lorawan.c: 1440: {
 11826                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 11827  000900  0101               	movlb	1	; () banked
 11828  000902  5168               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11829  000904  0100               	movlb	0	; () banked
 11830  000906  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 11831  000908  6BDE               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11832  00090A  0103               	movlb	3	; () banked
 11833  00090C  EE20 F005          	lfsr	2,5
 11834  000910  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11835  000912  26D9               	addwf	fsr2l,f,c
 11836  000914  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11837  000916  22DA               	addwfc	fsr2h,f,c
 11838  000918  50DF               	movf	223,w,c
 11839  00091A  0B0F               	andlw	15
 11840  00091C  0100               	movlb	0	; () banked
 11841  00091E  6FDF               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11842  000920  6BE0               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11843  000922  0E0D               	movlw	13
 11844  000924  27DF               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11845  000926  0E00               	movlw	0
 11846  000928  23E0               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11847  00092A  51DD               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11848  00092C  5DDF               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11849  00092E  51E0               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11850  000930  0A80               	xorlw	128
 11851  000932  6FE1               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 11852  000934  51DE               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11853  000936  0A80               	xorlw	128
 11854  000938  59E1               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 11855  00093A  E22D               	bc	l2171
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;lorawan.c: 1443: {
 11859                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 11860  00093C  C166  F094         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11861  000940  C167  F095         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11862  000944  0103               	movlb	3	; () banked
 11863  000946  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11864  000948  0100               	movlb	0	; () banked
 11865  00094A  6F96               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11866  00094C  0E01               	movlw	1
 11867  00094E  6F97               	movwf	EncryptFRMPayload@dir& (0+255),b
 11868  000950  C20A  F098         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 11869  000954  C20B  F099         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 11870  000958  C20C  F09A         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 11871  00095C  C20D  F09B         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 11872  000960  0E22               	movlw	low (_loRa+34)
 11873  000962  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 11874  000964  0E02               	movlw	high (_loRa+34)
 11875  000966  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11876  000968  C3A7  F09E         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11877  00096C  0EEF               	movlw	low _radioBuffer
 11878  00096E  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11879  000970  0E05               	movlw	high _radioBuffer
 11880  000972  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11881  000974  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 11882  000976  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 11886  00097A  C166  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 11887  00097E  C167  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 11888  000982  0103               	movlb	3	; () banked
 11889  000984  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11890  000986  0100               	movlb	0	; () banked
 11891  000988  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 11892  00098A  ECEA  F016         	call	_MacExecuteCommands	;wreg free
 11893  00098E  C07A  F166         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 11894  000992  C07B  F167         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 11895  000996                     l2171:
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;lorawan.c: 1453: else
 11899                           ;lorawan.c: 1454: {
 11900                           ;lorawan.c: 1455: frmPayloadLength = 0;
 11901  000996  0103               	movlb	3	; () banked
 11902  000998  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11903                           
 11904                           ;lorawan.c: 1456: packet = (0);
 11905  00099A  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11906  00099C  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11907  00099E                     l14494:
 11908                           
 11909                           ; BSR set to: 3
 11910                           ;lorawan.c: 1457: }
 11911                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 11912  00099E  0E01               	movlw	1
 11913  0009A0  0102               	movlb	2	; () banked
 11914  0009A2  6FD8               	movwf	(_loRa+216)& (0+255),b
 11915                           
 11916                           ; BSR set to: 2
 11917                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 11918  0009A4  6BD0               	clrf	(_loRa+208)& (0+255),b
 11919  0009A6  6BD1               	clrf	(_loRa+209)& (0+255),b
 11920                           
 11921                           ; BSR set to: 2
 11922                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 11923  0009A8  6BEE               	clrf	(_loRa+238)& (0+255),b
 11924                           
 11925                           ; BSR set to: 2
 11926                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 11927  0009AA  9900               	bcf	_loRa& (0+255),4,b
 11928                           
 11929                           ; BSR set to: 2
 11930                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 11931  0009AC  8303               	bsf	(_loRa+3)& (0+255),1,b
 11932                           
 11933                           ; BSR set to: 2
 11934                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 11935  0009AE  A100               	btfss	_loRa& (0+255),0,b
 11936  0009B0  D04D               	goto	l14538
 11937                           
 11938                           ; BSR set to: 2
 11939                           ;lorawan.c: 1468: {
 11940                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 11941  0009B2  0103               	movlb	3	; () banked
 11942  0009B4  EE20 F005          	lfsr	2,5
 11943  0009B8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11944  0009BA  26D9               	addwf	fsr2l,f,c
 11945  0009BC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11946  0009BE  22DA               	addwfc	fsr2h,f,c
 11947  0009C0  AADF               	btfss	indf2,5,c
 11948  0009C2  D041               	goto	l14536
 11949                           
 11950                           ; BSR set to: 3
 11951                           ;lorawan.c: 1470: {
 11952                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11953  0009C4  0102               	movlb	2	; () banked
 11954  0009C6  9100               	bcf	_loRa& (0+255),0,b
 11955                           
 11956                           ; BSR set to: 2
 11957                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 11958  0009C8  0EF0               	movlw	-16
 11959  0009CA  1702               	andwf	(_loRa+2)& (0+255),f,b
 11960                           
 11961                           ; BSR set to: 2
 11962                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 11963  0009CC  0100               	movlb	0	; () banked
 11964  0009CE  51E8               	movf	_rxPayload& (0+255),w,b
 11965  0009D0  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 11966  0009D2  E016               	bz	l14518
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;lorawan.c: 1474: {
 11970                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 11971  0009D4  0102               	movlb	2	; () banked
 11972  0009D6  9B00               	bcf	_loRa& (0+255),5,b
 11973                           
 11974                           ; BSR set to: 2
 11975                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11976  0009D8  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11977  0009DC  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11978  0009E0  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11979  0009E4  0E01               	movlw	1
 11980  0009E6  0100               	movlb	0	; () banked
 11981  0009E8  6F6A               	movwf	RxDataDone@status& (0+255),b
 11982  0009EA  D801               	call	u16478
 11983  0009EC  D009               	goto	l14518
 11984  0009EE                     u16478:
 11985  0009EE  0005               	push	
 11986  0009F0  6EFA               	movwf	pclath,c
 11987  0009F2  51E8               	movf	_rxPayload& (0+255),w,b
 11988  0009F4  6EFD               	movwf	tosl,c
 11989  0009F6  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 11990  0009F8  6EFE               	movwf	tosh,c
 11991  0009FA  6AFF               	clrf	tosu,c
 11992  0009FC  50FA               	movf	pclath,w,c
 11993  0009FE  0012               	return		;indir
 11994  000A00                     l14518:
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;lorawan.c: 1477: }
 11998                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 11999  000A00  0102               	movlb	2	; () banked
 12000  000A02  9303               	bcf	(_loRa+3)& (0+255),1,b
 12001                           
 12002                           ; BSR set to: 2
 12003                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12004  000A04  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12005                           
 12006                           ; BSR set to: 2
 12007  000A06  BB00               	btfsc	_loRa& (0+255),5,b
 12008  000A08  D5D6               	goto	l14366
 12009                           
 12010                           ; BSR set to: 2
 12011  000A0A  B300               	btfsc	_loRa& (0+255),1,b
 12012  000A0C  D002               	goto	l14528
 12013                           
 12014                           ; BSR set to: 2
 12015  000A0E  A700               	btfss	_loRa& (0+255),3,b
 12016  000A10  D5D2               	goto	l14366
 12017  000A12                     l14528:
 12018                           
 12019                           ; BSR set to: 2
 12020                           ;lorawan.c: 1480: {
 12021                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12022  000A12  0E01               	movlw	1
 12023  000A14  0100               	movlb	0	; () banked
 12024  000A16  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12025  000A18  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 12026  000A1A  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12027  000A1C  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 12028  000A1E  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12029  000A20  0102               	movlb	2	; () banked
 12030  000A22  51ED               	movf	(_loRa+237)& (0+255),w,b
 12031  000A24  EC90  F027         	call	_SearchAvailableChannel
 12032  000A28  0900               	iorlw	0
 12033  000A2A  E10A               	bnz	l14534
 12034                           
 12035                           ; BSR set to: 0
 12036                           ;lorawan.c: 1482: {
 12037                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12038  000A2C  0E00               	movlw	0
 12039  000A2E  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12040  000A30  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12041  000A32  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12042  000A34  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12043  000A36  EC0D  F02A         	call	_LORAWAN_Send
 12044  000A3A                     l14532:
 12045                           
 12046                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12047  000A3A  0102               	movlb	2	; () banked
 12048  000A3C  9700               	bcf	_loRa& (0+255),3,b
 12049                           
 12050                           ;lorawan.c: 1485: }
 12051  000A3E  D5BB               	goto	l14366
 12052  000A40                     l14534:
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;lorawan.c: 1486: else
 12056                           ;lorawan.c: 1487: {
 12057                           ;lorawan.c: 1489: StartReTxTimer();
 12058  000A40  ECF8  F021         	call	_StartReTxTimer	;wreg free
 12059  000A44  D5B8               	goto	l14366
 12060  000A46                     l14536:
 12061                           
 12062                           ; BSR set to: 3
 12063                           ;lorawan.c: 1494: else
 12064                           ;lorawan.c: 1495: {
 12065                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12066  000A46  ECFF  F030         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12067  000A4A  D5B5               	goto	l14366
 12068  000A4C                     l14538:
 12069                           
 12070                           ; BSR set to: 2
 12071                           ;lorawan.c: 1499: else
 12072                           ;lorawan.c: 1500: {
 12073                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12074  000A4C  0EF0               	movlw	-16
 12075  000A4E  1702               	andwf	(_loRa+2)& (0+255),f,b
 12076                           
 12077                           ; BSR set to: 2
 12078                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12079  000A50  0100               	movlb	0	; () banked
 12080  000A52  51E8               	movf	_rxPayload& (0+255),w,b
 12081  000A54  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12082  000A56  E016               	bz	l14546
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;lorawan.c: 1504: {
 12086                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12087  000A58  0102               	movlb	2	; () banked
 12088  000A5A  9B00               	bcf	_loRa& (0+255),5,b
 12089                           
 12090                           ; BSR set to: 2
 12091                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12092  000A5C  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12093  000A60  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12094  000A64  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12095  000A68  0E01               	movlw	1
 12096  000A6A  0100               	movlb	0	; () banked
 12097  000A6C  6F6A               	movwf	RxDataDone@status& (0+255),b
 12098  000A6E  D801               	call	u16548
 12099  000A70  D009               	goto	l14546
 12100  000A72                     u16548:
 12101  000A72  0005               	push	
 12102  000A74  6EFA               	movwf	pclath,c
 12103  000A76  51E8               	movf	_rxPayload& (0+255),w,b
 12104  000A78  6EFD               	movwf	tosl,c
 12105  000A7A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12106  000A7C  6EFE               	movwf	tosh,c
 12107  000A7E  6AFF               	clrf	tosu,c
 12108  000A80  50FA               	movf	pclath,w,c
 12109  000A82  0012               	return		;indir
 12110  000A84                     l14546:
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;lorawan.c: 1507: }
 12114                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12115  000A84  0102               	movlb	2	; () banked
 12116  000A86  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12117                           
 12118                           ; BSR set to: 2
 12119  000A88  BB00               	btfsc	_loRa& (0+255),5,b
 12120  000A8A  D595               	goto	l14366
 12121                           
 12122                           ; BSR set to: 2
 12123  000A8C  B300               	btfsc	_loRa& (0+255),1,b
 12124  000A8E  D002               	goto	l14554
 12125                           
 12126                           ; BSR set to: 2
 12127  000A90  A700               	btfss	_loRa& (0+255),3,b
 12128  000A92  D591               	goto	l14366
 12129  000A94                     l14554:
 12130                           
 12131                           ; BSR set to: 2
 12132                           ;lorawan.c: 1510: {
 12133                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12134  000A94  0E01               	movlw	1
 12135  000A96  0100               	movlb	0	; () banked
 12136  000A98  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12137  000A9A  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 12138  000A9C  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12139  000A9E  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 12140  000AA0  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12141  000AA2  0102               	movlb	2	; () banked
 12142  000AA4  51ED               	movf	(_loRa+237)& (0+255),w,b
 12143  000AA6  EC90  F027         	call	_SearchAvailableChannel
 12144  000AAA  0900               	iorlw	0
 12145  000AAC  E1C9               	bnz	l14534
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;lorawan.c: 1512: {
 12149                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12150  000AAE  0E00               	movlw	0
 12151  000AB0  6FD6               	movwf	LORAWAN_Send@port& (0+255),b
 12152  000AB2  6FD7               	movwf	LORAWAN_Send@buffer& (0+255),b
 12153  000AB4  6FD8               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12154  000AB6  6FD9               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12155  000AB8  EC0D  F02A         	call	_LORAWAN_Send
 12156  000ABC  D7BE               	goto	l14532
 12157  000ABE                     l14572:
 12158                           
 12159                           ; BSR set to: 2
 12160                           ;lorawan.c: 1537: else
 12161                           ;lorawan.c: 1538: {
 12162                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12163  000ABE  0100               	movlb	0	; () banked
 12164  000AC0  51E8               	movf	_rxPayload& (0+255),w,b
 12165  000AC2  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 12166  000AC4  B4D8               	btfsc	status,2,c
 12167  000AC6  0012               	return	
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;lorawan.c: 1541: {
 12171                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12172  000AC8  EC98  F03C         	call	_RADIO_GetStatus	;wreg free
 12173  000ACC  0100               	movlb	0	; () banked
 12174  000ACE  6FDD               	movwf	??_LORAWAN_RxDone& (0+255),b
 12175  000AD0  B7DD               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12176  000AD2  D011               	goto	l14578
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;lorawan.c: 1543: {
 12180                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12181  000AD4  C166  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12182  000AD8  C167  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12183  000ADC  C168  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12184  000AE0  0E03               	movlw	3
 12185  000AE2  6F6A               	movwf	RxDataDone@status& (0+255),b
 12186  000AE4  0005               	push	
 12187  000AE6  6EFA               	movwf	pclath,c
 12188  000AE8  51E8               	movf	_rxPayload& (0+255),w,b
 12189  000AEA  6EFD               	movwf	tosl,c
 12190  000AEC  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12191  000AEE  6EFE               	movwf	tosh,c
 12192  000AF0  6AFF               	clrf	tosu,c
 12193  000AF2  50FA               	movf	pclath,w,c
 12194  000AF4  0012               	return		;indir
 12195  000AF6                     l14578:
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;lorawan.c: 1546: else
 12199                           ;lorawan.c: 1547: {
 12200                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12201  000AF6  C166  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12202  000AFA  C167  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12203  000AFE  C168  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12204  000B02  0E02               	movlw	2
 12205  000B04  6F6A               	movwf	RxDataDone@status& (0+255),b
 12206  000B06  0005               	push	
 12207  000B08  6EFA               	movwf	pclath,c
 12208  000B0A  51E8               	movf	_rxPayload& (0+255),w,b
 12209  000B0C  6EFD               	movwf	tosl,c
 12210  000B0E  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 12211  000B10  6EFE               	movwf	tosh,c
 12212  000B12  6AFF               	clrf	tosu,c
 12213  000B14  50FA               	movf	pclath,w,c
 12214  000B16  0012               	return		;indir
 12215  000B18                     __end_of_LORAWAN_RxDone:
 12216                           	opt stack 0
 12217                           tosu	equ	0xFFF
 12218                           tosh	equ	0xFFE
 12219                           tosl	equ	0xFFD
 12220                           pclath	equ	0xFFA
 12221                           tblptru	equ	0xFF8
 12222                           tblptrh	equ	0xFF7
 12223                           tblptrl	equ	0xFF6
 12224                           tablat	equ	0xFF5
 12225                           prodh	equ	0xFF4
 12226                           prodl	equ	0xFF3
 12227                           intcon	equ	0xFF2
 12228                           intcon2	equ	0xFF1
 12229                           intcon3	equ	0xFF0
 12230                           postinc0	equ	0xFEE
 12231                           wreg	equ	0xFE8
 12232                           postinc1	equ	0xFE6
 12233                           postdec1	equ	0xFE5
 12234                           plusw1	equ	0xFE3
 12235                           fsr1h	equ	0xFE2
 12236                           fsr1l	equ	0xFE1
 12237                           indf2	equ	0xFDF
 12238                           postinc2	equ	0xFDE
 12239                           postdec2	equ	0xFDD
 12240                           fsr2h	equ	0xFDA
 12241                           fsr2l	equ	0xFD9
 12242                           status	equ	0xFD8
 12243                           
 12244 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12245 ;; Defined at:
 12246 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;		None
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;		None
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      void 
 12253 ;; Registers used:
 12254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12255 ;; Tracked objects:
 12256 ;;		On entry : C/0
 12257 ;;		On exit  : F/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12264 ;;Total ram usage:        4 bytes
 12265 ;; Hardware stack levels used:    1
 12266 ;; Hardware stack levels required when called:   11
 12267 ;; This function calls:
 12268 ;;		_SwTimerSetTimeout
 12269 ;;		_SwTimerStart
 12270 ;;		___lldiv
 12271 ;; This function is called by:
 12272 ;;		_AckRetransmissionCallback
 12273 ;;		_LORAWAN_RxDone
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text63
 12278  0061FE                     __ptext63:
 12279                           	opt stack 0
 12280  0061FE                     _UpdateRetransmissionAckTimeoutState:
 12281                           	opt stack 16
 12282                           
 12283                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12284                           
 12285                           ;incstack = 0
 12286  0061FE  0102               	movlb	2	; () banked
 12287  006200  5102               	movf	(_loRa+2)& (0+255),w,b
 12288  006202  0BF0               	andlw	-16
 12289  006204  0906               	iorlw	6
 12290  006206  6F02               	movwf	(_loRa+2)& (0+255),b
 12291                           
 12292                           ; BSR set to: 2
 12293                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12294  006208  51A0               	movf	(_loRa+160)& (0+255),w,b
 12295  00620A  0100               	movlb	0	; () banked
 12296  00620C  6F96               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12297  00620E  0102               	movlb	2	; () banked
 12298  006210  51A1               	movf	(_loRa+161)& (0+255),w,b
 12299  006212  0100               	movlb	0	; () banked
 12300  006214  6F97               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12301  006216  6B98               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12302  006218  6B99               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12303  00621A  0E0C               	movlw	12
 12304  00621C                     u15665:
 12305  00621C  90D8               	bcf	status,0,c
 12306  00621E  3796               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12307  006220  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12308  006222  3798               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12309  006224  3799               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12310  006226  2EE8               	decfsz	wreg,f,c
 12311  006228  D7F9               	goto	u15665
 12312  00622A  C096  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12313  00622E  C097  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12314  006232  C098  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12315  006236  C099  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12316  00623A  0E7D               	movlw	125
 12317  00623C  6F68               	movwf	___lldiv@divisor& (0+255),b
 12318  00623E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12319  006240  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12320  006242  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12321  006244  EC1A  F030         	call	___lldiv	;wreg free
 12322  006248  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12323  00624C  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12324  006250  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12325  006254  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12326  006258  0102               	movlb	2	; () banked
 12327  00625A  51E8               	movf	(_loRa+232)& (0+255),w,b
 12328  00625C  ECA5  F036         	call	_SwTimerSetTimeout
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12332  006260  0102               	movlb	2	; () banked
 12333  006262  51E8               	movf	(_loRa+232)& (0+255),w,b
 12334  006264  EF58  F02E         	goto	_SwTimerStart
 12335  006268                     __end_of_UpdateRetransmissionAckTimeoutState:
 12336                           	opt stack 0
 12337                           tosu	equ	0xFFF
 12338                           tosh	equ	0xFFE
 12339                           tosl	equ	0xFFD
 12340                           pclath	equ	0xFFA
 12341                           tblptru	equ	0xFF8
 12342                           tblptrh	equ	0xFF7
 12343                           tblptrl	equ	0xFF6
 12344                           tablat	equ	0xFF5
 12345                           prodh	equ	0xFF4
 12346                           prodl	equ	0xFF3
 12347                           intcon	equ	0xFF2
 12348                           intcon2	equ	0xFF1
 12349                           intcon3	equ	0xFF0
 12350                           postinc0	equ	0xFEE
 12351                           wreg	equ	0xFE8
 12352                           postinc1	equ	0xFE6
 12353                           postdec1	equ	0xFE5
 12354                           plusw1	equ	0xFE3
 12355                           fsr1h	equ	0xFE2
 12356                           fsr1l	equ	0xFE1
 12357                           indf2	equ	0xFDF
 12358                           postinc2	equ	0xFDE
 12359                           postdec2	equ	0xFDD
 12360                           fsr2h	equ	0xFDA
 12361                           fsr2l	equ	0xFD9
 12362                           status	equ	0xFD8
 12363                           
 12364 ;; *************** function _UpdateDLSettings *****************
 12365 ;; Defined at:
 12366 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;  dlRx2Dr         1    wreg     unsigned char 
 12369 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  1    wreg      void 
 12374 ;; Registers used:
 12375 ;;		wreg, status,2, status,0
 12376 ;; Tracked objects:
 12377 ;;		On entry : F/3
 12378 ;;		On exit  : F/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12381 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;Total ram usage:        2 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; Hardware stack levels required when called:    7
 12388 ;; This function calls:
 12389 ;;		Nothing
 12390 ;; This function is called by:
 12391 ;;		_LORAWAN_RxDone
 12392 ;; This function uses a non-reentrant model
 12393 ;;
 12394                           
 12395                           	psect	text64
 12396  007644                     __ptext64:
 12397                           	opt stack 0
 12398  007644                     _UpdateDLSettings:
 12399                           	opt stack 19
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;incstack = 0
 12403                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12404  007644  0100               	movlb	0	; () banked
 12405  007646  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12406                           
 12407                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12408  007648  0E08               	movlw	8
 12409  00764A  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12410  00764C  D002               	goto	l13918
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;lorawan_eu.c: 891: {
 12414                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12415  00764E  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12416  007652                     l13918:
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;lorawan_eu.c: 893: }
 12420                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12421  007652  0E06               	movlw	6
 12422  007654  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12423  007656  0C06               	retlw	6
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;lorawan_eu.c: 896: {
 12427                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12428  007658  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12429                           
 12430                           ; BSR set to: 0
 12431  00765C  0C06               	retlw	6	;funcret
 12432  00765E                     __end_of_UpdateDLSettings:
 12433                           	opt stack 0
 12434                           tosu	equ	0xFFF
 12435                           tosh	equ	0xFFE
 12436                           tosl	equ	0xFFD
 12437                           pclath	equ	0xFFA
 12438                           tblptru	equ	0xFF8
 12439                           tblptrh	equ	0xFF7
 12440                           tblptrl	equ	0xFF6
 12441                           tablat	equ	0xFF5
 12442                           prodh	equ	0xFF4
 12443                           prodl	equ	0xFF3
 12444                           intcon	equ	0xFF2
 12445                           intcon2	equ	0xFF1
 12446                           intcon3	equ	0xFF0
 12447                           postinc0	equ	0xFEE
 12448                           wreg	equ	0xFE8
 12449                           postinc1	equ	0xFE6
 12450                           postdec1	equ	0xFE5
 12451                           plusw1	equ	0xFE3
 12452                           fsr1h	equ	0xFE2
 12453                           fsr1l	equ	0xFE1
 12454                           indf2	equ	0xFDF
 12455                           postinc2	equ	0xFDE
 12456                           postdec2	equ	0xFDD
 12457                           fsr2h	equ	0xFDA
 12458                           fsr2l	equ	0xFD9
 12459                           status	equ	0xFD8
 12460                           
 12461 ;; *************** function _UpdateCfList *****************
 12462 ;; Defined at:
 12463 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12464 ;; Parameters:    Size  Location     Type
 12465 ;;  bufferLength    1    wreg     unsigned char 
 12466 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12467 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12470 ;;  frequency       4   21[BANK0 ] unsigned long 
 12471 ;;  i               1   26[BANK0 ] unsigned char 
 12472 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12473 ;; Return value:  Size  Location     Type
 12474 ;;                  1    wreg      void 
 12475 ;; Registers used:
 12476 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12477 ;; Tracked objects:
 12478 ;;		On entry : F/1
 12479 ;;		On exit  : D/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12486 ;;Total ram usage:       11 bytes
 12487 ;; Hardware stack levels used:    1
 12488 ;; Hardware stack levels required when called:    9
 12489 ;; This function calls:
 12490 ;;		_LORAWAN_SetChannelIdStatus
 12491 ;;		_ValidateFrequency
 12492 ;;		___lmul
 12493 ;;		_memcpy
 12494 ;; This function is called by:
 12495 ;;		_LORAWAN_RxDone
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499                           	psect	text65
 12500  0031B2                     __ptext65:
 12501                           	opt stack 0
 12502  0031B2                     _UpdateCfList:
 12503                           	opt stack 17
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;incstack = 0
 12507                           ;UpdateCfList@bufferLength stored from wreg
 12508  0031B2  0100               	movlb	0	; () banked
 12509  0031B4  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12510                           
 12511                           ;lorawan_eu.c: 826: uint8_t i;
 12512                           ;lorawan_eu.c: 827: uint32_t frequency;
 12513                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12514                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12515  0031B6  0E21               	movlw	33
 12516  0031B8  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12517  0031BA  A4D8               	btfss	status,2,c
 12518  0031BC  0012               	return	
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;lorawan_eu.c: 831: {
 12522                           ;lorawan_eu.c: 833: channelIndex = 3;
 12523  0031BE  0E03               	movlw	3
 12524  0031C0  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12528  0031C2  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12529  0031C4                     l1151:
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;lorawan_eu.c: 836: {
 12533                           ;lorawan_eu.c: 837: frequency = 0;
 12534  0031C4  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12535  0031C6  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12536  0031C8  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12537  0031CA  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12538                           
 12539                           ; BSR set to: 0
 12540                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12541  0031CC  0E75               	movlw	low UpdateCfList@frequency
 12542  0031CE  6F64               	movwf	memcpy@d1& (0+255),b
 12543  0031D0  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12544  0031D2  517A               	movf	UpdateCfList@i& (0+255),w,b
 12545  0031D4  0D03               	mullw	3
 12546  0031D6  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12547  0031DA  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12548  0031DE  50F3               	movf	prodl,w,c
 12549  0031E0  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12550  0031E2  50F4               	movf	prodh,w,c
 12551  0031E4  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12552  0031E6  0E0D               	movlw	13
 12553  0031E8  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12554  0031EA  0E00               	movlw	0
 12555  0031EC  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12556  0031EE  5172               	movf	??_UpdateCfList& (0+255),w,b
 12557  0031F0  6F66               	movwf	memcpy@s1& (0+255),b
 12558  0031F2  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12559  0031F4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12560  0031F6  0E03               	movlw	3
 12561  0031F8  6F68               	movwf	memcpy@n& (0+255),b
 12562  0031FA  EC44  F034         	call	_memcpy	;wreg free
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;lorawan_eu.c: 839: frequency *= 100;
 12566  0031FE  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12567  003202  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12568  003206  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12569  00320A  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12570  00320E  0E64               	movlw	100
 12571  003210  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12572  003212  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12573  003214  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12574  003216  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12575  003218  EC9C  F02E         	call	___lmul	;wreg free
 12576  00321C  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12577  003220  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12578  003224  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12579  003228  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;lorawan_eu.c: 840: if (frequency != 0)
 12583  00322C  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12584  00322E  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12585  003230  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12586  003232  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12587  003234  E101 D094          	bz	l13908
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;lorawan_eu.c: 841: {
 12591                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12592  003238  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12593  00323C  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12594  003240  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12595  003244  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12596  003248  ECEA  F033         	call	_ValidateFrequency	;wreg free
 12597  00324C  0900               	iorlw	0
 12598  00324E  E001 D08C          	bnz	l13910
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;lorawan_eu.c: 843: {
 12602                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12603  003252  517A               	movf	UpdateCfList@i& (0+255),w,b
 12604  003254  0D0E               	mullw	14
 12605  003256  0E00               	movlw	low _Channels
 12606  003258  6F72               	movwf	??_UpdateCfList& (0+255),b
 12607  00325A  0E04               	movlw	high _Channels
 12608  00325C  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12609  00325E  50F3               	movf	prodl,w,c
 12610  003260  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12611  003262  50F4               	movf	prodh,w,c
 12612  003264  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12613  003266  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12614  003268  0D0E               	mullw	14
 12615  00326A  50F3               	movf	prodl,w,c
 12616  00326C  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12617  00326E  6ED9               	movwf	fsr2l,c
 12618  003270  50F4               	movf	prodh,w,c
 12619  003272  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12620  003274  6EDA               	movwf	fsr2h,c
 12621  003276  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 12622  00327A  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 12623  00327E  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 12624  003282  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 12625                           
 12626                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 12627  003286  517A               	movf	UpdateCfList@i& (0+255),w,b
 12628  003288  0D0E               	mullw	14
 12629  00328A  0E00               	movlw	low _Channels
 12630  00328C  6F72               	movwf	??_UpdateCfList& (0+255),b
 12631  00328E  0E04               	movlw	high _Channels
 12632  003290  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12633  003292  0E05               	movlw	5
 12634  003294  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12635  003296  0E00               	movlw	0
 12636  003298  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12637  00329A  50F3               	movf	prodl,w,c
 12638  00329C  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12639  00329E  50F4               	movf	prodh,w,c
 12640  0032A0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12641  0032A2  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12642  0032A4  0D0E               	mullw	14
 12643  0032A6  50F3               	movf	prodl,w,c
 12644  0032A8  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12645  0032AA  6ED9               	movwf	fsr2l,c
 12646  0032AC  50F4               	movf	prodh,w,c
 12647  0032AE  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12648  0032B0  6EDA               	movwf	fsr2h,c
 12649  0032B2  50DF               	movf	223,w,c
 12650  0032B4  0B0F               	andlw	-241
 12651  0032B6  0950               	iorlw	80
 12652  0032B8  6EDF               	movwf	223,c
 12653                           
 12654                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 12655  0032BA  0100               	movlb	0	; () banked
 12656  0032BC  517A               	movf	UpdateCfList@i& (0+255),w,b
 12657  0032BE  0D0E               	mullw	14
 12658  0032C0  0E00               	movlw	low _Channels
 12659  0032C2  6F72               	movwf	??_UpdateCfList& (0+255),b
 12660  0032C4  0E04               	movlw	high _Channels
 12661  0032C6  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12662  0032C8  0E05               	movlw	5
 12663  0032CA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12664  0032CC  0E00               	movlw	0
 12665  0032CE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12666  0032D0  50F3               	movf	prodl,w,c
 12667  0032D2  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12668  0032D4  50F4               	movf	prodh,w,c
 12669  0032D6  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12670  0032D8  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12671  0032DA  0D0E               	mullw	14
 12672  0032DC  50F3               	movf	prodl,w,c
 12673  0032DE  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12674  0032E0  6ED9               	movwf	fsr2l,c
 12675  0032E2  50F4               	movf	prodh,w,c
 12676  0032E4  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12677  0032E6  6EDA               	movwf	fsr2h,c
 12678  0032E8  0EF0               	movlw	-16
 12679  0032EA  16DF               	andwf	223,f,c
 12680                           
 12681                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 12682  0032EC  517A               	movf	UpdateCfList@i& (0+255),w,b
 12683  0032EE  0D0E               	mullw	14
 12684  0032F0  0E00               	movlw	low _Channels
 12685  0032F2  6F72               	movwf	??_UpdateCfList& (0+255),b
 12686  0032F4  0E04               	movlw	high _Channels
 12687  0032F6  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12688  0032F8  0E06               	movlw	6
 12689  0032FA  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12690  0032FC  0E00               	movlw	0
 12691  0032FE  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12692  003300  50F3               	movf	prodl,w,c
 12693  003302  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12694  003304  50F4               	movf	prodh,w,c
 12695  003306  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12696  003308  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12697  00330A  0D0E               	mullw	14
 12698  00330C  50F3               	movf	prodl,w,c
 12699  00330E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12700  003310  6ED9               	movwf	fsr2l,c
 12701  003312  50F4               	movf	prodh,w,c
 12702  003314  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12703  003316  6EDA               	movwf	fsr2h,c
 12704  003318  0EE7               	movlw	231
 12705  00331A  6EDE               	movwf	postinc2,c
 12706  00331C  0E03               	movlw	3
 12707  00331E  6EDD               	movwf	postdec2,c
 12708                           
 12709                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 12710  003320  517A               	movf	UpdateCfList@i& (0+255),w,b
 12711  003322  0D0E               	mullw	14
 12712  003324  0E00               	movlw	low _Channels
 12713  003326  6F72               	movwf	??_UpdateCfList& (0+255),b
 12714  003328  0E04               	movlw	high _Channels
 12715  00332A  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12716  00332C  0E0D               	movlw	13
 12717  00332E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12718  003330  0E00               	movlw	0
 12719  003332  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12720  003334  50F3               	movf	prodl,w,c
 12721  003336  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12722  003338  50F4               	movf	prodh,w,c
 12723  00333A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12724  00333C  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12725  00333E  0D0E               	mullw	14
 12726  003340  50F3               	movf	prodl,w,c
 12727  003342  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12728  003344  6ED9               	movwf	fsr2l,c
 12729  003346  50F4               	movf	prodh,w,c
 12730  003348  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 12731  00334A  6EDA               	movwf	fsr2h,c
 12732  00334C  68DF               	setf	indf2,c
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 12736  00334E  0E01               	movlw	1
 12737  003350  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12738  003352  517A               	movf	UpdateCfList@i& (0+255),w,b
 12739  003354  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12740  003356  EC99  F037         	call	_LORAWAN_SetChannelIdStatus
 12741                           
 12742                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 12743  00335A  0102               	movlb	2	; () banked
 12744  00335C  8703               	bsf	(_loRa+3)& (0+255),3,b
 12745  00335E  D005               	goto	l13910
 12746  003360                     l13908:
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;lorawan_eu.c: 853: else
 12750                           ;lorawan_eu.c: 854: {
 12751                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 12752  003360  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 12753  003362  517A               	movf	UpdateCfList@i& (0+255),w,b
 12754  003364  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 12755  003366  EC99  F037         	call	_LORAWAN_SetChannelIdStatus
 12756  00336A                     l13910:
 12757  00336A  0100               	movlb	0	; () banked
 12758  00336C  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 12759                           
 12760                           ; BSR set to: 0
 12761  00336E  0E04               	movlw	4
 12762  003370  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 12763  003372  D728               	goto	l1151
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;lorawan_eu.c: 856: }
 12767                           ;lorawan_eu.c: 857: }
 12768                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 12769  003374  0102               	movlb	2	; () banked
 12770  003376  8703               	bsf	(_loRa+3)& (0+255),3,b
 12771  003378  0C04               	retlw	4	;funcret
 12772  00337A                     __end_of_UpdateCfList:
 12773                           	opt stack 0
 12774                           tosu	equ	0xFFF
 12775                           tosh	equ	0xFFE
 12776                           tosl	equ	0xFFD
 12777                           pclath	equ	0xFFA
 12778                           tblptru	equ	0xFF8
 12779                           tblptrh	equ	0xFF7
 12780                           tblptrl	equ	0xFF6
 12781                           tablat	equ	0xFF5
 12782                           prodh	equ	0xFF4
 12783                           prodl	equ	0xFF3
 12784                           intcon	equ	0xFF2
 12785                           intcon2	equ	0xFF1
 12786                           intcon3	equ	0xFF0
 12787                           postinc0	equ	0xFEE
 12788                           wreg	equ	0xFE8
 12789                           postinc1	equ	0xFE6
 12790                           postdec1	equ	0xFE5
 12791                           plusw1	equ	0xFE3
 12792                           fsr1h	equ	0xFE2
 12793                           fsr1l	equ	0xFE1
 12794                           indf2	equ	0xFDF
 12795                           postinc2	equ	0xFDE
 12796                           postdec2	equ	0xFDD
 12797                           fsr2h	equ	0xFDA
 12798                           fsr2l	equ	0xFD9
 12799                           status	equ	0xFD8
 12800                           
 12801 ;; *************** function _StartReTxTimer *****************
 12802 ;; Defined at:
 12803 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12804 ;; Parameters:    Size  Location     Type
 12805 ;;		None
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  minim           4   58[BANK0 ] unsigned long 
 12808 ;;  i               1   62[BANK0 ] unsigned char 
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      void 
 12811 ;; Registers used:
 12812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12813 ;; Tracked objects:
 12814 ;;		On entry : E/0
 12815 ;;		On exit  : F/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12819 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12821 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12822 ;;Total ram usage:        9 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:   11
 12825 ;; This function calls:
 12826 ;;		_SwTimerSetTimeout
 12827 ;;		_SwTimerStart
 12828 ;;		___lldiv
 12829 ;; This function is called by:
 12830 ;;		_LORAWAN_RxDone
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text66
 12835  0043F0                     __ptext66:
 12836                           	opt stack 0
 12837  0043F0                     _StartReTxTimer:
 12838                           	opt stack 15
 12839                           
 12840                           ;lorawan_eu.c: 904: uint8_t i;
 12841                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 12842                           
 12843                           ;incstack = 0
 12844  0043F0  0100               	movlb	0	; () banked
 12845  0043F2  699A               	setf	StartReTxTimer@minim& (0+255),b
 12846  0043F4  699B               	setf	(StartReTxTimer@minim+1)& (0+255),b
 12847  0043F6  699C               	setf	(StartReTxTimer@minim+2)& (0+255),b
 12848  0043F8  699D               	setf	(StartReTxTimer@minim+3)& (0+255),b
 12849                           
 12850                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 12851  0043FA  6B9E               	clrf	StartReTxTimer@i& (0+255),b
 12852  0043FC  D05B               	goto	l13938
 12853  0043FE                     l13924:
 12854                           
 12855                           ; BSR set to: 2
 12856                           ;lorawan_eu.c: 908: {
 12857                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 12858  0043FE  0100               	movlb	0	; () banked
 12859  004400  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12860  004402  0D0E               	mullw	14
 12861  004404  0E04               	movlw	low (_Channels+4)
 12862  004406  24F3               	addwf	prodl,w,c
 12863  004408  6ED9               	movwf	fsr2l,c
 12864  00440A  0E04               	movlw	high (_Channels+4)
 12865  00440C  20F4               	addwfc	prodh,w,c
 12866  00440E  6EDA               	movwf	fsr2h,c
 12867  004410  04DE               	decf	postinc2,w,c
 12868  004412  E14E               	bnz	l13936
 12869                           
 12870                           ; BSR set to: 0
 12871  004414  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12872  004416  0D0E               	mullw	14
 12873  004418  0E08               	movlw	low (_Channels+8)
 12874  00441A  24F3               	addwf	prodl,w,c
 12875  00441C  6ED9               	movwf	fsr2l,c
 12876  00441E  0E04               	movlw	high (_Channels+8)
 12877  004420  20F4               	addwfc	prodh,w,c
 12878  004422  6EDA               	movwf	fsr2h,c
 12879  004424  50DE               	movf	postinc2,w,c
 12880  004426  10DE               	iorwf	postinc2,w,c
 12881  004428  10DE               	iorwf	postinc2,w,c
 12882  00442A  10DE               	iorwf	postinc2,w,c
 12883  00442C  E041               	bz	l13936
 12884                           
 12885                           ; BSR set to: 0
 12886  00442E  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12887  004430  0D0E               	mullw	14
 12888  004432  0E08               	movlw	low (_Channels+8)
 12889  004434  24F3               	addwf	prodl,w,c
 12890  004436  6ED9               	movwf	fsr2l,c
 12891  004438  0E04               	movlw	high (_Channels+8)
 12892  00443A  20F4               	addwfc	prodh,w,c
 12893  00443C  6EDA               	movwf	fsr2h,c
 12894  00443E  50DE               	movf	postinc2,w,c
 12895  004440  5D9A               	subwf	StartReTxTimer@minim& (0+255),w,b
 12896  004442  50DE               	movf	postinc2,w,c
 12897  004444  599B               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 12898  004446  50DE               	movf	postinc2,w,c
 12899  004448  599C               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 12900  00444A  50DE               	movf	postinc2,w,c
 12901  00444C  599D               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 12902  00444E  E330               	bnc	l13936
 12903                           
 12904                           ; BSR set to: 0
 12905  004450  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12906  004452  0D0E               	mullw	14
 12907  004454  0E05               	movlw	low (_Channels+5)
 12908  004456  24F3               	addwf	prodl,w,c
 12909  004458  6ED9               	movwf	fsr2l,c
 12910  00445A  0E04               	movlw	high (_Channels+5)
 12911  00445C  20F4               	addwfc	prodh,w,c
 12912  00445E  6EDA               	movwf	fsr2h,c
 12913  004460  50DF               	movf	223,w,c
 12914  004462  0B0F               	andlw	15
 12915  004464  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12916  004466  5196               	movf	??_StartReTxTimer& (0+255),w,b
 12917  004468  0102               	movlb	2	; () banked
 12918  00446A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12919  00446C  E321               	bnc	l13936
 12920                           
 12921                           ; BSR set to: 2
 12922  00446E  0100               	movlb	0	; () banked
 12923  004470  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12924  004472  0D0E               	mullw	14
 12925  004474  0E05               	movlw	low (_Channels+5)
 12926  004476  24F3               	addwf	prodl,w,c
 12927  004478  6ED9               	movwf	fsr2l,c
 12928  00447A  0E04               	movlw	high (_Channels+5)
 12929  00447C  20F4               	addwfc	prodh,w,c
 12930  00447E  6EDA               	movwf	fsr2h,c
 12931  004480  38DF               	swapf	223,w,c
 12932  004482  0B0F               	andlw	15
 12933  004484  6F96               	movwf	??_StartReTxTimer& (0+255),b
 12934  004486  0102               	movlb	2	; () banked
 12935  004488  51DF               	movf	(_loRa+223)& (0+255),w,b
 12936  00448A  0100               	movlb	0	; () banked
 12937  00448C  5D96               	subwf	??_StartReTxTimer& (0+255),w,b
 12938  00448E  E310               	bnc	l13936
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;lorawan_eu.c: 910: {
 12942                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 12943  004490  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12944  004492  0D0E               	mullw	14
 12945  004494  0E08               	movlw	low (_Channels+8)
 12946  004496  24F3               	addwf	prodl,w,c
 12947  004498  6ED9               	movwf	fsr2l,c
 12948  00449A  0E04               	movlw	high (_Channels+8)
 12949  00449C  20F4               	addwfc	prodh,w,c
 12950  00449E  6EDA               	movwf	fsr2h,c
 12951  0044A0  CFDE F09A          	movff	postinc2,StartReTxTimer@minim
 12952  0044A4  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+1
 12953  0044A8  CFDE F09C          	movff	postinc2,StartReTxTimer@minim+2
 12954  0044AC  CFDE F09D          	movff	postinc2,StartReTxTimer@minim+3
 12955  0044B0                     l13936:
 12956  0044B0  0100               	movlb	0	; () banked
 12957  0044B2  2B9E               	incf	StartReTxTimer@i& (0+255),f,b
 12958  0044B4                     l13938:
 12959                           
 12960                           ; BSR set to: 0
 12961  0044B4  519E               	movf	StartReTxTimer@i& (0+255),w,b
 12962  0044B6  0102               	movlb	2	; () banked
 12963  0044B8  5DED               	subwf	(_loRa+237)& (0+255),w,b
 12964  0044BA  E2A1               	bc	l13924
 12965                           
 12966                           ; BSR set to: 2
 12967                           ;lorawan_eu.c: 912: }
 12968                           ;lorawan_eu.c: 913: }
 12969                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12970  0044BC  5102               	movf	(_loRa+2)& (0+255),w,b
 12971  0044BE  0BF0               	andlw	-16
 12972  0044C0  0906               	iorlw	6
 12973  0044C2  6F02               	movwf	(_loRa+2)& (0+255),b
 12974                           
 12975                           ; BSR set to: 2
 12976                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 12977  0044C4  C09A  F096         	movff	StartReTxTimer@minim,??_StartReTxTimer
 12978  0044C8  C09B  F097         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 12979  0044CC  C09C  F098         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 12980  0044D0  C09D  F099         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 12981  0044D4  0E0C               	movlw	12
 12982  0044D6                     u15525:
 12983  0044D6  90D8               	bcf	status,0,c
 12984  0044D8  0100               	movlb	0	; () banked
 12985  0044DA  3796               	rlcf	??_StartReTxTimer& (0+255),f,b
 12986  0044DC  3797               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 12987  0044DE  3798               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 12988  0044E0  3799               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 12989  0044E2  2EE8               	decfsz	wreg,f,c
 12990  0044E4  D7F8               	goto	u15525
 12991  0044E6  C096  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 12992  0044EA  C097  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 12993  0044EE  C098  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 12994  0044F2  C099  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 12995  0044F6  0E7D               	movlw	125
 12996  0044F8  6F68               	movwf	___lldiv@divisor& (0+255),b
 12997  0044FA  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12998  0044FC  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12999  0044FE  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 13000  004500  EC1A  F030         	call	___lldiv	;wreg free
 13001  004504  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13002  004508  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13003  00450C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13004  004510  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13005  004514  0102               	movlb	2	; () banked
 13006  004516  51E6               	movf	(_loRa+230)& (0+255),w,b
 13007  004518  ECA5  F036         	call	_SwTimerSetTimeout
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 13011  00451C  0102               	movlb	2	; () banked
 13012  00451E  51E6               	movf	(_loRa+230)& (0+255),w,b
 13013  004520  EF58  F02E         	goto	_SwTimerStart
 13014  004524                     __end_of_StartReTxTimer:
 13015                           	opt stack 0
 13016                           tosu	equ	0xFFF
 13017                           tosh	equ	0xFFE
 13018                           tosl	equ	0xFFD
 13019                           pclath	equ	0xFFA
 13020                           tblptru	equ	0xFF8
 13021                           tblptrh	equ	0xFF7
 13022                           tblptrl	equ	0xFF6
 13023                           tablat	equ	0xFF5
 13024                           prodh	equ	0xFF4
 13025                           prodl	equ	0xFF3
 13026                           intcon	equ	0xFF2
 13027                           intcon2	equ	0xFF1
 13028                           intcon3	equ	0xFF0
 13029                           postinc0	equ	0xFEE
 13030                           wreg	equ	0xFE8
 13031                           postinc1	equ	0xFE6
 13032                           postdec1	equ	0xFE5
 13033                           plusw1	equ	0xFE3
 13034                           fsr1h	equ	0xFE2
 13035                           fsr1l	equ	0xFE1
 13036                           indf2	equ	0xFDF
 13037                           postinc2	equ	0xFDE
 13038                           postdec2	equ	0xFDD
 13039                           fsr2h	equ	0xFDA
 13040                           fsr2l	equ	0xFD9
 13041                           status	equ	0xFD8
 13042                           
 13043 ;; *************** function _SetReceptionNotOkState *****************
 13044 ;; Defined at:
 13045 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;		None
 13048 ;; Auto vars:     Size  Location     Type
 13049 ;;		None
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  1    wreg      void 
 13052 ;; Registers used:
 13053 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13054 ;; Tracked objects:
 13055 ;;		On entry : E/2
 13056 ;;		On exit  : D/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13063 ;;Total ram usage:        0 bytes
 13064 ;; Hardware stack levels used:    1
 13065 ;; Hardware stack levels required when called:   14
 13066 ;; This function calls:
 13067 ;;		_LORAWAN_EnterContinuousReceive
 13068 ;;		_RxDataDone
 13069 ;; This function is called by:
 13070 ;;		_LORAWAN_RxDone
 13071 ;; This function uses a non-reentrant model
 13072 ;;
 13073                           
 13074                           	psect	text67
 13075  006338                     __ptext67:
 13076                           	opt stack 0
 13077  006338                     _SetReceptionNotOkState:
 13078                           	opt stack 12
 13079                           
 13080                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;incstack = 0
 13084  006338  0102               	movlb	2	; () banked
 13085  00633A  5102               	movf	(_loRa+2)& (0+255),w,b
 13086  00633C  0B0F               	andlw	15
 13087  00633E  0A05               	xorlw	5
 13088  006340  E006               	bz	l2307
 13089                           
 13090                           ; BSR set to: 2
 13091  006342  5102               	movf	(_loRa+2)& (0+255),w,b
 13092  006344  0B0F               	andlw	15
 13093  006346  0A03               	xorlw	3
 13094  006348  E120               	bnz	l14102
 13095                           
 13096                           ; BSR set to: 2
 13097  00634A  51F1               	movf	(_loRa+241)& (0+255),w,b
 13098  00634C  E01E               	bz	l14102
 13099  00634E                     l2307:
 13100                           
 13101                           ; BSR set to: 2
 13102                           ;lorawan.c: 2000: {
 13103                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13104  00634E  9100               	bcf	_loRa& (0+255),0,b
 13105                           
 13106                           ; BSR set to: 2
 13107                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13108  006350  0EF0               	movlw	-16
 13109  006352  1702               	andwf	(_loRa+2)& (0+255),f,b
 13110                           
 13111                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13112  006354  5112               	movf	(_loRa+18)& (0+255),w,b
 13113  006356  E117               	bnz	l14100
 13114                           
 13115                           ; BSR set to: 2
 13116  006358  0100               	movlb	0	; () banked
 13117  00635A  51E8               	movf	_rxPayload& (0+255),w,b
 13118  00635C  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 13119  00635E  E013               	bz	l14100
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;lorawan.c: 2005: {
 13123                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13124  006360  0102               	movlb	2	; () banked
 13125  006362  9B00               	bcf	_loRa& (0+255),5,b
 13126                           
 13127                           ; BSR set to: 2
 13128                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13129  006364  0E00               	movlw	0
 13130  006366  0100               	movlb	0	; () banked
 13131  006368  6B67               	clrf	RxDataDone@pData& (0+255),b
 13132  00636A  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 13133  00636C  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 13134  00636E  6B6A               	clrf	RxDataDone@status& (0+255),b
 13135  006370  D801               	call	u15848
 13136  006372  D009               	goto	l14100
 13137  006374                     u15848:
 13138  006374  0005               	push	
 13139  006376  6EFA               	movwf	pclath,c
 13140  006378  51E8               	movf	_rxPayload& (0+255),w,b
 13141  00637A  6EFD               	movwf	tosl,c
 13142  00637C  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 13143  00637E  6EFE               	movwf	tosh,c
 13144  006380  6AFF               	clrf	tosu,c
 13145  006382  50FA               	movf	pclath,w,c
 13146  006384  0012               	return		;indir
 13147  006386                     l14100:
 13148                           
 13149                           ;lorawan.c: 2008: }
 13150                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13151  006386  0102               	movlb	2	; () banked
 13152  006388  9303               	bcf	(_loRa+3)& (0+255),1,b
 13153  00638A                     l14102:
 13154                           
 13155                           ; BSR set to: 2
 13156                           ;lorawan.c: 2010: }
 13157                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13158  00638A  0E02               	movlw	2
 13159  00638C  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13160  00638E  A4D8               	btfss	status,2,c
 13161  006390  0012               	return	
 13162                           
 13163                           ; BSR set to: 2
 13164                           ;lorawan.c: 2013: {
 13165                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13166  006392  5102               	movf	(_loRa+2)& (0+255),w,b
 13167  006394  0BF0               	andlw	-16
 13168  006396  0909               	iorlw	9
 13169  006398  6F02               	movwf	(_loRa+2)& (0+255),b
 13170                           
 13171                           ; BSR set to: 2
 13172                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13173  00639A  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13174  00639E                     __end_of_SetReceptionNotOkState:
 13175                           	opt stack 0
 13176                           tosu	equ	0xFFF
 13177                           tosh	equ	0xFFE
 13178                           tosl	equ	0xFFD
 13179                           pclath	equ	0xFFA
 13180                           tblptru	equ	0xFF8
 13181                           tblptrh	equ	0xFF7
 13182                           tblptrl	equ	0xFF6
 13183                           tablat	equ	0xFF5
 13184                           prodh	equ	0xFF4
 13185                           prodl	equ	0xFF3
 13186                           intcon	equ	0xFF2
 13187                           intcon2	equ	0xFF1
 13188                           intcon3	equ	0xFF0
 13189                           postinc0	equ	0xFEE
 13190                           wreg	equ	0xFE8
 13191                           postinc1	equ	0xFE6
 13192                           postdec1	equ	0xFE5
 13193                           plusw1	equ	0xFE3
 13194                           fsr1h	equ	0xFE2
 13195                           fsr1l	equ	0xFE1
 13196                           indf2	equ	0xFDF
 13197                           postinc2	equ	0xFDE
 13198                           postdec2	equ	0xFDD
 13199                           fsr2h	equ	0xFDA
 13200                           fsr2l	equ	0xFD9
 13201                           status	equ	0xFD8
 13202                           
 13203 ;; *************** function _SetJoinFailState *****************
 13204 ;; Defined at:
 13205 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;		None
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  1    wreg      void 
 13212 ;; Registers used:
 13213 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 13214 ;; Tracked objects:
 13215 ;;		On entry : F/2
 13216 ;;		On exit  : F/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;Total ram usage:        0 bytes
 13224 ;; Hardware stack levels used:    1
 13225 ;; Hardware stack levels required when called:    8
 13226 ;; This function calls:
 13227 ;;		_RxJoinResponse
 13228 ;; This function is called by:
 13229 ;;		_LORAWAN_RxTimeout
 13230 ;;		_LORAWAN_RxDone
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text68
 13235  007382                     __ptext68:
 13236                           	opt stack 0
 13237  007382                     _SetJoinFailState:
 13238                           	opt stack 18
 13239                           
 13240                           ; BSR set to: 2
 13241                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13242                           
 13243                           ;incstack = 0
 13244  007382  9902               	bcf	(_loRa+2)& (0+255),4,b
 13245                           
 13246                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13247  007384  9500               	bcf	_loRa& (0+255),2,b
 13248                           
 13249                           ; BSR set to: 2
 13250                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13251  007386  0EF0               	movlw	-16
 13252  007388  1702               	andwf	(_loRa+2)& (0+255),f,b
 13253                           
 13254                           ; BSR set to: 2
 13255                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13256  00738A  0100               	movlb	0	; () banked
 13257  00738C  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13258  00738E  11EB               	iorwf	(_rxPayload+3)& (0+255),w,b
 13259  007390  B4D8               	btfsc	status,2,c
 13260  007392  0012               	return	
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;lorawan.c: 1110: {
 13264                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13265  007394  0005               	push	
 13266  007396  6EFA               	movwf	pclath,c
 13267  007398  51EA               	movf	(_rxPayload+2)& (0+255),w,b
 13268  00739A  6EFD               	movwf	tosl,c
 13269  00739C  51EB               	movf	(_rxPayload+3)& (0+255),w,b
 13270  00739E  6EFE               	movwf	tosh,c
 13271  0073A0  6AFF               	clrf	tosu,c
 13272  0073A2  50FA               	movf	pclath,w,c
 13273  0073A4  0C00               	retlw	0	;indir
 13274  0073A6                     __end_of_SetJoinFailState:
 13275                           	opt stack 0
 13276                           tosu	equ	0xFFF
 13277                           tosh	equ	0xFFE
 13278                           tosl	equ	0xFFD
 13279                           pclath	equ	0xFFA
 13280                           tblptru	equ	0xFF8
 13281                           tblptrh	equ	0xFF7
 13282                           tblptrl	equ	0xFF6
 13283                           tablat	equ	0xFF5
 13284                           prodh	equ	0xFF4
 13285                           prodl	equ	0xFF3
 13286                           intcon	equ	0xFF2
 13287                           intcon2	equ	0xFF1
 13288                           intcon3	equ	0xFF0
 13289                           postinc0	equ	0xFEE
 13290                           wreg	equ	0xFE8
 13291                           postinc1	equ	0xFE6
 13292                           postdec1	equ	0xFE5
 13293                           plusw1	equ	0xFE3
 13294                           fsr1h	equ	0xFE2
 13295                           fsr1l	equ	0xFE1
 13296                           indf2	equ	0xFDF
 13297                           postinc2	equ	0xFDE
 13298                           postdec2	equ	0xFDD
 13299                           fsr2h	equ	0xFDA
 13300                           fsr2l	equ	0xFD9
 13301                           status	equ	0xFD8
 13302                           
 13303 ;; *************** function _RxJoinResponse *****************
 13304 ;; Defined at:
 13305 ;;		line 117 in file "main.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;  status          1    wreg     unsigned char 
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;  status          1    0[COMRAM] unsigned char 
 13310 ;; Return value:  Size  Location     Type
 13311 ;;                  1    wreg      void 
 13312 ;; Registers used:
 13313 ;;		wreg
 13314 ;; Tracked objects:
 13315 ;;		On entry : F/0
 13316 ;;		On exit  : F/0
 13317 ;;		Unchanged: F/0
 13318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13323 ;;Total ram usage:        0 bytes
 13324 ;; Hardware stack levels used:    1
 13325 ;; Hardware stack levels required when called:    7
 13326 ;; This function calls:
 13327 ;;		Nothing
 13328 ;; This function is called by:
 13329 ;;		_main
 13330 ;;		_SetJoinFailState
 13331 ;;		_UpdateJoinSuccessState
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           	psect	text69
 13336  007970                     __ptext69:
 13337                           	opt stack 0
 13338  007970                     _RxJoinResponse:
 13339                           	opt stack 20
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;main.c: 119: PORTCbits.RC5 = 0;
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;incstack = 0
 13346  007970  9A82               	bcf	3970,5,c	;volatile
 13347                           
 13348                           ; BSR set to: 0
 13349  007972  0012               	return		;funcret
 13350  007974                     __end_of_RxJoinResponse:
 13351                           	opt stack 0
 13352                           tosu	equ	0xFFF
 13353                           tosh	equ	0xFFE
 13354                           tosl	equ	0xFFD
 13355                           pclath	equ	0xFFA
 13356                           tblptru	equ	0xFF8
 13357                           tblptrh	equ	0xFF7
 13358                           tblptrl	equ	0xFF6
 13359                           tablat	equ	0xFF5
 13360                           prodh	equ	0xFF4
 13361                           prodl	equ	0xFF3
 13362                           intcon	equ	0xFF2
 13363                           intcon2	equ	0xFF1
 13364                           intcon3	equ	0xFF0
 13365                           postinc0	equ	0xFEE
 13366                           wreg	equ	0xFE8
 13367                           postinc1	equ	0xFE6
 13368                           postdec1	equ	0xFE5
 13369                           plusw1	equ	0xFE3
 13370                           fsr1h	equ	0xFE2
 13371                           fsr1l	equ	0xFE1
 13372                           indf2	equ	0xFDF
 13373                           postinc2	equ	0xFDE
 13374                           postdec2	equ	0xFDD
 13375                           fsr2h	equ	0xFDA
 13376                           fsr2l	equ	0xFD9
 13377                           status	equ	0xFD8
 13378                           
 13379 ;; *************** function _MacExecuteCommands *****************
 13380 ;; Defined at:
 13381 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 13384 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13385 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 13388 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13389 ;;  done            1   31[BANK0 ] unsigned char 
 13390 ;; Return value:  Size  Location     Type
 13391 ;;                  2   26[BANK0 ] PTR unsigned char 
 13392 ;; Registers used:
 13393 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13394 ;; Tracked objects:
 13395 ;;		On entry : F/0
 13396 ;;		On exit  : F/0
 13397 ;;		Unchanged: 0/0
 13398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13399 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13401 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13402 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13403 ;;Total ram usage:        8 bytes
 13404 ;; Hardware stack levels used:    1
 13405 ;; Hardware stack levels required when called:   11
 13406 ;; This function calls:
 13407 ;;		_ExecuteDevStatus
 13408 ;;		_ExecuteDutyCycle
 13409 ;;		_ExecuteLinkAdr
 13410 ;;		_ExecuteLinkCheck
 13411 ;;		_ExecuteNewChannel
 13412 ;;		_ExecuteRxParamSetupReq
 13413 ;;		_ExecuteRxTimingSetup
 13414 ;; This function is called by:
 13415 ;;		_LORAWAN_RxDone
 13416 ;; This function uses a non-reentrant model
 13417 ;;
 13418                           
 13419                           	psect	text70
 13420  002DD4                     __ptext70:
 13421                           	opt stack 0
 13422  002DD4                     _MacExecuteCommands:
 13423                           	opt stack 15
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;lorawan.c: 1577: bool done = 0;
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;incstack = 0
 13430  002DD4  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;lorawan.c: 1578: uint8_t *ptr;
 13434                           ;lorawan.c: 1579: ptr = buffer;
 13435  002DD6  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 13436  002DDA  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 13437                           
 13438                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 13439  002DDE  D0DE               	goto	l14164
 13440  002DE0                     l14128:
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;lorawan.c: 1581: {
 13444                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 13445  002DE0  0102               	movlb	2	; () banked
 13446  002DE2  51A7               	movf	(_loRa+167)& (0+255),w,b
 13447  002DE4  0D02               	mullw	2
 13448  002DE6  0EA9               	movlw	low (_loRa+169)
 13449  002DE8  24F3               	addwf	prodl,w,c
 13450  002DEA  6ED9               	movwf	fsr2l,c
 13451  002DEC  0E02               	movlw	high (_loRa+169)
 13452  002DEE  20F4               	addwfc	prodh,w,c
 13453  002DF0  6EDA               	movwf	fsr2h,c
 13454  002DF2  90DF               	bcf	indf2,0,c
 13455                           
 13456                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 13457  002DF4  51A7               	movf	(_loRa+167)& (0+255),w,b
 13458  002DF6  0D02               	mullw	2
 13459  002DF8  0EA9               	movlw	low (_loRa+169)
 13460  002DFA  24F3               	addwf	prodl,w,c
 13461  002DFC  6ED9               	movwf	fsr2l,c
 13462  002DFE  0E02               	movlw	high (_loRa+169)
 13463  002E00  20F4               	addwfc	prodh,w,c
 13464  002E02  6EDA               	movwf	fsr2h,c
 13465  002E04  92DF               	bcf	indf2,1,c
 13466                           
 13467                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 13468  002E06  51A7               	movf	(_loRa+167)& (0+255),w,b
 13469  002E08  0D02               	mullw	2
 13470  002E0A  0EA9               	movlw	low (_loRa+169)
 13471  002E0C  24F3               	addwf	prodl,w,c
 13472  002E0E  6ED9               	movwf	fsr2l,c
 13473  002E10  0E02               	movlw	high (_loRa+169)
 13474  002E12  20F4               	addwfc	prodh,w,c
 13475  002E14  6EDA               	movwf	fsr2h,c
 13476  002E16  94DF               	bcf	indf2,2,c
 13477                           
 13478                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 13479  002E18  51A7               	movf	(_loRa+167)& (0+255),w,b
 13480  002E1A  0D02               	mullw	2
 13481  002E1C  0EA9               	movlw	low (_loRa+169)
 13482  002E1E  24F3               	addwf	prodl,w,c
 13483  002E20  6ED9               	movwf	fsr2l,c
 13484  002E22  0E02               	movlw	high (_loRa+169)
 13485  002E24  20F4               	addwfc	prodh,w,c
 13486  002E26  6EDA               	movwf	fsr2h,c
 13487  002E28  96DF               	bcf	indf2,3,c
 13488                           
 13489                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 13490  002E2A  51A7               	movf	(_loRa+167)& (0+255),w,b
 13491  002E2C  0D02               	mullw	2
 13492  002E2E  0EA9               	movlw	low (_loRa+169)
 13493  002E30  24F3               	addwf	prodl,w,c
 13494  002E32  6ED9               	movwf	fsr2l,c
 13495  002E34  0E02               	movlw	high (_loRa+169)
 13496  002E36  20F4               	addwfc	prodh,w,c
 13497  002E38  6EDA               	movwf	fsr2h,c
 13498  002E3A  98DF               	bcf	indf2,4,c
 13499                           
 13500                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 13501  002E3C  51A7               	movf	(_loRa+167)& (0+255),w,b
 13502  002E3E  0D02               	mullw	2
 13503  002E40  0EA9               	movlw	low (_loRa+169)
 13504  002E42  24F3               	addwf	prodl,w,c
 13505  002E44  6ED9               	movwf	fsr2l,c
 13506  002E46  0E02               	movlw	high (_loRa+169)
 13507  002E48  20F4               	addwfc	prodh,w,c
 13508  002E4A  6EDA               	movwf	fsr2h,c
 13509  002E4C  9ADF               	bcf	indf2,5,c
 13510                           
 13511                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 13512  002E4E  51A7               	movf	(_loRa+167)& (0+255),w,b
 13513  002E50  0D02               	mullw	2
 13514  002E52  0EA9               	movlw	low (_loRa+169)
 13515  002E54  24F3               	addwf	prodl,w,c
 13516  002E56  6ED9               	movwf	fsr2l,c
 13517  002E58  0E02               	movlw	high (_loRa+169)
 13518  002E5A  20F4               	addwfc	prodh,w,c
 13519  002E5C  6EDA               	movwf	fsr2h,c
 13520  002E5E  9CDF               	bcf	indf2,6,c
 13521                           
 13522                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 13523  002E60  51A7               	movf	(_loRa+167)& (0+255),w,b
 13524  002E62  0D02               	mullw	2
 13525  002E64  0EA9               	movlw	low (_loRa+169)
 13526  002E66  24F3               	addwf	prodl,w,c
 13527  002E68  6ED9               	movwf	fsr2l,c
 13528  002E6A  0E02               	movlw	high (_loRa+169)
 13529  002E6C  20F4               	addwfc	prodh,w,c
 13530  002E6E  6EDA               	movwf	fsr2h,c
 13531  002E70  9EDF               	bcf	indf2,7,c
 13532                           
 13533                           ; BSR set to: 2
 13534                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 13535  002E72  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13536  002E76  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13537  002E7A  51A7               	movf	(_loRa+167)& (0+255),w,b
 13538  002E7C  0D02               	mullw	2
 13539  002E7E  0EA8               	movlw	low (_loRa+168)
 13540  002E80  24F3               	addwf	prodl,w,c
 13541  002E82  6EE9               	movwf	fsr0l,c
 13542  002E84  0E02               	movlw	high (_loRa+168)
 13543  002E86  20F4               	addwfc	prodh,w,c
 13544  002E88  6EEA               	movwf	fsr0h,c
 13545  002E8A  CFDF FFEF          	movff	indf2,indf0
 13546                           
 13547                           ;lorawan.c: 1595: switch (*ptr ++)
 13548  002E8E  D060               	goto	l14156
 13549  002E90                     l14132:
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;lorawan.c: 1598: {
 13553                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 13554  002E90  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 13555  002E94  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 13556  002E98  EC54  F038         	call	_ExecuteLinkCheck
 13557  002E9C  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 13558  002EA0  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 13559  002EA4                     l14134:
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 13563  002EA4  0102               	movlb	2	; () banked
 13564  002EA6  51A7               	movf	(_loRa+167)& (0+255),w,b
 13565  002EA8  0D02               	mullw	2
 13566  002EAA  0EA8               	movlw	low (_loRa+168)
 13567  002EAC  24F3               	addwf	prodl,w,c
 13568  002EAE  6ED9               	movwf	fsr2l,c
 13569  002EB0  0E02               	movlw	high (_loRa+168)
 13570  002EB2  20F4               	addwfc	prodh,w,c
 13571  002EB4  6EDA               	movwf	fsr2h,c
 13572  002EB6  68DF               	setf	indf2,c
 13573                           
 13574                           ;lorawan.c: 1602: } break;
 13575  002EB8  D062               	goto	l14158
 13576  002EBA                     l14136:
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;lorawan.c: 1605: {
 13580                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 13581  002EBA  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 13582  002EBE  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 13583  002EC2  EC9E  F01A         	call	_ExecuteLinkAdr	;wreg free
 13584  002EC6  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 13585  002ECA  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 13586                           
 13587                           ;lorawan.c: 1607: } break;
 13588  002ECE  D057               	goto	l14158
 13589  002ED0                     l14138:
 13590                           
 13591                           ; BSR set to: 0
 13592                           ;lorawan.c: 1610: {
 13593                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 13594  002ED0  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 13595  002ED4  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 13596  002ED8  ECEB  F034         	call	_ExecuteDutyCycle	;wreg free
 13597  002EDC  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 13598  002EE0  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 13599                           
 13600                           ;lorawan.c: 1612: } break;
 13601  002EE4  D04C               	goto	l14158
 13602  002EE6                     l14140:
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;lorawan.c: 1615: {
 13606                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 13607  002EE6  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 13608  002EEA  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 13609  002EEE  EC54  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 13610  002EF2  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 13611  002EF6  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 13612                           
 13613                           ;lorawan.c: 1617: } break;
 13614  002EFA  D041               	goto	l14158
 13615  002EFC                     l14142:
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;lorawan.c: 1620: {
 13619                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 13620  002EFC  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 13621  002F00  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 13622  002F04  EC4A  F03C         	call	_ExecuteDevStatus	;wreg free
 13623  002F08  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 13624  002F0C  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 13625                           
 13626                           ;lorawan.c: 1622: } break;
 13627  002F10  D036               	goto	l14158
 13628  002F12                     l14144:
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;lorawan.c: 1625: {
 13632                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 13633  002F12  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 13634  002F16  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 13635  002F1A  ECBD  F019         	call	_ExecuteNewChannel	;wreg free
 13636  002F1E  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 13637  002F22  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 13638                           
 13639                           ;lorawan.c: 1628: } break;
 13640  002F26  D02B               	goto	l14158
 13641  002F28                     l14146:
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;lorawan.c: 1631: {
 13645                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 13646  002F28  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 13647  002F2C  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 13648  002F30  ECD3  F039         	call	_ExecuteRxTimingSetup	;wreg free
 13649  002F34  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 13650  002F38  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 13651                           
 13652                           ;lorawan.c: 1633: } break;
 13653  002F3C  D020               	goto	l14158
 13654  002F3E                     l14148:
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;lorawan.c: 1636: {
 13658                           ;lorawan.c: 1637: done = 1;
 13659  002F3E  0E01               	movlw	1
 13660  002F40  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 13664  002F42  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13665  002F44  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13666  002F46  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 13667  002F48  0E00               	movlw	0
 13668  002F4A  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13669  002F4C  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 13670  002F4E  D7AA               	goto	l14134
 13671  002F50                     l14156:
 13672                           
 13673                           ; BSR set to: 2
 13674  002F50  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 13675  002F54  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 13676  002F58  0100               	movlb	0	; () banked
 13677  002F5A  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 13678  002F5C  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 13679  002F5E  50DF               	movf	indf2,w,c
 13680                           
 13681                           ; Switch size 1, requested type "speed"
 13682                           ; Number of cases is 7, Range of values is 2 to 8
 13683                           ; switch strategies available:
 13684                           ; Name         Instructions Cycles
 13685                           ; simple_byte           22    12 (average)
 13686                           ;	Chosen strategy is simple_byte
 13687  002F60  0A02               	xorlw	2	; case 2
 13688  002F62  E096               	bz	l14132
 13689  002F64  0A01               	xorlw	1	; case 3
 13690  002F66  E0A9               	bz	l14136
 13691  002F68  0A07               	xorlw	7	; case 4
 13692  002F6A  E0B2               	bz	l14138
 13693  002F6C  0A01               	xorlw	1	; case 5
 13694  002F6E  E0BB               	bz	l14140
 13695  002F70  0A03               	xorlw	3	; case 6
 13696  002F72  E0C4               	bz	l14142
 13697  002F74  0A01               	xorlw	1	; case 7
 13698  002F76  E0CD               	bz	l14144
 13699  002F78  0A0F               	xorlw	15	; case 8
 13700  002F7A  E0D6               	bz	l14146
 13701  002F7C  D7E0               	goto	l14148
 13702  002F7E                     l14158:
 13703                           
 13704                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 13705                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 13706  002F7E  0102               	movlb	2	; () banked
 13707  002F80  51A7               	movf	(_loRa+167)& (0+255),w,b
 13708  002F82  0D02               	mullw	2
 13709  002F84  0EA8               	movlw	low (_loRa+168)
 13710  002F86  24F3               	addwf	prodl,w,c
 13711  002F88  6ED9               	movwf	fsr2l,c
 13712  002F8A  0E02               	movlw	high (_loRa+168)
 13713  002F8C  20F4               	addwfc	prodh,w,c
 13714  002F8E  6EDA               	movwf	fsr2h,c
 13715  002F90  28DE               	incf	postinc2,w,c
 13716  002F92  E004               	bz	l14164
 13717                           
 13718                           ; BSR set to: 2
 13719  002F94  0E10               	movlw	16
 13720  002F96  61A7               	cpfslt	(_loRa+167)& (0+255),b
 13721  002F98  D001               	goto	l14164
 13722                           
 13723                           ; BSR set to: 2
 13724                           ;lorawan.c: 1645: {
 13725                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 13726  002F9A  2BA7               	incf	(_loRa+167)& (0+255),f,b
 13727  002F9C                     l14164:
 13728  002F9C  0100               	movlb	0	; () banked
 13729  002F9E  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 13730  002FA0  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 13731  002FA2  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 13732  002FA4  0E00               	movlw	0
 13733  002FA6  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 13734  002FA8  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 13735  002FAA  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 13736  002FAC  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 13737  002FAE  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 13738  002FB0  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 13739  002FB2  E203               	bc	l14168
 13740                           
 13741                           ; BSR set to: 0
 13742  002FB4  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 13743  002FB6  E101 D713          	bz	l14128
 13744  002FBA                     l14168:
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;lorawan.c: 1647: }
 13748                           ;lorawan.c: 1648: }
 13749                           ;lorawan.c: 1649: return ptr;
 13750  002FBA  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 13751  002FBE  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 13752                           
 13753                           ; BSR set to: 0
 13754  002FC2  0012               	return		;funcret
 13755  002FC4                     __end_of_MacExecuteCommands:
 13756                           	opt stack 0
 13757                           tosu	equ	0xFFF
 13758                           tosh	equ	0xFFE
 13759                           tosl	equ	0xFFD
 13760                           pclath	equ	0xFFA
 13761                           tblptru	equ	0xFF8
 13762                           tblptrh	equ	0xFF7
 13763                           tblptrl	equ	0xFF6
 13764                           tablat	equ	0xFF5
 13765                           prodh	equ	0xFF4
 13766                           prodl	equ	0xFF3
 13767                           intcon	equ	0xFF2
 13768                           intcon2	equ	0xFF1
 13769                           intcon3	equ	0xFF0
 13770                           indf0	equ	0xFEF
 13771                           postinc0	equ	0xFEE
 13772                           fsr0h	equ	0xFEA
 13773                           fsr0l	equ	0xFE9
 13774                           wreg	equ	0xFE8
 13775                           postinc1	equ	0xFE6
 13776                           postdec1	equ	0xFE5
 13777                           plusw1	equ	0xFE3
 13778                           fsr1h	equ	0xFE2
 13779                           fsr1l	equ	0xFE1
 13780                           indf2	equ	0xFDF
 13781                           postinc2	equ	0xFDE
 13782                           postdec2	equ	0xFDD
 13783                           fsr2h	equ	0xFDA
 13784                           fsr2l	equ	0xFD9
 13785                           status	equ	0xFD8
 13786                           
 13787 ;; *************** function _ExecuteRxTimingSetup *****************
 13788 ;; Defined at:
 13789 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13790 ;; Parameters:    Size  Location     Type
 13791 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 13792 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13793 ;; Auto vars:     Size  Location     Type
 13794 ;;  delay           1   11[BANK0 ] unsigned char 
 13795 ;; Return value:  Size  Location     Type
 13796 ;;                  2    9[BANK0 ] PTR unsigned char 
 13797 ;; Registers used:
 13798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13799 ;; Tracked objects:
 13800 ;;		On entry : F/0
 13801 ;;		On exit  : F/2
 13802 ;;		Unchanged: 0/0
 13803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13807 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13808 ;;Total ram usage:        3 bytes
 13809 ;; Hardware stack levels used:    1
 13810 ;; Hardware stack levels required when called:    8
 13811 ;; This function calls:
 13812 ;;		_UpdateReceiveDelays
 13813 ;; This function is called by:
 13814 ;;		_MacExecuteCommands
 13815 ;; This function uses a non-reentrant model
 13816 ;;
 13817                           
 13818                           	psect	text71
 13819  0073A6                     __ptext71:
 13820                           	opt stack 0
 13821  0073A6                     _ExecuteRxTimingSetup:
 13822                           	opt stack 17
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;lorawan.c: 1661: uint8_t delay;
 13826                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;incstack = 0
 13830  0073A6  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 13831  0073AA  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 13832  0073AE  50DF               	movf	indf2,w,c
 13833  0073B0  0B0F               	andlw	15
 13834  0073B2  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;lorawan.c: 1664: ptr++;
 13838  0073B4  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 13839  0073B6  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 13843  0073B8  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 13844  0073BA  ECAD  F035         	call	_UpdateReceiveDelays
 13845                           
 13846                           ; BSR set to: 2
 13847                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 13848  0073BE  8104               	bsf	(_loRa+4)& (0+255),0,b
 13849                           
 13850                           ; BSR set to: 2
 13851                           ;lorawan.c: 1669: return ptr;
 13852  0073C0  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 13853  0073C4  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 13854                           
 13855                           ; BSR set to: 2
 13856  0073C8  0012               	return		;funcret
 13857  0073CA                     __end_of_ExecuteRxTimingSetup:
 13858                           	opt stack 0
 13859                           tosu	equ	0xFFF
 13860                           tosh	equ	0xFFE
 13861                           tosl	equ	0xFFD
 13862                           pclath	equ	0xFFA
 13863                           tblptru	equ	0xFF8
 13864                           tblptrh	equ	0xFF7
 13865                           tblptrl	equ	0xFF6
 13866                           tablat	equ	0xFF5
 13867                           prodh	equ	0xFF4
 13868                           prodl	equ	0xFF3
 13869                           intcon	equ	0xFF2
 13870                           intcon2	equ	0xFF1
 13871                           intcon3	equ	0xFF0
 13872                           indf0	equ	0xFEF
 13873                           postinc0	equ	0xFEE
 13874                           fsr0h	equ	0xFEA
 13875                           fsr0l	equ	0xFE9
 13876                           wreg	equ	0xFE8
 13877                           postinc1	equ	0xFE6
 13878                           postdec1	equ	0xFE5
 13879                           plusw1	equ	0xFE3
 13880                           fsr1h	equ	0xFE2
 13881                           fsr1l	equ	0xFE1
 13882                           indf2	equ	0xFDF
 13883                           postinc2	equ	0xFDE
 13884                           postdec2	equ	0xFDD
 13885                           fsr2h	equ	0xFDA
 13886                           fsr2l	equ	0xFD9
 13887                           status	equ	0xFD8
 13888                           
 13889 ;; *************** function _UpdateReceiveDelays *****************
 13890 ;; Defined at:
 13891 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13892 ;; Parameters:    Size  Location     Type
 13893 ;;  delay           1    wreg     unsigned char 
 13894 ;; Auto vars:     Size  Location     Type
 13895 ;;  delay           1    8[BANK0 ] unsigned char 
 13896 ;; Return value:  Size  Location     Type
 13897 ;;                  1    wreg      void 
 13898 ;; Registers used:
 13899 ;;		wreg, status,2, status,0, prodl, prodh
 13900 ;; Tracked objects:
 13901 ;;		On entry : C/3
 13902 ;;		On exit  : F/2
 13903 ;;		Unchanged: 0/0
 13904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13907 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13908 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13909 ;;Total ram usage:        5 bytes
 13910 ;; Hardware stack levels used:    1
 13911 ;; Hardware stack levels required when called:    7
 13912 ;; This function calls:
 13913 ;;		Nothing
 13914 ;; This function is called by:
 13915 ;;		_LORAWAN_RxDone
 13916 ;;		_ExecuteRxTimingSetup
 13917 ;; This function uses a non-reentrant model
 13918 ;;
 13919                           
 13920                           	psect	text72
 13921  006B5A                     __ptext72:
 13922                           	opt stack 0
 13923  006B5A                     _UpdateReceiveDelays:
 13924                           	opt stack 19
 13925                           
 13926                           ; BSR set to: 2
 13927                           ;incstack = 0
 13928                           ;UpdateReceiveDelays@delay stored from wreg
 13929  006B5A  0100               	movlb	0	; () banked
 13930  006B5C  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 13931                           
 13932                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 13933  006B5E  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13934  006B60  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 13935  006B62  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 13936  006B64  0EE8               	movlw	232
 13937  006B66  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13938  006B68  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 13939  006B6C  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 13940  006B70  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 13941  006B72  50F3               	movf	prodl,w,c
 13942  006B74  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13943  006B76  0E03               	movlw	3
 13944  006B78  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 13945  006B7A  50F3               	movf	prodl,w,c
 13946  006B7C  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 13947  006B7E  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 13948  006B82  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 13949                           
 13950                           ; BSR set to: 0
 13951                           ;lorawan.c: 2029: if (delay == 0)
 13952  006B86  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 13953  006B88  E105               	bnz	l13204
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;lorawan.c: 2030: {
 13957                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 13958  006B8A  0E03               	movlw	3
 13959  006B8C  0102               	movlb	2	; () banked
 13960  006B8E  6F95               	movwf	(_loRa+149)& (0+255),b
 13961  006B90  0EE8               	movlw	232
 13962  006B92  6F94               	movwf	(_loRa+148)& (0+255),b
 13963  006B94                     l13204:
 13964                           
 13965                           ;lorawan.c: 2032: }
 13966                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 13967  006B94  0EE8               	movlw	232
 13968  006B96  0102               	movlb	2	; () banked
 13969  006B98  2594               	addwf	(_loRa+148)& (0+255),w,b
 13970  006B9A  6F96               	movwf	(_loRa+150)& (0+255),b
 13971  006B9C  0E03               	movlw	3
 13972  006B9E  2195               	addwfc	(_loRa+149)& (0+255),w,b
 13973  006BA0  6F97               	movwf	(_loRa+151)& (0+255),b
 13974                           
 13975                           ; BSR set to: 2
 13976  006BA2  0012               	return		;funcret
 13977  006BA4                     __end_of_UpdateReceiveDelays:
 13978                           	opt stack 0
 13979                           tosu	equ	0xFFF
 13980                           tosh	equ	0xFFE
 13981                           tosl	equ	0xFFD
 13982                           pclath	equ	0xFFA
 13983                           tblptru	equ	0xFF8
 13984                           tblptrh	equ	0xFF7
 13985                           tblptrl	equ	0xFF6
 13986                           tablat	equ	0xFF5
 13987                           prodh	equ	0xFF4
 13988                           prodl	equ	0xFF3
 13989                           intcon	equ	0xFF2
 13990                           intcon2	equ	0xFF1
 13991                           intcon3	equ	0xFF0
 13992                           indf0	equ	0xFEF
 13993                           postinc0	equ	0xFEE
 13994                           fsr0h	equ	0xFEA
 13995                           fsr0l	equ	0xFE9
 13996                           wreg	equ	0xFE8
 13997                           postinc1	equ	0xFE6
 13998                           postdec1	equ	0xFE5
 13999                           plusw1	equ	0xFE3
 14000                           fsr1h	equ	0xFE2
 14001                           fsr1l	equ	0xFE1
 14002                           indf2	equ	0xFDF
 14003                           postinc2	equ	0xFDE
 14004                           postdec2	equ	0xFDD
 14005                           fsr2h	equ	0xFDA
 14006                           fsr2l	equ	0xFD9
 14007                           status	equ	0xFD8
 14008                           
 14009 ;; *************** function _ExecuteRxParamSetupReq *****************
 14010 ;; Defined at:
 14011 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14014 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;  frequency       4   18[BANK0 ] unsigned long 
 14017 ;;  dlSettings      1   22[BANK0 ] struct .
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  2   16[BANK0 ] PTR unsigned char 
 14020 ;; Registers used:
 14021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14022 ;; Tracked objects:
 14023 ;;		On entry : F/0
 14024 ;;		On exit  : F/2
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14028 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14030 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14031 ;;Total ram usage:        7 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    8
 14034 ;; This function calls:
 14035 ;;		_UpdateReceiveWindow2Parameters
 14036 ;;		_ValidateDataRate
 14037 ;;		_ValidateFrequency
 14038 ;;		_ValidateRxOffset
 14039 ;;		___lmul
 14040 ;; This function is called by:
 14041 ;;		_MacExecuteCommands
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text73
 14046  0042A8                     __ptext73:
 14047                           	opt stack 0
 14048  0042A8                     _ExecuteRxParamSetupReq:
 14049                           	opt stack 17
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 14053                           
 14054                           ; BSR set to: 0
 14055                           
 14056                           ; BSR set to: 2
 14057                           ;incstack = 0
 14058  0042A8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14059  0042AC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14060  0042B0  50DF               	movf	indf2,w,c
 14061  0042B2  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 14062                           
 14063                           ; BSR set to: 0
 14064  0042B4  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14065  0042B6  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14069  0042B8  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 14070  0042BC  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 14071  0042C0  0EFF               	movlw	255
 14072  0042C2  14DE               	andwf	postinc2,w,c
 14073  0042C4  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 14074  0042C6  0EFF               	movlw	255
 14075  0042C8  14DE               	andwf	postinc2,w,c
 14076  0042CA  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 14077  0042CC  0EFF               	movlw	255
 14078  0042CE  14DE               	andwf	postinc2,w,c
 14079  0042D0  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 14080  0042D2  0E00               	movlw	0
 14081  0042D4  14DE               	andwf	postinc2,w,c
 14082  0042D6  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 14086  0042D8  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 14087  0042DC  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 14088  0042E0  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 14089  0042E4  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 14090  0042E8  0E64               	movlw	100
 14091  0042EA  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14092  0042EC  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14093  0042EE  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14094  0042F0  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14095  0042F2  EC9C  F02E         	call	___lmul	;wreg free
 14096  0042F6  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 14097  0042FA  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 14098  0042FE  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 14099  004302  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 14103  004306  0E03               	movlw	3
 14104  004308  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 14105  00430A  0E00               	movlw	0
 14106  00430C  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 14107                           
 14108                           ; BSR set to: 0
 14109                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 14110  00430E  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 14111  004312  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 14112  004316  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 14113  00431A  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 14114  00431E  ECEA  F033         	call	_ValidateFrequency	;wreg free
 14115  004322  0900               	iorlw	0
 14116  004324  E10A               	bnz	l13648
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;lorawan_eu.c: 754: {
 14120                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 14121  004326  0102               	movlb	2	; () banked
 14122  004328  51A7               	movf	(_loRa+167)& (0+255),w,b
 14123  00432A  0D02               	mullw	2
 14124  00432C  0EA9               	movlw	low (_loRa+169)
 14125  00432E  24F3               	addwf	prodl,w,c
 14126  004330  6ED9               	movwf	fsr2l,c
 14127  004332  0E02               	movlw	high (_loRa+169)
 14128  004334  20F4               	addwfc	prodh,w,c
 14129  004336  6EDA               	movwf	fsr2h,c
 14130  004338  86DF               	bsf	indf2,3,c
 14131  00433A                     l13648:
 14132                           
 14133                           ;lorawan_eu.c: 756: }
 14134                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 14135  00433A  0100               	movlb	0	; () banked
 14136  00433C  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14137  00433E  0B0F               	andlw	15
 14138  004340  ECA4  F03B         	call	_ValidateDataRate
 14139  004344  0900               	iorlw	0
 14140  004346  E10A               	bnz	l13652
 14141                           
 14142                           ; BSR set to: 0
 14143                           ;lorawan_eu.c: 759: {
 14144                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 14145  004348  0102               	movlb	2	; () banked
 14146  00434A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14147  00434C  0D02               	mullw	2
 14148  00434E  0EA9               	movlw	low (_loRa+169)
 14149  004350  24F3               	addwf	prodl,w,c
 14150  004352  6ED9               	movwf	fsr2l,c
 14151  004354  0E02               	movlw	high (_loRa+169)
 14152  004356  20F4               	addwfc	prodh,w,c
 14153  004358  6EDA               	movwf	fsr2h,c
 14154  00435A  88DF               	bsf	indf2,4,c
 14155  00435C                     l13652:
 14156                           
 14157                           ;lorawan_eu.c: 761: }
 14158                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 14159  00435C  0100               	movlb	0	; () banked
 14160  00435E  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14161  004360  0B07               	andlw	7
 14162  004362  EC9A  F03B         	call	_ValidateRxOffset
 14163  004366  0900               	iorlw	0
 14164  004368  E10A               	bnz	l1127
 14165                           
 14166                           ; BSR set to: 0
 14167                           ;lorawan_eu.c: 764: {
 14168                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 14169  00436A  0102               	movlb	2	; () banked
 14170  00436C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14171  00436E  0D02               	mullw	2
 14172  004370  0EA9               	movlw	low (_loRa+169)
 14173  004372  24F3               	addwf	prodl,w,c
 14174  004374  6ED9               	movwf	fsr2l,c
 14175  004376  0E02               	movlw	high (_loRa+169)
 14176  004378  20F4               	addwfc	prodh,w,c
 14177  00437A  6EDA               	movwf	fsr2h,c
 14178  00437C  8ADF               	bsf	indf2,5,c
 14179  00437E                     l1127:
 14180                           
 14181                           ;lorawan_eu.c: 766: }
 14182                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 14183  00437E  0102               	movlb	2	; () banked
 14184  004380  51A7               	movf	(_loRa+167)& (0+255),w,b
 14185  004382  0D02               	mullw	2
 14186  004384  0EA9               	movlw	low (_loRa+169)
 14187  004386  24F3               	addwf	prodl,w,c
 14188  004388  6ED9               	movwf	fsr2l,c
 14189  00438A  0E02               	movlw	high (_loRa+169)
 14190  00438C  20F4               	addwfc	prodh,w,c
 14191  00438E  6EDA               	movwf	fsr2h,c
 14192  004390  A8DF               	btfss	indf2,4,c
 14193  004392  D029               	goto	l13666
 14194                           
 14195                           ; BSR set to: 2
 14196  004394  51A7               	movf	(_loRa+167)& (0+255),w,b
 14197  004396  0D02               	mullw	2
 14198  004398  0EA9               	movlw	low (_loRa+169)
 14199  00439A  24F3               	addwf	prodl,w,c
 14200  00439C  6ED9               	movwf	fsr2l,c
 14201  00439E  0E02               	movlw	high (_loRa+169)
 14202  0043A0  20F4               	addwfc	prodh,w,c
 14203  0043A2  6EDA               	movwf	fsr2h,c
 14204  0043A4  A6DF               	btfss	indf2,3,c
 14205  0043A6  D01F               	goto	l13666
 14206                           
 14207                           ; BSR set to: 2
 14208  0043A8  51A7               	movf	(_loRa+167)& (0+255),w,b
 14209  0043AA  0D02               	mullw	2
 14210  0043AC  0EA9               	movlw	low (_loRa+169)
 14211  0043AE  24F3               	addwf	prodl,w,c
 14212  0043B0  6ED9               	movwf	fsr2l,c
 14213  0043B2  0E02               	movlw	high (_loRa+169)
 14214  0043B4  20F4               	addwfc	prodh,w,c
 14215  0043B6  6EDA               	movwf	fsr2h,c
 14216  0043B8  AADF               	btfss	indf2,5,c
 14217  0043BA  D015               	goto	l13666
 14218                           
 14219                           ; BSR set to: 2
 14220                           ;lorawan_eu.c: 769: {
 14221                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 14222  0043BC  0100               	movlb	0	; () banked
 14223  0043BE  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14224  0043C0  0B07               	andlw	7
 14225  0043C2  0102               	movlb	2	; () banked
 14226  0043C4  6FEF               	movwf	(_loRa+239)& (0+255),b
 14227                           
 14228                           ; BSR set to: 2
 14229                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 14230  0043C6  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 14231  0043CA  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 14232  0043CE  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 14233  0043D2  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 14234  0043D6  0100               	movlb	0	; () banked
 14235  0043D8  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 14236  0043DA  0B0F               	andlw	15
 14237  0043DC  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 14238  0043DE  EC84  F03B         	call	_UpdateReceiveWindow2Parameters	;wreg free
 14239                           
 14240                           ; BSR set to: 0
 14241                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 14242  0043E2  0102               	movlb	2	; () banked
 14243  0043E4  8F03               	bsf	(_loRa+3)& (0+255),7,b
 14244  0043E6                     l13666:
 14245                           
 14246                           ; BSR set to: 2
 14247                           ;lorawan_eu.c: 773: }
 14248                           ;lorawan_eu.c: 775: return ptr;
 14249  0043E6  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 14250  0043EA  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 14251                           
 14252                           ; BSR set to: 2
 14253  0043EE  0012               	return		;funcret
 14254  0043F0                     __end_of_ExecuteRxParamSetupReq:
 14255                           	opt stack 0
 14256                           tosu	equ	0xFFF
 14257                           tosh	equ	0xFFE
 14258                           tosl	equ	0xFFD
 14259                           pclath	equ	0xFFA
 14260                           tblptru	equ	0xFF8
 14261                           tblptrh	equ	0xFF7
 14262                           tblptrl	equ	0xFF6
 14263                           tablat	equ	0xFF5
 14264                           prodh	equ	0xFF4
 14265                           prodl	equ	0xFF3
 14266                           intcon	equ	0xFF2
 14267                           intcon2	equ	0xFF1
 14268                           intcon3	equ	0xFF0
 14269                           indf0	equ	0xFEF
 14270                           postinc0	equ	0xFEE
 14271                           fsr0h	equ	0xFEA
 14272                           fsr0l	equ	0xFE9
 14273                           wreg	equ	0xFE8
 14274                           postinc1	equ	0xFE6
 14275                           postdec1	equ	0xFE5
 14276                           plusw1	equ	0xFE3
 14277                           fsr1h	equ	0xFE2
 14278                           fsr1l	equ	0xFE1
 14279                           indf2	equ	0xFDF
 14280                           postinc2	equ	0xFDE
 14281                           postdec2	equ	0xFDD
 14282                           fsr2h	equ	0xFDA
 14283                           fsr2l	equ	0xFD9
 14284                           status	equ	0xFD8
 14285                           
 14286 ;; *************** function _ValidateRxOffset *****************
 14287 ;; Defined at:
 14288 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14289 ;; Parameters:    Size  Location     Type
 14290 ;;  rxOffset        1    wreg     unsigned char 
 14291 ;; Auto vars:     Size  Location     Type
 14292 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 14293 ;;  result          1    5[BANK0 ] enum E8016
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      enum E8016
 14296 ;; Registers used:
 14297 ;;		wreg, status,2, status,0
 14298 ;; Tracked objects:
 14299 ;;		On entry : F/0
 14300 ;;		On exit  : F/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14304 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;Total ram usage:        2 bytes
 14308 ;; Hardware stack levels used:    1
 14309 ;; Hardware stack levels required when called:    7
 14310 ;; This function calls:
 14311 ;;		Nothing
 14312 ;; This function is called by:
 14313 ;;		_ExecuteRxParamSetupReq
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text74
 14318  007734                     __ptext74:
 14319                           	opt stack 0
 14320  007734                     _ValidateRxOffset:
 14321                           	opt stack 17
 14322                           
 14323                           ; BSR set to: 2
 14324                           ;incstack = 0
 14325                           ;ValidateRxOffset@rxOffset stored from wreg
 14326  007734  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 14327                           
 14328                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 14329  007736  0100               	movlb	0	; () banked
 14330  007738  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 14331                           
 14332                           ; BSR set to: 0
 14333                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 14334  00773A  0E05               	movlw	5
 14335  00773C  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 14336  00773E  D002               	goto	l1223
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;lorawan_eu.c: 1081: {
 14340                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 14341  007740  0E03               	movlw	3
 14342  007742  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 14343  007744                     l1223:
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;lorawan_eu.c: 1083: }
 14347                           ;lorawan_eu.c: 1085: return result;
 14348  007744  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 14349                           
 14350                           ; BSR set to: 0
 14351  007746  0012               	return		;funcret
 14352  007748                     __end_of_ValidateRxOffset:
 14353                           	opt stack 0
 14354                           tosu	equ	0xFFF
 14355                           tosh	equ	0xFFE
 14356                           tosl	equ	0xFFD
 14357                           pclath	equ	0xFFA
 14358                           tblptru	equ	0xFF8
 14359                           tblptrh	equ	0xFF7
 14360                           tblptrl	equ	0xFF6
 14361                           tablat	equ	0xFF5
 14362                           prodh	equ	0xFF4
 14363                           prodl	equ	0xFF3
 14364                           intcon	equ	0xFF2
 14365                           intcon2	equ	0xFF1
 14366                           intcon3	equ	0xFF0
 14367                           indf0	equ	0xFEF
 14368                           postinc0	equ	0xFEE
 14369                           fsr0h	equ	0xFEA
 14370                           fsr0l	equ	0xFE9
 14371                           wreg	equ	0xFE8
 14372                           postinc1	equ	0xFE6
 14373                           postdec1	equ	0xFE5
 14374                           plusw1	equ	0xFE3
 14375                           fsr1h	equ	0xFE2
 14376                           fsr1l	equ	0xFE1
 14377                           indf2	equ	0xFDF
 14378                           postinc2	equ	0xFDE
 14379                           postdec2	equ	0xFDD
 14380                           fsr2h	equ	0xFDA
 14381                           fsr2l	equ	0xFD9
 14382                           status	equ	0xFD8
 14383                           
 14384 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 14385 ;; Defined at:
 14386 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;  frequency       4    4[BANK0 ] unsigned long 
 14389 ;;  dataRate        1    8[BANK0 ] unsigned char 
 14390 ;; Auto vars:     Size  Location     Type
 14391 ;;		None
 14392 ;; Return value:  Size  Location     Type
 14393 ;;                  1    wreg      void 
 14394 ;; Registers used:
 14395 ;;		None
 14396 ;; Tracked objects:
 14397 ;;		On entry : F/0
 14398 ;;		On exit  : F/0
 14399 ;;		Unchanged: F/0
 14400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14401 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14404 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14405 ;;Total ram usage:        5 bytes
 14406 ;; Hardware stack levels used:    1
 14407 ;; Hardware stack levels required when called:    7
 14408 ;; This function calls:
 14409 ;;		Nothing
 14410 ;; This function is called by:
 14411 ;;		_ExecuteRxParamSetupReq
 14412 ;; This function uses a non-reentrant model
 14413 ;;
 14414                           
 14415                           	psect	text75
 14416  007708                     __ptext75:
 14417                           	opt stack 0
 14418  007708                     _UpdateReceiveWindow2Parameters:
 14419                           	opt stack 17
 14420                           
 14421                           ; BSR set to: 0
 14422                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;incstack = 0
 14426  007708  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 14427                           
 14428                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 14429  00770C  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 14430  007710  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 14431  007714  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 14432  007718  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 14433                           
 14434                           ; BSR set to: 0
 14435  00771C  0012               	return		;funcret
 14436  00771E                     __end_of_UpdateReceiveWindow2Parameters:
 14437                           	opt stack 0
 14438                           tosu	equ	0xFFF
 14439                           tosh	equ	0xFFE
 14440                           tosl	equ	0xFFD
 14441                           pclath	equ	0xFFA
 14442                           tblptru	equ	0xFF8
 14443                           tblptrh	equ	0xFF7
 14444                           tblptrl	equ	0xFF6
 14445                           tablat	equ	0xFF5
 14446                           prodh	equ	0xFF4
 14447                           prodl	equ	0xFF3
 14448                           intcon	equ	0xFF2
 14449                           intcon2	equ	0xFF1
 14450                           intcon3	equ	0xFF0
 14451                           indf0	equ	0xFEF
 14452                           postinc0	equ	0xFEE
 14453                           fsr0h	equ	0xFEA
 14454                           fsr0l	equ	0xFE9
 14455                           wreg	equ	0xFE8
 14456                           postinc1	equ	0xFE6
 14457                           postdec1	equ	0xFE5
 14458                           plusw1	equ	0xFE3
 14459                           fsr1h	equ	0xFE2
 14460                           fsr1l	equ	0xFE1
 14461                           indf2	equ	0xFDF
 14462                           postinc2	equ	0xFDE
 14463                           postdec2	equ	0xFDD
 14464                           fsr2h	equ	0xFDA
 14465                           fsr2l	equ	0xFD9
 14466                           status	equ	0xFD8
 14467                           
 14468 ;; *************** function _ExecuteNewChannel *****************
 14469 ;; Defined at:
 14470 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14471 ;; Parameters:    Size  Location     Type
 14472 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 14473 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  frequency       4   19[BANK0 ] unsigned long 
 14476 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 14477 ;;  drRange         1   18[BANK0 ] struct .
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  2   16[BANK0 ] PTR unsigned char 
 14480 ;; Registers used:
 14481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14482 ;; Tracked objects:
 14483 ;;		On entry : F/0
 14484 ;;		On exit  : F/2
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14488 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14491 ;;Total ram usage:        8 bytes
 14492 ;; Hardware stack levels used:    1
 14493 ;; Hardware stack levels required when called:    9
 14494 ;; This function calls:
 14495 ;;		_LORAWAN_SetChannelIdStatus
 14496 ;;		_UpdateChannelIdStatus
 14497 ;;		_UpdateDataRange
 14498 ;;		_UpdateDutyCycle
 14499 ;;		_UpdateFrequency
 14500 ;;		_ValidateChannelId
 14501 ;;		_ValidateDataRange
 14502 ;;		_ValidateFrequency
 14503 ;;		___lmul
 14504 ;; This function is called by:
 14505 ;;		_MacExecuteCommands
 14506 ;; This function uses a non-reentrant model
 14507 ;;
 14508                           
 14509                           	psect	text76
 14510  00337A                     __ptext76:
 14511                           	opt stack 0
 14512  00337A                     _ExecuteNewChannel:
 14513                           	opt stack 16
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 14517                           
 14518                           ; BSR set to: 0
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;incstack = 0
 14522  00337A  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14523  00337E  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14524  003382  50DF               	movf	indf2,w,c
 14525  003384  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 14526                           
 14527                           ; BSR set to: 0
 14528  003386  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14529  003388  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 14533  00338A  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14534  00338E  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14535  003392  0EFF               	movlw	255
 14536  003394  14DE               	andwf	postinc2,w,c
 14537  003396  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 14538  003398  0EFF               	movlw	255
 14539  00339A  14DE               	andwf	postinc2,w,c
 14540  00339C  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 14541  00339E  0EFF               	movlw	255
 14542  0033A0  14DE               	andwf	postinc2,w,c
 14543  0033A2  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 14544  0033A4  0E00               	movlw	0
 14545  0033A6  14DE               	andwf	postinc2,w,c
 14546  0033A8  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 14550  0033AA  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 14551  0033AE  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 14552  0033B2  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 14553  0033B6  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 14554  0033BA  0E64               	movlw	100
 14555  0033BC  6F68               	movwf	___lmul@multiplicand& (0+255),b
 14556  0033BE  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 14557  0033C0  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 14558  0033C2  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 14559  0033C4  EC9C  F02E         	call	___lmul	;wreg free
 14560  0033C8  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 14561  0033CC  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 14562  0033D0  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 14563  0033D4  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 14564                           
 14565                           ; BSR set to: 0
 14566                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 14567  0033D8  0E03               	movlw	3
 14568  0033DA  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 14569  0033DC  0E00               	movlw	0
 14570  0033DE  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14571                           
 14572                           ; BSR set to: 0
 14573                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 14574  0033E0  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 14575  0033E4  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 14576  0033E8  50DF               	movf	indf2,w,c
 14577  0033EA  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 14578                           
 14579                           ; BSR set to: 0
 14580  0033EC  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 14581  0033EE  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 14582                           
 14583                           ; BSR set to: 0
 14584                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 14585  0033F0  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 14586  0033F2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14587  0033F4  EC67  F03A         	call	_ValidateChannelId
 14588  0033F8  0900               	iorlw	0
 14589  0033FA  E12B               	bnz	l1110
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;lorawan_eu.c: 692: {
 14593                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 14594  0033FC  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 14595  003400  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 14596  003404  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 14597  003408  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 14598  00340C  ECEA  F033         	call	_ValidateFrequency	;wreg free
 14599  003410  0900               	iorlw	0
 14600  003412  E005               	bz	l13604
 14601                           
 14602                           ; BSR set to: 0
 14603  003414  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14604  003416  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14605  003418  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14606  00341A  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14607  00341C  E10A               	bnz	l13606
 14608  00341E                     l13604:
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;lorawan_eu.c: 694: {
 14612                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 14613  00341E  0102               	movlb	2	; () banked
 14614  003420  51A7               	movf	(_loRa+167)& (0+255),w,b
 14615  003422  0D02               	mullw	2
 14616  003424  0EA9               	movlw	low (_loRa+169)
 14617  003426  24F3               	addwf	prodl,w,c
 14618  003428  6ED9               	movwf	fsr2l,c
 14619  00342A  0E02               	movlw	high (_loRa+169)
 14620  00342C  20F4               	addwfc	prodh,w,c
 14621  00342E  6EDA               	movwf	fsr2h,c
 14622  003430  8EDF               	bsf	indf2,7,c
 14623  003432                     l13606:
 14624                           
 14625                           ;lorawan_eu.c: 696: }
 14626                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 14627  003432  0100               	movlb	0	; () banked
 14628  003434  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 14629  003436  EC07  F038         	call	_ValidateDataRange
 14630  00343A  0900               	iorlw	0
 14631  00343C  E10A               	bnz	l1110
 14632                           
 14633                           ; BSR set to: 0
 14634                           ;lorawan_eu.c: 699: {
 14635                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 14636  00343E  0102               	movlb	2	; () banked
 14637  003440  51A7               	movf	(_loRa+167)& (0+255),w,b
 14638  003442  0D02               	mullw	2
 14639  003444  0EA9               	movlw	low (_loRa+169)
 14640  003446  24F3               	addwf	prodl,w,c
 14641  003448  6ED9               	movwf	fsr2l,c
 14642  00344A  0E02               	movlw	high (_loRa+169)
 14643  00344C  20F4               	addwfc	prodh,w,c
 14644  00344E  6EDA               	movwf	fsr2h,c
 14645  003450  8CDF               	bsf	indf2,6,c
 14646  003452                     l1110:
 14647                           
 14648                           ;lorawan_eu.c: 701: }
 14649                           ;lorawan_eu.c: 702: }
 14650                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 14651  003452  0102               	movlb	2	; () banked
 14652  003454  51A7               	movf	(_loRa+167)& (0+255),w,b
 14653  003456  0D02               	mullw	2
 14654  003458  0EA9               	movlw	low (_loRa+169)
 14655  00345A  24F3               	addwf	prodl,w,c
 14656  00345C  6ED9               	movwf	fsr2l,c
 14657  00345E  0E02               	movlw	high (_loRa+169)
 14658  003460  20F4               	addwfc	prodh,w,c
 14659  003462  6EDA               	movwf	fsr2h,c
 14660  003464  AEDF               	btfss	indf2,7,c
 14661  003466  D065               	goto	l13628
 14662                           
 14663                           ; BSR set to: 2
 14664  003468  51A7               	movf	(_loRa+167)& (0+255),w,b
 14665  00346A  0D02               	mullw	2
 14666  00346C  0EA9               	movlw	low (_loRa+169)
 14667  00346E  24F3               	addwf	prodl,w,c
 14668  003470  6ED9               	movwf	fsr2l,c
 14669  003472  0E02               	movlw	high (_loRa+169)
 14670  003474  20F4               	addwfc	prodh,w,c
 14671  003476  6EDA               	movwf	fsr2h,c
 14672  003478  ACDF               	btfss	indf2,6,c
 14673  00347A  D05B               	goto	l13628
 14674                           
 14675                           ; BSR set to: 2
 14676                           ;lorawan_eu.c: 705: {
 14677                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 14678  00347C  0E10               	movlw	16
 14679  00347E  61DA               	cpfslt	(_loRa+218)& (0+255),b
 14680  003480  D029               	goto	l13620
 14681                           
 14682                           ; BSR set to: 2
 14683                           ;lorawan_eu.c: 707: {
 14684                           ;lorawan_eu.c: 708: if (frequency != 0)
 14685  003482  0100               	movlb	0	; () banked
 14686  003484  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14687  003486  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14688  003488  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14689  00348A  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14690  00348C  E01E               	bz	l13618
 14691                           
 14692                           ; BSR set to: 0
 14693                           ;lorawan_eu.c: 709: {
 14694                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 14695  00348E  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14696  003492  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14697  003496  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14698  00349A  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14699  00349E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14700  0034A0  EC7C  F037         	call	_UpdateFrequency
 14701                           
 14702                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 14703  0034A4  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14704  0034A8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14705  0034AA  ECC2  F024         	call	_UpdateDataRange
 14706                           
 14707                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 14708  0034AE  0E01               	movlw	1
 14709  0034B0  0100               	movlb	0	; () banked
 14710  0034B2  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14711  0034B4  0E2E               	movlw	46
 14712  0034B6  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14713  0034B8  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14714  0034BA  EC3B  F038         	call	_UpdateDutyCycle
 14715                           
 14716                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 14717  0034BE  0E01               	movlw	1
 14718  0034C0  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14719  0034C2  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14720  0034C4  ECBE  F023         	call	_UpdateChannelIdStatus
 14721                           
 14722                           ;lorawan_eu.c: 714: }
 14723  0034C8  D032               	goto	l13626
 14724  0034CA                     l13618:
 14725                           
 14726                           ; BSR set to: 0
 14727                           ;lorawan_eu.c: 715: else
 14728                           ;lorawan_eu.c: 716: {
 14729                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 14730  0034CA  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14731  0034CC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14732  0034CE  EC99  F037         	call	_LORAWAN_SetChannelIdStatus
 14733  0034D2  D02D               	goto	l13626
 14734  0034D4                     l13620:
 14735                           
 14736                           ; BSR set to: 2
 14737                           ;lorawan_eu.c: 720: else
 14738                           ;lorawan_eu.c: 721: {
 14739                           ;lorawan_eu.c: 722: if (frequency != 0)
 14740  0034D4  0100               	movlb	0	; () banked
 14741  0034D6  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 14742  0034D8  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 14743  0034DA  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 14744  0034DC  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 14745  0034DE  E022               	bz	l13624
 14746                           
 14747                           ; BSR set to: 0
 14748                           ;lorawan_eu.c: 723: {
 14749                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 14750  0034E0  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 14751  0034E4  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 14752  0034E8  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 14753  0034EC  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 14754  0034F0  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14755  0034F2  0F10               	addlw	16
 14756  0034F4  EC7C  F037         	call	_UpdateFrequency
 14757                           
 14758                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 14759  0034F8  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 14760  0034FC  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14761  0034FE  0F10               	addlw	16
 14762  003500  ECC2  F024         	call	_UpdateDataRange
 14763                           
 14764                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 14765  003504  0E01               	movlw	1
 14766  003506  0100               	movlb	0	; () banked
 14767  003508  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 14768  00350A  0E2E               	movlw	46
 14769  00350C  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 14770  00350E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14771  003510  0F10               	addlw	16
 14772  003512  EC3B  F038         	call	_UpdateDutyCycle
 14773                           
 14774                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 14775  003516  0E01               	movlw	1
 14776  003518  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 14777  00351A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14778  00351C  0F10               	addlw	16
 14779  00351E  ECBE  F023         	call	_UpdateChannelIdStatus
 14780                           
 14781                           ;lorawan_eu.c: 728: }
 14782  003522  D005               	goto	l13626
 14783  003524                     l13624:
 14784                           
 14785                           ; BSR set to: 0
 14786                           ;lorawan_eu.c: 729: else
 14787                           ;lorawan_eu.c: 730: {
 14788                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 14789  003524  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14790  003526  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 14791  003528  0F10               	addlw	16
 14792  00352A  EC99  F037         	call	_LORAWAN_SetChannelIdStatus
 14793  00352E                     l13626:
 14794                           
 14795                           ;lorawan_eu.c: 732: }
 14796                           ;lorawan_eu.c: 733: }
 14797                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 14798  00352E  0102               	movlb	2	; () banked
 14799  003530  8703               	bsf	(_loRa+3)& (0+255),3,b
 14800  003532                     l13628:
 14801                           
 14802                           ; BSR set to: 2
 14803                           ;lorawan_eu.c: 736: }
 14804                           ;lorawan_eu.c: 737: return ptr;
 14805  003532  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 14806  003536  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 14807                           
 14808                           ; BSR set to: 2
 14809  00353A  0012               	return		;funcret
 14810  00353C                     __end_of_ExecuteNewChannel:
 14811                           	opt stack 0
 14812                           tosu	equ	0xFFF
 14813                           tosh	equ	0xFFE
 14814                           tosl	equ	0xFFD
 14815                           pclath	equ	0xFFA
 14816                           tblptru	equ	0xFF8
 14817                           tblptrh	equ	0xFF7
 14818                           tblptrl	equ	0xFF6
 14819                           tablat	equ	0xFF5
 14820                           prodh	equ	0xFF4
 14821                           prodl	equ	0xFF3
 14822                           intcon	equ	0xFF2
 14823                           intcon2	equ	0xFF1
 14824                           intcon3	equ	0xFF0
 14825                           indf0	equ	0xFEF
 14826                           postinc0	equ	0xFEE
 14827                           fsr0h	equ	0xFEA
 14828                           fsr0l	equ	0xFE9
 14829                           wreg	equ	0xFE8
 14830                           postinc1	equ	0xFE6
 14831                           postdec1	equ	0xFE5
 14832                           plusw1	equ	0xFE3
 14833                           fsr1h	equ	0xFE2
 14834                           fsr1l	equ	0xFE1
 14835                           indf2	equ	0xFDF
 14836                           postinc2	equ	0xFDE
 14837                           postdec2	equ	0xFDD
 14838                           fsr2h	equ	0xFDA
 14839                           fsr2l	equ	0xFD9
 14840                           status	equ	0xFD8
 14841                           
 14842 ;; *************** function _ValidateFrequency *****************
 14843 ;; Defined at:
 14844 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  result          1    8[BANK0 ] enum E8016
 14849 ;; Return value:  Size  Location     Type
 14850 ;;                  1    wreg      enum E8016
 14851 ;; Registers used:
 14852 ;;		wreg, status,2, status,0
 14853 ;; Tracked objects:
 14854 ;;		On entry : F/0
 14855 ;;		On exit  : F/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14861 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14862 ;;Total ram usage:        5 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    7
 14865 ;; This function calls:
 14866 ;;		Nothing
 14867 ;; This function is called by:
 14868 ;;		_ExecuteNewChannel
 14869 ;;		_ExecuteRxParamSetupReq
 14870 ;;		_UpdateCfList
 14871 ;; This function uses a non-reentrant model
 14872 ;;
 14873                           
 14874                           	psect	text77
 14875  0067D4                     __ptext77:
 14876                           	opt stack 0
 14877  0067D4                     _ValidateFrequency:
 14878                           	opt stack 18
 14879                           
 14880                           ; BSR set to: 0
 14881                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 14882                           
 14883                           ; BSR set to: 2
 14884                           ;incstack = 0
 14885  0067D4  6B68               	clrf	ValidateFrequency@result& (0+255),b
 14886                           
 14887                           ; BSR set to: 0
 14888                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 14889  0067D6  0102               	movlb	2	; () banked
 14890  0067D8  51A4               	movf	(_loRa+164)& (0+255),w,b
 14891  0067DA  E116               	bnz	l12866
 14892                           
 14893                           ; BSR set to: 2
 14894                           ;lorawan_eu.c: 1093: {
 14895                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 14896  0067DC  0E81               	movlw	129
 14897  0067DE  0100               	movlb	0	; () banked
 14898  0067E0  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14899  0067E2  0E25               	movlw	37
 14900  0067E4  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14901  0067E6  0EDB               	movlw	219
 14902  0067E8  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14903  0067EA  0E33               	movlw	51
 14904  0067EC  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14905  0067EE  E209               	bc	l12864
 14906                           
 14907                           ; BSR set to: 0
 14908  0067F0  0EC0               	movlw	192
 14909  0067F2  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14910  0067F4  0E55               	movlw	85
 14911  0067F6  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14912  0067F8  0E70               	movlw	112
 14913  0067FA  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14914  0067FC  0E33               	movlw	51
 14915  0067FE  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14916  006800  E215               	bc	l1231
 14917  006802                     l12864:
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;lorawan_eu.c: 1095: {
 14921                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 14922  006802  0E03               	movlw	3
 14923  006804  6F68               	movwf	ValidateFrequency@result& (0+255),b
 14924  006806  D012               	goto	l1231
 14925  006808                     l12866:
 14926                           
 14927                           ; BSR set to: 2
 14928                           ;lorawan_eu.c: 1099: else
 14929                           ;lorawan_eu.c: 1100: {
 14930                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 14931  006808  0E71               	movlw	113
 14932  00680A  0100               	movlb	0	; () banked
 14933  00680C  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14934  00680E  0E5E               	movlw	94
 14935  006810  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14936  006812  0EEA               	movlw	234
 14937  006814  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14938  006816  0E19               	movlw	25
 14939  006818  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 14940  00681A  E2F3               	bc	l12864
 14941                           
 14942                           ; BSR set to: 0
 14943  00681C  0E90               	movlw	144
 14944  00681E  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 14945  006820  0ED1               	movlw	209
 14946  006822  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 14947  006824  0ECF               	movlw	207
 14948  006826  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 14949  006828  0E19               	movlw	25
 14950  00682A  D7E9               	goto	L7
 14951  00682C                     l1231:
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;lorawan_eu.c: 1104: }
 14955                           ;lorawan_eu.c: 1105: }
 14956                           ;lorawan_eu.c: 1107: return result;
 14957  00682C  5168               	movf	ValidateFrequency@result& (0+255),w,b
 14958                           
 14959                           ; BSR set to: 0
 14960  00682E  0012               	return		;funcret
 14961  006830                     __end_of_ValidateFrequency:
 14962                           	opt stack 0
 14963                           tosu	equ	0xFFF
 14964                           tosh	equ	0xFFE
 14965                           tosl	equ	0xFFD
 14966                           pclath	equ	0xFFA
 14967                           tblptru	equ	0xFF8
 14968                           tblptrh	equ	0xFF7
 14969                           tblptrl	equ	0xFF6
 14970                           tablat	equ	0xFF5
 14971                           prodh	equ	0xFF4
 14972                           prodl	equ	0xFF3
 14973                           intcon	equ	0xFF2
 14974                           intcon2	equ	0xFF1
 14975                           intcon3	equ	0xFF0
 14976                           indf0	equ	0xFEF
 14977                           postinc0	equ	0xFEE
 14978                           fsr0h	equ	0xFEA
 14979                           fsr0l	equ	0xFE9
 14980                           wreg	equ	0xFE8
 14981                           postinc1	equ	0xFE6
 14982                           postdec1	equ	0xFE5
 14983                           plusw1	equ	0xFE3
 14984                           fsr1h	equ	0xFE2
 14985                           fsr1l	equ	0xFE1
 14986                           indf2	equ	0xFDF
 14987                           postinc2	equ	0xFDE
 14988                           postdec2	equ	0xFDD
 14989                           fsr2h	equ	0xFDA
 14990                           fsr2l	equ	0xFD9
 14991                           status	equ	0xFD8
 14992                           
 14993 ;; *************** function _ValidateDataRange *****************
 14994 ;; Defined at:
 14995 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14996 ;; Parameters:    Size  Location     Type
 14997 ;;  dataRangeNew    1    wreg     unsigned char 
 14998 ;; Auto vars:     Size  Location     Type
 14999 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 15000 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 15001 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 15002 ;;  result          1    6[BANK0 ] enum E8016
 15003 ;; Return value:  Size  Location     Type
 15004 ;;                  1    wreg      enum E8016
 15005 ;; Registers used:
 15006 ;;		wreg, status,2, status,0, cstack
 15007 ;; Tracked objects:
 15008 ;;		On entry : F/0
 15009 ;;		On exit  : F/0
 15010 ;;		Unchanged: 0/0
 15011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15013 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15015 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15016 ;;Total ram usage:        4 bytes
 15017 ;; Hardware stack levels used:    1
 15018 ;; Hardware stack levels required when called:    8
 15019 ;; This function calls:
 15020 ;;		_ValidateDataRate
 15021 ;; This function is called by:
 15022 ;;		_ExecuteNewChannel
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           	psect	text78
 15027  00700E                     __ptext78:
 15028                           	opt stack 0
 15029  00700E                     _ValidateDataRange:
 15030                           	opt stack 16
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;incstack = 0
 15034                           ;ValidateDataRange@dataRangeNew stored from wreg
 15035  00700E  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 15036                           
 15037                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 15038  007010  0100               	movlb	0	; () banked
 15039  007012  6B66               	clrf	ValidateDataRange@result& (0+255),b
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 15043                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 15044  007014  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15045  007016  0B0F               	andlw	15
 15046  007018  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 15047                           
 15048                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 15049  00701A  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 15050  00701C  0B0F               	andlw	15
 15051  00701E  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 15052                           
 15053                           ; BSR set to: 0
 15054                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 15055  007020  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 15056  007022  ECA4  F03B         	call	_ValidateDataRate
 15057  007026  0900               	iorlw	0
 15058  007028  E108               	bnz	l12886
 15059                           
 15060                           ; BSR set to: 0
 15061  00702A  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15062  00702C  ECA4  F03B         	call	_ValidateDataRate
 15063  007030  0900               	iorlw	0
 15064  007032  E103               	bnz	l12886
 15065                           
 15066                           ; BSR set to: 0
 15067  007034  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 15068  007036  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 15069  007038  E202               	bc	l1238
 15070  00703A                     l12886:
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;lorawan_eu.c: 1119: {
 15074                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 15075  00703A  0E03               	movlw	3
 15076  00703C  6F66               	movwf	ValidateDataRange@result& (0+255),b
 15077  00703E                     l1238:
 15078                           
 15079                           ; BSR set to: 0
 15080                           ;lorawan_eu.c: 1121: }
 15081                           ;lorawan_eu.c: 1122: return result;
 15082  00703E  5166               	movf	ValidateDataRange@result& (0+255),w,b
 15083                           
 15084                           ; BSR set to: 0
 15085  007040  0012               	return		;funcret
 15086  007042                     __end_of_ValidateDataRange:
 15087                           	opt stack 0
 15088                           tosu	equ	0xFFF
 15089                           tosh	equ	0xFFE
 15090                           tosl	equ	0xFFD
 15091                           pclath	equ	0xFFA
 15092                           tblptru	equ	0xFF8
 15093                           tblptrh	equ	0xFF7
 15094                           tblptrl	equ	0xFF6
 15095                           tablat	equ	0xFF5
 15096                           prodh	equ	0xFF4
 15097                           prodl	equ	0xFF3
 15098                           intcon	equ	0xFF2
 15099                           intcon2	equ	0xFF1
 15100                           intcon3	equ	0xFF0
 15101                           indf0	equ	0xFEF
 15102                           postinc0	equ	0xFEE
 15103                           fsr0h	equ	0xFEA
 15104                           fsr0l	equ	0xFE9
 15105                           wreg	equ	0xFE8
 15106                           postinc1	equ	0xFE6
 15107                           postdec1	equ	0xFE5
 15108                           plusw1	equ	0xFE3
 15109                           fsr1h	equ	0xFE2
 15110                           fsr1l	equ	0xFE1
 15111                           indf2	equ	0xFDF
 15112                           postinc2	equ	0xFDE
 15113                           postdec2	equ	0xFDD
 15114                           fsr2h	equ	0xFDA
 15115                           fsr2l	equ	0xFD9
 15116                           status	equ	0xFD8
 15117                           
 15118 ;; *************** function _UpdateFrequency *****************
 15119 ;; Defined at:
 15120 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;  channelId       1    wreg     unsigned char 
 15123 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15124 ;; Auto vars:     Size  Location     Type
 15125 ;;  channelId       1    8[BANK0 ] unsigned char 
 15126 ;; Return value:  Size  Location     Type
 15127 ;;                  1    wreg      void 
 15128 ;; Registers used:
 15129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15130 ;; Tracked objects:
 15131 ;;		On entry : F/0
 15132 ;;		On exit  : F/0
 15133 ;;		Unchanged: 0/0
 15134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15139 ;;Total ram usage:        5 bytes
 15140 ;; Hardware stack levels used:    1
 15141 ;; Hardware stack levels required when called:    7
 15142 ;; This function calls:
 15143 ;;		Nothing
 15144 ;; This function is called by:
 15145 ;;		_ExecuteNewChannel
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149                           	psect	text79
 15150  006EF8                     __ptext79:
 15151                           	opt stack 0
 15152  006EF8                     _UpdateFrequency:
 15153                           	opt stack 17
 15154                           
 15155                           ; BSR set to: 0
 15156                           ;incstack = 0
 15157                           ;UpdateFrequency@channelId stored from wreg
 15158  006EF8  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 15159                           
 15160                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 15161  006EFA  0100               	movlb	0	; () banked
 15162  006EFC  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15163  006EFE  0D0E               	mullw	14
 15164  006F00  0E00               	movlw	low _Channels
 15165  006F02  24F3               	addwf	prodl,w,c
 15166  006F04  6ED9               	movwf	fsr2l,c
 15167  006F06  0E04               	movlw	high _Channels
 15168  006F08  20F4               	addwfc	prodh,w,c
 15169  006F0A  6EDA               	movwf	fsr2h,c
 15170  006F0C  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 15171  006F10  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 15172  006F14  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 15173  006F18  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 15174                           
 15175                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 15176  006F1C  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 15177  006F1E  0D0E               	mullw	14
 15178  006F20  0E0D               	movlw	low (_Channels+13)
 15179  006F22  24F3               	addwf	prodl,w,c
 15180  006F24  6ED9               	movwf	fsr2l,c
 15181  006F26  0E04               	movlw	high (_Channels+13)
 15182  006F28  20F4               	addwfc	prodh,w,c
 15183  006F2A  6EDA               	movwf	fsr2h,c
 15184  006F2C  0E00               	movlw	0
 15185  006F2E  80DB               	bsf	plusw2,0,c
 15186                           
 15187                           ; BSR set to: 0
 15188  006F30  0C00               	retlw	0	;funcret
 15189  006F32                     __end_of_UpdateFrequency:
 15190                           	opt stack 0
 15191                           tosu	equ	0xFFF
 15192                           tosh	equ	0xFFE
 15193                           tosl	equ	0xFFD
 15194                           pclath	equ	0xFFA
 15195                           tblptru	equ	0xFF8
 15196                           tblptrh	equ	0xFF7
 15197                           tblptrl	equ	0xFF6
 15198                           tablat	equ	0xFF5
 15199                           prodh	equ	0xFF4
 15200                           prodl	equ	0xFF3
 15201                           intcon	equ	0xFF2
 15202                           intcon2	equ	0xFF1
 15203                           intcon3	equ	0xFF0
 15204                           indf0	equ	0xFEF
 15205                           postinc0	equ	0xFEE
 15206                           fsr0h	equ	0xFEA
 15207                           fsr0l	equ	0xFE9
 15208                           wreg	equ	0xFE8
 15209                           postinc1	equ	0xFE6
 15210                           postdec1	equ	0xFE5
 15211                           plusw1	equ	0xFE3
 15212                           fsr1h	equ	0xFE2
 15213                           fsr1l	equ	0xFE1
 15214                           indf2	equ	0xFDF
 15215                           postinc2	equ	0xFDE
 15216                           postdec2	equ	0xFDD
 15217                           plusw2	equ	0xFDB
 15218                           fsr2h	equ	0xFDA
 15219                           fsr2l	equ	0xFD9
 15220                           status	equ	0xFD8
 15221                           
 15222 ;; *************** function _UpdateDutyCycle *****************
 15223 ;; Defined at:
 15224 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15225 ;; Parameters:    Size  Location     Type
 15226 ;;  channelId       1    wreg     unsigned char 
 15227 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 15228 ;; Auto vars:     Size  Location     Type
 15229 ;;  channelId       1    6[BANK0 ] unsigned char 
 15230 ;; Return value:  Size  Location     Type
 15231 ;;                  1    wreg      void 
 15232 ;; Registers used:
 15233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15234 ;; Tracked objects:
 15235 ;;		On entry : F/0
 15236 ;;		On exit  : F/0
 15237 ;;		Unchanged: 0/0
 15238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15242 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15243 ;;Total ram usage:        3 bytes
 15244 ;; Hardware stack levels used:    1
 15245 ;; Hardware stack levels required when called:    7
 15246 ;; This function calls:
 15247 ;;		Nothing
 15248 ;; This function is called by:
 15249 ;;		_ExecuteNewChannel
 15250 ;; This function uses a non-reentrant model
 15251 ;;
 15252                           
 15253                           	psect	text80
 15254  007076                     __ptext80:
 15255                           	opt stack 0
 15256  007076                     _UpdateDutyCycle:
 15257                           	opt stack 17
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;incstack = 0
 15261                           ;UpdateDutyCycle@channelId stored from wreg
 15262  007076  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 15263                           
 15264                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 15265  007078  0100               	movlb	0	; () banked
 15266  00707A  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15267  00707C  0D0E               	mullw	14
 15268  00707E  0E06               	movlw	low (_Channels+6)
 15269  007080  24F3               	addwf	prodl,w,c
 15270  007082  6ED9               	movwf	fsr2l,c
 15271  007084  0E04               	movlw	high (_Channels+6)
 15272  007086  20F4               	addwfc	prodh,w,c
 15273  007088  6EDA               	movwf	fsr2h,c
 15274  00708A  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 15275  00708E  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 15276                           
 15277                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 15278  007092  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 15279  007094  0D0E               	mullw	14
 15280  007096  0E0D               	movlw	low (_Channels+13)
 15281  007098  24F3               	addwf	prodl,w,c
 15282  00709A  6ED9               	movwf	fsr2l,c
 15283  00709C  0E04               	movlw	high (_Channels+13)
 15284  00709E  20F4               	addwfc	prodh,w,c
 15285  0070A0  6EDA               	movwf	fsr2h,c
 15286  0070A2  0E00               	movlw	0
 15287  0070A4  84DB               	bsf	plusw2,2,c
 15288                           
 15289                           ; BSR set to: 0
 15290  0070A6  0C00               	retlw	0	;funcret
 15291  0070A8                     __end_of_UpdateDutyCycle:
 15292                           	opt stack 0
 15293                           tosu	equ	0xFFF
 15294                           tosh	equ	0xFFE
 15295                           tosl	equ	0xFFD
 15296                           pclath	equ	0xFFA
 15297                           tblptru	equ	0xFF8
 15298                           tblptrh	equ	0xFF7
 15299                           tblptrl	equ	0xFF6
 15300                           tablat	equ	0xFF5
 15301                           prodh	equ	0xFF4
 15302                           prodl	equ	0xFF3
 15303                           intcon	equ	0xFF2
 15304                           intcon2	equ	0xFF1
 15305                           intcon3	equ	0xFF0
 15306                           indf0	equ	0xFEF
 15307                           postinc0	equ	0xFEE
 15308                           fsr0h	equ	0xFEA
 15309                           fsr0l	equ	0xFE9
 15310                           wreg	equ	0xFE8
 15311                           postinc1	equ	0xFE6
 15312                           postdec1	equ	0xFE5
 15313                           plusw1	equ	0xFE3
 15314                           fsr1h	equ	0xFE2
 15315                           fsr1l	equ	0xFE1
 15316                           indf2	equ	0xFDF
 15317                           postinc2	equ	0xFDE
 15318                           postdec2	equ	0xFDD
 15319                           plusw2	equ	0xFDB
 15320                           fsr2h	equ	0xFDA
 15321                           fsr2l	equ	0xFD9
 15322                           status	equ	0xFD8
 15323                           
 15324 ;; *************** function _UpdateDataRange *****************
 15325 ;; Defined at:
 15326 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15327 ;; Parameters:    Size  Location     Type
 15328 ;;  channelId       1    wreg     unsigned char 
 15329 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 15330 ;; Auto vars:     Size  Location     Type
 15331 ;;  channelId       1    6[BANK0 ] unsigned char 
 15332 ;;  i               1    7[BANK0 ] unsigned char 
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15337 ;; Tracked objects:
 15338 ;;		On entry : F/0
 15339 ;;		On exit  : F/2
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15342 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15344 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15345 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15346 ;;Total ram usage:        4 bytes
 15347 ;; Hardware stack levels used:    1
 15348 ;; Hardware stack levels required when called:    7
 15349 ;; This function calls:
 15350 ;;		Nothing
 15351 ;; This function is called by:
 15352 ;;		_ExecuteNewChannel
 15353 ;; This function uses a non-reentrant model
 15354 ;;
 15355                           
 15356                           	psect	text81
 15357  004984                     __ptext81:
 15358                           	opt stack 0
 15359  004984                     _UpdateDataRange:
 15360                           	opt stack 17
 15361                           
 15362                           ; BSR set to: 0
 15363                           ;incstack = 0
 15364                           ;UpdateDataRange@channelId stored from wreg
 15365  004984  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 15366                           
 15367                           ;lorawan_eu.c: 1011: uint8_t i;
 15368                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 15369  004986  0E07               	movlw	7
 15370  004988  0102               	movlb	2	; () banked
 15371  00498A  6FEB               	movwf	(_loRa+235)& (0+255),b
 15372                           
 15373                           ; BSR set to: 2
 15374                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 15375  00498C  6BEC               	clrf	(_loRa+236)& (0+255),b
 15376                           
 15377                           ; BSR set to: 2
 15378                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 15379  00498E  0100               	movlb	0	; () banked
 15380  004990  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15381  004992  0D0E               	mullw	14
 15382  004994  0E05               	movlw	low (_Channels+5)
 15383  004996  24F3               	addwf	prodl,w,c
 15384  004998  6ED9               	movwf	fsr2l,c
 15385  00499A  0E04               	movlw	high (_Channels+5)
 15386  00499C  20F4               	addwfc	prodh,w,c
 15387  00499E  6EDA               	movwf	fsr2h,c
 15388  0049A0  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 15392  0049A4  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 15393  0049A6  0D0E               	mullw	14
 15394  0049A8  0E0D               	movlw	low (_Channels+13)
 15395  0049AA  24F3               	addwf	prodl,w,c
 15396  0049AC  6ED9               	movwf	fsr2l,c
 15397  0049AE  0E04               	movlw	high (_Channels+13)
 15398  0049B0  20F4               	addwfc	prodh,w,c
 15399  0049B2  6EDA               	movwf	fsr2h,c
 15400  0049B4  0E00               	movlw	0
 15401  0049B6  82DB               	bsf	plusw2,1,c
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 15405  0049B8  6B67               	clrf	UpdateDataRange@i& (0+255),b
 15406  0049BA  D04E               	goto	l12912
 15407  0049BC                     l12900:
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;lorawan_eu.c: 1020: {
 15411                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 15412  0049BC  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15413  0049BE  0D0E               	mullw	14
 15414  0049C0  0E05               	movlw	low (_Channels+5)
 15415  0049C2  24F3               	addwf	prodl,w,c
 15416  0049C4  6ED9               	movwf	fsr2l,c
 15417  0049C6  0E04               	movlw	high (_Channels+5)
 15418  0049C8  20F4               	addwfc	prodh,w,c
 15419  0049CA  6EDA               	movwf	fsr2h,c
 15420  0049CC  50DF               	movf	223,w,c
 15421  0049CE  0B0F               	andlw	15
 15422  0049D0  0100               	movlb	0	; () banked
 15423  0049D2  6F65               	movwf	??_UpdateDataRange& (0+255),b
 15424  0049D4  0102               	movlb	2	; () banked
 15425  0049D6  51EB               	movf	(_loRa+235)& (0+255),w,b
 15426  0049D8  0100               	movlb	0	; () banked
 15427  0049DA  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 15428  0049DC  E216               	bc	l1204
 15429                           
 15430                           ; BSR set to: 0
 15431  0049DE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15432  0049E0  0D0E               	mullw	14
 15433  0049E2  0E04               	movlw	low (_Channels+4)
 15434  0049E4  24F3               	addwf	prodl,w,c
 15435  0049E6  6ED9               	movwf	fsr2l,c
 15436  0049E8  0E04               	movlw	high (_Channels+4)
 15437  0049EA  20F4               	addwfc	prodh,w,c
 15438  0049EC  6EDA               	movwf	fsr2h,c
 15439  0049EE  04DE               	decf	postinc2,w,c
 15440  0049F0  E10C               	bnz	l1204
 15441                           
 15442                           ; BSR set to: 0
 15443                           ;lorawan_eu.c: 1022: {
 15444                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 15445  0049F2  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15446  0049F4  0D0E               	mullw	14
 15447  0049F6  0E05               	movlw	low (_Channels+5)
 15448  0049F8  24F3               	addwf	prodl,w,c
 15449  0049FA  6ED9               	movwf	fsr2l,c
 15450  0049FC  0E04               	movlw	high (_Channels+5)
 15451  0049FE  20F4               	addwfc	prodh,w,c
 15452  004A00  6EDA               	movwf	fsr2h,c
 15453  004A02  50DF               	movf	223,w,c
 15454  004A04  0B0F               	andlw	15
 15455  004A06  0102               	movlb	2	; () banked
 15456  004A08  6FEB               	movwf	(_loRa+235)& (0+255),b
 15457  004A0A                     l1204:
 15458                           
 15459                           ;lorawan_eu.c: 1024: }
 15460                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 15461  004A0A  0100               	movlb	0	; () banked
 15462  004A0C  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15463  004A0E  0D0E               	mullw	14
 15464  004A10  0E05               	movlw	low (_Channels+5)
 15465  004A12  24F3               	addwf	prodl,w,c
 15466  004A14  6ED9               	movwf	fsr2l,c
 15467  004A16  0E04               	movlw	high (_Channels+5)
 15468  004A18  20F4               	addwfc	prodh,w,c
 15469  004A1A  6EDA               	movwf	fsr2h,c
 15470  004A1C  38DF               	swapf	223,w,c
 15471  004A1E  0B0F               	andlw	15
 15472  004A20  0102               	movlb	2	; () banked
 15473  004A22  61EC               	cpfslt	(_loRa+236)& (0+255),b
 15474  004A24  D017               	goto	l12910
 15475                           
 15476                           ; BSR set to: 2
 15477  004A26  0100               	movlb	0	; () banked
 15478  004A28  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15479  004A2A  0D0E               	mullw	14
 15480  004A2C  0E04               	movlw	low (_Channels+4)
 15481  004A2E  24F3               	addwf	prodl,w,c
 15482  004A30  6ED9               	movwf	fsr2l,c
 15483  004A32  0E04               	movlw	high (_Channels+4)
 15484  004A34  20F4               	addwfc	prodh,w,c
 15485  004A36  6EDA               	movwf	fsr2h,c
 15486  004A38  04DE               	decf	postinc2,w,c
 15487  004A3A  E10C               	bnz	l12910
 15488                           
 15489                           ; BSR set to: 0
 15490                           ;lorawan_eu.c: 1026: {
 15491                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 15492  004A3C  5167               	movf	UpdateDataRange@i& (0+255),w,b
 15493  004A3E  0D0E               	mullw	14
 15494  004A40  0E05               	movlw	low (_Channels+5)
 15495  004A42  24F3               	addwf	prodl,w,c
 15496  004A44  6ED9               	movwf	fsr2l,c
 15497  004A46  0E04               	movlw	high (_Channels+5)
 15498  004A48  20F4               	addwfc	prodh,w,c
 15499  004A4A  6EDA               	movwf	fsr2h,c
 15500  004A4C  38DF               	swapf	223,w,c
 15501  004A4E  0B0F               	andlw	15
 15502  004A50  0102               	movlb	2	; () banked
 15503  004A52  6FEC               	movwf	(_loRa+236)& (0+255),b
 15504  004A54                     l12910:
 15505  004A54  0100               	movlb	0	; () banked
 15506  004A56  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 15507  004A58                     l12912:
 15508                           
 15509                           ; BSR set to: 0
 15510  004A58  0102               	movlb	2	; () banked
 15511  004A5A  51ED               	movf	(_loRa+237)& (0+255),w,b
 15512  004A5C  0100               	movlb	0	; () banked
 15513  004A5E  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 15514  004A60  E3AD               	bnc	l12900
 15515                           
 15516                           ; BSR set to: 0
 15517                           ;lorawan_eu.c: 1028: }
 15518                           ;lorawan_eu.c: 1029: }
 15519                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 15520  004A62  0102               	movlb	2	; () banked
 15521  004A64  51DF               	movf	(_loRa+223)& (0+255),w,b
 15522  004A66  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 15523  004A68  E202               	bc	l12918
 15524                           
 15525                           ; BSR set to: 2
 15526                           ;lorawan_eu.c: 1032: {
 15527                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 15528  004A6A  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 15529  004A6E                     l12918:
 15530                           
 15531                           ; BSR set to: 2
 15532                           ;lorawan_eu.c: 1034: }
 15533                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 15534  004A6E  51EB               	movf	(_loRa+235)& (0+255),w,b
 15535  004A70  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 15536  004A72  A0D8               	btfss	status,0,c
 15537                           
 15538                           ; BSR set to: 2
 15539                           ;lorawan_eu.c: 1037: {
 15540                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 15541  004A74  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 15542                           
 15543                           ; BSR set to: 2
 15544  004A78  0012               	return		;funcret
 15545  004A7A                     __end_of_UpdateDataRange:
 15546                           	opt stack 0
 15547                           tosu	equ	0xFFF
 15548                           tosh	equ	0xFFE
 15549                           tosl	equ	0xFFD
 15550                           pclath	equ	0xFFA
 15551                           tblptru	equ	0xFF8
 15552                           tblptrh	equ	0xFF7
 15553                           tblptrl	equ	0xFF6
 15554                           tablat	equ	0xFF5
 15555                           prodh	equ	0xFF4
 15556                           prodl	equ	0xFF3
 15557                           intcon	equ	0xFF2
 15558                           intcon2	equ	0xFF1
 15559                           intcon3	equ	0xFF0
 15560                           indf0	equ	0xFEF
 15561                           postinc0	equ	0xFEE
 15562                           fsr0h	equ	0xFEA
 15563                           fsr0l	equ	0xFE9
 15564                           wreg	equ	0xFE8
 15565                           postinc1	equ	0xFE6
 15566                           postdec1	equ	0xFE5
 15567                           plusw1	equ	0xFE3
 15568                           fsr1h	equ	0xFE2
 15569                           fsr1l	equ	0xFE1
 15570                           indf2	equ	0xFDF
 15571                           postinc2	equ	0xFDE
 15572                           postdec2	equ	0xFDD
 15573                           plusw2	equ	0xFDB
 15574                           fsr2h	equ	0xFDA
 15575                           fsr2l	equ	0xFD9
 15576                           status	equ	0xFD8
 15577                           
 15578 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 15579 ;; Defined at:
 15580 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;  channelId       1    wreg     unsigned char 
 15583 ;;  statusNew       1    8[BANK0 ] unsigned char 
 15584 ;; Auto vars:     Size  Location     Type
 15585 ;;  channelId       1   10[BANK0 ] unsigned char 
 15586 ;;  result          1    0        enum E8016
 15587 ;; Return value:  Size  Location     Type
 15588 ;;                  1    wreg      enum E8016
 15589 ;; Registers used:
 15590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15591 ;; Tracked objects:
 15592 ;;		On entry : F/0
 15593 ;;		On exit  : D/0
 15594 ;;		Unchanged: 0/0
 15595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15596 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15597 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15599 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15600 ;;Total ram usage:        3 bytes
 15601 ;; Hardware stack levels used:    1
 15602 ;; Hardware stack levels required when called:    8
 15603 ;; This function calls:
 15604 ;;		_UpdateChannelIdStatus
 15605 ;;		_ValidateChannelId
 15606 ;; This function is called by:
 15607 ;;		_ExecuteNewChannel
 15608 ;;		_UpdateCfList
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612                           	psect	text82
 15613  006F32                     __ptext82:
 15614                           	opt stack 0
 15615  006F32                     _LORAWAN_SetChannelIdStatus:
 15616                           	opt stack 17
 15617                           
 15618                           ; BSR set to: 2
 15619                           ;incstack = 0
 15620                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 15621  006F32  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 15622                           
 15623                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 15624  006F34  0E01               	movlw	1
 15625  006F36  0100               	movlb	0	; () banked
 15626  006F38  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15627  006F3A  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15628  006F3C  EC67  F03A         	call	_ValidateChannelId
 15629  006F40  0900               	iorlw	0
 15630  006F42  E001               	bz	l12928
 15631                           
 15632                           ; BSR set to: 0
 15633                           ;lorawan_eu.c: 290: }
 15634  006F44  0012               	return	
 15635  006F46                     l12928:
 15636                           
 15637                           ; BSR set to: 0
 15638                           ;lorawan_eu.c: 292: else
 15639                           ;lorawan_eu.c: 293: {
 15640                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 15641  006F46  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15642  006F48  0D0E               	mullw	14
 15643  006F4A  0E0D               	movlw	low (_Channels+13)
 15644  006F4C  24F3               	addwf	prodl,w,c
 15645  006F4E  6ED9               	movwf	fsr2l,c
 15646  006F50  0E04               	movlw	high (_Channels+13)
 15647  006F52  20F4               	addwfc	prodh,w,c
 15648  006F54  6EDA               	movwf	fsr2h,c
 15649  006F56  50DF               	movf	indf2,w,c
 15650  006F58  0B07               	andlw	7
 15651  006F5A  0A07               	xorlw	7
 15652  006F5C  A4D8               	btfss	status,2,c
 15653  006F5E  0012               	return	
 15654                           
 15655                           ; BSR set to: 0
 15656                           ;lorawan_eu.c: 295: {
 15657                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 15658  006F60  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 15659  006F64  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 15660  006F66  EFBE  F023         	goto	_UpdateChannelIdStatus
 15661  006F6A                     __end_of_LORAWAN_SetChannelIdStatus:
 15662                           	opt stack 0
 15663                           tosu	equ	0xFFF
 15664                           tosh	equ	0xFFE
 15665                           tosl	equ	0xFFD
 15666                           pclath	equ	0xFFA
 15667                           tblptru	equ	0xFF8
 15668                           tblptrh	equ	0xFF7
 15669                           tblptrl	equ	0xFF6
 15670                           tablat	equ	0xFF5
 15671                           prodh	equ	0xFF4
 15672                           prodl	equ	0xFF3
 15673                           intcon	equ	0xFF2
 15674                           intcon2	equ	0xFF1
 15675                           intcon3	equ	0xFF0
 15676                           indf0	equ	0xFEF
 15677                           postinc0	equ	0xFEE
 15678                           fsr0h	equ	0xFEA
 15679                           fsr0l	equ	0xFE9
 15680                           wreg	equ	0xFE8
 15681                           postinc1	equ	0xFE6
 15682                           postdec1	equ	0xFE5
 15683                           plusw1	equ	0xFE3
 15684                           fsr1h	equ	0xFE2
 15685                           fsr1l	equ	0xFE1
 15686                           indf2	equ	0xFDF
 15687                           postinc2	equ	0xFDE
 15688                           postdec2	equ	0xFDD
 15689                           plusw2	equ	0xFDB
 15690                           fsr2h	equ	0xFDA
 15691                           fsr2l	equ	0xFD9
 15692                           status	equ	0xFD8
 15693                           
 15694 ;; *************** function _ValidateChannelId *****************
 15695 ;; Defined at:
 15696 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;  channelId       1    wreg     unsigned char 
 15699 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;  channelId       1    6[BANK0 ] unsigned char 
 15702 ;;  result          1    5[BANK0 ] enum E8016
 15703 ;; Return value:  Size  Location     Type
 15704 ;;                  1    wreg      enum E8016
 15705 ;; Registers used:
 15706 ;;		wreg, status,2, status,0
 15707 ;; Tracked objects:
 15708 ;;		On entry : F/0
 15709 ;;		On exit  : F/0
 15710 ;;		Unchanged: 0/0
 15711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15712 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15713 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15715 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15716 ;;Total ram usage:        3 bytes
 15717 ;; Hardware stack levels used:    1
 15718 ;; Hardware stack levels required when called:    7
 15719 ;; This function calls:
 15720 ;;		Nothing
 15721 ;; This function is called by:
 15722 ;;		_LORAWAN_SetChannelIdStatus
 15723 ;;		_ExecuteNewChannel
 15724 ;; This function uses a non-reentrant model
 15725 ;;
 15726                           
 15727                           	psect	text83
 15728  0074CE                     __ptext83:
 15729                           	opt stack 0
 15730  0074CE                     _ValidateChannelId:
 15731                           	opt stack 17
 15732                           
 15733                           ;incstack = 0
 15734                           ;ValidateChannelId@channelId stored from wreg
 15735  0074CE  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 15736                           
 15737                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 15738  0074D0  0100               	movlb	0	; () banked
 15739  0074D2  6B65               	clrf	ValidateChannelId@result& (0+255),b
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 15743  0074D4  0E10               	movlw	16
 15744  0074D6  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15745  0074D8  D005               	goto	l12654
 15746                           
 15747                           ; BSR set to: 0
 15748  0074DA  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 15749  0074DC  E105               	bnz	l1244
 15750                           
 15751                           ; BSR set to: 0
 15752  0074DE  0E03               	movlw	3
 15753  0074E0  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 15754  0074E2  D002               	goto	l1244
 15755  0074E4                     l12654:
 15756                           
 15757                           ; BSR set to: 0
 15758                           ;lorawan_eu.c: 1130: {
 15759                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 15760  0074E4  0E03               	movlw	3
 15761  0074E6  6F65               	movwf	ValidateChannelId@result& (0+255),b
 15762  0074E8                     l1244:
 15763                           
 15764                           ; BSR set to: 0
 15765                           ;lorawan_eu.c: 1132: }
 15766                           ;lorawan_eu.c: 1134: return result;
 15767  0074E8  5165               	movf	ValidateChannelId@result& (0+255),w,b
 15768                           
 15769                           ; BSR set to: 0
 15770  0074EA  0012               	return		;funcret
 15771  0074EC                     __end_of_ValidateChannelId:
 15772                           	opt stack 0
 15773                           tosu	equ	0xFFF
 15774                           tosh	equ	0xFFE
 15775                           tosl	equ	0xFFD
 15776                           pclath	equ	0xFFA
 15777                           tblptru	equ	0xFF8
 15778                           tblptrh	equ	0xFF7
 15779                           tblptrl	equ	0xFF6
 15780                           tablat	equ	0xFF5
 15781                           prodh	equ	0xFF4
 15782                           prodl	equ	0xFF3
 15783                           intcon	equ	0xFF2
 15784                           intcon2	equ	0xFF1
 15785                           intcon3	equ	0xFF0
 15786                           indf0	equ	0xFEF
 15787                           postinc0	equ	0xFEE
 15788                           fsr0h	equ	0xFEA
 15789                           fsr0l	equ	0xFE9
 15790                           wreg	equ	0xFE8
 15791                           postinc1	equ	0xFE6
 15792                           postdec1	equ	0xFE5
 15793                           plusw1	equ	0xFE3
 15794                           fsr1h	equ	0xFE2
 15795                           fsr1l	equ	0xFE1
 15796                           indf2	equ	0xFDF
 15797                           postinc2	equ	0xFDE
 15798                           postdec2	equ	0xFDD
 15799                           plusw2	equ	0xFDB
 15800                           fsr2h	equ	0xFDA
 15801                           fsr2l	equ	0xFD9
 15802                           status	equ	0xFD8
 15803                           
 15804 ;; *************** function _ExecuteLinkCheck *****************
 15805 ;; Defined at:
 15806 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 15809 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15810 ;; Auto vars:     Size  Location     Type
 15811 ;;		None
 15812 ;; Return value:  Size  Location     Type
 15813 ;;                  2    4[BANK0 ] PTR unsigned char 
 15814 ;; Registers used:
 15815 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15816 ;; Tracked objects:
 15817 ;;		On entry : F/0
 15818 ;;		On exit  : F/0
 15819 ;;		Unchanged: 0/0
 15820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15821 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15824 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15825 ;;Total ram usage:        2 bytes
 15826 ;; Hardware stack levels used:    1
 15827 ;; Hardware stack levels required when called:    7
 15828 ;; This function calls:
 15829 ;;		Nothing
 15830 ;; This function is called by:
 15831 ;;		_MacExecuteCommands
 15832 ;; This function uses a non-reentrant model
 15833 ;;
 15834                           
 15835                           	psect	text84
 15836  0070A8                     __ptext84:
 15837                           	opt stack 0
 15838  0070A8                     _ExecuteLinkCheck:
 15839                           	opt stack 18
 15840                           
 15841                           ; BSR set to: 0
 15842                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;incstack = 0
 15846  0070A8  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15847  0070AC  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15848  0070B0  50DF               	movf	indf2,w,c
 15849  0070B2  0102               	movlb	2	; () banked
 15850  0070B4  6FDD               	movwf	(_loRa+221)& (0+255),b
 15851                           
 15852                           ; BSR set to: 2
 15853  0070B6  0100               	movlb	0	; () banked
 15854  0070B8  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15855  0070BA  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15856                           
 15857                           ; BSR set to: 0
 15858                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 15859  0070BC  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 15860  0070C0  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 15861  0070C4  50DF               	movf	indf2,w,c
 15862  0070C6  0102               	movlb	2	; () banked
 15863  0070C8  6FDE               	movwf	(_loRa+222)& (0+255),b
 15864  0070CA  0100               	movlb	0	; () banked
 15865  0070CC  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 15866  0070CE  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 15867                           
 15868                           ; BSR set to: 0
 15869                           ;lorawan.c: 1656: return ptr;
 15870  0070D0  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 15871  0070D4  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 15872                           
 15873                           ; BSR set to: 0
 15874  0070D8  0012               	return		;funcret
 15875  0070DA                     __end_of_ExecuteLinkCheck:
 15876                           	opt stack 0
 15877                           tosu	equ	0xFFF
 15878                           tosh	equ	0xFFE
 15879                           tosl	equ	0xFFD
 15880                           pclath	equ	0xFFA
 15881                           tblptru	equ	0xFF8
 15882                           tblptrh	equ	0xFF7
 15883                           tblptrl	equ	0xFF6
 15884                           tablat	equ	0xFF5
 15885                           prodh	equ	0xFF4
 15886                           prodl	equ	0xFF3
 15887                           intcon	equ	0xFF2
 15888                           intcon2	equ	0xFF1
 15889                           intcon3	equ	0xFF0
 15890                           indf0	equ	0xFEF
 15891                           postinc0	equ	0xFEE
 15892                           fsr0h	equ	0xFEA
 15893                           fsr0l	equ	0xFE9
 15894                           wreg	equ	0xFE8
 15895                           postinc1	equ	0xFE6
 15896                           postdec1	equ	0xFE5
 15897                           plusw1	equ	0xFE3
 15898                           fsr1h	equ	0xFE2
 15899                           fsr1l	equ	0xFE1
 15900                           indf2	equ	0xFDF
 15901                           postinc2	equ	0xFDE
 15902                           postdec2	equ	0xFDD
 15903                           plusw2	equ	0xFDB
 15904                           fsr2h	equ	0xFDA
 15905                           fsr2l	equ	0xFD9
 15906                           status	equ	0xFD8
 15907                           
 15908 ;; *************** function _ExecuteLinkAdr *****************
 15909 ;; Defined at:
 15910 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15911 ;; Parameters:    Size  Location     Type
 15912 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 15913 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15914 ;; Auto vars:     Size  Location     Type
 15915 ;;  redundancy      2   23[BANK0 ] PTR struct .
 15916 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15917 ;;  channelMask     2   20[BANK0 ] unsigned int 
 15918 ;;  dataRate        1   25[BANK0 ] unsigned char 
 15919 ;;  txPower         1   22[BANK0 ] unsigned char 
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  2   17[BANK0 ] PTR unsigned char 
 15922 ;; Registers used:
 15923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15924 ;; Tracked objects:
 15925 ;;		On entry : F/0
 15926 ;;		On exit  : F/2
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15930 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15931 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15932 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15933 ;;Total ram usage:        9 bytes
 15934 ;; Hardware stack levels used:    1
 15935 ;; Hardware stack levels required when called:   10
 15936 ;; This function calls:
 15937 ;;		_EnableChannels
 15938 ;;		_UpdateCurrentDataRate
 15939 ;;		_UpdateTxPower
 15940 ;;		_ValidateChannelMask
 15941 ;;		_ValidateChannelMaskCntl
 15942 ;;		_ValidateDataRate
 15943 ;;		_ValidateTxPower
 15944 ;; This function is called by:
 15945 ;;		_MacExecuteCommands
 15946 ;; This function uses a non-reentrant model
 15947 ;;
 15948                           
 15949                           	psect	text85
 15950  00353C                     __ptext85:
 15951                           	opt stack 0
 15952  00353C                     _ExecuteLinkAdr:
 15953                           	opt stack 15
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 15957                           ;lorawan_eu.c: 616: uint16_t channelMask;
 15958                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 15959                           
 15960                           ; BSR set to: 0
 15961                           ;incstack = 0
 15962  00353C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15963  003540  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15964  003544  50DF               	movf	indf2,w,c
 15965  003546  0B0F               	andlw	15
 15966  003548  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 15967                           
 15968                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 15969  00354A  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15970  00354E  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15971  003552  50DF               	movf	indf2,w,c
 15972  003554  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 15973  003556  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 15974  003558  0B0F               	andlw	15
 15975  00355A  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;lorawan_eu.c: 620: ptr++;
 15979  00355C  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 15980  00355E  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 15984  003560  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 15985  003564  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 15986  003568  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 15987  00356C  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 15988                           
 15989                           ; BSR set to: 0
 15990                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 15991  003570  0E02               	movlw	2
 15992  003572  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 15993  003574  0E00               	movlw	0
 15994  003576  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 15995                           
 15996                           ; BSR set to: 0
 15997                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 15998                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 15999  003578  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 16000  00357C  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 16001                           
 16002                           ; BSR set to: 0
 16003  003580  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16004  003582  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16005                           
 16006                           ; BSR set to: 0
 16007                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 16008  003584  0102               	movlb	2	; () banked
 16009  003586  AD02               	btfss	(_loRa+2)& (0+255),6,b
 16010  003588  D092               	goto	l13572
 16011                           
 16012                           ; BSR set to: 2
 16013                           ;lorawan_eu.c: 627: {
 16014                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 16015  00358A  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16016  00358E  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16017  003592  0100               	movlb	0	; () banked
 16018  003594  38DF               	swapf	223,w,c
 16019  003596  0B07               	andlw	7
 16020  003598  EC78  F03B         	call	_ValidateChannelMaskCntl
 16021  00359C  0900               	iorlw	0
 16022  00359E  E112               	bnz	l13540
 16023                           
 16024                           ; BSR set to: 0
 16025  0035A0  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 16026  0035A4  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 16027  0035A8  ECB5  F037         	call	_ValidateChannelMask	;wreg free
 16028  0035AC  0900               	iorlw	0
 16029  0035AE  E10A               	bnz	l13540
 16030                           
 16031                           ; BSR set to: 0
 16032                           ;lorawan_eu.c: 629: {
 16033                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 16034  0035B0  0102               	movlb	2	; () banked
 16035  0035B2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16036  0035B4  0D02               	mullw	2
 16037  0035B6  0EA9               	movlw	low (_loRa+169)
 16038  0035B8  24F3               	addwf	prodl,w,c
 16039  0035BA  6ED9               	movwf	fsr2l,c
 16040  0035BC  0E02               	movlw	high (_loRa+169)
 16041  0035BE  20F4               	addwfc	prodh,w,c
 16042  0035C0  6EDA               	movwf	fsr2h,c
 16043  0035C2  80DF               	bsf	indf2,0,c
 16044  0035C4                     l13540:
 16045                           
 16046                           ;lorawan_eu.c: 631: }
 16047                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 16048  0035C4  0100               	movlb	0	; () banked
 16049  0035C6  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16050  0035C8  ECA4  F03B         	call	_ValidateDataRate
 16051  0035CC  0900               	iorlw	0
 16052  0035CE  E112               	bnz	l13548
 16053                           
 16054                           ; BSR set to: 0
 16055  0035D0  0102               	movlb	2	; () banked
 16056  0035D2  51EB               	movf	(_loRa+235)& (0+255),w,b
 16057  0035D4  0100               	movlb	0	; () banked
 16058  0035D6  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16059  0035D8  E30D               	bnc	l13548
 16060                           
 16061                           ; BSR set to: 0
 16062  0035DA  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16063  0035DC  0102               	movlb	2	; () banked
 16064  0035DE  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16065  0035E0  E309               	bnc	l13548
 16066                           
 16067                           ; BSR set to: 2
 16068                           ;lorawan_eu.c: 634: {
 16069                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 16070  0035E2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16071  0035E4  0D02               	mullw	2
 16072  0035E6  0EA9               	movlw	low (_loRa+169)
 16073  0035E8  24F3               	addwf	prodl,w,c
 16074  0035EA  6ED9               	movwf	fsr2l,c
 16075  0035EC  0E02               	movlw	high (_loRa+169)
 16076  0035EE  20F4               	addwfc	prodh,w,c
 16077  0035F0  6EDA               	movwf	fsr2h,c
 16078  0035F2  82DF               	bsf	indf2,1,c
 16079  0035F4                     l13548:
 16080                           
 16081                           ;lorawan_eu.c: 636: }
 16082                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 16083  0035F4  0100               	movlb	0	; () banked
 16084  0035F6  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16085  0035F8  ECF6  F039         	call	_ValidateTxPower
 16086  0035FC  0900               	iorlw	0
 16087  0035FE  E10A               	bnz	l1099
 16088                           
 16089                           ; BSR set to: 0
 16090                           ;lorawan_eu.c: 639: {
 16091                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 16092  003600  0102               	movlb	2	; () banked
 16093  003602  51A7               	movf	(_loRa+167)& (0+255),w,b
 16094  003604  0D02               	mullw	2
 16095  003606  0EA9               	movlw	low (_loRa+169)
 16096  003608  24F3               	addwf	prodl,w,c
 16097  00360A  6ED9               	movwf	fsr2l,c
 16098  00360C  0E02               	movlw	high (_loRa+169)
 16099  00360E  20F4               	addwfc	prodh,w,c
 16100  003610  6EDA               	movwf	fsr2h,c
 16101  003612  84DF               	bsf	indf2,2,c
 16102  003614                     l1099:
 16103                           
 16104                           ;lorawan_eu.c: 641: }
 16105                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 16106  003614  0102               	movlb	2	; () banked
 16107  003616  51A7               	movf	(_loRa+167)& (0+255),w,b
 16108  003618  0D02               	mullw	2
 16109  00361A  0EA9               	movlw	low (_loRa+169)
 16110  00361C  24F3               	addwf	prodl,w,c
 16111  00361E  6ED9               	movwf	fsr2l,c
 16112  003620  0E02               	movlw	high (_loRa+169)
 16113  003622  20F4               	addwfc	prodh,w,c
 16114  003624  6EDA               	movwf	fsr2h,c
 16115  003626  A4DF               	btfss	indf2,2,c
 16116  003628  D05D               	goto	l13574
 16117                           
 16118                           ; BSR set to: 2
 16119  00362A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16120  00362C  0D02               	mullw	2
 16121  00362E  0EA9               	movlw	low (_loRa+169)
 16122  003630  24F3               	addwf	prodl,w,c
 16123  003632  6ED9               	movwf	fsr2l,c
 16124  003634  0E02               	movlw	high (_loRa+169)
 16125  003636  20F4               	addwfc	prodh,w,c
 16126  003638  6EDA               	movwf	fsr2h,c
 16127  00363A  A2DF               	btfss	indf2,1,c
 16128  00363C  D053               	goto	l13574
 16129                           
 16130                           ; BSR set to: 2
 16131  00363E  51A7               	movf	(_loRa+167)& (0+255),w,b
 16132  003640  0D02               	mullw	2
 16133  003642  0EA9               	movlw	low (_loRa+169)
 16134  003644  24F3               	addwf	prodl,w,c
 16135  003646  6ED9               	movwf	fsr2l,c
 16136  003648  0E02               	movlw	high (_loRa+169)
 16137  00364A  20F4               	addwfc	prodh,w,c
 16138  00364C  6EDA               	movwf	fsr2h,c
 16139  00364E  A0DF               	btfss	indf2,0,c
 16140  003650  D049               	goto	l13574
 16141                           
 16142                           ; BSR set to: 2
 16143                           ;lorawan_eu.c: 644: {
 16144                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 16145  003652  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 16146  003656  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 16147  00365A  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16148  00365E  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16149  003662  0100               	movlb	0	; () banked
 16150  003664  38DF               	swapf	223,w,c
 16151  003666  0B07               	andlw	7
 16152  003668  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 16153  00366A  EC8F  F03B         	call	_EnableChannels	;wreg free
 16154                           
 16155                           ; BSR set to: 0
 16156                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 16157  00366E  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 16158  003670  EC76  F03C         	call	_UpdateTxPower
 16159                           
 16160                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 16161  003674  0102               	movlb	2	; () banked
 16162  003676  8903               	bsf	(_loRa+3)& (0+255),4,b
 16163                           
 16164                           ; BSR set to: 2
 16165                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 16166  003678  0100               	movlb	0	; () banked
 16167  00367A  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 16168  00367C  EC7A  F03C         	call	_UpdateCurrentDataRate
 16169                           
 16170                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 16171  003680  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16172  003684  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16173  003688  0100               	movlb	0	; () banked
 16174  00368A  50DF               	movf	223,w,c
 16175  00368C  0B0F               	andlw	15
 16176  00368E  E103               	bnz	l13568
 16177                           
 16178                           ; BSR set to: 0
 16179                           ;lorawan_eu.c: 652: {
 16180                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 16181  003690  0102               	movlb	2	; () banked
 16182  003692  6BD6               	clrf	(_loRa+214)& (0+255),b
 16183                           
 16184                           ;lorawan_eu.c: 654: }
 16185  003694  D00A               	goto	l13570
 16186  003696                     l13568:
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;lorawan_eu.c: 655: else
 16190                           ;lorawan_eu.c: 656: {
 16191                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 16192  003696  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 16193  00369A  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 16194  00369E  50DF               	movf	223,w,c
 16195  0036A0  0B0F               	andlw	15
 16196  0036A2  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16197  0036A4  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 16198  0036A6  0102               	movlb	2	; () banked
 16199  0036A8  6FD6               	movwf	(_loRa+214)& (0+255),b
 16200  0036AA                     l13570:
 16201                           
 16202                           ; BSR set to: 2
 16203                           ;lorawan_eu.c: 658: }
 16204                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 16205  0036AA  8B03               	bsf	(_loRa+3)& (0+255),5,b
 16206  0036AC  D01B               	goto	l13574
 16207  0036AE                     l13572:
 16208                           
 16209                           ; BSR set to: 2
 16210                           ;lorawan_eu.c: 662: else
 16211                           ;lorawan_eu.c: 663: {
 16212                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 16213  0036AE  51A7               	movf	(_loRa+167)& (0+255),w,b
 16214  0036B0  0D02               	mullw	2
 16215  0036B2  0EA9               	movlw	low (_loRa+169)
 16216  0036B4  24F3               	addwf	prodl,w,c
 16217  0036B6  6ED9               	movwf	fsr2l,c
 16218  0036B8  0E02               	movlw	high (_loRa+169)
 16219  0036BA  20F4               	addwfc	prodh,w,c
 16220  0036BC  6EDA               	movwf	fsr2h,c
 16221  0036BE  90DF               	bcf	indf2,0,c
 16222                           
 16223                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 16224  0036C0  51A7               	movf	(_loRa+167)& (0+255),w,b
 16225  0036C2  0D02               	mullw	2
 16226  0036C4  0EA9               	movlw	low (_loRa+169)
 16227  0036C6  24F3               	addwf	prodl,w,c
 16228  0036C8  6ED9               	movwf	fsr2l,c
 16229  0036CA  0E02               	movlw	high (_loRa+169)
 16230  0036CC  20F4               	addwfc	prodh,w,c
 16231  0036CE  6EDA               	movwf	fsr2h,c
 16232  0036D0  92DF               	bcf	indf2,1,c
 16233                           
 16234                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 16235  0036D2  51A7               	movf	(_loRa+167)& (0+255),w,b
 16236  0036D4  0D02               	mullw	2
 16237  0036D6  0EA9               	movlw	low (_loRa+169)
 16238  0036D8  24F3               	addwf	prodl,w,c
 16239  0036DA  6ED9               	movwf	fsr2l,c
 16240  0036DC  0E02               	movlw	high (_loRa+169)
 16241  0036DE  20F4               	addwfc	prodh,w,c
 16242  0036E0  6EDA               	movwf	fsr2h,c
 16243  0036E2  94DF               	bcf	indf2,2,c
 16244  0036E4                     l13574:
 16245                           
 16246                           ; BSR set to: 2
 16247                           ;lorawan_eu.c: 667: }
 16248                           ;lorawan_eu.c: 669: return ptr;
 16249  0036E4  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 16250  0036E8  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 16251                           
 16252                           ; BSR set to: 2
 16253  0036EC  0012               	return		;funcret
 16254  0036EE                     __end_of_ExecuteLinkAdr:
 16255                           	opt stack 0
 16256                           tosu	equ	0xFFF
 16257                           tosh	equ	0xFFE
 16258                           tosl	equ	0xFFD
 16259                           pclath	equ	0xFFA
 16260                           tblptru	equ	0xFF8
 16261                           tblptrh	equ	0xFF7
 16262                           tblptrl	equ	0xFF6
 16263                           tablat	equ	0xFF5
 16264                           prodh	equ	0xFF4
 16265                           prodl	equ	0xFF3
 16266                           intcon	equ	0xFF2
 16267                           intcon2	equ	0xFF1
 16268                           intcon3	equ	0xFF0
 16269                           indf0	equ	0xFEF
 16270                           postinc0	equ	0xFEE
 16271                           fsr0h	equ	0xFEA
 16272                           fsr0l	equ	0xFE9
 16273                           wreg	equ	0xFE8
 16274                           postinc1	equ	0xFE6
 16275                           postdec1	equ	0xFE5
 16276                           plusw1	equ	0xFE3
 16277                           fsr1h	equ	0xFE2
 16278                           fsr1l	equ	0xFE1
 16279                           indf2	equ	0xFDF
 16280                           postinc2	equ	0xFDE
 16281                           postdec2	equ	0xFDD
 16282                           plusw2	equ	0xFDB
 16283                           fsr2h	equ	0xFDA
 16284                           fsr2l	equ	0xFD9
 16285                           status	equ	0xFD8
 16286                           
 16287 ;; *************** function _ValidateTxPower *****************
 16288 ;; Defined at:
 16289 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;  txPowerNew      1    wreg     unsigned char 
 16292 ;; Auto vars:     Size  Location     Type
 16293 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 16294 ;;  result          1    4[BANK0 ] enum E8016
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  1    wreg      enum E8016
 16297 ;; Registers used:
 16298 ;;		wreg, status,2, status,0
 16299 ;; Tracked objects:
 16300 ;;		On entry : F/0
 16301 ;;		On exit  : F/0
 16302 ;;		Unchanged: 0/0
 16303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16307 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16308 ;;Total ram usage:        2 bytes
 16309 ;; Hardware stack levels used:    1
 16310 ;; Hardware stack levels required when called:    7
 16311 ;; This function calls:
 16312 ;;		Nothing
 16313 ;; This function is called by:
 16314 ;;		_ExecuteLinkAdr
 16315 ;; This function uses a non-reentrant model
 16316 ;;
 16317                           
 16318                           	psect	text86
 16319  0073EC                     __ptext86:
 16320                           	opt stack 0
 16321  0073EC                     _ValidateTxPower:
 16322                           	opt stack 17
 16323                           
 16324                           ; BSR set to: 2
 16325                           ;incstack = 0
 16326                           ;ValidateTxPower@txPowerNew stored from wreg
 16327  0073EC  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 16328                           
 16329                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 16330  0073EE  0100               	movlb	0	; () banked
 16331  0073F0  6B64               	clrf	ValidateTxPower@result& (0+255),b
 16332                           
 16333                           ; BSR set to: 0
 16334                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 16335  0073F2  0102               	movlb	2	; () banked
 16336  0073F4  51A4               	movf	(_loRa+164)& (0+255),w,b
 16337  0073F6  E103               	bnz	l12954
 16338                           
 16339                           ; BSR set to: 2
 16340  0073F8  0100               	movlb	0	; () banked
 16341  0073FA  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 16342  0073FC  E004               	bz	l12956
 16343  0073FE                     l12954:
 16344  0073FE  0E05               	movlw	5
 16345  007400  0100               	movlb	0	; () banked
 16346  007402  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 16347  007404  D002               	goto	l1083
 16348  007406                     l12956:
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;lorawan_eu.c: 587: {
 16352                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 16353  007406  0E03               	movlw	3
 16354  007408  6F64               	movwf	ValidateTxPower@result& (0+255),b
 16355  00740A                     l1083:
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;lorawan_eu.c: 589: }
 16359                           ;lorawan_eu.c: 591: return result;
 16360  00740A  5164               	movf	ValidateTxPower@result& (0+255),w,b
 16361                           
 16362                           ; BSR set to: 0
 16363  00740C  0012               	return		;funcret
 16364  00740E                     __end_of_ValidateTxPower:
 16365                           	opt stack 0
 16366                           tosu	equ	0xFFF
 16367                           tosh	equ	0xFFE
 16368                           tosl	equ	0xFFD
 16369                           pclath	equ	0xFFA
 16370                           tblptru	equ	0xFF8
 16371                           tblptrh	equ	0xFF7
 16372                           tblptrl	equ	0xFF6
 16373                           tablat	equ	0xFF5
 16374                           prodh	equ	0xFF4
 16375                           prodl	equ	0xFF3
 16376                           intcon	equ	0xFF2
 16377                           intcon2	equ	0xFF1
 16378                           intcon3	equ	0xFF0
 16379                           indf0	equ	0xFEF
 16380                           postinc0	equ	0xFEE
 16381                           fsr0h	equ	0xFEA
 16382                           fsr0l	equ	0xFE9
 16383                           wreg	equ	0xFE8
 16384                           postinc1	equ	0xFE6
 16385                           postdec1	equ	0xFE5
 16386                           plusw1	equ	0xFE3
 16387                           fsr1h	equ	0xFE2
 16388                           fsr1l	equ	0xFE1
 16389                           indf2	equ	0xFDF
 16390                           postinc2	equ	0xFDE
 16391                           postdec2	equ	0xFDD
 16392                           plusw2	equ	0xFDB
 16393                           fsr2h	equ	0xFDA
 16394                           fsr2l	equ	0xFD9
 16395                           status	equ	0xFD8
 16396                           
 16397 ;; *************** function _ValidateChannelMaskCntl *****************
 16398 ;; Defined at:
 16399 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16400 ;; Parameters:    Size  Location     Type
 16401 ;;  channelMaskC    1    wreg     unsigned char 
 16402 ;; Auto vars:     Size  Location     Type
 16403 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 16404 ;;  result          1    4[BANK0 ] enum E8016
 16405 ;; Return value:  Size  Location     Type
 16406 ;;                  1    wreg      enum E8016
 16407 ;; Registers used:
 16408 ;;		wreg, status,2, status,0
 16409 ;; Tracked objects:
 16410 ;;		On entry : F/0
 16411 ;;		On exit  : F/0
 16412 ;;		Unchanged: 0/0
 16413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16415 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16418 ;;Total ram usage:        2 bytes
 16419 ;; Hardware stack levels used:    1
 16420 ;; Hardware stack levels required when called:    7
 16421 ;; This function calls:
 16422 ;;		Nothing
 16423 ;; This function is called by:
 16424 ;;		_ExecuteLinkAdr
 16425 ;; This function uses a non-reentrant model
 16426 ;;
 16427                           
 16428                           	psect	text87
 16429  0076F0                     __ptext87:
 16430                           	opt stack 0
 16431  0076F0                     _ValidateChannelMaskCntl:
 16432                           	opt stack 17
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;incstack = 0
 16436                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 16437  0076F0  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 16438                           
 16439                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 16440  0076F2  0100               	movlb	0	; () banked
 16441  0076F4  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 16442                           
 16443                           ; BSR set to: 0
 16444                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 16445  0076F6  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16446  0076F8  E005               	bz	l1250
 16447                           
 16448                           ; BSR set to: 0
 16449  0076FA  0E06               	movlw	6
 16450  0076FC  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 16451  0076FE  E002               	bz	l1250
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;lorawan_eu.c: 1142: {
 16455                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 16456  007700  0E03               	movlw	3
 16457  007702  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 16458  007704                     l1250:
 16459                           
 16460                           ; BSR set to: 0
 16461                           ;lorawan_eu.c: 1144: }
 16462                           ;lorawan_eu.c: 1146: return result;
 16463  007704  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 16464                           
 16465                           ; BSR set to: 0
 16466  007706  0012               	return		;funcret
 16467  007708                     __end_of_ValidateChannelMaskCntl:
 16468                           	opt stack 0
 16469                           tosu	equ	0xFFF
 16470                           tosh	equ	0xFFE
 16471                           tosl	equ	0xFFD
 16472                           pclath	equ	0xFFA
 16473                           tblptru	equ	0xFF8
 16474                           tblptrh	equ	0xFF7
 16475                           tblptrl	equ	0xFF6
 16476                           tablat	equ	0xFF5
 16477                           prodh	equ	0xFF4
 16478                           prodl	equ	0xFF3
 16479                           intcon	equ	0xFF2
 16480                           intcon2	equ	0xFF1
 16481                           intcon3	equ	0xFF0
 16482                           indf0	equ	0xFEF
 16483                           postinc0	equ	0xFEE
 16484                           fsr0h	equ	0xFEA
 16485                           fsr0l	equ	0xFE9
 16486                           wreg	equ	0xFE8
 16487                           postinc1	equ	0xFE6
 16488                           postdec1	equ	0xFE5
 16489                           plusw1	equ	0xFE3
 16490                           fsr1h	equ	0xFE2
 16491                           fsr1l	equ	0xFE1
 16492                           indf2	equ	0xFDF
 16493                           postinc2	equ	0xFDE
 16494                           postdec2	equ	0xFDD
 16495                           plusw2	equ	0xFDB
 16496                           fsr2h	equ	0xFDA
 16497                           fsr2l	equ	0xFD9
 16498                           status	equ	0xFD8
 16499                           
 16500 ;; *************** function _ValidateChannelMask *****************
 16501 ;; Defined at:
 16502 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16503 ;; Parameters:    Size  Location     Type
 16504 ;;  channelMask     2    4[BANK0 ] unsigned int 
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;  i               1    6[BANK0 ] unsigned char 
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  1    wreg      enum E8016
 16509 ;; Registers used:
 16510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16511 ;; Tracked objects:
 16512 ;;		On entry : F/0
 16513 ;;		On exit  : F/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16516 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16519 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16520 ;;Total ram usage:        3 bytes
 16521 ;; Hardware stack levels used:    1
 16522 ;; Hardware stack levels required when called:    7
 16523 ;; This function calls:
 16524 ;;		Nothing
 16525 ;; This function is called by:
 16526 ;;		_ExecuteLinkAdr
 16527 ;; This function uses a non-reentrant model
 16528 ;;
 16529                           
 16530                           	psect	text88
 16531  006F6A                     __ptext88:
 16532                           	opt stack 0
 16533  006F6A                     _ValidateChannelMask:
 16534                           	opt stack 17
 16535                           
 16536                           ; BSR set to: 0
 16537                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 16538                           
 16539                           ; BSR set to: 0
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;incstack = 0
 16543  006F6A  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 16544  006F6C  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 16545  006F6E  B4D8               	btfsc	status,2,c
 16546  006F70  0C03               	retlw	3
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;lorawan_eu.c: 1171: {
 16550                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 16551  006F72  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 16552  006F74                     l1264:
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;lorawan_eu.c: 1173: {
 16556                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 16557  006F74  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 16558  006F76  D00D               	goto	l12988
 16559                           
 16560                           ; BSR set to: 0
 16561  006F78  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 16562  006F7A  0D0E               	mullw	14
 16563  006F7C  0E0D               	movlw	low (_Channels+13)
 16564  006F7E  24F3               	addwf	prodl,w,c
 16565  006F80  6ED9               	movwf	fsr2l,c
 16566  006F82  0E04               	movlw	high (_Channels+13)
 16567  006F84  20F4               	addwfc	prodh,w,c
 16568  006F86  6EDA               	movwf	fsr2h,c
 16569  006F88  50DF               	movf	indf2,w,c
 16570  006F8A  0B07               	andlw	7
 16571  006F8C  0A07               	xorlw	7
 16572  006F8E  E001               	bz	l12988
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;lorawan_eu.c: 1175: {
 16576                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 16577  006F90  0C03               	retlw	3
 16578  006F92                     l12988:
 16579                           
 16580                           ; BSR set to: 0
 16581                           ;lorawan_eu.c: 1178: else
 16582                           ;lorawan_eu.c: 1179: {
 16583                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 16584  006F92  90D8               	bcf	status,0,c
 16585  006F94  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 16586  006F96  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 16587                           
 16588                           ; BSR set to: 0
 16589  006F98  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 16590                           
 16591                           ; BSR set to: 0
 16592  006F9A  0E0F               	movlw	15
 16593  006F9C  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 16594  006F9E  D7EA               	goto	l1264
 16595  006FA0  0C00               	retlw	0
 16596  006FA2                     __end_of_ValidateChannelMask:
 16597                           	opt stack 0
 16598                           tosu	equ	0xFFF
 16599                           tosh	equ	0xFFE
 16600                           tosl	equ	0xFFD
 16601                           pclath	equ	0xFFA
 16602                           tblptru	equ	0xFF8
 16603                           tblptrh	equ	0xFF7
 16604                           tblptrl	equ	0xFF6
 16605                           tablat	equ	0xFF5
 16606                           prodh	equ	0xFF4
 16607                           prodl	equ	0xFF3
 16608                           intcon	equ	0xFF2
 16609                           intcon2	equ	0xFF1
 16610                           intcon3	equ	0xFF0
 16611                           indf0	equ	0xFEF
 16612                           postinc0	equ	0xFEE
 16613                           fsr0h	equ	0xFEA
 16614                           fsr0l	equ	0xFE9
 16615                           wreg	equ	0xFE8
 16616                           postinc1	equ	0xFE6
 16617                           postdec1	equ	0xFE5
 16618                           plusw1	equ	0xFE3
 16619                           fsr1h	equ	0xFE2
 16620                           fsr1l	equ	0xFE1
 16621                           indf2	equ	0xFDF
 16622                           postinc2	equ	0xFDE
 16623                           postdec2	equ	0xFDD
 16624                           plusw2	equ	0xFDB
 16625                           fsr2h	equ	0xFDA
 16626                           fsr2l	equ	0xFD9
 16627                           status	equ	0xFD8
 16628                           
 16629 ;; *************** function _UpdateTxPower *****************
 16630 ;; Defined at:
 16631 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;  txPowerNew      1    wreg     unsigned char 
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 16636 ;; Return value:  Size  Location     Type
 16637 ;;                  1    wreg      void 
 16638 ;; Registers used:
 16639 ;;		wreg
 16640 ;; Tracked objects:
 16641 ;;		On entry : F/0
 16642 ;;		On exit  : 0/0
 16643 ;;		Unchanged: 0/0
 16644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16649 ;;Total ram usage:        1 bytes
 16650 ;; Hardware stack levels used:    1
 16651 ;; Hardware stack levels required when called:    7
 16652 ;; This function calls:
 16653 ;;		Nothing
 16654 ;; This function is called by:
 16655 ;;		_ExecuteLinkAdr
 16656 ;; This function uses a non-reentrant model
 16657 ;;
 16658                           
 16659                           	psect	text89
 16660  0078EC                     __ptext89:
 16661                           	opt stack 0
 16662  0078EC                     _UpdateTxPower:
 16663                           	opt stack 17
 16664                           
 16665                           ; BSR set to: 0
 16666                           ;incstack = 0
 16667                           ;UpdateTxPower@txPowerNew stored from wreg
 16668  0078EC  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 16669                           
 16670                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 16671  0078EE  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 16672  0078F2  0012               	return		;funcret
 16673  0078F4                     __end_of_UpdateTxPower:
 16674                           	opt stack 0
 16675                           tosu	equ	0xFFF
 16676                           tosh	equ	0xFFE
 16677                           tosl	equ	0xFFD
 16678                           pclath	equ	0xFFA
 16679                           tblptru	equ	0xFF8
 16680                           tblptrh	equ	0xFF7
 16681                           tblptrl	equ	0xFF6
 16682                           tablat	equ	0xFF5
 16683                           prodh	equ	0xFF4
 16684                           prodl	equ	0xFF3
 16685                           intcon	equ	0xFF2
 16686                           intcon2	equ	0xFF1
 16687                           intcon3	equ	0xFF0
 16688                           indf0	equ	0xFEF
 16689                           postinc0	equ	0xFEE
 16690                           fsr0h	equ	0xFEA
 16691                           fsr0l	equ	0xFE9
 16692                           wreg	equ	0xFE8
 16693                           postinc1	equ	0xFE6
 16694                           postdec1	equ	0xFE5
 16695                           plusw1	equ	0xFE3
 16696                           fsr1h	equ	0xFE2
 16697                           fsr1l	equ	0xFE1
 16698                           indf2	equ	0xFDF
 16699                           postinc2	equ	0xFDE
 16700                           postdec2	equ	0xFDD
 16701                           plusw2	equ	0xFDB
 16702                           fsr2h	equ	0xFDA
 16703                           fsr2l	equ	0xFD9
 16704                           status	equ	0xFD8
 16705                           
 16706 ;; *************** function _EnableChannels *****************
 16707 ;; Defined at:
 16708 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16709 ;; Parameters:    Size  Location     Type
 16710 ;;  channelMask     2   14[BANK0 ] unsigned int 
 16711 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 16712 ;; Auto vars:     Size  Location     Type
 16713 ;;		None
 16714 ;; Return value:  Size  Location     Type
 16715 ;;                  1    wreg      void 
 16716 ;; Registers used:
 16717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16718 ;; Tracked objects:
 16719 ;;		On entry : F/0
 16720 ;;		On exit  : F/0
 16721 ;;		Unchanged: 0/0
 16722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16723 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16726 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16727 ;;Total ram usage:        3 bytes
 16728 ;; Hardware stack levels used:    1
 16729 ;; Hardware stack levels required when called:    9
 16730 ;; This function calls:
 16731 ;;		_EnableChannels1
 16732 ;; This function is called by:
 16733 ;;		_ExecuteLinkAdr
 16734 ;; This function uses a non-reentrant model
 16735 ;;
 16736                           
 16737                           	psect	text90
 16738  00771E                     __ptext90:
 16739                           	opt stack 0
 16740  00771E                     _EnableChannels:
 16741                           	opt stack 15
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 16745                           
 16746                           ;incstack = 0
 16747  00771E  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 16748  007722  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 16749  007726  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 16750  00772A  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 16751  00772C  0E10               	movlw	16
 16752  00772E  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 16753  007730  EF18  F034         	goto	_EnableChannels1	;wreg free
 16754  007734                     __end_of_EnableChannels:
 16755                           	opt stack 0
 16756                           tosu	equ	0xFFF
 16757                           tosh	equ	0xFFE
 16758                           tosl	equ	0xFFD
 16759                           pclath	equ	0xFFA
 16760                           tblptru	equ	0xFF8
 16761                           tblptrh	equ	0xFF7
 16762                           tblptrl	equ	0xFF6
 16763                           tablat	equ	0xFF5
 16764                           prodh	equ	0xFF4
 16765                           prodl	equ	0xFF3
 16766                           intcon	equ	0xFF2
 16767                           intcon2	equ	0xFF1
 16768                           intcon3	equ	0xFF0
 16769                           indf0	equ	0xFEF
 16770                           postinc0	equ	0xFEE
 16771                           fsr0h	equ	0xFEA
 16772                           fsr0l	equ	0xFE9
 16773                           wreg	equ	0xFE8
 16774                           postinc1	equ	0xFE6
 16775                           postdec1	equ	0xFE5
 16776                           plusw1	equ	0xFE3
 16777                           fsr1h	equ	0xFE2
 16778                           fsr1l	equ	0xFE1
 16779                           indf2	equ	0xFDF
 16780                           postinc2	equ	0xFDE
 16781                           postdec2	equ	0xFDD
 16782                           plusw2	equ	0xFDB
 16783                           fsr2h	equ	0xFDA
 16784                           fsr2l	equ	0xFD9
 16785                           status	equ	0xFD8
 16786                           
 16787 ;; *************** function _EnableChannels1 *****************
 16788 ;; Defined at:
 16789 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16790 ;; Parameters:    Size  Location     Type
 16791 ;;  channelMask     2    8[BANK0 ] unsigned int 
 16792 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 16793 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 16794 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 16795 ;; Auto vars:     Size  Location     Type
 16796 ;;  i               1   13[BANK0 ] unsigned char 
 16797 ;; Return value:  Size  Location     Type
 16798 ;;                  1    wreg      void 
 16799 ;; Registers used:
 16800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16801 ;; Tracked objects:
 16802 ;;		On entry : F/0
 16803 ;;		On exit  : F/0
 16804 ;;		Unchanged: 0/0
 16805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16806 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16809 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16810 ;;Total ram usage:        6 bytes
 16811 ;; Hardware stack levels used:    1
 16812 ;; Hardware stack levels required when called:    8
 16813 ;; This function calls:
 16814 ;;		_UpdateChannelIdStatus
 16815 ;; This function is called by:
 16816 ;;		_EnableChannels
 16817 ;; This function uses a non-reentrant model
 16818 ;;
 16819                           
 16820                           	psect	text91
 16821  006830                     __ptext91:
 16822                           	opt stack 0
 16823  006830                     _EnableChannels1:
 16824                           	opt stack 15
 16825                           
 16826                           ; BSR set to: 0
 16827                           ;lorawan_eu.c: 1195: uint8_t i;
 16828                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 16829                           
 16830                           ; BSR set to: 0
 16831                           ;incstack = 0
 16832  006830  0E06               	movlw	6
 16833  006832  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16834  006834  E10E               	bnz	l12686
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;lorawan_eu.c: 1198: {
 16838                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16839  006836  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16840  00683A  D007               	goto	l12684
 16841  00683C                     l12680:
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;lorawan_eu.c: 1200: {
 16845                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 16846  00683C  0E01               	movlw	1
 16847  00683E  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16848  006840  516D               	movf	EnableChannels1@i& (0+255),w,b
 16849  006842  ECBE  F023         	call	_UpdateChannelIdStatus
 16850                           
 16851                           ; BSR set to: 2
 16852  006846  0100               	movlb	0	; () banked
 16853  006848  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16854  00684A                     l12684:
 16855                           
 16856                           ; BSR set to: 0
 16857  00684A  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16858  00684C  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 16859  00684E  E3F6               	bnc	l12680
 16860  006850  0012               	return	
 16861  006852                     l12686:
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 16865  006852  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 16866  006854  A4D8               	btfss	status,2,c
 16867  006856  0012               	return	
 16868                           
 16869                           ; BSR set to: 0
 16870                           ;lorawan_eu.c: 1205: {
 16871                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 16872  006858  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 16873  00685C  D011               	goto	l12698
 16874  00685E                     l1279:
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;lorawan_eu.c: 1207: {
 16878                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 16879  00685E  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 16880  006860  D006               	goto	l12692
 16881                           
 16882                           ; BSR set to: 0
 16883                           ;lorawan_eu.c: 1209: {
 16884                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 16885  006862  0E01               	movlw	1
 16886  006864  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16887  006866  516D               	movf	EnableChannels1@i& (0+255),w,b
 16888  006868  ECBE  F023         	call	_UpdateChannelIdStatus
 16889                           
 16890                           ;lorawan_eu.c: 1211: }
 16891  00686C  D004               	goto	l12694
 16892  00686E                     l12692:
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;lorawan_eu.c: 1212: else
 16896                           ;lorawan_eu.c: 1213: {
 16897                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 16898  00686E  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 16899  006870  516D               	movf	EnableChannels1@i& (0+255),w,b
 16900  006872  ECBE  F023         	call	_UpdateChannelIdStatus
 16901  006876                     l12694:
 16902                           
 16903                           ; BSR set to: 2
 16904                           ;lorawan_eu.c: 1215: }
 16905                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 16906  006876  0100               	movlb	0	; () banked
 16907  006878  90D8               	bcf	status,0,c
 16908  00687A  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 16909  00687C  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 16910                           
 16911                           ; BSR set to: 0
 16912  00687E  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 16913  006880                     l12698:
 16914                           
 16915                           ; BSR set to: 0
 16916  006880  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 16917  006882  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 16918  006884  E3EC               	bnc	l1279
 16919                           
 16920                           ; BSR set to: 0
 16921  006886  0012               	return		;funcret
 16922  006888                     __end_of_EnableChannels1:
 16923                           	opt stack 0
 16924                           tosu	equ	0xFFF
 16925                           tosh	equ	0xFFE
 16926                           tosl	equ	0xFFD
 16927                           pclath	equ	0xFFA
 16928                           tblptru	equ	0xFF8
 16929                           tblptrh	equ	0xFF7
 16930                           tblptrl	equ	0xFF6
 16931                           tablat	equ	0xFF5
 16932                           prodh	equ	0xFF4
 16933                           prodl	equ	0xFF3
 16934                           intcon	equ	0xFF2
 16935                           intcon2	equ	0xFF1
 16936                           intcon3	equ	0xFF0
 16937                           indf0	equ	0xFEF
 16938                           postinc0	equ	0xFEE
 16939                           fsr0h	equ	0xFEA
 16940                           fsr0l	equ	0xFE9
 16941                           wreg	equ	0xFE8
 16942                           postinc1	equ	0xFE6
 16943                           postdec1	equ	0xFE5
 16944                           plusw1	equ	0xFE3
 16945                           fsr1h	equ	0xFE2
 16946                           fsr1l	equ	0xFE1
 16947                           indf2	equ	0xFDF
 16948                           postinc2	equ	0xFDE
 16949                           postdec2	equ	0xFDD
 16950                           plusw2	equ	0xFDB
 16951                           fsr2h	equ	0xFDA
 16952                           fsr2l	equ	0xFD9
 16953                           status	equ	0xFD8
 16954                           
 16955 ;; *************** function _UpdateChannelIdStatus *****************
 16956 ;; Defined at:
 16957 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;  channelId       1    wreg     unsigned char 
 16960 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;  channelId       1    6[BANK0 ] unsigned char 
 16963 ;;  i               1    7[BANK0 ] unsigned char 
 16964 ;; Return value:  Size  Location     Type
 16965 ;;                  1    wreg      void 
 16966 ;; Registers used:
 16967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16968 ;; Tracked objects:
 16969 ;;		On entry : F/0
 16970 ;;		On exit  : F/2
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16973 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16975 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16976 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16977 ;;Total ram usage:        4 bytes
 16978 ;; Hardware stack levels used:    1
 16979 ;; Hardware stack levels required when called:    7
 16980 ;; This function calls:
 16981 ;;		Nothing
 16982 ;; This function is called by:
 16983 ;;		_LORAWAN_SetChannelIdStatus
 16984 ;;		_ExecuteNewChannel
 16985 ;;		_EnableChannels1
 16986 ;; This function uses a non-reentrant model
 16987 ;;
 16988                           
 16989                           	psect	text92
 16990  00477C                     __ptext92:
 16991                           	opt stack 0
 16992  00477C                     _UpdateChannelIdStatus:
 16993                           	opt stack 17
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;incstack = 0
 16997                           ;UpdateChannelIdStatus@channelId stored from wreg
 16998  00477C  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 16999                           
 17000                           ;lorawan_eu.c: 1044: uint8_t i;
 17001                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 17002  00477E  0100               	movlb	0	; () banked
 17003  004780  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17004  004782  0D0E               	mullw	14
 17005  004784  0E04               	movlw	low (_Channels+4)
 17006  004786  24F3               	addwf	prodl,w,c
 17007  004788  6ED9               	movwf	fsr2l,c
 17008  00478A  0E04               	movlw	high (_Channels+4)
 17009  00478C  20F4               	addwfc	prodh,w,c
 17010  00478E  6EDA               	movwf	fsr2h,c
 17011  004790  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 17012                           
 17013                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 17014  004794  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17015  004796  0D0E               	mullw	14
 17016  004798  0E04               	movlw	low (_Channels+4)
 17017  00479A  24F3               	addwf	prodl,w,c
 17018  00479C  6ED9               	movwf	fsr2l,c
 17019  00479E  0E04               	movlw	high (_Channels+4)
 17020  0047A0  20F4               	addwfc	prodh,w,c
 17021  0047A2  6EDA               	movwf	fsr2h,c
 17022  0047A4  50DF               	movf	indf2,w,c
 17023  0047A6  E10C               	bnz	l12402
 17024                           
 17025                           ; BSR set to: 0
 17026                           ;lorawan_eu.c: 1048: {
 17027                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 17028  0047A8  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 17029  0047AA  0D0E               	mullw	14
 17030  0047AC  0E08               	movlw	low (_Channels+8)
 17031  0047AE  24F3               	addwf	prodl,w,c
 17032  0047B0  6ED9               	movwf	fsr2l,c
 17033  0047B2  0E04               	movlw	high (_Channels+8)
 17034  0047B4  20F4               	addwfc	prodh,w,c
 17035  0047B6  6EDA               	movwf	fsr2h,c
 17036  0047B8  6ADE               	clrf	postinc2,c
 17037  0047BA  6ADE               	clrf	postinc2,c
 17038  0047BC  6ADE               	clrf	postinc2,c
 17039  0047BE  6ADD               	clrf	postdec2,c
 17040  0047C0                     l12402:
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;lorawan_eu.c: 1051: }
 17044                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 17045  0047C0  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 17046  0047C2  D04E               	goto	l12416
 17047  0047C4                     l12404:
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;lorawan_eu.c: 1054: {
 17051                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17052  0047C4  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17053  0047C6  0D0E               	mullw	14
 17054  0047C8  0E05               	movlw	low (_Channels+5)
 17055  0047CA  24F3               	addwf	prodl,w,c
 17056  0047CC  6ED9               	movwf	fsr2l,c
 17057  0047CE  0E04               	movlw	high (_Channels+5)
 17058  0047D0  20F4               	addwfc	prodh,w,c
 17059  0047D2  6EDA               	movwf	fsr2h,c
 17060  0047D4  50DF               	movf	223,w,c
 17061  0047D6  0B0F               	andlw	15
 17062  0047D8  0100               	movlb	0	; () banked
 17063  0047DA  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 17064  0047DC  0102               	movlb	2	; () banked
 17065  0047DE  51EB               	movf	(_loRa+235)& (0+255),w,b
 17066  0047E0  0100               	movlb	0	; () banked
 17067  0047E2  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 17068  0047E4  E216               	bc	l1215
 17069                           
 17070                           ; BSR set to: 0
 17071  0047E6  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17072  0047E8  0D0E               	mullw	14
 17073  0047EA  0E04               	movlw	low (_Channels+4)
 17074  0047EC  24F3               	addwf	prodl,w,c
 17075  0047EE  6ED9               	movwf	fsr2l,c
 17076  0047F0  0E04               	movlw	high (_Channels+4)
 17077  0047F2  20F4               	addwfc	prodh,w,c
 17078  0047F4  6EDA               	movwf	fsr2h,c
 17079  0047F6  04DE               	decf	postinc2,w,c
 17080  0047F8  E10C               	bnz	l1215
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;lorawan_eu.c: 1056: {
 17084                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 17085  0047FA  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17086  0047FC  0D0E               	mullw	14
 17087  0047FE  0E05               	movlw	low (_Channels+5)
 17088  004800  24F3               	addwf	prodl,w,c
 17089  004802  6ED9               	movwf	fsr2l,c
 17090  004804  0E04               	movlw	high (_Channels+5)
 17091  004806  20F4               	addwfc	prodh,w,c
 17092  004808  6EDA               	movwf	fsr2h,c
 17093  00480A  50DF               	movf	223,w,c
 17094  00480C  0B0F               	andlw	15
 17095  00480E  0102               	movlb	2	; () banked
 17096  004810  6FEB               	movwf	(_loRa+235)& (0+255),b
 17097  004812                     l1215:
 17098                           
 17099                           ;lorawan_eu.c: 1058: }
 17100                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17101  004812  0100               	movlb	0	; () banked
 17102  004814  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17103  004816  0D0E               	mullw	14
 17104  004818  0E05               	movlw	low (_Channels+5)
 17105  00481A  24F3               	addwf	prodl,w,c
 17106  00481C  6ED9               	movwf	fsr2l,c
 17107  00481E  0E04               	movlw	high (_Channels+5)
 17108  004820  20F4               	addwfc	prodh,w,c
 17109  004822  6EDA               	movwf	fsr2h,c
 17110  004824  38DF               	swapf	223,w,c
 17111  004826  0B0F               	andlw	15
 17112  004828  0102               	movlb	2	; () banked
 17113  00482A  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17114  00482C  D017               	goto	l12414
 17115                           
 17116                           ; BSR set to: 2
 17117  00482E  0100               	movlb	0	; () banked
 17118  004830  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17119  004832  0D0E               	mullw	14
 17120  004834  0E04               	movlw	low (_Channels+4)
 17121  004836  24F3               	addwf	prodl,w,c
 17122  004838  6ED9               	movwf	fsr2l,c
 17123  00483A  0E04               	movlw	high (_Channels+4)
 17124  00483C  20F4               	addwfc	prodh,w,c
 17125  00483E  6EDA               	movwf	fsr2h,c
 17126  004840  04DE               	decf	postinc2,w,c
 17127  004842  E10C               	bnz	l12414
 17128                           
 17129                           ; BSR set to: 0
 17130                           ;lorawan_eu.c: 1060: {
 17131                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 17132  004844  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 17133  004846  0D0E               	mullw	14
 17134  004848  0E05               	movlw	low (_Channels+5)
 17135  00484A  24F3               	addwf	prodl,w,c
 17136  00484C  6ED9               	movwf	fsr2l,c
 17137  00484E  0E04               	movlw	high (_Channels+5)
 17138  004850  20F4               	addwfc	prodh,w,c
 17139  004852  6EDA               	movwf	fsr2h,c
 17140  004854  38DF               	swapf	223,w,c
 17141  004856  0B0F               	andlw	15
 17142  004858  0102               	movlb	2	; () banked
 17143  00485A  6FEC               	movwf	(_loRa+236)& (0+255),b
 17144  00485C                     l12414:
 17145  00485C  0100               	movlb	0	; () banked
 17146  00485E  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 17147  004860                     l12416:
 17148                           
 17149                           ; BSR set to: 0
 17150  004860  0102               	movlb	2	; () banked
 17151  004862  51ED               	movf	(_loRa+237)& (0+255),w,b
 17152  004864  0100               	movlb	0	; () banked
 17153  004866  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 17154  004868  E3AD               	bnc	l12404
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;lorawan_eu.c: 1062: }
 17158                           ;lorawan_eu.c: 1063: }
 17159                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 17160  00486A  0102               	movlb	2	; () banked
 17161  00486C  51DF               	movf	(_loRa+223)& (0+255),w,b
 17162  00486E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17163  004870  E202               	bc	l12422
 17164                           
 17165                           ; BSR set to: 2
 17166                           ;lorawan_eu.c: 1066: {
 17167                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 17168  004872  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17169  004876                     l12422:
 17170                           
 17171                           ; BSR set to: 2
 17172                           ;lorawan_eu.c: 1068: }
 17173                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 17174  004876  51EB               	movf	(_loRa+235)& (0+255),w,b
 17175  004878  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17176  00487A  A0D8               	btfss	status,0,c
 17177                           
 17178                           ; BSR set to: 2
 17179                           ;lorawan_eu.c: 1071: {
 17180                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 17181  00487C  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17182                           
 17183                           ; BSR set to: 2
 17184  004880  0012               	return		;funcret
 17185  004882                     __end_of_UpdateChannelIdStatus:
 17186                           	opt stack 0
 17187                           tosu	equ	0xFFF
 17188                           tosh	equ	0xFFE
 17189                           tosl	equ	0xFFD
 17190                           pclath	equ	0xFFA
 17191                           tblptru	equ	0xFF8
 17192                           tblptrh	equ	0xFF7
 17193                           tblptrl	equ	0xFF6
 17194                           tablat	equ	0xFF5
 17195                           prodh	equ	0xFF4
 17196                           prodl	equ	0xFF3
 17197                           intcon	equ	0xFF2
 17198                           intcon2	equ	0xFF1
 17199                           intcon3	equ	0xFF0
 17200                           indf0	equ	0xFEF
 17201                           postinc0	equ	0xFEE
 17202                           fsr0h	equ	0xFEA
 17203                           fsr0l	equ	0xFE9
 17204                           wreg	equ	0xFE8
 17205                           postinc1	equ	0xFE6
 17206                           postdec1	equ	0xFE5
 17207                           plusw1	equ	0xFE3
 17208                           fsr1h	equ	0xFE2
 17209                           fsr1l	equ	0xFE1
 17210                           indf2	equ	0xFDF
 17211                           postinc2	equ	0xFDE
 17212                           postdec2	equ	0xFDD
 17213                           plusw2	equ	0xFDB
 17214                           fsr2h	equ	0xFDA
 17215                           fsr2l	equ	0xFD9
 17216                           status	equ	0xFD8
 17217                           
 17218 ;; *************** function _ExecuteDutyCycle *****************
 17219 ;; Defined at:
 17220 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17221 ;; Parameters:    Size  Location     Type
 17222 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17223 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17224 ;; Auto vars:     Size  Location     Type
 17225 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 17226 ;; Return value:  Size  Location     Type
 17227 ;;                  2    4[BANK0 ] PTR unsigned char 
 17228 ;; Registers used:
 17229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17230 ;; Tracked objects:
 17231 ;;		On entry : F/0
 17232 ;;		On exit  : D/0
 17233 ;;		Unchanged: 0/0
 17234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17237 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17239 ;;Total ram usage:        6 bytes
 17240 ;; Hardware stack levels used:    1
 17241 ;; Hardware stack levels required when called:    7
 17242 ;; This function calls:
 17243 ;;		Nothing
 17244 ;; This function is called by:
 17245 ;;		_MacExecuteCommands
 17246 ;; This function uses a non-reentrant model
 17247 ;;
 17248                           
 17249                           	psect	text93
 17250  0069D6                     __ptext93:
 17251                           	opt stack 0
 17252  0069D6                     _ExecuteDutyCycle:
 17253                           	opt stack 18
 17254                           
 17255                           ; BSR set to: 0
 17256                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 17257                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 17258                           
 17259                           ; BSR set to: 2
 17260                           ;incstack = 0
 17261  0069D6  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 17262  0069DA  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 17263  0069DE  50DF               	movf	indf2,w,c
 17264  0069E0  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 17265                           
 17266                           ; BSR set to: 0
 17267  0069E2  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 17268  0069E4  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 17269                           
 17270                           ; BSR set to: 0
 17271                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 17272  0069E6  0E0F               	movlw	15
 17273  0069E8  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 17274  0069EA  D012               	goto	l1091
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;lorawan_eu.c: 600: {
 17278                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 17279  0069EC  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 17280  0069F0  0E01               	movlw	1
 17281  0069F2  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 17282  0069F4  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 17283  0069F6  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 17284  0069F8  D003               	goto	u14884
 17285  0069FA                     u14885:
 17286  0069FA  90D8               	bcf	status,0,c
 17287  0069FC  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 17288  0069FE  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 17289  006A00                     u14884:
 17290  006A00  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 17291  006A02  D7FB               	goto	u14885
 17292  006A04  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 17293  006A08  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 17294                           
 17295                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 17296  006A0C  0102               	movlb	2	; () banked
 17297  006A0E  8D03               	bsf	(_loRa+3)& (0+255),6,b
 17298  006A10                     l1091:
 17299                           
 17300                           ;lorawan_eu.c: 603: }
 17301                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 17302  006A10  0100               	movlb	0	; () banked
 17303  006A12  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 17304  006A14  E102               	bnz	l13516
 17305                           
 17306                           ; BSR set to: 0
 17307                           ;lorawan_eu.c: 606: {
 17308                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 17309  006A16  0102               	movlb	2	; () banked
 17310  006A18  8F02               	bsf	(_loRa+2)& (0+255),7,b
 17311  006A1A                     l13516:
 17312                           
 17313                           ;lorawan_eu.c: 608: }
 17314                           ;lorawan_eu.c: 610: return ptr;
 17315  006A1A  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 17316  006A1E  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 17317  006A22  0012               	return		;funcret
 17318  006A24                     __end_of_ExecuteDutyCycle:
 17319                           	opt stack 0
 17320                           tosu	equ	0xFFF
 17321                           tosh	equ	0xFFE
 17322                           tosl	equ	0xFFD
 17323                           pclath	equ	0xFFA
 17324                           tblptru	equ	0xFF8
 17325                           tblptrh	equ	0xFF7
 17326                           tblptrl	equ	0xFF6
 17327                           tablat	equ	0xFF5
 17328                           prodh	equ	0xFF4
 17329                           prodl	equ	0xFF3
 17330                           intcon	equ	0xFF2
 17331                           intcon2	equ	0xFF1
 17332                           intcon3	equ	0xFF0
 17333                           indf0	equ	0xFEF
 17334                           postinc0	equ	0xFEE
 17335                           fsr0h	equ	0xFEA
 17336                           fsr0l	equ	0xFE9
 17337                           wreg	equ	0xFE8
 17338                           postinc1	equ	0xFE6
 17339                           postdec1	equ	0xFE5
 17340                           plusw1	equ	0xFE3
 17341                           fsr1h	equ	0xFE2
 17342                           fsr1l	equ	0xFE1
 17343                           indf2	equ	0xFDF
 17344                           postinc2	equ	0xFDE
 17345                           postdec2	equ	0xFDD
 17346                           plusw2	equ	0xFDB
 17347                           fsr2h	equ	0xFDA
 17348                           fsr2l	equ	0xFD9
 17349                           status	equ	0xFD8
 17350                           
 17351 ;; *************** function _ExecuteDevStatus *****************
 17352 ;; Defined at:
 17353 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17354 ;; Parameters:    Size  Location     Type
 17355 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 17356 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17357 ;; Auto vars:     Size  Location     Type
 17358 ;;		None
 17359 ;; Return value:  Size  Location     Type
 17360 ;;                  2    4[BANK0 ] PTR unsigned char 
 17361 ;; Registers used:
 17362 ;;		wreg, status,2, status,0
 17363 ;; Tracked objects:
 17364 ;;		On entry : F/0
 17365 ;;		On exit  : F/0
 17366 ;;		Unchanged: F/0
 17367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17371 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17372 ;;Total ram usage:        2 bytes
 17373 ;; Hardware stack levels used:    1
 17374 ;; Hardware stack levels required when called:    7
 17375 ;; This function calls:
 17376 ;;		Nothing
 17377 ;; This function is called by:
 17378 ;;		_MacExecuteCommands
 17379 ;; This function uses a non-reentrant model
 17380 ;;
 17381                           
 17382                           	psect	text94
 17383  007894                     __ptext94:
 17384                           	opt stack 0
 17385  007894                     _ExecuteDevStatus:
 17386                           	opt stack 18
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;lorawan_eu.c: 674: return ptr;
 17390                           
 17391                           ;incstack = 0
 17392  007894  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 17393  007898  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 17394                           
 17395                           ; BSR set to: 0
 17396  00789C  0012               	return		;funcret
 17397  00789E                     __end_of_ExecuteDevStatus:
 17398                           	opt stack 0
 17399                           tosu	equ	0xFFF
 17400                           tosh	equ	0xFFE
 17401                           tosl	equ	0xFFD
 17402                           pclath	equ	0xFFA
 17403                           tblptru	equ	0xFF8
 17404                           tblptrh	equ	0xFF7
 17405                           tblptrl	equ	0xFF6
 17406                           tablat	equ	0xFF5
 17407                           prodh	equ	0xFF4
 17408                           prodl	equ	0xFF3
 17409                           intcon	equ	0xFF2
 17410                           intcon2	equ	0xFF1
 17411                           intcon3	equ	0xFF0
 17412                           indf0	equ	0xFEF
 17413                           postinc0	equ	0xFEE
 17414                           fsr0h	equ	0xFEA
 17415                           fsr0l	equ	0xFE9
 17416                           wreg	equ	0xFE8
 17417                           postinc1	equ	0xFE6
 17418                           postdec1	equ	0xFE5
 17419                           plusw1	equ	0xFE3
 17420                           fsr1h	equ	0xFE2
 17421                           fsr1l	equ	0xFE1
 17422                           indf2	equ	0xFDF
 17423                           postinc2	equ	0xFDE
 17424                           postdec2	equ	0xFDD
 17425                           plusw2	equ	0xFDB
 17426                           fsr2h	equ	0xFDA
 17427                           fsr2l	equ	0xFD9
 17428                           status	equ	0xFD8
 17429                           
 17430 ;; *************** function _LORAWAN_Send *****************
 17431 ;; Defined at:
 17432 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17433 ;; Parameters:    Size  Location     Type
 17434 ;;  confirmed       1    wreg     enum E7984
 17435 ;;  port            1  118[BANK0 ] unsigned char 
 17436 ;;  buffer          2  119[BANK0 ] PTR void 
 17437 ;;		 -> payload(4), NULL(0), 
 17438 ;;  bufferLength    1  121[BANK0 ] unsigned char 
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;  confirmed       1  124[BANK0 ] enum E7984
 17441 ;;  result          1  123[BANK0 ] enum E7957
 17442 ;; Return value:  Size  Location     Type
 17443 ;;                  1    wreg      enum E7957
 17444 ;; Registers used:
 17445 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17446 ;; Tracked objects:
 17447 ;;		On entry : F/0
 17448 ;;		On exit  : D/0
 17449 ;;		Unchanged: 0/0
 17450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17451 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17454 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17455 ;;Total ram usage:        7 bytes
 17456 ;; Hardware stack levels used:    1
 17457 ;; Hardware stack levels required when called:   13
 17458 ;; This function calls:
 17459 ;;		_AssemblePacket
 17460 ;;		_LORAWAN_GetMaxPayloadSize
 17461 ;;		_RADIO_ReceiveStop
 17462 ;;		_RADIO_Transmit
 17463 ;;		_SelectChannelForTransmission
 17464 ;; This function is called by:
 17465 ;;		_AutomaticReplyCallback
 17466 ;;		_LORAWAN_RxDone
 17467 ;;		_readAndSend
 17468 ;; This function uses a non-reentrant model
 17469 ;;
 17470                           
 17471                           	psect	text95
 17472  00541A                     __ptext95:
 17473                           	opt stack 0
 17474  00541A                     _LORAWAN_Send:
 17475                           	opt stack 16
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;incstack = 0
 17479                           ;LORAWAN_Send@confirmed stored from wreg
 17480  00541A  6FDC               	movwf	LORAWAN_Send@confirmed& (0+255),b
 17481                           
 17482                           ;lorawan.c: 187: LorawanError_t result;
 17483                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 17484  00541C  0102               	movlb	2	; () banked
 17485  00541E  A103               	btfss	(_loRa+3)& (0+255),0,b
 17486                           
 17487                           ; BSR set to: 2
 17488                           ;lorawan.c: 192: }
 17489                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 17490  005420  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 17491  005422  0012               	return	
 17492                           
 17493                           ; BSR set to: 2
 17494                           ;lorawan.c: 197: }
 17495                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 17496  005424  A902               	btfss	(_loRa+2)& (0+255),4,b
 17497  005426  0012               	return	
 17498                           
 17499                           ; BSR set to: 2
 17500                           ;lorawan.c: 202: }
 17501                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 17502  005428  0100               	movlb	0	; () banked
 17503  00542A  51D6               	movf	LORAWAN_Send@port& (0+255),w,b
 17504  00542C  E103               	bnz	l13960
 17505                           
 17506                           ; BSR set to: 0
 17507  00542E  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17508  005430  E001               	bz	l13960
 17509  005432  0012               	return	
 17510  005434                     l13960:
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;lorawan.c: 207: }
 17514                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 17515  005434  EC87  F035         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 17516  005438  6FDA               	movwf	??_LORAWAN_Send& (0+255),b
 17517  00543A  51D9               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 17518  00543C  5DDA               	subwf	??_LORAWAN_Send& (0+255),w,b
 17519  00543E  E201               	bc	l13964
 17520  005440  0012               	return	
 17521  005442                     l13964:
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;lorawan.c: 213: }
 17525                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 17526  005442  0102               	movlb	2	; () banked
 17527  005444  2906               	incf	(_loRa+6)& (0+255),w,b
 17528  005446  E108               	bnz	l13968
 17529  005448  2907               	incf	(_loRa+7)& (0+255),w,b
 17530  00544A  E106               	bnz	l13968
 17531  00544C  2908               	incf	(_loRa+8)& (0+255),w,b
 17532  00544E  E104               	bnz	l13968
 17533  005450  2909               	incf	(_loRa+9)& (0+255),w,b
 17534  005452  E102               	bnz	l13968
 17535                           
 17536                           ; BSR set to: 2
 17537                           ;lorawan.c: 216: {
 17538                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 17539  005454  8304               	bsf	(_loRa+4)& (0+255),1,b
 17540                           
 17541                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 17542                           ;	Return value of _LORAWAN_Send is never used
 17543  005456  0012               	return	
 17544  005458                     l13968:
 17545                           
 17546                           ; BSR set to: 2
 17547                           ;lorawan.c: 220: }
 17548                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 17549  005458  5102               	movf	(_loRa+2)& (0+255),w,b
 17550  00545A  0B0F               	andlw	15
 17551  00545C  E003               	bz	l13974
 17552                           
 17553                           ; BSR set to: 2
 17554  00545E  5112               	movf	(_loRa+18)& (0+255),w,b
 17555  005460  E101               	bnz	l13974
 17556  005462  0012               	return	
 17557  005464                     l13974:
 17558                           
 17559                           ; BSR set to: 2
 17560                           ;lorawan.c: 225: }
 17561                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 17562  005464  0E01               	movlw	1
 17563  005466  EC5C  F033         	call	_SelectChannelForTransmission
 17564  00546A  6FDB               	movwf	LORAWAN_Send@result& (0+255),b
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;lorawan.c: 228: if (result != OK)
 17568  00546C  51DB               	movf	LORAWAN_Send@result& (0+255),w,b
 17569  00546E  E001               	bz	l13982
 17570  005470  0012               	return	
 17571  005472                     l13982:
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;lorawan.c: 232: else
 17575                           ;lorawan.c: 233: {
 17576                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 17577  005472  0E02               	movlw	2
 17578  005474  0102               	movlb	2	; () banked
 17579  005476  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17580  005478  E102               	bnz	l13986
 17581                           
 17582                           ; BSR set to: 2
 17583                           ;lorawan.c: 235: {
 17584                           ;lorawan.c: 236: RADIO_ReceiveStop();
 17585  00547A  EC76  F03A         	call	_RADIO_ReceiveStop	;wreg free
 17586  00547E                     l13986:
 17587                           
 17588                           ;lorawan.c: 237: }
 17589                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 17590  00547E  C0D6  F0CA         	movff	LORAWAN_Send@port,AssemblePacket@port
 17591  005482  C0D7  F0CB         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 17592  005486  C0D8  F0CC         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 17593  00548A  C0D9  F0CD         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 17594  00548E  0100               	movlb	0	; () banked
 17595  005490  6BCE               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 17596  005492  51DC               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 17597  005494  EC16  F00F         	call	_AssemblePacket
 17598                           
 17599                           ; BSR set to: 2
 17600                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 17601  005498  0EF0               	movlw	low (_macBuffer+16)
 17602  00549A  0100               	movlb	0	; () banked
 17603  00549C  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 17604  00549E  0E04               	movlw	high (_macBuffer+16)
 17605  0054A0  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 17606  0054A2  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 17607  0054A6  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 17608  0054AA  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 17609  0054AC  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 17610  0054AE  A4D8               	btfss	status,2,c
 17611  0054B0  0012               	return	
 17612                           
 17613                           ; BSR set to: 0
 17614                           ;lorawan.c: 242: {
 17615                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 17616  0054B2  0102               	movlb	2	; () banked
 17617  0054B4  2B06               	incf	(_loRa+6)& (0+255),f,b
 17618  0054B6  0E00               	movlw	0
 17619  0054B8  2307               	addwfc	(_loRa+7)& (0+255),f,b
 17620  0054BA  2308               	addwfc	(_loRa+8)& (0+255),f,b
 17621  0054BC  2309               	addwfc	(_loRa+9)& (0+255),f,b
 17622                           
 17623                           ;lorawan.c: 245: if (CNF == confirmed)
 17624  0054BE  0100               	movlb	0	; () banked
 17625  0054C0  05DC               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 17626  0054C2  E102               	bnz	l1746
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;lorawan.c: 246: {
 17630                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17631  0054C4  0102               	movlb	2	; () banked
 17632  0054C6  8100               	bsf	_loRa& (0+255),0,b
 17633  0054C8                     l1746:
 17634                           
 17635                           ;lorawan.c: 248: }
 17636                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 17637  0054C8  0102               	movlb	2	; () banked
 17638  0054CA  8B00               	bsf	_loRa& (0+255),5,b
 17639                           
 17640                           ; BSR set to: 2
 17641                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 17642  0054CC  5102               	movf	(_loRa+2)& (0+255),w,b
 17643  0054CE  0BF0               	andlw	-16
 17644  0054D0  0901               	iorlw	1
 17645  0054D2  6F02               	movwf	(_loRa+2)& (0+255),b
 17646                           
 17647                           ;lorawan.c: 251: }
 17648  0054D4  0012               	return		;funcret
 17649  0054D6                     __end_of_LORAWAN_Send:
 17650                           	opt stack 0
 17651                           tosu	equ	0xFFF
 17652                           tosh	equ	0xFFE
 17653                           tosl	equ	0xFFD
 17654                           pclath	equ	0xFFA
 17655                           tblptru	equ	0xFF8
 17656                           tblptrh	equ	0xFF7
 17657                           tblptrl	equ	0xFF6
 17658                           tablat	equ	0xFF5
 17659                           prodh	equ	0xFF4
 17660                           prodl	equ	0xFF3
 17661                           intcon	equ	0xFF2
 17662                           intcon2	equ	0xFF1
 17663                           intcon3	equ	0xFF0
 17664                           indf0	equ	0xFEF
 17665                           postinc0	equ	0xFEE
 17666                           fsr0h	equ	0xFEA
 17667                           fsr0l	equ	0xFE9
 17668                           wreg	equ	0xFE8
 17669                           postinc1	equ	0xFE6
 17670                           postdec1	equ	0xFE5
 17671                           plusw1	equ	0xFE3
 17672                           fsr1h	equ	0xFE2
 17673                           fsr1l	equ	0xFE1
 17674                           indf2	equ	0xFDF
 17675                           postinc2	equ	0xFDE
 17676                           postdec2	equ	0xFDD
 17677                           plusw2	equ	0xFDB
 17678                           fsr2h	equ	0xFDA
 17679                           fsr2l	equ	0xFD9
 17680                           status	equ	0xFD8
 17681                           
 17682 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 17683 ;; Defined at:
 17684 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17685 ;; Parameters:    Size  Location     Type
 17686 ;;		None
 17687 ;; Auto vars:     Size  Location     Type
 17688 ;;  result          1   14[BANK0 ] unsigned char 
 17689 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 17690 ;; Return value:  Size  Location     Type
 17691 ;;                  1    wreg      unsigned char 
 17692 ;; Registers used:
 17693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17694 ;; Tracked objects:
 17695 ;;		On entry : D/2
 17696 ;;		On exit  : F/0
 17697 ;;		Unchanged: 0/0
 17698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17700 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17701 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17703 ;;Total ram usage:        3 bytes
 17704 ;; Hardware stack levels used:    1
 17705 ;; Hardware stack levels required when called:    8
 17706 ;; This function calls:
 17707 ;;		_CountfOptsLength
 17708 ;; This function is called by:
 17709 ;;		_LORAWAN_Send
 17710 ;;		_AckRetransmissionCallback
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714                           	psect	text96
 17715  006B0E                     __ptext96:
 17716                           	opt stack 0
 17717  006B0E                     _LORAWAN_GetMaxPayloadSize:
 17718                           	opt stack 20
 17719                           
 17720                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 17721                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 17722                           
 17723                           ;incstack = 0
 17724  006B0E  EC6B  F02A         	call	_CountfOptsLength	;wreg free
 17725  006B12  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 17729  006B14  0102               	movlb	2	; () banked
 17730  006B16  51A7               	movf	(_loRa+167)& (0+255),w,b
 17731  006B18  E10D               	bnz	l13678
 17732                           
 17733                           ; BSR set to: 2
 17734                           ;lorawan.c: 1564: {
 17735                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 17736  006B1A  0E6D               	movlw	low _maxPayloadSize
 17737  006B1C  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17738  006B1E  6EF6               	movwf	tblptrl,c
 17739  006B20  6AF7               	clrf	tblptrh,c
 17740  006B22  0EFF               	movlw	high _maxPayloadSize
 17741  006B24  22F7               	addwfc	tblptrh,f,c
 17742  006B26                     	if	1	;There are 3 active tblptr bytes
 17743  006B26  6AF8               	clrf	tblptru,c
 17744  006B28  0E00               	movlw	low (__mediumconst shr (0+16))
 17745  006B2A  22F8               	addwfc	tblptru,f,c
 17746  006B2C                     	endif
 17747  006B2C  0008               	tblrd		*
 17748  006B2E  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 17749                           
 17750                           ;lorawan.c: 1566: }
 17751  006B32  D010               	goto	l13680
 17752  006B34                     l13678:
 17753                           
 17754                           ; BSR set to: 2
 17755                           ;lorawan.c: 1567: else
 17756                           ;lorawan.c: 1568: {
 17757                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 17758  006B34  0E6D               	movlw	low _maxPayloadSize
 17759  006B36  25DF               	addwf	(_loRa+223)& (0+255),w,b
 17760  006B38  6EF6               	movwf	tblptrl,c
 17761  006B3A  6AF7               	clrf	tblptrh,c
 17762  006B3C  0EFF               	movlw	high _maxPayloadSize
 17763  006B3E  22F7               	addwfc	tblptrh,f,c
 17764  006B40                     	if	1	;There are 3 active tblptr bytes
 17765  006B40  6AF8               	clrf	tblptru,c
 17766  006B42  0E00               	movlw	low (__mediumconst shr (0+16))
 17767  006B44  22F8               	addwfc	tblptru,f,c
 17768  006B46                     	endif
 17769  006B46  0008               	tblrd		*
 17770  006B48  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 17771  006B4C  0100               	movlb	0	; () banked
 17772  006B4E  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 17773  006B50  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 17774  006B52  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 17775  006B54                     l13680:
 17776                           
 17777                           ;lorawan.c: 1570: }
 17778                           ;lorawan.c: 1572: return result;
 17779  006B54  0100               	movlb	0	; () banked
 17780  006B56  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 17781                           
 17782                           ; BSR set to: 0
 17783  006B58  0012               	return		;funcret
 17784  006B5A                     __end_of_LORAWAN_GetMaxPayloadSize:
 17785                           	opt stack 0
 17786                           tosu	equ	0xFFF
 17787                           tosh	equ	0xFFE
 17788                           tosl	equ	0xFFD
 17789                           pclath	equ	0xFFA
 17790                           tblptru	equ	0xFF8
 17791                           tblptrh	equ	0xFF7
 17792                           tblptrl	equ	0xFF6
 17793                           tablat	equ	0xFF5
 17794                           prodh	equ	0xFF4
 17795                           prodl	equ	0xFF3
 17796                           intcon	equ	0xFF2
 17797                           intcon2	equ	0xFF1
 17798                           intcon3	equ	0xFF0
 17799                           indf0	equ	0xFEF
 17800                           postinc0	equ	0xFEE
 17801                           fsr0h	equ	0xFEA
 17802                           fsr0l	equ	0xFE9
 17803                           wreg	equ	0xFE8
 17804                           postinc1	equ	0xFE6
 17805                           postdec1	equ	0xFE5
 17806                           plusw1	equ	0xFE3
 17807                           fsr1h	equ	0xFE2
 17808                           fsr1l	equ	0xFE1
 17809                           indf2	equ	0xFDF
 17810                           postinc2	equ	0xFDE
 17811                           postdec2	equ	0xFDD
 17812                           plusw2	equ	0xFDB
 17813                           fsr2h	equ	0xFDA
 17814                           fsr2l	equ	0xFD9
 17815                           status	equ	0xFD8
 17816                           
 17817 ;; *************** function _AssemblePacket *****************
 17818 ;; Defined at:
 17819 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17820 ;; Parameters:    Size  Location     Type
 17821 ;;  confirmed       1    wreg     unsigned char 
 17822 ;;  port            1  106[BANK0 ] unsigned char 
 17823 ;;  buffer          2  107[BANK0 ] PTR unsigned char 
 17824 ;;		 -> payload(4), NULL(0), 
 17825 ;;  bufferLength    2  109[BANK0 ] unsigned int 
 17826 ;; Auto vars:     Size  Location     Type
 17827 ;;  confirmed       1  113[BANK0 ] unsigned char 
 17828 ;;  bufferIndex     1  117[BANK0 ] unsigned char 
 17829 ;;  macCmdIdx       1  116[BANK0 ] unsigned char 
 17830 ;;  fCtrl           1  115[BANK0 ] struct .
 17831 ;;  mhdr            1  114[BANK0 ] struct .
 17832 ;; Return value:  Size  Location     Type
 17833 ;;                  1    wreg      void 
 17834 ;; Registers used:
 17835 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17836 ;; Tracked objects:
 17837 ;;		On entry : F/0
 17838 ;;		On exit  : F/2
 17839 ;;		Unchanged: 0/0
 17840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17841 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17842 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17844 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17845 ;;Total ram usage:       12 bytes
 17846 ;; Hardware stack levels used:    1
 17847 ;; Hardware stack levels required when called:   12
 17848 ;; This function calls:
 17849 ;;		_AESCmac
 17850 ;;		_AssembleEncryptionBlock
 17851 ;;		_CountfOptsLength
 17852 ;;		_EncryptFRMPayload
 17853 ;;		_FindSmallestDataRate
 17854 ;;		_IncludeMacCommandsResponse
 17855 ;;		_memcpy
 17856 ;;		_memset
 17857 ;; This function is called by:
 17858 ;;		_LORAWAN_Send
 17859 ;; This function uses a non-reentrant model
 17860 ;;
 17861                           
 17862                           	psect	text97
 17863  001E2C                     __ptext97:
 17864                           	opt stack 0
 17865  001E2C                     _AssemblePacket:
 17866                           	opt stack 16
 17867                           
 17868                           ; BSR set to: 0
 17869                           ;incstack = 0
 17870                           ;AssemblePacket@confirmed stored from wreg
 17871  001E2C  6FD1               	movwf	AssemblePacket@confirmed& (0+255),b
 17872                           
 17873                           ;lorawan.c: 1674: Mhdr_t mhdr;
 17874                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 17875  001E2E  0E10               	movlw	16
 17876  001E30  0100               	movlb	0	; () banked
 17877  001E32  6FD5               	movwf	AssemblePacket@bufferIndex& (0+255),b
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 17881                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 17882  001E34  6BD4               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 17883                           
 17884                           ; BSR set to: 0
 17885                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 17886  001E36  0ED2               	movlw	low AssemblePacket@mhdr
 17887  001E38  6F64               	movwf	memset@p1& (0+255),b
 17888  001E3A  6B65               	clrf	(memset@p1+1)& (0+255),b
 17889  001E3C  6B67               	clrf	(memset@c+1)& (0+255),b
 17890  001E3E  6B66               	clrf	memset@c& (0+255),b
 17891  001E40  6B69               	clrf	(memset@n+1)& (0+255),b
 17892  001E42  0E01               	movlw	1
 17893  001E44  6F68               	movwf	memset@n& (0+255),b
 17894  001E46  EC37  F039         	call	_memset	;wreg free
 17895                           
 17896                           ; BSR set to: 0
 17897                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 17898  001E4A  0EE0               	movlw	low _macBuffer
 17899  001E4C  6F64               	movwf	memset@p1& (0+255),b
 17900  001E4E  0E04               	movlw	high _macBuffer
 17901  001E50  6F65               	movwf	(memset@p1+1)& (0+255),b
 17902  001E52  6B67               	clrf	(memset@c+1)& (0+255),b
 17903  001E54  6B66               	clrf	memset@c& (0+255),b
 17904  001E56  0E01               	movlw	1
 17905  001E58  6F69               	movwf	(memset@n+1)& (0+255),b
 17906  001E5A  0E0F               	movlw	15
 17907  001E5C  6F68               	movwf	memset@n& (0+255),b
 17908  001E5E  EC37  F039         	call	_memset	;wreg free
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 17912  001E62  0EA0               	movlw	low _aesBuffer
 17913  001E64  6F64               	movwf	memset@p1& (0+255),b
 17914  001E66  0E01               	movlw	high _aesBuffer
 17915  001E68  6F65               	movwf	(memset@p1+1)& (0+255),b
 17916  001E6A  6B67               	clrf	(memset@c+1)& (0+255),b
 17917  001E6C  6B66               	clrf	memset@c& (0+255),b
 17918  001E6E  6B69               	clrf	(memset@n+1)& (0+255),b
 17919  001E70  0E10               	movlw	16
 17920  001E72  6F68               	movwf	memset@n& (0+255),b
 17921  001E74  EC37  F039         	call	_memset	;wreg free
 17922                           
 17923                           ; BSR set to: 0
 17924                           ;lorawan.c: 1683: if (confirmed == 1)
 17925  001E78  05D1               	decf	AssemblePacket@confirmed& (0+255),w,b
 17926  001E7A  E107               	bnz	l13700
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;lorawan.c: 1684: {
 17930                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 17931  001E7C  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 17932  001E7E  0B1F               	andlw	-225
 17933  001E80  0980               	iorlw	128
 17934  001E82  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 17935                           
 17936                           ; BSR set to: 0
 17937                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 17938  001E84  0102               	movlb	2	; () banked
 17939  001E86  8100               	bsf	_loRa& (0+255),0,b
 17940                           
 17941                           ;lorawan.c: 1687: }
 17942  001E88  D004               	goto	l2231
 17943  001E8A                     l13700:
 17944                           
 17945                           ; BSR set to: 0
 17946                           ;lorawan.c: 1688: else
 17947                           ;lorawan.c: 1689: {
 17948                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 17949  001E8A  51D2               	movf	AssemblePacket@mhdr& (0+255),w,b
 17950  001E8C  0B1F               	andlw	-225
 17951  001E8E  0940               	iorlw	64
 17952  001E90  6FD2               	movwf	AssemblePacket@mhdr& (0+255),b
 17953  001E92                     l2231:
 17954                           
 17955                           ;lorawan.c: 1691: }
 17956                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 17957  001E92  0EFC               	movlw	-4
 17958  001E94  0100               	movlb	0	; () banked
 17959  001E96  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 17960                           
 17961                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 17962  001E98  0EE3               	movlw	-29
 17963  001E9A  17D2               	andwf	AssemblePacket@mhdr& (0+255),f,b
 17964                           
 17965                           ; BSR set to: 0
 17966                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 17967  001E9C  0EE0               	movlw	low _macBuffer
 17968  001E9E  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 17969  001EA0  6ED9               	movwf	fsr2l,c
 17970  001EA2  6ADA               	clrf	fsr2h,c
 17971  001EA4  0E04               	movlw	high _macBuffer
 17972  001EA6  22DA               	addwfc	fsr2h,f,c
 17973  001EA8  C0D2  FFDF         	movff	AssemblePacket@mhdr,indf2
 17974                           
 17975                           ; BSR set to: 0
 17976  001EAC  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 17977                           
 17978                           ; BSR set to: 0
 17979                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 17980  001EAE  0EE0               	movlw	low _macBuffer
 17981  001EB0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 17982  001EB2  6F64               	movwf	memcpy@d1& (0+255),b
 17983  001EB4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 17984  001EB6  0E04               	movlw	high _macBuffer
 17985  001EB8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 17986  001EBA  0E1E               	movlw	low (_loRa+30)
 17987  001EBC  6F66               	movwf	memcpy@s1& (0+255),b
 17988  001EBE  0E02               	movlw	high (_loRa+30)
 17989  001EC0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 17990  001EC2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 17991  001EC4  0E04               	movlw	4
 17992  001EC6  6F68               	movwf	memcpy@n& (0+255),b
 17993  001EC8  EC44  F034         	call	_memcpy	;wreg free
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 17997  001ECC  0E04               	movlw	4
 17998  001ECE  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;lorawan.c: 1699: fCtrl.value = 0;
 18002  001ED0  6BD3               	clrf	AssemblePacket@fCtrl& (0+255),b
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18006  001ED2  0102               	movlb	2	; () banked
 18007  001ED4  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18008  001ED6  D030               	goto	l2232
 18009                           
 18010                           ; BSR set to: 2
 18011                           ;lorawan.c: 1702: {
 18012                           ;lorawan.c: 1703: fCtrl.adr = 1;
 18013  001ED8  0100               	movlb	0	; () banked
 18014  001EDA  8FD3               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18015                           
 18016                           ; BSR set to: 0
 18017                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 18018  001EDC  0102               	movlb	2	; () banked
 18019  001EDE  51DF               	movf	(_loRa+223)& (0+255),w,b
 18020  001EE0  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 18021  001EE2  E229               	bc	l2233
 18022                           
 18023                           ; BSR set to: 2
 18024                           ;lorawan.c: 1705: {
 18025                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 18026  001EE4  0100               	movlb	0	; () banked
 18027  001EE6  8DD3               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 18028                           
 18029                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 18030  001EE8  0102               	movlb	2	; () banked
 18031  001EEA  8900               	bsf	_loRa& (0+255),4,b
 18032                           
 18033                           ; BSR set to: 2
 18034                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18035  001EEC  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 18036  001EEE  2BD1               	incf	(_loRa+209)& (0+255),f,b
 18037                           
 18038                           ; BSR set to: 2
 18039                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18040  001EF0  51A2               	movf	(_loRa+162)& (0+255),w,b
 18041  001EF2  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 18042  001EF4  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 18043  001EF6  E102               	bnz	l13726
 18044                           
 18045                           ; BSR set to: 2
 18046                           ;lorawan.c: 1711: {
 18047                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18048  001EF8  6BEE               	clrf	(_loRa+238)& (0+255),b
 18049  001EFA  D01A               	goto	L9
 18050  001EFC                     l13726:
 18051                           
 18052                           ; BSR set to: 2
 18053                           ;lorawan.c: 1716: else
 18054                           ;lorawan.c: 1717: {
 18055                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 18056  001EFC  51A2               	movf	(_loRa+162)& (0+255),w,b
 18057  001EFE  0100               	movlb	0	; () banked
 18058  001F00  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18059  001F02  6BD0               	clrf	(??_AssemblePacket+1)& (0+255),b
 18060  001F04  0102               	movlb	2	; () banked
 18061  001F06  51D0               	movf	(_loRa+208)& (0+255),w,b
 18062  001F08  0100               	movlb	0	; () banked
 18063  001F0A  5DCF               	subwf	??_AssemblePacket& (0+255),w,b
 18064  001F0C  0102               	movlb	2	; () banked
 18065  001F0E  51D1               	movf	(_loRa+209)& (0+255),w,b
 18066  001F10  0100               	movlb	0	; () banked
 18067  001F12  59D0               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 18068  001F14  E20E               	bc	l2236
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;lorawan.c: 1719: {
 18072                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 18073  001F16  0102               	movlb	2	; () banked
 18074  001F18  2BEE               	incf	(_loRa+238)& (0+255),f,b
 18075                           
 18076                           ; BSR set to: 2
 18077                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 18078  001F1A  51EE               	movf	(_loRa+238)& (0+255),w,b
 18079  001F1C  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 18080  001F1E  E20C               	bc	l2232
 18081                           
 18082                           ; BSR set to: 2
 18083                           ;lorawan.c: 1725: {
 18084                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 18085  001F20  6BEE               	clrf	(_loRa+238)& (0+255),b
 18086                           
 18087                           ; BSR set to: 2
 18088                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 18089  001F22  EC8A  F02C         	call	_FindSmallestDataRate	;wreg free
 18090  001F26  0900               	iorlw	0
 18091  001F28  E107               	bnz	l2232
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;lorawan.c: 1729: {
 18095                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 18096  001F2A  0102               	movlb	2	; () banked
 18097  001F2C  6BD0               	clrf	(_loRa+208)& (0+255),b
 18098  001F2E  6BD1               	clrf	(_loRa+209)& (0+255),b
 18099  001F30                     L9:
 18100                           
 18101                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 18102  001F30  0100               	movlb	0	; () banked
 18103  001F32                     l2236:
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;lorawan.c: 1737: else
 18107                           ;lorawan.c: 1738: {
 18108                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 18109  001F32  9DD3               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 18110                           
 18111                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 18112  001F34  0102               	movlb	2	; () banked
 18113  001F36                     l2233:
 18114                           
 18115                           ; BSR set to: 2
 18116                           ;lorawan.c: 1744: else
 18117                           ;lorawan.c: 1745: {
 18118                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 18119  001F36  9900               	bcf	_loRa& (0+255),4,b
 18120  001F38                     l2232:
 18121                           
 18122                           ;lorawan.c: 1747: }
 18123                           ;lorawan.c: 1748: }
 18124                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 18125  001F38  0102               	movlb	2	; () banked
 18126  001F3A  A300               	btfss	_loRa& (0+255),1,b
 18127  001F3C  D004               	goto	l2241
 18128                           
 18129                           ; BSR set to: 2
 18130                           ;lorawan.c: 1751: {
 18131                           ;lorawan.c: 1752: fCtrl.ack = 1;
 18132  001F3E  0100               	movlb	0	; () banked
 18133  001F40  8BD3               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 18134                           
 18135                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 18136  001F42  0102               	movlb	2	; () banked
 18137  001F44  9300               	bcf	_loRa& (0+255),1,b
 18138  001F46                     l2241:
 18139                           
 18140                           ; BSR set to: 2
 18141                           ;lorawan.c: 1754: }
 18142                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 18143  001F46  0100               	movlb	0	; () banked
 18144  001F48  99D3               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 18148  001F4A  0102               	movlb	2	; () banked
 18149  001F4C  51A7               	movf	(_loRa+167)& (0+255),w,b
 18150  001F4E  E004               	bz	l13744
 18151                           
 18152                           ; BSR set to: 2
 18153  001F50  0100               	movlb	0	; () banked
 18154  001F52  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18155  001F54  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18156  001F56  E104               	bnz	l13746
 18157  001F58                     l13744:
 18158                           
 18159                           ;lorawan.c: 1759: {
 18160                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 18161  001F58  0EF0               	movlw	-16
 18162  001F5A  0100               	movlb	0	; () banked
 18163  001F5C  17D3               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 18164                           
 18165                           ;lorawan.c: 1761: }
 18166  001F5E  D007               	goto	l13748
 18167  001F60                     l13746:
 18168                           
 18169                           ; BSR set to: 0
 18170                           ;lorawan.c: 1763: else
 18171                           ;lorawan.c: 1764: {
 18172                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 18173  001F60  EC6B  F02A         	call	_CountfOptsLength	;wreg free
 18174  001F64  6FCF               	movwf	??_AssemblePacket& (0+255),b
 18175  001F66  19D3               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 18176  001F68  0BF0               	andlw	-16
 18177  001F6A  19CF               	xorwf	??_AssemblePacket& (0+255),w,b
 18178  001F6C  6FD3               	movwf	AssemblePacket@fCtrl& (0+255),b
 18179  001F6E                     l13748:
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;lorawan.c: 1766: }
 18183                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 18184  001F6E  0EE0               	movlw	low _macBuffer
 18185  001F70  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18186  001F72  6ED9               	movwf	fsr2l,c
 18187  001F74  6ADA               	clrf	fsr2h,c
 18188  001F76  0E04               	movlw	high _macBuffer
 18189  001F78  22DA               	addwfc	fsr2h,f,c
 18190  001F7A  C0D3  FFDF         	movff	AssemblePacket@fCtrl,indf2
 18191                           
 18192                           ; BSR set to: 0
 18193  001F7E  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 18197  001F80  0EE0               	movlw	low _macBuffer
 18198  001F82  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18199  001F84  6F64               	movwf	memcpy@d1& (0+255),b
 18200  001F86  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18201  001F88  0E04               	movlw	high _macBuffer
 18202  001F8A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18203  001F8C  0E06               	movlw	low (_loRa+6)
 18204  001F8E  6F66               	movwf	memcpy@s1& (0+255),b
 18205  001F90  0E02               	movlw	high (_loRa+6)
 18206  001F92  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18207  001F94  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18208  001F96  0E02               	movlw	2
 18209  001F98  6F68               	movwf	memcpy@n& (0+255),b
 18210  001F9A  EC44  F034         	call	_memcpy	;wreg free
 18211                           
 18212                           ; BSR set to: 0
 18213                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 18214  001F9E  0E02               	movlw	2
 18215  001FA0  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 18219  001FA2  0102               	movlb	2	; () banked
 18220  001FA4  51A7               	movf	(_loRa+167)& (0+255),w,b
 18221  001FA6  E00E               	bz	l13762
 18222                           
 18223                           ; BSR set to: 2
 18224  001FA8  0100               	movlb	0	; () banked
 18225  001FAA  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18226  001FAC  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18227  001FAE  E00A               	bz	l13762
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;lorawan.c: 1774: {
 18231                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 18232  001FB0  0EE0               	movlw	low _macBuffer
 18233  001FB2  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18234  001FB4  0E04               	movlw	high _macBuffer
 18235  001FB6  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18236  001FB8  0ED5               	movlw	low AssemblePacket@bufferIndex
 18237  001FBA  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18238  001FBC  0E01               	movlw	1
 18239  001FBE  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18240  001FC0  EC9A  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18241  001FC4                     l13762:
 18242                           
 18243                           ;lorawan.c: 1776: }
 18244                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 18245  001FC4  0EE0               	movlw	low _macBuffer
 18246  001FC6  0100               	movlb	0	; () banked
 18247  001FC8  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18248  001FCA  6ED9               	movwf	fsr2l,c
 18249  001FCC  6ADA               	clrf	fsr2h,c
 18250  001FCE  0E04               	movlw	high _macBuffer
 18251  001FD0  22DA               	addwfc	fsr2h,f,c
 18252  001FD2  C0CA  FFDF         	movff	AssemblePacket@port,indf2
 18253                           
 18254                           ; BSR set to: 0
 18255  001FD6  2BD5               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18256                           
 18257                           ; BSR set to: 0
 18258                           ;lorawan.c: 1780: if (bufferLength != 0)
 18259  001FD8  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18260  001FDA  11CE               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 18261  001FDC  E02E               	bz	l13774
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;lorawan.c: 1781: {
 18265                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 18266  001FDE  0EE0               	movlw	low _macBuffer
 18267  001FE0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18268  001FE2  6F64               	movwf	memcpy@d1& (0+255),b
 18269  001FE4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18270  001FE6  0E04               	movlw	high _macBuffer
 18271  001FE8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18272  001FEA  C0CB  F066         	movff	AssemblePacket@buffer,memcpy@s1
 18273  001FEE  C0CC  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 18274  001FF2  C0CD  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 18275  001FF6  C0CE  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 18276  001FFA  EC44  F034         	call	_memcpy	;wreg free
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 18280  001FFE  C0CB  F094         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 18281  002002  C0CC  F095         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 18282  002006  C0CD  F096         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 18283  00200A  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18284  00200C  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18285  002010  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18286  002014  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18287  002018  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18288  00201C  0E32               	movlw	low (_loRa+50)
 18289  00201E  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18290  002020  0E02               	movlw	high (_loRa+50)
 18291  002022  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18292  002024  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18293  002028  0EE0               	movlw	low _macBuffer
 18294  00202A  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18295  00202C  0E04               	movlw	high _macBuffer
 18296  00202E  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18297  002030  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18298  002032  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 18299                           
 18300                           ; BSR set to: 0
 18301                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 18302  002036  51CD               	movf	AssemblePacket@bufferLength& (0+255),w,b
 18303  002038  D02A               	goto	L8
 18304  00203A                     l13774:
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 18308  00203A  0102               	movlb	2	; () banked
 18309  00203C  51A7               	movf	(_loRa+167)& (0+255),w,b
 18310  00203E  E028               	bz	l13780
 18311                           
 18312                           ; BSR set to: 2
 18313                           ;lorawan.c: 1787: {
 18314                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 18315  002040  0EEF               	movlw	low _radioBuffer
 18316  002042  0100               	movlb	0	; () banked
 18317  002044  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 18318  002046  0E05               	movlw	high _radioBuffer
 18319  002048  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 18320  00204A  0ED4               	movlw	low AssemblePacket@macCmdIdx
 18321  00204C  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 18322  00204E  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 18323  002050  EC9A  F00D         	call	_IncludeMacCommandsResponse	;wreg free
 18324                           
 18325                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 18326  002054  0EEF               	movlw	low _radioBuffer
 18327  002056  6F94               	movwf	EncryptFRMPayload@buffer& (0+255),b
 18328  002058  0E05               	movlw	high _radioBuffer
 18329  00205A  6F95               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 18330  00205C  C0D4  F096         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 18331  002060  6B97               	clrf	EncryptFRMPayload@dir& (0+255),b
 18332  002062  C206  F098         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 18333  002066  C207  F099         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 18334  00206A  C208  F09A         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 18335  00206E  C209  F09B         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 18336  002072  0E22               	movlw	low (_loRa+34)
 18337  002074  6F9C               	movwf	EncryptFRMPayload@key& (0+255),b
 18338  002076  0E02               	movlw	high (_loRa+34)
 18339  002078  6F9D               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 18340  00207A  C0D5  F09E         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 18341  00207E  0EE0               	movlw	low _macBuffer
 18342  002080  6F9F               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 18343  002082  0E04               	movlw	high _macBuffer
 18344  002084  6FA0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 18345  002086  6BA1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 18346  002088  ECAA  F020         	call	_EncryptFRMPayload	;wreg free
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 18350  00208C  51D4               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 18351  00208E                     L8:
 18352  00208E  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18353  002090                     l13780:
 18354                           
 18355                           ;lorawan.c: 1793: }
 18356                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 18357  002090  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 18358  002094  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 18359  002098  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 18360  00209C  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 18361  0020A0  0100               	movlb	0	; () banked
 18362  0020A2  51D5               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18363  0020A4  0FF0               	addlw	240
 18364  0020A6  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 18365  0020A8  0E49               	movlw	73
 18366  0020AA  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 18367  0020AC  0E00               	movlw	0
 18368  0020AE  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 18369  0020B0  EC31  F02C         	call	_AssembleEncryptionBlock
 18370                           
 18371                           ; BSR set to: 0
 18372                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 18373  0020B4  0EE0               	movlw	low _macBuffer
 18374  0020B6  6F64               	movwf	memcpy@d1& (0+255),b
 18375  0020B8  0E04               	movlw	high _macBuffer
 18376  0020BA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 18377  0020BC  0EA0               	movlw	low _aesBuffer
 18378  0020BE  6F66               	movwf	memcpy@s1& (0+255),b
 18379  0020C0  0E01               	movlw	high _aesBuffer
 18380  0020C2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18381  0020C4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18382  0020C6  0E10               	movlw	16
 18383  0020C8  6F68               	movwf	memcpy@n& (0+255),b
 18384  0020CA  EC44  F034         	call	_memcpy	;wreg free
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 18388  0020CE  0E22               	movlw	low (_loRa+34)
 18389  0020D0  6FBC               	movwf	AESCmac@key& (0+255),b
 18390  0020D2  0E02               	movlw	high (_loRa+34)
 18391  0020D4  6FBD               	movwf	(AESCmac@key+1)& (0+255),b
 18392  0020D6  0EA0               	movlw	low _aesBuffer
 18393  0020D8  6FBE               	movwf	AESCmac@output& (0+255),b
 18394  0020DA  0E01               	movlw	high _aesBuffer
 18395  0020DC  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 18396  0020DE  0EE0               	movlw	low _macBuffer
 18397  0020E0  6FC0               	movwf	AESCmac@input& (0+255),b
 18398  0020E2  0E04               	movlw	high _macBuffer
 18399  0020E4  6FC1               	movwf	(AESCmac@input+1)& (0+255),b
 18400  0020E6  C0D5  F0C2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 18401  0020EA  EC0C  F00C         	call	_AESCmac	;wreg free
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 18405  0020EE  0EE0               	movlw	low _macBuffer
 18406  0020F0  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18407  0020F2  6F64               	movwf	memcpy@d1& (0+255),b
 18408  0020F4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 18409  0020F6  0E04               	movlw	high _macBuffer
 18410  0020F8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18411  0020FA  0EA0               	movlw	low _aesBuffer
 18412  0020FC  6F66               	movwf	memcpy@s1& (0+255),b
 18413  0020FE  0E01               	movlw	high _aesBuffer
 18414  002100  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 18415  002102  6B69               	clrf	(memcpy@n+1)& (0+255),b
 18416  002104  0E04               	movlw	4
 18417  002106  6F68               	movwf	memcpy@n& (0+255),b
 18418  002108  EC44  F034         	call	_memcpy	;wreg free
 18419                           
 18420                           ; BSR set to: 0
 18421                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 18422  00210C  0E04               	movlw	4
 18423  00210E  27D5               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 18427  002110  0EF0               	movlw	240
 18428  002112  25D5               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18429  002114  0102               	movlb	2	; () banked
 18430  002116  6FD4               	movwf	(_loRa+212)& (0+255),b
 18431  002118  6BD5               	clrf	(_loRa+213)& (0+255),b
 18432  00211A  0EFF               	movlw	255
 18433  00211C  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 18434                           
 18435                           ; BSR set to: 2
 18436  00211E  0CFF               	retlw	255	;funcret
 18437  002120                     __end_of_AssemblePacket:
 18438                           	opt stack 0
 18439                           tosu	equ	0xFFF
 18440                           tosh	equ	0xFFE
 18441                           tosl	equ	0xFFD
 18442                           pclath	equ	0xFFA
 18443                           tblptru	equ	0xFF8
 18444                           tblptrh	equ	0xFF7
 18445                           tblptrl	equ	0xFF6
 18446                           tablat	equ	0xFF5
 18447                           prodh	equ	0xFF4
 18448                           prodl	equ	0xFF3
 18449                           intcon	equ	0xFF2
 18450                           intcon2	equ	0xFF1
 18451                           intcon3	equ	0xFF0
 18452                           indf0	equ	0xFEF
 18453                           postinc0	equ	0xFEE
 18454                           fsr0h	equ	0xFEA
 18455                           fsr0l	equ	0xFE9
 18456                           wreg	equ	0xFE8
 18457                           postinc1	equ	0xFE6
 18458                           postdec1	equ	0xFE5
 18459                           plusw1	equ	0xFE3
 18460                           fsr1h	equ	0xFE2
 18461                           fsr1l	equ	0xFE1
 18462                           indf2	equ	0xFDF
 18463                           postinc2	equ	0xFDE
 18464                           postdec2	equ	0xFDD
 18465                           plusw2	equ	0xFDB
 18466                           fsr2h	equ	0xFDA
 18467                           fsr2l	equ	0xFD9
 18468                           status	equ	0xFD8
 18469                           
 18470 ;; *************** function _IncludeMacCommandsResponse *****************
 18471 ;; Defined at:
 18472 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18473 ;; Parameters:    Size  Location     Type
 18474 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 18475 ;;		 -> macBuffer(271), radioBuffer(271), 
 18476 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 18477 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 18478 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 18479 ;; Auto vars:     Size  Location     Type
 18480 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 18481 ;;  i               1   14[BANK0 ] unsigned char 
 18482 ;; Return value:  Size  Location     Type
 18483 ;;                  1    wreg      void 
 18484 ;; Registers used:
 18485 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18486 ;; Tracked objects:
 18487 ;;		On entry : F/0
 18488 ;;		On exit  : F/0
 18489 ;;		Unchanged: 0/0
 18490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18492 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18493 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18494 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18495 ;;Total ram usage:       12 bytes
 18496 ;; Hardware stack levels used:    1
 18497 ;; Hardware stack levels required when called:    8
 18498 ;; This function calls:
 18499 ;;		_RADIO_GetPacketSnr
 18500 ;; This function is called by:
 18501 ;;		_AssemblePacket
 18502 ;; This function uses a non-reentrant model
 18503 ;;
 18504                           
 18505                           	psect	text98
 18506  001B34                     __ptext98:
 18507                           	opt stack 0
 18508  001B34                     _IncludeMacCommandsResponse:
 18509                           	opt stack 19
 18510                           
 18511                           ; BSR set to: 0
 18512                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 18513                           
 18514                           ; BSR set to: 0
 18515                           
 18516                           ; BSR set to: 2
 18517                           ;incstack = 0
 18518  001B34  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18519  001B36  6ED9               	movwf	fsr2l,c
 18520  001B38  6ADA               	clrf	fsr2h,c
 18521  001B3A  50DF               	movf	indf2,w,c
 18522  001B3C  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 18523                           
 18524                           ; BSR set to: 0
 18525                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 18526  001B3E  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 18527  001B40  D169               	goto	l13364
 18528  001B42                     l13268:
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;lorawan.c: 1851: {
 18532                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 18533  001B42  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 18534  001B44  E101 D14B          	bz	l13360
 18535                           
 18536                           ; BSR set to: 0
 18537  001B48  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18538  001B4A  0D02               	mullw	2
 18539  001B4C  0EA8               	movlw	low (_loRa+168)
 18540  001B4E  24F3               	addwf	prodl,w,c
 18541  001B50  6ED9               	movwf	fsr2l,c
 18542  001B52  0E02               	movlw	high (_loRa+168)
 18543  001B54  20F4               	addwfc	prodh,w,c
 18544  001B56  6EDA               	movwf	fsr2h,c
 18545  001B58  28DE               	incf	postinc2,w,c
 18546  001B5A  E101 D140          	bz	l13360
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;lorawan.c: 1853: {
 18550                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 18551  001B5E  0EFE               	movlw	254
 18552  001B60  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 18553  001B62  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 18554  001B64  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18555  001B66  0D02               	mullw	2
 18556  001B68  0EA8               	movlw	low (_loRa+168)
 18557  001B6A  24F3               	addwf	prodl,w,c
 18558  001B6C  6ED9               	movwf	fsr2l,c
 18559  001B6E  0E02               	movlw	high (_loRa+168)
 18560  001B70  20F4               	addwfc	prodh,w,c
 18561  001B72  6EDA               	movwf	fsr2h,c
 18562  001B74  50DF               	movf	indf2,w,c
 18563  001B76  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 18564  001B78  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 18565  001B7A  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 18566  001B7C  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 18567  001B7E  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 18568  001B80  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 18569  001B82  0E94               	movlw	low _macEndDevCmdReplyLen
 18570  001B84  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 18571  001B86  6EF6               	movwf	tblptrl,c
 18572  001B88  0EFF               	movlw	high _macEndDevCmdReplyLen
 18573  001B8A  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 18574  001B8C  6EF7               	movwf	tblptrh,c
 18575  001B8E                     	if	1	;There are 3 active tblptr bytes
 18576  001B8E  6AF8               	clrf	tblptru,c
 18577  001B90  0E00               	movlw	low (__mediumconst shr (0+16))
 18578  001B92  22F8               	addwfc	tblptru,f,c
 18579  001B94                     	endif
 18580  001B94  0008               	tblrd		*
 18581  001B96  50F5               	movf	tablat,w,c
 18582  001B98  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 18583  001B9C  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 18584  001B9E  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18585  001BA0  0E00               	movlw	0
 18586  001BA2  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18587  001BA4  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 18588  001BA6  6ED9               	movwf	fsr2l,c
 18589  001BA8  6ADA               	clrf	fsr2h,c
 18590  001BAA  50DF               	movf	indf2,w,c
 18591  001BAC  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 18592  001BAE  0E00               	movlw	0
 18593  001BB0  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 18594  001BB2  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 18595  001BB4  D114               	goto	l13360
 18596  001BB6  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 18597  001BB8  E105               	bnz	u14590
 18598  001BBA  0E10               	movlw	16
 18599  001BBC  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 18600  001BBE  E301 D12F          	bc	l13366
 18601  001BC2  D10D               	goto	l13360
 18602  001BC4                     u14590:
 18603  001BC4  D12D               	goto	l13366
 18604  001BC6                     l13276:
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;lorawan.c: 1862: {
 18608                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 18609  001BC6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18610  001BC8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18611  001BCA  6ED9               	movwf	fsr2l,c
 18612  001BCC  0E00               	movlw	0
 18613  001BCE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18614  001BD0  6EDA               	movwf	fsr2h,c
 18615  001BD2  0E03               	movlw	3
 18616  001BD4  6EDF               	movwf	indf2,c
 18617                           
 18618                           ; BSR set to: 0
 18619  001BD6  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 18623  001BD8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18624  001BDA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18625  001BDC  6ED9               	movwf	fsr2l,c
 18626  001BDE  0E00               	movlw	0
 18627  001BE0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18628  001BE2  6EDA               	movwf	fsr2h,c
 18629  001BE4  6ADF               	clrf	indf2,c
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 18633  001BE6  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18634  001BE8  0D02               	mullw	2
 18635  001BEA  0EA9               	movlw	low (_loRa+169)
 18636  001BEC  24F3               	addwf	prodl,w,c
 18637  001BEE  6ED9               	movwf	fsr2l,c
 18638  001BF0  0E02               	movlw	high (_loRa+169)
 18639  001BF2  20F4               	addwfc	prodh,w,c
 18640  001BF4  6EDA               	movwf	fsr2h,c
 18641  001BF6  A0DF               	btfss	indf2,0,c
 18642  001BF8  D009               	goto	l13286
 18643                           
 18644                           ; BSR set to: 2
 18645                           ;lorawan.c: 1866: {
 18646                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 18647  001BFA  0100               	movlb	0	; () banked
 18648  001BFC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18649  001BFE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18650  001C00  6ED9               	movwf	fsr2l,c
 18651  001C02  0E00               	movlw	0
 18652  001C04  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18653  001C06  6EDA               	movwf	fsr2h,c
 18654  001C08  0E00               	movlw	0
 18655  001C0A  80DB               	bsf	plusw2,0,c
 18656  001C0C                     l13286:
 18657                           
 18658                           ;lorawan.c: 1868: }
 18659                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 18660  001C0C  0100               	movlb	0	; () banked
 18661  001C0E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18662  001C10  0D02               	mullw	2
 18663  001C12  0EA9               	movlw	low (_loRa+169)
 18664  001C14  24F3               	addwf	prodl,w,c
 18665  001C16  6ED9               	movwf	fsr2l,c
 18666  001C18  0E02               	movlw	high (_loRa+169)
 18667  001C1A  20F4               	addwfc	prodh,w,c
 18668  001C1C  6EDA               	movwf	fsr2h,c
 18669  001C1E  A2DF               	btfss	indf2,1,c
 18670  001C20  D008               	goto	l13290
 18671                           
 18672                           ; BSR set to: 2
 18673                           ;lorawan.c: 1871: {
 18674                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 18675  001C22  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18676  001C24  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18677  001C26  6ED9               	movwf	fsr2l,c
 18678  001C28  0E00               	movlw	0
 18679  001C2A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18680  001C2C  6EDA               	movwf	fsr2h,c
 18681  001C2E  0E00               	movlw	0
 18682  001C30  82DB               	bsf	plusw2,1,c
 18683  001C32                     l13290:
 18684                           
 18685                           ;lorawan.c: 1873: }
 18686                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 18687  001C32  0100               	movlb	0	; () banked
 18688  001C34  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18689  001C36  0D02               	mullw	2
 18690  001C38  0EA9               	movlw	low (_loRa+169)
 18691  001C3A  24F3               	addwf	prodl,w,c
 18692  001C3C  6ED9               	movwf	fsr2l,c
 18693  001C3E  0E02               	movlw	high (_loRa+169)
 18694  001C40  20F4               	addwfc	prodh,w,c
 18695  001C42  6EDA               	movwf	fsr2h,c
 18696  001C44  A4DF               	btfss	indf2,2,c
 18697  001C46  D009               	goto	l13294
 18698  001C48                     l13292:
 18699                           
 18700                           ; BSR set to: 2
 18701                           ;lorawan.c: 1876: {
 18702                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 18703  001C48  0100               	movlb	0	; () banked
 18704  001C4A  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18705  001C4C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18706  001C4E  6ED9               	movwf	fsr2l,c
 18707  001C50  0E00               	movlw	0
 18708  001C52  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18709  001C54  6EDA               	movwf	fsr2h,c
 18710  001C56  0E00               	movlw	0
 18711  001C58  84DB               	bsf	plusw2,2,c
 18712  001C5A                     l13294:
 18713                           
 18714                           ;lorawan.c: 1878: }
 18715                           ;lorawan.c: 1879: bufferIndex ++;
 18716  001C5A  0100               	movlb	0	; () banked
 18717  001C5C  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18718                           
 18719                           ;lorawan.c: 1880: }
 18720                           ;lorawan.c: 1881: break;
 18721  001C5E  D0D9               	goto	l13362
 18722  001C60                     l13296:
 18723                           
 18724                           ; BSR set to: 0
 18725                           ;lorawan.c: 1884: {
 18726                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 18727  001C60  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18728  001C62  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18729  001C64  6ED9               	movwf	fsr2l,c
 18730  001C66  0E00               	movlw	0
 18731  001C68  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18732  001C6A  6EDA               	movwf	fsr2h,c
 18733  001C6C  0E05               	movlw	5
 18734  001C6E  6EDF               	movwf	indf2,c
 18735                           
 18736                           ; BSR set to: 0
 18737  001C70  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18738                           
 18739                           ; BSR set to: 0
 18740                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 18741  001C72  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18742  001C74  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18743  001C76  6ED9               	movwf	fsr2l,c
 18744  001C78  0E00               	movlw	0
 18745  001C7A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18746  001C7C  6EDA               	movwf	fsr2h,c
 18747  001C7E  6ADF               	clrf	indf2,c
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 18751  001C80  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18752  001C82  0D02               	mullw	2
 18753  001C84  0EA9               	movlw	low (_loRa+169)
 18754  001C86  24F3               	addwf	prodl,w,c
 18755  001C88  6ED9               	movwf	fsr2l,c
 18756  001C8A  0E02               	movlw	high (_loRa+169)
 18757  001C8C  20F4               	addwfc	prodh,w,c
 18758  001C8E  6EDA               	movwf	fsr2h,c
 18759  001C90  A6DF               	btfss	indf2,3,c
 18760  001C92  D009               	goto	l13306
 18761                           
 18762                           ; BSR set to: 2
 18763                           ;lorawan.c: 1888: {
 18764                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 18765  001C94  0100               	movlb	0	; () banked
 18766  001C96  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18767  001C98  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18768  001C9A  6ED9               	movwf	fsr2l,c
 18769  001C9C  0E00               	movlw	0
 18770  001C9E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18771  001CA0  6EDA               	movwf	fsr2h,c
 18772  001CA2  0E00               	movlw	0
 18773  001CA4  80DB               	bsf	plusw2,0,c
 18774  001CA6                     l13306:
 18775                           
 18776                           ;lorawan.c: 1890: }
 18777                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 18778  001CA6  0100               	movlb	0	; () banked
 18779  001CA8  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18780  001CAA  0D02               	mullw	2
 18781  001CAC  0EA9               	movlw	low (_loRa+169)
 18782  001CAE  24F3               	addwf	prodl,w,c
 18783  001CB0  6ED9               	movwf	fsr2l,c
 18784  001CB2  0E02               	movlw	high (_loRa+169)
 18785  001CB4  20F4               	addwfc	prodh,w,c
 18786  001CB6  6EDA               	movwf	fsr2h,c
 18787  001CB8  A8DF               	btfss	indf2,4,c
 18788  001CBA  D008               	goto	l13310
 18789                           
 18790                           ; BSR set to: 2
 18791                           ;lorawan.c: 1893: {
 18792                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 18793  001CBC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18794  001CBE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18795  001CC0  6ED9               	movwf	fsr2l,c
 18796  001CC2  0E00               	movlw	0
 18797  001CC4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18798  001CC6  6EDA               	movwf	fsr2h,c
 18799  001CC8  0E00               	movlw	0
 18800  001CCA  82DB               	bsf	plusw2,1,c
 18801  001CCC                     l13310:
 18802                           
 18803                           ;lorawan.c: 1895: }
 18804                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 18805  001CCC  0100               	movlb	0	; () banked
 18806  001CCE  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18807  001CD0  0D02               	mullw	2
 18808  001CD2  0EA9               	movlw	low (_loRa+169)
 18809  001CD4  24F3               	addwf	prodl,w,c
 18810  001CD6  6ED9               	movwf	fsr2l,c
 18811  001CD8  0E02               	movlw	high (_loRa+169)
 18812  001CDA  20F4               	addwfc	prodh,w,c
 18813  001CDC  6EDA               	movwf	fsr2h,c
 18814  001CDE  AADF               	btfss	indf2,5,c
 18815  001CE0  D7BC               	goto	l13294
 18816  001CE2  D7B2               	goto	l13292
 18817  001CE4                     l13316:
 18818                           
 18819                           ; BSR set to: 0
 18820                           ;lorawan.c: 1907: {
 18821                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 18822  001CE4  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18823  001CE6  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18824  001CE8  6ED9               	movwf	fsr2l,c
 18825  001CEA  0E00               	movlw	0
 18826  001CEC  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18827  001CEE  6EDA               	movwf	fsr2h,c
 18828  001CF0  0E06               	movlw	6
 18829  001CF2  6EDF               	movwf	indf2,c
 18830                           
 18831                           ; BSR set to: 0
 18832  001CF4  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18833                           
 18834                           ; BSR set to: 0
 18835                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 18836  001CF6  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18837  001CF8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18838  001CFA  6ED9               	movwf	fsr2l,c
 18839  001CFC  0E00               	movlw	0
 18840  001CFE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18841  001D00  6EDA               	movwf	fsr2h,c
 18842  001D02  C2E0  FFDF         	movff	_loRa+224,indf2
 18843  001D06  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18844                           
 18845                           ; BSR set to: 0
 18846                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 18847  001D08  EC95  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18848  001D0C  0A80               	xorlw	128
 18849  001D0E  0FA0               	addlw	160
 18850  001D10  E305               	bnc	l13326
 18851                           
 18852                           ; BSR set to: 1
 18853  001D12  EC95  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18854  001D16  0A80               	xorlw	128
 18855  001D18  0F60               	addlw	-160
 18856  001D1A  E309               	bnc	l13330
 18857  001D1C                     l13326:
 18858                           
 18859                           ; BSR set to: 1
 18860                           ;lorawan.c: 1911: {
 18861                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 18862  001D1C  0100               	movlb	0	; () banked
 18863  001D1E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18864  001D20  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18865  001D22  6ED9               	movwf	fsr2l,c
 18866  001D24  0E00               	movlw	0
 18867  001D26  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18868  001D28  6EDA               	movwf	fsr2h,c
 18869  001D2A  0E20               	movlw	32
 18870  001D2C  D00A               	goto	L10
 18871  001D2E                     l13330:
 18872                           
 18873                           ; BSR set to: 1
 18874                           ;lorawan.c: 1914: else
 18875                           ;lorawan.c: 1915: {
 18876                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 18877  001D2E  0100               	movlb	0	; () banked
 18878  001D30  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18879  001D32  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18880  001D34  6ED9               	movwf	fsr2l,c
 18881  001D36  0E00               	movlw	0
 18882  001D38  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18883  001D3A  6EDA               	movwf	fsr2h,c
 18884  001D3C  EC95  F03C         	call	_RADIO_GetPacketSnr	;wreg free
 18885  001D40  0B3F               	andlw	63
 18886  001D42                     L10:
 18887  001D42  6EDF               	movwf	indf2,c
 18888  001D44  D78A               	goto	l13294
 18889  001D46                     l13334:
 18890                           
 18891                           ; BSR set to: 0
 18892                           ;lorawan.c: 1922: {
 18893                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 18894  001D46  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18895  001D48  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18896  001D4A  6ED9               	movwf	fsr2l,c
 18897  001D4C  0E00               	movlw	0
 18898  001D4E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18899  001D50  6EDA               	movwf	fsr2h,c
 18900  001D52  0E07               	movlw	7
 18901  001D54  6EDF               	movwf	indf2,c
 18902                           
 18903                           ; BSR set to: 0
 18904  001D56  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 18905                           
 18906                           ; BSR set to: 0
 18907                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 18908  001D58  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18909  001D5A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18910  001D5C  6ED9               	movwf	fsr2l,c
 18911  001D5E  0E00               	movlw	0
 18912  001D60  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18913  001D62  6EDA               	movwf	fsr2h,c
 18914  001D64  6ADF               	clrf	indf2,c
 18915                           
 18916                           ; BSR set to: 0
 18917                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 18918  001D66  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18919  001D68  0D02               	mullw	2
 18920  001D6A  0EA9               	movlw	low (_loRa+169)
 18921  001D6C  24F3               	addwf	prodl,w,c
 18922  001D6E  6ED9               	movwf	fsr2l,c
 18923  001D70  0E02               	movlw	high (_loRa+169)
 18924  001D72  20F4               	addwfc	prodh,w,c
 18925  001D74  6EDA               	movwf	fsr2h,c
 18926  001D76  AEDF               	btfss	indf2,7,c
 18927  001D78  D009               	goto	l13344
 18928                           
 18929                           ; BSR set to: 2
 18930                           ;lorawan.c: 1926: {
 18931                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 18932  001D7A  0100               	movlb	0	; () banked
 18933  001D7C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18934  001D7E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18935  001D80  6ED9               	movwf	fsr2l,c
 18936  001D82  0E00               	movlw	0
 18937  001D84  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18938  001D86  6EDA               	movwf	fsr2h,c
 18939  001D88  0E00               	movlw	0
 18940  001D8A  80DB               	bsf	plusw2,0,c
 18941  001D8C                     l13344:
 18942                           
 18943                           ;lorawan.c: 1928: }
 18944                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 18945  001D8C  0100               	movlb	0	; () banked
 18946  001D8E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18947  001D90  0D02               	mullw	2
 18948  001D92  0EA9               	movlw	low (_loRa+169)
 18949  001D94  24F3               	addwf	prodl,w,c
 18950  001D96  6ED9               	movwf	fsr2l,c
 18951  001D98  0E02               	movlw	high (_loRa+169)
 18952  001D9A  20F4               	addwfc	prodh,w,c
 18953  001D9C  6EDA               	movwf	fsr2h,c
 18954  001D9E  ACDF               	btfss	indf2,6,c
 18955  001DA0  D75C               	goto	l13294
 18956                           
 18957                           ; BSR set to: 2
 18958                           ;lorawan.c: 1931: {
 18959                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 18960  001DA2  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18961  001DA4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18962  001DA6  6ED9               	movwf	fsr2l,c
 18963  001DA8  0E00               	movlw	0
 18964  001DAA  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18965  001DAC  6EDA               	movwf	fsr2h,c
 18966  001DAE  0E00               	movlw	0
 18967  001DB0  82DB               	bsf	plusw2,1,c
 18968  001DB2  D753               	goto	l13294
 18969  001DB4                     l2283:
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;lorawan.c: 1939: {
 18973                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 18974  001DB4  0102               	movlb	2	; () banked
 18975  001DB6  69DD               	setf	(_loRa+221)& (0+255),b
 18976                           
 18977                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 18978  001DB8  6BDE               	clrf	(_loRa+222)& (0+255),b
 18979  001DBA                     l13350:
 18980                           
 18981                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 18982  001DBA  0100               	movlb	0	; () banked
 18983  001DBC  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 18984  001DBE  0D02               	mullw	2
 18985  001DC0  0EA8               	movlw	low (_loRa+168)
 18986  001DC2  24F3               	addwf	prodl,w,c
 18987  001DC4  6ED9               	movwf	fsr2l,c
 18988  001DC6  0E02               	movlw	high (_loRa+168)
 18989  001DC8  20F4               	addwfc	prodh,w,c
 18990  001DCA  6EDA               	movwf	fsr2h,c
 18991  001DCC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 18992  001DCE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 18993  001DD0  6EE9               	movwf	fsr0l,c
 18994  001DD2  0E00               	movlw	0
 18995  001DD4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 18996  001DD6  6EEA               	movwf	fsr0h,c
 18997  001DD8  CFDF FFEF          	movff	indf2,indf0
 18998  001DDC  D73E               	goto	l13294
 18999  001DDE                     l13360:
 19000                           
 19001                           ; BSR set to: 0
 19002  001DDE  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19003  001DE0  0D02               	mullw	2
 19004  001DE2  0EA8               	movlw	low (_loRa+168)
 19005  001DE4  24F3               	addwf	prodl,w,c
 19006  001DE6  6ED9               	movwf	fsr2l,c
 19007  001DE8  0E02               	movlw	high (_loRa+168)
 19008  001DEA  20F4               	addwfc	prodh,w,c
 19009  001DEC  6EDA               	movwf	fsr2h,c
 19010  001DEE  50DF               	movf	indf2,w,c
 19011                           
 19012                           ; Switch size 1, requested type "speed"
 19013                           ; Number of cases is 7, Range of values is 2 to 8
 19014                           ; switch strategies available:
 19015                           ; Name         Instructions Cycles
 19016                           ; simple_byte           22    12 (average)
 19017                           ;	Chosen strategy is simple_byte
 19018  001DF0  0A02               	xorlw	2	; case 2
 19019  001DF2  E0E0               	bz	l2283
 19020  001DF4  0A01               	xorlw	1	; case 3
 19021  001DF6  E101 D6E6          	bz	l13276
 19022  001DFA  0A07               	xorlw	7	; case 4
 19023  001DFC  E0DE               	bz	l13350
 19024  001DFE  0A01               	xorlw	1	; case 5
 19025  001E00  E101 D72E          	bz	l13296
 19026  001E04  0A03               	xorlw	3	; case 6
 19027  001E06  E101 D76D          	bz	l13316
 19028  001E0A  0A01               	xorlw	1	; case 7
 19029  001E0C  E09C               	bz	l13334
 19030  001E0E  0A0F               	xorlw	15	; case 8
 19031  001E10  E0D4               	bz	l13350
 19032  001E12                     l13362:
 19033                           
 19034                           ; BSR set to: 0
 19035  001E12  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19036  001E14                     l13364:
 19037                           
 19038                           ; BSR set to: 0
 19039  001E14  0102               	movlb	2	; () banked
 19040  001E16  51A7               	movf	(_loRa+167)& (0+255),w,b
 19041  001E18  0100               	movlb	0	; () banked
 19042  001E1A  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19043  001E1C  E201 D691          	bnc	l13268
 19044  001E20                     l13366:
 19045                           
 19046                           ; BSR set to: 0
 19047                           ;lorawan.c: 1957: }
 19048                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19049  001E20  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19050  001E22  6ED9               	movwf	fsr2l,c
 19051  001E24  6ADA               	clrf	fsr2h,c
 19052  001E26  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19053                           
 19054                           ; BSR set to: 0
 19055  001E2A  0012               	return		;funcret
 19056  001E2C                     __end_of_IncludeMacCommandsResponse:
 19057                           	opt stack 0
 19058                           tosu	equ	0xFFF
 19059                           tosh	equ	0xFFE
 19060                           tosl	equ	0xFFD
 19061                           pclath	equ	0xFFA
 19062                           tblptru	equ	0xFF8
 19063                           tblptrh	equ	0xFF7
 19064                           tblptrl	equ	0xFF6
 19065                           tablat	equ	0xFF5
 19066                           prodh	equ	0xFF4
 19067                           prodl	equ	0xFF3
 19068                           intcon	equ	0xFF2
 19069                           intcon2	equ	0xFF1
 19070                           intcon3	equ	0xFF0
 19071                           indf0	equ	0xFEF
 19072                           postinc0	equ	0xFEE
 19073                           fsr0h	equ	0xFEA
 19074                           fsr0l	equ	0xFE9
 19075                           wreg	equ	0xFE8
 19076                           postinc1	equ	0xFE6
 19077                           postdec1	equ	0xFE5
 19078                           plusw1	equ	0xFE3
 19079                           fsr1h	equ	0xFE2
 19080                           fsr1l	equ	0xFE1
 19081                           indf2	equ	0xFDF
 19082                           postinc2	equ	0xFDE
 19083                           postdec2	equ	0xFDD
 19084                           plusw2	equ	0xFDB
 19085                           fsr2h	equ	0xFDA
 19086                           fsr2l	equ	0xFD9
 19087                           status	equ	0xFD8
 19088                           
 19089 ;; *************** function _RADIO_GetPacketSnr *****************
 19090 ;; Defined at:
 19091 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19092 ;; Parameters:    Size  Location     Type
 19093 ;;		None
 19094 ;; Auto vars:     Size  Location     Type
 19095 ;;		None
 19096 ;; Return value:  Size  Location     Type
 19097 ;;                  1    wreg      char 
 19098 ;; Registers used:
 19099 ;;		wreg, status,2
 19100 ;; Tracked objects:
 19101 ;;		On entry : E/0
 19102 ;;		On exit  : F/1
 19103 ;;		Unchanged: 0/0
 19104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19109 ;;Total ram usage:        0 bytes
 19110 ;; Hardware stack levels used:    1
 19111 ;; Hardware stack levels required when called:    7
 19112 ;; This function calls:
 19113 ;;		Nothing
 19114 ;; This function is called by:
 19115 ;;		_IncludeMacCommandsResponse
 19116 ;; This function uses a non-reentrant model
 19117 ;;
 19118                           
 19119                           	psect	text99
 19120  00792A                     __ptext99:
 19121                           	opt stack 0
 19122  00792A                     _RADIO_GetPacketSnr:
 19123                           	opt stack 19
 19124                           
 19125                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 19126                           
 19127                           ; BSR set to: 0
 19128                           ;incstack = 0
 19129  00792A  0101               	movlb	1	; () banked
 19130  00792C  519C               	movf	(_RadioConfiguration+50)& (0+255),w,b
 19131                           
 19132                           ; BSR set to: 1
 19133  00792E  0012               	return		;funcret
 19134  007930                     __end_of_RADIO_GetPacketSnr:
 19135                           	opt stack 0
 19136                           tosu	equ	0xFFF
 19137                           tosh	equ	0xFFE
 19138                           tosl	equ	0xFFD
 19139                           pclath	equ	0xFFA
 19140                           tblptru	equ	0xFF8
 19141                           tblptrh	equ	0xFF7
 19142                           tblptrl	equ	0xFF6
 19143                           tablat	equ	0xFF5
 19144                           prodh	equ	0xFF4
 19145                           prodl	equ	0xFF3
 19146                           intcon	equ	0xFF2
 19147                           intcon2	equ	0xFF1
 19148                           intcon3	equ	0xFF0
 19149                           indf0	equ	0xFEF
 19150                           postinc0	equ	0xFEE
 19151                           fsr0h	equ	0xFEA
 19152                           fsr0l	equ	0xFE9
 19153                           wreg	equ	0xFE8
 19154                           postinc1	equ	0xFE6
 19155                           postdec1	equ	0xFE5
 19156                           plusw1	equ	0xFE3
 19157                           fsr1h	equ	0xFE2
 19158                           fsr1l	equ	0xFE1
 19159                           indf2	equ	0xFDF
 19160                           postinc2	equ	0xFDE
 19161                           postdec2	equ	0xFDD
 19162                           plusw2	equ	0xFDB
 19163                           fsr2h	equ	0xFDA
 19164                           fsr2l	equ	0xFD9
 19165                           status	equ	0xFD8
 19166                           
 19167 ;; *************** function _FindSmallestDataRate *****************
 19168 ;; Defined at:
 19169 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19170 ;; Parameters:    Size  Location     Type
 19171 ;;		None
 19172 ;; Auto vars:     Size  Location     Type
 19173 ;;  dataRate        1    7[BANK0 ] unsigned char 
 19174 ;;  i               1    6[BANK0 ] unsigned char 
 19175 ;;  found           1    5[BANK0 ] unsigned char 
 19176 ;; Return value:  Size  Location     Type
 19177 ;;                  1    wreg      unsigned char 
 19178 ;; Registers used:
 19179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19180 ;; Tracked objects:
 19181 ;;		On entry : F/2
 19182 ;;		On exit  : F/0
 19183 ;;		Unchanged: 0/0
 19184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19186 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19187 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19188 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19189 ;;Total ram usage:        4 bytes
 19190 ;; Hardware stack levels used:    1
 19191 ;; Hardware stack levels required when called:    7
 19192 ;; This function calls:
 19193 ;;		Nothing
 19194 ;; This function is called by:
 19195 ;;		_AckRetransmissionCallback
 19196 ;;		_AssemblePacket
 19197 ;; This function uses a non-reentrant model
 19198 ;;
 19199                           
 19200                           	psect	text100
 19201  005914                     __ptext100:
 19202                           	opt stack 0
 19203  005914                     _FindSmallestDataRate:
 19204                           	opt stack 20
 19205                           
 19206                           ; BSR set to: 2
 19207                           ;lorawan.c: 1966: bool found = 0;
 19208                           
 19209                           ; BSR set to: 1
 19210                           ;incstack = 0
 19211  005914  0100               	movlb	0	; () banked
 19212  005916  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 19213                           
 19214                           ; BSR set to: 0
 19215                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 19216  005918  0102               	movlb	2	; () banked
 19217  00591A  51DF               	movf	(_loRa+223)& (0+255),w,b
 19218  00591C  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19219  00591E  E24A               	bc	l13194
 19220                           
 19221                           ; BSR set to: 2
 19222                           ;lorawan.c: 1969: {
 19223                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 19224  005920  05DF               	decf	(_loRa+223)& (0+255),w,b
 19225  005922  0100               	movlb	0	; () banked
 19226  005924  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 19227                           
 19228                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 19229  005926  D03A               	goto	l13186
 19230  005928                     l2292:
 19231                           
 19232                           ; BSR set to: 0
 19233                           ;lorawan.c: 1973: {
 19234                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 19235  005928  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 19236  00592A  D02B               	goto	l13178
 19237  00592C                     l13168:
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;lorawan.c: 1975: {
 19241                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 19242  00592C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19243  00592E  0D0E               	mullw	14
 19244  005930  0E05               	movlw	low (_Channels+5)
 19245  005932  24F3               	addwf	prodl,w,c
 19246  005934  6ED9               	movwf	fsr2l,c
 19247  005936  0E04               	movlw	high (_Channels+5)
 19248  005938  20F4               	addwfc	prodh,w,c
 19249  00593A  6EDA               	movwf	fsr2h,c
 19250  00593C  50DF               	movf	223,w,c
 19251  00593E  0B0F               	andlw	15
 19252  005940  0100               	movlb	0	; () banked
 19253  005942  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19254  005944  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 19255  005946  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19256  005948  E31B               	bnc	l13176
 19257                           
 19258                           ; BSR set to: 0
 19259  00594A  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19260  00594C  0D0E               	mullw	14
 19261  00594E  0E05               	movlw	low (_Channels+5)
 19262  005950  24F3               	addwf	prodl,w,c
 19263  005952  6ED9               	movwf	fsr2l,c
 19264  005954  0E04               	movlw	high (_Channels+5)
 19265  005956  20F4               	addwfc	prodh,w,c
 19266  005958  6EDA               	movwf	fsr2h,c
 19267  00595A  38DF               	swapf	223,w,c
 19268  00595C  0B0F               	andlw	15
 19269  00595E  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 19270  005960  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19271  005962  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 19272  005964  E30D               	bnc	l13176
 19273                           
 19274                           ; BSR set to: 0
 19275  005966  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 19276  005968  0D0E               	mullw	14
 19277  00596A  0E04               	movlw	low (_Channels+4)
 19278  00596C  24F3               	addwf	prodl,w,c
 19279  00596E  6ED9               	movwf	fsr2l,c
 19280  005970  0E04               	movlw	high (_Channels+4)
 19281  005972  20F4               	addwfc	prodh,w,c
 19282  005974  6EDA               	movwf	fsr2h,c
 19283  005976  04DE               	decf	postinc2,w,c
 19284  005978  E103               	bnz	l13176
 19285                           
 19286                           ; BSR set to: 0
 19287                           ;lorawan.c: 1977: {
 19288                           ;lorawan.c: 1978: found = 1;
 19289  00597A  0E01               	movlw	1
 19290  00597C  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 19291                           
 19292                           ;lorawan.c: 1979: break;
 19293  00597E  D006               	goto	l13180
 19294  005980                     l13176:
 19295                           
 19296                           ; BSR set to: 0
 19297  005980  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 19298  005982                     l13178:
 19299                           
 19300                           ; BSR set to: 0
 19301  005982  0102               	movlb	2	; () banked
 19302  005984  51ED               	movf	(_loRa+237)& (0+255),w,b
 19303  005986  0100               	movlb	0	; () banked
 19304  005988  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 19305  00598A  E3D0               	bnc	l13168
 19306  00598C                     l13180:
 19307                           
 19308                           ; BSR set to: 0
 19309                           ;lorawan.c: 1980: }
 19310                           ;lorawan.c: 1981: }
 19311                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 19312  00598C  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19313  00598E  E106               	bnz	l13186
 19314                           
 19315                           ; BSR set to: 0
 19316  005990  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 19317  005992  0102               	movlb	2	; () banked
 19318  005994  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19319  005996  E202               	bc	l13186
 19320                           
 19321                           ; BSR set to: 2
 19322                           ;lorawan.c: 1983: {
 19323                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 19324  005998  0100               	movlb	0	; () banked
 19325  00599A  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 19326  00599C                     l13186:
 19327  00599C  0100               	movlb	0	; () banked
 19328  00599E  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19329  0059A0  E105               	bnz	l13190
 19330                           
 19331                           ; BSR set to: 0
 19332  0059A2  0102               	movlb	2	; () banked
 19333  0059A4  51EB               	movf	(_loRa+235)& (0+255),w,b
 19334  0059A6  0100               	movlb	0	; () banked
 19335  0059A8  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 19336  0059AA  E2BE               	bc	l2292
 19337  0059AC                     l13190:
 19338                           
 19339                           ; BSR set to: 0
 19340                           ;lorawan.c: 1985: }
 19341                           ;lorawan.c: 1986: }
 19342                           ;lorawan.c: 1988: if (found == 1)
 19343  0059AC  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 19344  0059AE  E102               	bnz	l13194
 19345                           
 19346                           ; BSR set to: 0
 19347                           ;lorawan.c: 1989: {
 19348                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 19349  0059B0  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 19350  0059B4                     l13194:
 19351                           
 19352                           ;lorawan.c: 1991: }
 19353                           ;lorawan.c: 1992: }
 19354                           ;lorawan.c: 1994: return found;
 19355  0059B4  0100               	movlb	0	; () banked
 19356  0059B6  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 19357                           
 19358                           ; BSR set to: 0
 19359  0059B8  0012               	return		;funcret
 19360  0059BA                     __end_of_FindSmallestDataRate:
 19361                           	opt stack 0
 19362                           tosu	equ	0xFFF
 19363                           tosh	equ	0xFFE
 19364                           tosl	equ	0xFFD
 19365                           pclath	equ	0xFFA
 19366                           tblptru	equ	0xFF8
 19367                           tblptrh	equ	0xFF7
 19368                           tblptrl	equ	0xFF6
 19369                           tablat	equ	0xFF5
 19370                           prodh	equ	0xFF4
 19371                           prodl	equ	0xFF3
 19372                           intcon	equ	0xFF2
 19373                           intcon2	equ	0xFF1
 19374                           intcon3	equ	0xFF0
 19375                           indf0	equ	0xFEF
 19376                           postinc0	equ	0xFEE
 19377                           fsr0h	equ	0xFEA
 19378                           fsr0l	equ	0xFE9
 19379                           wreg	equ	0xFE8
 19380                           postinc1	equ	0xFE6
 19381                           postdec1	equ	0xFE5
 19382                           plusw1	equ	0xFE3
 19383                           fsr1h	equ	0xFE2
 19384                           fsr1l	equ	0xFE1
 19385                           indf2	equ	0xFDF
 19386                           postinc2	equ	0xFDE
 19387                           postdec2	equ	0xFDD
 19388                           plusw2	equ	0xFDB
 19389                           fsr2h	equ	0xFDA
 19390                           fsr2l	equ	0xFD9
 19391                           status	equ	0xFD8
 19392                           
 19393 ;; *************** function _EncryptFRMPayload *****************
 19394 ;; Defined at:
 19395 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19396 ;; Parameters:    Size  Location     Type
 19397 ;;  buffer          2   52[BANK0 ] PTR unsigned char 
 19398 ;;		 -> payload(4), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 19399 ;;  bufferLength    1   54[BANK0 ] unsigned char 
 19400 ;;  dir             1   55[BANK0 ] unsigned char 
 19401 ;;  frameCounter    4   56[BANK0 ] unsigned long 
 19402 ;;  key             2   60[BANK0 ] PTR unsigned char 
 19403 ;;		 -> loRa.activationParameters(105), loRa(245), 
 19404 ;;  macBufferInd    1   62[BANK0 ] unsigned char 
 19405 ;;  bufferToBeEn    2   63[BANK0 ] PTR unsigned char 
 19406 ;;		 -> macBuffer(271), radioBuffer(271), 
 19407 ;;  multicastSta    1   65[BANK0 ] unsigned char 
 19408 ;; Auto vars:     Size  Location     Type
 19409 ;;  j               1   73[BANK0 ] unsigned char 
 19410 ;;  i               1   72[BANK0 ] unsigned char 
 19411 ;;  k               1   71[BANK0 ] unsigned char 
 19412 ;; Return value:  Size  Location     Type
 19413 ;;                  1    wreg      void 
 19414 ;; Registers used:
 19415 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19416 ;; Tracked objects:
 19417 ;;		On entry : F/0
 19418 ;;		On exit  : F/0
 19419 ;;		Unchanged: 0/0
 19420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19421 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19422 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19423 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19424 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19425 ;;Total ram usage:       22 bytes
 19426 ;; Hardware stack levels used:    1
 19427 ;; Hardware stack levels required when called:   10
 19428 ;; This function calls:
 19429 ;;		_AESEncodeLoRa
 19430 ;;		_AssembleEncryptionBlock
 19431 ;; This function is called by:
 19432 ;;		_LORAWAN_RxDone
 19433 ;;		_AssemblePacket
 19434 ;; This function uses a non-reentrant model
 19435 ;;
 19436                           
 19437                           	psect	text101
 19438  004154                     __ptext101:
 19439                           	opt stack 0
 19440  004154                     _EncryptFRMPayload:
 19441                           	opt stack 17
 19442                           
 19443                           ; BSR set to: 0
 19444                           
 19445                           ; BSR set to: 0
 19446                           ;incstack = 0
 19447  004154  6BA8               	clrf	EncryptFRMPayload@i& (0+255),b
 19448  004156  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19449                           
 19450                           ; BSR set to: 0
 19451                           ;lorawan.c: 2209: k = bufferLength / 16;
 19452  004158  3996               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 19453  00415A  0B0F               	andlw	15
 19454  00415C  6FA7               	movwf	EncryptFRMPayload@k& (0+255),b
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 19458  00415E  0E01               	movlw	1
 19459  004160  6FA8               	movwf	EncryptFRMPayload@i& (0+255),b
 19460  004162  D051               	goto	l13230
 19461  004164                     l13212:
 19462                           
 19463                           ; BSR set to: 0
 19464                           ;lorawan.c: 2211: {
 19465                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19466  004164  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19467  004168  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19468  00416C  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19469  004170  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19470  004174  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19471  004178  0E01               	movlw	1
 19472  00417A  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19473  00417C  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19474  004180  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19475  004182  EC31  F02C         	call	_AssembleEncryptionBlock
 19476                           
 19477                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 19478  004186  0EA0               	movlw	low _aesBuffer
 19479  004188  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19480  00418A  0E01               	movlw	high _aesBuffer
 19481  00418C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19482  00418E  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19483  004192  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19484  004196  EC74  F039         	call	_AESEncodeLoRa	;wreg free
 19485                           
 19486                           ; BSR set to: 0
 19487                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 19488  00419A  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19489  00419C                     l13220:
 19490                           
 19491                           ; BSR set to: 0
 19492                           ;lorawan.c: 2216: {
 19493                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 19494  00419C  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19495  00419E  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19496  0041A0  6ED9               	movwf	fsr2l,c
 19497  0041A2  0E00               	movlw	0
 19498  0041A4  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19499  0041A6  6EDA               	movwf	fsr2h,c
 19500  0041A8  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19501  0041AA  6FA2               	movwf	??_EncryptFRMPayload& (0+255),b
 19502  0041AC  6BA3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 19503  0041AE  3BA2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 19504  0041B0  3BA3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19505  0041B2  0EF0               	movlw	240
 19506  0041B4  17A3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19507  0041B6  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19508  0041B8  0B0F               	andlw	15
 19509  0041BA  13A3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 19510  0041BC  0EF0               	movlw	240
 19511  0041BE  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19512  0041C0  C094  F0A4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 19513  0041C4  C095  F0A5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 19514  0041C8  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19515  0041CA  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19516  0041CC  51A3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 19517  0041CE  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19518  0041D0  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19519  0041D2  27A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 19520  0041D4  0E00               	movlw	0
 19521  0041D6  23A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 19522  0041D8  0EF0               	movlw	240
 19523  0041DA  25A4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19524  0041DC  6EE9               	movwf	fsr0l,c
 19525  0041DE  0EFF               	movlw	255
 19526  0041E0  21A5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 19527  0041E2  6EEA               	movwf	fsr0h,c
 19528  0041E4  50EF               	movf	indf0,w,c
 19529  0041E6  6FA6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 19530  0041E8  0EA0               	movlw	low _aesBuffer
 19531  0041EA  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19532  0041EC  6EE9               	movwf	fsr0l,c
 19533  0041EE  6AEA               	clrf	fsr0h,c
 19534  0041F0  0E01               	movlw	high _aesBuffer
 19535  0041F2  22EA               	addwfc	fsr0h,f,c
 19536  0041F4  50EF               	movf	indf0,w,c
 19537  0041F6  19A6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 19538  0041F8  6EDF               	movwf	indf2,c
 19539                           
 19540                           ; BSR set to: 0
 19541  0041FA  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19542                           
 19543                           ; BSR set to: 0
 19544  0041FC  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19545                           
 19546                           ; BSR set to: 0
 19547  0041FE  0E0F               	movlw	15
 19548  004200  65A9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 19549  004202  D7CC               	goto	l13220
 19550                           
 19551                           ; BSR set to: 0
 19552  004204  2BA8               	incf	EncryptFRMPayload@i& (0+255),f,b
 19553  004206                     l13230:
 19554                           
 19555                           ; BSR set to: 0
 19556  004206  51A8               	movf	EncryptFRMPayload@i& (0+255),w,b
 19557  004208  5DA7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 19558  00420A  E2AC               	bc	l13212
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;lorawan.c: 2218: }
 19562                           ;lorawan.c: 2219: }
 19563                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 19564  00420C  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19565  004210  0E0F               	movlw	15
 19566  004212  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19567  004214  B4D8               	btfsc	status,2,c
 19568  004216  0C0F               	retlw	15
 19569                           
 19570                           ; BSR set to: 0
 19571                           ;lorawan.c: 2222: {
 19572                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 19573  004218  C098  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 19574  00421C  C099  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 19575  004220  C09A  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 19576  004224  C09B  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 19577  004228  C0A8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 19578  00422C  0E01               	movlw	1
 19579  00422E  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19580  004230  C0A1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 19581  004234  5197               	movf	EncryptFRMPayload@dir& (0+255),w,b
 19582  004236  EC31  F02C         	call	_AssembleEncryptionBlock
 19583                           
 19584                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 19585  00423A  0EA0               	movlw	low _aesBuffer
 19586  00423C  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 19587  00423E  0E01               	movlw	high _aesBuffer
 19588  004240  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 19589  004242  C09C  F082         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 19590  004246  C09D  F083         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 19591  00424A  EC74  F039         	call	_AESEncodeLoRa	;wreg free
 19592                           
 19593                           ; BSR set to: 0
 19594                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 19595  00424E  6BA9               	clrf	EncryptFRMPayload@j& (0+255),b
 19596  004250  D023               	goto	l13244
 19597  004252                     l13238:
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;lorawan.c: 2227: {
 19601                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 19602  004252  519E               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 19603  004254  259F               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 19604  004256  6ED9               	movwf	fsr2l,c
 19605  004258  0E00               	movlw	0
 19606  00425A  21A0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 19607  00425C  6EDA               	movwf	fsr2h,c
 19608  00425E  51A7               	movf	EncryptFRMPayload@k& (0+255),w,b
 19609  004260  0D10               	mullw	16
 19610  004262  C094  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 19611  004266  C095  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 19612  00426A  50F3               	movf	prodl,w,c
 19613  00426C  27A2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 19614  00426E  50F4               	movf	prodh,w,c
 19615  004270  23A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 19616  004272  51A9               	movf	EncryptFRMPayload@j& (0+255),w,b
 19617  004274  25A2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 19618  004276  6EE9               	movwf	fsr0l,c
 19619  004278  0E00               	movlw	0
 19620  00427A  21A3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 19621  00427C  6EEA               	movwf	fsr0h,c
 19622  00427E  50EF               	movf	indf0,w,c
 19623  004280  6FA4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 19624  004282  0EA0               	movlw	low _aesBuffer
 19625  004284  25A9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 19626  004286  6EE9               	movwf	fsr0l,c
 19627  004288  6AEA               	clrf	fsr0h,c
 19628  00428A  0E01               	movlw	high _aesBuffer
 19629  00428C  22EA               	addwfc	fsr0h,f,c
 19630  00428E  50EF               	movf	indf0,w,c
 19631  004290  19A4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 19632  004292  6EDF               	movwf	indf2,c
 19633                           
 19634                           ; BSR set to: 0
 19635  004294  2B9E               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 19636                           
 19637                           ; BSR set to: 0
 19638  004296  2BA9               	incf	EncryptFRMPayload@j& (0+255),f,b
 19639  004298                     l13244:
 19640                           
 19641                           ; BSR set to: 0
 19642  004298  C096  F0A2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 19643  00429C  0E0F               	movlw	15
 19644  00429E  17A2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 19645  0042A0  51A2               	movf	??_EncryptFRMPayload& (0+255),w,b
 19646  0042A2  5DA9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 19647  0042A4  E3D6               	bnc	l13238
 19648                           
 19649                           ; BSR set to: 0
 19650  0042A6  0012               	return		;funcret
 19651  0042A8                     __end_of_EncryptFRMPayload:
 19652                           	opt stack 0
 19653                           tosu	equ	0xFFF
 19654                           tosh	equ	0xFFE
 19655                           tosl	equ	0xFFD
 19656                           pclath	equ	0xFFA
 19657                           tblptru	equ	0xFF8
 19658                           tblptrh	equ	0xFF7
 19659                           tblptrl	equ	0xFF6
 19660                           tablat	equ	0xFF5
 19661                           prodh	equ	0xFF4
 19662                           prodl	equ	0xFF3
 19663                           intcon	equ	0xFF2
 19664                           intcon2	equ	0xFF1
 19665                           intcon3	equ	0xFF0
 19666                           indf0	equ	0xFEF
 19667                           postinc0	equ	0xFEE
 19668                           fsr0h	equ	0xFEA
 19669                           fsr0l	equ	0xFE9
 19670                           wreg	equ	0xFE8
 19671                           postinc1	equ	0xFE6
 19672                           postdec1	equ	0xFE5
 19673                           plusw1	equ	0xFE3
 19674                           fsr1h	equ	0xFE2
 19675                           fsr1l	equ	0xFE1
 19676                           indf2	equ	0xFDF
 19677                           postinc2	equ	0xFDE
 19678                           postdec2	equ	0xFDD
 19679                           plusw2	equ	0xFDB
 19680                           fsr2h	equ	0xFDA
 19681                           fsr2l	equ	0xFD9
 19682                           status	equ	0xFD8
 19683                           
 19684 ;; *************** function _AssembleEncryptionBlock *****************
 19685 ;; Defined at:
 19686 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19687 ;; Parameters:    Size  Location     Type
 19688 ;;  dir             1    wreg     unsigned char 
 19689 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 19690 ;;  blockId         1   18[BANK0 ] unsigned char 
 19691 ;;  firstByte       1   19[BANK0 ] unsigned char 
 19692 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 19693 ;; Auto vars:     Size  Location     Type
 19694 ;;  dir             1   21[BANK0 ] unsigned char 
 19695 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 19696 ;; Return value:  Size  Location     Type
 19697 ;;                  1    wreg      void 
 19698 ;; Registers used:
 19699 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19700 ;; Tracked objects:
 19701 ;;		On entry : F/0
 19702 ;;		On exit  : F/0
 19703 ;;		Unchanged: 0/0
 19704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19705 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19708 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19709 ;;Total ram usage:        9 bytes
 19710 ;; Hardware stack levels used:    1
 19711 ;; Hardware stack levels required when called:    8
 19712 ;; This function calls:
 19713 ;;		_memcpy
 19714 ;;		_memset
 19715 ;; This function is called by:
 19716 ;;		_LORAWAN_RxDone
 19717 ;;		_AssemblePacket
 19718 ;;		_EncryptFRMPayload
 19719 ;; This function uses a non-reentrant model
 19720 ;;
 19721                           
 19722                           	psect	text102
 19723  005862                     __ptext102:
 19724                           	opt stack 0
 19725  005862                     _AssembleEncryptionBlock:
 19726                           	opt stack 18
 19727                           
 19728                           ; BSR set to: 0
 19729                           ;incstack = 0
 19730                           ;AssembleEncryptionBlock@dir stored from wreg
 19731  005862  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 19732                           
 19733                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 19734  005864  0100               	movlb	0	; () banked
 19735  005866  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 19736                           
 19737                           ; BSR set to: 0
 19738                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 19739  005868  0EA0               	movlw	low _aesBuffer
 19740  00586A  6F64               	movwf	memset@p1& (0+255),b
 19741  00586C  0E01               	movlw	high _aesBuffer
 19742  00586E  6F65               	movwf	(memset@p1+1)& (0+255),b
 19743  005870  6B67               	clrf	(memset@c+1)& (0+255),b
 19744  005872  6B66               	clrf	memset@c& (0+255),b
 19745  005874  6B69               	clrf	(memset@n+1)& (0+255),b
 19746  005876  0E10               	movlw	16
 19747  005878  6F68               	movwf	memset@n& (0+255),b
 19748  00587A  EC37  F039         	call	_memset	;wreg free
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 19752  00587E  C073  F1A0         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 19756  005882  0E05               	movlw	5
 19757  005884  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19758                           
 19759                           ; BSR set to: 0
 19760                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 19761  005886  0EA0               	movlw	low _aesBuffer
 19762  005888  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19763  00588A  6ED9               	movwf	fsr2l,c
 19764  00588C  6ADA               	clrf	fsr2h,c
 19765  00588E  0E01               	movlw	high _aesBuffer
 19766  005890  22DA               	addwfc	fsr2h,f,c
 19767  005892  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 19768                           
 19769                           ; BSR set to: 0
 19770  005896  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;lorawan.c: 2168: if (0 == multicastStatus)
 19774  005898  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 19775  00589A  E112               	bnz	l12774
 19776                           
 19777                           ; BSR set to: 0
 19778                           ;lorawan.c: 2169: {
 19779                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 19780  00589C  0EA0               	movlw	low _aesBuffer
 19781  00589E  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19782  0058A0  6F64               	movwf	memcpy@d1& (0+255),b
 19783  0058A2  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19784  0058A4  0E01               	movlw	high _aesBuffer
 19785  0058A6  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19786  0058A8  0E1E               	movlw	low (_loRa+30)
 19787  0058AA  6F66               	movwf	memcpy@s1& (0+255),b
 19788  0058AC  0E02               	movlw	high (_loRa+30)
 19789  0058AE  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19790  0058B0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19791  0058B2  0E04               	movlw	4
 19792  0058B4  6F68               	movwf	memcpy@n& (0+255),b
 19793  0058B6  EC44  F034         	call	_memcpy	;wreg free
 19794  0058BA                     l12772:
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 19798  0058BA  0E04               	movlw	4
 19799  0058BC  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19800                           
 19801                           ;lorawan.c: 2172: }
 19802  0058BE  D010               	goto	l12778
 19803  0058C0                     l12774:
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;lorawan.c: 2173: else
 19807                           ;lorawan.c: 2174: {
 19808                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 19809  0058C0  0EA0               	movlw	low _aesBuffer
 19810  0058C2  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19811  0058C4  6F64               	movwf	memcpy@d1& (0+255),b
 19812  0058C6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19813  0058C8  0E01               	movlw	high _aesBuffer
 19814  0058CA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19815  0058CC  0E62               	movlw	low (_loRa+98)
 19816  0058CE  6F66               	movwf	memcpy@s1& (0+255),b
 19817  0058D0  0E02               	movlw	high (_loRa+98)
 19818  0058D2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19819  0058D4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19820  0058D6  0E04               	movlw	4
 19821  0058D8  6F68               	movwf	memcpy@n& (0+255),b
 19822  0058DA  EC44  F034         	call	_memcpy	;wreg free
 19823  0058DE  D7ED               	goto	l12772
 19824  0058E0                     l12778:
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;lorawan.c: 2177: }
 19828                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 19829  0058E0  0EA0               	movlw	low _aesBuffer
 19830  0058E2  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19831  0058E4  6F64               	movwf	memcpy@d1& (0+255),b
 19832  0058E6  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19833  0058E8  0E01               	movlw	high _aesBuffer
 19834  0058EA  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19835  0058EC  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 19836  0058EE  6F66               	movwf	memcpy@s1& (0+255),b
 19837  0058F0  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 19838  0058F2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19839  0058F4  0E04               	movlw	4
 19840  0058F6  6F68               	movwf	memcpy@n& (0+255),b
 19841  0058F8  EC44  F034         	call	_memcpy	;wreg free
 19842                           
 19843                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 19844  0058FC  0E04               	movlw	4
 19845  0058FE  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19846                           
 19847                           ; BSR set to: 0
 19848                           ;lorawan.c: 2182: bufferIndex ++;
 19849  005900  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 19850                           
 19851                           ; BSR set to: 0
 19852                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 19853  005902  0EA0               	movlw	low _aesBuffer
 19854  005904  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 19855  005906  6ED9               	movwf	fsr2l,c
 19856  005908  6ADA               	clrf	fsr2h,c
 19857  00590A  0E01               	movlw	high _aesBuffer
 19858  00590C  22DA               	addwfc	fsr2h,f,c
 19859  00590E  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 19860                           
 19861                           ; BSR set to: 0
 19862  005912  0012               	return		;funcret
 19863  005914                     __end_of_AssembleEncryptionBlock:
 19864                           	opt stack 0
 19865                           tosu	equ	0xFFF
 19866                           tosh	equ	0xFFE
 19867                           tosl	equ	0xFFD
 19868                           pclath	equ	0xFFA
 19869                           tblptru	equ	0xFF8
 19870                           tblptrh	equ	0xFF7
 19871                           tblptrl	equ	0xFF6
 19872                           tablat	equ	0xFF5
 19873                           prodh	equ	0xFF4
 19874                           prodl	equ	0xFF3
 19875                           intcon	equ	0xFF2
 19876                           intcon2	equ	0xFF1
 19877                           intcon3	equ	0xFF0
 19878                           indf0	equ	0xFEF
 19879                           postinc0	equ	0xFEE
 19880                           fsr0h	equ	0xFEA
 19881                           fsr0l	equ	0xFE9
 19882                           wreg	equ	0xFE8
 19883                           postinc1	equ	0xFE6
 19884                           postdec1	equ	0xFE5
 19885                           plusw1	equ	0xFE3
 19886                           fsr1h	equ	0xFE2
 19887                           fsr1l	equ	0xFE1
 19888                           indf2	equ	0xFDF
 19889                           postinc2	equ	0xFDE
 19890                           postdec2	equ	0xFDD
 19891                           plusw2	equ	0xFDB
 19892                           fsr2h	equ	0xFDA
 19893                           fsr2l	equ	0xFD9
 19894                           status	equ	0xFD8
 19895                           
 19896 ;; *************** function _CountfOptsLength *****************
 19897 ;; Defined at:
 19898 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19899 ;; Parameters:    Size  Location     Type
 19900 ;;		None
 19901 ;; Auto vars:     Size  Location     Type
 19902 ;;  i               1   11[BANK0 ] unsigned char 
 19903 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 19904 ;; Return value:  Size  Location     Type
 19905 ;;                  1    wreg      unsigned char 
 19906 ;; Registers used:
 19907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19908 ;; Tracked objects:
 19909 ;;		On entry : D/2
 19910 ;;		On exit  : F/0
 19911 ;;		Unchanged: 0/0
 19912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19915 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19917 ;;Total ram usage:        8 bytes
 19918 ;; Hardware stack levels used:    1
 19919 ;; Hardware stack levels required when called:    7
 19920 ;; This function calls:
 19921 ;;		Nothing
 19922 ;; This function is called by:
 19923 ;;		_LORAWAN_GetMaxPayloadSize
 19924 ;;		_AssemblePacket
 19925 ;; This function uses a non-reentrant model
 19926 ;;
 19927                           
 19928                           	psect	text103
 19929  0054D6                     __ptext103:
 19930                           	opt stack 0
 19931  0054D6                     _CountfOptsLength:
 19932                           	opt stack 20
 19933                           
 19934                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 19935                           
 19936                           ; BSR set to: 0
 19937                           ;incstack = 0
 19938  0054D6  0100               	movlb	0	; () banked
 19939  0054D8  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 19940                           
 19941                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 19942  0054DA  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 19943  0054DC  D053               	goto	l13256
 19944  0054DE                     l13248:
 19945                           
 19946                           ; BSR set to: 0
 19947                           ;lorawan.c: 2139: {
 19948                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 19949  0054DE  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19950  0054E0  0D02               	mullw	2
 19951  0054E2  0EA8               	movlw	low (_loRa+168)
 19952  0054E4  24F3               	addwf	prodl,w,c
 19953  0054E6  6ED9               	movwf	fsr2l,c
 19954  0054E8  0E02               	movlw	high (_loRa+168)
 19955  0054EA  20F4               	addwfc	prodh,w,c
 19956  0054EC  6EDA               	movwf	fsr2h,c
 19957  0054EE  28DE               	incf	postinc2,w,c
 19958  0054F0  E048               	bz	l13254
 19959                           
 19960                           ; BSR set to: 0
 19961                           ;lorawan.c: 2141: {
 19962                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 19963  0054F2  0EFE               	movlw	254
 19964  0054F4  6F64               	movwf	??_CountfOptsLength& (0+255),b
 19965  0054F6  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 19966  0054F8  516B               	movf	CountfOptsLength@i& (0+255),w,b
 19967  0054FA  0D02               	mullw	2
 19968  0054FC  0EA8               	movlw	low (_loRa+168)
 19969  0054FE  24F3               	addwf	prodl,w,c
 19970  005500  6ED9               	movwf	fsr2l,c
 19971  005502  0E02               	movlw	high (_loRa+168)
 19972  005504  20F4               	addwfc	prodh,w,c
 19973  005506  6EDA               	movwf	fsr2h,c
 19974  005508  50DF               	movf	indf2,w,c
 19975  00550A  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 19976  00550C  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 19977  00550E  5164               	movf	??_CountfOptsLength& (0+255),w,b
 19978  005510  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 19979  005512  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 19980  005514  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 19981  005516  0E94               	movlw	low _macEndDevCmdReplyLen
 19982  005518  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 19983  00551A  6EF6               	movwf	tblptrl,c
 19984  00551C  0EFF               	movlw	high _macEndDevCmdReplyLen
 19985  00551E  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 19986  005520  6EF7               	movwf	tblptrh,c
 19987  005522                     	if	1	;There are 3 active tblptr bytes
 19988  005522  6AF8               	clrf	tblptru,c
 19989  005524  0E00               	movlw	low (__mediumconst shr (0+16))
 19990  005526  22F8               	addwfc	tblptru,f,c
 19991  005528                     	endif
 19992  005528  0008               	tblrd		*
 19993  00552A  50F5               	movf	tablat,w,c
 19994  00552C  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 19995  005530  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 19996  005532  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 19997  005534  0E00               	movlw	0
 19998  005536  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 19999  005538  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 20000  00553A  D005               	goto	l13252
 20001  00553C  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 20002  00553E  E127               	bnz	l13258
 20003  005540  0E10               	movlw	16
 20004  005542  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 20005  005544  E224               	bc	l13258
 20006  005546                     l13252:
 20007                           
 20008                           ; BSR set to: 0
 20009                           ;lorawan.c: 2143: {
 20010                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 20011  005546  0EFE               	movlw	254
 20012  005548  6F64               	movwf	??_CountfOptsLength& (0+255),b
 20013  00554A  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 20014  00554C  516B               	movf	CountfOptsLength@i& (0+255),w,b
 20015  00554E  0D02               	mullw	2
 20016  005550  0EA8               	movlw	low (_loRa+168)
 20017  005552  24F3               	addwf	prodl,w,c
 20018  005554  6ED9               	movwf	fsr2l,c
 20019  005556  0E02               	movlw	high (_loRa+168)
 20020  005558  20F4               	addwfc	prodh,w,c
 20021  00555A  6EDA               	movwf	fsr2h,c
 20022  00555C  50DF               	movf	indf2,w,c
 20023  00555E  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20024  005560  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20025  005562  5164               	movf	??_CountfOptsLength& (0+255),w,b
 20026  005564  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20027  005566  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20028  005568  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20029  00556A  0E94               	movlw	low _macEndDevCmdReplyLen
 20030  00556C  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20031  00556E  6EF6               	movwf	tblptrl,c
 20032  005570  0EFF               	movlw	high _macEndDevCmdReplyLen
 20033  005572  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20034  005574  6EF7               	movwf	tblptrh,c
 20035  005576                     	if	1	;There are 3 active tblptr bytes
 20036  005576  6AF8               	clrf	tblptru,c
 20037  005578  0E00               	movlw	low (__mediumconst shr (0+16))
 20038  00557A  22F8               	addwfc	tblptru,f,c
 20039  00557C                     	endif
 20040  00557C  0008               	tblrd		*
 20041  00557E  50F5               	movf	tablat,w,c
 20042  005580  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 20043  005582                     l13254:
 20044                           
 20045                           ; BSR set to: 0
 20046  005582  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 20047  005584                     l13256:
 20048                           
 20049                           ; BSR set to: 0
 20050  005584  0102               	movlb	2	; () banked
 20051  005586  51A7               	movf	(_loRa+167)& (0+255),w,b
 20052  005588  0100               	movlb	0	; () banked
 20053  00558A  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 20054  00558C  E3A8               	bnc	l13248
 20055  00558E                     l13258:
 20056                           
 20057                           ; BSR set to: 0
 20058                           ;lorawan.c: 2149: }
 20059                           ;lorawan.c: 2150: }
 20060                           ;lorawan.c: 2151: }
 20061                           ;lorawan.c: 2153: return macCommandLength;
 20062  00558E  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 20063                           
 20064                           ; BSR set to: 0
 20065  005590  0012               	return		;funcret
 20066  005592                     __end_of_CountfOptsLength:
 20067                           	opt stack 0
 20068                           tosu	equ	0xFFF
 20069                           tosh	equ	0xFFE
 20070                           tosl	equ	0xFFD
 20071                           pclath	equ	0xFFA
 20072                           tblptru	equ	0xFF8
 20073                           tblptrh	equ	0xFF7
 20074                           tblptrl	equ	0xFF6
 20075                           tablat	equ	0xFF5
 20076                           prodh	equ	0xFF4
 20077                           prodl	equ	0xFF3
 20078                           intcon	equ	0xFF2
 20079                           intcon2	equ	0xFF1
 20080                           intcon3	equ	0xFF0
 20081                           indf0	equ	0xFEF
 20082                           postinc0	equ	0xFEE
 20083                           fsr0h	equ	0xFEA
 20084                           fsr0l	equ	0xFE9
 20085                           wreg	equ	0xFE8
 20086                           postinc1	equ	0xFE6
 20087                           postdec1	equ	0xFE5
 20088                           plusw1	equ	0xFE3
 20089                           fsr1h	equ	0xFE2
 20090                           fsr1l	equ	0xFE1
 20091                           indf2	equ	0xFDF
 20092                           postinc2	equ	0xFDE
 20093                           postdec2	equ	0xFDD
 20094                           plusw2	equ	0xFDB
 20095                           fsr2h	equ	0xFDA
 20096                           fsr2l	equ	0xFD9
 20097                           status	equ	0xFD8
 20098                           
 20099 ;; *************** function _ExtractMic *****************
 20100 ;; Defined at:
 20101 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20102 ;; Parameters:    Size  Location     Type
 20103 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 20104 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20105 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 20106 ;; Auto vars:     Size  Location     Type
 20107 ;;  mic             4   20[BANK0 ] unsigned long 
 20108 ;; Return value:  Size  Location     Type
 20109 ;;                  4   14[BANK0 ] unsigned long 
 20110 ;; Registers used:
 20111 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20112 ;; Tracked objects:
 20113 ;;		On entry : F/0
 20114 ;;		On exit  : F/0
 20115 ;;		Unchanged: 0/0
 20116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20117 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20118 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20120 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20121 ;;Total ram usage:       10 bytes
 20122 ;; Hardware stack levels used:    1
 20123 ;; Hardware stack levels required when called:    8
 20124 ;; This function calls:
 20125 ;;		_memcpy
 20126 ;; This function is called by:
 20127 ;;		_LORAWAN_RxDone
 20128 ;; This function uses a non-reentrant model
 20129 ;;
 20130                           
 20131                           	psect	text104
 20132  006D08                     __ptext104:
 20133                           	opt stack 0
 20134  006D08                     _ExtractMic:
 20135                           	opt stack 18
 20136                           
 20137                           ; BSR set to: 0
 20138                           ;lorawan.c: 2189: uint32_t mic = 0;
 20139                           
 20140                           ; BSR set to: 0
 20141                           ;incstack = 0
 20142  006D08  6B74               	clrf	ExtractMic@mic& (0+255),b
 20143  006D0A  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 20144  006D0C  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 20145  006D0E  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 20149  006D10  0E74               	movlw	low ExtractMic@mic
 20150  006D12  6F64               	movwf	memcpy@d1& (0+255),b
 20151  006D14  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20152  006D16  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 20153  006D18  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 20154  006D1A  6F72               	movwf	??_ExtractMic& (0+255),b
 20155  006D1C  0E00               	movlw	0
 20156  006D1E  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 20157  006D20  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 20158  006D22  0EFC               	movlw	252
 20159  006D24  2572               	addwf	??_ExtractMic& (0+255),w,b
 20160  006D26  6F66               	movwf	memcpy@s1& (0+255),b
 20161  006D28  0EFF               	movlw	255
 20162  006D2A  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 20163  006D2C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20164  006D2E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20165  006D30  0E04               	movlw	4
 20166  006D32  6F68               	movwf	memcpy@n& (0+255),b
 20167  006D34  EC44  F034         	call	_memcpy	;wreg free
 20168                           
 20169                           ; BSR set to: 0
 20170                           ;lorawan.c: 2191: return mic;
 20171  006D38  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 20172  006D3C  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 20173  006D40  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 20174  006D44  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 20175                           
 20176                           ; BSR set to: 0
 20177  006D48  0012               	return		;funcret
 20178  006D4A                     __end_of_ExtractMic:
 20179                           	opt stack 0
 20180                           tosu	equ	0xFFF
 20181                           tosh	equ	0xFFE
 20182                           tosl	equ	0xFFD
 20183                           pclath	equ	0xFFA
 20184                           tblptru	equ	0xFF8
 20185                           tblptrh	equ	0xFF7
 20186                           tblptrl	equ	0xFF6
 20187                           tablat	equ	0xFF5
 20188                           prodh	equ	0xFF4
 20189                           prodl	equ	0xFF3
 20190                           intcon	equ	0xFF2
 20191                           intcon2	equ	0xFF1
 20192                           intcon3	equ	0xFF0
 20193                           indf0	equ	0xFEF
 20194                           postinc0	equ	0xFEE
 20195                           fsr0h	equ	0xFEA
 20196                           fsr0l	equ	0xFE9
 20197                           wreg	equ	0xFE8
 20198                           postinc1	equ	0xFE6
 20199                           postdec1	equ	0xFE5
 20200                           plusw1	equ	0xFE3
 20201                           fsr1h	equ	0xFE2
 20202                           fsr1l	equ	0xFE1
 20203                           indf2	equ	0xFDF
 20204                           postinc2	equ	0xFDE
 20205                           postdec2	equ	0xFDD
 20206                           plusw2	equ	0xFDB
 20207                           fsr2h	equ	0xFDA
 20208                           fsr2l	equ	0xFD9
 20209                           status	equ	0xFD8
 20210                           
 20211 ;; *************** function _ComputeSessionKeys *****************
 20212 ;; Defined at:
 20213 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20214 ;; Parameters:    Size  Location     Type
 20215 ;;  joinAcceptBu    2   52[BANK0 ] PTR struct .
 20216 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20217 ;; Auto vars:     Size  Location     Type
 20218 ;;		None
 20219 ;; Return value:  Size  Location     Type
 20220 ;;                  1    wreg      void 
 20221 ;; Registers used:
 20222 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20223 ;; Tracked objects:
 20224 ;;		On entry : D/0
 20225 ;;		On exit  : F/0
 20226 ;;		Unchanged: 0/0
 20227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20232 ;;Total ram usage:        2 bytes
 20233 ;; Hardware stack levels used:    1
 20234 ;; Hardware stack levels required when called:   10
 20235 ;; This function calls:
 20236 ;;		_AESEncodeLoRa
 20237 ;;		_PrepareSessionKeys
 20238 ;; This function is called by:
 20239 ;;		_LORAWAN_RxDone
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           	psect	text105
 20244  005E40                     __ptext105:
 20245                           	opt stack 0
 20246  005E40                     _ComputeSessionKeys:
 20247                           	opt stack 16
 20248                           
 20249                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;incstack = 0
 20253  005E40  0E32               	movlw	low (_loRa+50)
 20254  005E42  0100               	movlb	0	; () banked
 20255  005E44  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20256  005E46  0E02               	movlw	high (_loRa+50)
 20257  005E48  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20258  005E4A  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20259  005E4C  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20260  005E4E  0E00               	movlw	0
 20261  005E50  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20262  005E52  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20263  005E54  0E04               	movlw	4
 20264  005E56  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20265  005E58  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20266  005E5A  0E00               	movlw	0
 20267  005E5C  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20268  005E5E  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20269  005E60  EC9E  F02F         	call	_PrepareSessionKeys	;wreg free
 20270                           
 20271                           ; BSR set to: 0
 20272                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 20273  005E64  0E02               	movlw	2
 20274  005E66  0102               	movlb	2	; () banked
 20275  005E68  6F32               	movwf	(_loRa+50)& (0+255),b
 20276                           
 20277                           ; BSR set to: 2
 20278                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 20279  005E6A  0E32               	movlw	low (_loRa+50)
 20280  005E6C  0100               	movlb	0	; () banked
 20281  005E6E  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20282  005E70  0E02               	movlw	high (_loRa+50)
 20283  005E72  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20284  005E74  0E42               	movlw	low (_loRa+66)
 20285  005E76  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20286  005E78  0E02               	movlw	high (_loRa+66)
 20287  005E7A  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20288  005E7C  EC74  F039         	call	_AESEncodeLoRa	;wreg free
 20289                           
 20290                           ; BSR set to: 0
 20291                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 20292  005E80  0E22               	movlw	low (_loRa+34)
 20293  005E82  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 20294  005E84  0E02               	movlw	high (_loRa+34)
 20295  005E86  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 20296  005E88  2994               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20297  005E8A  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 20298  005E8C  0E00               	movlw	0
 20299  005E8E  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20300  005E90  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 20301  005E92  0E04               	movlw	4
 20302  005E94  2594               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 20303  005E96  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 20304  005E98  0E00               	movlw	0
 20305  005E9A  2195               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 20306  005E9C  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 20307  005E9E  EC9E  F02F         	call	_PrepareSessionKeys	;wreg free
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 20311  005EA2  0E01               	movlw	1
 20312  005EA4  0102               	movlb	2	; () banked
 20313  005EA6  6F22               	movwf	(_loRa+34)& (0+255),b
 20314                           
 20315                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 20316  005EA8  0E22               	movlw	low (_loRa+34)
 20317  005EAA  0100               	movlb	0	; () banked
 20318  005EAC  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 20319  005EAE  0E02               	movlw	high (_loRa+34)
 20320  005EB0  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20321  005EB2  0E42               	movlw	low (_loRa+66)
 20322  005EB4  6F82               	movwf	AESEncodeLoRa@key& (0+255),b
 20323  005EB6  0E02               	movlw	high (_loRa+66)
 20324  005EB8  6F83               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 20325  005EBA  EF74  F039         	goto	_AESEncodeLoRa	;wreg free
 20326  005EBE                     __end_of_ComputeSessionKeys:
 20327                           	opt stack 0
 20328                           tosu	equ	0xFFF
 20329                           tosh	equ	0xFFE
 20330                           tosl	equ	0xFFD
 20331                           pclath	equ	0xFFA
 20332                           tblptru	equ	0xFF8
 20333                           tblptrh	equ	0xFF7
 20334                           tblptrl	equ	0xFF6
 20335                           tablat	equ	0xFF5
 20336                           prodh	equ	0xFF4
 20337                           prodl	equ	0xFF3
 20338                           intcon	equ	0xFF2
 20339                           intcon2	equ	0xFF1
 20340                           intcon3	equ	0xFF0
 20341                           indf0	equ	0xFEF
 20342                           postinc0	equ	0xFEE
 20343                           fsr0h	equ	0xFEA
 20344                           fsr0l	equ	0xFE9
 20345                           wreg	equ	0xFE8
 20346                           postinc1	equ	0xFE6
 20347                           postdec1	equ	0xFE5
 20348                           plusw1	equ	0xFE3
 20349                           fsr1h	equ	0xFE2
 20350                           fsr1l	equ	0xFE1
 20351                           indf2	equ	0xFDF
 20352                           postinc2	equ	0xFDE
 20353                           postdec2	equ	0xFDD
 20354                           plusw2	equ	0xFDB
 20355                           fsr2h	equ	0xFDA
 20356                           fsr2l	equ	0xFD9
 20357                           status	equ	0xFD8
 20358                           
 20359 ;; *************** function _PrepareSessionKeys *****************
 20360 ;; Defined at:
 20361 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20362 ;; Parameters:    Size  Location     Type
 20363 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 20364 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20365 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 20366 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20367 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 20368 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20369 ;; Auto vars:     Size  Location     Type
 20370 ;;  index           1   20[BANK0 ] unsigned char 
 20371 ;; Return value:  Size  Location     Type
 20372 ;;                  1    wreg      void 
 20373 ;; Registers used:
 20374 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20375 ;; Tracked objects:
 20376 ;;		On entry : F/0
 20377 ;;		On exit  : F/0
 20378 ;;		Unchanged: 0/0
 20379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20383 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20384 ;;Total ram usage:        7 bytes
 20385 ;; Hardware stack levels used:    1
 20386 ;; Hardware stack levels required when called:    8
 20387 ;; This function calls:
 20388 ;;		_memcpy
 20389 ;;		_memset
 20390 ;; This function is called by:
 20391 ;;		_ComputeSessionKeys
 20392 ;; This function uses a non-reentrant model
 20393 ;;
 20394                           
 20395                           	psect	text106
 20396  005F3C                     __ptext106:
 20397                           	opt stack 0
 20398  005F3C                     _PrepareSessionKeys:
 20399                           	opt stack 17
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;lorawan.c: 2047: uint8_t index = 0;
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;incstack = 0
 20406  005F3C  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 20407                           
 20408                           ; BSR set to: 0
 20409                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 20410  005F3E  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 20411  005F42  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 20412  005F46  6B67               	clrf	(memset@c+1)& (0+255),b
 20413  005F48  6B66               	clrf	memset@c& (0+255),b
 20414  005F4A  6B69               	clrf	(memset@n+1)& (0+255),b
 20415  005F4C  0E10               	movlw	16
 20416  005F4E  6F68               	movwf	memset@n& (0+255),b
 20417  005F50  EC37  F039         	call	_memset	;wreg free
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;lorawan.c: 2050: index ++;
 20421  005F54  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 20425  005F56  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20426  005F58  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20427  005F5A  6F64               	movwf	memcpy@d1& (0+255),b
 20428  005F5C  0E00               	movlw	0
 20429  005F5E  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20430  005F60  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20431  005F62  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 20432  005F66  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 20433  005F6A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20434  005F6C  0E03               	movlw	3
 20435  005F6E  6F68               	movwf	memcpy@n& (0+255),b
 20436  005F70  EC44  F034         	call	_memcpy	;wreg free
 20437                           
 20438                           ; BSR set to: 0
 20439                           ;lorawan.c: 2053: index = index + 3;
 20440  005F74  0E03               	movlw	3
 20441  005F76  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20442                           
 20443                           ; BSR set to: 0
 20444                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 20445  005F78  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20446  005F7A  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20447  005F7C  6F64               	movwf	memcpy@d1& (0+255),b
 20448  005F7E  0E00               	movlw	0
 20449  005F80  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20450  005F82  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20451  005F84  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 20452  005F88  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 20453  005F8C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20454  005F8E  0E03               	movlw	3
 20455  005F90  6F68               	movwf	memcpy@n& (0+255),b
 20456  005F92  EC44  F034         	call	_memcpy	;wreg free
 20457                           
 20458                           ; BSR set to: 0
 20459                           ;lorawan.c: 2056: index = index + 3;
 20460  005F96  0E03               	movlw	3
 20461  005F98  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 20462                           
 20463                           ; BSR set to: 0
 20464                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 20465  005F9A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 20466  005F9C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 20467  005F9E  6F64               	movwf	memcpy@d1& (0+255),b
 20468  005FA0  0E00               	movlw	0
 20469  005FA2  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 20470  005FA4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20471  005FA6  0ED2               	movlw	low (_loRa+210)
 20472  005FA8  6F66               	movwf	memcpy@s1& (0+255),b
 20473  005FAA  0E02               	movlw	high (_loRa+210)
 20474  005FAC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20475  005FAE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20476  005FB0  0E02               	movlw	2
 20477  005FB2  6F68               	movwf	memcpy@n& (0+255),b
 20478  005FB4  EF44  F034         	goto	_memcpy	;wreg free
 20479  005FB8                     __end_of_PrepareSessionKeys:
 20480                           	opt stack 0
 20481                           tosu	equ	0xFFF
 20482                           tosh	equ	0xFFE
 20483                           tosl	equ	0xFFD
 20484                           pclath	equ	0xFFA
 20485                           tblptru	equ	0xFF8
 20486                           tblptrh	equ	0xFF7
 20487                           tblptrl	equ	0xFF6
 20488                           tablat	equ	0xFF5
 20489                           prodh	equ	0xFF4
 20490                           prodl	equ	0xFF3
 20491                           intcon	equ	0xFF2
 20492                           intcon2	equ	0xFF1
 20493                           intcon3	equ	0xFF0
 20494                           indf0	equ	0xFEF
 20495                           postinc0	equ	0xFEE
 20496                           fsr0h	equ	0xFEA
 20497                           fsr0l	equ	0xFE9
 20498                           wreg	equ	0xFE8
 20499                           postinc1	equ	0xFE6
 20500                           postdec1	equ	0xFE5
 20501                           plusw1	equ	0xFE3
 20502                           fsr1h	equ	0xFE2
 20503                           fsr1l	equ	0xFE1
 20504                           indf2	equ	0xFDF
 20505                           postinc2	equ	0xFDE
 20506                           postdec2	equ	0xFDD
 20507                           plusw2	equ	0xFDB
 20508                           fsr2h	equ	0xFDA
 20509                           fsr2l	equ	0xFD9
 20510                           status	equ	0xFD8
 20511                           
 20512 ;; *************** function _CheckMcastFlags *****************
 20513 ;; Defined at:
 20514 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20515 ;; Parameters:    Size  Location     Type
 20516 ;;  hdr             2    4[BANK0 ] PTR struct .
 20517 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20518 ;; Auto vars:     Size  Location     Type
 20519 ;;		None
 20520 ;; Return value:  Size  Location     Type
 20521 ;;                  1    wreg      unsigned char 
 20522 ;; Registers used:
 20523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20524 ;; Tracked objects:
 20525 ;;		On entry : F/2
 20526 ;;		On exit  : D/0
 20527 ;;		Unchanged: 0/0
 20528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20529 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20532 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20533 ;;Total ram usage:        2 bytes
 20534 ;; Hardware stack levels used:    1
 20535 ;; Hardware stack levels required when called:    7
 20536 ;; This function calls:
 20537 ;;		Nothing
 20538 ;; This function is called by:
 20539 ;;		_LORAWAN_RxDone
 20540 ;; This function uses a non-reentrant model
 20541 ;;
 20542                           
 20543                           	psect	text107
 20544  0060AA                     __ptext107:
 20545                           	opt stack 0
 20546  0060AA                     _CheckMcastFlags:
 20547                           	opt stack 19
 20548                           
 20549                           ; BSR set to: 2
 20550                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 20551                           
 20552                           ; BSR set to: 0
 20553                           ;incstack = 0
 20554  0060AA  0100               	movlb	0	; () banked
 20555  0060AC  EE20 F005          	lfsr	2,5
 20556  0060B0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20557  0060B2  26D9               	addwf	fsr2l,f,c
 20558  0060B4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20559  0060B6  22DA               	addwfc	fsr2h,f,c
 20560  0060B8  BADF               	btfsc	indf2,5,c
 20561  0060BA  0C00               	retlw	0
 20562                           
 20563                           ; BSR set to: 0
 20564  0060BC  EE20 F005          	lfsr	2,5
 20565  0060C0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20566  0060C2  26D9               	addwf	fsr2l,f,c
 20567  0060C4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20568  0060C6  22DA               	addwfc	fsr2h,f,c
 20569  0060C8  BCDF               	btfsc	indf2,6,c
 20570  0060CA  0C00               	retlw	0
 20571                           
 20572                           ; BSR set to: 0
 20573  0060CC  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 20574  0060D0  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 20575  0060D4  38DF               	swapf	223,w,c
 20576  0060D6  32E8               	rrcf	wreg,f,c
 20577  0060D8  0B07               	andlw	7
 20578  0060DA  0A03               	xorlw	3
 20579  0060DC  E001               	bz	l14064
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;lorawan.c: 2110: {
 20583                           ;lorawan.c: 2111: return 0;
 20584  0060DE  0C00               	retlw	0
 20585  0060E0                     l14064:
 20586                           
 20587                           ; BSR set to: 0
 20588                           ;lorawan.c: 2112: }
 20589                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 20590  0060E0  EE20 F005          	lfsr	2,5
 20591  0060E4  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20592  0060E6  26D9               	addwf	fsr2l,f,c
 20593  0060E8  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20594  0060EA  22DA               	addwfc	fsr2h,f,c
 20595  0060EC  50DF               	movf	223,w,c
 20596  0060EE  0B0F               	andlw	15
 20597  0060F0  E001               	bz	l14072
 20598  0060F2  0C00               	retlw	0
 20599  0060F4                     l14072:
 20600                           
 20601                           ; BSR set to: 0
 20602                           ;lorawan.c: 2118: else
 20603                           ;lorawan.c: 2119: {
 20604                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 20605  0060F4  EE20 F008          	lfsr	2,8
 20606  0060F8  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20607  0060FA  26D9               	addwf	fsr2l,f,c
 20608  0060FC  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20609  0060FE  22DA               	addwfc	fsr2h,f,c
 20610  006100  50DF               	movf	indf2,w,c
 20611  006102  E101               	bnz	l14078
 20612  006104  0C00               	retlw	0
 20613  006106                     l14078:
 20614                           
 20615                           ; BSR set to: 0
 20616                           ;lorawan.c: 2123: }
 20617                           ;lorawan.c: 2124: }
 20618                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 20619  006106  EE20 F005          	lfsr	2,5
 20620  00610A  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 20621  00610C  26D9               	addwf	fsr2l,f,c
 20622  00610E  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 20623  006110  22DA               	addwfc	fsr2h,f,c
 20624  006112  A8DF               	btfss	indf2,4,c
 20625  006114  0C01               	retlw	1
 20626                           
 20627                           ; BSR set to: 0
 20628                           ;lorawan.c: 2127: {
 20629                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 20630  006116  0102               	movlb	2	; () banked
 20631  006118  8700               	bsf	_loRa& (0+255),3,b
 20632                           
 20633                           ;lorawan.c: 2129: }
 20634                           ;lorawan.c: 2131: return 1;
 20635  00611A  0C01               	retlw	1	;funcret
 20636  00611C                     __end_of_CheckMcastFlags:
 20637                           	opt stack 0
 20638                           tosu	equ	0xFFF
 20639                           tosh	equ	0xFFE
 20640                           tosl	equ	0xFFD
 20641                           pclath	equ	0xFFA
 20642                           tblptru	equ	0xFF8
 20643                           tblptrh	equ	0xFF7
 20644                           tblptrl	equ	0xFF6
 20645                           tablat	equ	0xFF5
 20646                           prodh	equ	0xFF4
 20647                           prodl	equ	0xFF3
 20648                           intcon	equ	0xFF2
 20649                           intcon2	equ	0xFF1
 20650                           intcon3	equ	0xFF0
 20651                           indf0	equ	0xFEF
 20652                           postinc0	equ	0xFEE
 20653                           fsr0h	equ	0xFEA
 20654                           fsr0l	equ	0xFE9
 20655                           wreg	equ	0xFE8
 20656                           postinc1	equ	0xFE6
 20657                           postdec1	equ	0xFE5
 20658                           plusw1	equ	0xFE3
 20659                           fsr1h	equ	0xFE2
 20660                           fsr1l	equ	0xFE1
 20661                           indf2	equ	0xFDF
 20662                           postinc2	equ	0xFDE
 20663                           postdec2	equ	0xFDD
 20664                           plusw2	equ	0xFDB
 20665                           fsr2h	equ	0xFDA
 20666                           fsr2l	equ	0xFD9
 20667                           status	equ	0xFD8
 20668                           
 20669 ;; *************** function _CheckFlags *****************
 20670 ;; Defined at:
 20671 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20672 ;; Parameters:    Size  Location     Type
 20673 ;;  hdr             2    4[BANK0 ] PTR struct .
 20674 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20675 ;; Auto vars:     Size  Location     Type
 20676 ;;		None
 20677 ;; Return value:  Size  Location     Type
 20678 ;;                  1    wreg      void 
 20679 ;; Registers used:
 20680 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20681 ;; Tracked objects:
 20682 ;;		On entry : F/2
 20683 ;;		On exit  : D/0
 20684 ;;		Unchanged: 0/0
 20685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20690 ;;Total ram usage:        2 bytes
 20691 ;; Hardware stack levels used:    1
 20692 ;; Hardware stack levels required when called:    7
 20693 ;; This function calls:
 20694 ;;		Nothing
 20695 ;; This function is called by:
 20696 ;;		_LORAWAN_RxDone
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           
 20700                           	psect	text108
 20701  006718                     __ptext108:
 20702                           	opt stack 0
 20703  006718                     _CheckFlags:
 20704                           	opt stack 19
 20705                           
 20706                           ; BSR set to: 2
 20707                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 20708                           
 20709                           ;incstack = 0
 20710  006718  0100               	movlb	0	; () banked
 20711  00671A  EE20 F005          	lfsr	2,5
 20712  00671E  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20713  006720  26D9               	addwf	fsr2l,f,c
 20714  006722  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20715  006724  22DA               	addwfc	fsr2h,f,c
 20716  006726  AEDF               	btfss	indf2,7,c
 20717  006728  D002               	goto	l14112
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;lorawan.c: 2077: {
 20721                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 20722  00672A  0102               	movlb	2	; () banked
 20723  00672C  8D02               	bsf	(_loRa+2)& (0+255),6,b
 20724  00672E                     l14112:
 20725                           
 20726                           ;lorawan.c: 2079: }
 20727                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 20728  00672E  0100               	movlb	0	; () banked
 20729  006730  EE20 F005          	lfsr	2,5
 20730  006734  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20731  006736  26D9               	addwf	fsr2l,f,c
 20732  006738  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20733  00673A  22DA               	addwfc	fsr2h,f,c
 20734  00673C  A8DF               	btfss	indf2,4,c
 20735  00673E  D002               	goto	l14116
 20736                           
 20737                           ; BSR set to: 0
 20738                           ;lorawan.c: 2082: {
 20739                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 20740  006740  0102               	movlb	2	; () banked
 20741  006742  8700               	bsf	_loRa& (0+255),3,b
 20742  006744                     l14116:
 20743                           
 20744                           ;lorawan.c: 2084: }
 20745                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 20746  006744  0100               	movlb	0	; () banked
 20747  006746  EE20 F005          	lfsr	2,5
 20748  00674A  5164               	movf	CheckFlags@hdr& (0+255),w,b
 20749  00674C  26D9               	addwf	fsr2l,f,c
 20750  00674E  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 20751  006750  22DA               	addwfc	fsr2h,f,c
 20752  006752  ACDF               	btfss	indf2,6,c
 20753  006754  D002               	goto	l14120
 20754                           
 20755                           ; BSR set to: 0
 20756                           ;lorawan.c: 2087: {
 20757                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 20758  006756  0102               	movlb	2	; () banked
 20759  006758  8900               	bsf	_loRa& (0+255),4,b
 20760  00675A                     l14120:
 20761                           
 20762                           ;lorawan.c: 2089: }
 20763                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 20764  00675A  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 20765  00675E  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 20766  006762  0100               	movlb	0	; () banked
 20767  006764  38DF               	swapf	223,w,c
 20768  006766  32E8               	rrcf	wreg,f,c
 20769  006768  0B07               	andlw	7
 20770  00676A  0A05               	xorlw	5
 20771  00676C  A4D8               	btfss	status,2,c
 20772  00676E  0012               	return	
 20773                           
 20774                           ; BSR set to: 0
 20775                           ;lorawan.c: 2092: {
 20776                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 20777  006770  0102               	movlb	2	; () banked
 20778  006772  8300               	bsf	_loRa& (0+255),1,b
 20779  006774  0012               	return		;funcret
 20780  006776                     __end_of_CheckFlags:
 20781                           	opt stack 0
 20782                           tosu	equ	0xFFF
 20783                           tosh	equ	0xFFE
 20784                           tosl	equ	0xFFD
 20785                           pclath	equ	0xFFA
 20786                           tblptru	equ	0xFF8
 20787                           tblptrh	equ	0xFF7
 20788                           tblptrl	equ	0xFF6
 20789                           tablat	equ	0xFF5
 20790                           prodh	equ	0xFF4
 20791                           prodl	equ	0xFF3
 20792                           intcon	equ	0xFF2
 20793                           intcon2	equ	0xFF1
 20794                           intcon3	equ	0xFF0
 20795                           indf0	equ	0xFEF
 20796                           postinc0	equ	0xFEE
 20797                           fsr0h	equ	0xFEA
 20798                           fsr0l	equ	0xFE9
 20799                           wreg	equ	0xFE8
 20800                           postinc1	equ	0xFE6
 20801                           postdec1	equ	0xFE5
 20802                           plusw1	equ	0xFE3
 20803                           fsr1h	equ	0xFE2
 20804                           fsr1l	equ	0xFE1
 20805                           indf2	equ	0xFDF
 20806                           postinc2	equ	0xFDE
 20807                           postdec2	equ	0xFDD
 20808                           plusw2	equ	0xFDB
 20809                           fsr2h	equ	0xFDA
 20810                           fsr2l	equ	0xFD9
 20811                           status	equ	0xFD8
 20812                           
 20813 ;; *************** function _RADIO_FSKPacketSent *****************
 20814 ;; Defined at:
 20815 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20816 ;; Parameters:    Size  Location     Type
 20817 ;;		None
 20818 ;; Auto vars:     Size  Location     Type
 20819 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
 20820 ;;  irqFlags        1  126[BANK0 ] unsigned char 
 20821 ;; Return value:  Size  Location     Type
 20822 ;;                  1    wreg      void 
 20823 ;; Registers used:
 20824 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20825 ;; Tracked objects:
 20826 ;;		On entry : F/0
 20827 ;;		On exit  : C/0
 20828 ;;		Unchanged: 0/0
 20829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20831 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20832 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20833 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20834 ;;Total ram usage:       13 bytes
 20835 ;; Hardware stack levels used:    1
 20836 ;; Hardware stack levels required when called:   15
 20837 ;; This function calls:
 20838 ;;		_LORAWAN_TxDone
 20839 ;;		_RADIO_RegisterRead
 20840 ;;		_RADIO_WriteMode
 20841 ;;		_SwTimerReadValue
 20842 ;;		_SwTimerStop
 20843 ;; This function is called by:
 20844 ;;		_RADIO_DIO0
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848                           	psect	text109
 20849  003A20                     __ptext109:
 20850                           	opt stack 0
 20851  003A20                     _RADIO_FSKPacketSent:
 20852                           	opt stack 13
 20853                           
 20854                           ; BSR set to: 0
 20855                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 20856                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 20857                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 20858                           
 20859                           ;incstack = 0
 20860  003A20  0E3F               	movlw	63
 20861  003A22  ECAE  F039         	call	_RADIO_RegisterRead
 20862  003A26  6FDE               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 20863                           
 20864                           ; BSR set to: 0
 20865                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 20866  003A28  A7DE               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 20867  003A2A  0012               	return	
 20868                           
 20869                           ; BSR set to: 0
 20870                           ;radio_driver_SX1276.c: 1100: {
 20871                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 20872  003A2C  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 20873  003A30  0E00               	movlw	0
 20874  003A32  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 20875  003A34  EC6E  F028         	call	_RADIO_WriteMode
 20876                           
 20877                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 20878  003A38  0101               	movlb	1	; () banked
 20879  003A3A  918D               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 20880                           
 20881                           ; BSR set to: 1
 20882                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 20883  003A3C  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 20884  003A3E  ECB2  F03A         	call	_SwTimerStop
 20885                           
 20886                           ; BSR set to: 0
 20887                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 20888  003A42  0101               	movlb	1	; () banked
 20889  003A44  B98D               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 20890  003A46  0012               	return	
 20891                           
 20892                           ; BSR set to: 1
 20893                           ;radio_driver_SX1276.c: 1107: {
 20894                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 20895  003A48  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20896  003A4A  ECC6  F036         	call	_SwTimerReadValue
 20897  003A4E  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 20898  003A50  E107               	bnz	u17360
 20899  003A52  0E1F               	movlw	31
 20900  003A54  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
 20901  003A56  0EAC               	movlw	172
 20902  003A58  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 20903  003A5A  0EDF               	movlw	223
 20904  003A5C  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 20905  003A5E  E346               	bnc	l14938
 20906  003A60                     u17360:
 20907                           
 20908                           ; BSR set to: 0
 20909  003A60  0101               	movlb	1	; () banked
 20910  003A62  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20911  003A64  ECC6  F036         	call	_SwTimerReadValue
 20912  003A68  0E0D               	movlw	13
 20913  003A6A  D005               	goto	u17370
 20914  003A6C                     u17375:
 20915  003A6C  90D8               	bcf	status,0,c
 20916  003A6E  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 20917  003A70  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 20918  003A72  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 20919  003A74  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
 20920  003A76                     u17370:
 20921  003A76  2EE8               	decfsz	wreg,f,c
 20922  003A78  D7F9               	goto	u17375
 20923  003A7A  0E7D               	movlw	125
 20924  003A7C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20925  003A7E  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 20926  003A82  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 20927  003A86  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 20928  003A88  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 20929  003A8A  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20930  003A8C  50F3               	movf	prodl,w,c
 20931  003A8E  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20932  003A90  50F4               	movf	prodh,w,c
 20933  003A92  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20934  003A94  0E00               	movlw	0
 20935  003A96  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20936  003A98  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20937  003A9A  50F3               	movf	prodl,w,c
 20938  003A9C  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20939  003A9E  50F4               	movf	prodh,w,c
 20940  003AA0  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20941  003AA2  0E00               	movlw	0
 20942  003AA4  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20943  003AA6  0E7D               	movlw	125
 20944  003AA8  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20945  003AAA  50F3               	movf	prodl,w,c
 20946  003AAC  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20947  003AAE  50F4               	movf	prodh,w,c
 20948  003AB0  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20949  003AB2  0E00               	movlw	0
 20950  003AB4  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20951  003AB6  50F3               	movf	prodl,w,c
 20952  003AB8  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20953  003ABA  50F4               	movf	prodh,w,c
 20954  003ABC  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20955  003ABE  0E00               	movlw	0
 20956  003AC0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20957  003AC2  50F3               	movf	prodl,w,c
 20958  003AC4  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20959  003AC6  50F4               	movf	prodh,w,c
 20960  003AC8  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20961  003ACA  0E7D               	movlw	125
 20962  003ACC  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 20963  003ACE  50F3               	movf	prodl,w,c
 20964  003AD0  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20965  003AD2  0E00               	movlw	0
 20966  003AD4  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 20967  003AD6  50F3               	movf	prodl,w,c
 20968  003AD8  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20969  003ADA  0E00               	movlw	0
 20970  003ADC  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20971  003ADE  50F3               	movf	prodl,w,c
 20972  003AE0  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20973  003AE2  0E00               	movlw	0
 20974  003AE4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20975  003AE6  50F3               	movf	prodl,w,c
 20976  003AE8  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20977  003AEA  D045               	goto	L11
 20978  003AEC                     l14938:
 20979                           
 20980                           ; BSR set to: 0
 20981  003AEC  0101               	movlb	1	; () banked
 20982  003AEE  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20983  003AF0  ECC6  F036         	call	_SwTimerReadValue
 20984  003AF4  0E7D               	movlw	125
 20985  003AF6  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20986  003AF8  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 20987  003AFC  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 20988  003B00  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 20989  003B02  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 20990  003B04  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 20991  003B06  50F3               	movf	prodl,w,c
 20992  003B08  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 20993  003B0A  50F4               	movf	prodh,w,c
 20994  003B0C  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 20995  003B0E  0E00               	movlw	0
 20996  003B10  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 20997  003B12  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 20998  003B14  50F3               	movf	prodl,w,c
 20999  003B16  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21000  003B18  50F4               	movf	prodh,w,c
 21001  003B1A  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21002  003B1C  0E00               	movlw	0
 21003  003B1E  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21004  003B20  0E7D               	movlw	125
 21005  003B22  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21006  003B24  50F3               	movf	prodl,w,c
 21007  003B26  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21008  003B28  50F4               	movf	prodh,w,c
 21009  003B2A  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21010  003B2C  0E00               	movlw	0
 21011  003B2E  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21012  003B30  50F3               	movf	prodl,w,c
 21013  003B32  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21014  003B34  50F4               	movf	prodh,w,c
 21015  003B36  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21016  003B38  0E00               	movlw	0
 21017  003B3A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21018  003B3C  50F3               	movf	prodl,w,c
 21019  003B3E  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21020  003B40  50F4               	movf	prodh,w,c
 21021  003B42  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21022  003B44  0E7D               	movlw	125
 21023  003B46  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 21024  003B48  50F3               	movf	prodl,w,c
 21025  003B4A  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21026  003B4C  0E00               	movlw	0
 21027  003B4E  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 21028  003B50  50F3               	movf	prodl,w,c
 21029  003B52  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21030  003B54  0E00               	movlw	0
 21031  003B56  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 21032  003B58  50F3               	movf	prodl,w,c
 21033  003B5A  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21034  003B5C  0E00               	movlw	0
 21035  003B5E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 21036  003B60  50F3               	movf	prodl,w,c
 21037  003B62  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21038  003B64  0E0D               	movlw	13
 21039  003B66  D005               	goto	u17380
 21040  003B68                     u17385:
 21041  003B68  90D8               	bcf	status,0,c
 21042  003B6A  33D5               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 21043  003B6C  33D4               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 21044  003B6E  33D3               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 21045  003B70  33D2               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 21046  003B72                     u17380:
 21047  003B72  2EE8               	decfsz	wreg,f,c
 21048  003B74  D7F9               	goto	u17385
 21049  003B76                     L11:
 21050  003B76  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1215
 21051  003B7A  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1215+1
 21052  003B7E  C0D4  F0DC         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1215+2
 21053  003B82  C0D5  F0DD         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1215+3
 21054                           
 21055                           ; BSR set to: 0
 21056  003B86  51DA               	movf	_RADIO_FSKPacketSent$1215& (0+255),w,b
 21057  003B88  0820               	sublw	32
 21058  003B8A  6FD6               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21059  003B8C  0E4E               	movlw	78
 21060  003B8E  55DB               	subfwb	(_RADIO_FSKPacketSent$1215+1)& (0+255),w,b
 21061  003B90  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21062  003B92  0E00               	movlw	0
 21063  003B94  55DC               	subfwb	(_RADIO_FSKPacketSent$1215+2)& (0+255),w,b
 21064  003B96  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21065  003B98  0E00               	movlw	0
 21066  003B9A  55DD               	subfwb	(_RADIO_FSKPacketSent$1215+3)& (0+255),w,b
 21067  003B9C  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21068                           
 21069                           ; BSR set to: 0
 21070                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21071  003B9E  0101               	movlb	1	; () banked
 21072  003BA0  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21073  003BA2  ECB2  F03A         	call	_SwTimerStop
 21074                           
 21075                           ; BSR set to: 0
 21076                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21077  003BA6  C0D6  F0A0         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21078  003BAA  C0D7  F0A1         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21079  003BAE  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
 21080  003BB2                     __end_of_RADIO_FSKPacketSent:
 21081                           	opt stack 0
 21082                           tosu	equ	0xFFF
 21083                           tosh	equ	0xFFE
 21084                           tosl	equ	0xFFD
 21085                           pclath	equ	0xFFA
 21086                           tblptru	equ	0xFF8
 21087                           tblptrh	equ	0xFF7
 21088                           tblptrl	equ	0xFF6
 21089                           tablat	equ	0xFF5
 21090                           prodh	equ	0xFF4
 21091                           prodl	equ	0xFF3
 21092                           intcon	equ	0xFF2
 21093                           intcon2	equ	0xFF1
 21094                           intcon3	equ	0xFF0
 21095                           indf0	equ	0xFEF
 21096                           postinc0	equ	0xFEE
 21097                           fsr0h	equ	0xFEA
 21098                           fsr0l	equ	0xFE9
 21099                           wreg	equ	0xFE8
 21100                           postinc1	equ	0xFE6
 21101                           postdec1	equ	0xFE5
 21102                           plusw1	equ	0xFE3
 21103                           fsr1h	equ	0xFE2
 21104                           fsr1l	equ	0xFE1
 21105                           indf2	equ	0xFDF
 21106                           postinc2	equ	0xFDE
 21107                           postdec2	equ	0xFDD
 21108                           plusw2	equ	0xFDB
 21109                           fsr2h	equ	0xFDA
 21110                           fsr2l	equ	0xFD9
 21111                           status	equ	0xFD8
 21112                           
 21113 ;; *************** function _LORAWAN_TxDone *****************
 21114 ;; Defined at:
 21115 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21116 ;; Parameters:    Size  Location     Type
 21117 ;;  timeOnAir       2   64[BANK0 ] unsigned int 
 21118 ;; Auto vars:     Size  Location     Type
 21119 ;;  minim           4  109[BANK0 ] unsigned long 
 21120 ;;  ticks           4  105[BANK0 ] unsigned long 
 21121 ;;  delta           4  101[BANK0 ] unsigned long 
 21122 ;;  i               1  113[BANK0 ] unsigned char 
 21123 ;;  found           1  100[BANK0 ] unsigned char 
 21124 ;; Return value:  Size  Location     Type
 21125 ;;                  1    wreg      void 
 21126 ;; Registers used:
 21127 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21128 ;; Tracked objects:
 21129 ;;		On entry : E/1
 21130 ;;		On exit  : D/0
 21131 ;;		Unchanged: 0/0
 21132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21134 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21135 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21136 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21137 ;;Total ram usage:       50 bytes
 21138 ;; Hardware stack levels used:    1
 21139 ;; Hardware stack levels required when called:   14
 21140 ;; This function calls:
 21141 ;;		_LORAWAN_EnterContinuousReceive
 21142 ;;		_RADIO_GetStatus
 21143 ;;		_RxDataDone
 21144 ;;		_SwTimerIsRunning
 21145 ;;		_SwTimerReadValue
 21146 ;;		_SwTimerSetTimeout
 21147 ;;		_SwTimerStart
 21148 ;;		_SwTimerStop
 21149 ;;		___lldiv
 21150 ;; This function is called by:
 21151 ;;		_RADIO_TxDone
 21152 ;;		_RADIO_FSKPacketSent
 21153 ;;		_RADIO_WatchdogTimeout
 21154 ;; This function uses a non-reentrant model
 21155 ;;
 21156                           
 21157                           	psect	text110
 21158  000B18                     __ptext110:
 21159                           	opt stack 0
 21160  000B18                     _LORAWAN_TxDone:
 21161                           	opt stack 13
 21162                           
 21163                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 21164                           
 21165                           ;incstack = 0
 21166  000B18  0102               	movlb	2	; () banked
 21167  000B1A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 21168  000B1C  EFAA  F009         	goto	l14746
 21169                           
 21170                           ; BSR set to: 2
 21171                           ;lorawan_eu.c: 368: {
 21172                           ;lorawan_eu.c: 369: bool found = 0;
 21173  000B20  0100               	movlb	0	; () banked
 21174  000B22  6BC4               	clrf	LORAWAN_TxDone@found& (0+255),b
 21175                           
 21176                           ;lorawan_eu.c: 370: uint8_t i;
 21177                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 21178  000B24  6BC5               	clrf	LORAWAN_TxDone@delta& (0+255),b
 21179  000B26  6BC6               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21180  000B28  6BC7               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21181  000B2A  6BC8               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21182  000B2C  69CD               	setf	LORAWAN_TxDone@minim& (0+255),b
 21183  000B2E  69CE               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21184  000B30  69CF               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21185  000B32  69D0               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21186                           
 21187                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 21188  000B34  0102               	movlb	2	; () banked
 21189  000B36  6BF1               	clrf	(_loRa+241)& (0+255),b
 21190                           
 21191                           ; BSR set to: 2
 21192                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 21193  000B38  5102               	movf	(_loRa+2)& (0+255),w,b
 21194  000B3A  0BF0               	andlw	-16
 21195  000B3C  0902               	iorlw	2
 21196  000B3E  6F02               	movwf	(_loRa+2)& (0+255),b
 21197                           
 21198                           ; BSR set to: 2
 21199                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 21200  000B40  C2DA  F0D1         	movff	_loRa+218,LORAWAN_TxDone@i
 21201                           
 21202                           ; BSR set to: 2
 21203                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 21204  000B44  A500               	btfss	_loRa& (0+255),2,b
 21205  000B46  D110               	goto	l14676
 21206                           
 21207                           ; BSR set to: 2
 21208                           ;lorawan_eu.c: 382: {
 21209                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21210  000B48  0E7D               	movlw	low _rxWindowOffset
 21211  000B4A  2517               	addwf	(_loRa+23)& (0+255),w,b
 21212  000B4C  6EF6               	movwf	tblptrl,c
 21213  000B4E  6AF7               	clrf	tblptrh,c
 21214  000B50  0EFF               	movlw	high _rxWindowOffset
 21215  000B52  22F7               	addwfc	tblptrh,f,c
 21216  000B54                     	if	1	;There are 3 active tblptr bytes
 21217  000B54  6AF8               	clrf	tblptru,c
 21218  000B56  0E00               	movlw	low (__mediumconst shr (0+16))
 21219  000B58  22F8               	addwfc	tblptru,f,c
 21220  000B5A                     	endif
 21221  000B5A  0008               	tblrd		*
 21222  000B5C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21223  000B60  5198               	movf	(_loRa+152)& (0+255),w,b
 21224  000B62  0100               	movlb	0	; () banked
 21225  000B64  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21226  000B66  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21227  000B68  0E00               	movlw	0
 21228  000B6A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21229  000B6C  0EFF               	movlw	255
 21230  000B6E  0102               	movlb	2	; () banked
 21231  000B70  2199               	addwfc	(_loRa+153)& (0+255),w,b
 21232  000B72  0100               	movlb	0	; () banked
 21233  000B74  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21234  000B76  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21235  000B78  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21236  000B7A  0E0C               	movlw	12
 21237  000B7C                     u16935:
 21238  000B7C  90D8               	bcf	status,0,c
 21239  000B7E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21240  000B80  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21241  000B82  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21242  000B84  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21243  000B86  2EE8               	decfsz	wreg,f,c
 21244  000B88  D7F9               	goto	u16935
 21245  000B8A  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21246  000B8E  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21247  000B92  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21248  000B96  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21249  000B9A  0E7D               	movlw	125
 21250  000B9C  6F68               	movwf	___lldiv@divisor& (0+255),b
 21251  000B9E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21252  000BA0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21253  000BA2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21254  000BA4  EC1A  F030         	call	___lldiv	;wreg free
 21255  000BA8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21256  000BAC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21257  000BB0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21258  000BB4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21259  000BB8  0102               	movlb	2	; () banked
 21260  000BBA  51E2               	movf	(_loRa+226)& (0+255),w,b
 21261  000BBC  ECA5  F036         	call	_SwTimerSetTimeout
 21262                           
 21263                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21264  000BC0  0E7D               	movlw	low _rxWindowOffset
 21265  000BC2  0102               	movlb	2	; () banked
 21266  000BC4  251C               	addwf	(_loRa+28)& (0+255),w,b
 21267  000BC6  6EF6               	movwf	tblptrl,c
 21268  000BC8  6AF7               	clrf	tblptrh,c
 21269  000BCA  0EFF               	movlw	high _rxWindowOffset
 21270  000BCC  22F7               	addwfc	tblptrh,f,c
 21271  000BCE                     	if	1	;There are 3 active tblptr bytes
 21272  000BCE  6AF8               	clrf	tblptru,c
 21273  000BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 21274  000BD2  22F8               	addwfc	tblptru,f,c
 21275  000BD4                     	endif
 21276  000BD4  0008               	tblrd		*
 21277  000BD6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21278  000BDA  519A               	movf	(_loRa+154)& (0+255),w,b
 21279  000BDC  0100               	movlb	0	; () banked
 21280  000BDE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21281  000BE0  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21282  000BE2  0E00               	movlw	0
 21283  000BE4  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21284  000BE6  0EFF               	movlw	255
 21285  000BE8  0102               	movlb	2	; () banked
 21286  000BEA  219B               	addwfc	(_loRa+155)& (0+255),w,b
 21287  000BEC  0100               	movlb	0	; () banked
 21288  000BEE  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21289  000BF0  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21290  000BF2  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21291  000BF4  0E0C               	movlw	12
 21292  000BF6                     u16945:
 21293  000BF6  90D8               	bcf	status,0,c
 21294  000BF8  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21295  000BFA  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21296  000BFC  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21297  000BFE  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21298  000C00  2EE8               	decfsz	wreg,f,c
 21299  000C02  D7F9               	goto	u16945
 21300  000C04  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21301  000C08  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21302  000C0C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21303  000C10  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21304  000C14  0E7D               	movlw	125
 21305  000C16  6F68               	movwf	___lldiv@divisor& (0+255),b
 21306  000C18  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21307  000C1A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21308  000C1C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21309  000C1E  EC1A  F030         	call	___lldiv	;wreg free
 21310  000C22  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21311  000C26  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21312  000C2A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21313  000C2E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21314  000C32  0102               	movlb	2	; () banked
 21315  000C34  51E3               	movf	(_loRa+227)& (0+255),w,b
 21316  000C36  ECA5  F036         	call	_SwTimerSetTimeout
 21317                           
 21318                           ; BSR set to: 0
 21319                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 21320  000C3A  0102               	movlb	2	; () banked
 21321  000C3C  51E2               	movf	(_loRa+226)& (0+255),w,b
 21322  000C3E  EC58  F02E         	call	_SwTimerStart
 21323                           
 21324                           ; BSR set to: 0
 21325                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 21326  000C42  0102               	movlb	2	; () banked
 21327  000C44  51E3               	movf	(_loRa+227)& (0+255),w,b
 21328  000C46  EC58  F02E         	call	_SwTimerStart
 21329                           
 21330                           ; BSR set to: 0
 21331                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 21332  000C4A  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21333  000C4E  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21334  000C52  0102               	movlb	2	; () banked
 21335  000C54  51DB               	movf	(_loRa+219)& (0+255),w,b
 21336  000C56  0100               	movlb	0	; () banked
 21337  000C58  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21338  000C5A  0102               	movlb	2	; () banked
 21339  000C5C  51DC               	movf	(_loRa+220)& (0+255),w,b
 21340  000C5E  0100               	movlb	0	; () banked
 21341  000C60  6FA5               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21342  000C62  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21343  000C64  6BA7               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 21344  000C66  0ED6               	movlw	214
 21345  000C68  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21346  000C6A  CFF3 F0A8          	movff	prodl,??_LORAWAN_TxDone+6
 21347  000C6E  CFF4 F0A9          	movff	prodh,??_LORAWAN_TxDone+7
 21348  000C72  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21349  000C74  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21350  000C76  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21351  000C78  50F3               	movf	prodl,w,c
 21352  000C7A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21353  000C7C  50F4               	movf	prodh,w,c
 21354  000C7E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21355  000C80  0E00               	movlw	0
 21356  000C82  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21357  000C84  0E0B               	movlw	11
 21358  000C86  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21359  000C88  50F3               	movf	prodl,w,c
 21360  000C8A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21361  000C8C  50F4               	movf	prodh,w,c
 21362  000C8E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21363  000C90  0E00               	movlw	0
 21364  000C92  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21365  000C94  0ED6               	movlw	214
 21366  000C96  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21367  000C98  50F3               	movf	prodl,w,c
 21368  000C9A  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21369  000C9C  50F4               	movf	prodh,w,c
 21370  000C9E  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21371  000CA0  0E0B               	movlw	11
 21372  000CA2  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21373  000CA4  50F3               	movf	prodl,w,c
 21374  000CA6  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21375  000CA8  50F4               	movf	prodh,w,c
 21376  000CAA  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21377  000CAC  0E00               	movlw	0
 21378  000CAE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21379  000CB0  50F3               	movf	prodl,w,c
 21380  000CB2  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 21381  000CB4  50F4               	movf	prodh,w,c
 21382  000CB6  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21383  000CB8  0ED6               	movlw	214
 21384  000CBA  03A7               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 21385  000CBC  50F3               	movf	prodl,w,c
 21386  000CBE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21387  000CC0  0E0B               	movlw	11
 21388  000CC2  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 21389  000CC4  50F3               	movf	prodl,w,c
 21390  000CC6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21391  000CC8  0E00               	movlw	0
 21392  000CCA  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21393  000CCC  50F3               	movf	prodl,w,c
 21394  000CCE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21395  000CD0  0E00               	movlw	0
 21396  000CD2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21397  000CD4  50F3               	movf	prodl,w,c
 21398  000CD6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 21399  000CD8  0EFF               	movlw	255
 21400  000CDA  25A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21401  000CDC  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21402  000CDE  0EFF               	movlw	255
 21403  000CE0  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21404  000CE2  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21405  000CE4  0EFF               	movlw	255
 21406  000CE6  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21407  000CE8  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21408  000CEA  0EFF               	movlw	255
 21409  000CEC  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21410  000CEE  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21411  000CF0  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21412  000CF2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21413  000CF4  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21414  000CF8  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21415  000CFC  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21416  000CFE  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21417  000D00  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21418  000D02  50F3               	movf	prodl,w,c
 21419  000D04  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21420  000D06  50F4               	movf	prodh,w,c
 21421  000D08  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21422  000D0A  0E00               	movlw	0
 21423  000D0C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21424  000D0E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21425  000D10  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21426  000D12  50F3               	movf	prodl,w,c
 21427  000D14  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21428  000D16  50F4               	movf	prodh,w,c
 21429  000D18  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21430  000D1A  0E00               	movlw	0
 21431  000D1C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21432  000D1E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21433  000D20  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21434  000D22  50F3               	movf	prodl,w,c
 21435  000D24  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21436  000D26  50F4               	movf	prodh,w,c
 21437  000D28  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21438  000D2A  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21439  000D2C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21440  000D2E  50F3               	movf	prodl,w,c
 21441  000D30  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21442  000D32  50F4               	movf	prodh,w,c
 21443  000D34  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21444  000D36  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21445  000D38  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21446  000D3A  50F3               	movf	prodl,w,c
 21447  000D3C  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21448  000D3E  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21449  000D40  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21450  000D42  50F3               	movf	prodl,w,c
 21451  000D44  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21452  000D46  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21453  000D48  0D0E               	mullw	14
 21454  000D4A  0E08               	movlw	low (_Channels+8)
 21455  000D4C  24F3               	addwf	prodl,w,c
 21456  000D4E  6ED9               	movwf	fsr2l,c
 21457  000D50  0E04               	movlw	high (_Channels+8)
 21458  000D52  20F4               	addwfc	prodh,w,c
 21459  000D54  6EDA               	movwf	fsr2h,c
 21460  000D56  C0B0  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 21461  000D5A  C0B1  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 21462  000D5E  C0B2  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 21463  000D62  C0B3  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 21464                           
 21465                           ;lorawan_eu.c: 389: }
 21466  000D66  D11D               	goto	l14686
 21467  000D68                     l14676:
 21468                           
 21469                           ; BSR set to: 2
 21470                           ;lorawan_eu.c: 390: else
 21471                           ;lorawan_eu.c: 391: {
 21472                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21473  000D68  0E7D               	movlw	low _rxWindowOffset
 21474  000D6A  2517               	addwf	(_loRa+23)& (0+255),w,b
 21475  000D6C  6EF6               	movwf	tblptrl,c
 21476  000D6E  6AF7               	clrf	tblptrh,c
 21477  000D70  0EFF               	movlw	high _rxWindowOffset
 21478  000D72  22F7               	addwfc	tblptrh,f,c
 21479  000D74                     	if	1	;There are 3 active tblptr bytes
 21480  000D74  6AF8               	clrf	tblptru,c
 21481  000D76  0E00               	movlw	low (__mediumconst shr (0+16))
 21482  000D78  22F8               	addwfc	tblptru,f,c
 21483  000D7A                     	endif
 21484  000D7A  0008               	tblrd		*
 21485  000D7C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21486  000D80  5194               	movf	(_loRa+148)& (0+255),w,b
 21487  000D82  0100               	movlb	0	; () banked
 21488  000D84  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21489  000D86  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21490  000D88  0E00               	movlw	0
 21491  000D8A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21492  000D8C  0EFF               	movlw	255
 21493  000D8E  0102               	movlb	2	; () banked
 21494  000D90  2195               	addwfc	(_loRa+149)& (0+255),w,b
 21495  000D92  0100               	movlb	0	; () banked
 21496  000D94  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21497  000D96  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21498  000D98  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21499  000D9A  0E0C               	movlw	12
 21500  000D9C                     u16955:
 21501  000D9C  90D8               	bcf	status,0,c
 21502  000D9E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21503  000DA0  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21504  000DA2  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21505  000DA4  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21506  000DA6  2EE8               	decfsz	wreg,f,c
 21507  000DA8  D7F9               	goto	u16955
 21508  000DAA  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21509  000DAE  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21510  000DB2  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21511  000DB6  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21512  000DBA  0E7D               	movlw	125
 21513  000DBC  6F68               	movwf	___lldiv@divisor& (0+255),b
 21514  000DBE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21515  000DC0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21516  000DC2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21517  000DC4  EC1A  F030         	call	___lldiv	;wreg free
 21518  000DC8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21519  000DCC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21520  000DD0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21521  000DD4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21522  000DD8  0102               	movlb	2	; () banked
 21523  000DDA  51E4               	movf	(_loRa+228)& (0+255),w,b
 21524  000DDC  ECA5  F036         	call	_SwTimerSetTimeout
 21525                           
 21526                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21527  000DE0  0E7D               	movlw	low _rxWindowOffset
 21528  000DE2  0102               	movlb	2	; () banked
 21529  000DE4  251C               	addwf	(_loRa+28)& (0+255),w,b
 21530  000DE6  6EF6               	movwf	tblptrl,c
 21531  000DE8  6AF7               	clrf	tblptrh,c
 21532  000DEA  0EFF               	movlw	high _rxWindowOffset
 21533  000DEC  22F7               	addwfc	tblptrh,f,c
 21534  000DEE                     	if	1	;There are 3 active tblptr bytes
 21535  000DEE  6AF8               	clrf	tblptru,c
 21536  000DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 21537  000DF2  22F8               	addwfc	tblptru,f,c
 21538  000DF4                     	endif
 21539  000DF4  0008               	tblrd		*
 21540  000DF6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 21541  000DFA  5196               	movf	(_loRa+150)& (0+255),w,b
 21542  000DFC  0100               	movlb	0	; () banked
 21543  000DFE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21544  000E00  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21545  000E02  0E00               	movlw	0
 21546  000E04  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21547  000E06  0EFF               	movlw	255
 21548  000E08  0102               	movlb	2	; () banked
 21549  000E0A  2197               	addwfc	(_loRa+151)& (0+255),w,b
 21550  000E0C  0100               	movlb	0	; () banked
 21551  000E0E  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21552  000E10  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21553  000E12  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21554  000E14  0E0C               	movlw	12
 21555  000E16                     u16965:
 21556  000E16  90D8               	bcf	status,0,c
 21557  000E18  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21558  000E1A  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21559  000E1C  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21560  000E1E  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21561  000E20  2EE8               	decfsz	wreg,f,c
 21562  000E22  D7F9               	goto	u16965
 21563  000E24  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21564  000E28  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21565  000E2C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21566  000E30  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21567  000E34  0E7D               	movlw	125
 21568  000E36  6F68               	movwf	___lldiv@divisor& (0+255),b
 21569  000E38  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 21570  000E3A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 21571  000E3C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 21572  000E3E  EC1A  F030         	call	___lldiv	;wreg free
 21573  000E42  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21574  000E46  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21575  000E4A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21576  000E4E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21577  000E52  0102               	movlb	2	; () banked
 21578  000E54  51E5               	movf	(_loRa+229)& (0+255),w,b
 21579  000E56  ECA5  F036         	call	_SwTimerSetTimeout
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 21583  000E5A  0102               	movlb	2	; () banked
 21584  000E5C  51E4               	movf	(_loRa+228)& (0+255),w,b
 21585  000E5E  EC58  F02E         	call	_SwTimerStart
 21586                           
 21587                           ; BSR set to: 0
 21588                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 21589  000E62  0102               	movlb	2	; () banked
 21590  000E64  5112               	movf	(_loRa+18)& (0+255),w,b
 21591  000E66  E103               	bnz	l14684
 21592                           
 21593                           ; BSR set to: 2
 21594                           ;lorawan_eu.c: 396: {
 21595                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 21596  000E68  51E5               	movf	(_loRa+229)& (0+255),w,b
 21597  000E6A  EC58  F02E         	call	_SwTimerStart
 21598  000E6E                     l14684:
 21599                           
 21600                           ;lorawan_eu.c: 398: }
 21601                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 21602  000E6E  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 21603  000E72  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 21604  000E76  EE22  F0DB         	lfsr	2,_loRa+219
 21605  000E7A  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 21606  000E7E  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+3
 21607  000E82  0100               	movlb	0	; () banked
 21608  000E84  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21609  000E86  0D0E               	mullw	14
 21610  000E88  0E06               	movlw	low (_Channels+6)
 21611  000E8A  24F3               	addwf	prodl,w,c
 21612  000E8C  6ED9               	movwf	fsr2l,c
 21613  000E8E  0E04               	movlw	high (_Channels+6)
 21614  000E90  20F4               	addwfc	prodh,w,c
 21615  000E92  6EDA               	movwf	fsr2h,c
 21616  000E94  CFDE F0A6          	movff	postinc2,??_LORAWAN_TxDone+4
 21617  000E98  CFDD F0A7          	movff	postdec2,??_LORAWAN_TxDone+5
 21618  000E9C  51A6               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 21619  000E9E  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 21620  000EA0  51A7               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 21621  000EA2  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 21622  000EA4  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 21623  000EA6  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 21624  000EA8  29A8               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 21625  000EAA  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 21626  000EAC  0E00               	movlw	0
 21627  000EAE  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 21628  000EB0  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 21629  000EB2  0E00               	movlw	0
 21630  000EB4  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 21631  000EB6  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 21632  000EB8  0E00               	movlw	0
 21633  000EBA  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 21634  000EBC  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 21635  000EBE  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 21636  000EC0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21637  000EC2  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 21638  000EC6  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 21639  000ECA  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 21640  000ECC  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 21641  000ECE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21642  000ED0  50F3               	movf	prodl,w,c
 21643  000ED2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21644  000ED4  50F4               	movf	prodh,w,c
 21645  000ED6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21646  000ED8  0E00               	movlw	0
 21647  000EDA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21648  000EDC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21649  000EDE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21650  000EE0  50F3               	movf	prodl,w,c
 21651  000EE2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 21652  000EE4  50F4               	movf	prodh,w,c
 21653  000EE6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21654  000EE8  0E00               	movlw	0
 21655  000EEA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21656  000EEC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 21657  000EEE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21658  000EF0  50F3               	movf	prodl,w,c
 21659  000EF2  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21660  000EF4  50F4               	movf	prodh,w,c
 21661  000EF6  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21662  000EF8  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21663  000EFA  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21664  000EFC  50F3               	movf	prodl,w,c
 21665  000EFE  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 21666  000F00  50F4               	movf	prodh,w,c
 21667  000F02  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21668  000F04  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 21669  000F06  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21670  000F08  50F3               	movf	prodl,w,c
 21671  000F0A  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21672  000F0C  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 21673  000F0E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21674  000F10  50F3               	movf	prodl,w,c
 21675  000F12  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 21676  000F14  0EFF               	movlw	255
 21677  000F16  25B0               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 21678  000F18  6FB4               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 21679  000F1A  0EFF               	movlw	255
 21680  000F1C  21B1               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 21681  000F1E  6FB5               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 21682  000F20  0EFF               	movlw	255
 21683  000F22  21B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 21684  000F24  6FB6               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 21685  000F26  0EFF               	movlw	255
 21686  000F28  21B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 21687  000F2A  6FB7               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 21688  000F2C  51B4               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 21689  000F2E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21690  000F30  CFF3 F0B8          	movff	prodl,??_LORAWAN_TxDone+22
 21691  000F34  CFF4 F0B9          	movff	prodh,??_LORAWAN_TxDone+23
 21692  000F38  6BBA               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 21693  000F3A  6BBB               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 21694  000F3C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21695  000F3E  50F3               	movf	prodl,w,c
 21696  000F40  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21697  000F42  50F4               	movf	prodh,w,c
 21698  000F44  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21699  000F46  0E00               	movlw	0
 21700  000F48  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21701  000F4A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21702  000F4C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21703  000F4E  50F3               	movf	prodl,w,c
 21704  000F50  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 21705  000F52  50F4               	movf	prodh,w,c
 21706  000F54  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21707  000F56  0E00               	movlw	0
 21708  000F58  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21709  000F5A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 21710  000F5C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21711  000F5E  50F3               	movf	prodl,w,c
 21712  000F60  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21713  000F62  50F4               	movf	prodh,w,c
 21714  000F64  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21715  000F66  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21716  000F68  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21717  000F6A  50F3               	movf	prodl,w,c
 21718  000F6C  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 21719  000F6E  50F4               	movf	prodh,w,c
 21720  000F70  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21721  000F72  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 21722  000F74  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21723  000F76  50F3               	movf	prodl,w,c
 21724  000F78  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21725  000F7A  51B7               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 21726  000F7C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21727  000F7E  50F3               	movf	prodl,w,c
 21728  000F80  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 21729  000F82  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21730  000F84  0D0E               	mullw	14
 21731  000F86  0E08               	movlw	low (_Channels+8)
 21732  000F88  24F3               	addwf	prodl,w,c
 21733  000F8A  6ED9               	movwf	fsr2l,c
 21734  000F8C  0E04               	movlw	high (_Channels+8)
 21735  000F8E  20F4               	addwfc	prodh,w,c
 21736  000F90  6EDA               	movwf	fsr2h,c
 21737  000F92  C0B8  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 21738  000F96  C0B9  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 21739  000F9A  C0BA  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 21740  000F9E  C0BB  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 21741  000FA2                     l14686:
 21742                           
 21743                           ; BSR set to: 0
 21744                           ;lorawan_eu.c: 401: }
 21745                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 21746  000FA2  0102               	movlb	2	; () banked
 21747  000FA4  51E9               	movf	(_loRa+233)& (0+255),w,b
 21748  000FA6  EC48  F03A         	call	_SwTimerIsRunning
 21749  000FAA  0900               	iorlw	0
 21750  000FAC  E101 D0C8          	bz	l14698
 21751                           
 21752                           ; BSR set to: 0
 21753                           ;lorawan_eu.c: 404: {
 21754                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 21755  000FB0  0102               	movlb	2	; () banked
 21756  000FB2  51E9               	movf	(_loRa+233)& (0+255),w,b
 21757  000FB4  ECB2  F03A         	call	_SwTimerStop
 21758                           
 21759                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 21760  000FB8  0102               	movlb	2	; () banked
 21761  000FBA  51E9               	movf	(_loRa+233)& (0+255),w,b
 21762  000FBC  ECC6  F036         	call	_SwTimerReadValue
 21763  000FC0  C08D  F0C9         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 21764  000FC4  C08E  F0CA         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 21765  000FC8  C08F  F0CB         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 21766  000FCC  C090  F0CC         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 21770  000FD0  51CC               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 21771  000FD2  E107               	bnz	u16990
 21772  000FD4  0E1F               	movlw	31
 21773  000FD6  5DC9               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 21774  000FD8  0EAC               	movlw	172
 21775  000FDA  59CA               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 21776  000FDC  0EDF               	movlw	223
 21777  000FDE  59CB               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 21778  000FE0  E34A               	bnc	l14694
 21779  000FE2                     u16990:
 21780                           
 21781                           ; BSR set to: 0
 21782  000FE2  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21783  000FE6  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21784  000FEA  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21785  000FEE  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21786  000FF2  0E0D               	movlw	13
 21787  000FF4  D005               	goto	u17000
 21788  000FF6                     u17005:
 21789  000FF6  90D8               	bcf	status,0,c
 21790  000FF8  33A5               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21791  000FFA  33A4               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21792  000FFC  33A3               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21793  000FFE  33A2               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 21794  001000                     u17000:
 21795  001000  2EE8               	decfsz	wreg,f,c
 21796  001002  D7F9               	goto	u17005
 21797  001004  0E7D               	movlw	125
 21798  001006  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21799  001008  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21800  00100C  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21801  001010  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21802  001012  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21803  001014  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21804  001016  50F3               	movf	prodl,w,c
 21805  001018  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21806  00101A  50F4               	movf	prodh,w,c
 21807  00101C  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21808  00101E  0E00               	movlw	0
 21809  001020  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21810  001022  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21811  001024  50F3               	movf	prodl,w,c
 21812  001026  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21813  001028  50F4               	movf	prodh,w,c
 21814  00102A  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21815  00102C  0E00               	movlw	0
 21816  00102E  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21817  001030  0E7D               	movlw	125
 21818  001032  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21819  001034  50F3               	movf	prodl,w,c
 21820  001036  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21821  001038  50F4               	movf	prodh,w,c
 21822  00103A  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21823  00103C  0E00               	movlw	0
 21824  00103E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21825  001040  50F3               	movf	prodl,w,c
 21826  001042  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21827  001044  50F4               	movf	prodh,w,c
 21828  001046  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21829  001048  0E00               	movlw	0
 21830  00104A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21831  00104C  50F3               	movf	prodl,w,c
 21832  00104E  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21833  001050  50F4               	movf	prodh,w,c
 21834  001052  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21835  001054  0E7D               	movlw	125
 21836  001056  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21837  001058  50F3               	movf	prodl,w,c
 21838  00105A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21839  00105C  0E00               	movlw	0
 21840  00105E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21841  001060  50F3               	movf	prodl,w,c
 21842  001062  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21843  001064  0E00               	movlw	0
 21844  001066  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21845  001068  50F3               	movf	prodl,w,c
 21846  00106A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21847  00106C  0E00               	movlw	0
 21848  00106E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21849  001070  50F3               	movf	prodl,w,c
 21850  001072  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21851  001074  D049               	goto	L12
 21852  001076                     l14694:
 21853                           
 21854                           ; BSR set to: 0
 21855  001076  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 21856  00107A  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 21857  00107E  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 21858  001082  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 21859  001086  0E7D               	movlw	125
 21860  001088  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21861  00108A  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 21862  00108E  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 21863  001092  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 21864  001094  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 21865  001096  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21866  001098  50F3               	movf	prodl,w,c
 21867  00109A  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21868  00109C  50F4               	movf	prodh,w,c
 21869  00109E  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21870  0010A0  0E00               	movlw	0
 21871  0010A2  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21872  0010A4  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21873  0010A6  50F3               	movf	prodl,w,c
 21874  0010A8  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21875  0010AA  50F4               	movf	prodh,w,c
 21876  0010AC  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21877  0010AE  0E00               	movlw	0
 21878  0010B0  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21879  0010B2  0E7D               	movlw	125
 21880  0010B4  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21881  0010B6  50F3               	movf	prodl,w,c
 21882  0010B8  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21883  0010BA  50F4               	movf	prodh,w,c
 21884  0010BC  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21885  0010BE  0E00               	movlw	0
 21886  0010C0  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21887  0010C2  50F3               	movf	prodl,w,c
 21888  0010C4  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21889  0010C6  50F4               	movf	prodh,w,c
 21890  0010C8  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21891  0010CA  0E00               	movlw	0
 21892  0010CC  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21893  0010CE  50F3               	movf	prodl,w,c
 21894  0010D0  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21895  0010D2  50F4               	movf	prodh,w,c
 21896  0010D4  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21897  0010D6  0E7D               	movlw	125
 21898  0010D8  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 21899  0010DA  50F3               	movf	prodl,w,c
 21900  0010DC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21901  0010DE  0E00               	movlw	0
 21902  0010E0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21903  0010E2  50F3               	movf	prodl,w,c
 21904  0010E4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21905  0010E6  0E00               	movlw	0
 21906  0010E8  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21907  0010EA  50F3               	movf	prodl,w,c
 21908  0010EC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21909  0010EE  0E00               	movlw	0
 21910  0010F0  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 21911  0010F2  50F3               	movf	prodl,w,c
 21912  0010F4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21913  0010F6  0E0D               	movlw	13
 21914  0010F8  D005               	goto	u17010
 21915  0010FA                     u17015:
 21916  0010FA  90D8               	bcf	status,0,c
 21917  0010FC  33A9               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 21918  0010FE  33A8               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 21919  001100  33A7               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 21920  001102  33A6               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21921  001104                     u17010:
 21922  001104  2EE8               	decfsz	wreg,f,c
 21923  001106  D7F9               	goto	u17015
 21924  001108                     L12:
 21925  001108  C0A6  F0BC         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$2092
 21926  00110C  C0A7  F0BD         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$2092+1
 21927  001110  C0A8  F0BE         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$2092+2
 21928  001114  C0A9  F0BF         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$2092+3
 21929                           
 21930                           ; BSR set to: 0
 21931  001118  51BC               	movf	_LORAWAN_TxDone$2092& (0+255),w,b
 21932  00111A  0102               	movlb	2	; () banked
 21933  00111C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 21934  00111E  0100               	movlb	0	; () banked
 21935  001120  6FC5               	movwf	LORAWAN_TxDone@delta& (0+255),b
 21936  001122  51BD               	movf	(_LORAWAN_TxDone$2092+1)& (0+255),w,b
 21937  001124  0102               	movlb	2	; () banked
 21938  001126  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 21939  001128  0100               	movlb	0	; () banked
 21940  00112A  6FC6               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21941  00112C  51BE               	movf	(_LORAWAN_TxDone$2092+2)& (0+255),w,b
 21942  00112E  0102               	movlb	2	; () banked
 21943  001130  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 21944  001132  0100               	movlb	0	; () banked
 21945  001134  6FC7               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21946  001136  51BF               	movf	(_LORAWAN_TxDone$2092+3)& (0+255),w,b
 21947  001138  0102               	movlb	2	; () banked
 21948  00113A  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 21949  00113C  0100               	movlb	0	; () banked
 21950  00113E  6FC8               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21951  001140                     l14698:
 21952                           
 21953                           ; BSR set to: 0
 21954                           ;lorawan_eu.c: 409: }
 21955                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 21956  001140  6BD1               	clrf	LORAWAN_TxDone@i& (0+255),b
 21957  001142                     l14704:
 21958                           
 21959                           ; BSR set to: 0
 21960                           ;lorawan_eu.c: 412: {
 21961                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 21962  001142  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21963  001144  0D0E               	mullw	14
 21964  001146  0E04               	movlw	low (_Channels+4)
 21965  001148  24F3               	addwf	prodl,w,c
 21966  00114A  6ED9               	movwf	fsr2l,c
 21967  00114C  0E04               	movlw	high (_Channels+4)
 21968  00114E  20F4               	addwfc	prodh,w,c
 21969  001150  6EDA               	movwf	fsr2h,c
 21970  001152  04DE               	decf	postinc2,w,c
 21971  001154  E001 D08E          	bnz	l14722
 21972                           
 21973                           ; BSR set to: 0
 21974  001158  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21975  00115A  0D0E               	mullw	14
 21976  00115C  0E08               	movlw	low (_Channels+8)
 21977  00115E  24F3               	addwf	prodl,w,c
 21978  001160  6ED9               	movwf	fsr2l,c
 21979  001162  0E04               	movlw	high (_Channels+8)
 21980  001164  20F4               	addwfc	prodh,w,c
 21981  001166  6EDA               	movwf	fsr2h,c
 21982  001168  50DE               	movf	postinc2,w,c
 21983  00116A  10DE               	iorwf	postinc2,w,c
 21984  00116C  10DE               	iorwf	postinc2,w,c
 21985  00116E  10DE               	iorwf	postinc2,w,c
 21986  001170  E101 D080          	bz	l14722
 21987                           
 21988                           ; BSR set to: 0
 21989                           ;lorawan_eu.c: 414: {
 21990                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 21991  001174  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 21992  001176  0102               	movlb	2	; () banked
 21993  001178  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 21994  00117A  E04B               	bz	l1031
 21995                           
 21996                           ; BSR set to: 2
 21997                           ;lorawan_eu.c: 416: {
 21998                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 21999  00117C  0100               	movlb	0	; () banked
 22000  00117E  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22001  001180  0D0E               	mullw	14
 22002  001182  0E08               	movlw	low (_Channels+8)
 22003  001184  24F3               	addwf	prodl,w,c
 22004  001186  6ED9               	movwf	fsr2l,c
 22005  001188  0E04               	movlw	high (_Channels+8)
 22006  00118A  20F4               	addwfc	prodh,w,c
 22007  00118C  6EDA               	movwf	fsr2h,c
 22008  00118E  50DE               	movf	postinc2,w,c
 22009  001190  5DC5               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22010  001192  50DE               	movf	postinc2,w,c
 22011  001194  59C6               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22012  001196  50DE               	movf	postinc2,w,c
 22013  001198  59C7               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22014  00119A  50DE               	movf	postinc2,w,c
 22015  00119C  59C8               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22016  00119E  E22D               	bc	l14714
 22017                           
 22018                           ; BSR set to: 0
 22019                           ;lorawan_eu.c: 418: {
 22020                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 22021  0011A0  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22022  0011A2  0D0E               	mullw	14
 22023  0011A4  0E08               	movlw	low (_Channels+8)
 22024  0011A6  24F3               	addwf	prodl,w,c
 22025  0011A8  6ED9               	movwf	fsr2l,c
 22026  0011AA  0E04               	movlw	high (_Channels+8)
 22027  0011AC  20F4               	addwfc	prodh,w,c
 22028  0011AE  6EDA               	movwf	fsr2h,c
 22029  0011B0  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone
 22030  0011B4  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+1
 22031  0011B8  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 22032  0011BC  CFDE F0A5          	movff	postinc2,??_LORAWAN_TxDone+3
 22033  0011C0  51C5               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22034  0011C2  5DA2               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22035  0011C4  6FA6               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22036  0011C6  51C6               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22037  0011C8  59A3               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22038  0011CA  6FA7               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22039  0011CC  51C7               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22040  0011CE  59A4               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22041  0011D0  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22042  0011D2  51C8               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22043  0011D4  59A5               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22044  0011D6  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22045  0011D8  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22046  0011DA  0D0E               	mullw	14
 22047  0011DC  0E08               	movlw	low (_Channels+8)
 22048  0011DE  24F3               	addwf	prodl,w,c
 22049  0011E0  6ED9               	movwf	fsr2l,c
 22050  0011E2  0E04               	movlw	high (_Channels+8)
 22051  0011E4  20F4               	addwfc	prodh,w,c
 22052  0011E6  6EDA               	movwf	fsr2h,c
 22053  0011E8  C0A6  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22054  0011EC  C0A7  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22055  0011F0  C0A8  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22056  0011F4  C0A9  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22057                           
 22058                           ;lorawan_eu.c: 420: }
 22059  0011F8  D00C               	goto	l1031
 22060  0011FA                     l14714:
 22061                           
 22062                           ; BSR set to: 0
 22063                           ;lorawan_eu.c: 421: else
 22064                           ;lorawan_eu.c: 422: {
 22065                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 22066  0011FA  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22067  0011FC  0D0E               	mullw	14
 22068  0011FE  0E08               	movlw	low (_Channels+8)
 22069  001200  24F3               	addwf	prodl,w,c
 22070  001202  6ED9               	movwf	fsr2l,c
 22071  001204  0E04               	movlw	high (_Channels+8)
 22072  001206  20F4               	addwfc	prodh,w,c
 22073  001208  6EDA               	movwf	fsr2h,c
 22074  00120A  6ADE               	clrf	postinc2,c
 22075  00120C  6ADE               	clrf	postinc2,c
 22076  00120E  6ADE               	clrf	postinc2,c
 22077  001210  6ADD               	clrf	postdec2,c
 22078  001212                     l1031:
 22079                           
 22080                           ;lorawan_eu.c: 424: }
 22081                           ;lorawan_eu.c: 425: }
 22082                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 22083  001212  0100               	movlb	0	; () banked
 22084  001214  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22085  001216  0D0E               	mullw	14
 22086  001218  0E08               	movlw	low (_Channels+8)
 22087  00121A  24F3               	addwf	prodl,w,c
 22088  00121C  6ED9               	movwf	fsr2l,c
 22089  00121E  0E04               	movlw	high (_Channels+8)
 22090  001220  20F4               	addwfc	prodh,w,c
 22091  001222  6EDA               	movwf	fsr2h,c
 22092  001224  50DE               	movf	postinc2,w,c
 22093  001226  5DCD               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22094  001228  50DE               	movf	postinc2,w,c
 22095  00122A  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22096  00122C  50DE               	movf	postinc2,w,c
 22097  00122E  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22098  001230  50DE               	movf	postinc2,w,c
 22099  001232  59D0               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22100  001234  E31F               	bnc	l14722
 22101                           
 22102                           ; BSR set to: 0
 22103  001236  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22104  001238  0D0E               	mullw	14
 22105  00123A  0E08               	movlw	low (_Channels+8)
 22106  00123C  24F3               	addwf	prodl,w,c
 22107  00123E  6ED9               	movwf	fsr2l,c
 22108  001240  0E04               	movlw	high (_Channels+8)
 22109  001242  20F4               	addwfc	prodh,w,c
 22110  001244  6EDA               	movwf	fsr2h,c
 22111  001246  50DE               	movf	postinc2,w,c
 22112  001248  10DE               	iorwf	postinc2,w,c
 22113  00124A  10DE               	iorwf	postinc2,w,c
 22114  00124C  10DE               	iorwf	postinc2,w,c
 22115  00124E  E012               	bz	l14722
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;lorawan_eu.c: 427: {
 22119                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 22120  001250  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22121  001252  0D0E               	mullw	14
 22122  001254  0E08               	movlw	low (_Channels+8)
 22123  001256  24F3               	addwf	prodl,w,c
 22124  001258  6ED9               	movwf	fsr2l,c
 22125  00125A  0E04               	movlw	high (_Channels+8)
 22126  00125C  20F4               	addwfc	prodh,w,c
 22127  00125E  6EDA               	movwf	fsr2h,c
 22128  001260  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim
 22129  001264  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+1
 22130  001268  CFDE F0CF          	movff	postinc2,LORAWAN_TxDone@minim+2
 22131  00126C  CFDE F0D0          	movff	postinc2,LORAWAN_TxDone@minim+3
 22132                           
 22133                           ; BSR set to: 0
 22134                           ;lorawan_eu.c: 429: found = 1;
 22135  001270  0E01               	movlw	1
 22136  001272  6FC4               	movwf	LORAWAN_TxDone@found& (0+255),b
 22137  001274                     l14722:
 22138                           
 22139                           ; BSR set to: 0
 22140  001274  2BD1               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22141                           
 22142                           ; BSR set to: 0
 22143  001276  0E0F               	movlw	15
 22144  001278  65D1               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22145  00127A  D763               	goto	l14704
 22146                           
 22147                           ; BSR set to: 0
 22148                           ;lorawan_eu.c: 430: }
 22149                           ;lorawan_eu.c: 431: }
 22150                           ;lorawan_eu.c: 432: }
 22151                           ;lorawan_eu.c: 433: if (found == 1)
 22152  00127C  05C4               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22153  00127E  E15F               	bnz	l14740
 22154                           
 22155                           ; BSR set to: 0
 22156                           ;lorawan_eu.c: 434: {
 22157                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 22158  001280  C0CD  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 22159  001284  C0CE  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22160  001288  C0CF  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22161  00128C  C0D0  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22165  001290  51D0               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22166  001292  E106               	bnz	u17100
 22167  001294  29CD               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22168  001296  0EFF               	movlw	255
 22169  001298  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22170  00129A  0E0F               	movlw	15
 22171  00129C  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22172  00129E  E318               	bnc	l14734
 22173  0012A0                     u17100:
 22174                           
 22175                           ; BSR set to: 0
 22176  0012A0  C0CD  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22177  0012A4  C0CE  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22178  0012A8  C0CF  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22179  0012AC  C0D0  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22180  0012B0  0E7D               	movlw	125
 22181  0012B2  6F68               	movwf	___lldiv@divisor& (0+255),b
 22182  0012B4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22183  0012B6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22184  0012B8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22185  0012BA  EC1A  F030         	call	___lldiv	;wreg free
 22186  0012BE  0E0C               	movlw	12
 22187  0012C0                     u17115:
 22188  0012C0  90D8               	bcf	status,0,c
 22189  0012C2  3764               	rlcf	?___lldiv& (0+255),f,b
 22190  0012C4  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 22191  0012C6  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 22192  0012C8  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 22193  0012CA  2EE8               	decfsz	wreg,f,c
 22194  0012CC  D7F9               	goto	u17115
 22195  0012CE  D01F               	goto	L13
 22196  0012D0                     l14734:
 22197                           
 22198                           ; BSR set to: 0
 22199  0012D0  C0CD  F0A2         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22200  0012D4  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22201  0012D8  C0CF  F0A4         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22202  0012DC  C0D0  F0A5         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22203  0012E0  0E0C               	movlw	12
 22204  0012E2                     u17125:
 22205  0012E2  90D8               	bcf	status,0,c
 22206  0012E4  37A2               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22207  0012E6  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22208  0012E8  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22209  0012EA  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22210  0012EC  2EE8               	decfsz	wreg,f,c
 22211  0012EE  D7F9               	goto	u17125
 22212  0012F0  C0A2  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22213  0012F4  C0A3  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22214  0012F8  C0A4  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22215  0012FC  C0A5  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22216  001300  0E7D               	movlw	125
 22217  001302  6F68               	movwf	___lldiv@divisor& (0+255),b
 22218  001304  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22219  001306  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22220  001308  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22221  00130A  EC1A  F030         	call	___lldiv	;wreg free
 22222  00130E                     L13:
 22223  00130E  C064  F0C0         	movff	?___lldiv,_LORAWAN_TxDone$2093
 22224  001312  C065  F0C1         	movff	?___lldiv+1,_LORAWAN_TxDone$2093+1
 22225  001316  C066  F0C2         	movff	?___lldiv+2,_LORAWAN_TxDone$2093+2
 22226  00131A  C067  F0C3         	movff	?___lldiv+3,_LORAWAN_TxDone$2093+3
 22227                           
 22228                           ; BSR set to: 0
 22229  00131E  C0C0  F071         	movff	_LORAWAN_TxDone$2093,SwTimerSetTimeout@timeout
 22230  001322  C0C1  F072         	movff	_LORAWAN_TxDone$2093+1,SwTimerSetTimeout@timeout+1
 22231  001326  C0C2  F073         	movff	_LORAWAN_TxDone$2093+2,SwTimerSetTimeout@timeout+2
 22232  00132A  C0C3  F074         	movff	_LORAWAN_TxDone$2093+3,SwTimerSetTimeout@timeout+3
 22233  00132E  0102               	movlb	2	; () banked
 22234  001330  51E9               	movf	(_loRa+233)& (0+255),w,b
 22235  001332  ECA5  F036         	call	_SwTimerSetTimeout
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 22239  001336  0102               	movlb	2	; () banked
 22240  001338  51E9               	movf	(_loRa+233)& (0+255),w,b
 22241  00133A  EC58  F02E         	call	_SwTimerStart
 22242  00133E                     l14740:
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;lorawan_eu.c: 438: }
 22246                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 22247  00133E  0E02               	movlw	2
 22248  001340  0102               	movlb	2	; () banked
 22249  001342  1912               	xorwf	(_loRa+18)& (0+255),w,b
 22250  001344  A4D8               	btfss	status,2,c
 22251  001346  0012               	return	
 22252                           
 22253                           ; BSR set to: 2
 22254                           ;lorawan_eu.c: 440: {
 22255                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22256  001348  5102               	movf	(_loRa+2)& (0+255),w,b
 22257  00134A  0BF0               	andlw	-16
 22258  00134C  0908               	iorlw	8
 22259  00134E  6F02               	movwf	(_loRa+2)& (0+255),b
 22260                           
 22261                           ; BSR set to: 2
 22262                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 22263  001350  EF99  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 22264  001354                     l14746:
 22265                           
 22266                           ; BSR set to: 2
 22267                           ;lorawan_eu.c: 445: else
 22268                           ;lorawan_eu.c: 446: {
 22269                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 22270  001354  EC98  F03C         	call	_RADIO_GetStatus	;wreg free
 22271  001358  0100               	movlb	0	; () banked
 22272  00135A  6FA2               	movwf	??_LORAWAN_TxDone& (0+255),b
 22273  00135C  A9A2               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22274  00135E  D00E               	goto	l14750
 22275                           
 22276                           ; BSR set to: 0
 22277                           ;lorawan_eu.c: 448: {
 22278                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22279  001360  6B67               	clrf	RxDataDone@pData& (0+255),b
 22280  001362  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22281  001364  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22282  001366  0E02               	movlw	2
 22283  001368  6F6A               	movwf	RxDataDone@status& (0+255),b
 22284  00136A  0005               	push	
 22285  00136C  6EFA               	movwf	pclath,c
 22286  00136E  51E8               	movf	_rxPayload& (0+255),w,b
 22287  001370  6EFD               	movwf	tosl,c
 22288  001372  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22289  001374  6EFE               	movwf	tosh,c
 22290  001376  6AFF               	clrf	tosu,c
 22291  001378  50FA               	movf	pclath,w,c
 22292  00137A  0012               	return		;indir
 22293  00137C                     l14750:
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;lorawan_eu.c: 452: else
 22297                           ;lorawan_eu.c: 453: {
 22298                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 22299  00137C  51E8               	movf	_rxPayload& (0+255),w,b
 22300  00137E  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22301  001380  B4D8               	btfsc	status,2,c
 22302  001382  0012               	return	
 22303                           
 22304                           ; BSR set to: 0
 22305                           ;lorawan_eu.c: 456: {
 22306                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22307  001384  6B67               	clrf	RxDataDone@pData& (0+255),b
 22308  001386  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22309  001388  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22310  00138A  0E03               	movlw	3
 22311  00138C  6F6A               	movwf	RxDataDone@status& (0+255),b
 22312  00138E  0005               	push	
 22313  001390  6EFA               	movwf	pclath,c
 22314  001392  51E8               	movf	_rxPayload& (0+255),w,b
 22315  001394  6EFD               	movwf	tosl,c
 22316  001396  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22317  001398  6EFE               	movwf	tosh,c
 22318  00139A  6AFF               	clrf	tosu,c
 22319  00139C  50FA               	movf	pclath,w,c
 22320  00139E  0012               	return		;indir
 22321  0013A0                     __end_of_LORAWAN_TxDone:
 22322                           	opt stack 0
 22323                           tosu	equ	0xFFF
 22324                           tosh	equ	0xFFE
 22325                           tosl	equ	0xFFD
 22326                           pclath	equ	0xFFA
 22327                           tblptru	equ	0xFF8
 22328                           tblptrh	equ	0xFF7
 22329                           tblptrl	equ	0xFF6
 22330                           tablat	equ	0xFF5
 22331                           prodh	equ	0xFF4
 22332                           prodl	equ	0xFF3
 22333                           intcon	equ	0xFF2
 22334                           intcon2	equ	0xFF1
 22335                           intcon3	equ	0xFF0
 22336                           indf0	equ	0xFEF
 22337                           postinc0	equ	0xFEE
 22338                           fsr0h	equ	0xFEA
 22339                           fsr0l	equ	0xFE9
 22340                           wreg	equ	0xFE8
 22341                           postinc1	equ	0xFE6
 22342                           postdec1	equ	0xFE5
 22343                           plusw1	equ	0xFE3
 22344                           fsr1h	equ	0xFE2
 22345                           fsr1l	equ	0xFE1
 22346                           indf2	equ	0xFDF
 22347                           postinc2	equ	0xFDE
 22348                           postdec2	equ	0xFDD
 22349                           plusw2	equ	0xFDB
 22350                           fsr2h	equ	0xFDA
 22351                           fsr2l	equ	0xFD9
 22352                           status	equ	0xFD8
 22353                           
 22354 ;; *************** function _SwTimerReadValue *****************
 22355 ;; Defined at:
 22356 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22357 ;; Parameters:    Size  Location     Type
 22358 ;;  timerId         1    wreg     unsigned char 
 22359 ;; Auto vars:     Size  Location     Type
 22360 ;;  timerId         1   53[BANK0 ] unsigned char 
 22361 ;;  ticksCount      4   49[BANK0 ] unsigned long 
 22362 ;; Return value:  Size  Location     Type
 22363 ;;                  4   45[BANK0 ] unsigned long 
 22364 ;; Registers used:
 22365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22366 ;; Tracked objects:
 22367 ;;		On entry : C/1
 22368 ;;		On exit  : F/0
 22369 ;;		Unchanged: 0/0
 22370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22371 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22372 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22374 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22375 ;;Total ram usage:        9 bytes
 22376 ;; Hardware stack levels used:    1
 22377 ;; Hardware stack levels required when called:   10
 22378 ;; This function calls:
 22379 ;;		_SwTimersInterrupt
 22380 ;; This function is called by:
 22381 ;;		_RADIO_TxDone
 22382 ;;		_RADIO_FSKPacketSent
 22383 ;;		_LORAWAN_TxDone
 22384 ;; This function uses a non-reentrant model
 22385 ;;
 22386                           
 22387                           	psect	text111
 22388  006D8C                     __ptext111:
 22389                           	opt stack 0
 22390  006D8C                     _SwTimerReadValue:
 22391                           	opt stack 16
 22392                           
 22393                           ;incstack = 0
 22394                           ;SwTimerReadValue@timerId stored from wreg
 22395  006D8C  0100               	movlb	0	; () banked
 22396  006D8E  6F95               	movwf	SwTimerReadValue@timerId& (0+255),b
 22397                           
 22398                           ;sw_timer.c: 195: uint32_t ticksCount;
 22399                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22400  006D90  9EF2               	bcf	intcon,7,c	;volatile
 22401                           
 22402                           ;sw_timer.c: 200: SwTimersInterrupt();
 22403  006D92  ECB6  F025         	call	_SwTimersInterrupt	;wreg free
 22404                           
 22405                           ; BSR set to: 0
 22406                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22407  006D96  5195               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22408  006D98  0D08               	mullw	8
 22409  006D9A  0E00               	movlw	low _swTimers
 22410  006D9C  24F3               	addwf	prodl,w,c
 22411  006D9E  6ED9               	movwf	fsr2l,c
 22412  006DA0  0E03               	movlw	high _swTimers
 22413  006DA2  20F4               	addwfc	prodh,w,c
 22414  006DA4  6EDA               	movwf	fsr2h,c
 22415  006DA6  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount
 22416  006DAA  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22417  006DAE  CFDE F093          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22418  006DB2  CFDE F094          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22419                           
 22420                           ; BSR set to: 0
 22421                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22422  006DB6  8EF2               	bsf	intcon,7,c	;volatile
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;sw_timer.c: 204: return ticksCount;
 22426  006DB8  C091  F08D         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22427  006DBC  C092  F08E         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22428  006DC0  C093  F08F         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22429  006DC4  C094  F090         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22430                           
 22431                           ; BSR set to: 0
 22432  006DC8  0012               	return		;funcret
 22433  006DCA                     __end_of_SwTimerReadValue:
 22434                           	opt stack 0
 22435                           tosu	equ	0xFFF
 22436                           tosh	equ	0xFFE
 22437                           tosl	equ	0xFFD
 22438                           pclath	equ	0xFFA
 22439                           tblptru	equ	0xFF8
 22440                           tblptrh	equ	0xFF7
 22441                           tblptrl	equ	0xFF6
 22442                           tablat	equ	0xFF5
 22443                           prodh	equ	0xFF4
 22444                           prodl	equ	0xFF3
 22445                           intcon	equ	0xFF2
 22446                           intcon2	equ	0xFF1
 22447                           intcon3	equ	0xFF0
 22448                           indf0	equ	0xFEF
 22449                           postinc0	equ	0xFEE
 22450                           fsr0h	equ	0xFEA
 22451                           fsr0l	equ	0xFE9
 22452                           wreg	equ	0xFE8
 22453                           postinc1	equ	0xFE6
 22454                           postdec1	equ	0xFE5
 22455                           plusw1	equ	0xFE3
 22456                           fsr1h	equ	0xFE2
 22457                           fsr1l	equ	0xFE1
 22458                           indf2	equ	0xFDF
 22459                           postinc2	equ	0xFDE
 22460                           postdec2	equ	0xFDD
 22461                           plusw2	equ	0xFDB
 22462                           fsr2h	equ	0xFDA
 22463                           fsr2l	equ	0xFD9
 22464                           status	equ	0xFD8
 22465                           
 22466 ;; *************** function _SwTimerIsRunning *****************
 22467 ;; Defined at:
 22468 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22469 ;; Parameters:    Size  Location     Type
 22470 ;;  timerId         1    wreg     unsigned char 
 22471 ;; Auto vars:     Size  Location     Type
 22472 ;;  timerId         1    4[BANK0 ] unsigned char 
 22473 ;;  isRunning       1    5[BANK0 ] unsigned char 
 22474 ;; Return value:  Size  Location     Type
 22475 ;;                  1    wreg      unsigned char 
 22476 ;; Registers used:
 22477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22478 ;; Tracked objects:
 22479 ;;		On entry : F/2
 22480 ;;		On exit  : F/0
 22481 ;;		Unchanged: 0/0
 22482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22486 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22487 ;;Total ram usage:        2 bytes
 22488 ;; Hardware stack levels used:    1
 22489 ;; Hardware stack levels required when called:    7
 22490 ;; This function calls:
 22491 ;;		Nothing
 22492 ;; This function is called by:
 22493 ;;		_LORAWAN_TxDone
 22494 ;; This function uses a non-reentrant model
 22495 ;;
 22496                           
 22497                           	psect	text112
 22498  007490                     __ptext112:
 22499                           	opt stack 0
 22500  007490                     _SwTimerIsRunning:
 22501                           	opt stack 19
 22502                           
 22503                           ; BSR set to: 0
 22504                           ;incstack = 0
 22505                           ;SwTimerIsRunning@timerId stored from wreg
 22506  007490  0100               	movlb	0	; () banked
 22507  007492  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22508                           
 22509                           ;sw_timer.c: 209: uint8_t isRunning;
 22510                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22511  007494  9EF2               	bcf	intcon,7,c	;volatile
 22512                           
 22513                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22514  007496  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22515  007498  0D08               	mullw	8
 22516  00749A  0E04               	movlw	low (_swTimers+4)
 22517  00749C  24F3               	addwf	prodl,w,c
 22518  00749E  6ED9               	movwf	fsr2l,c
 22519  0074A0  0E03               	movlw	high (_swTimers+4)
 22520  0074A2  20F4               	addwfc	prodh,w,c
 22521  0074A4  6EDA               	movwf	fsr2h,c
 22522  0074A6  50DF               	movf	indf2,w,c
 22523  0074A8  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22527  0074AA  8EF2               	bsf	intcon,7,c	;volatile
 22528                           
 22529                           ; BSR set to: 0
 22530                           ;sw_timer.c: 215: return isRunning;
 22531  0074AC  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22532                           
 22533                           ; BSR set to: 0
 22534  0074AE  0012               	return		;funcret
 22535  0074B0                     __end_of_SwTimerIsRunning:
 22536                           	opt stack 0
 22537                           tosu	equ	0xFFF
 22538                           tosh	equ	0xFFE
 22539                           tosl	equ	0xFFD
 22540                           pclath	equ	0xFFA
 22541                           tblptru	equ	0xFF8
 22542                           tblptrh	equ	0xFF7
 22543                           tblptrl	equ	0xFF6
 22544                           tablat	equ	0xFF5
 22545                           prodh	equ	0xFF4
 22546                           prodl	equ	0xFF3
 22547                           intcon	equ	0xFF2
 22548                           intcon2	equ	0xFF1
 22549                           intcon3	equ	0xFF0
 22550                           indf0	equ	0xFEF
 22551                           postinc0	equ	0xFEE
 22552                           fsr0h	equ	0xFEA
 22553                           fsr0l	equ	0xFE9
 22554                           wreg	equ	0xFE8
 22555                           postinc1	equ	0xFE6
 22556                           postdec1	equ	0xFE5
 22557                           plusw1	equ	0xFE3
 22558                           fsr1h	equ	0xFE2
 22559                           fsr1l	equ	0xFE1
 22560                           indf2	equ	0xFDF
 22561                           postinc2	equ	0xFDE
 22562                           postdec2	equ	0xFDD
 22563                           plusw2	equ	0xFDB
 22564                           fsr2h	equ	0xFDA
 22565                           fsr2l	equ	0xFD9
 22566                           status	equ	0xFD8
 22567                           
 22568 ;; *************** function _RADIO_GetStatus *****************
 22569 ;; Defined at:
 22570 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22571 ;; Parameters:    Size  Location     Type
 22572 ;;		None
 22573 ;; Auto vars:     Size  Location     Type
 22574 ;;		None
 22575 ;; Return value:  Size  Location     Type
 22576 ;;                  1    wreg      unsigned char 
 22577 ;; Registers used:
 22578 ;;		wreg, status,2
 22579 ;; Tracked objects:
 22580 ;;		On entry : D/2
 22581 ;;		On exit  : F/1
 22582 ;;		Unchanged: 0/0
 22583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22588 ;;Total ram usage:        0 bytes
 22589 ;; Hardware stack levels used:    1
 22590 ;; Hardware stack levels required when called:    7
 22591 ;; This function calls:
 22592 ;;		Nothing
 22593 ;; This function is called by:
 22594 ;;		_LORAWAN_TxDone
 22595 ;;		_LORAWAN_ReceiveWindow2Callback
 22596 ;;		_LORAWAN_RxDone
 22597 ;; This function uses a non-reentrant model
 22598 ;;
 22599                           
 22600                           	psect	text113
 22601  007930                     __ptext113:
 22602                           	opt stack 0
 22603  007930                     _RADIO_GetStatus:
 22604                           	opt stack 19
 22605                           
 22606                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22607                           
 22608                           ; BSR set to: 0
 22609                           ;incstack = 0
 22610  007930  0101               	movlb	1	; () banked
 22611  007932  518D               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22612                           
 22613                           ; BSR set to: 1
 22614  007934  0012               	return		;funcret
 22615  007936                     __end_of_RADIO_GetStatus:
 22616                           	opt stack 0
 22617                           tosu	equ	0xFFF
 22618                           tosh	equ	0xFFE
 22619                           tosl	equ	0xFFD
 22620                           pclath	equ	0xFFA
 22621                           tblptru	equ	0xFF8
 22622                           tblptrh	equ	0xFF7
 22623                           tblptrl	equ	0xFF6
 22624                           tablat	equ	0xFF5
 22625                           prodh	equ	0xFF4
 22626                           prodl	equ	0xFF3
 22627                           intcon	equ	0xFF2
 22628                           intcon2	equ	0xFF1
 22629                           intcon3	equ	0xFF0
 22630                           indf0	equ	0xFEF
 22631                           postinc0	equ	0xFEE
 22632                           fsr0h	equ	0xFEA
 22633                           fsr0l	equ	0xFE9
 22634                           wreg	equ	0xFE8
 22635                           postinc1	equ	0xFE6
 22636                           postdec1	equ	0xFE5
 22637                           plusw1	equ	0xFE3
 22638                           fsr1h	equ	0xFE2
 22639                           fsr1l	equ	0xFE1
 22640                           indf2	equ	0xFDF
 22641                           postinc2	equ	0xFDE
 22642                           postdec2	equ	0xFDD
 22643                           plusw2	equ	0xFDB
 22644                           fsr2h	equ	0xFDA
 22645                           fsr2l	equ	0xFD9
 22646                           status	equ	0xFD8
 22647                           
 22648 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22649 ;; Defined at:
 22650 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22651 ;; Parameters:    Size  Location     Type
 22652 ;;		None
 22653 ;; Auto vars:     Size  Location     Type
 22654 ;;		None
 22655 ;; Return value:  Size  Location     Type
 22656 ;;                  1    wreg      void 
 22657 ;; Registers used:
 22658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22659 ;; Tracked objects:
 22660 ;;		On entry : F/2
 22661 ;;		On exit  : F/0
 22662 ;;		Unchanged: 0/0
 22663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22668 ;;Total ram usage:        0 bytes
 22669 ;; Hardware stack levels used:    1
 22670 ;; Hardware stack levels required when called:   13
 22671 ;; This function calls:
 22672 ;;		_ConfigureRadioRx
 22673 ;;		_RADIO_ReceiveStart
 22674 ;;		_RADIO_ReceiveStop
 22675 ;;		_RADIO_ReleaseData
 22676 ;;		_ResetParametersForConfirmedTransmission
 22677 ;;		_ResetParametersForUnconfirmedTransmission
 22678 ;;		_RxDataDone
 22679 ;; This function is called by:
 22680 ;;		_LORAWAN_TxDone
 22681 ;;		_LORAWAN_ReceiveWindow2Callback
 22682 ;;		_LORAWAN_RxDone
 22683 ;;		_SetReceptionNotOkState
 22684 ;; This function uses a non-reentrant model
 22685 ;;
 22686                           
 22687                           	psect	text114
 22688  006532                     __ptext114:
 22689                           	opt stack 0
 22690  006532                     _LORAWAN_EnterContinuousReceive:
 22691                           	opt stack 13
 22692                           
 22693                           ; BSR set to: 2
 22694                           ;lorawan.c: 917: RADIO_ReceiveStop();
 22695                           
 22696                           ; BSR set to: 1
 22697                           ;incstack = 0
 22698  006532  EC76  F03A         	call	_RADIO_ReceiveStop	;wreg free
 22699                           
 22700                           ; BSR set to: 1
 22701                           ;lorawan.c: 918: RADIO_ReleaseData();
 22702  006536  EC9B  F03C         	call	_RADIO_ReleaseData	;wreg free
 22703                           
 22704                           ; BSR set to: 1
 22705                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 22706  00653A  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 22707  00653E  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 22708  006542  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 22709  006546  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 22710  00654A  0102               	movlb	2	; () banked
 22711  00654C  511C               	movf	(_loRa+28)& (0+255),w,b
 22712  00654E  EC9B  F039         	call	_ConfigureRadioRx
 22713                           
 22714                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 22715  006552  0100               	movlb	0	; () banked
 22716  006554  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 22717  006556  6B96               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 22718  006558  ECEA  F015         	call	_RADIO_ReceiveStart	;wreg free
 22719  00655C  5196               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 22720  00655E  1197               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 22721  006560  B4D8               	btfsc	status,2,c
 22722  006562  0012               	return	
 22723                           
 22724                           ; BSR set to: 0
 22725                           ;lorawan.c: 923: {
 22726                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 22727  006564  ECE3  F03B         	call	_ResetParametersForConfirmedTransmission	;wreg free
 22728                           
 22729                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 22730  006568  ECDC  F03B         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 22731                           
 22732                           ; BSR set to: 2
 22733                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 22734  00656C  0EF0               	movlw	-16
 22735  00656E  1702               	andwf	(_loRa+2)& (0+255),f,b
 22736                           
 22737                           ; BSR set to: 2
 22738                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 22739  006570  0100               	movlb	0	; () banked
 22740  006572  51E8               	movf	_rxPayload& (0+255),w,b
 22741  006574  11E9               	iorwf	(_rxPayload+1)& (0+255),w,b
 22742  006576  B4D8               	btfsc	status,2,c
 22743  006578  0012               	return	
 22744                           
 22745                           ; BSR set to: 0
 22746                           ;lorawan.c: 928: {
 22747                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 22748  00657A  6B67               	clrf	RxDataDone@pData& (0+255),b
 22749  00657C  6B68               	clrf	(RxDataDone@pData+1)& (0+255),b
 22750  00657E  6B69               	clrf	RxDataDone@dataLength& (0+255),b
 22751  006580  6B6A               	clrf	RxDataDone@status& (0+255),b
 22752  006582  0005               	push	
 22753  006584  6AFA               	clrf	pclath,c
 22754  006586  51E8               	movf	_rxPayload& (0+255),w,b
 22755  006588  6EFD               	movwf	tosl,c
 22756  00658A  51E9               	movf	(_rxPayload+1)& (0+255),w,b
 22757  00658C  6EFE               	movwf	tosh,c
 22758  00658E  6AFF               	clrf	tosu,c
 22759  006590  50FA               	movf	pclath,w,c
 22760  006592  0012               	return		;indir
 22761  006594                     __end_of_LORAWAN_EnterContinuousReceive:
 22762                           	opt stack 0
 22763                           tosu	equ	0xFFF
 22764                           tosh	equ	0xFFE
 22765                           tosl	equ	0xFFD
 22766                           pclath	equ	0xFFA
 22767                           tblptru	equ	0xFF8
 22768                           tblptrh	equ	0xFF7
 22769                           tblptrl	equ	0xFF6
 22770                           tablat	equ	0xFF5
 22771                           prodh	equ	0xFF4
 22772                           prodl	equ	0xFF3
 22773                           intcon	equ	0xFF2
 22774                           intcon2	equ	0xFF1
 22775                           intcon3	equ	0xFF0
 22776                           indf0	equ	0xFEF
 22777                           postinc0	equ	0xFEE
 22778                           fsr0h	equ	0xFEA
 22779                           fsr0l	equ	0xFE9
 22780                           wreg	equ	0xFE8
 22781                           postinc1	equ	0xFE6
 22782                           postdec1	equ	0xFE5
 22783                           plusw1	equ	0xFE3
 22784                           fsr1h	equ	0xFE2
 22785                           fsr1l	equ	0xFE1
 22786                           indf2	equ	0xFDF
 22787                           postinc2	equ	0xFDE
 22788                           postdec2	equ	0xFDD
 22789                           plusw2	equ	0xFDB
 22790                           fsr2h	equ	0xFDA
 22791                           fsr2l	equ	0xFD9
 22792                           status	equ	0xFD8
 22793                           
 22794 ;; *************** function _RxDataDone *****************
 22795 ;; Defined at:
 22796 ;;		line 104 in file "main.c"
 22797 ;; Parameters:    Size  Location     Type
 22798 ;;  pData           2    7[BANK0 ] PTR unsigned char 
 22799 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22800 ;;  dataLength      1    9[BANK0 ] unsigned char 
 22801 ;;  status          1   10[BANK0 ] enum E8000
 22802 ;; Auto vars:     Size  Location     Type
 22803 ;;		None
 22804 ;; Return value:  Size  Location     Type
 22805 ;;                  1    wreg      void 
 22806 ;; Registers used:
 22807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22808 ;; Tracked objects:
 22809 ;;		On entry : F/0
 22810 ;;		On exit  : F/0
 22811 ;;		Unchanged: 0/0
 22812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22816 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22817 ;;Total ram usage:        5 bytes
 22818 ;; Hardware stack levels used:    1
 22819 ;; Hardware stack levels required when called:    9
 22820 ;; This function calls:
 22821 ;;		_LORAWAN_SetCurrentDataRate
 22822 ;; This function is called by:
 22823 ;;		_main
 22824 ;;		_LORAWAN_EnterContinuousReceive
 22825 ;;		_LORAWAN_ReceiveWindow2Callback
 22826 ;;		_SetReceptionNotOkState
 22827 ;;		_LORAWAN_RxDone
 22828 ;;		_LORAWAN_RxTimeout
 22829 ;;		_LORAWAN_TxDone
 22830 ;;		_AckRetransmissionCallback
 22831 ;;		_UnconfirmedTransmissionCallback
 22832 ;; This function uses a non-reentrant model
 22833 ;;
 22834                           
 22835                           	psect	text115
 22836  00611C                     __ptext115:
 22837                           	opt stack 0
 22838  00611C                     _RxDataDone:
 22839                           	opt stack 18
 22840                           
 22841                           ; BSR set to: 0
 22842                           ;main.c: 109: if(pData[0]==30){
 22843                           
 22844                           ; BSR set to: 0
 22845                           ;incstack = 0
 22846  00611C  C067  FFD9         	movff	RxDataDone@pData,fsr2l
 22847  006120  C068  FFDA         	movff	RxDataDone@pData+1,fsr2h
 22848  006124  0E1E               	movlw	30
 22849  006126  18DE               	xorwf	postinc2,w,c
 22850  006128  A4D8               	btfss	status,2,c
 22851  00612A  0012               	return	
 22852                           
 22853                           ; BSR set to: 0
 22854                           ;main.c: 110: LORAWAN_SetCurrentDataRate(pData[1]);
 22855  00612C  EE20 F001          	lfsr	2,1
 22856  006130  5167               	movf	RxDataDone@pData& (0+255),w,b
 22857  006132  26D9               	addwf	fsr2l,f,c
 22858  006134  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22859  006136  22DA               	addwfc	fsr2h,f,c
 22860  006138  50DF               	movf	indf2,w,c
 22861  00613A  ECCC  F038         	call	_LORAWAN_SetCurrentDataRate
 22862                           
 22863                           ;main.c: 111: PORTCbits.RC5 = pData[2];
 22864  00613E  0100               	movlb	0	; () banked
 22865  006140  EE20 F002          	lfsr	2,2
 22866  006144  5167               	movf	RxDataDone@pData& (0+255),w,b
 22867  006146  26D9               	addwf	fsr2l,f,c
 22868  006148  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22869  00614A  22DA               	addwfc	fsr2h,f,c
 22870  00614C  50DF               	movf	indf2,w,c
 22871  00614E  6F6B               	movwf	??_RxDataDone& (0+255),b
 22872  006150  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 22873  006152  476B               	rlncf	??_RxDataDone& (0+255),f,b
 22874  006154  5082               	movf	3970,w,c	;volatile
 22875  006156  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22876  006158  0BDF               	andlw	-33
 22877  00615A  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22878  00615C  6E82               	movwf	3970,c	;volatile
 22879                           
 22880                           ; BSR set to: 0
 22881                           ;main.c: 112: PORTDbits.RD5 = pData[3];
 22882  00615E  EE20 F003          	lfsr	2,3
 22883  006162  5167               	movf	RxDataDone@pData& (0+255),w,b
 22884  006164  26D9               	addwf	fsr2l,f,c
 22885  006166  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22886  006168  22DA               	addwfc	fsr2h,f,c
 22887  00616A  50DF               	movf	indf2,w,c
 22888  00616C  6F6B               	movwf	??_RxDataDone& (0+255),b
 22889  00616E  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 22890  006170  476B               	rlncf	??_RxDataDone& (0+255),f,b
 22891  006172  5083               	movf	3971,w,c	;volatile
 22892  006174  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22893  006176  0BDF               	andlw	-33
 22894  006178  196B               	xorwf	??_RxDataDone& (0+255),w,b
 22895  00617A  6E83               	movwf	3971,c	;volatile
 22896                           
 22897                           ; BSR set to: 0
 22898                           ;main.c: 113: ONE_HOUR_TIMEOUT_COUNTS = pData[4];
 22899  00617C  EE20 F004          	lfsr	2,4
 22900  006180  5167               	movf	RxDataDone@pData& (0+255),w,b
 22901  006182  26D9               	addwf	fsr2l,f,c
 22902  006184  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 22903  006186  22DA               	addwfc	fsr2h,f,c
 22904  006188  50DF               	movf	indf2,w,c
 22905  00618A  6E5A               	movwf	_ONE_HOUR_TIMEOUT_COUNTS,c
 22906                           
 22907                           ; BSR set to: 0
 22908  00618C  0012               	return		;funcret
 22909  00618E                     __end_of_RxDataDone:
 22910                           	opt stack 0
 22911                           tosu	equ	0xFFF
 22912                           tosh	equ	0xFFE
 22913                           tosl	equ	0xFFD
 22914                           pclath	equ	0xFFA
 22915                           tblptru	equ	0xFF8
 22916                           tblptrh	equ	0xFF7
 22917                           tblptrl	equ	0xFF6
 22918                           tablat	equ	0xFF5
 22919                           prodh	equ	0xFF4
 22920                           prodl	equ	0xFF3
 22921                           intcon	equ	0xFF2
 22922                           intcon2	equ	0xFF1
 22923                           intcon3	equ	0xFF0
 22924                           indf0	equ	0xFEF
 22925                           postinc0	equ	0xFEE
 22926                           fsr0h	equ	0xFEA
 22927                           fsr0l	equ	0xFE9
 22928                           wreg	equ	0xFE8
 22929                           postinc1	equ	0xFE6
 22930                           postdec1	equ	0xFE5
 22931                           plusw1	equ	0xFE3
 22932                           fsr1h	equ	0xFE2
 22933                           fsr1l	equ	0xFE1
 22934                           indf2	equ	0xFDF
 22935                           postinc2	equ	0xFDE
 22936                           postdec2	equ	0xFDD
 22937                           plusw2	equ	0xFDB
 22938                           fsr2h	equ	0xFDA
 22939                           fsr2l	equ	0xFD9
 22940                           status	equ	0xFD8
 22941                           
 22942 ;; *************** function _LORAWAN_SetCurrentDataRate *****************
 22943 ;; Defined at:
 22944 ;;		line 436 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22945 ;; Parameters:    Size  Location     Type
 22946 ;;  valueNew        1    wreg     unsigned char 
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;  valueNew        1    6[BANK0 ] unsigned char 
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  1    wreg      enum E7957
 22951 ;; Registers used:
 22952 ;;		wreg, status,2, status,0, cstack
 22953 ;; Tracked objects:
 22954 ;;		On entry : F/0
 22955 ;;		On exit  : 0/0
 22956 ;;		Unchanged: 0/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22961 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22962 ;;Total ram usage:        1 bytes
 22963 ;; Hardware stack levels used:    1
 22964 ;; Hardware stack levels required when called:    8
 22965 ;; This function calls:
 22966 ;;		_UpdateCurrentDataRate
 22967 ;;		_ValidateDataRate
 22968 ;; This function is called by:
 22969 ;;		_RxDataDone
 22970 ;; This function uses a non-reentrant model
 22971 ;;
 22972                           
 22973                           	psect	text116
 22974  007198                     __ptext116:
 22975                           	opt stack 0
 22976  007198                     _LORAWAN_SetCurrentDataRate:
 22977                           	opt stack 18
 22978                           
 22979                           ; BSR set to: 0
 22980                           ;incstack = 0
 22981                           ;LORAWAN_SetCurrentDataRate@valueNew stored from wreg
 22982  007198  6F66               	movwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),b
 22983                           
 22984                           ;lorawan.c: 440: if ( (valueNew < loRa.minDataRate) || (valueNew > loRa.maxDataRate) || 
      +                          (ValidateDataRate(valueNew) != OK) )
 22985  00719A  0102               	movlb	2	; () banked
 22986  00719C  51EB               	movf	(_loRa+235)& (0+255),w,b
 22987  00719E  0100               	movlb	0	; () banked
 22988  0071A0  5D66               	subwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22989  0071A2  A0D8               	btfss	status,0,c
 22990  0071A4  0012               	return	
 22991                           
 22992                           ; BSR set to: 0
 22993  0071A6  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 22994  0071A8  0102               	movlb	2	; () banked
 22995  0071AA  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 22996  0071AC  A0D8               	btfss	status,0,c
 22997  0071AE  0012               	return	
 22998                           
 22999                           ; BSR set to: 2
 23000  0071B0  0100               	movlb	0	; () banked
 23001  0071B2  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 23002  0071B4  ECA4  F03B         	call	_ValidateDataRate
 23003  0071B8  0900               	iorlw	0
 23004  0071BA  E001               	bz	l12752
 23005  0071BC  0012               	return	
 23006  0071BE                     l12752:
 23007                           
 23008                           ; BSR set to: 0
 23009                           ;lorawan.c: 444: else
 23010                           ;lorawan.c: 445: {
 23011                           ;lorawan.c: 446: UpdateCurrentDataRate (valueNew);
 23012  0071BE  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 23013  0071C0  EF7A  F03C         	goto	_UpdateCurrentDataRate
 23014  0071C4                     __end_of_LORAWAN_SetCurrentDataRate:
 23015                           	opt stack 0
 23016                           tosu	equ	0xFFF
 23017                           tosh	equ	0xFFE
 23018                           tosl	equ	0xFFD
 23019                           pclath	equ	0xFFA
 23020                           tblptru	equ	0xFF8
 23021                           tblptrh	equ	0xFF7
 23022                           tblptrl	equ	0xFF6
 23023                           tablat	equ	0xFF5
 23024                           prodh	equ	0xFF4
 23025                           prodl	equ	0xFF3
 23026                           intcon	equ	0xFF2
 23027                           intcon2	equ	0xFF1
 23028                           intcon3	equ	0xFF0
 23029                           indf0	equ	0xFEF
 23030                           postinc0	equ	0xFEE
 23031                           fsr0h	equ	0xFEA
 23032                           fsr0l	equ	0xFE9
 23033                           wreg	equ	0xFE8
 23034                           postinc1	equ	0xFE6
 23035                           postdec1	equ	0xFE5
 23036                           plusw1	equ	0xFE3
 23037                           fsr1h	equ	0xFE2
 23038                           fsr1l	equ	0xFE1
 23039                           indf2	equ	0xFDF
 23040                           postinc2	equ	0xFDE
 23041                           postdec2	equ	0xFDD
 23042                           plusw2	equ	0xFDB
 23043                           fsr2h	equ	0xFDA
 23044                           fsr2l	equ	0xFD9
 23045                           status	equ	0xFD8
 23046                           
 23047 ;; *************** function _ValidateDataRate *****************
 23048 ;; Defined at:
 23049 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;  dataRate        1    wreg     unsigned char 
 23052 ;; Auto vars:     Size  Location     Type
 23053 ;;  dataRate        1    4[BANK0 ] unsigned char 
 23054 ;;  result          1    5[BANK0 ] enum E8016
 23055 ;; Return value:  Size  Location     Type
 23056 ;;                  1    wreg      enum E8016
 23057 ;; Registers used:
 23058 ;;		wreg, status,2, status,0
 23059 ;; Tracked objects:
 23060 ;;		On entry : F/0
 23061 ;;		On exit  : F/0
 23062 ;;		Unchanged: 0/0
 23063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23068 ;;Total ram usage:        2 bytes
 23069 ;; Hardware stack levels used:    1
 23070 ;; Hardware stack levels required when called:    7
 23071 ;; This function calls:
 23072 ;;		Nothing
 23073 ;; This function is called by:
 23074 ;;		_ExecuteLinkAdr
 23075 ;;		_ExecuteRxParamSetupReq
 23076 ;;		_ValidateDataRange
 23077 ;;		_LORAWAN_SetCurrentDataRate
 23078 ;; This function uses a non-reentrant model
 23079 ;;
 23080                           
 23081                           	psect	text117
 23082  007748                     __ptext117:
 23083                           	opt stack 0
 23084  007748                     _ValidateDataRate:
 23085                           	opt stack 18
 23086                           
 23087                           ;incstack = 0
 23088                           ;ValidateDataRate@dataRate stored from wreg
 23089  007748  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 23090                           
 23091                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 23092  00774A  0100               	movlb	0	; () banked
 23093  00774C  6B65               	clrf	ValidateDataRate@result& (0+255),b
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 23097  00774E  0E07               	movlw	7
 23098  007750  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 23099  007752  D002               	goto	l1079
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;lorawan_eu.c: 575: {
 23103                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 23104  007754  0E03               	movlw	3
 23105  007756  6F65               	movwf	ValidateDataRate@result& (0+255),b
 23106  007758                     l1079:
 23107                           
 23108                           ; BSR set to: 0
 23109                           ;lorawan_eu.c: 577: }
 23110                           ;lorawan_eu.c: 579: return result;
 23111  007758  5165               	movf	ValidateDataRate@result& (0+255),w,b
 23112                           
 23113                           ; BSR set to: 0
 23114  00775A  0012               	return		;funcret
 23115  00775C                     __end_of_ValidateDataRate:
 23116                           	opt stack 0
 23117                           tosu	equ	0xFFF
 23118                           tosh	equ	0xFFE
 23119                           tosl	equ	0xFFD
 23120                           pclath	equ	0xFFA
 23121                           tblptru	equ	0xFF8
 23122                           tblptrh	equ	0xFF7
 23123                           tblptrl	equ	0xFF6
 23124                           tablat	equ	0xFF5
 23125                           prodh	equ	0xFF4
 23126                           prodl	equ	0xFF3
 23127                           intcon	equ	0xFF2
 23128                           intcon2	equ	0xFF1
 23129                           intcon3	equ	0xFF0
 23130                           indf0	equ	0xFEF
 23131                           postinc0	equ	0xFEE
 23132                           fsr0h	equ	0xFEA
 23133                           fsr0l	equ	0xFE9
 23134                           wreg	equ	0xFE8
 23135                           postinc1	equ	0xFE6
 23136                           postdec1	equ	0xFE5
 23137                           plusw1	equ	0xFE3
 23138                           fsr1h	equ	0xFE2
 23139                           fsr1l	equ	0xFE1
 23140                           indf2	equ	0xFDF
 23141                           postinc2	equ	0xFDE
 23142                           postdec2	equ	0xFDD
 23143                           plusw2	equ	0xFDB
 23144                           fsr2h	equ	0xFDA
 23145                           fsr2l	equ	0xFD9
 23146                           status	equ	0xFD8
 23147                           
 23148 ;; *************** function _UpdateCurrentDataRate *****************
 23149 ;; Defined at:
 23150 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23151 ;; Parameters:    Size  Location     Type
 23152 ;;  valueNew        1    wreg     unsigned char 
 23153 ;; Auto vars:     Size  Location     Type
 23154 ;;  valueNew        1    4[BANK0 ] unsigned char 
 23155 ;; Return value:  Size  Location     Type
 23156 ;;                  1    wreg      void 
 23157 ;; Registers used:
 23158 ;;		wreg
 23159 ;; Tracked objects:
 23160 ;;		On entry : F/0
 23161 ;;		On exit  : 0/0
 23162 ;;		Unchanged: 0/0
 23163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23167 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23168 ;;Total ram usage:        1 bytes
 23169 ;; Hardware stack levels used:    1
 23170 ;; Hardware stack levels required when called:    7
 23171 ;; This function calls:
 23172 ;;		Nothing
 23173 ;; This function is called by:
 23174 ;;		_ExecuteLinkAdr
 23175 ;;		_LORAWAN_SetCurrentDataRate
 23176 ;; This function uses a non-reentrant model
 23177 ;;
 23178                           
 23179                           	psect	text118
 23180  0078F4                     __ptext118:
 23181                           	opt stack 0
 23182  0078F4                     _UpdateCurrentDataRate:
 23183                           	opt stack 18
 23184                           
 23185                           ; BSR set to: 0
 23186                           ;incstack = 0
 23187                           ;UpdateCurrentDataRate@valueNew stored from wreg
 23188  0078F4  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 23189                           
 23190                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 23191  0078F6  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 23192  0078FA  0012               	return		;funcret
 23193  0078FC                     __end_of_UpdateCurrentDataRate:
 23194                           	opt stack 0
 23195                           tosu	equ	0xFFF
 23196                           tosh	equ	0xFFE
 23197                           tosl	equ	0xFFD
 23198                           pclath	equ	0xFFA
 23199                           tblptru	equ	0xFF8
 23200                           tblptrh	equ	0xFF7
 23201                           tblptrl	equ	0xFF6
 23202                           tablat	equ	0xFF5
 23203                           prodh	equ	0xFF4
 23204                           prodl	equ	0xFF3
 23205                           intcon	equ	0xFF2
 23206                           intcon2	equ	0xFF1
 23207                           intcon3	equ	0xFF0
 23208                           indf0	equ	0xFEF
 23209                           postinc0	equ	0xFEE
 23210                           fsr0h	equ	0xFEA
 23211                           fsr0l	equ	0xFE9
 23212                           wreg	equ	0xFE8
 23213                           postinc1	equ	0xFE6
 23214                           postdec1	equ	0xFE5
 23215                           plusw1	equ	0xFE3
 23216                           fsr1h	equ	0xFE2
 23217                           fsr1l	equ	0xFE1
 23218                           indf2	equ	0xFDF
 23219                           postinc2	equ	0xFDE
 23220                           postdec2	equ	0xFDD
 23221                           plusw2	equ	0xFDB
 23222                           fsr2h	equ	0xFDA
 23223                           fsr2l	equ	0xFD9
 23224                           status	equ	0xFD8
 23225                           
 23226 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23227 ;; Defined at:
 23228 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23229 ;; Parameters:    Size  Location     Type
 23230 ;;		None
 23231 ;; Auto vars:     Size  Location     Type
 23232 ;;		None
 23233 ;; Return value:  Size  Location     Type
 23234 ;;                  1    wreg      void 
 23235 ;; Registers used:
 23236 ;;		wreg, status,2
 23237 ;; Tracked objects:
 23238 ;;		On entry : D/0
 23239 ;;		On exit  : F/2
 23240 ;;		Unchanged: 0/0
 23241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23246 ;;Total ram usage:        0 bytes
 23247 ;; Hardware stack levels used:    1
 23248 ;; Hardware stack levels required when called:    7
 23249 ;; This function calls:
 23250 ;;		Nothing
 23251 ;; This function is called by:
 23252 ;;		_LORAWAN_RxTimeout
 23253 ;;		_LORAWAN_ReceiveWindow2Callback
 23254 ;;		_LORAWAN_EnterContinuousReceive
 23255 ;;		_UnconfirmedTransmissionCallback
 23256 ;; This function uses a non-reentrant model
 23257 ;;
 23258                           
 23259                           	psect	text119
 23260  0077B8                     __ptext119:
 23261                           	opt stack 0
 23262  0077B8                     _ResetParametersForUnconfirmedTransmission:
 23263                           	opt stack 20
 23264                           
 23265                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23266                           
 23267                           ;incstack = 0
 23268  0077B8  0EF0               	movlw	-16
 23269  0077BA  0102               	movlb	2	; () banked
 23270  0077BC  1702               	andwf	(_loRa+2)& (0+255),f,b
 23271                           
 23272                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23273  0077BE  0E01               	movlw	1
 23274  0077C0  6FD8               	movwf	(_loRa+216)& (0+255),b
 23275                           
 23276                           ; BSR set to: 2
 23277                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23278  0077C2  6BA7               	clrf	(_loRa+167)& (0+255),b
 23279                           
 23280                           ; BSR set to: 2
 23281  0077C4  0012               	return		;funcret
 23282  0077C6                     __end_of_ResetParametersForUnconfirmedTransmission:
 23283                           	opt stack 0
 23284                           tosu	equ	0xFFF
 23285                           tosh	equ	0xFFE
 23286                           tosl	equ	0xFFD
 23287                           pclath	equ	0xFFA
 23288                           tblptru	equ	0xFF8
 23289                           tblptrh	equ	0xFF7
 23290                           tblptrl	equ	0xFF6
 23291                           tablat	equ	0xFF5
 23292                           prodh	equ	0xFF4
 23293                           prodl	equ	0xFF3
 23294                           intcon	equ	0xFF2
 23295                           intcon2	equ	0xFF1
 23296                           intcon3	equ	0xFF0
 23297                           indf0	equ	0xFEF
 23298                           postinc0	equ	0xFEE
 23299                           fsr0h	equ	0xFEA
 23300                           fsr0l	equ	0xFE9
 23301                           wreg	equ	0xFE8
 23302                           postinc1	equ	0xFE6
 23303                           postdec1	equ	0xFE5
 23304                           plusw1	equ	0xFE3
 23305                           fsr1h	equ	0xFE2
 23306                           fsr1l	equ	0xFE1
 23307                           indf2	equ	0xFDF
 23308                           postinc2	equ	0xFDE
 23309                           postdec2	equ	0xFDD
 23310                           plusw2	equ	0xFDB
 23311                           fsr2h	equ	0xFDA
 23312                           fsr2l	equ	0xFD9
 23313                           status	equ	0xFD8
 23314                           
 23315 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23316 ;; Defined at:
 23317 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23318 ;; Parameters:    Size  Location     Type
 23319 ;;		None
 23320 ;; Auto vars:     Size  Location     Type
 23321 ;;		None
 23322 ;; Return value:  Size  Location     Type
 23323 ;;                  1    wreg      void 
 23324 ;; Registers used:
 23325 ;;		wreg, status,2
 23326 ;; Tracked objects:
 23327 ;;		On entry : D/2
 23328 ;;		On exit  : F/2
 23329 ;;		Unchanged: 0/0
 23330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23335 ;;Total ram usage:        0 bytes
 23336 ;; Hardware stack levels used:    1
 23337 ;; Hardware stack levels required when called:    7
 23338 ;; This function calls:
 23339 ;;		Nothing
 23340 ;; This function is called by:
 23341 ;;		_LORAWAN_RxTimeout
 23342 ;;		_LORAWAN_ReceiveWindow2Callback
 23343 ;;		_LORAWAN_EnterContinuousReceive
 23344 ;;		_AckRetransmissionCallback
 23345 ;; This function uses a non-reentrant model
 23346 ;;
 23347                           
 23348                           	psect	text120
 23349  0077C6                     __ptext120:
 23350                           	opt stack 0
 23351  0077C6                     _ResetParametersForConfirmedTransmission:
 23352                           	opt stack 18
 23353                           
 23354                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23355                           
 23356                           ; BSR set to: 2
 23357                           ;incstack = 0
 23358  0077C6  0EF0               	movlw	-16
 23359  0077C8  0102               	movlb	2	; () banked
 23360  0077CA  1702               	andwf	(_loRa+2)& (0+255),f,b
 23361                           
 23362                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23363  0077CC  0E01               	movlw	1
 23364  0077CE  6FD9               	movwf	(_loRa+217)& (0+255),b
 23365                           
 23366                           ; BSR set to: 2
 23367                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23368  0077D0  9100               	bcf	_loRa& (0+255),0,b
 23369                           
 23370                           ; BSR set to: 2
 23371  0077D2  0C01               	retlw	1	;funcret
 23372  0077D4                     __end_of_ResetParametersForConfirmedTransmission:
 23373                           	opt stack 0
 23374                           tosu	equ	0xFFF
 23375                           tosh	equ	0xFFE
 23376                           tosl	equ	0xFFD
 23377                           pclath	equ	0xFFA
 23378                           tblptru	equ	0xFF8
 23379                           tblptrh	equ	0xFF7
 23380                           tblptrl	equ	0xFF6
 23381                           tablat	equ	0xFF5
 23382                           prodh	equ	0xFF4
 23383                           prodl	equ	0xFF3
 23384                           intcon	equ	0xFF2
 23385                           intcon2	equ	0xFF1
 23386                           intcon3	equ	0xFF0
 23387                           indf0	equ	0xFEF
 23388                           postinc0	equ	0xFEE
 23389                           fsr0h	equ	0xFEA
 23390                           fsr0l	equ	0xFE9
 23391                           wreg	equ	0xFE8
 23392                           postinc1	equ	0xFE6
 23393                           postdec1	equ	0xFE5
 23394                           plusw1	equ	0xFE3
 23395                           fsr1h	equ	0xFE2
 23396                           fsr1l	equ	0xFE1
 23397                           indf2	equ	0xFDF
 23398                           postinc2	equ	0xFDE
 23399                           postdec2	equ	0xFDD
 23400                           plusw2	equ	0xFDB
 23401                           fsr2h	equ	0xFDA
 23402                           fsr2l	equ	0xFD9
 23403                           status	equ	0xFD8
 23404                           
 23405 ;; *************** function _RADIO_ReleaseData *****************
 23406 ;; Defined at:
 23407 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23408 ;; Parameters:    Size  Location     Type
 23409 ;;		None
 23410 ;; Auto vars:     Size  Location     Type
 23411 ;;		None
 23412 ;; Return value:  Size  Location     Type
 23413 ;;                  1    wreg      void 
 23414 ;; Registers used:
 23415 ;;		status,2, status,0
 23416 ;; Tracked objects:
 23417 ;;		On entry : C/2
 23418 ;;		On exit  : F/1
 23419 ;;		Unchanged: 0/0
 23420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23425 ;;Total ram usage:        0 bytes
 23426 ;; Hardware stack levels used:    1
 23427 ;; Hardware stack levels required when called:    7
 23428 ;; This function calls:
 23429 ;;		Nothing
 23430 ;; This function is called by:
 23431 ;;		_LORAWAN_ReceiveWindow1Callback
 23432 ;;		_LORAWAN_ReceiveWindow2Callback
 23433 ;;		_LORAWAN_EnterContinuousReceive
 23434 ;;		_LORAWAN_RxDone
 23435 ;; This function uses a non-reentrant model
 23436 ;;
 23437                           
 23438                           	psect	text121
 23439  007936                     __ptext121:
 23440                           	opt stack 0
 23441  007936                     _RADIO_ReleaseData:
 23442                           	opt stack 18
 23443                           
 23444                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23445                           
 23446                           ; BSR set to: 2
 23447                           ;incstack = 0
 23448  007936  0101               	movlb	1	; () banked
 23449  007938  958D               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23450                           
 23451                           ; BSR set to: 1
 23452  00793A  0012               	return		;funcret
 23453  00793C                     __end_of_RADIO_ReleaseData:
 23454                           	opt stack 0
 23455                           tosu	equ	0xFFF
 23456                           tosh	equ	0xFFE
 23457                           tosl	equ	0xFFD
 23458                           pclath	equ	0xFFA
 23459                           tblptru	equ	0xFF8
 23460                           tblptrh	equ	0xFF7
 23461                           tblptrl	equ	0xFF6
 23462                           tablat	equ	0xFF5
 23463                           prodh	equ	0xFF4
 23464                           prodl	equ	0xFF3
 23465                           intcon	equ	0xFF2
 23466                           intcon2	equ	0xFF1
 23467                           intcon3	equ	0xFF0
 23468                           indf0	equ	0xFEF
 23469                           postinc0	equ	0xFEE
 23470                           fsr0h	equ	0xFEA
 23471                           fsr0l	equ	0xFE9
 23472                           wreg	equ	0xFE8
 23473                           postinc1	equ	0xFE6
 23474                           postdec1	equ	0xFE5
 23475                           plusw1	equ	0xFE3
 23476                           fsr1h	equ	0xFE2
 23477                           fsr1l	equ	0xFE1
 23478                           indf2	equ	0xFDF
 23479                           postinc2	equ	0xFDE
 23480                           postdec2	equ	0xFDD
 23481                           plusw2	equ	0xFDB
 23482                           fsr2h	equ	0xFDA
 23483                           fsr2l	equ	0xFD9
 23484                           status	equ	0xFD8
 23485                           
 23486 ;; *************** function _RADIO_ReceiveStop *****************
 23487 ;; Defined at:
 23488 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23489 ;; Parameters:    Size  Location     Type
 23490 ;;		None
 23491 ;; Auto vars:     Size  Location     Type
 23492 ;;		None
 23493 ;; Return value:  Size  Location     Type
 23494 ;;                  1    wreg      void 
 23495 ;; Registers used:
 23496 ;;		wreg, status,2, status,0, cstack
 23497 ;; Tracked objects:
 23498 ;;		On entry : F/2
 23499 ;;		On exit  : F/1
 23500 ;;		Unchanged: 0/0
 23501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23506 ;;Total ram usage:        0 bytes
 23507 ;; Hardware stack levels used:    1
 23508 ;; Hardware stack levels required when called:   11
 23509 ;; This function calls:
 23510 ;;		_RADIO_WriteMode
 23511 ;; This function is called by:
 23512 ;;		_LORAWAN_Send
 23513 ;;		_LORAWAN_ReceiveWindow1Callback
 23514 ;;		_LORAWAN_ReceiveWindow2Callback
 23515 ;;		_LORAWAN_EnterContinuousReceive
 23516 ;; This function uses a non-reentrant model
 23517 ;;
 23518                           
 23519                           	psect	text122
 23520  0074EC                     __ptext122:
 23521                           	opt stack 0
 23522  0074EC                     _RADIO_ReceiveStop:
 23523                           	opt stack 17
 23524                           
 23525                           ; BSR set to: 2
 23526                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23527                           
 23528                           ; BSR set to: 1
 23529                           ;incstack = 0
 23530  0074EC  0E02               	movlw	2
 23531  0074EE  0101               	movlb	1	; () banked
 23532  0074F0  198D               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23533  0074F2  A4D8               	btfss	status,2,c
 23534  0074F4  0012               	return	
 23535                           
 23536                           ; BSR set to: 1
 23537                           ;radio_driver_SX1276.c: 954: {
 23538                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 23539  0074F6  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23540  0074FA  0E00               	movlw	0
 23541  0074FC  0100               	movlb	0	; () banked
 23542  0074FE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23543  007500  EC6E  F028         	call	_RADIO_WriteMode
 23544                           
 23545                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23546  007504  0101               	movlb	1	; () banked
 23547  007506  938D               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23548                           
 23549                           ; BSR set to: 1
 23550  007508  0012               	return		;funcret
 23551  00750A                     __end_of_RADIO_ReceiveStop:
 23552                           	opt stack 0
 23553                           tosu	equ	0xFFF
 23554                           tosh	equ	0xFFE
 23555                           tosl	equ	0xFFD
 23556                           pclath	equ	0xFFA
 23557                           tblptru	equ	0xFF8
 23558                           tblptrh	equ	0xFF7
 23559                           tblptrl	equ	0xFF6
 23560                           tablat	equ	0xFF5
 23561                           prodh	equ	0xFF4
 23562                           prodl	equ	0xFF3
 23563                           intcon	equ	0xFF2
 23564                           intcon2	equ	0xFF1
 23565                           intcon3	equ	0xFF0
 23566                           indf0	equ	0xFEF
 23567                           postinc0	equ	0xFEE
 23568                           fsr0h	equ	0xFEA
 23569                           fsr0l	equ	0xFE9
 23570                           wreg	equ	0xFE8
 23571                           postinc1	equ	0xFE6
 23572                           postdec1	equ	0xFE5
 23573                           plusw1	equ	0xFE3
 23574                           fsr1h	equ	0xFE2
 23575                           fsr1l	equ	0xFE1
 23576                           indf2	equ	0xFDF
 23577                           postinc2	equ	0xFDE
 23578                           postdec2	equ	0xFDD
 23579                           plusw2	equ	0xFDB
 23580                           fsr2h	equ	0xFDA
 23581                           fsr2l	equ	0xFD9
 23582                           status	equ	0xFD8
 23583                           
 23584 ;; *************** function _RADIO_ReceiveStart *****************
 23585 ;; Defined at:
 23586 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23587 ;; Parameters:    Size  Location     Type
 23588 ;;  rxWindowSize    2   54[BANK0 ] unsigned int 
 23589 ;; Auto vars:     Size  Location     Type
 23590 ;;		None
 23591 ;; Return value:  Size  Location     Type
 23592 ;;                  2   54[BANK0 ] enum E7805
 23593 ;; Registers used:
 23594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23595 ;; Tracked objects:
 23596 ;;		On entry : F/0
 23597 ;;		On exit  : F/0
 23598 ;;		Unchanged: 0/0
 23599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23600 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23601 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23603 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23604 ;;Total ram usage:       10 bytes
 23605 ;; Hardware stack levels used:    1
 23606 ;; Hardware stack levels required when called:   12
 23607 ;; This function calls:
 23608 ;;		_RADIO_RegisterWrite
 23609 ;;		_RADIO_WriteConfiguration
 23610 ;;		_RADIO_WriteMode
 23611 ;;		_SwTimerSetTimeout
 23612 ;;		_SwTimerStart
 23613 ;;		___lldiv
 23614 ;; This function is called by:
 23615 ;;		_LORAWAN_ReceiveWindow1Callback
 23616 ;;		_LORAWAN_ReceiveWindow2Callback
 23617 ;;		_LORAWAN_EnterContinuousReceive
 23618 ;; This function uses a non-reentrant model
 23619 ;;
 23620                           
 23621                           	psect	text123
 23622  002BD4                     __ptext123:
 23623                           	opt stack 0
 23624  002BD4                     _RADIO_ReceiveStart:
 23625                           	opt stack 13
 23626                           
 23627                           ; BSR set to: 0
 23628                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23629                           
 23630                           ; BSR set to: 1
 23631                           ;incstack = 0
 23632  002BD4  0101               	movlb	1	; () banked
 23633  002BD6  A58D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23634  002BD8  D006               	goto	l12796
 23635                           
 23636                           ; BSR set to: 1
 23637                           ;radio_driver_SX1276.c: 878: {
 23638                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23639  002BDA  0E80               	movlw	128
 23640  002BDC  0100               	movlb	0	; () banked
 23641  002BDE  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23642  002BE0  0E03               	movlw	3
 23643  002BE2  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23644  002BE4  0C03               	retlw	3
 23645  002BE6                     l12796:
 23646                           
 23647                           ; BSR set to: 1
 23648                           ;radio_driver_SX1276.c: 880: }
 23649                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 23650  002BE6  C18D  F098         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23651  002BEA  0E03               	movlw	3
 23652  002BEC  0100               	movlb	0	; () banked
 23653  002BEE  1798               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23654  002BF0  E005               	bz	l12802
 23655                           
 23656                           ; BSR set to: 0
 23657                           ;radio_driver_SX1276.c: 883: {
 23658                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23659  002BF2  0E80               	movlw	128
 23660  002BF4  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23661  002BF6  0E04               	movlw	4
 23662  002BF8  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23663  002BFA  0C04               	retlw	4
 23664  002BFC                     l12802:
 23665                           
 23666                           ; BSR set to: 0
 23667                           ;radio_driver_SX1276.c: 885: }
 23668                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23669  002BFC  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23670  002BFE  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23671  002C00  E107               	bnz	l12806
 23672                           
 23673                           ; BSR set to: 0
 23674                           ;radio_driver_SX1276.c: 888: {
 23675                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23676  002C02  0E00               	movlw	0
 23677  002C04  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23678  002C06  0E04               	movlw	4
 23679  002C08  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23680  002C0A  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23681                           
 23682                           ;radio_driver_SX1276.c: 890: }
 23683  002C0E  D006               	goto	l12808
 23684  002C10                     l12806:
 23685                           
 23686                           ; BSR set to: 0
 23687                           ;radio_driver_SX1276.c: 891: else
 23688                           ;radio_driver_SX1276.c: 892: {
 23689                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 23690  002C10  C096  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23691  002C14  C097  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23692  002C18  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23693  002C1C                     l12808:
 23694                           
 23695                           ;radio_driver_SX1276.c: 894: }
 23696                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 23697  002C1C  0101               	movlb	1	; () banked
 23698  002C1E  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23699  002C20  E111               	bnz	l12812
 23700                           
 23701                           ; BSR set to: 1
 23702                           ;radio_driver_SX1276.c: 897: {
 23703                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 23704  002C22  0E01               	movlw	1
 23705  002C24  0100               	movlb	0	; () banked
 23706  002C26  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23707  002C28  0E22               	movlw	34
 23708  002C2A  EC85  F03A         	call	_RADIO_RegisterWrite
 23709                           
 23710                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23711  002C2E  0100               	movlb	0	; () banked
 23712  002C30  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23713  002C32  0E40               	movlw	64
 23714  002C34  EC85  F03A         	call	_RADIO_RegisterWrite
 23715                           
 23716                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23717  002C38  0100               	movlb	0	; () banked
 23718  002C3A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23719  002C3C  0E41               	movlw	65
 23720  002C3E  EC85  F03A         	call	_RADIO_RegisterWrite
 23721                           
 23722                           ;radio_driver_SX1276.c: 908: }
 23723  002C42  D014               	goto	l12814
 23724  002C44                     l12812:
 23725                           
 23726                           ; BSR set to: 1
 23727                           ;radio_driver_SX1276.c: 909: else
 23728                           ;radio_driver_SX1276.c: 910: {
 23729                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23730  002C44  C19E  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23731  002C48  0E12               	movlw	18
 23732  002C4A  EC85  F03A         	call	_RADIO_RegisterWrite
 23733                           
 23734                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23735  002C4E  C19F  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23736  002C52  0E13               	movlw	19
 23737  002C54  EC85  F03A         	call	_RADIO_RegisterWrite
 23738                           
 23739                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23740  002C58  0100               	movlb	0	; () banked
 23741  002C5A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23742  002C5C  0E40               	movlw	64
 23743  002C5E  EC85  F03A         	call	_RADIO_RegisterWrite
 23744                           
 23745                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23746  002C62  0100               	movlb	0	; () banked
 23747  002C64  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 23748  002C66  0E41               	movlw	65
 23749  002C68  EC85  F03A         	call	_RADIO_RegisterWrite
 23750  002C6C                     l12814:
 23751                           
 23752                           ;radio_driver_SX1276.c: 917: }
 23753                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 23754  002C6C  0101               	movlb	1	; () banked
 23755  002C6E  838D               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23756                           
 23757                           ; BSR set to: 1
 23758                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23759  002C70  0EE7               	movlw	231
 23760  002C72  178D               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23761                           
 23762                           ; BSR set to: 1
 23763                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23764  002C74  0100               	movlb	0	; () banked
 23765  002C76  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23766  002C78  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23767  002C7A  E108               	bnz	l12822
 23768                           
 23769                           ; BSR set to: 0
 23770                           ;radio_driver_SX1276.c: 925: {
 23771                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 23772  002C7C  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23773  002C80  0E00               	movlw	0
 23774  002C82  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23775  002C84  0E05               	movlw	5
 23776  002C86  EC6E  F028         	call	_RADIO_WriteMode
 23777                           
 23778                           ;radio_driver_SX1276.c: 927: }
 23779  002C8A  D041               	goto	l12832
 23780  002C8C                     l12822:
 23781                           
 23782                           ; BSR set to: 0
 23783                           ;radio_driver_SX1276.c: 928: else
 23784                           ;radio_driver_SX1276.c: 929: {
 23785                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 23786  002C8C  0101               	movlb	1	; () banked
 23787  002C8E  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23788  002C90  E109               	bnz	l12826
 23789                           
 23790                           ; BSR set to: 1
 23791                           ;radio_driver_SX1276.c: 931: {
 23792                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 23793  002C92  0E01               	movlw	1
 23794  002C94  0100               	movlb	0	; () banked
 23795  002C96  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23796  002C98  0E00               	movlw	0
 23797  002C9A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23798  002C9C  0E06               	movlw	6
 23799  002C9E  EC6E  F028         	call	_RADIO_WriteMode
 23800                           
 23801                           ;radio_driver_SX1276.c: 933: }
 23802  002CA2  D035               	goto	l12832
 23803  002CA4                     l12826:
 23804                           
 23805                           ; BSR set to: 1
 23806                           ;radio_driver_SX1276.c: 934: else
 23807                           ;radio_driver_SX1276.c: 935: {
 23808                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23809  002CA4  0E00               	movlw	0
 23810  002CA6  0100               	movlb	0	; () banked
 23811  002CA8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23812  002CAA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23813  002CAC  0E05               	movlw	5
 23814  002CAE  EC6E  F028         	call	_RADIO_WriteMode
 23815                           
 23816                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23817  002CB2  0100               	movlb	0	; () banked
 23818  002CB4  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23819  002CB6  6F98               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23820  002CB8  5197               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23821  002CBA  6F99               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23822  002CBC  6B9A               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23823  002CBE  6B9B               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23824  002CC0  0E0C               	movlw	12
 23825  002CC2                     u13825:
 23826  002CC2  90D8               	bcf	status,0,c
 23827  002CC4  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23828  002CC6  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23829  002CC8  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23830  002CCA  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23831  002CCC  2EE8               	decfsz	wreg,f,c
 23832  002CCE  D7F9               	goto	u13825
 23833  002CD0  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23834  002CD4  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23835  002CD8  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23836  002CDC  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23837  002CE0  0E7D               	movlw	125
 23838  002CE2  6F68               	movwf	___lldiv@divisor& (0+255),b
 23839  002CE4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23840  002CE6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23841  002CE8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23842  002CEA  EC1A  F030         	call	___lldiv	;wreg free
 23843  002CEE  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23844  002CF2  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23845  002CF6  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23846  002CFA  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23847  002CFE  0101               	movlb	1	; () banked
 23848  002D00  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23849  002D02  ECA5  F036         	call	_SwTimerSetTimeout
 23850                           
 23851                           ; BSR set to: 0
 23852                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23853  002D06  0101               	movlb	1	; () banked
 23854  002D08  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23855  002D0A  EC58  F02E         	call	_SwTimerStart
 23856  002D0E                     l12832:
 23857                           
 23858                           ;radio_driver_SX1276.c: 939: }
 23859                           ;radio_driver_SX1276.c: 940: }
 23860                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 23861  002D0E  0101               	movlb	1	; () banked
 23862  002D10  5194               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23863  002D12  1195               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23864  002D14  1196               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23865  002D16  1197               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23866  002D18  E059               	bz	l12844
 23867                           
 23868                           ; BSR set to: 1
 23869                           ;radio_driver_SX1276.c: 943: {
 23870                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 23871  002D1A  5197               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23872  002D1C  E106               	bnz	u13840
 23873  002D1E  2994               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23874  002D20  0EFF               	movlw	255
 23875  002D22  5995               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23876  002D24  0E0F               	movlw	15
 23877  002D26  5996               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23878  002D28  E319               	bnc	l12838
 23879  002D2A                     u13840:
 23880                           
 23881                           ; BSR set to: 1
 23882  002D2A  C194  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 23883  002D2E  C195  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23884  002D32  C196  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23885  002D36  C197  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23886  002D3A  0E7D               	movlw	125
 23887  002D3C  0100               	movlb	0	; () banked
 23888  002D3E  6F68               	movwf	___lldiv@divisor& (0+255),b
 23889  002D40  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23890  002D42  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23891  002D44  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23892  002D46  EC1A  F030         	call	___lldiv	;wreg free
 23893  002D4A  0E0C               	movlw	12
 23894  002D4C                     u13855:
 23895  002D4C  90D8               	bcf	status,0,c
 23896  002D4E  3764               	rlcf	?___lldiv& (0+255),f,b
 23897  002D50  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23898  002D52  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23899  002D54  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23900  002D56  2EE8               	decfsz	wreg,f,c
 23901  002D58  D7F9               	goto	u13855
 23902  002D5A  D020               	goto	L14
 23903  002D5C                     l12838:
 23904                           
 23905                           ; BSR set to: 1
 23906  002D5C  C194  F098         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23907  002D60  C195  F099         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23908  002D64  C196  F09A         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23909  002D68  C197  F09B         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23910  002D6C  0E0C               	movlw	12
 23911  002D6E                     u13865:
 23912  002D6E  90D8               	bcf	status,0,c
 23913  002D70  0100               	movlb	0	; () banked
 23914  002D72  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23915  002D74  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23916  002D76  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23917  002D78  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23918  002D7A  2EE8               	decfsz	wreg,f,c
 23919  002D7C  D7F8               	goto	u13865
 23920  002D7E  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23921  002D82  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23922  002D86  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23923  002D8A  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23924  002D8E  0E7D               	movlw	125
 23925  002D90  6F68               	movwf	___lldiv@divisor& (0+255),b
 23926  002D92  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23927  002D94  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23928  002D96  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23929  002D98  EC1A  F030         	call	___lldiv	;wreg free
 23930  002D9C                     L14:
 23931  002D9C  C064  F09C         	movff	?___lldiv,_RADIO_ReceiveStart$1199
 23932  002DA0  C065  F09D         	movff	?___lldiv+1,_RADIO_ReceiveStart$1199+1
 23933  002DA4  C066  F09E         	movff	?___lldiv+2,_RADIO_ReceiveStart$1199+2
 23934  002DA8  C067  F09F         	movff	?___lldiv+3,_RADIO_ReceiveStart$1199+3
 23935                           
 23936                           ; BSR set to: 0
 23937  002DAC  C09C  F071         	movff	_RADIO_ReceiveStart$1199,SwTimerSetTimeout@timeout
 23938  002DB0  C09D  F072         	movff	_RADIO_ReceiveStart$1199+1,SwTimerSetTimeout@timeout+1
 23939  002DB4  C09E  F073         	movff	_RADIO_ReceiveStart$1199+2,SwTimerSetTimeout@timeout+2
 23940  002DB8  C09F  F074         	movff	_RADIO_ReceiveStart$1199+3,SwTimerSetTimeout@timeout+3
 23941  002DBC  0101               	movlb	1	; () banked
 23942  002DBE  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23943  002DC0  ECA5  F036         	call	_SwTimerSetTimeout
 23944                           
 23945                           ; BSR set to: 0
 23946                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23947  002DC4  0101               	movlb	1	; () banked
 23948  002DC6  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23949  002DC8  EC58  F02E         	call	_SwTimerStart
 23950  002DCC                     l12844:
 23951                           
 23952                           ;radio_driver_SX1276.c: 946: }
 23953                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 23954  002DCC  0100               	movlb	0	; () banked
 23955  002DCE  6B96               	clrf	?_RADIO_ReceiveStart& (0+255),b
 23956  002DD0  6B97               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23957                           
 23958                           ; BSR set to: 0
 23959  002DD2  0012               	return		;funcret
 23960  002DD4                     __end_of_RADIO_ReceiveStart:
 23961                           	opt stack 0
 23962                           tosu	equ	0xFFF
 23963                           tosh	equ	0xFFE
 23964                           tosl	equ	0xFFD
 23965                           pclath	equ	0xFFA
 23966                           tblptru	equ	0xFF8
 23967                           tblptrh	equ	0xFF7
 23968                           tblptrl	equ	0xFF6
 23969                           tablat	equ	0xFF5
 23970                           prodh	equ	0xFF4
 23971                           prodl	equ	0xFF3
 23972                           intcon	equ	0xFF2
 23973                           intcon2	equ	0xFF1
 23974                           intcon3	equ	0xFF0
 23975                           indf0	equ	0xFEF
 23976                           postinc0	equ	0xFEE
 23977                           fsr0h	equ	0xFEA
 23978                           fsr0l	equ	0xFE9
 23979                           wreg	equ	0xFE8
 23980                           postinc1	equ	0xFE6
 23981                           postdec1	equ	0xFE5
 23982                           plusw1	equ	0xFE3
 23983                           fsr1h	equ	0xFE2
 23984                           fsr1l	equ	0xFE1
 23985                           indf2	equ	0xFDF
 23986                           postinc2	equ	0xFDE
 23987                           postdec2	equ	0xFDD
 23988                           plusw2	equ	0xFDB
 23989                           fsr2h	equ	0xFDA
 23990                           fsr2l	equ	0xFD9
 23991                           status	equ	0xFD8
 23992                           
 23993 ;; *************** function _ConfigureRadioRx *****************
 23994 ;; Defined at:
 23995 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23996 ;; Parameters:    Size  Location     Type
 23997 ;;  dataRate        1    wreg     unsigned char 
 23998 ;;  freq            4   22[BANK0 ] unsigned long 
 23999 ;; Auto vars:     Size  Location     Type
 24000 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24001 ;; Return value:  Size  Location     Type
 24002 ;;                  1    wreg      void 
 24003 ;; Registers used:
 24004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24005 ;; Tracked objects:
 24006 ;;		On entry : F/2
 24007 ;;		On exit  : 0/0
 24008 ;;		Unchanged: 0/0
 24009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24013 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24014 ;;Total ram usage:        5 bytes
 24015 ;; Hardware stack levels used:    1
 24016 ;; Hardware stack levels required when called:   10
 24017 ;; This function calls:
 24018 ;;		_ConfigureRadio
 24019 ;;		_RADIO_SetCRC
 24020 ;;		_RADIO_SetIQInverted
 24021 ;; This function is called by:
 24022 ;;		_LORAWAN_ReceiveWindow1Callback
 24023 ;;		_LORAWAN_ReceiveWindow2Callback
 24024 ;;		_LORAWAN_EnterContinuousReceive
 24025 ;; This function uses a non-reentrant model
 24026 ;;
 24027                           
 24028                           	psect	text124
 24029  007336                     __ptext124:
 24030                           	opt stack 0
 24031  007336                     _ConfigureRadioRx:
 24032                           	opt stack 15
 24033                           
 24034                           ; BSR set to: 0
 24035                           ;incstack = 0
 24036                           ;ConfigureRadioRx@dataRate stored from wreg
 24037  007336  0100               	movlb	0	; () banked
 24038  007338  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 24039                           
 24040                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 24041  00733A  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 24042  00733E  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 24043  007342  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 24044  007346  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 24045  00734A  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 24046  00734C  ECCB  F02D         	call	_ConfigureRadio
 24047                           
 24048                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 24049  007350  0E00               	movlw	0
 24050  007352  EC54  F03C         	call	_RADIO_SetCRC
 24051                           
 24052                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 24053  007356  0E01               	movlw	1
 24054  007358  EF4F  F03C         	goto	_RADIO_SetIQInverted
 24055  00735C                     __end_of_ConfigureRadioRx:
 24056                           	opt stack 0
 24057                           tosu	equ	0xFFF
 24058                           tosh	equ	0xFFE
 24059                           tosl	equ	0xFFD
 24060                           pclath	equ	0xFFA
 24061                           tblptru	equ	0xFF8
 24062                           tblptrh	equ	0xFF7
 24063                           tblptrl	equ	0xFF6
 24064                           tablat	equ	0xFF5
 24065                           prodh	equ	0xFF4
 24066                           prodl	equ	0xFF3
 24067                           intcon	equ	0xFF2
 24068                           intcon2	equ	0xFF1
 24069                           intcon3	equ	0xFF0
 24070                           indf0	equ	0xFEF
 24071                           postinc0	equ	0xFEE
 24072                           fsr0h	equ	0xFEA
 24073                           fsr0l	equ	0xFE9
 24074                           wreg	equ	0xFE8
 24075                           postinc1	equ	0xFE6
 24076                           postdec1	equ	0xFE5
 24077                           plusw1	equ	0xFE3
 24078                           fsr1h	equ	0xFE2
 24079                           fsr1l	equ	0xFE1
 24080                           indf2	equ	0xFDF
 24081                           postinc2	equ	0xFDE
 24082                           postdec2	equ	0xFDD
 24083                           plusw2	equ	0xFDB
 24084                           fsr2h	equ	0xFDA
 24085                           fsr2l	equ	0xFD9
 24086                           status	equ	0xFD8
 24087                           
 24088 ;; *************** function _INTERRUPT_GetDioStatus *****************
 24089 ;; Defined at:
 24090 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 24091 ;; Parameters:    Size  Location     Type
 24092 ;;		None
 24093 ;; Auto vars:     Size  Location     Type
 24094 ;;  a               1    4[BANK0 ] unsigned char 
 24095 ;; Return value:  Size  Location     Type
 24096 ;;                  1    wreg      unsigned char 
 24097 ;; Registers used:
 24098 ;;		wreg, status,2
 24099 ;; Tracked objects:
 24100 ;;		On entry : F/0
 24101 ;;		On exit  : F/0
 24102 ;;		Unchanged: 0/0
 24103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24107 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24108 ;;Total ram usage:        1 bytes
 24109 ;; Hardware stack levels used:    1
 24110 ;; Hardware stack levels required when called:    7
 24111 ;; This function calls:
 24112 ;;		Nothing
 24113 ;; This function is called by:
 24114 ;;		_LORAWAN_Mainloop
 24115 ;; This function uses a non-reentrant model
 24116 ;;
 24117                           
 24118                           	psect	text125
 24119  0077D4                     __ptext125:
 24120                           	opt stack 0
 24121  0077D4                     _INTERRUPT_GetDioStatus:
 24122                           	opt stack 22
 24123                           
 24124                           ; BSR set to: 0
 24125                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 24126                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 24127                           
 24128                           ;incstack = 0
 24129  0077D4  9EF2               	bcf	intcon,7,c	;volatile
 24130                           
 24131                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 24132  0077D6  C0F0  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 24133                           
 24134                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 24135  0077DA  6BF0               	clrf	_dioStatus& (0+255),b	;volatile
 24136                           
 24137                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 24138  0077DC  8EF2               	bsf	intcon,7,c	;volatile
 24139                           
 24140                           ; BSR set to: 0
 24141                           ;interrupt_manager_lora_addons.c: 55: return a;
 24142  0077DE  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 24143                           
 24144                           ; BSR set to: 0
 24145  0077E0  0012               	return		;funcret
 24146  0077E2                     __end_of_INTERRUPT_GetDioStatus:
 24147                           	opt stack 0
 24148                           tosu	equ	0xFFF
 24149                           tosh	equ	0xFFE
 24150                           tosl	equ	0xFFD
 24151                           pclath	equ	0xFFA
 24152                           tblptru	equ	0xFF8
 24153                           tblptrh	equ	0xFF7
 24154                           tblptrl	equ	0xFF6
 24155                           tablat	equ	0xFF5
 24156                           prodh	equ	0xFF4
 24157                           prodl	equ	0xFF3
 24158                           intcon	equ	0xFF2
 24159                           intcon2	equ	0xFF1
 24160                           intcon3	equ	0xFF0
 24161                           indf0	equ	0xFEF
 24162                           postinc0	equ	0xFEE
 24163                           fsr0h	equ	0xFEA
 24164                           fsr0l	equ	0xFE9
 24165                           wreg	equ	0xFE8
 24166                           postinc1	equ	0xFE6
 24167                           postdec1	equ	0xFE5
 24168                           plusw1	equ	0xFE3
 24169                           fsr1h	equ	0xFE2
 24170                           fsr1l	equ	0xFE1
 24171                           indf2	equ	0xFDF
 24172                           postinc2	equ	0xFDE
 24173                           postdec2	equ	0xFDD
 24174                           plusw2	equ	0xFDB
 24175                           fsr2h	equ	0xFDA
 24176                           fsr2l	equ	0xFD9
 24177                           status	equ	0xFD8
 24178                           
 24179 ;; *************** function _LORAWAN_Join *****************
 24180 ;; Defined at:
 24181 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24182 ;; Parameters:    Size  Location     Type
 24183 ;;  activationTy    1    wreg     enum E7980
 24184 ;; Auto vars:     Size  Location     Type
 24185 ;;  activationTy    1  126[BANK0 ] enum E7980
 24186 ;;  result          1  125[BANK0 ] enum E7957
 24187 ;;  bufferIndex     1  124[BANK0 ] unsigned char 
 24188 ;; Return value:  Size  Location     Type
 24189 ;;                  1    wreg      enum E7957
 24190 ;; Registers used:
 24191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24192 ;; Tracked objects:
 24193 ;;		On entry : F/2
 24194 ;;		On exit  : D/0
 24195 ;;		Unchanged: 0/0
 24196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24198 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24200 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24201 ;;Total ram usage:        3 bytes
 24202 ;; Hardware stack levels used:    1
 24203 ;; Hardware stack levels required when called:   14
 24204 ;; This function calls:
 24205 ;;		_PrepareJoinRequestFrame
 24206 ;;		_RADIO_Transmit
 24207 ;;		_SelectChannelForTransmission
 24208 ;;		_SwTimerSetTimeout
 24209 ;;		_SwTimerStart
 24210 ;;		_UpdateJoinInProgress
 24211 ;; This function is called by:
 24212 ;;		_main
 24213 ;; This function uses a non-reentrant model
 24214 ;;
 24215                           
 24216                           	psect	text126
 24217  005C24                     __ptext126:
 24218                           	opt stack 0
 24219  005C24                     _LORAWAN_Join:
 24220                           	opt stack 16
 24221                           
 24222                           ; BSR set to: 0
 24223                           ;incstack = 0
 24224                           ;LORAWAN_Join@activationTypeNew stored from wreg
 24225  005C24  0100               	movlb	0	; () banked
 24226  005C26  6FDE               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 24227                           
 24228                           ;lorawan.c: 117: uint8_t bufferIndex;
 24229                           ;lorawan.c: 118: LorawanError_t result;
 24230                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 24231  005C28  0102               	movlb	2	; () banked
 24232  005C2A  A103               	btfss	(_loRa+3)& (0+255),0,b
 24233                           
 24234                           ; BSR set to: 2
 24235                           ;lorawan.c: 123: }
 24236                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 24237  005C2C  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 24238  005C2E  0012               	return	
 24239                           
 24240                           ; BSR set to: 2
 24241                           ;lorawan.c: 128: }
 24242                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 24243  005C30  5102               	movf	(_loRa+2)& (0+255),w,b
 24244  005C32  0B0F               	andlw	15
 24245  005C34  E001               	bz	l1717
 24246  005C36  0012               	return	
 24247  005C38                     l1717:
 24248                           
 24249                           ; BSR set to: 2
 24250                           ;lorawan.c: 133: }
 24251                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 24252  005C38  C0DE  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 24253                           
 24254                           ; BSR set to: 2
 24255                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 24256  005C3C  0100               	movlb	0	; () banked
 24257  005C3E  51DE               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 24258  005C40  E11F               	bnz	l1718
 24259                           
 24260                           ; BSR set to: 0
 24261                           ;lorawan.c: 138: {
 24262                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 24263  005C42  0102               	movlb	2	; () banked
 24264  005C44  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 24265                           
 24266                           ; BSR set to: 2
 24267  005C46  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 24268  005C48  0012               	return	
 24269                           
 24270                           ; BSR set to: 2
 24271  005C4A  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 24272  005C4C  0012               	return	
 24273                           
 24274                           ; BSR set to: 2
 24275                           ;lorawan.c: 144: else
 24276                           ;lorawan.c: 145: {
 24277                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 24278  005C4E  EC28  F023         	call	_PrepareJoinRequestFrame	;wreg free
 24279  005C52  6FDC               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 24280                           
 24281                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 24282  005C54  0E00               	movlw	0
 24283  005C56  EC5C  F033         	call	_SelectChannelForTransmission
 24284  005C5A  6FDD               	movwf	LORAWAN_Join@result& (0+255),b
 24285                           
 24286                           ; BSR set to: 0
 24287                           ;lorawan.c: 149: if (result == OK)
 24288  005C5C  51DD               	movf	LORAWAN_Join@result& (0+255),w,b
 24289  005C5E  A4D8               	btfss	status,2,c
 24290  005C60  0012               	return	
 24291                           
 24292                           ; BSR set to: 0
 24293                           ;lorawan.c: 150: {
 24294                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 24295  005C62  0EE0               	movlw	low _macBuffer
 24296  005C64  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 24297  005C66  0E04               	movlw	high _macBuffer
 24298  005C68  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 24299  005C6A  C0DC  F098         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 24300  005C6E  ECE2  F017         	call	_RADIO_Transmit	;wreg free
 24301  005C72  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 24302  005C74  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 24303  005C76  A4D8               	btfss	status,2,c
 24304  005C78  0012               	return	
 24305                           
 24306                           ; BSR set to: 0
 24307                           ;lorawan.c: 152: {
 24308                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 24309  005C7A  0E01               	movlw	1
 24310  005C7C  EF2F  F03B         	goto	_UpdateJoinInProgress
 24311  005C80                     l1718:
 24312                           
 24313                           ; BSR set to: 0
 24314                           ;lorawan.c: 167: else
 24315                           ;lorawan.c: 168: {
 24316                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 24317  005C80  0102               	movlb	2	; () banked
 24318  005C82  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 24319                           
 24320                           ; BSR set to: 2
 24321  005C84  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 24322  005C86  0012               	return	
 24323                           
 24324                           ; BSR set to: 2
 24325  005C88  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 24326  005C8A  0012               	return	
 24327                           
 24328                           ; BSR set to: 2
 24329                           ;lorawan.c: 174: else
 24330                           ;lorawan.c: 175: {
 24331                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 24332  005C8C  0E07               	movlw	7
 24333  005C8E  EC2F  F03B         	call	_UpdateJoinInProgress
 24334                           
 24335                           ; BSR set to: 2
 24336                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 24337  005C92  0E8F               	movlw	143
 24338  005C94  0100               	movlb	0	; () banked
 24339  005C96  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 24340  005C98  0E02               	movlw	2
 24341  005C9A  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 24342  005C9C  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 24343  005C9E  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 24344  005CA0  0102               	movlb	2	; () banked
 24345  005CA2  51F3               	movf	(_loRa+243)& (0+255),w,b
 24346  005CA4  ECA5  F036         	call	_SwTimerSetTimeout
 24347                           
 24348                           ; BSR set to: 0
 24349                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 24350  005CA8  0102               	movlb	2	; () banked
 24351  005CAA  51F3               	movf	(_loRa+243)& (0+255),w,b
 24352  005CAC  EF58  F02E         	goto	_SwTimerStart
 24353  005CB0                     __end_of_LORAWAN_Join:
 24354                           	opt stack 0
 24355                           tosu	equ	0xFFF
 24356                           tosh	equ	0xFFE
 24357                           tosl	equ	0xFFD
 24358                           pclath	equ	0xFFA
 24359                           tblptru	equ	0xFF8
 24360                           tblptrh	equ	0xFF7
 24361                           tblptrl	equ	0xFF6
 24362                           tablat	equ	0xFF5
 24363                           prodh	equ	0xFF4
 24364                           prodl	equ	0xFF3
 24365                           intcon	equ	0xFF2
 24366                           intcon2	equ	0xFF1
 24367                           intcon3	equ	0xFF0
 24368                           indf0	equ	0xFEF
 24369                           postinc0	equ	0xFEE
 24370                           fsr0h	equ	0xFEA
 24371                           fsr0l	equ	0xFE9
 24372                           wreg	equ	0xFE8
 24373                           postinc1	equ	0xFE6
 24374                           postdec1	equ	0xFE5
 24375                           plusw1	equ	0xFE3
 24376                           fsr1h	equ	0xFE2
 24377                           fsr1l	equ	0xFE1
 24378                           indf2	equ	0xFDF
 24379                           postinc2	equ	0xFDE
 24380                           postdec2	equ	0xFDD
 24381                           plusw2	equ	0xFDB
 24382                           fsr2h	equ	0xFDA
 24383                           fsr2l	equ	0xFD9
 24384                           status	equ	0xFD8
 24385                           
 24386 ;; *************** function _UpdateJoinInProgress *****************
 24387 ;; Defined at:
 24388 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24389 ;; Parameters:    Size  Location     Type
 24390 ;;  state           1    wreg     unsigned char 
 24391 ;; Auto vars:     Size  Location     Type
 24392 ;;  state           1    4[BANK0 ] unsigned char 
 24393 ;; Return value:  Size  Location     Type
 24394 ;;                  1    wreg      void 
 24395 ;; Registers used:
 24396 ;;		wreg, status,2, status,0
 24397 ;; Tracked objects:
 24398 ;;		On entry : D/0
 24399 ;;		On exit  : F/2
 24400 ;;		Unchanged: 0/0
 24401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24406 ;;Total ram usage:        1 bytes
 24407 ;; Hardware stack levels used:    1
 24408 ;; Hardware stack levels required when called:    7
 24409 ;; This function calls:
 24410 ;;		Nothing
 24411 ;; This function is called by:
 24412 ;;		_LORAWAN_Join
 24413 ;; This function uses a non-reentrant model
 24414 ;;
 24415                           
 24416                           	psect	text127
 24417  00765E                     __ptext127:
 24418                           	opt stack 0
 24419  00765E                     _UpdateJoinInProgress:
 24420                           	opt stack 22
 24421                           
 24422                           ;incstack = 0
 24423                           ;UpdateJoinInProgress@state stored from wreg
 24424  00765E  0100               	movlb	0	; () banked
 24425  007660  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 24426                           
 24427                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 24428  007662  0102               	movlb	2	; () banked
 24429  007664  9902               	bcf	(_loRa+2)& (0+255),4,b
 24430                           
 24431                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 24432  007666  8500               	bsf	_loRa& (0+255),2,b
 24433                           
 24434                           ; BSR set to: 2
 24435                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 24436  007668  5102               	movf	(_loRa+2)& (0+255),w,b
 24437  00766A  0100               	movlb	0	; () banked
 24438  00766C  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24439  00766E  0BF0               	andlw	-16
 24440  007670  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 24441  007672  0102               	movlb	2	; () banked
 24442  007674  6F02               	movwf	(_loRa+2)& (0+255),b
 24443                           
 24444                           ; BSR set to: 2
 24445  007676  0012               	return		;funcret
 24446  007678                     __end_of_UpdateJoinInProgress:
 24447                           	opt stack 0
 24448                           tosu	equ	0xFFF
 24449                           tosh	equ	0xFFE
 24450                           tosl	equ	0xFFD
 24451                           pclath	equ	0xFFA
 24452                           tblptru	equ	0xFF8
 24453                           tblptrh	equ	0xFF7
 24454                           tblptrl	equ	0xFF6
 24455                           tablat	equ	0xFF5
 24456                           prodh	equ	0xFF4
 24457                           prodl	equ	0xFF3
 24458                           intcon	equ	0xFF2
 24459                           intcon2	equ	0xFF1
 24460                           intcon3	equ	0xFF0
 24461                           indf0	equ	0xFEF
 24462                           postinc0	equ	0xFEE
 24463                           fsr0h	equ	0xFEA
 24464                           fsr0l	equ	0xFE9
 24465                           wreg	equ	0xFE8
 24466                           postinc1	equ	0xFE6
 24467                           postdec1	equ	0xFE5
 24468                           plusw1	equ	0xFE3
 24469                           fsr1h	equ	0xFE2
 24470                           fsr1l	equ	0xFE1
 24471                           indf2	equ	0xFDF
 24472                           postinc2	equ	0xFDE
 24473                           postdec2	equ	0xFDD
 24474                           plusw2	equ	0xFDB
 24475                           fsr2h	equ	0xFDA
 24476                           fsr2l	equ	0xFD9
 24477                           status	equ	0xFD8
 24478                           
 24479 ;; *************** function _SelectChannelForTransmission *****************
 24480 ;; Defined at:
 24481 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24482 ;; Parameters:    Size  Location     Type
 24483 ;;  transmission    1    wreg     unsigned char 
 24484 ;; Auto vars:     Size  Location     Type
 24485 ;;  transmission    1   37[BANK0 ] unsigned char 
 24486 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 24487 ;;  result          1   38[BANK0 ] enum E8016
 24488 ;; Return value:  Size  Location     Type
 24489 ;;                  1    wreg      enum E8016
 24490 ;; Registers used:
 24491 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24492 ;; Tracked objects:
 24493 ;;		On entry : 0/0
 24494 ;;		On exit  : F/0
 24495 ;;		Unchanged: 0/0
 24496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24498 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24500 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24501 ;;Total ram usage:        3 bytes
 24502 ;; Hardware stack levels used:    1
 24503 ;; Hardware stack levels required when called:   11
 24504 ;; This function calls:
 24505 ;;		_ConfigureRadioTx
 24506 ;;		_SearchAvailableChannel
 24507 ;; This function is called by:
 24508 ;;		_LORAWAN_RxTimeout
 24509 ;;		_LORAWAN_Join
 24510 ;;		_LORAWAN_Send
 24511 ;;		_AckRetransmissionCallback
 24512 ;;		_UnconfirmedTransmissionCallback
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           
 24516                           	psect	text128
 24517  0066B8                     __ptext128:
 24518                           	opt stack 0
 24519  0066B8                     _SelectChannelForTransmission:
 24520                           	opt stack 17
 24521                           
 24522                           ; BSR set to: 2
 24523                           ;incstack = 0
 24524                           ;SelectChannelForTransmission@transmissionType stored from wreg
 24525  0066B8  0100               	movlb	0	; () banked
 24526  0066BA  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 24527                           
 24528                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 24529                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 24530  0066BC  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 24531  0066C0  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 24532  0066C2  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 24533  0066C4  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 24534  0066C6  0E10               	movlw	16
 24535  0066C8  EC90  F027         	call	_SearchAvailableChannel
 24536  0066CC  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 24537                           
 24538                           ; BSR set to: 0
 24539                           ;lorawan_eu.c: 926: if (result == OK)
 24540  0066CE  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24541  0066D0  E120               	bnz	l13500
 24542                           
 24543                           ; BSR set to: 0
 24544                           ;lorawan_eu.c: 927: {
 24545                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 24546  0066D2  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 24547                           
 24548                           ; BSR set to: 0
 24549                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 24550  0066D6  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 24551  0066D8  0D0E               	mullw	14
 24552  0066DA  0E00               	movlw	low _Channels
 24553  0066DC  24F3               	addwf	prodl,w,c
 24554  0066DE  6ED9               	movwf	fsr2l,c
 24555  0066E0  0E04               	movlw	high _Channels
 24556  0066E2  20F4               	addwfc	prodh,w,c
 24557  0066E4  6EDA               	movwf	fsr2h,c
 24558  0066E6  CFDE F213          	movff	postinc2,_loRa+19
 24559  0066EA  CFDE F214          	movff	postinc2,_loRa+20
 24560  0066EE  CFDE F215          	movff	postinc2,_loRa+21
 24561  0066F2  CFDE F216          	movff	postinc2,_loRa+22
 24562                           
 24563                           ; BSR set to: 0
 24564                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 24565  0066F6  C2DF  F217         	movff	_loRa+223,_loRa+23
 24566                           
 24567                           ; BSR set to: 0
 24568                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 24569  0066FA  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 24570  0066FE  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 24571  006702  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 24572  006706  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 24573  00670A  0102               	movlb	2	; () banked
 24574  00670C  5117               	movf	(_loRa+23)& (0+255),w,b
 24575  00670E  EC3F  F036         	call	_ConfigureRadioTx
 24576  006712                     l13500:
 24577                           
 24578                           ;lorawan_eu.c: 933: }
 24579                           ;lorawan_eu.c: 934: return result;
 24580  006712  0100               	movlb	0	; () banked
 24581  006714  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 24582                           
 24583                           ; BSR set to: 0
 24584  006716  0012               	return		;funcret
 24585  006718                     __end_of_SelectChannelForTransmission:
 24586                           	opt stack 0
 24587                           tosu	equ	0xFFF
 24588                           tosh	equ	0xFFE
 24589                           tosl	equ	0xFFD
 24590                           pclath	equ	0xFFA
 24591                           tblptru	equ	0xFF8
 24592                           tblptrh	equ	0xFF7
 24593                           tblptrl	equ	0xFF6
 24594                           tablat	equ	0xFF5
 24595                           prodh	equ	0xFF4
 24596                           prodl	equ	0xFF3
 24597                           intcon	equ	0xFF2
 24598                           intcon2	equ	0xFF1
 24599                           intcon3	equ	0xFF0
 24600                           indf0	equ	0xFEF
 24601                           postinc0	equ	0xFEE
 24602                           fsr0h	equ	0xFEA
 24603                           fsr0l	equ	0xFE9
 24604                           wreg	equ	0xFE8
 24605                           postinc1	equ	0xFE6
 24606                           postdec1	equ	0xFE5
 24607                           plusw1	equ	0xFE3
 24608                           fsr1h	equ	0xFE2
 24609                           fsr1l	equ	0xFE1
 24610                           indf2	equ	0xFDF
 24611                           postinc2	equ	0xFDE
 24612                           postdec2	equ	0xFDD
 24613                           plusw2	equ	0xFDB
 24614                           fsr2h	equ	0xFDA
 24615                           fsr2l	equ	0xFD9
 24616                           status	equ	0xFD8
 24617                           
 24618 ;; *************** function _SearchAvailableChannel *****************
 24619 ;; Defined at:
 24620 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24621 ;; Parameters:    Size  Location     Type
 24622 ;;  maxChannels     1    wreg     unsigned char 
 24623 ;;  transmission    1   25[BANK0 ] unsigned char 
 24624 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 24625 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 24626 ;; Auto vars:     Size  Location     Type
 24627 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 24628 ;;  i               1   36[BANK0 ] unsigned char 
 24629 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 24630 ;;  result          1   33[BANK0 ] enum E8016
 24631 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 24632 ;; Return value:  Size  Location     Type
 24633 ;;                  1    wreg      enum E8016
 24634 ;; Registers used:
 24635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24636 ;; Tracked objects:
 24637 ;;		On entry : D/2
 24638 ;;		On exit  : F/0
 24639 ;;		Unchanged: 0/0
 24640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24641 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24642 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24643 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24644 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24645 ;;Total ram usage:       12 bytes
 24646 ;; Hardware stack levels used:    1
 24647 ;; Hardware stack levels required when called:   10
 24648 ;; This function calls:
 24649 ;;		_Random
 24650 ;; This function is called by:
 24651 ;;		_SelectChannelForTransmission
 24652 ;;		_LORAWAN_RxDone
 24653 ;; This function uses a non-reentrant model
 24654 ;;
 24655                           
 24656                           	psect	text129
 24657  004F20                     __ptext129:
 24658                           	opt stack 0
 24659  004F20                     _SearchAvailableChannel:
 24660                           	opt stack 17
 24661                           
 24662                           ; BSR set to: 0
 24663                           ;incstack = 0
 24664                           ;SearchAvailableChannel@maxChannels stored from wreg
 24665  004F20  0100               	movlb	0	; () banked
 24666  004F22  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 24667                           
 24668                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 24669                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 24670  004F24  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 24671                           
 24672                           ; BSR set to: 0
 24673                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 24674  004F26  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 24675  004F2A  6B78               	clrf	(Random@max+1)& (0+255),b
 24676  004F2C  EC07  F03A         	call	_Random	;wreg free
 24677  004F30  2977               	incf	?_Random& (0+255),w,b
 24678  004F32  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 24679                           
 24680                           ; BSR set to: 0
 24681                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 24682  004F34  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 24683                           
 24684                           ;lorawan_eu.c: 786: while (randomNumber)
 24685  004F38  D054               	goto	l13044
 24686  004F3A                     l1133:
 24687                           
 24688                           ; BSR set to: 0
 24689                           ;lorawan_eu.c: 787: {
 24690                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 24691  004F3A  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 24692  004F3C  D047               	goto	l13036
 24693  004F3E                     l13020:
 24694                           
 24695                           ; BSR set to: 0
 24696                           ;lorawan_eu.c: 789: {
 24697                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 24698  004F3E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24699  004F40  0D0E               	mullw	14
 24700  004F42  0E04               	movlw	low (_Channels+4)
 24701  004F44  24F3               	addwf	prodl,w,c
 24702  004F46  6ED9               	movwf	fsr2l,c
 24703  004F48  0E04               	movlw	high (_Channels+4)
 24704  004F4A  20F4               	addwfc	prodh,w,c
 24705  004F4C  6EDA               	movwf	fsr2h,c
 24706  004F4E  04DE               	decf	postinc2,w,c
 24707  004F50  E13B               	bnz	l1136
 24708                           
 24709                           ; BSR set to: 0
 24710  004F52  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24711  004F54  0D0E               	mullw	14
 24712  004F56  0E08               	movlw	low (_Channels+8)
 24713  004F58  24F3               	addwf	prodl,w,c
 24714  004F5A  6ED9               	movwf	fsr2l,c
 24715  004F5C  0E04               	movlw	high (_Channels+8)
 24716  004F5E  20F4               	addwfc	prodh,w,c
 24717  004F60  6EDA               	movwf	fsr2h,c
 24718  004F62  50DE               	movf	postinc2,w,c
 24719  004F64  10DE               	iorwf	postinc2,w,c
 24720  004F66  10DE               	iorwf	postinc2,w,c
 24721  004F68  10DE               	iorwf	postinc2,w,c
 24722  004F6A  E12E               	bnz	l1136
 24723                           
 24724                           ; BSR set to: 0
 24725  004F6C  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24726  004F6E  0D0E               	mullw	14
 24727  004F70  0E05               	movlw	low (_Channels+5)
 24728  004F72  24F3               	addwf	prodl,w,c
 24729  004F74  6ED9               	movwf	fsr2l,c
 24730  004F76  0E04               	movlw	high (_Channels+5)
 24731  004F78  20F4               	addwfc	prodh,w,c
 24732  004F7A  6EDA               	movwf	fsr2h,c
 24733  004F7C  50DF               	movf	223,w,c
 24734  004F7E  0B0F               	andlw	15
 24735  004F80  0100               	movlb	0	; () banked
 24736  004F82  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24737  004F84  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 24738  004F86  0102               	movlb	2	; () banked
 24739  004F88  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 24740  004F8A  E31E               	bnc	l1136
 24741                           
 24742                           ; BSR set to: 2
 24743  004F8C  0100               	movlb	0	; () banked
 24744  004F8E  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24745  004F90  0D0E               	mullw	14
 24746  004F92  0E05               	movlw	low (_Channels+5)
 24747  004F94  24F3               	addwf	prodl,w,c
 24748  004F96  6ED9               	movwf	fsr2l,c
 24749  004F98  0E04               	movlw	high (_Channels+5)
 24750  004F9A  20F4               	addwfc	prodh,w,c
 24751  004F9C  6EDA               	movwf	fsr2h,c
 24752  004F9E  38DF               	swapf	223,w,c
 24753  004FA0  0B0F               	andlw	15
 24754  004FA2  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 24755  004FA4  0102               	movlb	2	; () banked
 24756  004FA6  51DF               	movf	(_loRa+223)& (0+255),w,b
 24757  004FA8  0100               	movlb	0	; () banked
 24758  004FAA  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 24759  004FAC  E30D               	bnc	l1136
 24760                           
 24761                           ; BSR set to: 0
 24762                           ;lorawan_eu.c: 791: {
 24763                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 24764  004FAE  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 24765  004FB0  E10A               	bnz	l13032
 24766                           
 24767                           ; BSR set to: 0
 24768                           ;lorawan_eu.c: 793: {
 24769                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 24770  004FB2  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24771  004FB4  0D0E               	mullw	14
 24772  004FB6  0E0C               	movlw	low (_Channels+12)
 24773  004FB8  24F3               	addwf	prodl,w,c
 24774  004FBA  6ED9               	movwf	fsr2l,c
 24775  004FBC  0E04               	movlw	high (_Channels+12)
 24776  004FBE  20F4               	addwfc	prodh,w,c
 24777  004FC0  6EDA               	movwf	fsr2h,c
 24778  004FC2  04DE               	decf	postinc2,w,c
 24779  004FC4  E101               	bnz	l1136
 24780  004FC6                     l13032:
 24781                           
 24782                           ; BSR set to: 0
 24783                           ;lorawan_eu.c: 795: {
 24784                           ;lorawan_eu.c: 796: randomNumber --;
 24785  004FC6  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 24786  004FC8                     l1136:
 24787  004FC8  0100               	movlb	0	; () banked
 24788  004FCA  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 24789  004FCC                     l13036:
 24790                           
 24791                           ; BSR set to: 0
 24792  004FCC  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 24793  004FCE  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 24794  004FD0  E202               	bc	l13040
 24795                           
 24796                           ; BSR set to: 0
 24797  004FD2  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24798  004FD4  E1B4               	bnz	l13020
 24799  004FD6                     l13040:
 24800                           
 24801                           ; BSR set to: 0
 24802                           ;lorawan_eu.c: 802: }
 24803                           ;lorawan_eu.c: 803: }
 24804                           ;lorawan_eu.c: 804: }
 24805                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 24806  004FD6  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 24807  004FD8  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24808  004FDA  E103               	bnz	l13044
 24809                           
 24810                           ; BSR set to: 0
 24811                           ;lorawan_eu.c: 807: {
 24812                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 24813  004FDC  0E09               	movlw	9
 24814  004FDE  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24815                           
 24816                           ;lorawan_eu.c: 809: break;
 24817  004FE0  D002               	goto	l13046
 24818  004FE2                     l13044:
 24819                           
 24820                           ; BSR set to: 0
 24821  004FE2  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 24822  004FE4  E1AA               	bnz	l1133
 24823  004FE6                     l13046:
 24824                           
 24825                           ; BSR set to: 0
 24826                           ;lorawan_eu.c: 810: }
 24827                           ;lorawan_eu.c: 811: }
 24828                           ;lorawan_eu.c: 813: if ( i != 0)
 24829  004FE6  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 24830  004FE8  E007               	bz	l13050
 24831                           
 24832                           ; BSR set to: 0
 24833                           ;lorawan_eu.c: 814: {
 24834                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 24835  004FEA  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 24836  004FEC  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 24837  004FF0  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 24838  004FF4  6EDF               	movwf	indf2,c
 24839                           
 24840                           ;lorawan_eu.c: 816: }
 24841  004FF6  D002               	goto	l1146
 24842  004FF8                     l13050:
 24843                           
 24844                           ; BSR set to: 0
 24845                           ;lorawan_eu.c: 817: else
 24846                           ;lorawan_eu.c: 818: {
 24847                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 24848  004FF8  0E09               	movlw	9
 24849  004FFA  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 24850  004FFC                     l1146:
 24851                           
 24852                           ; BSR set to: 0
 24853                           ;lorawan_eu.c: 820: }
 24854                           ;lorawan_eu.c: 821: return result;
 24855  004FFC  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 24856                           
 24857                           ; BSR set to: 0
 24858  004FFE  0012               	return		;funcret
 24859  005000                     __end_of_SearchAvailableChannel:
 24860                           	opt stack 0
 24861                           tosu	equ	0xFFF
 24862                           tosh	equ	0xFFE
 24863                           tosl	equ	0xFFD
 24864                           pclath	equ	0xFFA
 24865                           tblptru	equ	0xFF8
 24866                           tblptrh	equ	0xFF7
 24867                           tblptrl	equ	0xFF6
 24868                           tablat	equ	0xFF5
 24869                           prodh	equ	0xFF4
 24870                           prodl	equ	0xFF3
 24871                           intcon	equ	0xFF2
 24872                           intcon2	equ	0xFF1
 24873                           intcon3	equ	0xFF0
 24874                           indf0	equ	0xFEF
 24875                           postinc0	equ	0xFEE
 24876                           fsr0h	equ	0xFEA
 24877                           fsr0l	equ	0xFE9
 24878                           wreg	equ	0xFE8
 24879                           postinc1	equ	0xFE6
 24880                           postdec1	equ	0xFE5
 24881                           plusw1	equ	0xFE3
 24882                           fsr1h	equ	0xFE2
 24883                           fsr1l	equ	0xFE1
 24884                           indf2	equ	0xFDF
 24885                           postinc2	equ	0xFDE
 24886                           postdec2	equ	0xFDD
 24887                           plusw2	equ	0xFDB
 24888                           fsr2h	equ	0xFDA
 24889                           fsr2l	equ	0xFD9
 24890                           status	equ	0xFD8
 24891                           
 24892 ;; *************** function _ConfigureRadioTx *****************
 24893 ;; Defined at:
 24894 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24895 ;; Parameters:    Size  Location     Type
 24896 ;;  dataRate        1    wreg     unsigned char 
 24897 ;;  freq            4   22[BANK0 ] unsigned long 
 24898 ;; Auto vars:     Size  Location     Type
 24899 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24900 ;;  txPower         1   27[BANK0 ] char 
 24901 ;; Return value:  Size  Location     Type
 24902 ;;                  1    wreg      void 
 24903 ;; Registers used:
 24904 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24905 ;; Tracked objects:
 24906 ;;		On entry : F/2
 24907 ;;		On exit  : 0/0
 24908 ;;		Unchanged: 0/0
 24909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24910 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24913 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24914 ;;Total ram usage:        6 bytes
 24915 ;; Hardware stack levels used:    1
 24916 ;; Hardware stack levels required when called:   10
 24917 ;; This function calls:
 24918 ;;		_ConfigureRadio
 24919 ;;		_RADIO_SetCRC
 24920 ;;		_RADIO_SetIQInverted
 24921 ;;		_RADIO_SetOutputPower
 24922 ;; This function is called by:
 24923 ;;		_SelectChannelForTransmission
 24924 ;; This function uses a non-reentrant model
 24925 ;;
 24926                           
 24927                           	psect	text130
 24928  006C7E                     __ptext130:
 24929                           	opt stack 0
 24930  006C7E                     _ConfigureRadioTx:
 24931                           	opt stack 17
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;incstack = 0
 24935                           ;ConfigureRadioTx@dataRate stored from wreg
 24936  006C7E  0100               	movlb	0	; () banked
 24937  006C80  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 24938                           
 24939                           ;lorawan_eu.c: 1257: int8_t txPower;
 24940                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 24941  006C82  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 24942  006C86  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 24943  006C8A  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 24944  006C8E  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 24945  006C92  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 24946  006C94  ECCB  F02D         	call	_ConfigureRadio
 24947                           
 24948                           ;lorawan_eu.c: 1262: {
 24949                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 24950  006C98  0EA2               	movlw	low _txPower868
 24951  006C9A  0102               	movlb	2	; () banked
 24952  006C9C  25E1               	addwf	(_loRa+225)& (0+255),w,b
 24953  006C9E  6EF6               	movwf	tblptrl,c
 24954  006CA0  6AF7               	clrf	tblptrh,c
 24955  006CA2  0EFF               	movlw	high _txPower868
 24956  006CA4  22F7               	addwfc	tblptrh,f,c
 24957  006CA6                     	if	1	;There are 3 active tblptr bytes
 24958  006CA6  6AF8               	clrf	tblptru,c
 24959  006CA8  0E00               	movlw	low (__mediumconst shr (0+16))
 24960  006CAA  22F8               	addwfc	tblptru,f,c
 24961  006CAC                     	endif
 24962  006CAC  0008               	tblrd		*
 24963  006CAE  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 24964                           
 24965                           ; BSR set to: 2
 24966                           ;lorawan_eu.c: 1268: }
 24967                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 24968                           
 24969                           ;lorawan_eu.c: 1264: }
 24970  006CB2  0100               	movlb	0	; () banked
 24971  006CB4  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 24972  006CB6  EC7E  F03C         	call	_RADIO_SetOutputPower
 24973                           
 24974                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 24975  006CBA  0E01               	movlw	1
 24976  006CBC  EC54  F03C         	call	_RADIO_SetCRC
 24977                           
 24978                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 24979  006CC0  0E00               	movlw	0
 24980  006CC2  EF4F  F03C         	goto	_RADIO_SetIQInverted
 24981  006CC6                     __end_of_ConfigureRadioTx:
 24982                           	opt stack 0
 24983                           tosu	equ	0xFFF
 24984                           tosh	equ	0xFFE
 24985                           tosl	equ	0xFFD
 24986                           pclath	equ	0xFFA
 24987                           tblptru	equ	0xFF8
 24988                           tblptrh	equ	0xFF7
 24989                           tblptrl	equ	0xFF6
 24990                           tablat	equ	0xFF5
 24991                           prodh	equ	0xFF4
 24992                           prodl	equ	0xFF3
 24993                           intcon	equ	0xFF2
 24994                           intcon2	equ	0xFF1
 24995                           intcon3	equ	0xFF0
 24996                           indf0	equ	0xFEF
 24997                           postinc0	equ	0xFEE
 24998                           fsr0h	equ	0xFEA
 24999                           fsr0l	equ	0xFE9
 25000                           wreg	equ	0xFE8
 25001                           postinc1	equ	0xFE6
 25002                           postdec1	equ	0xFE5
 25003                           plusw1	equ	0xFE3
 25004                           fsr1h	equ	0xFE2
 25005                           fsr1l	equ	0xFE1
 25006                           indf2	equ	0xFDF
 25007                           postinc2	equ	0xFDE
 25008                           postdec2	equ	0xFDD
 25009                           plusw2	equ	0xFDB
 25010                           fsr2h	equ	0xFDA
 25011                           fsr2l	equ	0xFD9
 25012                           status	equ	0xFD8
 25013                           
 25014 ;; *************** function _RADIO_SetOutputPower *****************
 25015 ;; Defined at:
 25016 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25017 ;; Parameters:    Size  Location     Type
 25018 ;;  power           1    wreg     char 
 25019 ;; Auto vars:     Size  Location     Type
 25020 ;;  power           1    4[BANK0 ] char 
 25021 ;; Return value:  Size  Location     Type
 25022 ;;                  1    wreg      void 
 25023 ;; Registers used:
 25024 ;;		wreg
 25025 ;; Tracked objects:
 25026 ;;		On entry : F/0
 25027 ;;		On exit  : 0/0
 25028 ;;		Unchanged: 0/0
 25029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25033 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25034 ;;Total ram usage:        1 bytes
 25035 ;; Hardware stack levels used:    1
 25036 ;; Hardware stack levels required when called:    7
 25037 ;; This function calls:
 25038 ;;		Nothing
 25039 ;; This function is called by:
 25040 ;;		_ConfigureRadioTx
 25041 ;; This function uses a non-reentrant model
 25042 ;;
 25043                           
 25044                           	psect	text131
 25045  0078FC                     __ptext131:
 25046                           	opt stack 0
 25047  0078FC                     _RADIO_SetOutputPower:
 25048                           	opt stack 19
 25049                           
 25050                           ;incstack = 0
 25051                           ;RADIO_SetOutputPower@power stored from wreg
 25052  0078FC  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 25053                           
 25054                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 25055  0078FE  C064  F185         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 25056  007902  0012               	return		;funcret
 25057  007904                     __end_of_RADIO_SetOutputPower:
 25058                           	opt stack 0
 25059                           tosu	equ	0xFFF
 25060                           tosh	equ	0xFFE
 25061                           tosl	equ	0xFFD
 25062                           pclath	equ	0xFFA
 25063                           tblptru	equ	0xFF8
 25064                           tblptrh	equ	0xFF7
 25065                           tblptrl	equ	0xFF6
 25066                           tablat	equ	0xFF5
 25067                           prodh	equ	0xFF4
 25068                           prodl	equ	0xFF3
 25069                           intcon	equ	0xFF2
 25070                           intcon2	equ	0xFF1
 25071                           intcon3	equ	0xFF0
 25072                           indf0	equ	0xFEF
 25073                           postinc0	equ	0xFEE
 25074                           fsr0h	equ	0xFEA
 25075                           fsr0l	equ	0xFE9
 25076                           wreg	equ	0xFE8
 25077                           postinc1	equ	0xFE6
 25078                           postdec1	equ	0xFE5
 25079                           plusw1	equ	0xFE3
 25080                           fsr1h	equ	0xFE2
 25081                           fsr1l	equ	0xFE1
 25082                           indf2	equ	0xFDF
 25083                           postinc2	equ	0xFDE
 25084                           postdec2	equ	0xFDD
 25085                           plusw2	equ	0xFDB
 25086                           fsr2h	equ	0xFDA
 25087                           fsr2l	equ	0xFD9
 25088                           status	equ	0xFD8
 25089                           
 25090 ;; *************** function _RADIO_SetIQInverted *****************
 25091 ;; Defined at:
 25092 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25093 ;; Parameters:    Size  Location     Type
 25094 ;;  iqInverted      1    wreg     unsigned char 
 25095 ;; Auto vars:     Size  Location     Type
 25096 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 25097 ;; Return value:  Size  Location     Type
 25098 ;;                  1    wreg      void 
 25099 ;; Registers used:
 25100 ;;		wreg
 25101 ;; Tracked objects:
 25102 ;;		On entry : 0/0
 25103 ;;		On exit  : 0/0
 25104 ;;		Unchanged: 0/0
 25105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25107 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25109 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25110 ;;Total ram usage:        1 bytes
 25111 ;; Hardware stack levels used:    1
 25112 ;; Hardware stack levels required when called:    7
 25113 ;; This function calls:
 25114 ;;		Nothing
 25115 ;; This function is called by:
 25116 ;;		_ConfigureRadioTx
 25117 ;;		_ConfigureRadioRx
 25118 ;; This function uses a non-reentrant model
 25119 ;;
 25120                           
 25121                           	psect	text132
 25122  00789E                     __ptext132:
 25123                           	opt stack 0
 25124  00789E                     _RADIO_SetIQInverted:
 25125                           	opt stack 19
 25126                           
 25127                           ;incstack = 0
 25128                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 25129  00789E  0100               	movlb	0	; () banked
 25130  0078A0  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 25131                           
 25132                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 25133  0078A2  C064  F18A         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 25134  0078A6  0012               	return		;funcret
 25135  0078A8                     __end_of_RADIO_SetIQInverted:
 25136                           	opt stack 0
 25137                           tosu	equ	0xFFF
 25138                           tosh	equ	0xFFE
 25139                           tosl	equ	0xFFD
 25140                           pclath	equ	0xFFA
 25141                           tblptru	equ	0xFF8
 25142                           tblptrh	equ	0xFF7
 25143                           tblptrl	equ	0xFF6
 25144                           tablat	equ	0xFF5
 25145                           prodh	equ	0xFF4
 25146                           prodl	equ	0xFF3
 25147                           intcon	equ	0xFF2
 25148                           intcon2	equ	0xFF1
 25149                           intcon3	equ	0xFF0
 25150                           indf0	equ	0xFEF
 25151                           postinc0	equ	0xFEE
 25152                           fsr0h	equ	0xFEA
 25153                           fsr0l	equ	0xFE9
 25154                           wreg	equ	0xFE8
 25155                           postinc1	equ	0xFE6
 25156                           postdec1	equ	0xFE5
 25157                           plusw1	equ	0xFE3
 25158                           fsr1h	equ	0xFE2
 25159                           fsr1l	equ	0xFE1
 25160                           indf2	equ	0xFDF
 25161                           postinc2	equ	0xFDE
 25162                           postdec2	equ	0xFDD
 25163                           plusw2	equ	0xFDB
 25164                           fsr2h	equ	0xFDA
 25165                           fsr2l	equ	0xFD9
 25166                           status	equ	0xFD8
 25167                           
 25168 ;; *************** function _RADIO_SetCRC *****************
 25169 ;; Defined at:
 25170 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25171 ;; Parameters:    Size  Location     Type
 25172 ;;  crc             1    wreg     unsigned char 
 25173 ;; Auto vars:     Size  Location     Type
 25174 ;;  crc             1    4[BANK0 ] unsigned char 
 25175 ;; Return value:  Size  Location     Type
 25176 ;;                  1    wreg      void 
 25177 ;; Registers used:
 25178 ;;		wreg
 25179 ;; Tracked objects:
 25180 ;;		On entry : 0/0
 25181 ;;		On exit  : 0/0
 25182 ;;		Unchanged: 0/0
 25183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25188 ;;Total ram usage:        1 bytes
 25189 ;; Hardware stack levels used:    1
 25190 ;; Hardware stack levels required when called:    7
 25191 ;; This function calls:
 25192 ;;		Nothing
 25193 ;; This function is called by:
 25194 ;;		_ConfigureRadioTx
 25195 ;;		_ConfigureRadioRx
 25196 ;; This function uses a non-reentrant model
 25197 ;;
 25198                           
 25199                           	psect	text133
 25200  0078A8                     __ptext133:
 25201                           	opt stack 0
 25202  0078A8                     _RADIO_SetCRC:
 25203                           	opt stack 19
 25204                           
 25205                           ;incstack = 0
 25206                           ;RADIO_SetCRC@crc stored from wreg
 25207  0078A8  0100               	movlb	0	; () banked
 25208  0078AA  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 25209                           
 25210                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 25211  0078AC  C064  F186         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 25212  0078B0  0012               	return		;funcret
 25213  0078B2                     __end_of_RADIO_SetCRC:
 25214                           	opt stack 0
 25215                           tosu	equ	0xFFF
 25216                           tosh	equ	0xFFE
 25217                           tosl	equ	0xFFD
 25218                           pclath	equ	0xFFA
 25219                           tblptru	equ	0xFF8
 25220                           tblptrh	equ	0xFF7
 25221                           tblptrl	equ	0xFF6
 25222                           tablat	equ	0xFF5
 25223                           prodh	equ	0xFF4
 25224                           prodl	equ	0xFF3
 25225                           intcon	equ	0xFF2
 25226                           intcon2	equ	0xFF1
 25227                           intcon3	equ	0xFF0
 25228                           indf0	equ	0xFEF
 25229                           postinc0	equ	0xFEE
 25230                           fsr0h	equ	0xFEA
 25231                           fsr0l	equ	0xFE9
 25232                           wreg	equ	0xFE8
 25233                           postinc1	equ	0xFE6
 25234                           postdec1	equ	0xFE5
 25235                           plusw1	equ	0xFE3
 25236                           fsr1h	equ	0xFE2
 25237                           fsr1l	equ	0xFE1
 25238                           indf2	equ	0xFDF
 25239                           postinc2	equ	0xFDE
 25240                           postdec2	equ	0xFDD
 25241                           plusw2	equ	0xFDB
 25242                           fsr2h	equ	0xFDA
 25243                           fsr2l	equ	0xFD9
 25244                           status	equ	0xFD8
 25245                           
 25246 ;; *************** function _ConfigureRadio *****************
 25247 ;; Defined at:
 25248 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25249 ;; Parameters:    Size  Location     Type
 25250 ;;  dataRate        1    wreg     unsigned char 
 25251 ;;  freq            4   17[BANK0 ] unsigned long 
 25252 ;; Auto vars:     Size  Location     Type
 25253 ;;  dataRate        1   21[BANK0 ] unsigned char 
 25254 ;; Return value:  Size  Location     Type
 25255 ;;                  1    wreg      void 
 25256 ;; Registers used:
 25257 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25258 ;; Tracked objects:
 25259 ;;		On entry : F/0
 25260 ;;		On exit  : 0/0
 25261 ;;		Unchanged: 0/0
 25262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25266 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25267 ;;Total ram usage:        5 bytes
 25268 ;; Hardware stack levels used:    1
 25269 ;; Hardware stack levels required when called:    9
 25270 ;; This function calls:
 25271 ;;		_RADIO_SetBandwidth
 25272 ;;		_RADIO_SetChannelFrequency
 25273 ;;		_RADIO_SetFSKSyncWord
 25274 ;;		_RADIO_SetFrequencyHopPeriod
 25275 ;;		_RADIO_SetLoRaSyncWord
 25276 ;;		_RADIO_SetModulation
 25277 ;;		_RADIO_SetSpreadingFactor
 25278 ;; This function is called by:
 25279 ;;		_ConfigureRadioTx
 25280 ;;		_ConfigureRadioRx
 25281 ;; This function uses a non-reentrant model
 25282 ;;
 25283                           
 25284                           	psect	text134
 25285  005B96                     __ptext134:
 25286                           	opt stack 0
 25287  005B96                     _ConfigureRadio:
 25288                           	opt stack 17
 25289                           
 25290                           ;incstack = 0
 25291                           ;ConfigureRadio@dataRate stored from wreg
 25292  005B96  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 25293                           
 25294                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 25295  005B98  0E75               	movlw	low _modulation
 25296  005B9A  0100               	movlb	0	; () banked
 25297  005B9C  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25298  005B9E  6EF6               	movwf	tblptrl,c
 25299  005BA0  6AF7               	clrf	tblptrh,c
 25300  005BA2  0EFF               	movlw	high _modulation
 25301  005BA4  22F7               	addwfc	tblptrh,f,c
 25302  005BA6                     	if	1	;There are 3 active tblptr bytes
 25303  005BA6  6AF8               	clrf	tblptru,c
 25304  005BA8  0E00               	movlw	low (__mediumconst shr (0+16))
 25305  005BAA  22F8               	addwfc	tblptru,f,c
 25306  005BAC                     	endif
 25307  005BAC  0008               	tblrd		*
 25308  005BAE  50F5               	movf	tablat,w,c
 25309  005BB0  EC86  F03C         	call	_RADIO_SetModulation
 25310                           
 25311                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 25312  005BB4  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 25313  005BB8  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 25314  005BBC  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 25315  005BC0  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 25316  005BC4  ECDF  F02E         	call	_RADIO_SetChannelFrequency	;wreg free
 25317                           
 25318                           ; BSR set to: 0
 25319                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 25320  005BC8  0E00               	movlw	0
 25321  005BCA  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 25322  005BCC  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 25323  005BCE  EC59  F03C         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 25324                           
 25325                           ; BSR set to: 0
 25326                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 25327  005BD2  0E07               	movlw	7
 25328  005BD4  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 25329  005BD6  D01F               	goto	l12674
 25330                           
 25331                           ; BSR set to: 0
 25332                           ;lorawan_eu.c: 870: {
 25333                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 25334  005BD8  0E9B               	movlw	low _spreadingFactor
 25335  005BDA  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25336  005BDC  6EF6               	movwf	tblptrl,c
 25337  005BDE  6AF7               	clrf	tblptrh,c
 25338  005BE0  0EFF               	movlw	high _spreadingFactor
 25339  005BE2  22F7               	addwfc	tblptrh,f,c
 25340  005BE4                     	if	1	;There are 3 active tblptr bytes
 25341  005BE4  6AF8               	clrf	tblptru,c
 25342  005BE6  0E00               	movlw	low (__mediumconst shr (0+16))
 25343  005BE8  22F8               	addwfc	tblptru,f,c
 25344  005BEA                     	endif
 25345  005BEA  0008               	tblrd		*
 25346  005BEC  50F5               	movf	tablat,w,c
 25347  005BEE  EC82  F03C         	call	_RADIO_SetSpreadingFactor
 25348                           
 25349                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 25350  005BF2  0E8D               	movlw	low _bandwidth
 25351  005BF4  0100               	movlb	0	; () banked
 25352  005BF6  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 25353  005BF8  6EF6               	movwf	tblptrl,c
 25354  005BFA  6AF7               	clrf	tblptrh,c
 25355  005BFC  0EFF               	movlw	high _bandwidth
 25356  005BFE  22F7               	addwfc	tblptrh,f,c
 25357  005C00                     	if	1	;There are 3 active tblptr bytes
 25358  005C00  6AF8               	clrf	tblptru,c
 25359  005C02  0E00               	movlw	low (__mediumconst shr (0+16))
 25360  005C04  22F8               	addwfc	tblptru,f,c
 25361  005C06                     	endif
 25362  005C06  0008               	tblrd		*
 25363  005C08  50F5               	movf	tablat,w,c
 25364  005C0A  EC8A  F03C         	call	_RADIO_SetBandwidth
 25365                           
 25366                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 25367  005C0E  0102               	movlb	2	; () banked
 25368  005C10  51F4               	movf	(_loRa+244)& (0+255),w,b
 25369  005C12  EF5E  F03C         	goto	_RADIO_SetLoRaSyncWord
 25370  005C16                     l12674:
 25371                           
 25372                           ; BSR set to: 0
 25373                           ;lorawan_eu.c: 876: else
 25374                           ;lorawan_eu.c: 877: {
 25375                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 25376  005C16  0EFC               	movlw	low _FskSyncWordBuff
 25377  005C18  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 25378  005C1A  0EFF               	movlw	high _FskSyncWordBuff
 25379  005C1C  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 25380  005C1E  0E03               	movlw	3
 25381  005C20  EFE2  F038         	goto	_RADIO_SetFSKSyncWord
 25382  005C24                     __end_of_ConfigureRadio:
 25383                           	opt stack 0
 25384                           tosu	equ	0xFFF
 25385                           tosh	equ	0xFFE
 25386                           tosl	equ	0xFFD
 25387                           pclath	equ	0xFFA
 25388                           tblptru	equ	0xFF8
 25389                           tblptrh	equ	0xFF7
 25390                           tblptrl	equ	0xFF6
 25391                           tablat	equ	0xFF5
 25392                           prodh	equ	0xFF4
 25393                           prodl	equ	0xFF3
 25394                           intcon	equ	0xFF2
 25395                           intcon2	equ	0xFF1
 25396                           intcon3	equ	0xFF0
 25397                           indf0	equ	0xFEF
 25398                           postinc0	equ	0xFEE
 25399                           fsr0h	equ	0xFEA
 25400                           fsr0l	equ	0xFE9
 25401                           wreg	equ	0xFE8
 25402                           postinc1	equ	0xFE6
 25403                           postdec1	equ	0xFE5
 25404                           plusw1	equ	0xFE3
 25405                           fsr1h	equ	0xFE2
 25406                           fsr1l	equ	0xFE1
 25407                           indf2	equ	0xFDF
 25408                           postinc2	equ	0xFDE
 25409                           postdec2	equ	0xFDD
 25410                           plusw2	equ	0xFDB
 25411                           fsr2h	equ	0xFDA
 25412                           fsr2l	equ	0xFD9
 25413                           status	equ	0xFD8
 25414                           
 25415 ;; *************** function _RADIO_SetSpreadingFactor *****************
 25416 ;; Defined at:
 25417 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25418 ;; Parameters:    Size  Location     Type
 25419 ;;  spreadingFac    1    wreg     enum E7761
 25420 ;; Auto vars:     Size  Location     Type
 25421 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 25422 ;; Return value:  Size  Location     Type
 25423 ;;                  1    wreg      void 
 25424 ;; Registers used:
 25425 ;;		wreg
 25426 ;; Tracked objects:
 25427 ;;		On entry : F/0
 25428 ;;		On exit  : 0/0
 25429 ;;		Unchanged: 0/0
 25430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25432 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25434 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25435 ;;Total ram usage:        1 bytes
 25436 ;; Hardware stack levels used:    1
 25437 ;; Hardware stack levels required when called:    7
 25438 ;; This function calls:
 25439 ;;		Nothing
 25440 ;; This function is called by:
 25441 ;;		_ConfigureRadio
 25442 ;; This function uses a non-reentrant model
 25443 ;;
 25444                           
 25445                           	psect	text135
 25446  007904                     __ptext135:
 25447                           	opt stack 0
 25448  007904                     _RADIO_SetSpreadingFactor:
 25449                           	opt stack 18
 25450                           
 25451                           ;incstack = 0
 25452                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 25453  007904  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 25454                           
 25455                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 25456  007906  C064  F183         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 25457  00790A  0012               	return		;funcret
 25458  00790C                     __end_of_RADIO_SetSpreadingFactor:
 25459                           	opt stack 0
 25460                           tosu	equ	0xFFF
 25461                           tosh	equ	0xFFE
 25462                           tosl	equ	0xFFD
 25463                           pclath	equ	0xFFA
 25464                           tblptru	equ	0xFF8
 25465                           tblptrh	equ	0xFF7
 25466                           tblptrl	equ	0xFF6
 25467                           tablat	equ	0xFF5
 25468                           prodh	equ	0xFF4
 25469                           prodl	equ	0xFF3
 25470                           intcon	equ	0xFF2
 25471                           intcon2	equ	0xFF1
 25472                           intcon3	equ	0xFF0
 25473                           indf0	equ	0xFEF
 25474                           postinc0	equ	0xFEE
 25475                           fsr0h	equ	0xFEA
 25476                           fsr0l	equ	0xFE9
 25477                           wreg	equ	0xFE8
 25478                           postinc1	equ	0xFE6
 25479                           postdec1	equ	0xFE5
 25480                           plusw1	equ	0xFE3
 25481                           fsr1h	equ	0xFE2
 25482                           fsr1l	equ	0xFE1
 25483                           indf2	equ	0xFDF
 25484                           postinc2	equ	0xFDE
 25485                           postdec2	equ	0xFDD
 25486                           plusw2	equ	0xFDB
 25487                           fsr2h	equ	0xFDA
 25488                           fsr2l	equ	0xFD9
 25489                           status	equ	0xFD8
 25490                           
 25491 ;; *************** function _RADIO_SetModulation *****************
 25492 ;; Defined at:
 25493 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25494 ;; Parameters:    Size  Location     Type
 25495 ;;  modulation      1    wreg     enum E7751
 25496 ;; Auto vars:     Size  Location     Type
 25497 ;;  modulation      1    4[BANK0 ] enum E7751
 25498 ;; Return value:  Size  Location     Type
 25499 ;;                  1    wreg      void 
 25500 ;; Registers used:
 25501 ;;		wreg
 25502 ;; Tracked objects:
 25503 ;;		On entry : F/0
 25504 ;;		On exit  : 0/0
 25505 ;;		Unchanged: 0/0
 25506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25510 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25511 ;;Total ram usage:        1 bytes
 25512 ;; Hardware stack levels used:    1
 25513 ;; Hardware stack levels required when called:    7
 25514 ;; This function calls:
 25515 ;;		Nothing
 25516 ;; This function is called by:
 25517 ;;		_ConfigureRadio
 25518 ;; This function uses a non-reentrant model
 25519 ;;
 25520                           
 25521                           	psect	text136
 25522  00790C                     __ptext136:
 25523                           	opt stack 0
 25524  00790C                     _RADIO_SetModulation:
 25525                           	opt stack 18
 25526                           
 25527                           ;incstack = 0
 25528                           ;RADIO_SetModulation@modulation stored from wreg
 25529  00790C  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 25530                           
 25531                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 25532  00790E  C064  F182         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 25533  007912  0012               	return		;funcret
 25534  007914                     __end_of_RADIO_SetModulation:
 25535                           	opt stack 0
 25536                           tosu	equ	0xFFF
 25537                           tosh	equ	0xFFE
 25538                           tosl	equ	0xFFD
 25539                           pclath	equ	0xFFA
 25540                           tblptru	equ	0xFF8
 25541                           tblptrh	equ	0xFF7
 25542                           tblptrl	equ	0xFF6
 25543                           tablat	equ	0xFF5
 25544                           prodh	equ	0xFF4
 25545                           prodl	equ	0xFF3
 25546                           intcon	equ	0xFF2
 25547                           intcon2	equ	0xFF1
 25548                           intcon3	equ	0xFF0
 25549                           indf0	equ	0xFEF
 25550                           postinc0	equ	0xFEE
 25551                           fsr0h	equ	0xFEA
 25552                           fsr0l	equ	0xFE9
 25553                           wreg	equ	0xFE8
 25554                           postinc1	equ	0xFE6
 25555                           postdec1	equ	0xFE5
 25556                           plusw1	equ	0xFE3
 25557                           fsr1h	equ	0xFE2
 25558                           fsr1l	equ	0xFE1
 25559                           indf2	equ	0xFDF
 25560                           postinc2	equ	0xFDE
 25561                           postdec2	equ	0xFDD
 25562                           plusw2	equ	0xFDB
 25563                           fsr2h	equ	0xFDA
 25564                           fsr2l	equ	0xFD9
 25565                           status	equ	0xFD8
 25566                           
 25567 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 25568 ;; Defined at:
 25569 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25570 ;; Parameters:    Size  Location     Type
 25571 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 25572 ;; Auto vars:     Size  Location     Type
 25573 ;;		None
 25574 ;; Return value:  Size  Location     Type
 25575 ;;                  1    wreg      void 
 25576 ;; Registers used:
 25577 ;;		None
 25578 ;; Tracked objects:
 25579 ;;		On entry : F/0
 25580 ;;		On exit  : F/0
 25581 ;;		Unchanged: F/0
 25582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25586 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25587 ;;Total ram usage:        2 bytes
 25588 ;; Hardware stack levels used:    1
 25589 ;; Hardware stack levels required when called:    7
 25590 ;; This function calls:
 25591 ;;		Nothing
 25592 ;; This function is called by:
 25593 ;;		_ConfigureRadio
 25594 ;; This function uses a non-reentrant model
 25595 ;;
 25596                           
 25597                           	psect	text137
 25598  0078B2                     __ptext137:
 25599                           	opt stack 0
 25600  0078B2                     _RADIO_SetFrequencyHopPeriod:
 25601                           	opt stack 18
 25602                           
 25603                           ; BSR set to: 0
 25604                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 25605                           
 25606                           ;incstack = 0
 25607  0078B2  C064  F188         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 25608  0078B6  C065  F189         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 25609                           
 25610                           ; BSR set to: 0
 25611  0078BA  0012               	return		;funcret
 25612  0078BC                     __end_of_RADIO_SetFrequencyHopPeriod:
 25613                           	opt stack 0
 25614                           tosu	equ	0xFFF
 25615                           tosh	equ	0xFFE
 25616                           tosl	equ	0xFFD
 25617                           pclath	equ	0xFFA
 25618                           tblptru	equ	0xFF8
 25619                           tblptrh	equ	0xFF7
 25620                           tblptrl	equ	0xFF6
 25621                           tablat	equ	0xFF5
 25622                           prodh	equ	0xFF4
 25623                           prodl	equ	0xFF3
 25624                           intcon	equ	0xFF2
 25625                           intcon2	equ	0xFF1
 25626                           intcon3	equ	0xFF0
 25627                           indf0	equ	0xFEF
 25628                           postinc0	equ	0xFEE
 25629                           fsr0h	equ	0xFEA
 25630                           fsr0l	equ	0xFE9
 25631                           wreg	equ	0xFE8
 25632                           postinc1	equ	0xFE6
 25633                           postdec1	equ	0xFE5
 25634                           plusw1	equ	0xFE3
 25635                           fsr1h	equ	0xFE2
 25636                           fsr1l	equ	0xFE1
 25637                           indf2	equ	0xFDF
 25638                           postinc2	equ	0xFDE
 25639                           postdec2	equ	0xFDD
 25640                           plusw2	equ	0xFDB
 25641                           fsr2h	equ	0xFDA
 25642                           fsr2l	equ	0xFD9
 25643                           status	equ	0xFD8
 25644                           
 25645 ;; *************** function _RADIO_SetFSKSyncWord *****************
 25646 ;; Defined at:
 25647 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25648 ;; Parameters:    Size  Location     Type
 25649 ;;  syncWordLen     1    wreg     unsigned char 
 25650 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 25651 ;;		 -> FskSyncWordBuff(3), 
 25652 ;; Auto vars:     Size  Location     Type
 25653 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 25654 ;; Return value:  Size  Location     Type
 25655 ;;                  1    wreg      void 
 25656 ;; Registers used:
 25657 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25658 ;; Tracked objects:
 25659 ;;		On entry : F/0
 25660 ;;		On exit  : F/0
 25661 ;;		Unchanged: 0/0
 25662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25666 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25667 ;;Total ram usage:        3 bytes
 25668 ;; Hardware stack levels used:    1
 25669 ;; Hardware stack levels required when called:    8
 25670 ;; This function calls:
 25671 ;;		_memcpy
 25672 ;; This function is called by:
 25673 ;;		_ConfigureRadio
 25674 ;; This function uses a non-reentrant model
 25675 ;;
 25676                           
 25677                           	psect	text138
 25678  0071C4                     __ptext138:
 25679                           	opt stack 0
 25680  0071C4                     _RADIO_SetFSKSyncWord:
 25681                           	opt stack 17
 25682                           
 25683                           ; BSR set to: 0
 25684                           ;incstack = 0
 25685                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 25686  0071C4  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25687                           
 25688                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 25689  0071C6  0E08               	movlw	8
 25690  0071C8  0100               	movlb	0	; () banked
 25691  0071CA  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25692  0071CC  D001               	goto	l12378
 25693                           
 25694                           ; BSR set to: 0
 25695                           ;radio_driver_SX1276.c: 1627: {
 25696                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 25697  0071CE  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 25698  0071D0                     l12378:
 25699                           
 25700                           ; BSR set to: 0
 25701                           ;radio_driver_SX1276.c: 1629: }
 25702                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 25703  0071D0  0E79               	movlw	low (_RadioConfiguration+15)
 25704  0071D2  6F64               	movwf	memcpy@d1& (0+255),b
 25705  0071D4  0E01               	movlw	high (_RadioConfiguration+15)
 25706  0071D6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 25707  0071D8  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 25708  0071DC  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 25709  0071E0  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 25710  0071E4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 25711  0071E6  EC44  F034         	call	_memcpy	;wreg free
 25712                           
 25713                           ; BSR set to: 0
 25714                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 25715  0071EA  C070  F181         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 25716                           
 25717                           ; BSR set to: 0
 25718  0071EE  0012               	return		;funcret
 25719  0071F0                     __end_of_RADIO_SetFSKSyncWord:
 25720                           	opt stack 0
 25721                           tosu	equ	0xFFF
 25722                           tosh	equ	0xFFE
 25723                           tosl	equ	0xFFD
 25724                           pclath	equ	0xFFA
 25725                           tblptru	equ	0xFF8
 25726                           tblptrh	equ	0xFF7
 25727                           tblptrl	equ	0xFF6
 25728                           tablat	equ	0xFF5
 25729                           prodh	equ	0xFF4
 25730                           prodl	equ	0xFF3
 25731                           intcon	equ	0xFF2
 25732                           intcon2	equ	0xFF1
 25733                           intcon3	equ	0xFF0
 25734                           indf0	equ	0xFEF
 25735                           postinc0	equ	0xFEE
 25736                           fsr0h	equ	0xFEA
 25737                           fsr0l	equ	0xFE9
 25738                           wreg	equ	0xFE8
 25739                           postinc1	equ	0xFE6
 25740                           postdec1	equ	0xFE5
 25741                           plusw1	equ	0xFE3
 25742                           fsr1h	equ	0xFE2
 25743                           fsr1l	equ	0xFE1
 25744                           indf2	equ	0xFDF
 25745                           postinc2	equ	0xFDE
 25746                           postdec2	equ	0xFDD
 25747                           plusw2	equ	0xFDB
 25748                           fsr2h	equ	0xFDA
 25749                           fsr2l	equ	0xFD9
 25750                           status	equ	0xFD8
 25751                           
 25752 ;; *************** function _RADIO_SetChannelFrequency *****************
 25753 ;; Defined at:
 25754 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25755 ;; Parameters:    Size  Location     Type
 25756 ;;  frequency       4    4[BANK0 ] unsigned long 
 25757 ;; Auto vars:     Size  Location     Type
 25758 ;;		None
 25759 ;; Return value:  Size  Location     Type
 25760 ;;                  2    4[BANK0 ] enum E7805
 25761 ;; Registers used:
 25762 ;;		wreg, status,2, status,0
 25763 ;; Tracked objects:
 25764 ;;		On entry : 0/0
 25765 ;;		On exit  : F/0
 25766 ;;		Unchanged: 0/0
 25767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25771 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25772 ;;Total ram usage:        4 bytes
 25773 ;; Hardware stack levels used:    1
 25774 ;; Hardware stack levels required when called:    7
 25775 ;; This function calls:
 25776 ;;		Nothing
 25777 ;; This function is called by:
 25778 ;;		_ConfigureRadio
 25779 ;; This function uses a non-reentrant model
 25780 ;;
 25781                           
 25782                           	psect	text139
 25783  005DBE                     __ptext139:
 25784                           	opt stack 0
 25785  005DBE                     _RADIO_SetChannelFrequency:
 25786                           	opt stack 18
 25787                           
 25788                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 25789                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 25790                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 25791                           
 25792                           ; BSR set to: 0
 25793                           ;incstack = 0
 25794  005DBE  0E40               	movlw	64
 25795  005DC0  0100               	movlb	0	; () banked
 25796  005DC2  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25797  005DC4  0E74               	movlw	116
 25798  005DC6  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25799  005DC8  0E2A               	movlw	42
 25800  005DCA  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25801  005DCC  0E08               	movlw	8
 25802  005DCE  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25803  005DD0  E309               	bnc	l12358
 25804                           
 25805                           ; BSR set to: 0
 25806  005DD2  0EC1               	movlw	193
 25807  005DD4  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25808  005DD6  0E49               	movlw	73
 25809  005DD8  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25810  005DDA  0E6E               	movlw	110
 25811  005DDC  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25812  005DDE  0E0A               	movlw	10
 25813  005DE0  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25814  005DE2  E325               	bnc	l690
 25815  005DE4                     l12358:
 25816                           
 25817                           ; BSR set to: 0
 25818  005DE4  0E80               	movlw	128
 25819  005DE6  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25820  005DE8  0E1A               	movlw	26
 25821  005DEA  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25822  005DEC  0E70               	movlw	112
 25823  005DEE  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25824  005DF0  0E18               	movlw	24
 25825  005DF2  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25826  005DF4  E309               	bnc	l12362
 25827                           
 25828                           ; BSR set to: 0
 25829  005DF6  0E41               	movlw	65
 25830  005DF8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25831  005DFA  0EDD               	movlw	221
 25832  005DFC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25833  005DFE  0E4A               	movlw	74
 25834  005E00  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25835  005E02  0E1F               	movlw	31
 25836  005E04  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25837  005E06  E313               	bnc	l690
 25838  005E08                     l12362:
 25839                           
 25840                           ; BSR set to: 0
 25841  005E08  0E80               	movlw	128
 25842  005E0A  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25843  005E0C  0E13               	movlw	19
 25844  005E0E  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25845  005E10  0E61               	movlw	97
 25846  005E12  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25847  005E14  0E33               	movlw	51
 25848  005E16  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25849  005E18  A0D8               	btfss	status,0,c
 25850  005E1A  0012               	return	
 25851                           
 25852                           ; BSR set to: 0
 25853  005E1C  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 25854  005E1E  0EF7               	movlw	247
 25855  005E20  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 25856  005E22  0ECB               	movlw	203
 25857  005E24  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 25858  005E26  0E3C               	movlw	60
 25859  005E28  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 25860  005E2A  B0D8               	btfsc	status,0,c
 25861  005E2C  0012               	return	
 25862  005E2E                     l690:
 25863                           
 25864                           ; BSR set to: 0
 25865                           ;radio_driver_SX1276.c: 1449: {
 25866                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 25867  005E2E  C064  F16A         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 25868  005E32  C065  F16B         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 25869  005E36  C066  F16C         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 25870  005E3A  C067  F16D         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 25871                           
 25872                           ; BSR set to: 0
 25873                           
 25874                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 25875                           ;	Return value of _RADIO_SetChannelFrequency is never used
 25876  005E3E  0012               	return		;funcret
 25877  005E40                     __end_of_RADIO_SetChannelFrequency:
 25878                           	opt stack 0
 25879                           tosu	equ	0xFFF
 25880                           tosh	equ	0xFFE
 25881                           tosl	equ	0xFFD
 25882                           pclath	equ	0xFFA
 25883                           tblptru	equ	0xFF8
 25884                           tblptrh	equ	0xFF7
 25885                           tblptrl	equ	0xFF6
 25886                           tablat	equ	0xFF5
 25887                           prodh	equ	0xFF4
 25888                           prodl	equ	0xFF3
 25889                           intcon	equ	0xFF2
 25890                           intcon2	equ	0xFF1
 25891                           intcon3	equ	0xFF0
 25892                           indf0	equ	0xFEF
 25893                           postinc0	equ	0xFEE
 25894                           fsr0h	equ	0xFEA
 25895                           fsr0l	equ	0xFE9
 25896                           wreg	equ	0xFE8
 25897                           postinc1	equ	0xFE6
 25898                           postdec1	equ	0xFE5
 25899                           plusw1	equ	0xFE3
 25900                           fsr1h	equ	0xFE2
 25901                           fsr1l	equ	0xFE1
 25902                           indf2	equ	0xFDF
 25903                           postinc2	equ	0xFDE
 25904                           postdec2	equ	0xFDD
 25905                           plusw2	equ	0xFDB
 25906                           fsr2h	equ	0xFDA
 25907                           fsr2l	equ	0xFD9
 25908                           status	equ	0xFD8
 25909                           
 25910 ;; *************** function _RADIO_SetBandwidth *****************
 25911 ;; Defined at:
 25912 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25913 ;; Parameters:    Size  Location     Type
 25914 ;;  bandwidth       1    wreg     enum E7769
 25915 ;; Auto vars:     Size  Location     Type
 25916 ;;  bandwidth       1    4[BANK0 ] enum E7769
 25917 ;; Return value:  Size  Location     Type
 25918 ;;                  1    wreg      void 
 25919 ;; Registers used:
 25920 ;;		wreg
 25921 ;; Tracked objects:
 25922 ;;		On entry : F/0
 25923 ;;		On exit  : 0/0
 25924 ;;		Unchanged: 0/0
 25925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25929 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25930 ;;Total ram usage:        1 bytes
 25931 ;; Hardware stack levels used:    1
 25932 ;; Hardware stack levels required when called:    7
 25933 ;; This function calls:
 25934 ;;		Nothing
 25935 ;; This function is called by:
 25936 ;;		_ConfigureRadio
 25937 ;; This function uses a non-reentrant model
 25938 ;;
 25939                           
 25940                           	psect	text140
 25941  007914                     __ptext140:
 25942                           	opt stack 0
 25943  007914                     _RADIO_SetBandwidth:
 25944                           	opt stack 18
 25945                           
 25946                           ; BSR set to: 0
 25947                           ;incstack = 0
 25948                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 25949  007914  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 25950                           
 25951                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 25952  007916  C064  F184         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 25953  00791A  0012               	return		;funcret
 25954  00791C                     __end_of_RADIO_SetBandwidth:
 25955                           	opt stack 0
 25956                           tosu	equ	0xFFF
 25957                           tosh	equ	0xFFE
 25958                           tosl	equ	0xFFD
 25959                           pclath	equ	0xFFA
 25960                           tblptru	equ	0xFF8
 25961                           tblptrh	equ	0xFF7
 25962                           tblptrl	equ	0xFF6
 25963                           tablat	equ	0xFF5
 25964                           prodh	equ	0xFF4
 25965                           prodl	equ	0xFF3
 25966                           intcon	equ	0xFF2
 25967                           intcon2	equ	0xFF1
 25968                           intcon3	equ	0xFF0
 25969                           indf0	equ	0xFEF
 25970                           postinc0	equ	0xFEE
 25971                           fsr0h	equ	0xFEA
 25972                           fsr0l	equ	0xFE9
 25973                           wreg	equ	0xFE8
 25974                           postinc1	equ	0xFE6
 25975                           postdec1	equ	0xFE5
 25976                           plusw1	equ	0xFE3
 25977                           fsr1h	equ	0xFE2
 25978                           fsr1l	equ	0xFE1
 25979                           indf2	equ	0xFDF
 25980                           postinc2	equ	0xFDE
 25981                           postdec2	equ	0xFDD
 25982                           plusw2	equ	0xFDB
 25983                           fsr2h	equ	0xFDA
 25984                           fsr2l	equ	0xFD9
 25985                           status	equ	0xFD8
 25986                           
 25987 ;; *************** function _RADIO_Transmit *****************
 25988 ;; Defined at:
 25989 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25990 ;; Parameters:    Size  Location     Type
 25991 ;;  buffer          2   54[BANK0 ] PTR unsigned char 
 25992 ;;		 -> macBuffer(271), 
 25993 ;;  bufferLen       1   56[BANK0 ] unsigned char 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;  i               1   70[BANK0 ] unsigned char 
 25996 ;;  regValue        1   69[BANK0 ] unsigned char 
 25997 ;; Return value:  Size  Location     Type
 25998 ;;                  2   54[BANK0 ] enum E7805
 25999 ;; Registers used:
 26000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26001 ;; Tracked objects:
 26002 ;;		On entry : F/0
 26003 ;;		On exit  : F/0
 26004 ;;		Unchanged: 0/0
 26005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26006 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26007 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26008 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26009 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26010 ;;Total ram usage:       17 bytes
 26011 ;; Hardware stack levels used:    1
 26012 ;; Hardware stack levels required when called:   12
 26013 ;; This function calls:
 26014 ;;		_HALSPICSAssert
 26015 ;;		_HALSPICSDeassert
 26016 ;;		_HALSPISend
 26017 ;;		_RADIO_RegisterRead
 26018 ;;		_RADIO_RegisterWrite
 26019 ;;		_RADIO_WriteConfiguration
 26020 ;;		_RADIO_WriteMode
 26021 ;;		_SwTimerSetTimeout
 26022 ;;		_SwTimerStart
 26023 ;;		_SwTimerStop
 26024 ;;		___lldiv
 26025 ;; This function is called by:
 26026 ;;		_LORAWAN_RxTimeout
 26027 ;;		_LORAWAN_Join
 26028 ;;		_LORAWAN_Send
 26029 ;;		_AckRetransmissionCallback
 26030 ;;		_UnconfirmedTransmissionCallback
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           	psect	text141
 26035  002FC4                     __ptext141:
 26036                           	opt stack 0
 26037  002FC4                     _RADIO_Transmit:
 26038                           	opt stack 16
 26039                           
 26040                           ; BSR set to: 0
 26041                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 26042                           ;radio_driver_SX1276.c: 789: uint8_t i;
 26043                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 26044                           
 26045                           ;incstack = 0
 26046  002FC4  0101               	movlb	1	; () banked
 26047  002FC6  A58D               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 26048  002FC8  D006               	goto	l13384
 26049                           
 26050                           ; BSR set to: 1
 26051                           ;radio_driver_SX1276.c: 792: {
 26052                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 26053  002FCA  0E80               	movlw	128
 26054  002FCC  0100               	movlb	0	; () banked
 26055  002FCE  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26056  002FD0  0E03               	movlw	3
 26057  002FD2  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26058  002FD4  0C03               	retlw	3
 26059  002FD6                     l13384:
 26060                           
 26061                           ; BSR set to: 1
 26062                           ;radio_driver_SX1276.c: 794: }
 26063                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 26064  002FD6  C18D  F099         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 26065  002FDA  0E03               	movlw	3
 26066  002FDC  0100               	movlb	0	; () banked
 26067  002FDE  1799               	andwf	??_RADIO_Transmit& (0+255),f,b
 26068  002FE0  E005               	bz	l13390
 26069                           
 26070                           ; BSR set to: 0
 26071                           ;radio_driver_SX1276.c: 797: {
 26072                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 26073  002FE2  0E80               	movlw	128
 26074  002FE4  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26075  002FE6  0E04               	movlw	4
 26076  002FE8  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26077  002FEA  0C04               	retlw	4
 26078  002FEC                     l13390:
 26079                           
 26080                           ; BSR set to: 0
 26081                           ;radio_driver_SX1276.c: 799: }
 26082                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 26083  002FEC  0101               	movlb	1	; () banked
 26084  002FEE  5182               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26085  002FF0  E109               	bnz	l13398
 26086                           
 26087                           ; BSR set to: 1
 26088  002FF2  0E40               	movlw	64
 26089  002FF4  0100               	movlb	0	; () banked
 26090  002FF6  6598               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 26091  002FF8  D005               	goto	l13398
 26092                           
 26093                           ; BSR set to: 0
 26094                           ;radio_driver_SX1276.c: 802: {
 26095                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 26096  002FFA  0E80               	movlw	128
 26097  002FFC  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26098  002FFE  0E02               	movlw	2
 26099  003000  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26100  003002  0C02               	retlw	2
 26101  003004                     l13398:
 26102                           
 26103                           ;radio_driver_SX1276.c: 804: }
 26104                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 26105  003004  0101               	movlb	1	; () banked
 26106  003006  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26107  003008  ECB2  F03A         	call	_SwTimerStop
 26108                           
 26109                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 26110  00300C  0E00               	movlw	0
 26111  00300E  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 26112  003010  0E04               	movlw	4
 26113  003012  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 26114  003014  ECD0  F009         	call	_RADIO_WriteConfiguration	;wreg free
 26115                           
 26116                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 26117  003018  0101               	movlb	1	; () banked
 26118  00301A  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26119  00301C  E123               	bnz	l13416
 26120                           
 26121                           ; BSR set to: 1
 26122                           ;radio_driver_SX1276.c: 813: {
 26123                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 26124  00301E  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26125  003022  0E22               	movlw	34
 26126  003024  EC85  F03A         	call	_RADIO_RegisterWrite
 26127                           
 26128                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 26129  003028  0E0A               	movlw	10
 26130  00302A  ECAE  F039         	call	_RADIO_RegisterRead
 26131  00302E  6FA5               	movwf	RADIO_Transmit@regValue& (0+255),b
 26132                           
 26133                           ; BSR set to: 0
 26134                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 26135  003030  0EF0               	movlw	240
 26136  003032  17A5               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 26140  003034  87A5               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 26141                           
 26142                           ; BSR set to: 0
 26143                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 26144  003036  C0A5  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 26145  00303A  0E0A               	movlw	10
 26146  00303C  EC85  F03A         	call	_RADIO_RegisterWrite
 26147                           
 26148                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 26149  003040  0E40               	movlw	64
 26150  003042  0100               	movlb	0	; () banked
 26151  003044  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26152  003046  EC85  F03A         	call	_RADIO_RegisterWrite
 26153                           
 26154                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 26155  00304A  0100               	movlb	0	; () banked
 26156  00304C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26157  00304E  0E41               	movlw	65
 26158  003050  EC85  F03A         	call	_RADIO_RegisterWrite
 26159                           
 26160                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 26161  003054  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26162  003058  0E01               	movlw	1
 26163  00305A  0100               	movlb	0	; () banked
 26164  00305C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26165  00305E  EC6E  F028         	call	_RADIO_WriteMode
 26166                           
 26167                           ;radio_driver_SX1276.c: 828: }
 26168  003062  D00A               	goto	l13418
 26169  003064                     l13416:
 26170                           
 26171                           ; BSR set to: 1
 26172                           ;radio_driver_SX1276.c: 829: else
 26173                           ;radio_driver_SX1276.c: 830: {
 26174                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 26175  003064  0100               	movlb	0	; () banked
 26176  003066  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26177  003068  0E40               	movlw	64
 26178  00306A  EC85  F03A         	call	_RADIO_RegisterWrite
 26179                           
 26180                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 26181  00306E  0100               	movlb	0	; () banked
 26182  003070  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26183  003072  0E41               	movlw	65
 26184  003074  EC85  F03A         	call	_RADIO_RegisterWrite
 26185  003078                     l13418:
 26186                           
 26187                           ;radio_driver_SX1276.c: 834: }
 26188                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 26189  003078  0101               	movlb	1	; () banked
 26190  00307A  5182               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26191  00307C  E105               	bnz	l13422
 26192                           
 26193                           ; BSR set to: 1
 26194                           ;radio_driver_SX1276.c: 837: {
 26195                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 26196  00307E  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26197  003082  0E00               	movlw	0
 26198  003084  EC85  F03A         	call	_RADIO_RegisterWrite
 26199  003088                     l13422:
 26200                           
 26201                           ;radio_driver_SX1276.c: 840: }
 26202                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 26203  003088  ECBC  F03C         	call	_HALSPICSAssert	;wreg free
 26204                           
 26205                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 26206  00308C  0E80               	movlw	128
 26207  00308E  EC63  F03C         	call	_HALSPISend
 26208                           
 26209                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 26210  003092  0100               	movlb	0	; () banked
 26211  003094  6BA6               	clrf	RADIO_Transmit@i& (0+255),b
 26212  003096  D00B               	goto	l13432
 26213  003098                     l13428:
 26214                           
 26215                           ; BSR set to: 0
 26216                           ;radio_driver_SX1276.c: 846: {
 26217                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 26218  003098  51A6               	movf	RADIO_Transmit@i& (0+255),w,b
 26219  00309A  2596               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 26220  00309C  6ED9               	movwf	fsr2l,c
 26221  00309E  0E00               	movlw	0
 26222  0030A0  2197               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 26223  0030A2  6EDA               	movwf	fsr2h,c
 26224  0030A4  50DF               	movf	indf2,w,c
 26225  0030A6  EC63  F03C         	call	_HALSPISend
 26226  0030AA  0100               	movlb	0	; () banked
 26227  0030AC  2BA6               	incf	RADIO_Transmit@i& (0+255),f,b
 26228  0030AE                     l13432:
 26229                           
 26230                           ; BSR set to: 0
 26231  0030AE  5198               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 26232  0030B0  5DA6               	subwf	RADIO_Transmit@i& (0+255),w,b
 26233  0030B2  E3F2               	bnc	l13428
 26234                           
 26235                           ; BSR set to: 0
 26236                           ;radio_driver_SX1276.c: 848: }
 26237                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 26238  0030B4  ECBA  F03C         	call	_HALSPICSDeassert	;wreg free
 26239                           
 26240                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 26241  0030B8  0101               	movlb	1	; () banked
 26242  0030BA  818D               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 26243                           
 26244                           ; BSR set to: 1
 26245                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 26246  0030BC  0EE7               	movlw	231
 26247  0030BE  178D               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 26248                           
 26249                           ; BSR set to: 1
 26250                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 26251  0030C0  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26252  0030C4  0E00               	movlw	0
 26253  0030C6  0100               	movlb	0	; () banked
 26254  0030C8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26255  0030CA  0E03               	movlw	3
 26256  0030CC  EC6E  F028         	call	_RADIO_WriteMode
 26257                           
 26258                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 26259  0030D0  0100               	movlb	0	; () banked
 26260  0030D2  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 26261  0030D4  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 26262  0030D6  0E0A               	movlw	10
 26263  0030D8  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 26264  0030DA  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 26265  0030DC  0101               	movlb	1	; () banked
 26266  0030DE  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26267  0030E0  ECA5  F036         	call	_SwTimerSetTimeout
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 26271  0030E4  0101               	movlb	1	; () banked
 26272  0030E6  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26273  0030E8  EC58  F02E         	call	_SwTimerStart
 26274                           
 26275                           ; BSR set to: 0
 26276                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 26277  0030EC  0101               	movlb	1	; () banked
 26278  0030EE  5194               	movf	(_RadioConfiguration+42)& (0+255),w,b
 26279  0030F0  1195               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 26280  0030F2  1196               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 26281  0030F4  1197               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 26282  0030F6  E059               	bz	l13462
 26283                           
 26284                           ; BSR set to: 1
 26285                           ;radio_driver_SX1276.c: 866: {
 26286                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 26287  0030F8  5197               	movf	(_RadioConfiguration+45)& (0+255),w,b
 26288  0030FA  E106               	bnz	u14800
 26289  0030FC  2994               	incf	(_RadioConfiguration+42)& (0+255),w,b
 26290  0030FE  0EFF               	movlw	255
 26291  003100  5995               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 26292  003102  0E0F               	movlw	15
 26293  003104  5996               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 26294  003106  E319               	bnc	l13456
 26295  003108                     u14800:
 26296                           
 26297                           ; BSR set to: 1
 26298  003108  C194  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 26299  00310C  C195  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 26300  003110  C196  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 26301  003114  C197  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 26302  003118  0E7D               	movlw	125
 26303  00311A  0100               	movlb	0	; () banked
 26304  00311C  6F68               	movwf	___lldiv@divisor& (0+255),b
 26305  00311E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26306  003120  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26307  003122  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26308  003124  EC1A  F030         	call	___lldiv	;wreg free
 26309  003128  0E0C               	movlw	12
 26310  00312A                     u14815:
 26311  00312A  90D8               	bcf	status,0,c
 26312  00312C  3764               	rlcf	?___lldiv& (0+255),f,b
 26313  00312E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 26314  003130  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 26315  003132  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 26316  003134  2EE8               	decfsz	wreg,f,c
 26317  003136  D7F9               	goto	u14815
 26318  003138  D020               	goto	L15
 26319  00313A                     l13456:
 26320                           
 26321                           ; BSR set to: 1
 26322  00313A  C194  F099         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 26323  00313E  C195  F09A         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 26324  003142  C196  F09B         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 26325  003146  C197  F09C         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 26326  00314A  0E0C               	movlw	12
 26327  00314C                     u14825:
 26328  00314C  90D8               	bcf	status,0,c
 26329  00314E  0100               	movlb	0	; () banked
 26330  003150  3799               	rlcf	??_RADIO_Transmit& (0+255),f,b
 26331  003152  379A               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 26332  003154  379B               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 26333  003156  379C               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 26334  003158  2EE8               	decfsz	wreg,f,c
 26335  00315A  D7F8               	goto	u14825
 26336  00315C  C099  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 26337  003160  C09A  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 26338  003164  C09B  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 26339  003168  C09C  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 26340  00316C  0E7D               	movlw	125
 26341  00316E  6F68               	movwf	___lldiv@divisor& (0+255),b
 26342  003170  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 26343  003172  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 26344  003174  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 26345  003176  EC1A  F030         	call	___lldiv	;wreg free
 26346  00317A                     L15:
 26347  00317A  C064  F0A1         	movff	?___lldiv,_RADIO_Transmit$1196
 26348  00317E  C065  F0A2         	movff	?___lldiv+1,_RADIO_Transmit$1196+1
 26349  003182  C066  F0A3         	movff	?___lldiv+2,_RADIO_Transmit$1196+2
 26350  003186  C067  F0A4         	movff	?___lldiv+3,_RADIO_Transmit$1196+3
 26351                           
 26352                           ; BSR set to: 0
 26353  00318A  C0A1  F071         	movff	_RADIO_Transmit$1196,SwTimerSetTimeout@timeout
 26354  00318E  C0A2  F072         	movff	_RADIO_Transmit$1196+1,SwTimerSetTimeout@timeout+1
 26355  003192  C0A3  F073         	movff	_RADIO_Transmit$1196+2,SwTimerSetTimeout@timeout+2
 26356  003196  C0A4  F074         	movff	_RADIO_Transmit$1196+3,SwTimerSetTimeout@timeout+3
 26357  00319A  0101               	movlb	1	; () banked
 26358  00319C  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26359  00319E  ECA5  F036         	call	_SwTimerSetTimeout
 26360                           
 26361                           ; BSR set to: 0
 26362                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 26363  0031A2  0101               	movlb	1	; () banked
 26364  0031A4  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 26365  0031A6  EC58  F02E         	call	_SwTimerStart
 26366  0031AA                     l13462:
 26367                           
 26368                           ;radio_driver_SX1276.c: 869: }
 26369                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 26370  0031AA  0100               	movlb	0	; () banked
 26371  0031AC  6B96               	clrf	?_RADIO_Transmit& (0+255),b
 26372  0031AE  6B97               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 26373                           
 26374                           ; BSR set to: 0
 26375  0031B0  0012               	return		;funcret
 26376  0031B2                     __end_of_RADIO_Transmit:
 26377                           	opt stack 0
 26378                           tosu	equ	0xFFF
 26379                           tosh	equ	0xFFE
 26380                           tosl	equ	0xFFD
 26381                           pclath	equ	0xFFA
 26382                           tblptru	equ	0xFF8
 26383                           tblptrh	equ	0xFF7
 26384                           tblptrl	equ	0xFF6
 26385                           tablat	equ	0xFF5
 26386                           prodh	equ	0xFF4
 26387                           prodl	equ	0xFF3
 26388                           intcon	equ	0xFF2
 26389                           intcon2	equ	0xFF1
 26390                           intcon3	equ	0xFF0
 26391                           indf0	equ	0xFEF
 26392                           postinc0	equ	0xFEE
 26393                           fsr0h	equ	0xFEA
 26394                           fsr0l	equ	0xFE9
 26395                           wreg	equ	0xFE8
 26396                           postinc1	equ	0xFE6
 26397                           postdec1	equ	0xFE5
 26398                           plusw1	equ	0xFE3
 26399                           fsr1h	equ	0xFE2
 26400                           fsr1l	equ	0xFE1
 26401                           indf2	equ	0xFDF
 26402                           postinc2	equ	0xFDE
 26403                           postdec2	equ	0xFDD
 26404                           plusw2	equ	0xFDB
 26405                           fsr2h	equ	0xFDA
 26406                           fsr2l	equ	0xFD9
 26407                           status	equ	0xFD8
 26408                           
 26409 ;; *************** function _RADIO_WriteConfiguration *****************
 26410 ;; Defined at:
 26411 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26412 ;; Parameters:    Size  Location     Type
 26413 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 26414 ;; Auto vars:     Size  Location     Type
 26415 ;;  tempValue       4   34[BANK0 ] unsigned long 
 26416 ;;  regValue        1   38[BANK0 ] unsigned char 
 26417 ;;  i               1   33[BANK0 ] unsigned char 
 26418 ;; Return value:  Size  Location     Type
 26419 ;;                  1    wreg      void 
 26420 ;; Registers used:
 26421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26422 ;; Tracked objects:
 26423 ;;		On entry : F/0
 26424 ;;		On exit  : 0/0
 26425 ;;		Unchanged: 0/0
 26426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26427 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26428 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26429 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26430 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26431 ;;Total ram usage:       10 bytes
 26432 ;; Hardware stack levels used:    1
 26433 ;; Hardware stack levels required when called:   11
 26434 ;; This function calls:
 26435 ;;		_RADIO_RegisterRead
 26436 ;;		_RADIO_RegisterWrite
 26437 ;;		_RADIO_WriteFSKBitRate
 26438 ;;		_RADIO_WriteFSKFrequencyDeviation
 26439 ;;		_RADIO_WriteFrequency
 26440 ;;		_RADIO_WriteMode
 26441 ;;		_RADIO_WritePower
 26442 ;;		___lmul
 26443 ;; This function is called by:
 26444 ;;		_RADIO_Transmit
 26445 ;;		_RADIO_ReceiveStart
 26446 ;; This function uses a non-reentrant model
 26447 ;;
 26448                           
 26449                           	psect	text142
 26450  0013A0                     __ptext142:
 26451                           	opt stack 0
 26452  0013A0                     _RADIO_WriteConfiguration:
 26453                           	opt stack 16
 26454                           
 26455                           ; BSR set to: 0
 26456                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 26457                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 26458                           ;radio_driver_SX1276.c: 537: uint8_t i;
 26459                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 26460                           
 26461                           ; BSR set to: 0
 26462                           ;incstack = 0
 26463  0013A0  C182  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26464  0013A4  0E00               	movlw	0
 26465  0013A6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26466  0013A8  EC6E  F028         	call	_RADIO_WriteMode
 26467                           
 26468                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 26469  0013AC  C16A  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 26470  0013B0  C16B  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 26471  0013B4  C16C  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 26472  0013B8  C16D  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 26473  0013BC  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
 26474                           
 26475                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 26476  0013C0  0101               	movlb	1	; () banked
 26477  0013C2  5185               	movf	(_RadioConfiguration+27)& (0+255),w,b
 26478  0013C4  EC42  F029         	call	_RADIO_WritePower
 26479                           
 26480                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 26481  0013C8  0101               	movlb	1	; () banked
 26482  0013CA  0582               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26483  0013CC  E001 D1B6          	bnz	l12608
 26484                           
 26485                           ; BSR set to: 1
 26486                           ;radio_driver_SX1276.c: 545: {
 26487                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 26488  0013D0  C178  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 26489  0013D4  0E39               	movlw	57
 26490  0013D6  EC85  F03A         	call	_RADIO_RegisterWrite
 26491                           
 26492                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 26493                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 26494                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 26495                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 26496  0013DA  C18C  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 26497  0013DE  0E01               	movlw	1
 26498  0013E0  0100               	movlb	0	; () banked
 26499  0013E2  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26500  0013E4  0101               	movlb	1	; () banked
 26501  0013E6  90D8               	bcf	status,0,c
 26502  0013E8  358B               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 26503  0013EA  0100               	movlb	0	; () banked
 26504  0013EC  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26505  0013EE  0101               	movlb	1	; () banked
 26506  0013F0  3984               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 26507  0013F2  0BF0               	andlw	240
 26508  0013F4  0100               	movlb	0	; () banked
 26509  0013F6  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26510  0013F8  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26511  0013FA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26512  0013FC  0E1D               	movlw	29
 26513  0013FE  EC85  F03A         	call	_RADIO_RegisterWrite
 26514                           
 26515                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 26516                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 26517                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 26518                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 26519  001402  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 26520  001406  0E03               	movlw	3
 26521  001408  0100               	movlb	0	; () banked
 26522  00140A  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26523  00140C  C186  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 26524  001410  0E01               	movlw	1
 26525  001412  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26526  001414  90D8               	bcf	status,0,c
 26527  001416  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26528  001418  90D8               	bcf	status,0,c
 26529  00141A  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26530  00141C  0101               	movlb	1	; () banked
 26531  00141E  3983               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 26532  001420  0BF0               	andlw	240
 26533  001422  0100               	movlb	0	; () banked
 26534  001424  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 26535  001426  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 26536  001428  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26537  00142A  0E1E               	movlw	30
 26538  00142C  EC85  F03A         	call	_RADIO_RegisterWrite
 26539                           
 26540                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 26541  001430  0101               	movlb	1	; () banked
 26542  001432  5188               	movf	(_RadioConfiguration+30)& (0+255),w,b
 26543  001434  1189               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 26544  001436  E060               	bz	l447
 26545                           
 26546                           ; BSR set to: 1
 26547                           ;radio_driver_SX1276.c: 561: {
 26548                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 26549  001438  C188  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 26550  00143C  C189  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 26551  001440  0100               	movlb	0	; () banked
 26552  001442  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26553  001444  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26554                           
 26555                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 26556  001446  D042               	goto	l12500
 26557  001448                     l12492:
 26558                           
 26559                           ; BSR set to: 1
 26560                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 26561  001448  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26562  00144C  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26563  001450  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26564  001454  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26565  001458  0E7D               	movlw	125
 26566  00145A  0100               	movlb	0	; () banked
 26567  00145C  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26568  00145E  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26569  001460  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26570  001462  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26571  001464  EC9C  F02E         	call	___lmul	;wreg free
 26572  001468  D022               	goto	L17
 26573  00146A                     l12494:
 26574                           
 26575                           ; BSR set to: 1
 26576                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 26577  00146A  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26578  00146E  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26579  001472  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26580  001476  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26581  00147A  0EFA               	movlw	250
 26582  00147C  0100               	movlb	0	; () banked
 26583  00147E  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26584  001480  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 26585  001482  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26586  001484  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26587  001486  EC9C  F02E         	call	___lmul	;wreg free
 26588  00148A  D011               	goto	L17
 26589  00148C                     l12496:
 26590                           
 26591                           ; BSR set to: 1
 26592                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 26593  00148C  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 26594  001490  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 26595  001494  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 26596  001498  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 26597  00149C  0EF4               	movlw	244
 26598  00149E  0100               	movlb	0	; () banked
 26599  0014A0  6F68               	movwf	___lmul@multiplicand& (0+255),b
 26600  0014A2  0E01               	movlw	1
 26601  0014A4  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 26602  0014A6  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 26603  0014A8  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 26604  0014AA  EC9C  F02E         	call	___lmul	;wreg free
 26605  0014AE                     L17:
 26606  0014AE  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 26607  0014B2  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 26608  0014B6  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 26609  0014BA  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 26610                           
 26611                           ;radio_driver_SX1276.c: 574: break;
 26612  0014BE  D00F               	goto	l12502
 26613  0014C0                     l453:
 26614                           
 26615                           ; BSR set to: 1
 26616                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 26617  0014C0  0100               	movlb	0	; () banked
 26618  0014C2  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26619  0014C4  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26620  0014C6  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26621  0014C8  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26622                           
 26623                           ;radio_driver_SX1276.c: 578: break;
 26624  0014CA  D009               	goto	l12502
 26625  0014CC                     l12500:
 26626                           
 26627                           ; BSR set to: 0
 26628  0014CC  0101               	movlb	1	; () banked
 26629  0014CE  5184               	movf	(_RadioConfiguration+26)& (0+255),w,b
 26630                           
 26631                           ; Switch size 1, requested type "speed"
 26632                           ; Number of cases is 3, Range of values is 7 to 9
 26633                           ; switch strategies available:
 26634                           ; Name         Instructions Cycles
 26635                           ; simple_byte           10     6 (average)
 26636                           ;	Chosen strategy is simple_byte
 26637  0014D0  0A07               	xorlw	7	; case 7
 26638  0014D2  E0BA               	bz	l12492
 26639  0014D4  0A0F               	xorlw	15	; case 8
 26640  0014D6  E0C9               	bz	l12494
 26641  0014D8  0A01               	xorlw	1	; case 9
 26642  0014DA  E0D8               	bz	l12496
 26643  0014DC  D7F1               	goto	l453
 26644  0014DE                     l12502:
 26645                           
 26646                           ; BSR set to: 0
 26647                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 26648  0014DE  0101               	movlb	1	; () banked
 26649  0014E0  2983               	incf	(_RadioConfiguration+25)& (0+255),w,b
 26650  0014E2  0100               	movlb	0	; () banked
 26651  0014E4  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 26652  0014E6  D005               	goto	u13350
 26653  0014E8                     u13355:
 26654  0014E8  90D8               	bcf	status,0,c
 26655  0014EA  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 26656  0014EC  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 26657  0014EE  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 26658  0014F0  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 26659  0014F2                     u13350:
 26660  0014F2  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 26661  0014F4  D7F9               	goto	u13355
 26662                           
 26663                           ;radio_driver_SX1276.c: 582: }
 26664  0014F6  D005               	goto	l12504
 26665  0014F8                     l447:
 26666                           
 26667                           ; BSR set to: 1
 26668                           ;radio_driver_SX1276.c: 583: else
 26669                           ;radio_driver_SX1276.c: 584: {
 26670                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 26671  0014F8  0100               	movlb	0	; () banked
 26672  0014FA  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 26673  0014FC  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 26674  0014FE  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 26675  001500  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 26676  001502                     l12504:
 26677                           
 26678                           ;radio_driver_SX1276.c: 586: }
 26679                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 26680  001502  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 26681  001506  0E24               	movlw	36
 26682  001508  EC85  F03A         	call	_RADIO_RegisterWrite
 26683                           
 26684                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 26685  00150C  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 26686  001510  0E1F               	movlw	31
 26687  001512  EC85  F03A         	call	_RADIO_RegisterWrite
 26688                           
 26689                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 26690  001516  0E26               	movlw	38
 26691  001518  ECAE  F039         	call	_RADIO_RegisterRead
 26692  00151C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26693                           
 26694                           ; BSR set to: 0
 26695                           ;radio_driver_SX1276.c: 596: if (
 26696                           ;radio_driver_SX1276.c: 597: (
 26697                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 26698                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 26699                           ;radio_driver_SX1276.c: 600: ) ||
 26700                           ;radio_driver_SX1276.c: 601: (
 26701                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 26702                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 26703                           ;radio_driver_SX1276.c: 604: )
 26704                           ;radio_driver_SX1276.c: 605: )
 26705  00151E  0E0C               	movlw	12
 26706  001520  0101               	movlb	1	; () banked
 26707  001522  1983               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26708  001524  E106               	bnz	l12512
 26709                           
 26710                           ; BSR set to: 1
 26711  001526  0E07               	movlw	7
 26712  001528  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26713  00152A  E009               	bz	l12516
 26714                           
 26715                           ; BSR set to: 1
 26716  00152C  0E08               	movlw	8
 26717  00152E  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26718  001530  E006               	bz	l12516
 26719  001532                     l12512:
 26720                           
 26721                           ; BSR set to: 1
 26722  001532  0E0B               	movlw	11
 26723  001534  1983               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 26724  001536  E106               	bnz	l12518
 26725                           
 26726                           ; BSR set to: 1
 26727  001538  0E07               	movlw	7
 26728  00153A  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26729  00153C  E103               	bnz	l12518
 26730  00153E                     l12516:
 26731                           
 26732                           ; BSR set to: 1
 26733                           ;radio_driver_SX1276.c: 606: {
 26734                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 26735  00153E  0100               	movlb	0	; () banked
 26736  001540  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26737                           
 26738                           ;radio_driver_SX1276.c: 608: }
 26739  001542  D002               	goto	l460
 26740  001544                     l12518:
 26741                           
 26742                           ; BSR set to: 1
 26743                           ;radio_driver_SX1276.c: 609: else
 26744                           ;radio_driver_SX1276.c: 610: {
 26745                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 26746  001544  0100               	movlb	0	; () banked
 26747  001546  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 26748  001548                     l460:
 26749                           
 26750                           ; BSR set to: 0
 26751                           ;radio_driver_SX1276.c: 612: }
 26752                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 26753  001548  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 26754                           
 26755                           ; BSR set to: 0
 26756                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 26757  00154A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26758  00154E  0E26               	movlw	38
 26759  001550  EC85  F03A         	call	_RADIO_RegisterWrite
 26760                           
 26761                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 26762  001554  0E31               	movlw	49
 26763  001556  ECAE  F039         	call	_RADIO_RegisterRead
 26764  00155A  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26765                           
 26766                           ; BSR set to: 0
 26767                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 26768  00155C  0EF8               	movlw	248
 26769  00155E  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26770                           
 26771                           ; BSR set to: 0
 26772                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 26773  001560  0E03               	movlw	3
 26774  001562  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26775                           
 26776                           ; BSR set to: 0
 26777                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 26778  001564  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26779  001568  0E31               	movlw	49
 26780  00156A  EC85  F03A         	call	_RADIO_RegisterWrite
 26781                           
 26782                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 26783  00156E  0E0A               	movlw	10
 26784  001570  0100               	movlb	0	; () banked
 26785  001572  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26786  001574  0E37               	movlw	55
 26787  001576  EC85  F03A         	call	_RADIO_RegisterWrite
 26788                           
 26789                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 26790  00157A  0E12               	movlw	18
 26791  00157C  0101               	movlb	1	; () banked
 26792  00157E  199B               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26793  001580  E129               	bnz	l12556
 26794                           
 26795                           ; BSR set to: 1
 26796                           ;radio_driver_SX1276.c: 626: {
 26797                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 26798                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 26799  001582  0E07               	movlw	7
 26800  001584  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26801  001586  E003               	bz	l12538
 26802                           
 26803                           ; BSR set to: 1
 26804  001588  0E08               	movlw	8
 26805  00158A  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26806  00158C  E115               	bnz	l12548
 26807  00158E                     l12538:
 26808                           
 26809                           ; BSR set to: 1
 26810                           ;radio_driver_SX1276.c: 631: {
 26811                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 26812  00158E  0E31               	movlw	49
 26813  001590  ECAE  F039         	call	_RADIO_RegisterRead
 26814  001594  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26815                           
 26816                           ; BSR set to: 0
 26817                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 26818  001596  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26819                           
 26820                           ; BSR set to: 0
 26821                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 26822  001598  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26823  00159C  0E31               	movlw	49
 26824  00159E  EC85  F03A         	call	_RADIO_RegisterWrite
 26825                           
 26826                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 26827  0015A2  0E40               	movlw	64
 26828  0015A4  0100               	movlb	0	; () banked
 26829  0015A6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26830  0015A8  0E2F               	movlw	47
 26831  0015AA  EC85  F03A         	call	_RADIO_RegisterWrite
 26832                           
 26833                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 26834  0015AE  0100               	movlb	0	; () banked
 26835  0015B0  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26836  0015B2  0E30               	movlw	48
 26837  0015B4  EC85  F03A         	call	_RADIO_RegisterWrite
 26838  0015B8                     l12548:
 26839                           
 26840                           ;radio_driver_SX1276.c: 637: }
 26841                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 26842  0015B8  0E09               	movlw	9
 26843  0015BA  0101               	movlb	1	; () banked
 26844  0015BC  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26845  0015BE  E10A               	bnz	l12556
 26846                           
 26847                           ; BSR set to: 1
 26848                           ;radio_driver_SX1276.c: 640: {
 26849                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 26850  0015C0  0E31               	movlw	49
 26851  0015C2  ECAE  F039         	call	_RADIO_RegisterRead
 26852  0015C6  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26853                           
 26854                           ; BSR set to: 0
 26855                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 26856  0015C8  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 26857                           
 26858                           ; BSR set to: 0
 26859                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 26860  0015CA  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26861  0015CE  0E31               	movlw	49
 26862  0015D0  EC85  F03A         	call	_RADIO_RegisterWrite
 26863  0015D4                     l12556:
 26864                           
 26865                           ;radio_driver_SX1276.c: 644: }
 26866                           ;radio_driver_SX1276.c: 645: }
 26867                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 26868  0015D4  0E33               	movlw	51
 26869  0015D6  ECAE  F039         	call	_RADIO_RegisterRead
 26870  0015DA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26871                           
 26872                           ; BSR set to: 0
 26873                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 26874  0015DC  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 26875                           
 26876                           ; BSR set to: 0
 26877                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 26878  0015DE  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 26879                           
 26880                           ; BSR set to: 0
 26881                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 26882  0015E0  C18A  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26883  0015E4  0E01               	movlw	1
 26884  0015E6  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26885  0015E8  0E06               	movlw	6
 26886  0015EA  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 26887  0015EC                     u13455:
 26888  0015EC  90D8               	bcf	status,0,c
 26889  0015EE  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26890  0015F0  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 26891  0015F2  D7FC               	goto	u13455
 26892  0015F4  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 26893  0015F6  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 26894                           
 26895                           ; BSR set to: 0
 26896                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 26897  0015F8  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26898  0015FC  0E33               	movlw	51
 26899  0015FE  EC85  F03A         	call	_RADIO_RegisterWrite
 26900                           
 26901                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 26902  001602  C18A  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 26903  001606  0E01               	movlw	1
 26904  001608  0100               	movlb	0	; () banked
 26905  00160A  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 26906  00160C  90D8               	bcf	status,0,c
 26907  00160E  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 26908  001610  90D8               	bcf	status,0,c
 26909  001612  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 26910  001614  0AFF               	xorlw	255
 26911  001616  0B1D               	andlw	29
 26912  001618  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 26913                           
 26914                           ; BSR set to: 0
 26915                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 26916  00161A  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 26917  00161E  0E3B               	movlw	59
 26918  001620  EC85  F03A         	call	_RADIO_RegisterWrite
 26919                           
 26920                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 26921  001624  0101               	movlb	1	; () banked
 26922  001626  5177               	movf	(_RadioConfiguration+13)& (0+255),w,b
 26923  001628  0100               	movlb	0	; () banked
 26924  00162A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26925  00162C  0E20               	movlw	32
 26926  00162E  EC85  F03A         	call	_RADIO_RegisterWrite
 26927                           
 26928                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 26929  001632  C176  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 26930  001636  0E21               	movlw	33
 26931  001638  EC85  F03A         	call	_RADIO_RegisterWrite
 26932                           
 26933                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 26934  00163C  0100               	movlb	0	; () banked
 26935  00163E  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26936  001640  0E0D               	movlw	13
 26937  001642  EC85  F03A         	call	_RADIO_RegisterWrite
 26938                           
 26939                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 26940  001646  0100               	movlb	0	; () banked
 26941  001648  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26942  00164A  0E0E               	movlw	14
 26943  00164C  EC85  F03A         	call	_RADIO_RegisterWrite
 26944                           
 26945                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 26946  001650  0100               	movlb	0	; () banked
 26947  001652  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26948  001654  0E0F               	movlw	15
 26949  001656  EC85  F03A         	call	_RADIO_RegisterWrite
 26950                           
 26951                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 26952  00165A  0E12               	movlw	18
 26953  00165C  0101               	movlb	1	; () banked
 26954  00165E  199B               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 26955  001660  E168               	bnz	l466
 26956                           
 26957                           ; BSR set to: 1
 26958                           ;radio_driver_SX1276.c: 665: {
 26959                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 26960                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 26961                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 26962                           ;radio_driver_SX1276.c: 669: )
 26963  001662  0E09               	movlw	9
 26964  001664  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 26965  001666  E11E               	bnz	l12590
 26966                           
 26967                           ; BSR set to: 1
 26968  001668  0E80               	movlw	128
 26969  00166A  5D6A               	subwf	_RadioConfiguration& (0+255),w,b
 26970  00166C  0E13               	movlw	19
 26971  00166E  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26972  001670  0E61               	movlw	97
 26973  001672  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26974  001674  0E33               	movlw	51
 26975  001676  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26976  001678  E315               	bnc	l12590
 26977                           
 26978                           ; BSR set to: 1
 26979  00167A  056A               	decf	_RadioConfiguration& (0+255),w,b
 26980  00167C  0EF7               	movlw	247
 26981  00167E  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 26982  001680  0ECB               	movlw	203
 26983  001682  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 26984  001684  0E3C               	movlw	60
 26985  001686  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 26986  001688  E20D               	bc	l12590
 26987                           
 26988                           ; BSR set to: 1
 26989                           ;radio_driver_SX1276.c: 670: {
 26990                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 26991  00168A  0E02               	movlw	2
 26992  00168C  0100               	movlb	0	; () banked
 26993  00168E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26994  001690  0E36               	movlw	54
 26995  001692  EC85  F03A         	call	_RADIO_RegisterWrite
 26996                           
 26997                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 26998  001696  0E64               	movlw	100
 26999  001698  0100               	movlb	0	; () banked
 27000  00169A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27001  00169C  0E3A               	movlw	58
 27002  00169E  EC85  F03A         	call	_RADIO_RegisterWrite
 27003                           
 27004                           ;radio_driver_SX1276.c: 673: }
 27005  0016A2  D028               	goto	l12600
 27006  0016A4                     l12590:
 27007                           
 27008                           ; BSR set to: 1
 27009                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 27010                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 27011                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 27012                           ;radio_driver_SX1276.c: 677: )
 27013  0016A4  0E09               	movlw	9
 27014  0016A6  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27015  0016A8  E11F               	bnz	l12598
 27016                           
 27017                           ; BSR set to: 1
 27018  0016AA  0E80               	movlw	128
 27019  0016AC  5D6A               	subwf	_RadioConfiguration& (0+255),w,b
 27020  0016AE  0E1A               	movlw	26
 27021  0016B0  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 27022  0016B2  0E70               	movlw	112
 27023  0016B4  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27024  0016B6  0E18               	movlw	24
 27025  0016B8  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27026  0016BA  E316               	bnc	l12598
 27027                           
 27028                           ; BSR set to: 1
 27029  0016BC  0E41               	movlw	65
 27030  0016BE  5D6A               	subwf	_RadioConfiguration& (0+255),w,b
 27031  0016C0  0EDD               	movlw	221
 27032  0016C2  596B               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 27033  0016C4  0E4A               	movlw	74
 27034  0016C6  596C               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27035  0016C8  0E1F               	movlw	31
 27036  0016CA  596D               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27037  0016CC  E20D               	bc	l12598
 27038                           
 27039                           ; BSR set to: 1
 27040                           ;radio_driver_SX1276.c: 678: {
 27041                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 27042  0016CE  0E02               	movlw	2
 27043  0016D0  0100               	movlb	0	; () banked
 27044  0016D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27045  0016D4  0E36               	movlw	54
 27046  0016D6  EC85  F03A         	call	_RADIO_RegisterWrite
 27047                           
 27048                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 27049  0016DA  0E7F               	movlw	127
 27050  0016DC  0100               	movlb	0	; () banked
 27051  0016DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27052  0016E0  0E3A               	movlw	58
 27053  0016E2  EC85  F03A         	call	_RADIO_RegisterWrite
 27054                           
 27055                           ;radio_driver_SX1276.c: 681: }
 27056  0016E6  D006               	goto	l12600
 27057  0016E8                     l12598:
 27058                           
 27059                           ; BSR set to: 1
 27060                           ;radio_driver_SX1276.c: 682: else
 27061                           ;radio_driver_SX1276.c: 683: {
 27062                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 27063  0016E8  0E03               	movlw	3
 27064  0016EA  0100               	movlb	0	; () banked
 27065  0016EC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27066  0016EE  0E36               	movlw	54
 27067  0016F0  EC85  F03A         	call	_RADIO_RegisterWrite
 27068  0016F4                     l12600:
 27069                           
 27070                           ;radio_driver_SX1276.c: 685: }
 27071                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 27072  0016F4  0E09               	movlw	9
 27073  0016F6  0101               	movlb	1	; () banked
 27074  0016F8  1984               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27075  0016FA  E10F               	bnz	l12606
 27076                           
 27077                           ; BSR set to: 1
 27078  0016FC  058A               	decf	(_RadioConfiguration+32)& (0+255),w,b
 27079  0016FE  E10D               	bnz	l12606
 27080                           
 27081                           ; BSR set to: 1
 27082                           ;radio_driver_SX1276.c: 689: {
 27083                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 27084  001700  0E65               	movlw	101
 27085  001702  0100               	movlb	0	; () banked
 27086  001704  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27087  001706  0E3A               	movlw	58
 27088  001708  EC85  F03A         	call	_RADIO_RegisterWrite
 27089                           
 27090                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 27091  00170C  0E19               	movlw	25
 27092  00170E  0100               	movlb	0	; () banked
 27093  001710  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27094  001712  0E3B               	movlw	59
 27095  001714  EC85  F03A         	call	_RADIO_RegisterWrite
 27096                           
 27097                           ;radio_driver_SX1276.c: 692: }
 27098  001718  D00C               	goto	l466
 27099  00171A                     l12606:
 27100                           
 27101                           ; BSR set to: 1
 27102                           ;radio_driver_SX1276.c: 693: else
 27103                           ;radio_driver_SX1276.c: 694: {
 27104                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 27105  00171A  0E65               	movlw	101
 27106  00171C  0100               	movlb	0	; () banked
 27107  00171E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27108  001720  0E3A               	movlw	58
 27109  001722  EC85  F03A         	call	_RADIO_RegisterWrite
 27110                           
 27111                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 27112  001726  0E1D               	movlw	29
 27113  001728  0100               	movlb	0	; () banked
 27114  00172A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27115  00172C  0E3B               	movlw	59
 27116  00172E  EC85  F03A         	call	_RADIO_RegisterWrite
 27117  001732                     l466:
 27118                           
 27119                           ;radio_driver_SX1276.c: 697: }
 27120                           ;radio_driver_SX1276.c: 698: }
 27121                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 27122  001732  0100               	movlb	0	; () banked
 27123  001734  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27124  001736  0E12               	movlw	18
 27125  001738  EF85  F03A         	goto	_RADIO_RegisterWrite
 27126  00173C                     l12608:
 27127                           
 27128                           ; BSR set to: 1
 27129                           ;radio_driver_SX1276.c: 703: else
 27130                           ;radio_driver_SX1276.c: 704: {
 27131                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 27132  00173C  C16E  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 27133  001740  C16F  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 27134  001744  C170  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 27135  001748  C171  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 27136  00174C  EC67  F032         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 27137                           
 27138                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 27139  001750  C172  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 27140  001754  C173  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 27141  001758  C174  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 27142  00175C  C175  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 27143  001760  ECCA  F032         	call	_RADIO_WriteFSKBitRate	;wreg free
 27144                           
 27145                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 27146  001764  0101               	movlb	1	; () banked
 27147  001766  5177               	movf	(_RadioConfiguration+13)& (0+255),w,b
 27148  001768  0100               	movlb	0	; () banked
 27149  00176A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27150  00176C  0E25               	movlw	37
 27151  00176E  EC85  F03A         	call	_RADIO_RegisterWrite
 27152                           
 27153                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 27154  001772  C176  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 27155  001776  0E26               	movlw	38
 27156  001778  EC85  F03A         	call	_RADIO_RegisterWrite
 27157                           
 27158                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 27159  00177C  0E0A               	movlw	10
 27160  00177E  ECAE  F039         	call	_RADIO_RegisterRead
 27161  001782  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27162                           
 27163                           ; BSR set to: 0
 27164                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 27165  001784  0E9F               	movlw	159
 27166  001786  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27167                           
 27168                           ; BSR set to: 0
 27169                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 27170  001788  0101               	movlb	1	; () banked
 27171  00178A  399D               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 27172  00178C  46E8               	rlncf	wreg,f,c
 27173  00178E  0BE0               	andlw	224
 27174  001790  0100               	movlb	0	; () banked
 27175  001792  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27176                           
 27177                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 27178  001794  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27179  001798  0E0A               	movlw	10
 27180  00179A  EC85  F03A         	call	_RADIO_RegisterWrite
 27181                           
 27182                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 27183  00179E  0EC8               	movlw	200
 27184  0017A0  0100               	movlb	0	; () banked
 27185  0017A2  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27186                           
 27187                           ; BSR set to: 0
 27188                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 27189  0017A4  0101               	movlb	1	; () banked
 27190  0017A6  5186               	movf	(_RadioConfiguration+28)& (0+255),w,b
 27191  0017A8  E002               	bz	l12620
 27192                           
 27193                           ; BSR set to: 1
 27194                           ;radio_driver_SX1276.c: 722: {
 27195                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 27196  0017AA  0100               	movlb	0	; () banked
 27197  0017AC  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 27198  0017AE                     l12620:
 27199                           
 27200                           ;radio_driver_SX1276.c: 724: }
 27201                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 27202  0017AE  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27203  0017B2  0E30               	movlw	48
 27204  0017B4  EC85  F03A         	call	_RADIO_RegisterWrite
 27205                           
 27206                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 27207  0017B8  0100               	movlb	0	; () banked
 27208  0017BA  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 27209  0017BC  D00E               	goto	l12628
 27210  0017BE                     l12624:
 27211                           
 27212                           ; BSR set to: 0
 27213                           ;radio_driver_SX1276.c: 729: {
 27214                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 27215  0017BE  0E79               	movlw	low (_RadioConfiguration+15)
 27216  0017C0  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27217  0017C2  6ED9               	movwf	fsr2l,c
 27218  0017C4  6ADA               	clrf	fsr2h,c
 27219  0017C6  0E01               	movlw	high (_RadioConfiguration+15)
 27220  0017C8  22DA               	addwfc	fsr2h,f,c
 27221  0017CA  50DF               	movf	indf2,w,c
 27222  0017CC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27223  0017CE  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 27224  0017D0  0F28               	addlw	40
 27225  0017D2  EC85  F03A         	call	_RADIO_RegisterWrite
 27226  0017D6  0100               	movlb	0	; () banked
 27227  0017D8  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 27228  0017DA                     l12628:
 27229                           
 27230                           ; BSR set to: 0
 27231  0017DA  0101               	movlb	1	; () banked
 27232  0017DC  5181               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27233  0017DE  0100               	movlb	0	; () banked
 27234  0017E0  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 27235  0017E2  E3ED               	bnc	l12624
 27236                           
 27237                           ; BSR set to: 0
 27238                           ;radio_driver_SX1276.c: 733: }
 27239                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 27240  0017E4  0101               	movlb	1	; () banked
 27241  0017E6  5181               	movf	(_RadioConfiguration+23)& (0+255),w,b
 27242  0017E8  E008               	bz	l12634
 27243                           
 27244                           ; BSR set to: 1
 27245                           ;radio_driver_SX1276.c: 737: {
 27246                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 27247  0017EA  0581               	decf	(_RadioConfiguration+23)& (0+255),w,b
 27248  0017EC  0910               	iorlw	16
 27249  0017EE  0100               	movlb	0	; () banked
 27250  0017F0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27251  0017F2  0E27               	movlw	39
 27252  0017F4  EC85  F03A         	call	_RADIO_RegisterWrite
 27253                           
 27254                           ;radio_driver_SX1276.c: 739: }
 27255  0017F8  D005               	goto	l479
 27256  0017FA                     l12634:
 27257                           
 27258                           ; BSR set to: 1
 27259                           ;radio_driver_SX1276.c: 740: else
 27260                           ;radio_driver_SX1276.c: 741: {
 27261                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 27262  0017FA  0100               	movlb	0	; () banked
 27263  0017FC  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27264  0017FE  0E27               	movlw	39
 27265  001800  EC85  F03A         	call	_RADIO_RegisterWrite
 27266  001804                     l479:
 27267                           
 27268                           ;radio_driver_SX1276.c: 743: }
 27269                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 27270  001804  0100               	movlb	0	; () banked
 27271  001806  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27272  001808  0E3E               	movlw	62
 27273  00180A  EC85  F03A         	call	_RADIO_RegisterWrite
 27274                           
 27275                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 27276  00180E  0100               	movlb	0	; () banked
 27277  001810  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27278  001812  0E3F               	movlw	63
 27279  001814  EF85  F03A         	goto	_RADIO_RegisterWrite
 27280  001818                     __end_of_RADIO_WriteConfiguration:
 27281                           	opt stack 0
 27282                           tosu	equ	0xFFF
 27283                           tosh	equ	0xFFE
 27284                           tosl	equ	0xFFD
 27285                           pclath	equ	0xFFA
 27286                           tblptru	equ	0xFF8
 27287                           tblptrh	equ	0xFF7
 27288                           tblptrl	equ	0xFF6
 27289                           tablat	equ	0xFF5
 27290                           prodh	equ	0xFF4
 27291                           prodl	equ	0xFF3
 27292                           intcon	equ	0xFF2
 27293                           intcon2	equ	0xFF1
 27294                           intcon3	equ	0xFF0
 27295                           indf0	equ	0xFEF
 27296                           postinc0	equ	0xFEE
 27297                           fsr0h	equ	0xFEA
 27298                           fsr0l	equ	0xFE9
 27299                           wreg	equ	0xFE8
 27300                           postinc1	equ	0xFE6
 27301                           postdec1	equ	0xFE5
 27302                           plusw1	equ	0xFE3
 27303                           fsr1h	equ	0xFE2
 27304                           fsr1l	equ	0xFE1
 27305                           indf2	equ	0xFDF
 27306                           postinc2	equ	0xFDE
 27307                           postdec2	equ	0xFDD
 27308                           plusw2	equ	0xFDB
 27309                           fsr2h	equ	0xFDA
 27310                           fsr2l	equ	0xFD9
 27311                           status	equ	0xFD8
 27312                           
 27313 ;; *************** function _RADIO_WritePower *****************
 27314 ;; Defined at:
 27315 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27316 ;; Parameters:    Size  Location     Type
 27317 ;;  power           1    wreg     char 
 27318 ;; Auto vars:     Size  Location     Type
 27319 ;;  power           1   10[BANK0 ] char 
 27320 ;;  paDac           1    9[BANK0 ] unsigned char 
 27321 ;;  ocp             1    8[BANK0 ] unsigned char 
 27322 ;; Return value:  Size  Location     Type
 27323 ;;                  1    wreg      void 
 27324 ;; Registers used:
 27325 ;;		wreg, status,2, status,0, cstack
 27326 ;; Tracked objects:
 27327 ;;		On entry : F/1
 27328 ;;		On exit  : 0/0
 27329 ;;		Unchanged: 0/0
 27330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27332 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27334 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27335 ;;Total ram usage:        3 bytes
 27336 ;; Hardware stack levels used:    1
 27337 ;; Hardware stack levels required when called:   10
 27338 ;; This function calls:
 27339 ;;		_RADIO_RegisterRead
 27340 ;;		_RADIO_RegisterWrite
 27341 ;; This function is called by:
 27342 ;;		_RADIO_WriteConfiguration
 27343 ;; This function uses a non-reentrant model
 27344 ;;
 27345                           
 27346                           	psect	text143
 27347  005284                     __ptext143:
 27348                           	opt stack 0
 27349  005284                     _RADIO_WritePower:
 27350                           	opt stack 16
 27351                           
 27352                           ;incstack = 0
 27353                           ;RADIO_WritePower@power stored from wreg
 27354  005284  0100               	movlb	0	; () banked
 27355  005286  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27356                           
 27357                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 27358                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 27359                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 27360  005288  0101               	movlb	1	; () banked
 27361  00528A  5187               	movf	(_RadioConfiguration+29)& (0+255),w,b
 27362  00528C  E127               	bnz	l12312
 27363                           
 27364                           ; BSR set to: 1
 27365                           ;radio_driver_SX1276.c: 348: {
 27366                           ;radio_driver_SX1276.c: 350: if (power < -3)
 27367  00528E  0100               	movlb	0	; () banked
 27368  005290  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27369  005292  0A80               	xorlw	128
 27370  005294  0F83               	addlw	131
 27371  005296  E202               	bc	l12292
 27372                           
 27373                           ; BSR set to: 0
 27374                           ;radio_driver_SX1276.c: 351: {
 27375                           ;radio_driver_SX1276.c: 352: power = -3;
 27376  005298  0EFD               	movlw	253
 27377  00529A  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27378  00529C                     l12292:
 27379                           
 27380                           ; BSR set to: 0
 27381                           ;radio_driver_SX1276.c: 353: }
 27382                           ;radio_driver_SX1276.c: 354: if (power > 15)
 27383  00529C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27384  00529E  0A80               	xorlw	128
 27385  0052A0  0F70               	addlw	-144
 27386  0052A2  E302               	bnc	l12296
 27387                           
 27388                           ; BSR set to: 0
 27389                           ;radio_driver_SX1276.c: 355: {
 27390                           ;radio_driver_SX1276.c: 356: power = 15;
 27391  0052A4  0E0F               	movlw	15
 27392  0052A6  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27393  0052A8                     l12296:
 27394                           
 27395                           ; BSR set to: 0
 27396                           ;radio_driver_SX1276.c: 357: }
 27397                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 27398  0052A8  0E4D               	movlw	77
 27399  0052AA  ECAE  F039         	call	_RADIO_RegisterRead
 27400  0052AE  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27401                           
 27402                           ; BSR set to: 0
 27403                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 27404  0052B0  0EF8               	movlw	248
 27405  0052B2  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27406                           
 27407                           ; BSR set to: 0
 27408                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 27409  0052B4  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27410                           
 27411                           ; BSR set to: 0
 27412                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 27413  0052B6  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27414  0052BA  0E4D               	movlw	77
 27415  0052BC  EC85  F03A         	call	_RADIO_RegisterWrite
 27416                           
 27417                           ;radio_driver_SX1276.c: 364: if (power < 0)
 27418  0052C0  0100               	movlb	0	; () banked
 27419  0052C2  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 27420  0052C4  D005               	goto	l12310
 27421                           
 27422                           ; BSR set to: 0
 27423                           ;radio_driver_SX1276.c: 365: {
 27424                           ;radio_driver_SX1276.c: 369: power += 3;
 27425  0052C6  0E03               	movlw	3
 27426  0052C8  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27427                           
 27428                           ; BSR set to: 0
 27429                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 27430  0052CA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27431  0052CC  0920               	iorlw	32
 27432  0052CE  D002               	goto	L19
 27433  0052D0                     l12310:
 27434                           
 27435                           ; BSR set to: 0
 27436                           ;radio_driver_SX1276.c: 372: else
 27437                           ;radio_driver_SX1276.c: 373: {
 27438                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 27439  0052D0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27440  0052D2  0970               	iorlw	112
 27441  0052D4                     L19:
 27442  0052D4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27443  0052D6  0E09               	movlw	9
 27444  0052D8  EF85  F03A         	goto	_RADIO_RegisterWrite
 27445  0052DC                     l12312:
 27446                           
 27447                           ; BSR set to: 1
 27448                           ;radio_driver_SX1276.c: 380: else
 27449                           ;radio_driver_SX1276.c: 381: {
 27450                           ;radio_driver_SX1276.c: 385: if (power < 2)
 27451  0052DC  0100               	movlb	0	; () banked
 27452  0052DE  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27453  0052E0  0A80               	xorlw	128
 27454  0052E2  0F7E               	addlw	-130
 27455  0052E4  E202               	bc	l12316
 27456                           
 27457                           ; BSR set to: 0
 27458                           ;radio_driver_SX1276.c: 386: {
 27459                           ;radio_driver_SX1276.c: 387: power = 2;
 27460  0052E6  0E02               	movlw	2
 27461  0052E8  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27462  0052EA                     l12316:
 27463                           
 27464                           ; BSR set to: 0
 27465                           ;radio_driver_SX1276.c: 388: }
 27466                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 27467  0052EA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27468  0052EC  0A80               	xorlw	128
 27469  0052EE  0F6C               	addlw	-148
 27470  0052F0  E302               	bnc	l12320
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;radio_driver_SX1276.c: 392: {
 27474                           ;radio_driver_SX1276.c: 393: power = 20;
 27475  0052F2  0E14               	movlw	20
 27476  0052F4  D005               	goto	L18
 27477  0052F6                     l12320:
 27478                           
 27479                           ; BSR set to: 0
 27480                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 27481  0052F6  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27482  0052F8  0A80               	xorlw	128
 27483  0052FA  0F6E               	addlw	-146
 27484  0052FC  E302               	bnc	l12324
 27485                           
 27486                           ; BSR set to: 0
 27487                           ;radio_driver_SX1276.c: 396: {
 27488                           ;radio_driver_SX1276.c: 397: power = 17;
 27489  0052FE  0E11               	movlw	17
 27490  005300                     L18:
 27491  005300  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27492  005302                     l12324:
 27493                           
 27494                           ; BSR set to: 0
 27495                           ;radio_driver_SX1276.c: 398: }
 27496                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 27497  005302  0E0B               	movlw	11
 27498  005304  ECAE  F039         	call	_RADIO_RegisterRead
 27499  005308  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 27500                           
 27501                           ; BSR set to: 0
 27502                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 27503  00530A  0E4D               	movlw	77
 27504  00530C  ECAE  F039         	call	_RADIO_RegisterRead
 27505  005310  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 27506                           
 27507                           ; BSR set to: 0
 27508                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 27509  005312  0EF8               	movlw	248
 27510  005314  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 27511                           
 27512                           ; BSR set to: 0
 27513                           ;radio_driver_SX1276.c: 403: if (power == 20)
 27514  005316  0E14               	movlw	20
 27515  005318  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 27516  00531A  E106               	bnz	l12338
 27517                           
 27518                           ; BSR set to: 0
 27519                           ;radio_driver_SX1276.c: 404: {
 27520                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 27521  00531C  0E07               	movlw	7
 27522  00531E  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 27523                           
 27524                           ; BSR set to: 0
 27525                           ;radio_driver_SX1276.c: 406: power = 15;
 27526  005320  0E0F               	movlw	15
 27527  005322  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 27528                           
 27529                           ; BSR set to: 0
 27530                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 27531  005324  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 27532                           
 27533                           ;radio_driver_SX1276.c: 408: }
 27534  005326  D004               	goto	l12344
 27535  005328                     l12338:
 27536                           
 27537                           ; BSR set to: 0
 27538                           ;radio_driver_SX1276.c: 409: else
 27539                           ;radio_driver_SX1276.c: 410: {
 27540                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 27541  005328  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 27542                           
 27543                           ; BSR set to: 0
 27544                           ;radio_driver_SX1276.c: 412: power -= 2;
 27545  00532A  0EFE               	movlw	254
 27546  00532C  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 27547                           
 27548                           ; BSR set to: 0
 27549                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 27550  00532E  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 27551  005330                     l12344:
 27552                           
 27553                           ; BSR set to: 0
 27554                           ;radio_driver_SX1276.c: 414: }
 27555                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 27556  005330  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 27557  005334  0E4D               	movlw	77
 27558  005336  EC85  F03A         	call	_RADIO_RegisterWrite
 27559                           
 27560                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 27561  00533A  0100               	movlb	0	; () banked
 27562  00533C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 27563  00533E  0980               	iorlw	128
 27564  005340  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27565  005342  0E09               	movlw	9
 27566  005344  EC85  F03A         	call	_RADIO_RegisterWrite
 27567                           
 27568                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 27569  005348  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 27570  00534C  0E0B               	movlw	11
 27571  00534E  EF85  F03A         	goto	_RADIO_RegisterWrite
 27572  005352                     __end_of_RADIO_WritePower:
 27573                           	opt stack 0
 27574                           tosu	equ	0xFFF
 27575                           tosh	equ	0xFFE
 27576                           tosl	equ	0xFFD
 27577                           pclath	equ	0xFFA
 27578                           tblptru	equ	0xFF8
 27579                           tblptrh	equ	0xFF7
 27580                           tblptrl	equ	0xFF6
 27581                           tablat	equ	0xFF5
 27582                           prodh	equ	0xFF4
 27583                           prodl	equ	0xFF3
 27584                           intcon	equ	0xFF2
 27585                           intcon2	equ	0xFF1
 27586                           intcon3	equ	0xFF0
 27587                           indf0	equ	0xFEF
 27588                           postinc0	equ	0xFEE
 27589                           fsr0h	equ	0xFEA
 27590                           fsr0l	equ	0xFE9
 27591                           wreg	equ	0xFE8
 27592                           postinc1	equ	0xFE6
 27593                           postdec1	equ	0xFE5
 27594                           plusw1	equ	0xFE3
 27595                           fsr1h	equ	0xFE2
 27596                           fsr1l	equ	0xFE1
 27597                           indf2	equ	0xFDF
 27598                           postinc2	equ	0xFDE
 27599                           postdec2	equ	0xFDD
 27600                           plusw2	equ	0xFDB
 27601                           fsr2h	equ	0xFDA
 27602                           fsr2l	equ	0xFD9
 27603                           status	equ	0xFD8
 27604                           
 27605 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 27606 ;; Defined at:
 27607 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27608 ;; Parameters:    Size  Location     Type
 27609 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 27610 ;; Auto vars:     Size  Location     Type
 27611 ;;  num             4   21[BANK0 ] unsigned long 
 27612 ;; Return value:  Size  Location     Type
 27613 ;;                  1    wreg      void 
 27614 ;; Registers used:
 27615 ;;		wreg, status,2, status,0, cstack
 27616 ;; Tracked objects:
 27617 ;;		On entry : F/1
 27618 ;;		On exit  : 0/0
 27619 ;;		Unchanged: 0/0
 27620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27622 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27624 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27625 ;;Total ram usage:        8 bytes
 27626 ;; Hardware stack levels used:    1
 27627 ;; Hardware stack levels required when called:   10
 27628 ;; This function calls:
 27629 ;;		_RADIO_RegisterWrite
 27630 ;;		___lldiv
 27631 ;; This function is called by:
 27632 ;;		_RADIO_WriteConfiguration
 27633 ;; This function uses a non-reentrant model
 27634 ;;
 27635                           
 27636                           	psect	text144
 27637  0064CE                     __ptext144:
 27638                           	opt stack 0
 27639  0064CE                     _RADIO_WriteFSKFrequencyDeviation:
 27640                           	opt stack 16
 27641                           
 27642                           ; BSR set to: 1
 27643                           ;radio_driver_SX1276.c: 296: uint32_t num;
 27644                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 27645                           
 27646                           ;incstack = 0
 27647  0064CE  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 27648  0064D2  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 27649  0064D6  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 27650  0064DA  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 27651                           
 27652                           ; BSR set to: 1
 27653                           ;radio_driver_SX1276.c: 304: num <<= (8);
 27654  0064DE  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 27655  0064E2  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 27656  0064E6  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 27657  0064EA  0100               	movlb	0	; () banked
 27658  0064EC  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 27659                           
 27660                           ; BSR set to: 0
 27661                           ;radio_driver_SX1276.c: 305: num /= 15625;
 27662  0064EE  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 27663  0064F2  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 27664  0064F6  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 27665  0064FA  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 27666  0064FE  0E09               	movlw	9
 27667  006500  6F68               	movwf	___lldiv@divisor& (0+255),b
 27668  006502  0E3D               	movlw	61
 27669  006504  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27670  006506  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27671  006508  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27672  00650A  EC1A  F030         	call	___lldiv	;wreg free
 27673  00650E  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 27674  006512  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 27675  006516  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 27676  00651A  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 27677                           
 27678                           ; BSR set to: 0
 27679                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 27680  00651E  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 27681  006522  0E04               	movlw	4
 27682  006524  EC85  F03A         	call	_RADIO_RegisterWrite
 27683                           
 27684                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 27685  006528  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 27686  00652C  0E05               	movlw	5
 27687  00652E  EF85  F03A         	goto	_RADIO_RegisterWrite
 27688  006532                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 27689                           	opt stack 0
 27690                           tosu	equ	0xFFF
 27691                           tosh	equ	0xFFE
 27692                           tosl	equ	0xFFD
 27693                           pclath	equ	0xFFA
 27694                           tblptru	equ	0xFF8
 27695                           tblptrh	equ	0xFF7
 27696                           tblptrl	equ	0xFF6
 27697                           tablat	equ	0xFF5
 27698                           prodh	equ	0xFF4
 27699                           prodl	equ	0xFF3
 27700                           intcon	equ	0xFF2
 27701                           intcon2	equ	0xFF1
 27702                           intcon3	equ	0xFF0
 27703                           indf0	equ	0xFEF
 27704                           postinc0	equ	0xFEE
 27705                           fsr0h	equ	0xFEA
 27706                           fsr0l	equ	0xFE9
 27707                           wreg	equ	0xFE8
 27708                           postinc1	equ	0xFE6
 27709                           postdec1	equ	0xFE5
 27710                           plusw1	equ	0xFE3
 27711                           fsr1h	equ	0xFE2
 27712                           fsr1l	equ	0xFE1
 27713                           indf2	equ	0xFDF
 27714                           postinc2	equ	0xFDE
 27715                           postdec2	equ	0xFDD
 27716                           plusw2	equ	0xFDB
 27717                           fsr2h	equ	0xFDA
 27718                           fsr2l	equ	0xFD9
 27719                           status	equ	0xFD8
 27720                           
 27721 ;; *************** function _RADIO_WriteFSKBitRate *****************
 27722 ;; Defined at:
 27723 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27724 ;; Parameters:    Size  Location     Type
 27725 ;;  bitRate         4   17[BANK0 ] unsigned long 
 27726 ;; Auto vars:     Size  Location     Type
 27727 ;;  num             4   21[BANK0 ] unsigned long 
 27728 ;; Return value:  Size  Location     Type
 27729 ;;                  1    wreg      void 
 27730 ;; Registers used:
 27731 ;;		wreg, status,2, status,0, cstack
 27732 ;; Tracked objects:
 27733 ;;		On entry : 0/1
 27734 ;;		On exit  : 0/0
 27735 ;;		Unchanged: 0/0
 27736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27738 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27740 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27741 ;;Total ram usage:        8 bytes
 27742 ;; Hardware stack levels used:    1
 27743 ;; Hardware stack levels required when called:   10
 27744 ;; This function calls:
 27745 ;;		_RADIO_RegisterWrite
 27746 ;;		___lldiv
 27747 ;; This function is called by:
 27748 ;;		_RADIO_WriteConfiguration
 27749 ;; This function uses a non-reentrant model
 27750 ;;
 27751                           
 27752                           	psect	text145
 27753  006594                     __ptext145:
 27754                           	opt stack 0
 27755  006594                     _RADIO_WriteFSKBitRate:
 27756                           	opt stack 16
 27757                           
 27758                           ;radio_driver_SX1276.c: 318: uint32_t num;
 27759                           ;radio_driver_SX1276.c: 320: num = 32000000;
 27760                           
 27761                           ;incstack = 0
 27762  006594  0100               	movlb	0	; () banked
 27763  006596  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 27764  006598  0E48               	movlw	72
 27765  00659A  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 27766  00659C  0EE8               	movlw	232
 27767  00659E  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 27768  0065A0  0E01               	movlw	1
 27769  0065A2  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 27770                           
 27771                           ; BSR set to: 0
 27772                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 27773  0065A4  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 27774  0065A8  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 27775  0065AC  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 27776  0065B0  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 27777  0065B4  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 27778  0065B8  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 27779  0065BC  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 27780  0065C0  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 27781  0065C4  EC1A  F030         	call	___lldiv	;wreg free
 27782  0065C8  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 27783  0065CC  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 27784  0065D0  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 27785  0065D4  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 27786                           
 27787                           ; BSR set to: 0
 27788                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 27789  0065D8  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 27790  0065DC  0E02               	movlw	2
 27791  0065DE  EC85  F03A         	call	_RADIO_RegisterWrite
 27792                           
 27793                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 27794  0065E2  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 27795  0065E6  0E03               	movlw	3
 27796  0065E8  EC85  F03A         	call	_RADIO_RegisterWrite
 27797                           
 27798                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 27799  0065EC  0100               	movlb	0	; () banked
 27800  0065EE  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27801  0065F0  0E5D               	movlw	93
 27802  0065F2  EF85  F03A         	goto	_RADIO_RegisterWrite
 27803  0065F6                     __end_of_RADIO_WriteFSKBitRate:
 27804                           	opt stack 0
 27805                           tosu	equ	0xFFF
 27806                           tosh	equ	0xFFE
 27807                           tosl	equ	0xFFD
 27808                           pclath	equ	0xFFA
 27809                           tblptru	equ	0xFF8
 27810                           tblptrh	equ	0xFF7
 27811                           tblptrl	equ	0xFF6
 27812                           tablat	equ	0xFF5
 27813                           prodh	equ	0xFF4
 27814                           prodl	equ	0xFF3
 27815                           intcon	equ	0xFF2
 27816                           intcon2	equ	0xFF1
 27817                           intcon3	equ	0xFF0
 27818                           indf0	equ	0xFEF
 27819                           postinc0	equ	0xFEE
 27820                           fsr0h	equ	0xFEA
 27821                           fsr0l	equ	0xFE9
 27822                           wreg	equ	0xFE8
 27823                           postinc1	equ	0xFE6
 27824                           postdec1	equ	0xFE5
 27825                           plusw1	equ	0xFE3
 27826                           fsr1h	equ	0xFE2
 27827                           fsr1l	equ	0xFE1
 27828                           indf2	equ	0xFDF
 27829                           postinc2	equ	0xFDE
 27830                           postdec2	equ	0xFDD
 27831                           plusw2	equ	0xFDB
 27832                           fsr2h	equ	0xFDA
 27833                           fsr2l	equ	0xFD9
 27834                           status	equ	0xFD8
 27835                           
 27836 ;; *************** function _PrepareJoinRequestFrame *****************
 27837 ;; Defined at:
 27838 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27839 ;; Parameters:    Size  Location     Type
 27840 ;;		None
 27841 ;; Auto vars:     Size  Location     Type
 27842 ;;  mic             4  117[BANK0 ] unsigned long 
 27843 ;;  iCtr            1  123[BANK0 ] unsigned char 
 27844 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 27845 ;;  mhdr            1  121[BANK0 ] struct .
 27846 ;; Return value:  Size  Location     Type
 27847 ;;                  1    wreg      unsigned char 
 27848 ;; Registers used:
 27849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27850 ;; Tracked objects:
 27851 ;;		On entry : F/2
 27852 ;;		On exit  : F/0
 27853 ;;		Unchanged: 0/0
 27854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27856 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27857 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27858 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27859 ;;Total ram usage:        9 bytes
 27860 ;; Hardware stack levels used:    1
 27861 ;; Hardware stack levels required when called:   13
 27862 ;; This function calls:
 27863 ;;		_ComputeMic
 27864 ;;		_Random
 27865 ;;		_memcpy
 27866 ;;		_memset
 27867 ;; This function is called by:
 27868 ;;		_LORAWAN_Join
 27869 ;; This function uses a non-reentrant model
 27870 ;;
 27871                           
 27872                           	psect	text146
 27873  004650                     __ptext146:
 27874                           	opt stack 0
 27875  004650                     _PrepareJoinRequestFrame:
 27876                           	opt stack 16
 27877                           
 27878                           ; BSR set to: 2
 27879                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 27880                           
 27881                           ;incstack = 0
 27882  004650  0100               	movlb	0	; () banked
 27883  004652  6BDA               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 27884                           
 27885                           ; BSR set to: 0
 27886                           ;lorawan.c: 1809: Mhdr_t mhdr;
 27887                           ;lorawan.c: 1810: uint32_t mic;
 27888                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 27889  004654  0EE0               	movlw	low _macBuffer
 27890  004656  6F64               	movwf	memset@p1& (0+255),b
 27891  004658  0E04               	movlw	high _macBuffer
 27892  00465A  6F65               	movwf	(memset@p1+1)& (0+255),b
 27893  00465C  6B67               	clrf	(memset@c+1)& (0+255),b
 27894  00465E  6B66               	clrf	memset@c& (0+255),b
 27895  004660  0E01               	movlw	1
 27896  004662  6F69               	movwf	(memset@n+1)& (0+255),b
 27897  004664  0E0F               	movlw	15
 27898  004666  6F68               	movwf	memset@n& (0+255),b
 27899  004668  EC37  F039         	call	_memset	;wreg free
 27900                           
 27901                           ; BSR set to: 0
 27902                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 27903  00466C  0E1F               	movlw	-225
 27904  00466E  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27905                           
 27906                           ; BSR set to: 0
 27907                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 27908  004670  0EFC               	movlw	-4
 27909  004672  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27910                           
 27911                           ; BSR set to: 0
 27912                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 27913  004674  0EE3               	movlw	-29
 27914  004676  17D9               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 27915                           
 27916                           ; BSR set to: 0
 27917                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 27918  004678  EE24  F0E0         	lfsr	2,_macBuffer
 27919  00467C  C0D9  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 27920                           
 27921                           ; BSR set to: 0
 27922  004680  2BDA               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27923                           
 27924                           ; BSR set to: 0
 27925                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 27926  004682  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27927  004684                     l15492:
 27928                           
 27929                           ; BSR set to: 0
 27930                           ;lorawan.c: 1821: {
 27931                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 27932  004684  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27933  004686  0859               	sublw	low (_loRa+89)
 27934  004688  6ED9               	movwf	fsr2l,c
 27935  00468A  0E00               	movlw	0
 27936  00468C  A0D8               	btfss	status,0,c
 27937  00468E  2AE8               	incf	wreg,f,c
 27938  004690  0802               	sublw	high (_loRa+89)
 27939  004692  6EDA               	movwf	fsr2h,c
 27940  004694  0EE0               	movlw	low _macBuffer
 27941  004696  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27942  004698  0E04               	movlw	high _macBuffer
 27943  00469A  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27944  00469C  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27945  00469E  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27946  0046A0  0E00               	movlw	0
 27947  0046A2  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27948  0046A4  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27949  0046A6  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27950  0046A8  6EE9               	movwf	fsr0l,c
 27951  0046AA  0E00               	movlw	0
 27952  0046AC  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27953  0046AE  6EEA               	movwf	fsr0h,c
 27954  0046B0  CFDF FFEF          	movff	indf2,indf0
 27955                           
 27956                           ; BSR set to: 0
 27957  0046B4  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 27958                           
 27959                           ; BSR set to: 0
 27960  0046B6  0E07               	movlw	7
 27961  0046B8  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 27962  0046BA  D7E4               	goto	l15492
 27963                           
 27964                           ; BSR set to: 0
 27965                           ;lorawan.c: 1823: }
 27966                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 27967  0046BC  0E08               	movlw	8
 27968  0046BE  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 27969                           
 27970                           ; BSR set to: 0
 27971                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 27972  0046C0  6BDB               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 27973  0046C2                     l15504:
 27974                           
 27975                           ; BSR set to: 0
 27976                           ;lorawan.c: 1828: {
 27977                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 27978  0046C2  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27979  0046C4  0861               	sublw	low (_loRa+97)
 27980  0046C6  6ED9               	movwf	fsr2l,c
 27981  0046C8  0E00               	movlw	0
 27982  0046CA  A0D8               	btfss	status,0,c
 27983  0046CC  2AE8               	incf	wreg,f,c
 27984  0046CE  0802               	sublw	high (_loRa+97)
 27985  0046D0  6EDA               	movwf	fsr2h,c
 27986  0046D2  0EE0               	movlw	low _macBuffer
 27987  0046D4  6FD3               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 27988  0046D6  0E04               	movlw	high _macBuffer
 27989  0046D8  6FD4               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 27990  0046DA  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 27991  0046DC  27D3               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 27992  0046DE  0E00               	movlw	0
 27993  0046E0  23D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 27994  0046E2  51DB               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 27995  0046E4  25D3               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 27996  0046E6  6EE9               	movwf	fsr0l,c
 27997  0046E8  0E00               	movlw	0
 27998  0046EA  21D4               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 27999  0046EC  6EEA               	movwf	fsr0h,c
 28000  0046EE  CFDF FFEF          	movff	indf2,indf0
 28001                           
 28002                           ; BSR set to: 0
 28003  0046F2  2BDB               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 28004                           
 28005                           ; BSR set to: 0
 28006  0046F4  0E07               	movlw	7
 28007  0046F6  65DB               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 28008  0046F8  D7E4               	goto	l15504
 28009                           
 28010                           ; BSR set to: 0
 28011                           ;lorawan.c: 1830: }
 28012                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 28013  0046FA  0E08               	movlw	8
 28014  0046FC  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28015                           
 28016                           ; BSR set to: 0
 28017                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 28018  0046FE  6978               	setf	(Random@max+1)& (0+255),b
 28019  004700  6977               	setf	Random@max& (0+255),b
 28020  004702  EC07  F03A         	call	_Random	;wreg free
 28021  004706  C077  F2D2         	movff	?_Random,_loRa+210
 28022  00470A  C078  F2D3         	movff	?_Random+1,_loRa+211
 28023                           
 28024                           ; BSR set to: 0
 28025                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 28026  00470E  0EE0               	movlw	low _macBuffer
 28027  004710  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28028  004712  6F64               	movwf	memcpy@d1& (0+255),b
 28029  004714  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28030  004716  0E04               	movlw	high _macBuffer
 28031  004718  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 28032  00471A  0ED2               	movlw	low (_loRa+210)
 28033  00471C  6F66               	movwf	memcpy@s1& (0+255),b
 28034  00471E  0E02               	movlw	high (_loRa+210)
 28035  004720  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28036  004722  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28037  004724  0E02               	movlw	2
 28038  004726  6F68               	movwf	memcpy@n& (0+255),b
 28039  004728  EC44  F034         	call	_memcpy	;wreg free
 28040                           
 28041                           ; BSR set to: 0
 28042                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 28043  00472C  0E02               	movlw	2
 28044  00472E  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28045                           
 28046                           ; BSR set to: 0
 28047                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 28048  004730  0E42               	movlw	low (_loRa+66)
 28049  004732  6FCA               	movwf	ComputeMic@key& (0+255),b
 28050  004734  0E02               	movlw	high (_loRa+66)
 28051  004736  6FCB               	movwf	(ComputeMic@key+1)& (0+255),b
 28052  004738  0EE0               	movlw	low _macBuffer
 28053  00473A  6FCC               	movwf	ComputeMic@buffer& (0+255),b
 28054  00473C  0E04               	movlw	high _macBuffer
 28055  00473E  6FCD               	movwf	(ComputeMic@buffer+1)& (0+255),b
 28056  004740  C0DA  F0CE         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 28057  004744  EC99  F034         	call	_ComputeMic	;wreg free
 28058  004748  C0CA  F0D5         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 28059  00474C  C0CB  F0D6         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 28060  004750  C0CC  F0D7         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 28061  004754  C0CD  F0D8         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 28062                           
 28063                           ; BSR set to: 0
 28064                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 28065  004758  0EE0               	movlw	low _macBuffer
 28066  00475A  25DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28067  00475C  6F64               	movwf	memcpy@d1& (0+255),b
 28068  00475E  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28069  004760  0E04               	movlw	high _macBuffer
 28070  004762  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 28071  004764  0ED5               	movlw	low PrepareJoinRequestFrame@mic
 28072  004766  6F66               	movwf	memcpy@s1& (0+255),b
 28073  004768  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 28074  00476A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28075  00476C  0E04               	movlw	4
 28076  00476E  6F68               	movwf	memcpy@n& (0+255),b
 28077  004770  EC44  F034         	call	_memcpy	;wreg free
 28078                           
 28079                           ; BSR set to: 0
 28080                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 28081  004774  0E04               	movlw	4
 28082  004776  27DA               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28083                           
 28084                           ; BSR set to: 0
 28085                           ;lorawan.c: 1842: return bufferIndex;
 28086  004778  51DA               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28087                           
 28088                           ; BSR set to: 0
 28089  00477A  0012               	return		;funcret
 28090  00477C                     __end_of_PrepareJoinRequestFrame:
 28091                           	opt stack 0
 28092                           tosu	equ	0xFFF
 28093                           tosh	equ	0xFFE
 28094                           tosl	equ	0xFFD
 28095                           pclath	equ	0xFFA
 28096                           tblptru	equ	0xFF8
 28097                           tblptrh	equ	0xFF7
 28098                           tblptrl	equ	0xFF6
 28099                           tablat	equ	0xFF5
 28100                           prodh	equ	0xFF4
 28101                           prodl	equ	0xFF3
 28102                           intcon	equ	0xFF2
 28103                           intcon2	equ	0xFF1
 28104                           intcon3	equ	0xFF0
 28105                           indf0	equ	0xFEF
 28106                           postinc0	equ	0xFEE
 28107                           fsr0h	equ	0xFEA
 28108                           fsr0l	equ	0xFE9
 28109                           wreg	equ	0xFE8
 28110                           postinc1	equ	0xFE6
 28111                           postdec1	equ	0xFE5
 28112                           plusw1	equ	0xFE3
 28113                           fsr1h	equ	0xFE2
 28114                           fsr1l	equ	0xFE1
 28115                           indf2	equ	0xFDF
 28116                           postinc2	equ	0xFDE
 28117                           postdec2	equ	0xFDD
 28118                           plusw2	equ	0xFDB
 28119                           fsr2h	equ	0xFDA
 28120                           fsr2l	equ	0xFD9
 28121                           status	equ	0xFD8
 28122                           
 28123 ;; *************** function _Random *****************
 28124 ;; Defined at:
 28125 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28126 ;; Parameters:    Size  Location     Type
 28127 ;;  max             2   23[BANK0 ] unsigned int 
 28128 ;; Auto vars:     Size  Location     Type
 28129 ;;		None
 28130 ;; Return value:  Size  Location     Type
 28131 ;;                  2   23[BANK0 ] unsigned int 
 28132 ;; Registers used:
 28133 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28134 ;; Tracked objects:
 28135 ;;		On entry : F/0
 28136 ;;		On exit  : F/0
 28137 ;;		Unchanged: 0/0
 28138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28139 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28142 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28143 ;;Total ram usage:        2 bytes
 28144 ;; Hardware stack levels used:    1
 28145 ;; Hardware stack levels required when called:    9
 28146 ;; This function calls:
 28147 ;;		___lwmod
 28148 ;;		_rand
 28149 ;; This function is called by:
 28150 ;;		_SearchAvailableChannel
 28151 ;;		_PrepareJoinRequestFrame
 28152 ;; This function uses a non-reentrant model
 28153 ;;
 28154                           
 28155                           	psect	text147
 28156  00740E                     __ptext147:
 28157                           	opt stack 0
 28158  00740E                     _Random:
 28159                           	opt stack 17
 28160                           
 28161                           ; BSR set to: 0
 28162                           ;lorawan.c: 1118: return (rand () % max);
 28163                           
 28164                           ; BSR set to: 0
 28165                           ;incstack = 0
 28166  00740E  EC12  F035         	call	_rand	;wreg free
 28167  007412  C070  F072         	movff	?_rand,___lwmod@dividend
 28168  007416  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 28169  00741A  C077  F074         	movff	Random@max,___lwmod@divisor
 28170  00741E  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 28171  007422  ECE5  F036         	call	___lwmod	;wreg free
 28172  007426  C072  F077         	movff	?___lwmod,?_Random
 28173  00742A  C073  F078         	movff	?___lwmod+1,?_Random+1
 28174                           
 28175                           ; BSR set to: 0
 28176  00742E  0012               	return		;funcret
 28177  007430                     __end_of_Random:
 28178                           	opt stack 0
 28179                           tosu	equ	0xFFF
 28180                           tosh	equ	0xFFE
 28181                           tosl	equ	0xFFD
 28182                           pclath	equ	0xFFA
 28183                           tblptru	equ	0xFF8
 28184                           tblptrh	equ	0xFF7
 28185                           tblptrl	equ	0xFF6
 28186                           tablat	equ	0xFF5
 28187                           prodh	equ	0xFF4
 28188                           prodl	equ	0xFF3
 28189                           intcon	equ	0xFF2
 28190                           intcon2	equ	0xFF1
 28191                           intcon3	equ	0xFF0
 28192                           indf0	equ	0xFEF
 28193                           postinc0	equ	0xFEE
 28194                           fsr0h	equ	0xFEA
 28195                           fsr0l	equ	0xFE9
 28196                           wreg	equ	0xFE8
 28197                           postinc1	equ	0xFE6
 28198                           postdec1	equ	0xFE5
 28199                           plusw1	equ	0xFE3
 28200                           fsr1h	equ	0xFE2
 28201                           fsr1l	equ	0xFE1
 28202                           indf2	equ	0xFDF
 28203                           postinc2	equ	0xFDE
 28204                           postdec2	equ	0xFDD
 28205                           plusw2	equ	0xFDB
 28206                           fsr2h	equ	0xFDA
 28207                           fsr2l	equ	0xFD9
 28208                           status	equ	0xFD8
 28209                           
 28210 ;; *************** function _rand *****************
 28211 ;; Defined at:
 28212 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 28213 ;; Parameters:    Size  Location     Type
 28214 ;;		None
 28215 ;; Auto vars:     Size  Location     Type
 28216 ;;		None
 28217 ;; Return value:  Size  Location     Type
 28218 ;;                  2   16[BANK0 ] int 
 28219 ;; Registers used:
 28220 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28221 ;; Tracked objects:
 28222 ;;		On entry : F/0
 28223 ;;		On exit  : F/0
 28224 ;;		Unchanged: 0/0
 28225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28226 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28229 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28230 ;;Total ram usage:        2 bytes
 28231 ;; Hardware stack levels used:    1
 28232 ;; Hardware stack levels required when called:    8
 28233 ;; This function calls:
 28234 ;;		___lmul
 28235 ;; This function is called by:
 28236 ;;		_Random
 28237 ;; This function uses a non-reentrant model
 28238 ;;
 28239                           
 28240                           	psect	text148
 28241  006A24                     __ptext148:
 28242                           	opt stack 0
 28243  006A24                     _rand:
 28244                           	opt stack 17
 28245                           
 28246                           ; BSR set to: 0
 28247                           
 28248                           ; BSR set to: 0
 28249                           ;incstack = 0
 28250  006A24  C052  F064         	movff	_randx,___lmul@multiplier
 28251  006A28  C053  F065         	movff	_randx+1,___lmul@multiplier+1
 28252  006A2C  C054  F066         	movff	_randx+2,___lmul@multiplier+2
 28253  006A30  C055  F067         	movff	_randx+3,___lmul@multiplier+3
 28254  006A34  0E6D               	movlw	109
 28255  006A36  6F68               	movwf	___lmul@multiplicand& (0+255),b
 28256  006A38  0E4E               	movlw	78
 28257  006A3A  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 28258  006A3C  0EC6               	movlw	198
 28259  006A3E  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 28260  006A40  0E41               	movlw	65
 28261  006A42  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 28262  006A44  EC9C  F02E         	call	___lmul	;wreg free
 28263  006A48  C064  F052         	movff	?___lmul,_randx
 28264  006A4C  C065  F053         	movff	?___lmul+1,_randx+1
 28265  006A50  C066  F054         	movff	?___lmul+2,_randx+2
 28266  006A54  C067  F055         	movff	?___lmul+3,_randx+3
 28267                           
 28268                           ; BSR set to: 0
 28269  006A58  0E39               	movlw	57
 28270  006A5A  2652               	addwf	_randx,f,c
 28271  006A5C  0E30               	movlw	48
 28272  006A5E  2253               	addwfc	_randx+1,f,c
 28273  006A60  0E00               	movlw	0
 28274  006A62  2254               	addwfc	_randx+2,f,c
 28275  006A64  2255               	addwfc	_randx+3,f,c
 28276                           
 28277                           ; BSR set to: 0
 28278  006A66  5054               	movf	_randx+2,w,c
 28279  006A68  6F70               	movwf	?_rand& (0+255),b
 28280  006A6A  0E7F               	movlw	127
 28281  006A6C  1455               	andwf	_randx+3,w,c
 28282  006A6E  6F71               	movwf	(?_rand+1)& (0+255),b
 28283                           
 28284                           ; BSR set to: 0
 28285  006A70  0012               	return		;funcret
 28286  006A72                     __end_of_rand:
 28287                           	opt stack 0
 28288                           tosu	equ	0xFFF
 28289                           tosh	equ	0xFFE
 28290                           tosl	equ	0xFFD
 28291                           pclath	equ	0xFFA
 28292                           tblptru	equ	0xFF8
 28293                           tblptrh	equ	0xFF7
 28294                           tblptrl	equ	0xFF6
 28295                           tablat	equ	0xFF5
 28296                           prodh	equ	0xFF4
 28297                           prodl	equ	0xFF3
 28298                           intcon	equ	0xFF2
 28299                           intcon2	equ	0xFF1
 28300                           intcon3	equ	0xFF0
 28301                           indf0	equ	0xFEF
 28302                           postinc0	equ	0xFEE
 28303                           fsr0h	equ	0xFEA
 28304                           fsr0l	equ	0xFE9
 28305                           wreg	equ	0xFE8
 28306                           postinc1	equ	0xFE6
 28307                           postdec1	equ	0xFE5
 28308                           plusw1	equ	0xFE3
 28309                           fsr1h	equ	0xFE2
 28310                           fsr1l	equ	0xFE1
 28311                           indf2	equ	0xFDF
 28312                           postinc2	equ	0xFDE
 28313                           postdec2	equ	0xFDD
 28314                           plusw2	equ	0xFDB
 28315                           fsr2h	equ	0xFDA
 28316                           fsr2l	equ	0xFD9
 28317                           status	equ	0xFD8
 28318                           
 28319 ;; *************** function ___lmul *****************
 28320 ;; Defined at:
 28321 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 28322 ;; Parameters:    Size  Location     Type
 28323 ;;  multiplier      4    4[BANK0 ] unsigned long 
 28324 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 28325 ;; Auto vars:     Size  Location     Type
 28326 ;;  product         4   12[BANK0 ] unsigned long 
 28327 ;; Return value:  Size  Location     Type
 28328 ;;                  4    4[BANK0 ] unsigned long 
 28329 ;; Registers used:
 28330 ;;		wreg, status,2, status,0, prodl, prodh
 28331 ;; Tracked objects:
 28332 ;;		On entry : F/0
 28333 ;;		On exit  : F/0
 28334 ;;		Unchanged: 0/0
 28335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28336 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28337 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28339 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28340 ;;Total ram usage:       12 bytes
 28341 ;; Hardware stack levels used:    1
 28342 ;; Hardware stack levels required when called:    7
 28343 ;; This function calls:
 28344 ;;		Nothing
 28345 ;; This function is called by:
 28346 ;;		_RADIO_WriteConfiguration
 28347 ;;		_ExecuteNewChannel
 28348 ;;		_ExecuteRxParamSetupReq
 28349 ;;		_UpdateCfList
 28350 ;;		_rand
 28351 ;; This function uses a non-reentrant model
 28352 ;;
 28353                           
 28354                           	psect	text149
 28355  005D38                     __ptext149:
 28356                           	opt stack 0
 28357  005D38                     ___lmul:
 28358                           	opt stack 17
 28359                           
 28360                           ; BSR set to: 0
 28361                           
 28362                           ; BSR set to: 0
 28363                           ;incstack = 0
 28364  005D38  5164               	movf	___lmul@multiplier& (0+255),w,b
 28365  005D3A  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28366  005D3C  CFF3 F06C          	movff	prodl,___lmul@product
 28367  005D40  CFF4 F06D          	movff	prodh,___lmul@product+1
 28368  005D44  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 28369  005D46  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 28370  005D48  5164               	movf	___lmul@multiplier& (0+255),w,b
 28371  005D4A  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28372  005D4C  50F3               	movf	prodl,w,c
 28373  005D4E  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28374  005D50  50F4               	movf	prodh,w,c
 28375  005D52  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28376  005D54  0E00               	movlw	0
 28377  005D56  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28378  005D58  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28379  005D5A  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28380  005D5C  50F3               	movf	prodl,w,c
 28381  005D5E  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 28382  005D60  50F4               	movf	prodh,w,c
 28383  005D62  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 28384  005D64  0E00               	movlw	0
 28385  005D66  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28386  005D68  5164               	movf	___lmul@multiplier& (0+255),w,b
 28387  005D6A  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28388  005D6C  50F3               	movf	prodl,w,c
 28389  005D6E  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28390  005D70  50F4               	movf	prodh,w,c
 28391  005D72  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28392  005D74  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28393  005D76  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28394  005D78  50F3               	movf	prodl,w,c
 28395  005D7A  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28396  005D7C  50F4               	movf	prodh,w,c
 28397  005D7E  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28398  005D80  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28399  005D82  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28400  005D84  50F3               	movf	prodl,w,c
 28401  005D86  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 28402  005D88  50F4               	movf	prodh,w,c
 28403  005D8A  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 28404  005D8C  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 28405  005D8E  0364               	mulwf	___lmul@multiplier& (0+255),b
 28406  005D90  50F3               	movf	prodl,w,c
 28407  005D92  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28408  005D94  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 28409  005D96  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 28410  005D98  50F3               	movf	prodl,w,c
 28411  005D9A  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28412  005D9C  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 28413  005D9E  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 28414  005DA0  50F3               	movf	prodl,w,c
 28415  005DA2  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28416  005DA4  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 28417  005DA6  0368               	mulwf	___lmul@multiplicand& (0+255),b
 28418  005DA8  50F3               	movf	prodl,w,c
 28419  005DAA  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 28420                           
 28421                           ; BSR set to: 0
 28422  005DAC  C06C  F064         	movff	___lmul@product,?___lmul
 28423  005DB0  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 28424  005DB4  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 28425  005DB8  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 28426                           
 28427                           ; BSR set to: 0
 28428  005DBC  0012               	return		;funcret
 28429  005DBE                     __end_of___lmul:
 28430                           	opt stack 0
 28431                           tosu	equ	0xFFF
 28432                           tosh	equ	0xFFE
 28433                           tosl	equ	0xFFD
 28434                           pclath	equ	0xFFA
 28435                           tblptru	equ	0xFF8
 28436                           tblptrh	equ	0xFF7
 28437                           tblptrl	equ	0xFF6
 28438                           tablat	equ	0xFF5
 28439                           prodh	equ	0xFF4
 28440                           prodl	equ	0xFF3
 28441                           intcon	equ	0xFF2
 28442                           intcon2	equ	0xFF1
 28443                           intcon3	equ	0xFF0
 28444                           indf0	equ	0xFEF
 28445                           postinc0	equ	0xFEE
 28446                           fsr0h	equ	0xFEA
 28447                           fsr0l	equ	0xFE9
 28448                           wreg	equ	0xFE8
 28449                           postinc1	equ	0xFE6
 28450                           postdec1	equ	0xFE5
 28451                           plusw1	equ	0xFE3
 28452                           fsr1h	equ	0xFE2
 28453                           fsr1l	equ	0xFE1
 28454                           indf2	equ	0xFDF
 28455                           postinc2	equ	0xFDE
 28456                           postdec2	equ	0xFDD
 28457                           plusw2	equ	0xFDB
 28458                           fsr2h	equ	0xFDA
 28459                           fsr2l	equ	0xFD9
 28460                           status	equ	0xFD8
 28461                           
 28462 ;; *************** function ___lwmod *****************
 28463 ;; Defined at:
 28464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 28465 ;; Parameters:    Size  Location     Type
 28466 ;;  dividend        2   18[BANK0 ] unsigned int 
 28467 ;;  divisor         2   20[BANK0 ] unsigned int 
 28468 ;; Auto vars:     Size  Location     Type
 28469 ;;  counter         1   22[BANK0 ] unsigned char 
 28470 ;; Return value:  Size  Location     Type
 28471 ;;                  2   18[BANK0 ] unsigned int 
 28472 ;; Registers used:
 28473 ;;		wreg, status,2, status,0
 28474 ;; Tracked objects:
 28475 ;;		On entry : F/0
 28476 ;;		On exit  : F/0
 28477 ;;		Unchanged: 0/0
 28478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28482 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28483 ;;Total ram usage:        5 bytes
 28484 ;; Hardware stack levels used:    1
 28485 ;; Hardware stack levels required when called:    7
 28486 ;; This function calls:
 28487 ;;		Nothing
 28488 ;; This function is called by:
 28489 ;;		_Random
 28490 ;; This function uses a non-reentrant model
 28491 ;;
 28492                           
 28493                           	psect	text150
 28494  006DCA                     __ptext150:
 28495                           	opt stack 0
 28496  006DCA                     ___lwmod:
 28497                           	opt stack 18
 28498                           
 28499                           ; BSR set to: 0
 28500                           
 28501                           ; BSR set to: 0
 28502                           ;incstack = 0
 28503  006DCA  5174               	movf	___lwmod@divisor& (0+255),w,b
 28504  006DCC  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28505  006DCE  E017               	bz	l3171
 28506                           
 28507                           ; BSR set to: 0
 28508  006DD0  0E01               	movlw	1
 28509  006DD2  6F76               	movwf	___lwmod@counter& (0+255),b
 28510  006DD4  D004               	goto	l12452
 28511  006DD6                     l12450:
 28512                           
 28513                           ; BSR set to: 0
 28514  006DD6  90D8               	bcf	status,0,c
 28515  006DD8  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 28516  006DDA  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28517  006DDC  2B76               	incf	___lwmod@counter& (0+255),f,b
 28518  006DDE                     l12452:
 28519                           
 28520                           ; BSR set to: 0
 28521  006DDE  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28522  006DE0  D7FA               	goto	l12450
 28523  006DE2                     l12454:
 28524                           
 28525                           ; BSR set to: 0
 28526  006DE2  5174               	movf	___lwmod@divisor& (0+255),w,b
 28527  006DE4  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 28528  006DE6  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28529  006DE8  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28530  006DEA  E304               	bnc	l12458
 28531                           
 28532                           ; BSR set to: 0
 28533  006DEC  5174               	movf	___lwmod@divisor& (0+255),w,b
 28534  006DEE  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 28535  006DF0  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28536  006DF2  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28537  006DF4                     l12458:
 28538                           
 28539                           ; BSR set to: 0
 28540  006DF4  90D8               	bcf	status,0,c
 28541  006DF6  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28542  006DF8  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 28543                           
 28544                           ; BSR set to: 0
 28545  006DFA  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 28546  006DFC  D7F2               	goto	l12454
 28547  006DFE                     l3171:
 28548                           
 28549                           ; BSR set to: 0
 28550  006DFE  C072  F072         	movff	___lwmod@dividend,?___lwmod
 28551  006E02  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 28552                           
 28553                           ; BSR set to: 0
 28554  006E06  0012               	return		;funcret
 28555  006E08                     __end_of___lwmod:
 28556                           	opt stack 0
 28557                           tosu	equ	0xFFF
 28558                           tosh	equ	0xFFE
 28559                           tosl	equ	0xFFD
 28560                           pclath	equ	0xFFA
 28561                           tblptru	equ	0xFF8
 28562                           tblptrh	equ	0xFF7
 28563                           tblptrl	equ	0xFF6
 28564                           tablat	equ	0xFF5
 28565                           prodh	equ	0xFF4
 28566                           prodl	equ	0xFF3
 28567                           intcon	equ	0xFF2
 28568                           intcon2	equ	0xFF1
 28569                           intcon3	equ	0xFF0
 28570                           indf0	equ	0xFEF
 28571                           postinc0	equ	0xFEE
 28572                           fsr0h	equ	0xFEA
 28573                           fsr0l	equ	0xFE9
 28574                           wreg	equ	0xFE8
 28575                           postinc1	equ	0xFE6
 28576                           postdec1	equ	0xFE5
 28577                           plusw1	equ	0xFE3
 28578                           fsr1h	equ	0xFE2
 28579                           fsr1l	equ	0xFE1
 28580                           indf2	equ	0xFDF
 28581                           postinc2	equ	0xFDE
 28582                           postdec2	equ	0xFDD
 28583                           plusw2	equ	0xFDB
 28584                           fsr2h	equ	0xFDA
 28585                           fsr2l	equ	0xFD9
 28586                           status	equ	0xFD8
 28587                           
 28588 ;; *************** function _ComputeMic *****************
 28589 ;; Defined at:
 28590 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28591 ;; Parameters:    Size  Location     Type
 28592 ;;  key             2  106[BANK0 ] PTR unsigned char 
 28593 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28594 ;;  buffer          2  108[BANK0 ] PTR unsigned char 
 28595 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28596 ;;  bufferLength    1  110[BANK0 ] unsigned char 
 28597 ;; Auto vars:     Size  Location     Type
 28598 ;;  mic             4  111[BANK0 ] unsigned long 
 28599 ;; Return value:  Size  Location     Type
 28600 ;;                  4  106[BANK0 ] unsigned long 
 28601 ;; Registers used:
 28602 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28603 ;; Tracked objects:
 28604 ;;		On entry : F/0
 28605 ;;		On exit  : F/0
 28606 ;;		Unchanged: 0/0
 28607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28608 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28609 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28611 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28612 ;;Total ram usage:        9 bytes
 28613 ;; Hardware stack levels used:    1
 28614 ;; Hardware stack levels required when called:   12
 28615 ;; This function calls:
 28616 ;;		_AESCmac
 28617 ;;		_memcpy
 28618 ;; This function is called by:
 28619 ;;		_LORAWAN_RxDone
 28620 ;;		_PrepareJoinRequestFrame
 28621 ;; This function uses a non-reentrant model
 28622 ;;
 28623                           
 28624                           	psect	text151
 28625  006932                     __ptext151:
 28626                           	opt stack 0
 28627  006932                     _ComputeMic:
 28628                           	opt stack 14
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;lorawan.c: 2196: uint32_t mic = 0;
 28632                           
 28633                           ; BSR set to: 0
 28634                           ;incstack = 0
 28635  006932  6BCF               	clrf	ComputeMic@mic& (0+255),b
 28636  006934  6BD0               	clrf	(ComputeMic@mic+1)& (0+255),b
 28637  006936  6BD1               	clrf	(ComputeMic@mic+2)& (0+255),b
 28638  006938  6BD2               	clrf	(ComputeMic@mic+3)& (0+255),b
 28639                           
 28640                           ; BSR set to: 0
 28641                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 28642  00693A  C0CA  F0BC         	movff	ComputeMic@key,AESCmac@key
 28643  00693E  C0CB  F0BD         	movff	ComputeMic@key+1,AESCmac@key+1
 28644  006942  0EA0               	movlw	low _aesBuffer
 28645  006944  6FBE               	movwf	AESCmac@output& (0+255),b
 28646  006946  0E01               	movlw	high _aesBuffer
 28647  006948  6FBF               	movwf	(AESCmac@output+1)& (0+255),b
 28648  00694A  C0CC  F0C0         	movff	ComputeMic@buffer,AESCmac@input
 28649  00694E  C0CD  F0C1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 28650  006952  C0CE  F0C2         	movff	ComputeMic@bufferLength,AESCmac@size
 28651  006956  EC0C  F00C         	call	_AESCmac	;wreg free
 28652                           
 28653                           ; BSR set to: 0
 28654                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 28655  00695A  0ECF               	movlw	low ComputeMic@mic
 28656  00695C  6F64               	movwf	memcpy@d1& (0+255),b
 28657  00695E  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28658  006960  0EA0               	movlw	low _aesBuffer
 28659  006962  6F66               	movwf	memcpy@s1& (0+255),b
 28660  006964  0E01               	movlw	high _aesBuffer
 28661  006966  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28662  006968  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28663  00696A  0E04               	movlw	4
 28664  00696C  6F68               	movwf	memcpy@n& (0+255),b
 28665  00696E  EC44  F034         	call	_memcpy	;wreg free
 28666                           
 28667                           ; BSR set to: 0
 28668                           ;lorawan.c: 2202: return mic;
 28669  006972  C0CF  F0CA         	movff	ComputeMic@mic,?_ComputeMic
 28670  006976  C0D0  F0CB         	movff	ComputeMic@mic+1,?_ComputeMic+1
 28671  00697A  C0D1  F0CC         	movff	ComputeMic@mic+2,?_ComputeMic+2
 28672  00697E  C0D2  F0CD         	movff	ComputeMic@mic+3,?_ComputeMic+3
 28673                           
 28674                           ; BSR set to: 0
 28675  006982  0012               	return		;funcret
 28676  006984                     __end_of_ComputeMic:
 28677                           	opt stack 0
 28678                           tosu	equ	0xFFF
 28679                           tosh	equ	0xFFE
 28680                           tosl	equ	0xFFD
 28681                           pclath	equ	0xFFA
 28682                           tblptru	equ	0xFF8
 28683                           tblptrh	equ	0xFF7
 28684                           tblptrl	equ	0xFF6
 28685                           tablat	equ	0xFF5
 28686                           prodh	equ	0xFF4
 28687                           prodl	equ	0xFF3
 28688                           intcon	equ	0xFF2
 28689                           intcon2	equ	0xFF1
 28690                           intcon3	equ	0xFF0
 28691                           indf0	equ	0xFEF
 28692                           postinc0	equ	0xFEE
 28693                           fsr0h	equ	0xFEA
 28694                           fsr0l	equ	0xFE9
 28695                           wreg	equ	0xFE8
 28696                           postinc1	equ	0xFE6
 28697                           postdec1	equ	0xFE5
 28698                           plusw1	equ	0xFE3
 28699                           fsr1h	equ	0xFE2
 28700                           fsr1l	equ	0xFE1
 28701                           indf2	equ	0xFDF
 28702                           postinc2	equ	0xFDE
 28703                           postdec2	equ	0xFDD
 28704                           plusw2	equ	0xFDB
 28705                           fsr2h	equ	0xFDA
 28706                           fsr2l	equ	0xFD9
 28707                           status	equ	0xFD8
 28708                           
 28709 ;; *************** function _AESCmac *****************
 28710 ;; Defined at:
 28711 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 28712 ;; Parameters:    Size  Location     Type
 28713 ;;  key             2   92[BANK0 ] PTR unsigned char 
 28714 ;;		 -> loRa.activationParameters(105), loRa(245), 
 28715 ;;  output          2   94[BANK0 ] PTR unsigned char 
 28716 ;;		 -> aesBuffer(16), 
 28717 ;;  input           2   96[BANK0 ] PTR unsigned char 
 28718 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 28719 ;;  size            1   98[BANK0 ] unsigned char 
 28720 ;; Auto vars:     Size  Location     Type
 28721 ;;  x              16   80[BANK1 ] unsigned char [16]
 28722 ;;  y              16   64[BANK1 ] unsigned char [16]
 28723 ;;  padded         16   48[BANK1 ] unsigned char [16]
 28724 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 28725 ;;  k1             16   16[BANK1 ] unsigned char [16]
 28726 ;;  k2             16    0[BANK1 ] unsigned char [16]
 28727 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 28728 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 28729 ;;  i               1  101[BANK1 ] unsigned char 
 28730 ;;  j               1  100[BANK1 ] unsigned char 
 28731 ;;  n               1   99[BANK1 ] unsigned char 
 28732 ;;  flag            1   98[BANK1 ] unsigned char 
 28733 ;; Return value:  Size  Location     Type
 28734 ;;                  1    wreg      void 
 28735 ;; Registers used:
 28736 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28737 ;; Tracked objects:
 28738 ;;		On entry : F/0
 28739 ;;		On exit  : F/0
 28740 ;;		Unchanged: 0/0
 28741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28742 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28743 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28744 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28745 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28746 ;;Total ram usage:      116 bytes
 28747 ;; Hardware stack levels used:    1
 28748 ;; Hardware stack levels required when called:   11
 28749 ;; This function calls:
 28750 ;;		_AESEncodeLoRa
 28751 ;;		_GenerateSubkey
 28752 ;;		_memcpy
 28753 ;;		_memset
 28754 ;; This function is called by:
 28755 ;;		_LORAWAN_RxDone
 28756 ;;		_AssemblePacket
 28757 ;;		_ComputeMic
 28758 ;; This function uses a non-reentrant model
 28759 ;;
 28760                           
 28761                           	psect	text152
 28762  001818                     __ptext152:
 28763                           	opt stack 0
 28764  001818                     _AESCmac:
 28765                           	opt stack 16
 28766                           
 28767                           ; BSR set to: 0
 28768                           
 28769                           ; BSR set to: 0
 28770                           ;incstack = 0
 28771  001818  0101               	movlb	1	; () banked
 28772  00181A  6B65               	clrf	AESCmac@i& (0+255),b
 28773  00181C  6B64               	clrf	AESCmac@j& (0+255),b
 28774                           
 28775                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 28776  00181E  6B62               	clrf	AESCmac@flag& (0+255),b
 28777                           
 28778                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 28779                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 28780                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 28781  001820  6B60               	clrf	AESCmac@ptr& (0+255),b
 28782  001822  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 28783                           
 28784                           ; BSR set to: 1
 28785                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 28786  001824  C0BC  F094         	movff	AESCmac@key,GenerateSubkey@key
 28787  001828  C0BD  F095         	movff	AESCmac@key+1,GenerateSubkey@key+1
 28788  00182C  0E10               	movlw	low AESCmac@k1
 28789  00182E  0100               	movlb	0	; () banked
 28790  001830  6F96               	movwf	GenerateSubkey@k1& (0+255),b
 28791  001832  0E01               	movlw	high AESCmac@k1
 28792  001834  6F97               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 28793  001836  0E00               	movlw	low AESCmac@k2
 28794  001838  6F98               	movwf	GenerateSubkey@k2& (0+255),b
 28795  00183A  0E01               	movlw	high AESCmac@k2
 28796  00183C  6F99               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 28797  00183E  EC41  F024         	call	_GenerateSubkey	;wreg free
 28798                           
 28799                           ; BSR set to: 0
 28800                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 28801  001842  51C2               	movf	AESCmac@size& (0+255),w,b
 28802  001844  6FC3               	movwf	??_AESCmac& (0+255),b
 28803  001846  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28804  001848  0E0F               	movlw	15
 28805  00184A  27C3               	addwf	??_AESCmac& (0+255),f,b
 28806  00184C  0E00               	movlw	0
 28807  00184E  23C4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 28808  001850  0E04               	movlw	4
 28809  001852  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28810  001854                     u14265:
 28811  001854  35C4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 28812  001856  33C4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 28813  001858  33C3               	rrcf	??_AESCmac& (0+255),f,b
 28814  00185A  2FC5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 28815  00185C  D7FB               	goto	u14265
 28816  00185E  51C3               	movf	??_AESCmac& (0+255),w,b
 28817  001860  0101               	movlb	1	; () banked
 28818  001862  6F63               	movwf	AESCmac@n& (0+255),b
 28819                           
 28820                           ; BSR set to: 1
 28821                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 28822  001864  5163               	movf	AESCmac@n& (0+255),w,b
 28823  001866  E104               	bnz	l13080
 28824                           
 28825                           ; BSR set to: 1
 28826                           ;lorawan_aes_cmac.c: 53: {
 28827                           ;lorawan_aes_cmac.c: 54: n = 1;
 28828  001868  0E01               	movlw	1
 28829  00186A  6F63               	movwf	AESCmac@n& (0+255),b
 28830                           
 28831                           ; BSR set to: 1
 28832                           ;lorawan_aes_cmac.c: 55: flag = 0;
 28833  00186C  6B62               	clrf	AESCmac@flag& (0+255),b
 28834                           
 28835                           ;lorawan_aes_cmac.c: 56: }
 28836  00186E  D00A               	goto	l1454
 28837  001870                     l13080:
 28838                           
 28839                           ; BSR set to: 1
 28840                           ;lorawan_aes_cmac.c: 57: else
 28841                           ;lorawan_aes_cmac.c: 58: {
 28842                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 28843  001870  C0C2  F0C3         	movff	AESCmac@size,??_AESCmac
 28844  001874  0E0F               	movlw	15
 28845  001876  0100               	movlb	0	; () banked
 28846  001878  17C3               	andwf	??_AESCmac& (0+255),f,b
 28847  00187A  0E01               	movlw	1
 28848  00187C  A4D8               	btfss	status,2,c
 28849  00187E  0E00               	movlw	0
 28850  001880  0101               	movlb	1	; () banked
 28851  001882  6F62               	movwf	AESCmac@flag& (0+255),b
 28852  001884                     l1454:
 28853                           
 28854                           ; BSR set to: 1
 28855                           ;lorawan_aes_cmac.c: 60: }
 28856                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 28857  001884  0562               	decf	AESCmac@flag& (0+255),w,b
 28858  001886  E141               	bnz	l13094
 28859                           
 28860                           ; BSR set to: 1
 28861                           ;lorawan_aes_cmac.c: 63: {
 28862                           ;lorawan_aes_cmac.c: 64: j = 0;
 28863  001888  6B64               	clrf	AESCmac@j& (0+255),b
 28864                           
 28865                           ; BSR set to: 1
 28866                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 28867  00188A  5163               	movf	AESCmac@n& (0+255),w,b
 28868  00188C  0D10               	mullw	16
 28869  00188E  50F3               	movf	prodl,w,c
 28870  001890  0FF0               	addlw	240
 28871  001892  6F65               	movwf	AESCmac@i& (0+255),b
 28872  001894  D01E               	goto	l13092
 28873  001896                     l13086:
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;lorawan_aes_cmac.c: 66: {
 28877                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 28878  001896  0E20               	movlw	low AESCmac@mLast
 28879  001898  0101               	movlb	1	; () banked
 28880  00189A  2564               	addwf	AESCmac@j& (0+255),w,b
 28881  00189C  6ED9               	movwf	fsr2l,c
 28882  00189E  6ADA               	clrf	fsr2h,c
 28883  0018A0  0E01               	movlw	high AESCmac@mLast
 28884  0018A2  22DA               	addwfc	fsr2h,f,c
 28885  0018A4  0E10               	movlw	low AESCmac@k1
 28886  0018A6  2564               	addwf	AESCmac@j& (0+255),w,b
 28887  0018A8  6EE9               	movwf	fsr0l,c
 28888  0018AA  6AEA               	clrf	fsr0h,c
 28889  0018AC  0E01               	movlw	high AESCmac@k1
 28890  0018AE  22EA               	addwfc	fsr0h,f,c
 28891  0018B0  50EF               	movf	indf0,w,c
 28892  0018B2  0100               	movlb	0	; () banked
 28893  0018B4  6FC3               	movwf	??_AESCmac& (0+255),b
 28894  0018B6  0101               	movlb	1	; () banked
 28895  0018B8  5165               	movf	AESCmac@i& (0+255),w,b
 28896  0018BA  0100               	movlb	0	; () banked
 28897  0018BC  25C0               	addwf	AESCmac@input& (0+255),w,b
 28898  0018BE  6EE9               	movwf	fsr0l,c
 28899  0018C0  0E00               	movlw	0
 28900  0018C2  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28901  0018C4  6EEA               	movwf	fsr0h,c
 28902  0018C6  50EF               	movf	indf0,w,c
 28903  0018C8  19C3               	xorwf	??_AESCmac& (0+255),w,b
 28904  0018CA  6EDF               	movwf	indf2,c
 28905                           
 28906                           ; BSR set to: 0
 28907                           ;lorawan_aes_cmac.c: 68: j++;
 28908  0018CC  0101               	movlb	1	; () banked
 28909  0018CE  2B64               	incf	AESCmac@j& (0+255),f,b
 28910                           
 28911                           ; BSR set to: 1
 28912  0018D0  2B65               	incf	AESCmac@i& (0+255),f,b
 28913  0018D2                     l13092:
 28914                           
 28915                           ; BSR set to: 1
 28916  0018D2  5163               	movf	AESCmac@n& (0+255),w,b
 28917  0018D4  0100               	movlb	0	; () banked
 28918  0018D6  6FC3               	movwf	??_AESCmac& (0+255),b
 28919  0018D8  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 28920  0018DA  3BC3               	swapf	??_AESCmac& (0+255),f,b
 28921  0018DC  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 28922  0018DE  0EF0               	movlw	240
 28923  0018E0  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 28924  0018E2  51C3               	movf	??_AESCmac& (0+255),w,b
 28925  0018E4  0B0F               	andlw	15
 28926  0018E6  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 28927  0018E8  0EF0               	movlw	240
 28928  0018EA  17C3               	andwf	??_AESCmac& (0+255),f,b
 28929  0018EC  0101               	movlb	1	; () banked
 28930  0018EE  5165               	movf	AESCmac@i& (0+255),w,b
 28931  0018F0  0100               	movlb	0	; () banked
 28932  0018F2  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 28933  0018F4  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 28934  0018F6  51C3               	movf	??_AESCmac& (0+255),w,b
 28935  0018F8  5DC5               	subwf	(??_AESCmac+2)& (0+255),w,b
 28936  0018FA  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 28937  0018FC  0A80               	xorlw	128
 28938  0018FE  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 28939  001900  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28940  001902  0A80               	xorlw	128
 28941  001904  59C7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 28942  001906  E263               	bc	l13124
 28943  001908  D7C6               	goto	l13086
 28944  00190A                     l13094:
 28945                           
 28946                           ; BSR set to: 1
 28947                           ;lorawan_aes_cmac.c: 71: else
 28948                           ;lorawan_aes_cmac.c: 72: {
 28949                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 28950  00190A  0100               	movlb	0	; () banked
 28951  00190C  51C2               	movf	AESCmac@size& (0+255),w,b
 28952  00190E  25C0               	addwf	AESCmac@input& (0+255),w,b
 28953  001910  6FC3               	movwf	??_AESCmac& (0+255),b
 28954  001912  0E00               	movlw	0
 28955  001914  21C1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 28956  001916  6FC4               	movwf	(??_AESCmac+1)& (0+255),b
 28957  001918  51C2               	movf	AESCmac@size& (0+255),w,b
 28958  00191A  0B0F               	andlw	15
 28959  00191C  5DC3               	subwf	??_AESCmac& (0+255),w,b
 28960  00191E  0101               	movlb	1	; () banked
 28961  001920  6F60               	movwf	AESCmac@ptr& (0+255),b
 28962  001922  0100               	movlb	0	; () banked
 28963  001924  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 28964  001926  A0D8               	btfss	status,0,c
 28965  001928  05C4               	decf	(??_AESCmac+1)& (0+255),w,b
 28966  00192A  0101               	movlb	1	; () banked
 28967  00192C  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 28968                           
 28969                           ; BSR set to: 1
 28970                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 28971  00192E  6B65               	clrf	AESCmac@i& (0+255),b
 28972  001930                     l13100:
 28973                           
 28974                           ; BSR set to: 1
 28975                           ;lorawan_aes_cmac.c: 76: {
 28976                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 28977  001930  0100               	movlb	0	; () banked
 28978  001932  51C2               	movf	AESCmac@size& (0+255),w,b
 28979  001934  0B0F               	andlw	15
 28980  001936  0101               	movlb	1	; () banked
 28981  001938  6165               	cpfslt	AESCmac@i& (0+255),b
 28982  00193A  D00F               	goto	l13104
 28983                           
 28984                           ; BSR set to: 1
 28985                           ;lorawan_aes_cmac.c: 78: {
 28986                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 28987  00193C  5165               	movf	AESCmac@i& (0+255),w,b
 28988  00193E  2560               	addwf	AESCmac@ptr& (0+255),w,b
 28989  001940  6ED9               	movwf	fsr2l,c
 28990  001942  0E00               	movlw	0
 28991  001944  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 28992  001946  6EDA               	movwf	fsr2h,c
 28993  001948  0E30               	movlw	low AESCmac@padded
 28994  00194A  2565               	addwf	AESCmac@i& (0+255),w,b
 28995  00194C  6EE9               	movwf	fsr0l,c
 28996  00194E  6AEA               	clrf	fsr0h,c
 28997  001950  0E01               	movlw	high AESCmac@padded
 28998  001952  22EA               	addwfc	fsr0h,f,c
 28999  001954  CFDF FFEF          	movff	indf2,indf0
 29000                           
 29001                           ;lorawan_aes_cmac.c: 80: }
 29002  001958  D016               	goto	l13110
 29003  00195A                     l13104:
 29004                           
 29005                           ; BSR set to: 1
 29006                           ;lorawan_aes_cmac.c: 81: else
 29007                           ;lorawan_aes_cmac.c: 82: {
 29008                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 29009  00195A  0100               	movlb	0	; () banked
 29010  00195C  51C2               	movf	AESCmac@size& (0+255),w,b
 29011  00195E  0B0F               	andlw	15
 29012  001960  0101               	movlb	1	; () banked
 29013  001962  1965               	xorwf	AESCmac@i& (0+255),w,b
 29014  001964  E109               	bnz	l13108
 29015                           
 29016                           ; BSR set to: 1
 29017                           ;lorawan_aes_cmac.c: 84: {
 29018                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 29019  001966  0E30               	movlw	low AESCmac@padded
 29020  001968  2565               	addwf	AESCmac@i& (0+255),w,b
 29021  00196A  6ED9               	movwf	fsr2l,c
 29022  00196C  6ADA               	clrf	fsr2h,c
 29023  00196E  0E01               	movlw	high AESCmac@padded
 29024  001970  22DA               	addwfc	fsr2h,f,c
 29025  001972  0E80               	movlw	128
 29026  001974  6EDF               	movwf	indf2,c
 29027                           
 29028                           ;lorawan_aes_cmac.c: 86: }
 29029  001976  D007               	goto	l13110
 29030  001978                     l13108:
 29031                           
 29032                           ; BSR set to: 1
 29033                           ;lorawan_aes_cmac.c: 87: else
 29034                           ;lorawan_aes_cmac.c: 88: {
 29035                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 29036  001978  0E30               	movlw	low AESCmac@padded
 29037  00197A  2565               	addwf	AESCmac@i& (0+255),w,b
 29038  00197C  6ED9               	movwf	fsr2l,c
 29039  00197E  6ADA               	clrf	fsr2h,c
 29040  001980  0E01               	movlw	high AESCmac@padded
 29041  001982  22DA               	addwfc	fsr2h,f,c
 29042  001984  6ADF               	clrf	indf2,c
 29043  001986                     l13110:
 29044                           
 29045                           ; BSR set to: 1
 29046  001986  2B65               	incf	AESCmac@i& (0+255),f,b
 29047                           
 29048                           ; BSR set to: 1
 29049  001988  0E0F               	movlw	15
 29050  00198A  6565               	cpfsgt	AESCmac@i& (0+255),b
 29051  00198C  D7D1               	goto	l13100
 29052                           
 29053                           ; BSR set to: 1
 29054                           ;lorawan_aes_cmac.c: 90: }
 29055                           ;lorawan_aes_cmac.c: 91: }
 29056                           ;lorawan_aes_cmac.c: 92: }
 29057                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 29058  00198E  6B65               	clrf	AESCmac@i& (0+255),b
 29059  001990                     l13118:
 29060                           
 29061                           ; BSR set to: 1
 29062                           ;lorawan_aes_cmac.c: 96: {
 29063                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 29064  001990  0E20               	movlw	low AESCmac@mLast
 29065  001992  2565               	addwf	AESCmac@i& (0+255),w,b
 29066  001994  6ED9               	movwf	fsr2l,c
 29067  001996  6ADA               	clrf	fsr2h,c
 29068  001998  0E01               	movlw	high AESCmac@mLast
 29069  00199A  22DA               	addwfc	fsr2h,f,c
 29070  00199C  0E00               	movlw	low AESCmac@k2
 29071  00199E  2565               	addwf	AESCmac@i& (0+255),w,b
 29072  0019A0  6EE9               	movwf	fsr0l,c
 29073  0019A2  6AEA               	clrf	fsr0h,c
 29074  0019A4  0E01               	movlw	high AESCmac@k2
 29075  0019A6  22EA               	addwfc	fsr0h,f,c
 29076  0019A8  50EF               	movf	indf0,w,c
 29077  0019AA  0100               	movlb	0	; () banked
 29078  0019AC  6FC3               	movwf	??_AESCmac& (0+255),b
 29079  0019AE  0E30               	movlw	low AESCmac@padded
 29080  0019B0  0101               	movlb	1	; () banked
 29081  0019B2  2565               	addwf	AESCmac@i& (0+255),w,b
 29082  0019B4  6EE9               	movwf	fsr0l,c
 29083  0019B6  6AEA               	clrf	fsr0h,c
 29084  0019B8  0E01               	movlw	high AESCmac@padded
 29085  0019BA  22EA               	addwfc	fsr0h,f,c
 29086  0019BC  50EF               	movf	indf0,w,c
 29087  0019BE  0100               	movlb	0	; () banked
 29088  0019C0  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29089  0019C2  6EDF               	movwf	indf2,c
 29090                           
 29091                           ; BSR set to: 0
 29092  0019C4  0101               	movlb	1	; () banked
 29093  0019C6  2B65               	incf	AESCmac@i& (0+255),f,b
 29094                           
 29095                           ; BSR set to: 1
 29096  0019C8  0E0F               	movlw	15
 29097  0019CA  6565               	cpfsgt	AESCmac@i& (0+255),b
 29098  0019CC  D7E1               	goto	l13118
 29099  0019CE                     l13124:
 29100                           
 29101                           ;lorawan_aes_cmac.c: 98: }
 29102                           ;lorawan_aes_cmac.c: 99: }
 29103                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 29104  0019CE  0E50               	movlw	low AESCmac@x
 29105  0019D0  0100               	movlb	0	; () banked
 29106  0019D2  6F64               	movwf	memset@p1& (0+255),b
 29107  0019D4  0E01               	movlw	high AESCmac@x
 29108  0019D6  6F65               	movwf	(memset@p1+1)& (0+255),b
 29109  0019D8  6B67               	clrf	(memset@c+1)& (0+255),b
 29110  0019DA  6B66               	clrf	memset@c& (0+255),b
 29111  0019DC  6B69               	clrf	(memset@n+1)& (0+255),b
 29112  0019DE  0E10               	movlw	16
 29113  0019E0  6F68               	movwf	memset@n& (0+255),b
 29114  0019E2  EC37  F039         	call	_memset	;wreg free
 29115                           
 29116                           ; BSR set to: 0
 29117                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 29118  0019E6  0101               	movlb	1	; () banked
 29119  0019E8  6B65               	clrf	AESCmac@i& (0+255),b
 29120  0019EA  D051               	goto	l13142
 29121  0019EC                     l1469:
 29122                           
 29123                           ; BSR set to: 0
 29124                           ;lorawan_aes_cmac.c: 104: {
 29125                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 29126  0019EC  0101               	movlb	1	; () banked
 29127  0019EE  6B64               	clrf	AESCmac@j& (0+255),b
 29128  0019F0                     l13132:
 29129                           
 29130                           ; BSR set to: 1
 29131                           ;lorawan_aes_cmac.c: 106: {
 29132                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 29133  0019F0  0E40               	movlw	low AESCmac@y
 29134  0019F2  2564               	addwf	AESCmac@j& (0+255),w,b
 29135  0019F4  6ED9               	movwf	fsr2l,c
 29136  0019F6  6ADA               	clrf	fsr2h,c
 29137  0019F8  0E01               	movlw	high AESCmac@y
 29138  0019FA  22DA               	addwfc	fsr2h,f,c
 29139  0019FC  5165               	movf	AESCmac@i& (0+255),w,b
 29140  0019FE  0100               	movlb	0	; () banked
 29141  001A00  6FC3               	movwf	??_AESCmac& (0+255),b
 29142  001A02  6BC4               	clrf	(??_AESCmac+1)& (0+255),b
 29143  001A04  3BC3               	swapf	??_AESCmac& (0+255),f,b
 29144  001A06  3BC4               	swapf	(??_AESCmac+1)& (0+255),f,b
 29145  001A08  0EF0               	movlw	240
 29146  001A0A  17C4               	andwf	(??_AESCmac+1)& (0+255),f,b
 29147  001A0C  51C3               	movf	??_AESCmac& (0+255),w,b
 29148  001A0E  0B0F               	andlw	15
 29149  001A10  13C4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 29150  001A12  0EF0               	movlw	240
 29151  001A14  17C3               	andwf	??_AESCmac& (0+255),f,b
 29152  001A16  C0C0  F0C5         	movff	AESCmac@input,??_AESCmac+2
 29153  001A1A  C0C1  F0C6         	movff	AESCmac@input+1,??_AESCmac+3
 29154  001A1E  51C3               	movf	??_AESCmac& (0+255),w,b
 29155  001A20  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29156  001A22  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29157  001A24  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29158  001A26  0101               	movlb	1	; () banked
 29159  001A28  5164               	movf	AESCmac@j& (0+255),w,b
 29160  001A2A  0100               	movlb	0	; () banked
 29161  001A2C  25C5               	addwf	(??_AESCmac+2)& (0+255),w,b
 29162  001A2E  6EE9               	movwf	fsr0l,c
 29163  001A30  0E00               	movlw	0
 29164  001A32  21C6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 29165  001A34  6EEA               	movwf	fsr0h,c
 29166  001A36  50EF               	movf	indf0,w,c
 29167  001A38  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29168  001A3A  0E50               	movlw	low AESCmac@x
 29169  001A3C  0101               	movlb	1	; () banked
 29170  001A3E  2564               	addwf	AESCmac@j& (0+255),w,b
 29171  001A40  6EE9               	movwf	fsr0l,c
 29172  001A42  6AEA               	clrf	fsr0h,c
 29173  001A44  0E01               	movlw	high AESCmac@x
 29174  001A46  22EA               	addwfc	fsr0h,f,c
 29175  001A48  50EF               	movf	indf0,w,c
 29176  001A4A  0100               	movlb	0	; () banked
 29177  001A4C  19C7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 29178  001A4E  6EDF               	movwf	indf2,c
 29179                           
 29180                           ; BSR set to: 0
 29181  001A50  0101               	movlb	1	; () banked
 29182  001A52  2B64               	incf	AESCmac@j& (0+255),f,b
 29183                           
 29184                           ; BSR set to: 1
 29185  001A54  0E0F               	movlw	15
 29186  001A56  6564               	cpfsgt	AESCmac@j& (0+255),b
 29187  001A58  D7CB               	goto	l13132
 29188                           
 29189                           ; BSR set to: 1
 29190                           ;lorawan_aes_cmac.c: 108: }
 29191                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 29192  001A5A  0E50               	movlw	low AESCmac@x
 29193  001A5C  0100               	movlb	0	; () banked
 29194  001A5E  6F64               	movwf	memcpy@d1& (0+255),b
 29195  001A60  0E01               	movlw	high AESCmac@x
 29196  001A62  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 29197  001A64  0E40               	movlw	low AESCmac@y
 29198  001A66  6F66               	movwf	memcpy@s1& (0+255),b
 29199  001A68  0E01               	movlw	high AESCmac@y
 29200  001A6A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29201  001A6C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29202  001A6E  0E10               	movlw	16
 29203  001A70  6F68               	movwf	memcpy@n& (0+255),b
 29204  001A72  EC44  F034         	call	_memcpy	;wreg free
 29205                           
 29206                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 29207  001A76  0E50               	movlw	low AESCmac@x
 29208  001A78  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29209  001A7A  0E01               	movlw	high AESCmac@x
 29210  001A7C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29211  001A7E  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29212  001A82  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29213  001A86  EC74  F039         	call	_AESEncodeLoRa	;wreg free
 29214                           
 29215                           ; BSR set to: 0
 29216  001A8A  0101               	movlb	1	; () banked
 29217  001A8C  2B65               	incf	AESCmac@i& (0+255),f,b
 29218  001A8E                     l13142:
 29219                           
 29220                           ; BSR set to: 1
 29221  001A8E  0100               	movlb	0	; () banked
 29222  001A90  69C3               	setf	??_AESCmac& (0+255),b
 29223  001A92  69C4               	setf	(??_AESCmac+1)& (0+255),b
 29224  001A94  0101               	movlb	1	; () banked
 29225  001A96  5163               	movf	AESCmac@n& (0+255),w,b
 29226  001A98  0100               	movlb	0	; () banked
 29227  001A9A  6FC5               	movwf	(??_AESCmac+2)& (0+255),b
 29228  001A9C  6BC6               	clrf	(??_AESCmac+3)& (0+255),b
 29229  001A9E  51C3               	movf	??_AESCmac& (0+255),w,b
 29230  001AA0  27C5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29231  001AA2  51C4               	movf	(??_AESCmac+1)& (0+255),w,b
 29232  001AA4  23C6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29233  001AA6  0101               	movlb	1	; () banked
 29234  001AA8  5165               	movf	AESCmac@i& (0+255),w,b
 29235  001AAA  0100               	movlb	0	; () banked
 29236  001AAC  6FC7               	movwf	(??_AESCmac+4)& (0+255),b
 29237  001AAE  6BC8               	clrf	(??_AESCmac+5)& (0+255),b
 29238  001AB0  51C5               	movf	(??_AESCmac+2)& (0+255),w,b
 29239  001AB2  5DC7               	subwf	(??_AESCmac+4)& (0+255),w,b
 29240  001AB4  51C8               	movf	(??_AESCmac+5)& (0+255),w,b
 29241  001AB6  0A80               	xorlw	128
 29242  001AB8  6FC9               	movwf	(??_AESCmac+6)& (0+255),b
 29243  001ABA  51C6               	movf	(??_AESCmac+3)& (0+255),w,b
 29244  001ABC  0A80               	xorlw	128
 29245  001ABE  59C9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 29246  001AC0  E395               	bnc	l1469
 29247                           
 29248                           ; BSR set to: 0
 29249                           ;lorawan_aes_cmac.c: 111: }
 29250                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 29251  001AC2  0101               	movlb	1	; () banked
 29252  001AC4  6B65               	clrf	AESCmac@i& (0+255),b
 29253  001AC6                     l13148:
 29254                           
 29255                           ; BSR set to: 1
 29256                           ;lorawan_aes_cmac.c: 114: {
 29257                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 29258  001AC6  0E40               	movlw	low AESCmac@y
 29259  001AC8  2565               	addwf	AESCmac@i& (0+255),w,b
 29260  001ACA  6ED9               	movwf	fsr2l,c
 29261  001ACC  6ADA               	clrf	fsr2h,c
 29262  001ACE  0E01               	movlw	high AESCmac@y
 29263  001AD0  22DA               	addwfc	fsr2h,f,c
 29264  001AD2  0E20               	movlw	low AESCmac@mLast
 29265  001AD4  2565               	addwf	AESCmac@i& (0+255),w,b
 29266  001AD6  6EE9               	movwf	fsr0l,c
 29267  001AD8  6AEA               	clrf	fsr0h,c
 29268  001ADA  0E01               	movlw	high AESCmac@mLast
 29269  001ADC  22EA               	addwfc	fsr0h,f,c
 29270  001ADE  50EF               	movf	indf0,w,c
 29271  001AE0  0100               	movlb	0	; () banked
 29272  001AE2  6FC3               	movwf	??_AESCmac& (0+255),b
 29273  001AE4  0E50               	movlw	low AESCmac@x
 29274  001AE6  0101               	movlb	1	; () banked
 29275  001AE8  2565               	addwf	AESCmac@i& (0+255),w,b
 29276  001AEA  6EE9               	movwf	fsr0l,c
 29277  001AEC  6AEA               	clrf	fsr0h,c
 29278  001AEE  0E01               	movlw	high AESCmac@x
 29279  001AF0  22EA               	addwfc	fsr0h,f,c
 29280  001AF2  50EF               	movf	indf0,w,c
 29281  001AF4  0100               	movlb	0	; () banked
 29282  001AF6  19C3               	xorwf	??_AESCmac& (0+255),w,b
 29283  001AF8  6EDF               	movwf	indf2,c
 29284                           
 29285                           ; BSR set to: 0
 29286  001AFA  0101               	movlb	1	; () banked
 29287  001AFC  2B65               	incf	AESCmac@i& (0+255),f,b
 29288                           
 29289                           ; BSR set to: 1
 29290  001AFE  0E0F               	movlw	15
 29291  001B00  6565               	cpfsgt	AESCmac@i& (0+255),b
 29292  001B02  D7E1               	goto	l13148
 29293                           
 29294                           ; BSR set to: 1
 29295                           ;lorawan_aes_cmac.c: 116: }
 29296                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 29297  001B04  0E40               	movlw	low AESCmac@y
 29298  001B06  0100               	movlb	0	; () banked
 29299  001B08  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29300  001B0A  0E01               	movlw	high AESCmac@y
 29301  001B0C  6F81               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 29302  001B0E  C0BC  F082         	movff	AESCmac@key,AESEncodeLoRa@key
 29303  001B12  C0BD  F083         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 29304  001B16  EC74  F039         	call	_AESEncodeLoRa	;wreg free
 29305                           
 29306                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 29307  001B1A  C0BE  F064         	movff	AESCmac@output,memcpy@d1
 29308  001B1E  C0BF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 29309  001B22  0E40               	movlw	low AESCmac@y
 29310  001B24  6F66               	movwf	memcpy@s1& (0+255),b
 29311  001B26  0E01               	movlw	high AESCmac@y
 29312  001B28  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29313  001B2A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29314  001B2C  0E10               	movlw	16
 29315  001B2E  6F68               	movwf	memcpy@n& (0+255),b
 29316  001B30  EF44  F034         	goto	_memcpy	;wreg free
 29317  001B34                     __end_of_AESCmac:
 29318                           	opt stack 0
 29319                           tosu	equ	0xFFF
 29320                           tosh	equ	0xFFE
 29321                           tosl	equ	0xFFD
 29322                           pclath	equ	0xFFA
 29323                           tblptru	equ	0xFF8
 29324                           tblptrh	equ	0xFF7
 29325                           tblptrl	equ	0xFF6
 29326                           tablat	equ	0xFF5
 29327                           prodh	equ	0xFF4
 29328                           prodl	equ	0xFF3
 29329                           intcon	equ	0xFF2
 29330                           intcon2	equ	0xFF1
 29331                           intcon3	equ	0xFF0
 29332                           indf0	equ	0xFEF
 29333                           postinc0	equ	0xFEE
 29334                           fsr0h	equ	0xFEA
 29335                           fsr0l	equ	0xFE9
 29336                           wreg	equ	0xFE8
 29337                           postinc1	equ	0xFE6
 29338                           postdec1	equ	0xFE5
 29339                           plusw1	equ	0xFE3
 29340                           fsr1h	equ	0xFE2
 29341                           fsr1l	equ	0xFE1
 29342                           indf2	equ	0xFDF
 29343                           postinc2	equ	0xFDE
 29344                           postdec2	equ	0xFDD
 29345                           plusw2	equ	0xFDB
 29346                           fsr2h	equ	0xFDA
 29347                           fsr2l	equ	0xFD9
 29348                           status	equ	0xFD8
 29349                           
 29350 ;; *************** function _GenerateSubkey *****************
 29351 ;; Defined at:
 29352 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29353 ;; Parameters:    Size  Location     Type
 29354 ;;  key             2   52[BANK0 ] PTR unsigned char 
 29355 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29356 ;;  k1              2   54[BANK0 ] PTR unsigned char 
 29357 ;;		 -> AESCmac@k1(16), 
 29358 ;;  k2              2   56[BANK0 ] PTR unsigned char 
 29359 ;;		 -> AESCmac@k2(16), 
 29360 ;; Auto vars:     Size  Location     Type
 29361 ;;  l              16   75[BANK0 ] unsigned char [16]
 29362 ;;  const_Rb       16   59[BANK0 ] unsigned char [16]
 29363 ;;  i               1   91[BANK0 ] unsigned char 
 29364 ;; Return value:  Size  Location     Type
 29365 ;;                  1    wreg      void 
 29366 ;; Registers used:
 29367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29368 ;; Tracked objects:
 29369 ;;		On entry : F/0
 29370 ;;		On exit  : F/0
 29371 ;;		Unchanged: 0/0
 29372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29373 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29374 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29376 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29377 ;;Total ram usage:       40 bytes
 29378 ;; Hardware stack levels used:    1
 29379 ;; Hardware stack levels required when called:   10
 29380 ;; This function calls:
 29381 ;;		_AESEncodeLoRa
 29382 ;;		_FillSubKey
 29383 ;;		_memset
 29384 ;; This function is called by:
 29385 ;;		_AESCmac
 29386 ;; This function uses a non-reentrant model
 29387 ;;
 29388                           
 29389                           	psect	text153
 29390  004882                     __ptext153:
 29391                           	opt stack 0
 29392  004882                     _GenerateSubkey:
 29393                           	opt stack 16
 29394                           
 29395                           ; BSR set to: 0
 29396                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 29397                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 29398                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 29399                           
 29400                           ; BSR set to: 0
 29401                           
 29402                           ; BSR set to: 0
 29403                           ;incstack = 0
 29404  004882  EE21  F0B4         	lfsr	2,GenerateSubkey@F7870
 29405  004886  EE00  F09B         	lfsr	0,GenerateSubkey@const_Rb
 29406  00488A  0E0F               	movlw	15
 29407  00488C                     u13671:
 29408  00488C  CFDB FFEB          	movff	plusw2,plusw0
 29409  004890  06E8               	decf	wreg,f,c
 29410  004892  E2FC               	bc	u13671
 29411                           
 29412                           ; BSR set to: 0
 29413                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 29414  004894  0EAB               	movlw	low GenerateSubkey@l
 29415  004896  6F64               	movwf	memset@p1& (0+255),b
 29416  004898  6B65               	clrf	(memset@p1+1)& (0+255),b
 29417  00489A  6B67               	clrf	(memset@c+1)& (0+255),b
 29418  00489C  6B66               	clrf	memset@c& (0+255),b
 29419  00489E  6B69               	clrf	(memset@n+1)& (0+255),b
 29420  0048A0  0E10               	movlw	16
 29421  0048A2  6F68               	movwf	memset@n& (0+255),b
 29422  0048A4  EC37  F039         	call	_memset	;wreg free
 29423                           
 29424                           ; BSR set to: 0
 29425                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 29426  0048A8  0EAB               	movlw	low GenerateSubkey@l
 29427  0048AA  6F80               	movwf	AESEncodeLoRa@block& (0+255),b
 29428  0048AC  6B81               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 29429  0048AE  C094  F082         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 29430  0048B2  C095  F083         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 29431  0048B6  EC74  F039         	call	_AESEncodeLoRa	;wreg free
 29432                           
 29433                           ; BSR set to: 0
 29434                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 29435  0048BA  BFAB               	btfsc	GenerateSubkey@l& (0+255),7,b
 29436  0048BC  D00C               	goto	l12712
 29437                           
 29438                           ; BSR set to: 0
 29439                           ;lorawan_aes_cmac.c: 138: {
 29440                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 29441  0048BE  0EAB               	movlw	low GenerateSubkey@l
 29442  0048C0  6F64               	movwf	FillSubKey@source& (0+255),b
 29443  0048C2  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29444  0048C4  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29445  0048C8  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29446  0048CC  0E10               	movlw	16
 29447  0048CE  6F68               	movwf	FillSubKey@size& (0+255),b
 29448  0048D0  ECD2  F035         	call	_FillSubKey	;wreg free
 29449                           
 29450                           ;lorawan_aes_cmac.c: 140: }
 29451  0048D4  D01E               	goto	l12726
 29452  0048D6                     l12712:
 29453                           
 29454                           ; BSR set to: 0
 29455                           ;lorawan_aes_cmac.c: 141: else
 29456                           ;lorawan_aes_cmac.c: 142: {
 29457                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 29458  0048D6  0EAB               	movlw	low GenerateSubkey@l
 29459  0048D8  6F64               	movwf	FillSubKey@source& (0+255),b
 29460  0048DA  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 29461  0048DC  C096  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 29462  0048E0  C097  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 29463  0048E4  0E10               	movlw	16
 29464  0048E6  6F68               	movwf	FillSubKey@size& (0+255),b
 29465  0048E8  ECD2  F035         	call	_FillSubKey	;wreg free
 29466                           
 29467                           ; BSR set to: 0
 29468                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 29469  0048EC  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29470  0048EE                     l12720:
 29471                           
 29472                           ; BSR set to: 0
 29473                           ;lorawan_aes_cmac.c: 146: {
 29474                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 29475  0048EE  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29476  0048F0  0F9B               	addlw	low GenerateSubkey@const_Rb
 29477  0048F2  6ED9               	movwf	fsr2l,c
 29478  0048F4  6ADA               	clrf	fsr2h,c
 29479  0048F6  50DF               	movf	indf2,w,c
 29480  0048F8  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29481  0048FA  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29482  0048FC  2596               	addwf	GenerateSubkey@k1& (0+255),w,b
 29483  0048FE  6ED9               	movwf	fsr2l,c
 29484  004900  0E00               	movlw	0
 29485  004902  2197               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 29486  004904  6EDA               	movwf	fsr2h,c
 29487  004906  519A               	movf	??_GenerateSubkey& (0+255),w,b
 29488  004908  1ADF               	xorwf	indf2,f,c
 29489                           
 29490                           ; BSR set to: 0
 29491  00490A  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29492                           
 29493                           ; BSR set to: 0
 29494  00490C  0E0F               	movlw	15
 29495  00490E  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29496  004910  D7EE               	goto	l12720
 29497  004912                     l12726:
 29498                           
 29499                           ; BSR set to: 0
 29500                           ;lorawan_aes_cmac.c: 148: }
 29501                           ;lorawan_aes_cmac.c: 149: }
 29502                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 29503  004912  C096  FFD9         	movff	GenerateSubkey@k1,fsr2l
 29504  004916  C097  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 29505  00491A  BEDF               	btfsc	indf2,7,c
 29506  00491C  D00C               	goto	l12730
 29507                           
 29508                           ; BSR set to: 0
 29509                           ;lorawan_aes_cmac.c: 153: {
 29510                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 29511  00491E  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29512  004922  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29513  004926  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29514  00492A  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29515  00492E  0E10               	movlw	16
 29516  004930  6F68               	movwf	FillSubKey@size& (0+255),b
 29517  004932  EFD2  F035         	goto	_FillSubKey	;wreg free
 29518  004936                     l12730:
 29519                           
 29520                           ; BSR set to: 0
 29521                           ;lorawan_aes_cmac.c: 156: else
 29522                           ;lorawan_aes_cmac.c: 157: {
 29523                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 29524  004936  C096  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 29525  00493A  C097  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 29526  00493E  C098  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 29527  004942  C099  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 29528  004946  0E10               	movlw	16
 29529  004948  6F68               	movwf	FillSubKey@size& (0+255),b
 29530  00494A  ECD2  F035         	call	_FillSubKey	;wreg free
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 29534  00494E  6BBB               	clrf	GenerateSubkey@i& (0+255),b
 29535  004950                     l12738:
 29536                           
 29537                           ; BSR set to: 0
 29538                           ;lorawan_aes_cmac.c: 161: {
 29539                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 29540  004950  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29541  004952  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29542  004954  6ED9               	movwf	fsr2l,c
 29543  004956  0E00               	movlw	0
 29544  004958  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29545  00495A  6EDA               	movwf	fsr2h,c
 29546  00495C  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29547  00495E  0F9B               	addlw	low GenerateSubkey@const_Rb
 29548  004960  6EE9               	movwf	fsr0l,c
 29549  004962  6AEA               	clrf	fsr0h,c
 29550  004964  50EF               	movf	indf0,w,c
 29551  004966  6F9A               	movwf	??_GenerateSubkey& (0+255),b
 29552  004968  51BB               	movf	GenerateSubkey@i& (0+255),w,b
 29553  00496A  2598               	addwf	GenerateSubkey@k2& (0+255),w,b
 29554  00496C  6EE9               	movwf	fsr0l,c
 29555  00496E  0E00               	movlw	0
 29556  004970  2199               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 29557  004972  6EEA               	movwf	fsr0h,c
 29558  004974  50EF               	movf	indf0,w,c
 29559  004976  199A               	xorwf	??_GenerateSubkey& (0+255),w,b
 29560  004978  6EDF               	movwf	indf2,c
 29561                           
 29562                           ; BSR set to: 0
 29563  00497A  2BBB               	incf	GenerateSubkey@i& (0+255),f,b
 29564                           
 29565                           ; BSR set to: 0
 29566  00497C  0E0F               	movlw	15
 29567  00497E  65BB               	cpfsgt	GenerateSubkey@i& (0+255),b
 29568  004980  D7E7               	goto	l12738
 29569  004982  0C0F               	retlw	15
 29570  004984                     __end_of_GenerateSubkey:
 29571                           	opt stack 0
 29572                           tosu	equ	0xFFF
 29573                           tosh	equ	0xFFE
 29574                           tosl	equ	0xFFD
 29575                           pclath	equ	0xFFA
 29576                           tblptru	equ	0xFF8
 29577                           tblptrh	equ	0xFF7
 29578                           tblptrl	equ	0xFF6
 29579                           tablat	equ	0xFF5
 29580                           prodh	equ	0xFF4
 29581                           prodl	equ	0xFF3
 29582                           intcon	equ	0xFF2
 29583                           intcon2	equ	0xFF1
 29584                           intcon3	equ	0xFF0
 29585                           indf0	equ	0xFEF
 29586                           postinc0	equ	0xFEE
 29587                           plusw0	equ	0xFEB
 29588                           fsr0h	equ	0xFEA
 29589                           fsr0l	equ	0xFE9
 29590                           wreg	equ	0xFE8
 29591                           postinc1	equ	0xFE6
 29592                           postdec1	equ	0xFE5
 29593                           plusw1	equ	0xFE3
 29594                           fsr1h	equ	0xFE2
 29595                           fsr1l	equ	0xFE1
 29596                           indf2	equ	0xFDF
 29597                           postinc2	equ	0xFDE
 29598                           postdec2	equ	0xFDD
 29599                           plusw2	equ	0xFDB
 29600                           fsr2h	equ	0xFDA
 29601                           fsr2l	equ	0xFD9
 29602                           status	equ	0xFD8
 29603                           
 29604 ;; *************** function _FillSubKey *****************
 29605 ;; Defined at:
 29606 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29607 ;; Parameters:    Size  Location     Type
 29608 ;;  source          2    4[BANK0 ] PTR unsigned char 
 29609 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 29610 ;;  key             2    6[BANK0 ] PTR unsigned char 
 29611 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 29612 ;;  size            1    8[BANK0 ] unsigned char 
 29613 ;; Auto vars:     Size  Location     Type
 29614 ;;  i               1   11[BANK0 ] unsigned char 
 29615 ;;  carry           1   10[BANK0 ] unsigned char 
 29616 ;; Return value:  Size  Location     Type
 29617 ;;                  1    wreg      void 
 29618 ;; Registers used:
 29619 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 29620 ;; Tracked objects:
 29621 ;;		On entry : F/0
 29622 ;;		On exit  : F/0
 29623 ;;		Unchanged: 0/0
 29624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29625 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29626 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29627 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29628 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29629 ;;Total ram usage:        8 bytes
 29630 ;; Hardware stack levels used:    1
 29631 ;; Hardware stack levels required when called:    7
 29632 ;; This function calls:
 29633 ;;		Nothing
 29634 ;; This function is called by:
 29635 ;;		_GenerateSubkey
 29636 ;; This function uses a non-reentrant model
 29637 ;;
 29638                           
 29639                           	psect	text154
 29640  006BA4                     __ptext154:
 29641                           	opt stack 0
 29642  006BA4                     _FillSubKey:
 29643                           	opt stack 18
 29644                           
 29645                           ; BSR set to: 0
 29646                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 29647                           
 29648                           ; BSR set to: 0
 29649                           ;incstack = 0
 29650  006BA4  6B6B               	clrf	FillSubKey@i& (0+255),b
 29651                           
 29652                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 29653  006BA6  6B6A               	clrf	FillSubKey@carry& (0+255),b
 29654                           
 29655                           ;lorawan_aes_cmac.c: 172: i=size;
 29656  006BA8  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 29657                           
 29658                           ;lorawan_aes_cmac.c: 174: while(i--)
 29659  006BAC  D01C               	goto	l12436
 29660  006BAE                     l12432:
 29661                           
 29662                           ; BSR set to: 0
 29663                           ;lorawan_aes_cmac.c: 175: {
 29664                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 29665  006BAE  516B               	movf	FillSubKey@i& (0+255),w,b
 29666  006BB0  2566               	addwf	FillSubKey@key& (0+255),w,b
 29667  006BB2  6ED9               	movwf	fsr2l,c
 29668  006BB4  0E00               	movlw	0
 29669  006BB6  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 29670  006BB8  6EDA               	movwf	fsr2h,c
 29671  006BBA  516B               	movf	FillSubKey@i& (0+255),w,b
 29672  006BBC  2564               	addwf	FillSubKey@source& (0+255),w,b
 29673  006BBE  6EE9               	movwf	fsr0l,c
 29674  006BC0  0E00               	movlw	0
 29675  006BC2  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29676  006BC4  6EEA               	movwf	fsr0h,c
 29677  006BC6  50EF               	movf	indf0,w,c
 29678  006BC8  6F69               	movwf	??_FillSubKey& (0+255),b
 29679  006BCA  90D8               	bcf	status,0,c
 29680  006BCC  3569               	rlcf	??_FillSubKey& (0+255),w,b
 29681  006BCE  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 29682  006BD0  6EDF               	movwf	indf2,c
 29683                           
 29684                           ; BSR set to: 0
 29685                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 29686  006BD2  516B               	movf	FillSubKey@i& (0+255),w,b
 29687  006BD4  2564               	addwf	FillSubKey@source& (0+255),w,b
 29688  006BD6  6ED9               	movwf	fsr2l,c
 29689  006BD8  0E00               	movlw	0
 29690  006BDA  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 29691  006BDC  6EDA               	movwf	fsr2h,c
 29692  006BDE  0E01               	movlw	1
 29693  006BE0  AEDF               	btfss	indf2,7,c
 29694  006BE2  0E00               	movlw	0
 29695  006BE4  6F6A               	movwf	FillSubKey@carry& (0+255),b
 29696  006BE6                     l12436:
 29697                           
 29698                           ; BSR set to: 0
 29699  006BE6  076B               	decf	FillSubKey@i& (0+255),f,b
 29700  006BE8  296B               	incf	FillSubKey@i& (0+255),w,b
 29701  006BEA  E1E1               	bnz	l12432
 29702                           
 29703                           ; BSR set to: 0
 29704  006BEC  0012               	return		;funcret
 29705  006BEE                     __end_of_FillSubKey:
 29706                           	opt stack 0
 29707                           tosu	equ	0xFFF
 29708                           tosh	equ	0xFFE
 29709                           tosl	equ	0xFFD
 29710                           pclath	equ	0xFFA
 29711                           tblptru	equ	0xFF8
 29712                           tblptrh	equ	0xFF7
 29713                           tblptrl	equ	0xFF6
 29714                           tablat	equ	0xFF5
 29715                           prodh	equ	0xFF4
 29716                           prodl	equ	0xFF3
 29717                           intcon	equ	0xFF2
 29718                           intcon2	equ	0xFF1
 29719                           intcon3	equ	0xFF0
 29720                           indf0	equ	0xFEF
 29721                           postinc0	equ	0xFEE
 29722                           plusw0	equ	0xFEB
 29723                           fsr0h	equ	0xFEA
 29724                           fsr0l	equ	0xFE9
 29725                           wreg	equ	0xFE8
 29726                           postinc1	equ	0xFE6
 29727                           postdec1	equ	0xFE5
 29728                           plusw1	equ	0xFE3
 29729                           fsr1h	equ	0xFE2
 29730                           fsr1l	equ	0xFE1
 29731                           indf2	equ	0xFDF
 29732                           postinc2	equ	0xFDE
 29733                           postdec2	equ	0xFDD
 29734                           plusw2	equ	0xFDB
 29735                           fsr2h	equ	0xFDA
 29736                           fsr2l	equ	0xFD9
 29737                           status	equ	0xFD8
 29738                           
 29739 ;; *************** function _AESEncodeLoRa *****************
 29740 ;; Defined at:
 29741 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 29742 ;; Parameters:    Size  Location     Type
 29743 ;;  block           2   32[BANK0 ] PTR unsigned char 
 29744 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29745 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29746 ;;  key             2   34[BANK0 ] PTR unsigned char 
 29747 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29748 ;; Auto vars:     Size  Location     Type
 29749 ;;  useKey         16   36[BANK0 ] unsigned char [16]
 29750 ;; Return value:  Size  Location     Type
 29751 ;;                  1    wreg      void 
 29752 ;; Registers used:
 29753 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29754 ;; Tracked objects:
 29755 ;;		On entry : F/0
 29756 ;;		On exit  : F/0
 29757 ;;		Unchanged: 0/0
 29758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29760 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29762 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29763 ;;Total ram usage:       20 bytes
 29764 ;; Hardware stack levels used:    1
 29765 ;; Hardware stack levels required when called:    9
 29766 ;; This function calls:
 29767 ;;		_AESEncode
 29768 ;;		_memcpy
 29769 ;; This function is called by:
 29770 ;;		_AESCmac
 29771 ;;		_GenerateSubkey
 29772 ;;		_LORAWAN_RxDone
 29773 ;;		_ComputeSessionKeys
 29774 ;;		_EncryptFRMPayload
 29775 ;; This function uses a non-reentrant model
 29776 ;;
 29777                           
 29778                           	psect	text155
 29779  0072E8                     __ptext155:
 29780                           	opt stack 0
 29781  0072E8                     _AESEncodeLoRa:
 29782                           	opt stack 17
 29783                           
 29784                           ; BSR set to: 0
 29785                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 29786                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;incstack = 0
 29790  0072E8  0E84               	movlw	low AESEncodeLoRa@useKey
 29791  0072EA  6F64               	movwf	memcpy@d1& (0+255),b
 29792  0072EC  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29793  0072EE  C082  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 29794  0072F2  C083  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 29795  0072F6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29796  0072F8  0E10               	movlw	16
 29797  0072FA  6F68               	movwf	memcpy@n& (0+255),b
 29798  0072FC  EC44  F034         	call	_memcpy	;wreg free
 29799                           
 29800                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 29801  007300  C080  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 29802  007304  C081  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 29803  007308  0E84               	movlw	low AESEncodeLoRa@useKey
 29804  00730A  6F6C               	movwf	AESEncode@key& (0+255),b
 29805  00730C  EF04  F012         	goto	_AESEncode	;wreg free
 29806  007310                     __end_of_AESEncodeLoRa:
 29807                           	opt stack 0
 29808                           tosu	equ	0xFFF
 29809                           tosh	equ	0xFFE
 29810                           tosl	equ	0xFFD
 29811                           pclath	equ	0xFFA
 29812                           tblptru	equ	0xFF8
 29813                           tblptrh	equ	0xFF7
 29814                           tblptrl	equ	0xFF6
 29815                           tablat	equ	0xFF5
 29816                           prodh	equ	0xFF4
 29817                           prodl	equ	0xFF3
 29818                           intcon	equ	0xFF2
 29819                           intcon2	equ	0xFF1
 29820                           intcon3	equ	0xFF0
 29821                           indf0	equ	0xFEF
 29822                           postinc0	equ	0xFEE
 29823                           plusw0	equ	0xFEB
 29824                           fsr0h	equ	0xFEA
 29825                           fsr0l	equ	0xFE9
 29826                           wreg	equ	0xFE8
 29827                           postinc1	equ	0xFE6
 29828                           postdec1	equ	0xFE5
 29829                           plusw1	equ	0xFE3
 29830                           fsr1h	equ	0xFE2
 29831                           fsr1l	equ	0xFE1
 29832                           indf2	equ	0xFDF
 29833                           postinc2	equ	0xFDE
 29834                           postdec2	equ	0xFDD
 29835                           plusw2	equ	0xFDB
 29836                           fsr2h	equ	0xFDA
 29837                           fsr2l	equ	0xFD9
 29838                           status	equ	0xFD8
 29839                           
 29840 ;; *************** function _AESEncode *****************
 29841 ;; Defined at:
 29842 ;;		line 217 in file "mcc_generated_files/LoRaWAN/AES.c"
 29843 ;; Parameters:    Size  Location     Type
 29844 ;;  block           2   10[BANK0 ] PTR unsigned char 
 29845 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 29846 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 29847 ;;  key             1   12[BANK0 ] PTR unsigned char 
 29848 ;;		 -> AESEncodeLoRa@useKey(16), 
 29849 ;; Auto vars:     Size  Location     Type
 29850 ;;  aux3            1   30[BANK0 ] unsigned char 
 29851 ;;  aux1            1   29[BANK0 ] unsigned char 
 29852 ;;  aux2            1   28[BANK0 ] unsigned char 
 29853 ;;  aux             1   27[BANK0 ] unsigned char 
 29854 ;;  i               1   31[BANK0 ] unsigned char 
 29855 ;;  temp            1    0        unsigned char 
 29856 ;; Return value:  Size  Location     Type
 29857 ;;                  1    wreg      void 
 29858 ;; Registers used:
 29859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29860 ;; Tracked objects:
 29861 ;;		On entry : F/0
 29862 ;;		On exit  : F/0
 29863 ;;		Unchanged: 0/0
 29864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29865 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29866 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29867 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29868 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29869 ;;Total ram usage:       22 bytes
 29870 ;; Hardware stack levels used:    1
 29871 ;; Hardware stack levels required when called:    8
 29872 ;; This function calls:
 29873 ;;		_EncKeySchedule
 29874 ;;		_EncodeShiftRow
 29875 ;; This function is called by:
 29876 ;;		_AESEncodeLoRa
 29877 ;; This function uses a non-reentrant model
 29878 ;;
 29879                           
 29880                           	psect	text156
 29881  002408                     __ptext156:
 29882                           	opt stack 0
 29883  002408                     _AESEncode:
 29884                           	opt stack 17
 29885                           
 29886                           ; BSR set to: 0
 29887                           ;AES.c: 219: unsigned char i;
 29888                           ;AES.c: 220: unsigned char temp;
 29889                           ;AES.c: 223: _roundCounter = 10;
 29890                           
 29891                           ; BSR set to: 0
 29892                           ;incstack = 0
 29893  002408  0E0A               	movlw	10
 29894  00240A  6E44               	movwf	__roundCounter,c
 29895                           
 29896                           ;AES.c: 225: _rcon = 0x01;
 29897  00240C  0E01               	movlw	1
 29898  00240E  6FEE               	movwf	__rcon& (0+255),b
 29899                           
 29900                           ; BSR set to: 0
 29901                           ;AES.c: 228: for(i=0;i<16;i++)
 29902  002410  6B7F               	clrf	AESEncode@i& (0+255),b
 29903  002412                     l12040:
 29904                           
 29905                           ; BSR set to: 0
 29906                           ;AES.c: 229: {
 29907                           ;AES.c: 230: block[i] ^= key[i];
 29908  002412  516C               	movf	AESEncode@key& (0+255),w,b
 29909  002414  257F               	addwf	AESEncode@i& (0+255),w,b
 29910  002416  6ED9               	movwf	fsr2l,c
 29911  002418  6ADA               	clrf	fsr2h,c
 29912  00241A  50DF               	movf	indf2,w,c
 29913  00241C  6F6D               	movwf	??_AESEncode& (0+255),b
 29914  00241E  517F               	movf	AESEncode@i& (0+255),w,b
 29915  002420  256A               	addwf	AESEncode@block& (0+255),w,b
 29916  002422  6ED9               	movwf	fsr2l,c
 29917  002424  0E00               	movlw	0
 29918  002426  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29919  002428  6EDA               	movwf	fsr2h,c
 29920  00242A  516D               	movf	??_AESEncode& (0+255),w,b
 29921  00242C  1ADF               	xorwf	indf2,f,c
 29922                           
 29923                           ; BSR set to: 0
 29924  00242E  2B7F               	incf	AESEncode@i& (0+255),f,b
 29925                           
 29926                           ; BSR set to: 0
 29927  002430  0E0F               	movlw	15
 29928  002432  657F               	cpfsgt	AESEncode@i& (0+255),b
 29929  002434  D7EE               	goto	l12040
 29930  002436                     l2522:
 29931                           
 29932                           ; BSR set to: 0
 29933                           ;AES.c: 234: {
 29934                           ;AES.c: 237: for(i=0;i<16;i++)
 29935  002436  6B7F               	clrf	AESEncode@i& (0+255),b
 29936  002438                     l12050:
 29937                           
 29938                           ; BSR set to: 0
 29939                           ;AES.c: 238: {
 29940                           ;AES.c: 239: block[i]=STable[block[i]];
 29941  002438  517F               	movf	AESEncode@i& (0+255),w,b
 29942  00243A  256A               	addwf	AESEncode@block& (0+255),w,b
 29943  00243C  6ED9               	movwf	fsr2l,c
 29944  00243E  0E00               	movlw	0
 29945  002440  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29946  002442  6EDA               	movwf	fsr2h,c
 29947  002444  50DF               	movf	indf2,w,c
 29948  002446  6F6D               	movwf	??_AESEncode& (0+255),b
 29949  002448  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 29950  00244A  0E6D               	movlw	low _STable
 29951  00244C  256D               	addwf	??_AESEncode& (0+255),w,b
 29952  00244E  6EF6               	movwf	tblptrl,c
 29953  002450  0EFE               	movlw	high _STable
 29954  002452  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 29955  002454  6EF7               	movwf	tblptrh,c
 29956  002456                     	if	1	;There are 3 active tblptr bytes
 29957  002456  6AF8               	clrf	tblptru,c
 29958  002458  0E00               	movlw	low (__mediumconst shr (0+16))
 29959  00245A  22F8               	addwfc	tblptru,f,c
 29960  00245C                     	endif
 29961  00245C  517F               	movf	AESEncode@i& (0+255),w,b
 29962  00245E  256A               	addwf	AESEncode@block& (0+255),w,b
 29963  002460  6ED9               	movwf	fsr2l,c
 29964  002462  0E00               	movlw	0
 29965  002464  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 29966  002466  6EDA               	movwf	fsr2h,c
 29967  002468  0008               	tblrd		*
 29968  00246A  CFF5 FFDF          	movff	tablat,indf2
 29969                           
 29970                           ; BSR set to: 0
 29971  00246E  2B7F               	incf	AESEncode@i& (0+255),f,b
 29972                           
 29973                           ; BSR set to: 0
 29974  002470  0E0F               	movlw	15
 29975  002472  657F               	cpfsgt	AESEncode@i& (0+255),b
 29976  002474  D7E1               	goto	l12050
 29977                           
 29978                           ; BSR set to: 0
 29979                           ;AES.c: 240: }
 29980                           ;AES.c: 243: EncodeShiftRow(block);
 29981  002476  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 29982  00247A  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 29983  00247E  EC9E  F01E         	call	_EncodeShiftRow	;wreg free
 29984                           
 29985                           ; BSR set to: 0
 29986                           ;AES.c: 246: if(_roundCounter != 1)
 29987  002482  0444               	decf	__roundCounter,w,c
 29988  002484  E101 D111          	bz	l12098
 29989                           
 29990                           ; BSR set to: 0
 29991                           ;AES.c: 247: {
 29992                           ;AES.c: 248: unsigned char aux,aux1,aux2,aux3;
 29993                           ;AES.c: 250: for(i=0;i<16;i+=4)
 29994  002488  6B7F               	clrf	AESEncode@i& (0+255),b
 29995  00248A                     l12066:
 29996                           
 29997                           ; BSR set to: 0
 29998                           ;AES.c: 251: {
 29999                           ;AES.c: 252: aux1= block[i+0] ^ block[i+1];
 30000  00248A  517F               	movf	AESEncode@i& (0+255),w,b
 30001  00248C  256A               	addwf	AESEncode@block& (0+255),w,b
 30002  00248E  6F6D               	movwf	??_AESEncode& (0+255),b
 30003  002490  0E00               	movlw	0
 30004  002492  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30005  002494  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30006  002496  296D               	incf	??_AESEncode& (0+255),w,b
 30007  002498  6ED9               	movwf	fsr2l,c
 30008  00249A  0E00               	movlw	0
 30009  00249C  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30010  00249E  6EDA               	movwf	fsr2h,c
 30011  0024A0  50DF               	movf	indf2,w,c
 30012  0024A2  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30013  0024A4  517F               	movf	AESEncode@i& (0+255),w,b
 30014  0024A6  256A               	addwf	AESEncode@block& (0+255),w,b
 30015  0024A8  6ED9               	movwf	fsr2l,c
 30016  0024AA  0E00               	movlw	0
 30017  0024AC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30018  0024AE  6EDA               	movwf	fsr2h,c
 30019  0024B0  50DF               	movf	indf2,w,c
 30020  0024B2  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30021  0024B4  6F7D               	movwf	AESEncode@aux1& (0+255),b
 30022                           
 30023                           ;AES.c: 253: aux3= block[i+2]^block[i+3];
 30024  0024B6  517F               	movf	AESEncode@i& (0+255),w,b
 30025  0024B8  256A               	addwf	AESEncode@block& (0+255),w,b
 30026  0024BA  6F6D               	movwf	??_AESEncode& (0+255),b
 30027  0024BC  0E00               	movlw	0
 30028  0024BE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30029  0024C0  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30030  0024C2  0E03               	movlw	3
 30031  0024C4  256D               	addwf	??_AESEncode& (0+255),w,b
 30032  0024C6  6ED9               	movwf	fsr2l,c
 30033  0024C8  0E00               	movlw	0
 30034  0024CA  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30035  0024CC  6EDA               	movwf	fsr2h,c
 30036  0024CE  50DF               	movf	indf2,w,c
 30037  0024D0  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30038  0024D2  517F               	movf	AESEncode@i& (0+255),w,b
 30039  0024D4  256A               	addwf	AESEncode@block& (0+255),w,b
 30040  0024D6  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30041  0024D8  0E00               	movlw	0
 30042  0024DA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30043  0024DC  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30044  0024DE  0E02               	movlw	2
 30045  0024E0  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30046  0024E2  6ED9               	movwf	fsr2l,c
 30047  0024E4  0E00               	movlw	0
 30048  0024E6  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30049  0024E8  6EDA               	movwf	fsr2h,c
 30050  0024EA  50DF               	movf	indf2,w,c
 30051  0024EC  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30052  0024EE  6F7E               	movwf	AESEncode@aux3& (0+255),b
 30053                           
 30054                           ; BSR set to: 0
 30055                           ;AES.c: 254: aux = aux1 ^ aux3;
 30056  0024F0  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30057  0024F2  6F7B               	movwf	AESEncode@aux& (0+255),b
 30058                           
 30059                           ; BSR set to: 0
 30060                           ;AES.c: 255: aux2= block[i+2]^block[i+1];
 30061  0024F4  517F               	movf	AESEncode@i& (0+255),w,b
 30062  0024F6  256A               	addwf	AESEncode@block& (0+255),w,b
 30063  0024F8  6F6D               	movwf	??_AESEncode& (0+255),b
 30064  0024FA  0E00               	movlw	0
 30065  0024FC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30066  0024FE  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30067  002500  296D               	incf	??_AESEncode& (0+255),w,b
 30068  002502  6ED9               	movwf	fsr2l,c
 30069  002504  0E00               	movlw	0
 30070  002506  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30071  002508  6EDA               	movwf	fsr2h,c
 30072  00250A  50DF               	movf	indf2,w,c
 30073  00250C  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30074  00250E  517F               	movf	AESEncode@i& (0+255),w,b
 30075  002510  256A               	addwf	AESEncode@block& (0+255),w,b
 30076  002512  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30077  002514  0E00               	movlw	0
 30078  002516  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30079  002518  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30080  00251A  0E02               	movlw	2
 30081  00251C  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30082  00251E  6ED9               	movwf	fsr2l,c
 30083  002520  0E00               	movlw	0
 30084  002522  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30085  002524  6EDA               	movwf	fsr2h,c
 30086  002526  50DF               	movf	indf2,w,c
 30087  002528  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30088  00252A  6F7C               	movwf	AESEncode@aux2& (0+255),b
 30089                           
 30090                           ;AES.c: 257: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 30091  00252C  0E7F               	movlw	127
 30092  00252E  657D               	cpfsgt	AESEncode@aux1& (0+255),b
 30093  002530  D00C               	goto	l12074
 30094                           
 30095                           ; BSR set to: 0
 30096  002532  0E1B               	movlw	27
 30097  002534  C07D  F06D         	movff	AESEncode@aux1,??_AESEncode
 30098  002538  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30099  00253A  90D8               	bcf	status,0,c
 30100  00253C  376D               	rlcf	??_AESEncode& (0+255),f,b
 30101  00253E  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30102  002540  196D               	xorwf	??_AESEncode& (0+255),w,b
 30103  002542  6F75               	movwf	_AESEncode$4143& (0+255),b
 30104  002544  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30105  002546  6F76               	movwf	(_AESEncode$4143+1)& (0+255),b
 30106  002548  D005               	goto	l12076
 30107  00254A                     l12074:
 30108                           
 30109                           ; BSR set to: 0
 30110  00254A  90D8               	bcf	status,0,c
 30111  00254C  357D               	rlcf	AESEncode@aux1& (0+255),w,b
 30112  00254E  6F75               	movwf	_AESEncode$4143& (0+255),b
 30113  002550  6B76               	clrf	(_AESEncode$4143+1)& (0+255),b
 30114  002552  3776               	rlcf	(_AESEncode$4143+1)& (0+255),f,b
 30115  002554                     l12076:
 30116                           
 30117                           ; BSR set to: 0
 30118  002554  C075  F07D         	movff	_AESEncode$4143,AESEncode@aux1
 30119                           
 30120                           ;AES.c: 258: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 30121  002558  0E7F               	movlw	127
 30122  00255A  657C               	cpfsgt	AESEncode@aux2& (0+255),b
 30123  00255C  D00C               	goto	l12080
 30124                           
 30125                           ; BSR set to: 0
 30126  00255E  0E1B               	movlw	27
 30127  002560  C07C  F06D         	movff	AESEncode@aux2,??_AESEncode
 30128  002564  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30129  002566  90D8               	bcf	status,0,c
 30130  002568  376D               	rlcf	??_AESEncode& (0+255),f,b
 30131  00256A  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30132  00256C  196D               	xorwf	??_AESEncode& (0+255),w,b
 30133  00256E  6F77               	movwf	_AESEncode$4144& (0+255),b
 30134  002570  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30135  002572  6F78               	movwf	(_AESEncode$4144+1)& (0+255),b
 30136  002574  D005               	goto	l12082
 30137  002576                     l12080:
 30138                           
 30139                           ; BSR set to: 0
 30140  002576  90D8               	bcf	status,0,c
 30141  002578  357C               	rlcf	AESEncode@aux2& (0+255),w,b
 30142  00257A  6F77               	movwf	_AESEncode$4144& (0+255),b
 30143  00257C  6B78               	clrf	(_AESEncode$4144+1)& (0+255),b
 30144  00257E  3778               	rlcf	(_AESEncode$4144+1)& (0+255),f,b
 30145  002580                     l12082:
 30146                           
 30147                           ; BSR set to: 0
 30148  002580  C077  F07C         	movff	_AESEncode$4144,AESEncode@aux2
 30149                           
 30150                           ;AES.c: 259: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 30151  002584  0E7F               	movlw	127
 30152  002586  657E               	cpfsgt	AESEncode@aux3& (0+255),b
 30153  002588  D00C               	goto	l12086
 30154                           
 30155                           ; BSR set to: 0
 30156  00258A  0E1B               	movlw	27
 30157  00258C  C07E  F06D         	movff	AESEncode@aux3,??_AESEncode
 30158  002590  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30159  002592  90D8               	bcf	status,0,c
 30160  002594  376D               	rlcf	??_AESEncode& (0+255),f,b
 30161  002596  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30162  002598  196D               	xorwf	??_AESEncode& (0+255),w,b
 30163  00259A  6F79               	movwf	_AESEncode$4145& (0+255),b
 30164  00259C  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30165  00259E  6F7A               	movwf	(_AESEncode$4145+1)& (0+255),b
 30166  0025A0  D005               	goto	l12088
 30167  0025A2                     l12086:
 30168                           
 30169                           ; BSR set to: 0
 30170  0025A2  90D8               	bcf	status,0,c
 30171  0025A4  357E               	rlcf	AESEncode@aux3& (0+255),w,b
 30172  0025A6  6F79               	movwf	_AESEncode$4145& (0+255),b
 30173  0025A8  6B7A               	clrf	(_AESEncode$4145+1)& (0+255),b
 30174  0025AA  377A               	rlcf	(_AESEncode$4145+1)& (0+255),f,b
 30175  0025AC                     l12088:
 30176                           
 30177                           ; BSR set to: 0
 30178  0025AC  C079  F07E         	movff	_AESEncode$4145,AESEncode@aux3
 30179                           
 30180                           ; BSR set to: 0
 30181                           ;AES.c: 261: block[i+0]= aux^aux1^block[i+0];
 30182  0025B0  517F               	movf	AESEncode@i& (0+255),w,b
 30183  0025B2  256A               	addwf	AESEncode@block& (0+255),w,b
 30184  0025B4  6ED9               	movwf	fsr2l,c
 30185  0025B6  0E00               	movlw	0
 30186  0025B8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30187  0025BA  6EDA               	movwf	fsr2h,c
 30188  0025BC  517F               	movf	AESEncode@i& (0+255),w,b
 30189  0025BE  256A               	addwf	AESEncode@block& (0+255),w,b
 30190  0025C0  6EE9               	movwf	fsr0l,c
 30191  0025C2  0E00               	movlw	0
 30192  0025C4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30193  0025C6  6EEA               	movwf	fsr0h,c
 30194  0025C8  50EF               	movf	indf0,w,c
 30195  0025CA  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30196  0025CC  197D               	xorwf	AESEncode@aux1& (0+255),w,b
 30197  0025CE  6EDF               	movwf	indf2,c
 30198                           
 30199                           ; BSR set to: 0
 30200                           ;AES.c: 262: block[i+1]= aux^aux2^block[i+1];
 30201  0025D0  517F               	movf	AESEncode@i& (0+255),w,b
 30202  0025D2  256A               	addwf	AESEncode@block& (0+255),w,b
 30203  0025D4  6F6D               	movwf	??_AESEncode& (0+255),b
 30204  0025D6  0E00               	movlw	0
 30205  0025D8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30206  0025DA  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30207  0025DC  296D               	incf	??_AESEncode& (0+255),w,b
 30208  0025DE  6ED9               	movwf	fsr2l,c
 30209  0025E0  0E00               	movlw	0
 30210  0025E2  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30211  0025E4  6EDA               	movwf	fsr2h,c
 30212  0025E6  517F               	movf	AESEncode@i& (0+255),w,b
 30213  0025E8  256A               	addwf	AESEncode@block& (0+255),w,b
 30214  0025EA  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30215  0025EC  0E00               	movlw	0
 30216  0025EE  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30217  0025F0  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30218  0025F2  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 30219  0025F4  6EE9               	movwf	fsr0l,c
 30220  0025F6  0E00               	movlw	0
 30221  0025F8  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30222  0025FA  6EEA               	movwf	fsr0h,c
 30223  0025FC  50EF               	movf	indf0,w,c
 30224  0025FE  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30225  002600  197C               	xorwf	AESEncode@aux2& (0+255),w,b
 30226  002602  6EDF               	movwf	indf2,c
 30227                           
 30228                           ; BSR set to: 0
 30229                           ;AES.c: 263: block[i+2]= aux^aux3^block[i+2];
 30230  002604  517F               	movf	AESEncode@i& (0+255),w,b
 30231  002606  256A               	addwf	AESEncode@block& (0+255),w,b
 30232  002608  6F6D               	movwf	??_AESEncode& (0+255),b
 30233  00260A  0E00               	movlw	0
 30234  00260C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30235  00260E  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30236  002610  0E02               	movlw	2
 30237  002612  256D               	addwf	??_AESEncode& (0+255),w,b
 30238  002614  6ED9               	movwf	fsr2l,c
 30239  002616  0E00               	movlw	0
 30240  002618  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30241  00261A  6EDA               	movwf	fsr2h,c
 30242  00261C  517F               	movf	AESEncode@i& (0+255),w,b
 30243  00261E  256A               	addwf	AESEncode@block& (0+255),w,b
 30244  002620  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30245  002622  0E00               	movlw	0
 30246  002624  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30247  002626  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30248  002628  0E02               	movlw	2
 30249  00262A  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30250  00262C  6EE9               	movwf	fsr0l,c
 30251  00262E  0E00               	movlw	0
 30252  002630  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30253  002632  6EEA               	movwf	fsr0h,c
 30254  002634  50EF               	movf	indf0,w,c
 30255  002636  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30256  002638  197E               	xorwf	AESEncode@aux3& (0+255),w,b
 30257  00263A  6EDF               	movwf	indf2,c
 30258                           
 30259                           ; BSR set to: 0
 30260                           ;AES.c: 264: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 30261  00263C  517F               	movf	AESEncode@i& (0+255),w,b
 30262  00263E  256A               	addwf	AESEncode@block& (0+255),w,b
 30263  002640  6F6D               	movwf	??_AESEncode& (0+255),b
 30264  002642  0E00               	movlw	0
 30265  002644  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30266  002646  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30267  002648  0E03               	movlw	3
 30268  00264A  256D               	addwf	??_AESEncode& (0+255),w,b
 30269  00264C  6ED9               	movwf	fsr2l,c
 30270  00264E  0E00               	movlw	0
 30271  002650  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30272  002652  6EDA               	movwf	fsr2h,c
 30273  002654  517F               	movf	AESEncode@i& (0+255),w,b
 30274  002656  256A               	addwf	AESEncode@block& (0+255),w,b
 30275  002658  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30276  00265A  0E00               	movlw	0
 30277  00265C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30278  00265E  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30279  002660  0E02               	movlw	2
 30280  002662  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 30281  002664  6EE9               	movwf	fsr0l,c
 30282  002666  0E00               	movlw	0
 30283  002668  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 30284  00266A  6EEA               	movwf	fsr0h,c
 30285  00266C  50EF               	movf	indf0,w,c
 30286  00266E  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30287  002670  517F               	movf	AESEncode@i& (0+255),w,b
 30288  002672  256A               	addwf	AESEncode@block& (0+255),w,b
 30289  002674  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 30290  002676  0E00               	movlw	0
 30291  002678  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30292  00267A  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 30293  00267C  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 30294  00267E  6EE9               	movwf	fsr0l,c
 30295  002680  0E00               	movlw	0
 30296  002682  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 30297  002684  6EEA               	movwf	fsr0h,c
 30298  002686  50EF               	movf	indf0,w,c
 30299  002688  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 30300  00268A  517F               	movf	AESEncode@i& (0+255),w,b
 30301  00268C  256A               	addwf	AESEncode@block& (0+255),w,b
 30302  00268E  6EE9               	movwf	fsr0l,c
 30303  002690  0E00               	movlw	0
 30304  002692  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30305  002694  6EEA               	movwf	fsr0h,c
 30306  002696  50EF               	movf	indf0,w,c
 30307  002698  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 30308  00269A  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 30309  00269C  197B               	xorwf	AESEncode@aux& (0+255),w,b
 30310  00269E  6EDF               	movwf	indf2,c
 30311  0026A0  0E04               	movlw	4
 30312  0026A2  277F               	addwf	AESEncode@i& (0+255),f,b
 30313  0026A4  0E0F               	movlw	15
 30314  0026A6  657F               	cpfsgt	AESEncode@i& (0+255),b
 30315  0026A8  D6F0               	goto	l12066
 30316  0026AA                     l12098:
 30317                           
 30318                           ; BSR set to: 0
 30319                           ;AES.c: 265: }
 30320                           ;AES.c: 266: }
 30321                           ;AES.c: 268: EncKeySchedule(key);
 30322  0026AA  C06C  F064         	movff	AESEncode@key,EncKeySchedule@key
 30323  0026AE  ECC0  F014         	call	_EncKeySchedule	;wreg free
 30324                           
 30325                           ; BSR set to: 0
 30326                           ;AES.c: 271: for(i=0;i<16;i++)
 30327  0026B2  6B7F               	clrf	AESEncode@i& (0+255),b
 30328  0026B4                     l12106:
 30329                           
 30330                           ; BSR set to: 0
 30331                           ;AES.c: 272: {
 30332                           ;AES.c: 273: block[i] ^= key[i];
 30333  0026B4  516C               	movf	AESEncode@key& (0+255),w,b
 30334  0026B6  257F               	addwf	AESEncode@i& (0+255),w,b
 30335  0026B8  6ED9               	movwf	fsr2l,c
 30336  0026BA  6ADA               	clrf	fsr2h,c
 30337  0026BC  50DF               	movf	indf2,w,c
 30338  0026BE  6F6D               	movwf	??_AESEncode& (0+255),b
 30339  0026C0  517F               	movf	AESEncode@i& (0+255),w,b
 30340  0026C2  256A               	addwf	AESEncode@block& (0+255),w,b
 30341  0026C4  6ED9               	movwf	fsr2l,c
 30342  0026C6  0E00               	movlw	0
 30343  0026C8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30344  0026CA  6EDA               	movwf	fsr2h,c
 30345  0026CC  516D               	movf	??_AESEncode& (0+255),w,b
 30346  0026CE  1ADF               	xorwf	indf2,f,c
 30347                           
 30348                           ; BSR set to: 0
 30349  0026D0  2B7F               	incf	AESEncode@i& (0+255),f,b
 30350                           
 30351                           ; BSR set to: 0
 30352  0026D2  0E0F               	movlw	15
 30353  0026D4  657F               	cpfsgt	AESEncode@i& (0+255),b
 30354  0026D6  D7EE               	goto	l12106
 30355                           
 30356                           ; BSR set to: 0
 30357                           ;AES.c: 274: }
 30358                           ;AES.c: 276: _roundCounter--;
 30359  0026D8  0644               	decf	__roundCounter,f,c
 30360                           
 30361                           ; BSR set to: 0
 30362                           ;AES.c: 277: }
 30363                           ;AES.c: 278: while(_roundCounter !=0);
 30364  0026DA  5044               	movf	__roundCounter,w,c
 30365  0026DC  E001 D6AB          	bnz	l2522
 30366                           
 30367                           ; BSR set to: 0
 30368  0026E0  0012               	return		;funcret
 30369  0026E2                     __end_of_AESEncode:
 30370                           	opt stack 0
 30371                           tosu	equ	0xFFF
 30372                           tosh	equ	0xFFE
 30373                           tosl	equ	0xFFD
 30374                           pclath	equ	0xFFA
 30375                           tblptru	equ	0xFF8
 30376                           tblptrh	equ	0xFF7
 30377                           tblptrl	equ	0xFF6
 30378                           tablat	equ	0xFF5
 30379                           prodh	equ	0xFF4
 30380                           prodl	equ	0xFF3
 30381                           intcon	equ	0xFF2
 30382                           intcon2	equ	0xFF1
 30383                           intcon3	equ	0xFF0
 30384                           indf0	equ	0xFEF
 30385                           postinc0	equ	0xFEE
 30386                           plusw0	equ	0xFEB
 30387                           fsr0h	equ	0xFEA
 30388                           fsr0l	equ	0xFE9
 30389                           wreg	equ	0xFE8
 30390                           postinc1	equ	0xFE6
 30391                           postdec1	equ	0xFE5
 30392                           plusw1	equ	0xFE3
 30393                           fsr1h	equ	0xFE2
 30394                           fsr1l	equ	0xFE1
 30395                           indf2	equ	0xFDF
 30396                           postinc2	equ	0xFDE
 30397                           postdec2	equ	0xFDD
 30398                           plusw2	equ	0xFDB
 30399                           fsr2h	equ	0xFDA
 30400                           fsr2l	equ	0xFD9
 30401                           status	equ	0xFD8
 30402                           
 30403 ;; *************** function _EncodeShiftRow *****************
 30404 ;; Defined at:
 30405 ;;		line 354 in file "mcc_generated_files/LoRaWAN/AES.c"
 30406 ;; Parameters:    Size  Location     Type
 30407 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 30408 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30409 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30410 ;; Auto vars:     Size  Location     Type
 30411 ;;  temp            1    6[BANK0 ] unsigned char 
 30412 ;; Return value:  Size  Location     Type
 30413 ;;                  1    wreg      void 
 30414 ;; Registers used:
 30415 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30416 ;; Tracked objects:
 30417 ;;		On entry : F/0
 30418 ;;		On exit  : F/0
 30419 ;;		Unchanged: 0/0
 30420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30424 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30425 ;;Total ram usage:        3 bytes
 30426 ;; Hardware stack levels used:    1
 30427 ;; Hardware stack levels required when called:    7
 30428 ;; This function calls:
 30429 ;;		Nothing
 30430 ;; This function is called by:
 30431 ;;		_AESEncode
 30432 ;; This function uses a non-reentrant model
 30433 ;;
 30434                           
 30435                           	psect	text157
 30436  003D3C                     __ptext157:
 30437                           	opt stack 0
 30438  003D3C                     _EncodeShiftRow:
 30439                           	opt stack 17
 30440                           
 30441                           ; BSR set to: 0
 30442                           ;AES.c: 356: unsigned char temp;
 30443                           ;AES.c: 361: temp=stateTable[1];
 30444                           
 30445                           ; BSR set to: 0
 30446                           ;incstack = 0
 30447  003D3C  EE20 F001          	lfsr	2,1
 30448  003D40  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30449  003D42  26D9               	addwf	fsr2l,f,c
 30450  003D44  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30451  003D46  22DA               	addwfc	fsr2h,f,c
 30452  003D48  50DF               	movf	indf2,w,c
 30453  003D4A  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30454                           
 30455                           ; BSR set to: 0
 30456                           ;AES.c: 362: stateTable[1]=stateTable[5];
 30457  003D4C  EE20 F005          	lfsr	2,5
 30458  003D50  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30459  003D52  26D9               	addwf	fsr2l,f,c
 30460  003D54  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30461  003D56  22DA               	addwfc	fsr2h,f,c
 30462  003D58  EE00 F001          	lfsr	0,1
 30463  003D5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30464  003D5E  26E9               	addwf	fsr0l,f,c
 30465  003D60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30466  003D62  22EA               	addwfc	fsr0h,f,c
 30467  003D64  CFDF FFEF          	movff	indf2,indf0
 30468                           
 30469                           ; BSR set to: 0
 30470                           ;AES.c: 363: stateTable[5]=stateTable[9];
 30471  003D68  EE20 F009          	lfsr	2,9
 30472  003D6C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30473  003D6E  26D9               	addwf	fsr2l,f,c
 30474  003D70  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30475  003D72  22DA               	addwfc	fsr2h,f,c
 30476  003D74  EE00 F005          	lfsr	0,5
 30477  003D78  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30478  003D7A  26E9               	addwf	fsr0l,f,c
 30479  003D7C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30480  003D7E  22EA               	addwfc	fsr0h,f,c
 30481  003D80  CFDF FFEF          	movff	indf2,indf0
 30482                           
 30483                           ; BSR set to: 0
 30484                           ;AES.c: 364: stateTable[9]=stateTable[13];
 30485  003D84  EE20 F00D          	lfsr	2,13
 30486  003D88  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30487  003D8A  26D9               	addwf	fsr2l,f,c
 30488  003D8C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30489  003D8E  22DA               	addwfc	fsr2h,f,c
 30490  003D90  EE00 F009          	lfsr	0,9
 30491  003D94  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30492  003D96  26E9               	addwf	fsr0l,f,c
 30493  003D98  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30494  003D9A  22EA               	addwfc	fsr0h,f,c
 30495  003D9C  CFDF FFEF          	movff	indf2,indf0
 30496                           
 30497                           ; BSR set to: 0
 30498                           ;AES.c: 365: stateTable[13]=temp;
 30499  003DA0  EE20 F00D          	lfsr	2,13
 30500  003DA4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30501  003DA6  26D9               	addwf	fsr2l,f,c
 30502  003DA8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30503  003DAA  22DA               	addwfc	fsr2h,f,c
 30504  003DAC  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30505                           
 30506                           ; BSR set to: 0
 30507                           ;AES.c: 368: temp=stateTable[2];
 30508  003DB0  EE20 F002          	lfsr	2,2
 30509  003DB4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30510  003DB6  26D9               	addwf	fsr2l,f,c
 30511  003DB8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30512  003DBA  22DA               	addwfc	fsr2h,f,c
 30513  003DBC  50DF               	movf	indf2,w,c
 30514  003DBE  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30515                           
 30516                           ; BSR set to: 0
 30517                           ;AES.c: 369: stateTable[2]=stateTable[10];
 30518  003DC0  EE20 F00A          	lfsr	2,10
 30519  003DC4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30520  003DC6  26D9               	addwf	fsr2l,f,c
 30521  003DC8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30522  003DCA  22DA               	addwfc	fsr2h,f,c
 30523  003DCC  EE00 F002          	lfsr	0,2
 30524  003DD0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30525  003DD2  26E9               	addwf	fsr0l,f,c
 30526  003DD4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30527  003DD6  22EA               	addwfc	fsr0h,f,c
 30528  003DD8  CFDF FFEF          	movff	indf2,indf0
 30529                           
 30530                           ;AES.c: 370: stateTable[10]=temp;
 30531  003DDC  EE20 F00A          	lfsr	2,10
 30532  003DE0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30533  003DE2  26D9               	addwf	fsr2l,f,c
 30534  003DE4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30535  003DE6  22DA               	addwfc	fsr2h,f,c
 30536  003DE8  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30537                           
 30538                           ;AES.c: 371: temp=stateTable[14];
 30539  003DEC  EE20 F00E          	lfsr	2,14
 30540  003DF0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30541  003DF2  26D9               	addwf	fsr2l,f,c
 30542  003DF4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30543  003DF6  22DA               	addwfc	fsr2h,f,c
 30544  003DF8  50DF               	movf	indf2,w,c
 30545  003DFA  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30546                           
 30547                           ; BSR set to: 0
 30548                           ;AES.c: 372: stateTable[14]=stateTable[6];
 30549  003DFC  EE20 F006          	lfsr	2,6
 30550  003E00  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30551  003E02  26D9               	addwf	fsr2l,f,c
 30552  003E04  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30553  003E06  22DA               	addwfc	fsr2h,f,c
 30554  003E08  EE00 F00E          	lfsr	0,14
 30555  003E0C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30556  003E0E  26E9               	addwf	fsr0l,f,c
 30557  003E10  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30558  003E12  22EA               	addwfc	fsr0h,f,c
 30559  003E14  CFDF FFEF          	movff	indf2,indf0
 30560                           
 30561                           ; BSR set to: 0
 30562                           ;AES.c: 373: stateTable[6]=temp;
 30563  003E18  EE20 F006          	lfsr	2,6
 30564  003E1C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30565  003E1E  26D9               	addwf	fsr2l,f,c
 30566  003E20  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30567  003E22  22DA               	addwfc	fsr2h,f,c
 30568  003E24  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30569                           
 30570                           ; BSR set to: 0
 30571                           ;AES.c: 376: temp=stateTable[3];
 30572  003E28  EE20 F003          	lfsr	2,3
 30573  003E2C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30574  003E2E  26D9               	addwf	fsr2l,f,c
 30575  003E30  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30576  003E32  22DA               	addwfc	fsr2h,f,c
 30577  003E34  50DF               	movf	indf2,w,c
 30578  003E36  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 30579                           
 30580                           ; BSR set to: 0
 30581                           ;AES.c: 377: stateTable[3]=stateTable[15];
 30582  003E38  EE20 F00F          	lfsr	2,15
 30583  003E3C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30584  003E3E  26D9               	addwf	fsr2l,f,c
 30585  003E40  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30586  003E42  22DA               	addwfc	fsr2h,f,c
 30587  003E44  EE00 F003          	lfsr	0,3
 30588  003E48  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30589  003E4A  26E9               	addwf	fsr0l,f,c
 30590  003E4C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30591  003E4E  22EA               	addwfc	fsr0h,f,c
 30592  003E50  CFDF FFEF          	movff	indf2,indf0
 30593                           
 30594                           ; BSR set to: 0
 30595                           ;AES.c: 378: stateTable[15]=stateTable[11];
 30596  003E54  EE20 F00B          	lfsr	2,11
 30597  003E58  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30598  003E5A  26D9               	addwf	fsr2l,f,c
 30599  003E5C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30600  003E5E  22DA               	addwfc	fsr2h,f,c
 30601  003E60  EE00 F00F          	lfsr	0,15
 30602  003E64  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30603  003E66  26E9               	addwf	fsr0l,f,c
 30604  003E68  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30605  003E6A  22EA               	addwfc	fsr0h,f,c
 30606  003E6C  CFDF FFEF          	movff	indf2,indf0
 30607                           
 30608                           ; BSR set to: 0
 30609                           ;AES.c: 379: stateTable[11]=stateTable[7];
 30610  003E70  EE20 F007          	lfsr	2,7
 30611  003E74  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30612  003E76  26D9               	addwf	fsr2l,f,c
 30613  003E78  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30614  003E7A  22DA               	addwfc	fsr2h,f,c
 30615  003E7C  EE00 F00B          	lfsr	0,11
 30616  003E80  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30617  003E82  26E9               	addwf	fsr0l,f,c
 30618  003E84  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30619  003E86  22EA               	addwfc	fsr0h,f,c
 30620  003E88  CFDF FFEF          	movff	indf2,indf0
 30621                           
 30622                           ;AES.c: 380: stateTable[7]=temp;
 30623  003E8C  EE20 F007          	lfsr	2,7
 30624  003E90  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 30625  003E92  26D9               	addwf	fsr2l,f,c
 30626  003E94  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 30627  003E96  22DA               	addwfc	fsr2h,f,c
 30628  003E98  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 30629                           
 30630                           ; BSR set to: 0
 30631  003E9C  0012               	return		;funcret
 30632  003E9E                     __end_of_EncodeShiftRow:
 30633                           	opt stack 0
 30634                           tosu	equ	0xFFF
 30635                           tosh	equ	0xFFE
 30636                           tosl	equ	0xFFD
 30637                           pclath	equ	0xFFA
 30638                           tblptru	equ	0xFF8
 30639                           tblptrh	equ	0xFF7
 30640                           tblptrl	equ	0xFF6
 30641                           tablat	equ	0xFF5
 30642                           prodh	equ	0xFF4
 30643                           prodl	equ	0xFF3
 30644                           intcon	equ	0xFF2
 30645                           intcon2	equ	0xFF1
 30646                           intcon3	equ	0xFF0
 30647                           indf0	equ	0xFEF
 30648                           postinc0	equ	0xFEE
 30649                           plusw0	equ	0xFEB
 30650                           fsr0h	equ	0xFEA
 30651                           fsr0l	equ	0xFE9
 30652                           wreg	equ	0xFE8
 30653                           postinc1	equ	0xFE6
 30654                           postdec1	equ	0xFE5
 30655                           plusw1	equ	0xFE3
 30656                           fsr1h	equ	0xFE2
 30657                           fsr1l	equ	0xFE1
 30658                           indf2	equ	0xFDF
 30659                           postinc2	equ	0xFDE
 30660                           postdec2	equ	0xFDD
 30661                           plusw2	equ	0xFDB
 30662                           fsr2h	equ	0xFDA
 30663                           fsr2l	equ	0xFD9
 30664                           status	equ	0xFD8
 30665                           
 30666 ;; *************** function _EncKeySchedule *****************
 30667 ;; Defined at:
 30668 ;;		line 306 in file "mcc_generated_files/LoRaWAN/AES.c"
 30669 ;; Parameters:    Size  Location     Type
 30670 ;;  key             1    4[BANK0 ] PTR unsigned char 
 30671 ;;		 -> AESEncodeLoRa@useKey(16), 
 30672 ;; Auto vars:     Size  Location     Type
 30673 ;;		None
 30674 ;; Return value:  Size  Location     Type
 30675 ;;                  1    wreg      void 
 30676 ;; Registers used:
 30677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 30678 ;; Tracked objects:
 30679 ;;		On entry : F/0
 30680 ;;		On exit  : F/0
 30681 ;;		Unchanged: 0/0
 30682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30683 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30685 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30686 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30687 ;;Total ram usage:        6 bytes
 30688 ;; Hardware stack levels used:    1
 30689 ;; Hardware stack levels required when called:    7
 30690 ;; This function calls:
 30691 ;;		Nothing
 30692 ;; This function is called by:
 30693 ;;		_AESEncode
 30694 ;; This function uses a non-reentrant model
 30695 ;;
 30696                           
 30697                           	psect	text158
 30698  002980                     __ptext158:
 30699                           	opt stack 0
 30700  002980                     _EncKeySchedule:
 30701                           	opt stack 17
 30702                           
 30703                           ; BSR set to: 0
 30704                           ;AES.c: 309: key[0]^=STable[key[13]];
 30705                           
 30706                           ; BSR set to: 0
 30707                           ;incstack = 0
 30708  002980  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30709  002982  6ED9               	movwf	fsr2l,c
 30710  002984  6ADA               	clrf	fsr2h,c
 30711  002986  0E0D               	movlw	13
 30712  002988  26D9               	addwf	fsr2l,f,c
 30713  00298A  50DF               	movf	indf2,w,c
 30714  00298C  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30715  00298E  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30716  002990  0E6D               	movlw	low _STable
 30717  002992  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30718  002994  6EF6               	movwf	tblptrl,c
 30719  002996  0EFE               	movlw	high _STable
 30720  002998  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30721  00299A  6EF7               	movwf	tblptrh,c
 30722  00299C                     	if	1	;There are 3 active tblptr bytes
 30723  00299C  6AF8               	clrf	tblptru,c
 30724  00299E  0E00               	movlw	low (__mediumconst shr (0+16))
 30725  0029A0  22F8               	addwfc	tblptru,f,c
 30726  0029A2                     	endif
 30727  0029A2  0008               	tblrd		*
 30728  0029A4  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30729  0029A8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30730  0029AA  6ED9               	movwf	fsr2l,c
 30731  0029AC  6ADA               	clrf	fsr2h,c
 30732  0029AE  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30733  0029B0  1ADF               	xorwf	indf2,f,c
 30734                           
 30735                           ;AES.c: 310: key[1]^=STable[key[14]];
 30736  0029B2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30737  0029B4  6ED9               	movwf	fsr2l,c
 30738  0029B6  6ADA               	clrf	fsr2h,c
 30739  0029B8  0E0E               	movlw	14
 30740  0029BA  26D9               	addwf	fsr2l,f,c
 30741  0029BC  50DF               	movf	indf2,w,c
 30742  0029BE  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30743  0029C0  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30744  0029C2  0E6D               	movlw	low _STable
 30745  0029C4  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30746  0029C6  6EF6               	movwf	tblptrl,c
 30747  0029C8  0EFE               	movlw	high _STable
 30748  0029CA  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30749  0029CC  6EF7               	movwf	tblptrh,c
 30750  0029CE                     	if	1	;There are 3 active tblptr bytes
 30751  0029CE  6AF8               	clrf	tblptru,c
 30752  0029D0  0E00               	movlw	low (__mediumconst shr (0+16))
 30753  0029D2  22F8               	addwfc	tblptru,f,c
 30754  0029D4                     	endif
 30755  0029D4  0008               	tblrd		*
 30756  0029D6  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30757  0029DA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30758  0029DC  6ED9               	movwf	fsr2l,c
 30759  0029DE  6ADA               	clrf	fsr2h,c
 30760  0029E0  2AD9               	incf	fsr2l,f,c
 30761  0029E2  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30762  0029E4  1ADF               	xorwf	indf2,f,c
 30763                           
 30764                           ;AES.c: 311: key[2]^=STable[key[15]];
 30765  0029E6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30766  0029E8  6ED9               	movwf	fsr2l,c
 30767  0029EA  6ADA               	clrf	fsr2h,c
 30768  0029EC  0E0F               	movlw	15
 30769  0029EE  26D9               	addwf	fsr2l,f,c
 30770  0029F0  50DF               	movf	indf2,w,c
 30771  0029F2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30772  0029F4  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30773  0029F6  0E6D               	movlw	low _STable
 30774  0029F8  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30775  0029FA  6EF6               	movwf	tblptrl,c
 30776  0029FC  0EFE               	movlw	high _STable
 30777  0029FE  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30778  002A00  6EF7               	movwf	tblptrh,c
 30779  002A02                     	if	1	;There are 3 active tblptr bytes
 30780  002A02  6AF8               	clrf	tblptru,c
 30781  002A04  0E00               	movlw	low (__mediumconst shr (0+16))
 30782  002A06  22F8               	addwfc	tblptru,f,c
 30783  002A08                     	endif
 30784  002A08  0008               	tblrd		*
 30785  002A0A  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30786  002A0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30787  002A10  6ED9               	movwf	fsr2l,c
 30788  002A12  6ADA               	clrf	fsr2h,c
 30789  002A14  0E02               	movlw	2
 30790  002A16  26D9               	addwf	fsr2l,f,c
 30791  002A18  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30792  002A1A  1ADF               	xorwf	indf2,f,c
 30793                           
 30794                           ;AES.c: 312: key[3]^=STable[key[12]];
 30795  002A1C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30796  002A1E  6ED9               	movwf	fsr2l,c
 30797  002A20  6ADA               	clrf	fsr2h,c
 30798  002A22  0E0C               	movlw	12
 30799  002A24  26D9               	addwf	fsr2l,f,c
 30800  002A26  50DF               	movf	indf2,w,c
 30801  002A28  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30802  002A2A  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30803  002A2C  0E6D               	movlw	low _STable
 30804  002A2E  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 30805  002A30  6EF6               	movwf	tblptrl,c
 30806  002A32  0EFE               	movlw	high _STable
 30807  002A34  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 30808  002A36  6EF7               	movwf	tblptrh,c
 30809  002A38                     	if	1	;There are 3 active tblptr bytes
 30810  002A38  6AF8               	clrf	tblptru,c
 30811  002A3A  0E00               	movlw	low (__mediumconst shr (0+16))
 30812  002A3C  22F8               	addwfc	tblptru,f,c
 30813  002A3E                     	endif
 30814  002A3E  0008               	tblrd		*
 30815  002A40  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 30816  002A44  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30817  002A46  6ED9               	movwf	fsr2l,c
 30818  002A48  6ADA               	clrf	fsr2h,c
 30819  002A4A  0E03               	movlw	3
 30820  002A4C  26D9               	addwf	fsr2l,f,c
 30821  002A4E  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 30822  002A50  1ADF               	xorwf	indf2,f,c
 30823                           
 30824                           ; BSR set to: 0
 30825                           ;AES.c: 314: key[0]^=_rcon;
 30826  002A52  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30827  002A54  6ED9               	movwf	fsr2l,c
 30828  002A56  6ADA               	clrf	fsr2h,c
 30829  002A58  51EE               	movf	__rcon& (0+255),w,b
 30830  002A5A  1ADF               	xorwf	indf2,f,c
 30831                           
 30832                           ; BSR set to: 0
 30833                           ;AES.c: 315: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 30834  002A5C  0E7F               	movlw	127
 30835  002A5E  65EE               	cpfsgt	__rcon& (0+255),b
 30836  002A60  D00C               	goto	l11926
 30837                           
 30838                           ; BSR set to: 0
 30839  002A62  0E1B               	movlw	27
 30840  002A64  C0EE  F065         	movff	__rcon,??_EncKeySchedule
 30841  002A68  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 30842  002A6A  90D8               	bcf	status,0,c
 30843  002A6C  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 30844  002A6E  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 30845  002A70  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 30846  002A72  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30847  002A74  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 30848  002A76  6F69               	movwf	(_EncKeySchedule$4148+1)& (0+255),b
 30849  002A78  D005               	goto	l11928
 30850  002A7A                     l11926:
 30851                           
 30852                           ; BSR set to: 0
 30853  002A7A  90D8               	bcf	status,0,c
 30854  002A7C  35EE               	rlcf	__rcon& (0+255),w,b
 30855  002A7E  6F68               	movwf	_EncKeySchedule$4148& (0+255),b
 30856  002A80  6B69               	clrf	(_EncKeySchedule$4148+1)& (0+255),b
 30857  002A82  3769               	rlcf	(_EncKeySchedule$4148+1)& (0+255),f,b
 30858  002A84                     l11928:
 30859                           
 30860                           ; BSR set to: 0
 30861  002A84  C068  F0EE         	movff	_EncKeySchedule$4148,__rcon
 30862                           
 30863                           ; BSR set to: 0
 30864                           ;AES.c: 318: key[4]^=key[0];
 30865  002A88  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30866  002A8A  6ED9               	movwf	fsr2l,c
 30867  002A8C  6ADA               	clrf	fsr2h,c
 30868  002A8E  50DF               	movf	indf2,w,c
 30869  002A90  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30870  002A92  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30871  002A94  6ED9               	movwf	fsr2l,c
 30872  002A96  6ADA               	clrf	fsr2h,c
 30873  002A98  0E04               	movlw	4
 30874  002A9A  26D9               	addwf	fsr2l,f,c
 30875  002A9C  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30876  002A9E  1ADF               	xorwf	indf2,f,c
 30877                           
 30878                           ; BSR set to: 0
 30879                           ;AES.c: 319: key[5]^=key[1];
 30880  002AA0  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30881  002AA2  6ED9               	movwf	fsr2l,c
 30882  002AA4  6ADA               	clrf	fsr2h,c
 30883  002AA6  2AD9               	incf	fsr2l,f,c
 30884  002AA8  50DF               	movf	indf2,w,c
 30885  002AAA  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30886  002AAC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30887  002AAE  6ED9               	movwf	fsr2l,c
 30888  002AB0  6ADA               	clrf	fsr2h,c
 30889  002AB2  0E05               	movlw	5
 30890  002AB4  26D9               	addwf	fsr2l,f,c
 30891  002AB6  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30892  002AB8  1ADF               	xorwf	indf2,f,c
 30893                           
 30894                           ; BSR set to: 0
 30895                           ;AES.c: 320: key[6]^=key[2];
 30896  002ABA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30897  002ABC  6ED9               	movwf	fsr2l,c
 30898  002ABE  6ADA               	clrf	fsr2h,c
 30899  002AC0  0E02               	movlw	2
 30900  002AC2  26D9               	addwf	fsr2l,f,c
 30901  002AC4  50DF               	movf	indf2,w,c
 30902  002AC6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30903  002AC8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30904  002ACA  6ED9               	movwf	fsr2l,c
 30905  002ACC  6ADA               	clrf	fsr2h,c
 30906  002ACE  0E06               	movlw	6
 30907  002AD0  26D9               	addwf	fsr2l,f,c
 30908  002AD2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30909  002AD4  1ADF               	xorwf	indf2,f,c
 30910                           
 30911                           ; BSR set to: 0
 30912                           ;AES.c: 321: key[7]^=key[3];
 30913  002AD6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30914  002AD8  6ED9               	movwf	fsr2l,c
 30915  002ADA  6ADA               	clrf	fsr2h,c
 30916  002ADC  0E03               	movlw	3
 30917  002ADE  26D9               	addwf	fsr2l,f,c
 30918  002AE0  50DF               	movf	indf2,w,c
 30919  002AE2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30920  002AE4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30921  002AE6  6ED9               	movwf	fsr2l,c
 30922  002AE8  6ADA               	clrf	fsr2h,c
 30923  002AEA  0E07               	movlw	7
 30924  002AEC  26D9               	addwf	fsr2l,f,c
 30925  002AEE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30926  002AF0  1ADF               	xorwf	indf2,f,c
 30927                           
 30928                           ; BSR set to: 0
 30929                           ;AES.c: 324: key[8]^=key[4];
 30930  002AF2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30931  002AF4  6ED9               	movwf	fsr2l,c
 30932  002AF6  6ADA               	clrf	fsr2h,c
 30933  002AF8  0E04               	movlw	4
 30934  002AFA  26D9               	addwf	fsr2l,f,c
 30935  002AFC  50DF               	movf	indf2,w,c
 30936  002AFE  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30937  002B00  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30938  002B02  6ED9               	movwf	fsr2l,c
 30939  002B04  6ADA               	clrf	fsr2h,c
 30940  002B06  0E08               	movlw	8
 30941  002B08  26D9               	addwf	fsr2l,f,c
 30942  002B0A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30943  002B0C  1ADF               	xorwf	indf2,f,c
 30944                           
 30945                           ; BSR set to: 0
 30946                           ;AES.c: 325: key[9]^=key[5];
 30947  002B0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30948  002B10  6ED9               	movwf	fsr2l,c
 30949  002B12  6ADA               	clrf	fsr2h,c
 30950  002B14  0E05               	movlw	5
 30951  002B16  26D9               	addwf	fsr2l,f,c
 30952  002B18  50DF               	movf	indf2,w,c
 30953  002B1A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30954  002B1C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30955  002B1E  6ED9               	movwf	fsr2l,c
 30956  002B20  6ADA               	clrf	fsr2h,c
 30957  002B22  0E09               	movlw	9
 30958  002B24  26D9               	addwf	fsr2l,f,c
 30959  002B26  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30960  002B28  1ADF               	xorwf	indf2,f,c
 30961                           
 30962                           ; BSR set to: 0
 30963                           ;AES.c: 326: key[10]^=key[6];
 30964  002B2A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30965  002B2C  6ED9               	movwf	fsr2l,c
 30966  002B2E  6ADA               	clrf	fsr2h,c
 30967  002B30  0E06               	movlw	6
 30968  002B32  26D9               	addwf	fsr2l,f,c
 30969  002B34  50DF               	movf	indf2,w,c
 30970  002B36  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30971  002B38  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30972  002B3A  6ED9               	movwf	fsr2l,c
 30973  002B3C  6ADA               	clrf	fsr2h,c
 30974  002B3E  0E0A               	movlw	10
 30975  002B40  26D9               	addwf	fsr2l,f,c
 30976  002B42  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30977  002B44  1ADF               	xorwf	indf2,f,c
 30978                           
 30979                           ; BSR set to: 0
 30980                           ;AES.c: 327: key[11]^=key[7];
 30981  002B46  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30982  002B48  6ED9               	movwf	fsr2l,c
 30983  002B4A  6ADA               	clrf	fsr2h,c
 30984  002B4C  0E07               	movlw	7
 30985  002B4E  26D9               	addwf	fsr2l,f,c
 30986  002B50  50DF               	movf	indf2,w,c
 30987  002B52  6F65               	movwf	??_EncKeySchedule& (0+255),b
 30988  002B54  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30989  002B56  6ED9               	movwf	fsr2l,c
 30990  002B58  6ADA               	clrf	fsr2h,c
 30991  002B5A  0E0B               	movlw	11
 30992  002B5C  26D9               	addwf	fsr2l,f,c
 30993  002B5E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 30994  002B60  1ADF               	xorwf	indf2,f,c
 30995                           
 30996                           ; BSR set to: 0
 30997                           ;AES.c: 330: key[12]^=key[8];
 30998  002B62  5164               	movf	EncKeySchedule@key& (0+255),w,b
 30999  002B64  6ED9               	movwf	fsr2l,c
 31000  002B66  6ADA               	clrf	fsr2h,c
 31001  002B68  0E08               	movlw	8
 31002  002B6A  26D9               	addwf	fsr2l,f,c
 31003  002B6C  50DF               	movf	indf2,w,c
 31004  002B6E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31005  002B70  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31006  002B72  6ED9               	movwf	fsr2l,c
 31007  002B74  6ADA               	clrf	fsr2h,c
 31008  002B76  0E0C               	movlw	12
 31009  002B78  26D9               	addwf	fsr2l,f,c
 31010  002B7A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31011  002B7C  1ADF               	xorwf	indf2,f,c
 31012                           
 31013                           ; BSR set to: 0
 31014                           ;AES.c: 331: key[13]^=key[9];
 31015  002B7E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31016  002B80  6ED9               	movwf	fsr2l,c
 31017  002B82  6ADA               	clrf	fsr2h,c
 31018  002B84  0E09               	movlw	9
 31019  002B86  26D9               	addwf	fsr2l,f,c
 31020  002B88  50DF               	movf	indf2,w,c
 31021  002B8A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31022  002B8C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31023  002B8E  6ED9               	movwf	fsr2l,c
 31024  002B90  6ADA               	clrf	fsr2h,c
 31025  002B92  0E0D               	movlw	13
 31026  002B94  26D9               	addwf	fsr2l,f,c
 31027  002B96  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31028  002B98  1ADF               	xorwf	indf2,f,c
 31029                           
 31030                           ; BSR set to: 0
 31031                           ;AES.c: 332: key[14]^=key[10];
 31032  002B9A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31033  002B9C  6ED9               	movwf	fsr2l,c
 31034  002B9E  6ADA               	clrf	fsr2h,c
 31035  002BA0  0E0A               	movlw	10
 31036  002BA2  26D9               	addwf	fsr2l,f,c
 31037  002BA4  50DF               	movf	indf2,w,c
 31038  002BA6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31039  002BA8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31040  002BAA  6ED9               	movwf	fsr2l,c
 31041  002BAC  6ADA               	clrf	fsr2h,c
 31042  002BAE  0E0E               	movlw	14
 31043  002BB0  26D9               	addwf	fsr2l,f,c
 31044  002BB2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31045  002BB4  1ADF               	xorwf	indf2,f,c
 31046                           
 31047                           ; BSR set to: 0
 31048                           ;AES.c: 333: key[15]^=key[11];
 31049  002BB6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31050  002BB8  6ED9               	movwf	fsr2l,c
 31051  002BBA  6ADA               	clrf	fsr2h,c
 31052  002BBC  0E0B               	movlw	11
 31053  002BBE  26D9               	addwf	fsr2l,f,c
 31054  002BC0  50DF               	movf	indf2,w,c
 31055  002BC2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31056  002BC4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31057  002BC6  6ED9               	movwf	fsr2l,c
 31058  002BC8  6ADA               	clrf	fsr2h,c
 31059  002BCA  0E0F               	movlw	15
 31060  002BCC  26D9               	addwf	fsr2l,f,c
 31061  002BCE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31062  002BD0  1ADF               	xorwf	indf2,f,c
 31063                           
 31064                           ; BSR set to: 0
 31065  002BD2  0012               	return		;funcret
 31066  002BD4                     __end_of_EncKeySchedule:
 31067                           	opt stack 0
 31068                           tosu	equ	0xFFF
 31069                           tosh	equ	0xFFE
 31070                           tosl	equ	0xFFD
 31071                           pclath	equ	0xFFA
 31072                           tblptru	equ	0xFF8
 31073                           tblptrh	equ	0xFF7
 31074                           tblptrl	equ	0xFF6
 31075                           tablat	equ	0xFF5
 31076                           prodh	equ	0xFF4
 31077                           prodl	equ	0xFF3
 31078                           intcon	equ	0xFF2
 31079                           intcon2	equ	0xFF1
 31080                           intcon3	equ	0xFF0
 31081                           indf0	equ	0xFEF
 31082                           postinc0	equ	0xFEE
 31083                           plusw0	equ	0xFEB
 31084                           fsr0h	equ	0xFEA
 31085                           fsr0l	equ	0xFE9
 31086                           wreg	equ	0xFE8
 31087                           postinc1	equ	0xFE6
 31088                           postdec1	equ	0xFE5
 31089                           plusw1	equ	0xFE3
 31090                           fsr1h	equ	0xFE2
 31091                           fsr1l	equ	0xFE1
 31092                           indf2	equ	0xFDF
 31093                           postinc2	equ	0xFDE
 31094                           postdec2	equ	0xFDD
 31095                           plusw2	equ	0xFDB
 31096                           fsr2h	equ	0xFDA
 31097                           fsr2l	equ	0xFD9
 31098                           status	equ	0xFD8
 31099                           
 31100 ;; *************** function _LORAWAN_Init *****************
 31101 ;; Defined at:
 31102 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31103 ;; Parameters:    Size  Location     Type
 31104 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 31105 ;;		 -> RxDataDone(1), 
 31106 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 31107 ;;		 -> RxJoinResponse(1), 
 31108 ;; Auto vars:     Size  Location     Type
 31109 ;;		None
 31110 ;; Return value:  Size  Location     Type
 31111 ;;                  1    wreg      void 
 31112 ;; Registers used:
 31113 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31114 ;; Tracked objects:
 31115 ;;		On entry : F/0
 31116 ;;		On exit  : D/0
 31117 ;;		Unchanged: 0/0
 31118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31122 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31123 ;;Total ram usage:        4 bytes
 31124 ;; Hardware stack levels used:    1
 31125 ;; Hardware stack levels required when called:   13
 31126 ;; This function calls:
 31127 ;;		_CreateAllSoftwareTimers
 31128 ;;		_LORAWAN_Reset
 31129 ;;		_RADIO_Init
 31130 ;;		_RADIO_ReadRandom
 31131 ;;		_SetCallbackSoftwareTimers
 31132 ;;		_StopAllSoftwareTimers
 31133 ;;		_srand
 31134 ;; This function is called by:
 31135 ;;		_main
 31136 ;; This function uses a non-reentrant model
 31137 ;;
 31138                           
 31139                           	psect	text159
 31140  006776                     __ptext159:
 31141                           	opt stack 0
 31142  006776                     _LORAWAN_Init:
 31143                           	opt stack 17
 31144                           
 31145                           ; BSR set to: 0
 31146                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 31147                           
 31148                           ; BSR set to: 0
 31149                           ;incstack = 0
 31150  006776  0102               	movlb	2	; () banked
 31151  006778  51F0               	movf	(_loRa+240)& (0+255),w,b
 31152  00677A  E108               	bnz	l15542
 31153                           
 31154                           ; BSR set to: 2
 31155                           ;lorawan_eu.c: 127: {
 31156                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 31157  00677C  ECC2  F034         	call	_CreateAllSoftwareTimers	;wreg free
 31158                           
 31159                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 31160  006780  ECC9  F02A         	call	_SetCallbackSoftwareTimers	;wreg free
 31161                           
 31162                           ; BSR set to: 0
 31163                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 31164  006784  0E01               	movlw	1
 31165  006786  0102               	movlb	2	; () banked
 31166  006788  6FF0               	movwf	(_loRa+240)& (0+255),b
 31167                           
 31168                           ;lorawan_eu.c: 131: }
 31169  00678A  D002               	goto	l15544
 31170  00678C                     l15542:
 31171                           
 31172                           ; BSR set to: 2
 31173                           ;lorawan_eu.c: 132: else
 31174                           ;lorawan_eu.c: 133: {
 31175                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 31176  00678C  EC39  F035         	call	_StopAllSoftwareTimers	;wreg free
 31177  006790                     l15544:
 31178                           
 31179                           ;lorawan_eu.c: 135: }
 31180                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 31181  006790  C0A6  F0E8         	movff	LORAWAN_Init@RxPayload,_rxPayload
 31182  006794  C0A7  F0E9         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 31183                           
 31184                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 31185  006798  C0A8  F0EA         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 31186  00679C  C0A9  F0EB         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 31187                           
 31188                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 31189  0067A0  0EFF               	movlw	low (_radioBuffer+16)
 31190  0067A2  0100               	movlb	0	; () banked
 31191  0067A4  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31192  0067A6  0E05               	movlw	high (_radioBuffer+16)
 31193  0067A8  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31194  0067AA  0EA0               	movlw	160
 31195  0067AC  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31196  0067AE  0E27               	movlw	39
 31197  0067B0  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31198  0067B2  0EBE               	movlw	190
 31199  0067B4  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31200  0067B6  0E33               	movlw	51
 31201  0067B8  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31202  0067BA  EC45  F01C         	call	_RADIO_Init	;wreg free
 31203                           
 31204                           ; BSR set to: 1
 31205                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 31206  0067BE  EC5F  F02F         	call	_RADIO_ReadRandom	;wreg free
 31207  0067C2  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 31208  0067C6  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 31209  0067CA  ECF1  F03B         	call	_srand	;wreg free
 31210                           
 31211                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 31212  0067CE  0E00               	movlw	0
 31213  0067D0  EF4F  F01F         	goto	_LORAWAN_Reset
 31214  0067D4                     __end_of_LORAWAN_Init:
 31215                           	opt stack 0
 31216                           tosu	equ	0xFFF
 31217                           tosh	equ	0xFFE
 31218                           tosl	equ	0xFFD
 31219                           pclath	equ	0xFFA
 31220                           tblptru	equ	0xFF8
 31221                           tblptrh	equ	0xFF7
 31222                           tblptrl	equ	0xFF6
 31223                           tablat	equ	0xFF5
 31224                           prodh	equ	0xFF4
 31225                           prodl	equ	0xFF3
 31226                           intcon	equ	0xFF2
 31227                           intcon2	equ	0xFF1
 31228                           intcon3	equ	0xFF0
 31229                           indf0	equ	0xFEF
 31230                           postinc0	equ	0xFEE
 31231                           plusw0	equ	0xFEB
 31232                           fsr0h	equ	0xFEA
 31233                           fsr0l	equ	0xFE9
 31234                           wreg	equ	0xFE8
 31235                           postinc1	equ	0xFE6
 31236                           postdec1	equ	0xFE5
 31237                           plusw1	equ	0xFE3
 31238                           fsr1h	equ	0xFE2
 31239                           fsr1l	equ	0xFE1
 31240                           indf2	equ	0xFDF
 31241                           postinc2	equ	0xFDE
 31242                           postdec2	equ	0xFDD
 31243                           plusw2	equ	0xFDB
 31244                           fsr2h	equ	0xFDA
 31245                           fsr2l	equ	0xFD9
 31246                           status	equ	0xFD8
 31247                           
 31248 ;; *************** function _srand *****************
 31249 ;; Defined at:
 31250 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 31251 ;; Parameters:    Size  Location     Type
 31252 ;;  x               2   21[BANK0 ] unsigned int 
 31253 ;; Auto vars:     Size  Location     Type
 31254 ;;		None
 31255 ;; Return value:  Size  Location     Type
 31256 ;;                  1    wreg      void 
 31257 ;; Registers used:
 31258 ;;		status,2
 31259 ;; Tracked objects:
 31260 ;;		On entry : 0/1
 31261 ;;		On exit  : 0/0
 31262 ;;		Unchanged: 0/0
 31263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31268 ;;Total ram usage:        2 bytes
 31269 ;; Hardware stack levels used:    1
 31270 ;; Hardware stack levels required when called:    7
 31271 ;; This function calls:
 31272 ;;		Nothing
 31273 ;; This function is called by:
 31274 ;;		_LORAWAN_Init
 31275 ;; This function uses a non-reentrant model
 31276 ;;
 31277                           
 31278                           	psect	text160
 31279  0077E2                     __ptext160:
 31280                           	opt stack 0
 31281  0077E2                     _srand:
 31282                           	opt stack 22
 31283                           
 31284                           ;incstack = 0
 31285  0077E2  C075  F052         	movff	srand@x,_randx
 31286  0077E6  C076  F053         	movff	srand@x+1,_randx+1
 31287  0077EA  6A54               	clrf	_randx+2,c
 31288  0077EC  6A55               	clrf	_randx+3,c
 31289  0077EE  0012               	return		;funcret
 31290  0077F0                     __end_of_srand:
 31291                           	opt stack 0
 31292                           tosu	equ	0xFFF
 31293                           tosh	equ	0xFFE
 31294                           tosl	equ	0xFFD
 31295                           pclath	equ	0xFFA
 31296                           tblptru	equ	0xFF8
 31297                           tblptrh	equ	0xFF7
 31298                           tblptrl	equ	0xFF6
 31299                           tablat	equ	0xFF5
 31300                           prodh	equ	0xFF4
 31301                           prodl	equ	0xFF3
 31302                           intcon	equ	0xFF2
 31303                           intcon2	equ	0xFF1
 31304                           intcon3	equ	0xFF0
 31305                           indf0	equ	0xFEF
 31306                           postinc0	equ	0xFEE
 31307                           plusw0	equ	0xFEB
 31308                           fsr0h	equ	0xFEA
 31309                           fsr0l	equ	0xFE9
 31310                           wreg	equ	0xFE8
 31311                           postinc1	equ	0xFE6
 31312                           postdec1	equ	0xFE5
 31313                           plusw1	equ	0xFE3
 31314                           fsr1h	equ	0xFE2
 31315                           fsr1l	equ	0xFE1
 31316                           indf2	equ	0xFDF
 31317                           postinc2	equ	0xFDE
 31318                           postdec2	equ	0xFDD
 31319                           plusw2	equ	0xFDB
 31320                           fsr2h	equ	0xFDA
 31321                           fsr2l	equ	0xFD9
 31322                           status	equ	0xFD8
 31323                           
 31324 ;; *************** function _SetCallbackSoftwareTimers *****************
 31325 ;; Defined at:
 31326 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31327 ;; Parameters:    Size  Location     Type
 31328 ;;		None
 31329 ;; Auto vars:     Size  Location     Type
 31330 ;;		None
 31331 ;; Return value:  Size  Location     Type
 31332 ;;                  1    wreg      void 
 31333 ;; Registers used:
 31334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31335 ;; Tracked objects:
 31336 ;;		On entry : F/2
 31337 ;;		On exit  : F/0
 31338 ;;		Unchanged: 0/0
 31339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31344 ;;Total ram usage:        0 bytes
 31345 ;; Hardware stack levels used:    1
 31346 ;; Hardware stack levels required when called:    8
 31347 ;; This function calls:
 31348 ;;		_SwTimerSetCallback
 31349 ;; This function is called by:
 31350 ;;		_LORAWAN_Init
 31351 ;; This function uses a non-reentrant model
 31352 ;;
 31353                           
 31354                           	psect	text161
 31355  005592                     __ptext161:
 31356                           	opt stack 0
 31357  005592                     _SetCallbackSoftwareTimers:
 31358                           	opt stack 21
 31359                           
 31360                           ; BSR set to: 2
 31361                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 31362                           
 31363                           ;incstack = 0
 31364  005592  0E48               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31365  005594  0100               	movlb	0	; () banked
 31366  005596  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31367  005598  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31368  00559A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31369  00559C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31370  00559E  0102               	movlb	2	; () banked
 31371  0055A0  51E2               	movf	(_loRa+226)& (0+255),w,b
 31372  0055A2  EC6D  F038         	call	_SwTimerSetCallback
 31373                           
 31374                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 31375  0055A6  0E52               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31376  0055A8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31377  0055AA  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31378  0055AC  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31379  0055AE  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31380  0055B0  0102               	movlb	2	; () banked
 31381  0055B2  51E3               	movf	(_loRa+227)& (0+255),w,b
 31382  0055B4  EC6D  F038         	call	_SwTimerSetCallback
 31383                           
 31384                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 31385  0055B8  0EFC               	movlw	low _LORAWAN_LinkCheckCallback
 31386  0055BA  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31387  0055BC  0E3F               	movlw	high _LORAWAN_LinkCheckCallback
 31388  0055BE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31389  0055C0  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31390  0055C2  0102               	movlb	2	; () banked
 31391  0055C4  51E7               	movf	(_loRa+231)& (0+255),w,b
 31392  0055C6  EC6D  F038         	call	_SwTimerSetCallback
 31393                           
 31394                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 31395  0055CA  0E48               	movlw	low _LORAWAN_ReceiveWindow1Callback
 31396  0055CC  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31397  0055CE  0E56               	movlw	high _LORAWAN_ReceiveWindow1Callback
 31398  0055D0  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31399  0055D2  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31400  0055D4  0102               	movlb	2	; () banked
 31401  0055D6  51E4               	movf	(_loRa+228)& (0+255),w,b
 31402  0055D8  EC6D  F038         	call	_SwTimerSetCallback
 31403                           
 31404                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 31405  0055DC  0E52               	movlw	low _LORAWAN_ReceiveWindow2Callback
 31406  0055DE  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31407  0055E0  0E53               	movlw	high _LORAWAN_ReceiveWindow2Callback
 31408  0055E2  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31409  0055E4  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31410  0055E6  0102               	movlb	2	; () banked
 31411  0055E8  51E5               	movf	(_loRa+229)& (0+255),w,b
 31412  0055EA  EC6D  F038         	call	_SwTimerSetCallback
 31413                           
 31414                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 31415  0055EE  0E7A               	movlw	low _AckRetransmissionCallback
 31416  0055F0  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31417  0055F2  0E4A               	movlw	high _AckRetransmissionCallback
 31418  0055F4  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31419  0055F6  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31420  0055F8  0102               	movlb	2	; () banked
 31421  0055FA  51E8               	movf	(_loRa+232)& (0+255),w,b
 31422  0055FC  EC6D  F038         	call	_SwTimerSetCallback
 31423                           
 31424                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 31425  005600  0EB0               	movlw	low _AutomaticReplyCallback
 31426  005602  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31427  005604  0E74               	movlw	high _AutomaticReplyCallback
 31428  005606  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31429  005608  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31430  00560A  0102               	movlb	2	; () banked
 31431  00560C  51E6               	movf	(_loRa+230)& (0+255),w,b
 31432  00560E  EC6D  F038         	call	_SwTimerSetCallback
 31433                           
 31434                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 31435  005612  0ED2               	movlw	low _UnconfirmedTransmissionCallback
 31436  005614  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31437  005616  0E62               	movlw	high _UnconfirmedTransmissionCallback
 31438  005618  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31439  00561A  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31440  00561C  0102               	movlb	2	; () banked
 31441  00561E  51EA               	movf	(_loRa+234)& (0+255),w,b
 31442  005620  EC6D  F038         	call	_SwTimerSetCallback
 31443                           
 31444                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 31445  005624  0E24               	movlw	low _UpdateJoinSuccessState
 31446  005626  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31447  005628  0E45               	movlw	high _UpdateJoinSuccessState
 31448  00562A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31449  00562C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31450  00562E  0102               	movlb	2	; () banked
 31451  005630  51F3               	movf	(_loRa+243)& (0+255),w,b
 31452  005632  EC6D  F038         	call	_SwTimerSetCallback
 31453                           
 31454                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 31455  005636  0E20               	movlw	low _DutyCycleCallback
 31456  005638  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 31457  00563A  0E21               	movlw	high _DutyCycleCallback
 31458  00563C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 31459  00563E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 31460  005640  0102               	movlb	2	; () banked
 31461  005642  51E9               	movf	(_loRa+233)& (0+255),w,b
 31462  005644  EF6D  F038         	goto	_SwTimerSetCallback
 31463  005648                     __end_of_SetCallbackSoftwareTimers:
 31464                           	opt stack 0
 31465                           tosu	equ	0xFFF
 31466                           tosh	equ	0xFFE
 31467                           tosl	equ	0xFFD
 31468                           pclath	equ	0xFFA
 31469                           tblptru	equ	0xFF8
 31470                           tblptrh	equ	0xFF7
 31471                           tblptrl	equ	0xFF6
 31472                           tablat	equ	0xFF5
 31473                           prodh	equ	0xFF4
 31474                           prodl	equ	0xFF3
 31475                           intcon	equ	0xFF2
 31476                           intcon2	equ	0xFF1
 31477                           intcon3	equ	0xFF0
 31478                           indf0	equ	0xFEF
 31479                           postinc0	equ	0xFEE
 31480                           plusw0	equ	0xFEB
 31481                           fsr0h	equ	0xFEA
 31482                           fsr0l	equ	0xFE9
 31483                           wreg	equ	0xFE8
 31484                           postinc1	equ	0xFE6
 31485                           postdec1	equ	0xFE5
 31486                           plusw1	equ	0xFE3
 31487                           fsr1h	equ	0xFE2
 31488                           fsr1l	equ	0xFE1
 31489                           indf2	equ	0xFDF
 31490                           postinc2	equ	0xFDE
 31491                           postdec2	equ	0xFDD
 31492                           plusw2	equ	0xFDB
 31493                           fsr2h	equ	0xFDA
 31494                           fsr2l	equ	0xFD9
 31495                           status	equ	0xFD8
 31496                           
 31497 ;; *************** function _RADIO_ReadRandom *****************
 31498 ;; Defined at:
 31499 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31500 ;; Parameters:    Size  Location     Type
 31501 ;;		None
 31502 ;; Auto vars:     Size  Location     Type
 31503 ;;  retVal          2   18[BANK0 ] unsigned int 
 31504 ;;  i               1   20[BANK0 ] unsigned char 
 31505 ;; Return value:  Size  Location     Type
 31506 ;;                  2   16[BANK0 ] unsigned int 
 31507 ;; Registers used:
 31508 ;;		wreg, status,2, status,0, cstack
 31509 ;; Tracked objects:
 31510 ;;		On entry : F/1
 31511 ;;		On exit  : 0/0
 31512 ;;		Unchanged: 0/0
 31513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31515 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31517 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31518 ;;Total ram usage:        5 bytes
 31519 ;; Hardware stack levels used:    1
 31520 ;; Hardware stack levels required when called:   11
 31521 ;; This function calls:
 31522 ;;		_RADIO_RegisterRead
 31523 ;;		_RADIO_RegisterWrite
 31524 ;;		_RADIO_WriteMode
 31525 ;;		_SystemBlockingWaitMs
 31526 ;; This function is called by:
 31527 ;;		_LORAWAN_Init
 31528 ;; This function uses a non-reentrant model
 31529 ;;
 31530                           
 31531                           	psect	text162
 31532  005EBE                     __ptext162:
 31533                           	opt stack 0
 31534  005EBE                     _RADIO_ReadRandom:
 31535                           	opt stack 18
 31536                           
 31537                           ; BSR set to: 1
 31538                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 31539                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 31540                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 31541                           
 31542                           ; BSR set to: 0
 31543                           ;incstack = 0
 31544  005EBE  0100               	movlb	0	; () banked
 31545  005EC0  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 31546  005EC2  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 31547                           
 31548                           ; BSR set to: 0
 31549                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31550  005EC4  0E01               	movlw	1
 31551  005EC6  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31552  005EC8  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31553  005ECA  0E00               	movlw	0
 31554  005ECC  EC6E  F028         	call	_RADIO_WriteMode
 31555                           
 31556                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 31557  005ED0  0100               	movlb	0	; () banked
 31558  005ED2  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31559  005ED4  0E11               	movlw	17
 31560  005ED6  EC85  F03A         	call	_RADIO_RegisterWrite
 31561                           
 31562                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 31563  005EDA  0E01               	movlw	1
 31564  005EDC  0100               	movlb	0	; () banked
 31565  005EDE  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31566  005EE0  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31567  005EE2  0E05               	movlw	5
 31568  005EE4  EC6E  F028         	call	_RADIO_WriteMode
 31569                           
 31570                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 31571  005EE8  0100               	movlb	0	; () banked
 31572  005EEA  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 31573  005EEC                     l15340:
 31574                           
 31575                           ; BSR set to: 0
 31576                           ;radio_driver_SX1276.c: 1377: {
 31577                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 31578  005EEC  0E01               	movlw	1
 31579  005EEE  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 31580  005EF0  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 31581  005EF2  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 31582  005EF4  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 31583  005EF6  EC22  F039         	call	_SystemBlockingWaitMs	;wreg free
 31584                           
 31585                           ; BSR set to: 0
 31586                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 31587  005EFA  90D8               	bcf	status,0,c
 31588  005EFC  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 31589  005EFE  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 31590                           
 31591                           ; BSR set to: 0
 31592                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 31593  005F00  0E2C               	movlw	44
 31594  005F02  ECAE  F039         	call	_RADIO_RegisterRead
 31595  005F06  0B01               	andlw	1
 31596  005F08  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 31597  005F0A  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 31598                           
 31599                           ; BSR set to: 0
 31600  005F0C  0E0F               	movlw	15
 31601  005F0E  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 31602  005F10  D7ED               	goto	l15340
 31603                           
 31604                           ; BSR set to: 0
 31605                           ;radio_driver_SX1276.c: 1381: }
 31606                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 31607  005F12  0E01               	movlw	1
 31608  005F14  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 31609  005F16  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 31610  005F18  0E00               	movlw	0
 31611  005F1A  EC6E  F028         	call	_RADIO_WriteMode
 31612                           
 31613                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 31614  005F1E  0100               	movlb	0	; () banked
 31615  005F20  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 31616  005F22  0E12               	movlw	18
 31617  005F24  EC85  F03A         	call	_RADIO_RegisterWrite
 31618                           
 31619                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 31620  005F28  0100               	movlb	0	; () banked
 31621  005F2A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 31622  005F2C  0E11               	movlw	17
 31623  005F2E  EC85  F03A         	call	_RADIO_RegisterWrite
 31624                           
 31625                           ;radio_driver_SX1276.c: 1389: return retVal;
 31626  005F32  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 31627  005F36  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 31628  005F3A  0012               	return		;funcret
 31629  005F3C                     __end_of_RADIO_ReadRandom:
 31630                           	opt stack 0
 31631                           tosu	equ	0xFFF
 31632                           tosh	equ	0xFFE
 31633                           tosl	equ	0xFFD
 31634                           pclath	equ	0xFFA
 31635                           tblptru	equ	0xFF8
 31636                           tblptrh	equ	0xFF7
 31637                           tblptrl	equ	0xFF6
 31638                           tablat	equ	0xFF5
 31639                           prodh	equ	0xFF4
 31640                           prodl	equ	0xFF3
 31641                           intcon	equ	0xFF2
 31642                           intcon2	equ	0xFF1
 31643                           intcon3	equ	0xFF0
 31644                           indf0	equ	0xFEF
 31645                           postinc0	equ	0xFEE
 31646                           plusw0	equ	0xFEB
 31647                           fsr0h	equ	0xFEA
 31648                           fsr0l	equ	0xFE9
 31649                           wreg	equ	0xFE8
 31650                           postinc1	equ	0xFE6
 31651                           postdec1	equ	0xFE5
 31652                           plusw1	equ	0xFE3
 31653                           fsr1h	equ	0xFE2
 31654                           fsr1l	equ	0xFE1
 31655                           indf2	equ	0xFDF
 31656                           postinc2	equ	0xFDE
 31657                           postdec2	equ	0xFDD
 31658                           plusw2	equ	0xFDB
 31659                           fsr2h	equ	0xFDA
 31660                           fsr2l	equ	0xFD9
 31661                           status	equ	0xFD8
 31662                           
 31663 ;; *************** function _LORAWAN_Reset *****************
 31664 ;; Defined at:
 31665 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31666 ;; Parameters:    Size  Location     Type
 31667 ;;  ismBandNew      1    wreg     enum E8047
 31668 ;; Auto vars:     Size  Location     Type
 31669 ;;  ismBandNew      1   69[BANK0 ] enum E8047
 31670 ;; Return value:  Size  Location     Type
 31671 ;;                  1    wreg      void 
 31672 ;; Registers used:
 31673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31674 ;; Tracked objects:
 31675 ;;		On entry : 0/1
 31676 ;;		On exit  : D/0
 31677 ;;		Unchanged: 0/0
 31678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31680 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31682 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31683 ;;Total ram usage:        1 bytes
 31684 ;; Hardware stack levels used:    1
 31685 ;; Hardware stack levels required when called:   12
 31686 ;; This function calls:
 31687 ;;		_InitDefault433Channels
 31688 ;;		_InitDefault868Channels
 31689 ;;		_LORAWAN_LinkCheckConfigure
 31690 ;;		_RADIO_Init
 31691 ;;		_RADIO_SetLoRaSyncWord
 31692 ;;		_StopAllSoftwareTimers
 31693 ;;		_UpdateMinMaxChDataRate
 31694 ;;		_memset
 31695 ;; This function is called by:
 31696 ;;		_LORAWAN_Init
 31697 ;; This function uses a non-reentrant model
 31698 ;;
 31699                           
 31700                           	psect	text163
 31701  003E9E                     __ptext163:
 31702                           	opt stack 0
 31703  003E9E                     _LORAWAN_Reset:
 31704                           	opt stack 17
 31705                           
 31706                           ;incstack = 0
 31707                           ;LORAWAN_Reset@ismBandNew stored from wreg
 31708  003E9E  0100               	movlb	0	; () banked
 31709  003EA0  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 31710                           
 31711                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 31712  003EA2  0102               	movlb	2	; () banked
 31713  003EA4  05F0               	decf	(_loRa+240)& (0+255),w,b
 31714  003EA6  E102               	bnz	l15360
 31715                           
 31716                           ; BSR set to: 2
 31717                           ;lorawan_eu.c: 151: {
 31718                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 31719  003EA8  EC39  F035         	call	_StopAllSoftwareTimers	;wreg free
 31720  003EAC                     l15360:
 31721                           
 31722                           ;lorawan_eu.c: 153: }
 31723                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 31724  003EAC  0E34               	movlw	52
 31725  003EAE  0102               	movlb	2	; () banked
 31726  003EB0  6FF4               	movwf	(_loRa+244)& (0+255),b
 31727                           
 31728                           ; BSR set to: 2
 31729                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 31730  003EB2  51F4               	movf	(_loRa+244)& (0+255),w,b
 31731  003EB4  EC5E  F03C         	call	_RADIO_SetLoRaSyncWord
 31732                           
 31733                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 31734  003EB8  0102               	movlb	2	; () banked
 31735  003EBA  6B02               	clrf	(_loRa+2)& (0+255),b
 31736  003EBC  6B03               	clrf	(_loRa+3)& (0+255),b
 31737  003EBE  6B04               	clrf	(_loRa+4)& (0+255),b
 31738  003EC0  6B05               	clrf	(_loRa+5)& (0+255),b
 31739                           
 31740                           ; BSR set to: 2
 31741                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 31742  003EC2  69DD               	setf	(_loRa+221)& (0+255),b
 31743                           
 31744                           ; BSR set to: 2
 31745                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 31746  003EC4  6BDE               	clrf	(_loRa+222)& (0+255),b
 31747                           
 31748                           ; BSR set to: 2
 31749                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 31750  003EC6  6BC8               	clrf	(_loRa+200)& (0+255),b
 31751  003EC8  6BC9               	clrf	(_loRa+201)& (0+255),b
 31752  003ECA  6BCA               	clrf	(_loRa+202)& (0+255),b
 31753  003ECC  6BCB               	clrf	(_loRa+203)& (0+255),b
 31754                           
 31755                           ; BSR set to: 2
 31756                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 31757  003ECE  6BD4               	clrf	(_loRa+212)& (0+255),b
 31758  003ED0  6BD5               	clrf	(_loRa+213)& (0+255),b
 31759                           
 31760                           ; BSR set to: 2
 31761                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 31762  003ED2  6B0A               	clrf	(_loRa+10)& (0+255),b
 31763  003ED4  6B0B               	clrf	(_loRa+11)& (0+255),b
 31764  003ED6  6B0C               	clrf	(_loRa+12)& (0+255),b
 31765  003ED8  6B0D               	clrf	(_loRa+13)& (0+255),b
 31766                           
 31767                           ; BSR set to: 2
 31768                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 31769  003EDA  6B06               	clrf	(_loRa+6)& (0+255),b
 31770  003EDC  6B07               	clrf	(_loRa+7)& (0+255),b
 31771  003EDE  6B08               	clrf	(_loRa+8)& (0+255),b
 31772  003EE0  6B09               	clrf	(_loRa+9)& (0+255),b
 31773                           
 31774                           ; BSR set to: 2
 31775                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 31776  003EE2  6BD2               	clrf	(_loRa+210)& (0+255),b
 31777  003EE4  6BD3               	clrf	(_loRa+211)& (0+255),b
 31778                           
 31779                           ; BSR set to: 2
 31780                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 31781  003EE6  6BDC               	clrf	(_loRa+220)& (0+255),b
 31782  003EE8  0E01               	movlw	1
 31783  003EEA  6FDB               	movwf	(_loRa+219)& (0+255),b
 31784                           
 31785                           ; BSR set to: 2
 31786                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 31787  003EEC  6BD0               	clrf	(_loRa+208)& (0+255),b
 31788  003EEE  6BD1               	clrf	(_loRa+209)& (0+255),b
 31789                           
 31790                           ; BSR set to: 2
 31791                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 31792  003EF0  6BEE               	clrf	(_loRa+238)& (0+255),b
 31793                           
 31794                           ; BSR set to: 2
 31795                           ;lorawan_eu.c: 169: loRa.offset = 0;
 31796  003EF2  6BEF               	clrf	(_loRa+239)& (0+255),b
 31797                           
 31798                           ; BSR set to: 2
 31799                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 31800  003EF4  6BC8               	clrf	(_loRa+200)& (0+255),b
 31801  003EF6  6BC9               	clrf	(_loRa+201)& (0+255),b
 31802  003EF8  6BCA               	clrf	(_loRa+202)& (0+255),b
 31803  003EFA  6BCB               	clrf	(_loRa+203)& (0+255),b
 31804                           
 31805                           ; BSR set to: 2
 31806                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 31807  003EFC  9503               	bcf	(_loRa+3)& (0+255),2,b
 31808                           
 31809                           ; BSR set to: 2
 31810                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 31811  003EFE  6B02               	clrf	(_loRa+2)& (0+255),b
 31812  003F00  6B03               	clrf	(_loRa+3)& (0+255),b
 31813  003F02  6B04               	clrf	(_loRa+4)& (0+255),b
 31814  003F04  6B05               	clrf	(_loRa+5)& (0+255),b
 31815                           
 31816                           ; BSR set to: 2
 31817                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 31818  003F06  6B00               	clrf	_loRa& (0+255),b
 31819  003F08  6B01               	clrf	(_loRa+1)& (0+255),b
 31820                           
 31821                           ; BSR set to: 2
 31822                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 31823  003F0A  0E07               	movlw	7
 31824  003F0C  6FD7               	movwf	(_loRa+215)& (0+255),b
 31825                           
 31826                           ; BSR set to: 2
 31827                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 31828  003F0E  6BD6               	clrf	(_loRa+214)& (0+255),b
 31829                           
 31830                           ; BSR set to: 2
 31831                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 31832  003F10  0E01               	movlw	1
 31833  003F12  6FD9               	movwf	(_loRa+217)& (0+255),b
 31834                           
 31835                           ; BSR set to: 2
 31836                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 31837  003F14  6FD8               	movwf	(_loRa+216)& (0+255),b
 31838                           
 31839                           ; BSR set to: 2
 31840                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 31841  003F16  69E0               	setf	(_loRa+224)& (0+255),b
 31842                           
 31843                           ; BSR set to: 2
 31844                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 31845  003F18  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 31846                           
 31847                           ; BSR set to: 2
 31848                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 31849  003F1C  6B12               	clrf	(_loRa+18)& (0+255),b
 31850                           
 31851                           ; BSR set to: 2
 31852                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 31853  003F1E  0E10               	movlw	16
 31854  003F20  6FED               	movwf	(_loRa+237)& (0+255),b
 31855                           
 31856                           ; BSR set to: 2
 31857                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 31858  003F22  0100               	movlb	0	; () banked
 31859  003F24  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 31860  003F26  E11A               	bnz	l15422
 31861                           
 31862                           ; BSR set to: 0
 31863                           ;lorawan_eu.c: 193: {
 31864                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 31865  003F28  0EFF               	movlw	low (_radioBuffer+16)
 31866  003F2A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31867  003F2C  0E05               	movlw	high (_radioBuffer+16)
 31868  003F2E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31869  003F30  0EA0               	movlw	160
 31870  003F32  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31871  003F34  0E27               	movlw	39
 31872  003F36  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31873  003F38  0EBE               	movlw	190
 31874  003F3A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31875  003F3C  0E33               	movlw	51
 31876  003F3E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31877  003F40  EC45  F01C         	call	_RADIO_Init	;wreg free
 31878                           
 31879                           ; BSR set to: 1
 31880                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 31881  003F44  ECCF  F031         	call	_InitDefault868Channels	;wreg free
 31882                           
 31883                           ; BSR set to: 0
 31884                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 31885  003F48  0102               	movlb	2	; () banked
 31886  003F4A  6B1C               	clrf	(_loRa+28)& (0+255),b
 31887                           
 31888                           ; BSR set to: 2
 31889                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 31890  003F4C  0E08               	movlw	8
 31891  003F4E  6F18               	movwf	(_loRa+24)& (0+255),b
 31892  003F50  0EE6               	movlw	230
 31893  003F52  6F19               	movwf	(_loRa+25)& (0+255),b
 31894  003F54  0ED3               	movlw	211
 31895  003F56  6F1A               	movwf	(_loRa+26)& (0+255),b
 31896  003F58  0E33               	movlw	51
 31897  003F5A  D019               	goto	L20
 31898  003F5C                     l15422:
 31899                           
 31900                           ; BSR set to: 0
 31901                           ;lorawan_eu.c: 201: else
 31902                           ;lorawan_eu.c: 202: {
 31903                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 31904  003F5C  0EFF               	movlw	low (_radioBuffer+16)
 31905  003F5E  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 31906  003F60  0E05               	movlw	high (_radioBuffer+16)
 31907  003F62  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 31908  003F64  0E20               	movlw	32
 31909  003F66  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 31910  003F68  0EA2               	movlw	162
 31911  003F6A  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 31912  003F6C  0ED3               	movlw	211
 31913  003F6E  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 31914  003F70  0E19               	movlw	25
 31915  003F72  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 31916  003F74  EC45  F01C         	call	_RADIO_Init	;wreg free
 31917                           
 31918                           ; BSR set to: 1
 31919                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 31920  003F78  EC02  F032         	call	_InitDefault433Channels	;wreg free
 31921                           
 31922                           ; BSR set to: 0
 31923                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 31924  003F7C  0102               	movlb	2	; () banked
 31925  003F7E  6B1C               	clrf	(_loRa+28)& (0+255),b
 31926                           
 31927                           ; BSR set to: 2
 31928                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 31929  003F80  0E28               	movlw	40
 31930  003F82  6F18               	movwf	(_loRa+24)& (0+255),b
 31931  003F84  0E76               	movlw	118
 31932  003F86  6F19               	movwf	(_loRa+25)& (0+255),b
 31933  003F88  0EE8               	movlw	232
 31934  003F8A  6F1A               	movwf	(_loRa+26)& (0+255),b
 31935  003F8C  0E19               	movlw	25
 31936  003F8E                     L20:
 31937  003F8E  6F1B               	movwf	(_loRa+27)& (0+255),b
 31938                           
 31939                           ; BSR set to: 2
 31940                           ;lorawan_eu.c: 209: }
 31941                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 31942  003F90  0E01               	movlw	1
 31943  003F92  6FE1               	movwf	(_loRa+225)& (0+255),b
 31944                           
 31945                           ; BSR set to: 2
 31946                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 31947  003F94  6BDF               	clrf	(_loRa+223)& (0+255),b
 31948                           
 31949                           ; BSR set to: 2
 31950                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 31951  003F96  EC7E  F02B         	call	_UpdateMinMaxChDataRate	;wreg free
 31952                           
 31953                           ; BSR set to: 0
 31954                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 31955  003F9A  0102               	movlb	2	; () banked
 31956  003F9C  6BA5               	clrf	(_loRa+165)& (0+255),b
 31957  003F9E  6BA6               	clrf	(_loRa+166)& (0+255),b
 31958                           
 31959                           ; BSR set to: 2
 31960                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 31961  003FA0  0E1D               	movlw	low (_loRa+29)
 31962  003FA2  0100               	movlb	0	; () banked
 31963  003FA4  6F64               	movwf	memset@p1& (0+255),b
 31964  003FA6  0E02               	movlw	high (_loRa+29)
 31965  003FA8  6F65               	movwf	(memset@p1+1)& (0+255),b
 31966  003FAA  6B67               	clrf	(memset@c+1)& (0+255),b
 31967  003FAC  6B66               	clrf	memset@c& (0+255),b
 31968  003FAE  6B69               	clrf	(memset@n+1)& (0+255),b
 31969  003FB0  0E69               	movlw	105
 31970  003FB2  6F68               	movwf	memset@n& (0+255),b
 31971  003FB4  EC37  F039         	call	_memset	;wreg free
 31972                           
 31973                           ; BSR set to: 0
 31974                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 31975  003FB8  0E03               	movlw	3
 31976  003FBA  0102               	movlb	2	; () banked
 31977  003FBC  6F95               	movwf	(_loRa+149)& (0+255),b
 31978  003FBE  0EE8               	movlw	232
 31979  003FC0  6F94               	movwf	(_loRa+148)& (0+255),b
 31980                           
 31981                           ; BSR set to: 2
 31982                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 31983  003FC2  0E07               	movlw	7
 31984  003FC4  6F97               	movwf	(_loRa+151)& (0+255),b
 31985  003FC6  0ED0               	movlw	208
 31986  003FC8  6F96               	movwf	(_loRa+150)& (0+255),b
 31987                           
 31988                           ; BSR set to: 2
 31989                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 31990  003FCA  0E13               	movlw	19
 31991  003FCC  6F99               	movwf	(_loRa+153)& (0+255),b
 31992  003FCE  0E88               	movlw	136
 31993  003FD0  6F98               	movwf	(_loRa+152)& (0+255),b
 31994                           
 31995                           ; BSR set to: 2
 31996                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 31997  003FD2  0E17               	movlw	23
 31998  003FD4  6F9B               	movwf	(_loRa+155)& (0+255),b
 31999  003FD6  0E70               	movlw	112
 32000  003FD8  6F9A               	movwf	(_loRa+154)& (0+255),b
 32001                           
 32002                           ; BSR set to: 2
 32003                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 32004  003FDA  0E07               	movlw	7
 32005  003FDC  6FA1               	movwf	(_loRa+161)& (0+255),b
 32006  003FDE  0ED0               	movlw	208
 32007  003FE0  6FA0               	movwf	(_loRa+160)& (0+255),b
 32008                           
 32009                           ; BSR set to: 2
 32010                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 32011  003FE2  0E20               	movlw	32
 32012  003FE4  6FA3               	movwf	(_loRa+163)& (0+255),b
 32013                           
 32014                           ; BSR set to: 2
 32015                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 32016  003FE6  0E40               	movlw	64
 32017  003FE8  6FA2               	movwf	(_loRa+162)& (0+255),b
 32018                           
 32019                           ; BSR set to: 2
 32020                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 32021  003FEA  6F9D               	movwf	(_loRa+157)& (0+255),b
 32022  003FEC  6B9C               	clrf	(_loRa+156)& (0+255),b
 32023                           
 32024                           ; BSR set to: 2
 32025                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 32026  003FEE  6F9F               	movwf	(_loRa+159)& (0+255),b
 32027  003FF0  6B9E               	clrf	(_loRa+158)& (0+255),b
 32028                           
 32029                           ; BSR set to: 2
 32030                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 32031  003FF2  0100               	movlb	0	; () banked
 32032  003FF4  6B97               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 32033  003FF6  6B96               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 32034  003FF8  EF77  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 32035  003FFC                     __end_of_LORAWAN_Reset:
 32036                           	opt stack 0
 32037                           tosu	equ	0xFFF
 32038                           tosh	equ	0xFFE
 32039                           tosl	equ	0xFFD
 32040                           pclath	equ	0xFFA
 32041                           tblptru	equ	0xFF8
 32042                           tblptrh	equ	0xFF7
 32043                           tblptrl	equ	0xFF6
 32044                           tablat	equ	0xFF5
 32045                           prodh	equ	0xFF4
 32046                           prodl	equ	0xFF3
 32047                           intcon	equ	0xFF2
 32048                           intcon2	equ	0xFF1
 32049                           intcon3	equ	0xFF0
 32050                           indf0	equ	0xFEF
 32051                           postinc0	equ	0xFEE
 32052                           plusw0	equ	0xFEB
 32053                           fsr0h	equ	0xFEA
 32054                           fsr0l	equ	0xFE9
 32055                           wreg	equ	0xFE8
 32056                           postinc1	equ	0xFE6
 32057                           postdec1	equ	0xFE5
 32058                           plusw1	equ	0xFE3
 32059                           fsr1h	equ	0xFE2
 32060                           fsr1l	equ	0xFE1
 32061                           indf2	equ	0xFDF
 32062                           postinc2	equ	0xFDE
 32063                           postdec2	equ	0xFDD
 32064                           plusw2	equ	0xFDB
 32065                           fsr2h	equ	0xFDA
 32066                           fsr2l	equ	0xFD9
 32067                           status	equ	0xFD8
 32068                           
 32069 ;; *************** function _UpdateMinMaxChDataRate *****************
 32070 ;; Defined at:
 32071 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32072 ;; Parameters:    Size  Location     Type
 32073 ;;		None
 32074 ;; Auto vars:     Size  Location     Type
 32075 ;;  i               1    5[BANK0 ] unsigned char 
 32076 ;; Return value:  Size  Location     Type
 32077 ;;                  1    wreg      void 
 32078 ;; Registers used:
 32079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32080 ;; Tracked objects:
 32081 ;;		On entry : F/2
 32082 ;;		On exit  : F/0
 32083 ;;		Unchanged: 0/0
 32084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32087 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32088 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32089 ;;Total ram usage:        2 bytes
 32090 ;; Hardware stack levels used:    1
 32091 ;; Hardware stack levels required when called:    7
 32092 ;; This function calls:
 32093 ;;		Nothing
 32094 ;; This function is called by:
 32095 ;;		_LORAWAN_Reset
 32096 ;; This function uses a non-reentrant model
 32097 ;;
 32098                           
 32099                           	psect	text164
 32100  0056FC                     __ptext164:
 32101                           	opt stack 0
 32102  0056FC                     _UpdateMinMaxChDataRate:
 32103                           	opt stack 21
 32104                           
 32105                           ; BSR set to: 2
 32106                           ;lorawan.c: 1065: uint8_t i;
 32107                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 32108                           
 32109                           ;incstack = 0
 32110  0056FC  0E07               	movlw	7
 32111  0056FE  6FEB               	movwf	(_loRa+235)& (0+255),b
 32112                           
 32113                           ; BSR set to: 2
 32114                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 32115  005700  6BEC               	clrf	(_loRa+236)& (0+255),b
 32116                           
 32117                           ; BSR set to: 2
 32118                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 32119  005702  0100               	movlb	0	; () banked
 32120  005704  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 32121  005706  D04E               	goto	l10970
 32122  005708                     l10958:
 32123                           
 32124                           ; BSR set to: 0
 32125                           ;lorawan.c: 1072: {
 32126                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 32127  005708  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32128  00570A  0D0E               	mullw	14
 32129  00570C  0E05               	movlw	low (_Channels+5)
 32130  00570E  24F3               	addwf	prodl,w,c
 32131  005710  6ED9               	movwf	fsr2l,c
 32132  005712  0E04               	movlw	high (_Channels+5)
 32133  005714  20F4               	addwfc	prodh,w,c
 32134  005716  6EDA               	movwf	fsr2h,c
 32135  005718  50DF               	movf	223,w,c
 32136  00571A  0B0F               	andlw	15
 32137  00571C  0100               	movlb	0	; () banked
 32138  00571E  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 32139  005720  0102               	movlb	2	; () banked
 32140  005722  51EB               	movf	(_loRa+235)& (0+255),w,b
 32141  005724  0100               	movlb	0	; () banked
 32142  005726  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 32143  005728  E216               	bc	l2095
 32144                           
 32145                           ; BSR set to: 0
 32146  00572A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32147  00572C  0D0E               	mullw	14
 32148  00572E  0E04               	movlw	low (_Channels+4)
 32149  005730  24F3               	addwf	prodl,w,c
 32150  005732  6ED9               	movwf	fsr2l,c
 32151  005734  0E04               	movlw	high (_Channels+4)
 32152  005736  20F4               	addwfc	prodh,w,c
 32153  005738  6EDA               	movwf	fsr2h,c
 32154  00573A  04DE               	decf	postinc2,w,c
 32155  00573C  E10C               	bnz	l2095
 32156                           
 32157                           ; BSR set to: 0
 32158                           ;lorawan.c: 1074: {
 32159                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 32160  00573E  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32161  005740  0D0E               	mullw	14
 32162  005742  0E05               	movlw	low (_Channels+5)
 32163  005744  24F3               	addwf	prodl,w,c
 32164  005746  6ED9               	movwf	fsr2l,c
 32165  005748  0E04               	movlw	high (_Channels+5)
 32166  00574A  20F4               	addwfc	prodh,w,c
 32167  00574C  6EDA               	movwf	fsr2h,c
 32168  00574E  50DF               	movf	223,w,c
 32169  005750  0B0F               	andlw	15
 32170  005752  0102               	movlb	2	; () banked
 32171  005754  6FEB               	movwf	(_loRa+235)& (0+255),b
 32172  005756                     l2095:
 32173                           
 32174                           ;lorawan.c: 1076: }
 32175                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 32176  005756  0100               	movlb	0	; () banked
 32177  005758  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32178  00575A  0D0E               	mullw	14
 32179  00575C  0E05               	movlw	low (_Channels+5)
 32180  00575E  24F3               	addwf	prodl,w,c
 32181  005760  6ED9               	movwf	fsr2l,c
 32182  005762  0E04               	movlw	high (_Channels+5)
 32183  005764  20F4               	addwfc	prodh,w,c
 32184  005766  6EDA               	movwf	fsr2h,c
 32185  005768  38DF               	swapf	223,w,c
 32186  00576A  0B0F               	andlw	15
 32187  00576C  0102               	movlb	2	; () banked
 32188  00576E  61EC               	cpfslt	(_loRa+236)& (0+255),b
 32189  005770  D017               	goto	l10968
 32190                           
 32191                           ; BSR set to: 2
 32192  005772  0100               	movlb	0	; () banked
 32193  005774  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32194  005776  0D0E               	mullw	14
 32195  005778  0E04               	movlw	low (_Channels+4)
 32196  00577A  24F3               	addwf	prodl,w,c
 32197  00577C  6ED9               	movwf	fsr2l,c
 32198  00577E  0E04               	movlw	high (_Channels+4)
 32199  005780  20F4               	addwfc	prodh,w,c
 32200  005782  6EDA               	movwf	fsr2h,c
 32201  005784  04DE               	decf	postinc2,w,c
 32202  005786  E10C               	bnz	l10968
 32203                           
 32204                           ; BSR set to: 0
 32205                           ;lorawan.c: 1078: {
 32206                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 32207  005788  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32208  00578A  0D0E               	mullw	14
 32209  00578C  0E05               	movlw	low (_Channels+5)
 32210  00578E  24F3               	addwf	prodl,w,c
 32211  005790  6ED9               	movwf	fsr2l,c
 32212  005792  0E04               	movlw	high (_Channels+5)
 32213  005794  20F4               	addwfc	prodh,w,c
 32214  005796  6EDA               	movwf	fsr2h,c
 32215  005798  38DF               	swapf	223,w,c
 32216  00579A  0B0F               	andlw	15
 32217  00579C  0102               	movlb	2	; () banked
 32218  00579E  6FEC               	movwf	(_loRa+236)& (0+255),b
 32219  0057A0                     l10968:
 32220  0057A0  0100               	movlb	0	; () banked
 32221  0057A2  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 32222  0057A4                     l10970:
 32223                           
 32224                           ; BSR set to: 0
 32225  0057A4  0102               	movlb	2	; () banked
 32226  0057A6  51ED               	movf	(_loRa+237)& (0+255),w,b
 32227  0057A8  0100               	movlb	0	; () banked
 32228  0057AA  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32229  0057AC  E3AD               	bnc	l10958
 32230                           
 32231                           ; BSR set to: 0
 32232  0057AE  0012               	return		;funcret
 32233  0057B0                     __end_of_UpdateMinMaxChDataRate:
 32234                           	opt stack 0
 32235                           tosu	equ	0xFFF
 32236                           tosh	equ	0xFFE
 32237                           tosl	equ	0xFFD
 32238                           pclath	equ	0xFFA
 32239                           tblptru	equ	0xFF8
 32240                           tblptrh	equ	0xFF7
 32241                           tblptrl	equ	0xFF6
 32242                           tablat	equ	0xFF5
 32243                           prodh	equ	0xFF4
 32244                           prodl	equ	0xFF3
 32245                           intcon	equ	0xFF2
 32246                           intcon2	equ	0xFF1
 32247                           intcon3	equ	0xFF0
 32248                           indf0	equ	0xFEF
 32249                           postinc0	equ	0xFEE
 32250                           plusw0	equ	0xFEB
 32251                           fsr0h	equ	0xFEA
 32252                           fsr0l	equ	0xFE9
 32253                           wreg	equ	0xFE8
 32254                           postinc1	equ	0xFE6
 32255                           postdec1	equ	0xFE5
 32256                           plusw1	equ	0xFE3
 32257                           fsr1h	equ	0xFE2
 32258                           fsr1l	equ	0xFE1
 32259                           indf2	equ	0xFDF
 32260                           postinc2	equ	0xFDE
 32261                           postdec2	equ	0xFDD
 32262                           plusw2	equ	0xFDB
 32263                           fsr2h	equ	0xFDA
 32264                           fsr2l	equ	0xFD9
 32265                           status	equ	0xFD8
 32266                           
 32267 ;; *************** function _StopAllSoftwareTimers *****************
 32268 ;; Defined at:
 32269 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32270 ;; Parameters:    Size  Location     Type
 32271 ;;		None
 32272 ;; Auto vars:     Size  Location     Type
 32273 ;;		None
 32274 ;; Return value:  Size  Location     Type
 32275 ;;                  1    wreg      void 
 32276 ;; Registers used:
 32277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32278 ;; Tracked objects:
 32279 ;;		On entry : F/2
 32280 ;;		On exit  : F/0
 32281 ;;		Unchanged: 0/0
 32282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32287 ;;Total ram usage:        0 bytes
 32288 ;; Hardware stack levels used:    1
 32289 ;; Hardware stack levels required when called:    8
 32290 ;; This function calls:
 32291 ;;		_SwTimerStop
 32292 ;; This function is called by:
 32293 ;;		_LORAWAN_Init
 32294 ;;		_LORAWAN_Reset
 32295 ;; This function uses a non-reentrant model
 32296 ;;
 32297                           
 32298                           	psect	text165
 32299  006A72                     __ptext165:
 32300                           	opt stack 0
 32301  006A72                     _StopAllSoftwareTimers:
 32302                           	opt stack 21
 32303                           
 32304                           ; BSR set to: 2
 32305                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 32306                           
 32307                           ; BSR set to: 0
 32308                           ;incstack = 0
 32309  006A72  51E2               	movf	(_loRa+226)& (0+255),w,b
 32310  006A74  ECB2  F03A         	call	_SwTimerStop
 32311                           
 32312                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 32313  006A78  0102               	movlb	2	; () banked
 32314  006A7A  51E3               	movf	(_loRa+227)& (0+255),w,b
 32315  006A7C  ECB2  F03A         	call	_SwTimerStop
 32316                           
 32317                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 32318  006A80  0102               	movlb	2	; () banked
 32319  006A82  51E7               	movf	(_loRa+231)& (0+255),w,b
 32320  006A84  ECB2  F03A         	call	_SwTimerStop
 32321                           
 32322                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 32323  006A88  0102               	movlb	2	; () banked
 32324  006A8A  51E4               	movf	(_loRa+228)& (0+255),w,b
 32325  006A8C  ECB2  F03A         	call	_SwTimerStop
 32326                           
 32327                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 32328  006A90  0102               	movlb	2	; () banked
 32329  006A92  51E5               	movf	(_loRa+229)& (0+255),w,b
 32330  006A94  ECB2  F03A         	call	_SwTimerStop
 32331                           
 32332                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 32333  006A98  0102               	movlb	2	; () banked
 32334  006A9A  51E8               	movf	(_loRa+232)& (0+255),w,b
 32335  006A9C  ECB2  F03A         	call	_SwTimerStop
 32336                           
 32337                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 32338  006AA0  0102               	movlb	2	; () banked
 32339  006AA2  51E6               	movf	(_loRa+230)& (0+255),w,b
 32340  006AA4  ECB2  F03A         	call	_SwTimerStop
 32341                           
 32342                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 32343  006AA8  0102               	movlb	2	; () banked
 32344  006AAA  51EA               	movf	(_loRa+234)& (0+255),w,b
 32345  006AAC  ECB2  F03A         	call	_SwTimerStop
 32346                           
 32347                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 32348  006AB0  0102               	movlb	2	; () banked
 32349  006AB2  51F3               	movf	(_loRa+243)& (0+255),w,b
 32350  006AB4  ECB2  F03A         	call	_SwTimerStop
 32351                           
 32352                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 32353  006AB8  0102               	movlb	2	; () banked
 32354  006ABA  51E9               	movf	(_loRa+233)& (0+255),w,b
 32355  006ABC  EFB2  F03A         	goto	_SwTimerStop
 32356  006AC0                     __end_of_StopAllSoftwareTimers:
 32357                           	opt stack 0
 32358                           tosu	equ	0xFFF
 32359                           tosh	equ	0xFFE
 32360                           tosl	equ	0xFFD
 32361                           pclath	equ	0xFFA
 32362                           tblptru	equ	0xFF8
 32363                           tblptrh	equ	0xFF7
 32364                           tblptrl	equ	0xFF6
 32365                           tablat	equ	0xFF5
 32366                           prodh	equ	0xFF4
 32367                           prodl	equ	0xFF3
 32368                           intcon	equ	0xFF2
 32369                           intcon2	equ	0xFF1
 32370                           intcon3	equ	0xFF0
 32371                           indf0	equ	0xFEF
 32372                           postinc0	equ	0xFEE
 32373                           plusw0	equ	0xFEB
 32374                           fsr0h	equ	0xFEA
 32375                           fsr0l	equ	0xFE9
 32376                           wreg	equ	0xFE8
 32377                           postinc1	equ	0xFE6
 32378                           postdec1	equ	0xFE5
 32379                           plusw1	equ	0xFE3
 32380                           fsr1h	equ	0xFE2
 32381                           fsr1l	equ	0xFE1
 32382                           indf2	equ	0xFDF
 32383                           postinc2	equ	0xFDE
 32384                           postdec2	equ	0xFDD
 32385                           plusw2	equ	0xFDB
 32386                           fsr2h	equ	0xFDA
 32387                           fsr2l	equ	0xFD9
 32388                           status	equ	0xFD8
 32389                           
 32390 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 32391 ;; Defined at:
 32392 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32393 ;; Parameters:    Size  Location     Type
 32394 ;;  syncWord        1    wreg     unsigned char 
 32395 ;; Auto vars:     Size  Location     Type
 32396 ;;  syncWord        1    4[BANK0 ] unsigned char 
 32397 ;; Return value:  Size  Location     Type
 32398 ;;                  1    wreg      void 
 32399 ;; Registers used:
 32400 ;;		wreg
 32401 ;; Tracked objects:
 32402 ;;		On entry : F/2
 32403 ;;		On exit  : 0/0
 32404 ;;		Unchanged: 0/0
 32405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32409 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32410 ;;Total ram usage:        1 bytes
 32411 ;; Hardware stack levels used:    1
 32412 ;; Hardware stack levels required when called:    7
 32413 ;; This function calls:
 32414 ;;		Nothing
 32415 ;; This function is called by:
 32416 ;;		_LORAWAN_Reset
 32417 ;;		_ConfigureRadio
 32418 ;; This function uses a non-reentrant model
 32419 ;;
 32420                           
 32421                           	psect	text166
 32422  0078BC                     __ptext166:
 32423                           	opt stack 0
 32424  0078BC                     _RADIO_SetLoRaSyncWord:
 32425                           	opt stack 18
 32426                           
 32427                           ; BSR set to: 0
 32428                           ;incstack = 0
 32429                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 32430  0078BC  0100               	movlb	0	; () banked
 32431  0078BE  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 32432                           
 32433                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 32434  0078C0  C064  F178         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 32435  0078C4  0012               	return		;funcret
 32436  0078C6                     __end_of_RADIO_SetLoRaSyncWord:
 32437                           	opt stack 0
 32438                           tosu	equ	0xFFF
 32439                           tosh	equ	0xFFE
 32440                           tosl	equ	0xFFD
 32441                           pclath	equ	0xFFA
 32442                           tblptru	equ	0xFF8
 32443                           tblptrh	equ	0xFF7
 32444                           tblptrl	equ	0xFF6
 32445                           tablat	equ	0xFF5
 32446                           prodh	equ	0xFF4
 32447                           prodl	equ	0xFF3
 32448                           intcon	equ	0xFF2
 32449                           intcon2	equ	0xFF1
 32450                           intcon3	equ	0xFF0
 32451                           indf0	equ	0xFEF
 32452                           postinc0	equ	0xFEE
 32453                           plusw0	equ	0xFEB
 32454                           fsr0h	equ	0xFEA
 32455                           fsr0l	equ	0xFE9
 32456                           wreg	equ	0xFE8
 32457                           postinc1	equ	0xFE6
 32458                           postdec1	equ	0xFE5
 32459                           plusw1	equ	0xFE3
 32460                           fsr1h	equ	0xFE2
 32461                           fsr1l	equ	0xFE1
 32462                           indf2	equ	0xFDF
 32463                           postinc2	equ	0xFDE
 32464                           postdec2	equ	0xFDD
 32465                           plusw2	equ	0xFDB
 32466                           fsr2h	equ	0xFDA
 32467                           fsr2l	equ	0xFD9
 32468                           status	equ	0xFD8
 32469                           
 32470 ;; *************** function _RADIO_Init *****************
 32471 ;; Defined at:
 32472 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32473 ;; Parameters:    Size  Location     Type
 32474 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 32475 ;;		 -> radioBuffer(271), 
 32476 ;;  frequency       4   31[BANK0 ] unsigned long 
 32477 ;; Auto vars:     Size  Location     Type
 32478 ;;		None
 32479 ;; Return value:  Size  Location     Type
 32480 ;;                  1    wreg      void 
 32481 ;; Registers used:
 32482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32483 ;; Tracked objects:
 32484 ;;		On entry : F/0
 32485 ;;		On exit  : F/1
 32486 ;;		Unchanged: 0/0
 32487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32488 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32491 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32492 ;;Total ram usage:        7 bytes
 32493 ;; Hardware stack levels used:    1
 32494 ;; Hardware stack levels required when called:   11
 32495 ;; This function calls:
 32496 ;;		_RADIO_RegisterRead
 32497 ;;		_RADIO_RegisterWrite
 32498 ;;		_RADIO_Reset
 32499 ;;		_RADIO_WriteFrequency
 32500 ;;		_RADIO_WriteMode
 32501 ;;		_SwTimerCreate
 32502 ;;		_SwTimerSetCallback
 32503 ;;		_SwTimerStop
 32504 ;; This function is called by:
 32505 ;;		_LORAWAN_Init
 32506 ;;		_LORAWAN_Reset
 32507 ;; This function uses a non-reentrant model
 32508 ;;
 32509                           
 32510                           	psect	text167
 32511  00388A                     __ptext167:
 32512                           	opt stack 0
 32513  00388A                     _RADIO_Init:
 32514                           	opt stack 18
 32515                           
 32516                           ; BSR set to: 0
 32517                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 32518                           
 32519                           ;incstack = 0
 32520  00388A  C07F  F16A         	movff	RADIO_Init@frequency,_RadioConfiguration
 32521  00388E  C080  F16B         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 32522  003892  C081  F16C         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 32523  003896  C082  F16D         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 32524                           
 32525                           ; BSR set to: 0
 32526                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 32527  00389A  0EA8               	movlw	168
 32528  00389C  0101               	movlb	1	; () banked
 32529  00389E  6F6E               	movwf	(_RadioConfiguration+4)& (0+255),b
 32530  0038A0  0E61               	movlw	97
 32531  0038A2  6F6F               	movwf	(_RadioConfiguration+5)& (0+255),b
 32532  0038A4  6B70               	clrf	(_RadioConfiguration+6)& (0+255),b
 32533  0038A6  6B71               	clrf	(_RadioConfiguration+7)& (0+255),b
 32534                           
 32535                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 32536  0038A8  0E50               	movlw	80
 32537  0038AA  6F72               	movwf	(_RadioConfiguration+8)& (0+255),b
 32538  0038AC  0EC3               	movlw	195
 32539  0038AE  6F73               	movwf	(_RadioConfiguration+9)& (0+255),b
 32540  0038B0  6B74               	clrf	(_RadioConfiguration+10)& (0+255),b
 32541  0038B2  6B75               	clrf	(_RadioConfiguration+11)& (0+255),b
 32542                           
 32543                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 32544  0038B4  0E01               	movlw	1
 32545  0038B6  6F82               	movwf	(_RadioConfiguration+24)& (0+255),b
 32546                           
 32547                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 32548  0038B8  0E07               	movlw	7
 32549  0038BA  6F84               	movwf	(_RadioConfiguration+26)& (0+255),b
 32550                           
 32551                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 32552  0038BC  0E01               	movlw	1
 32553  0038BE  6F85               	movwf	(_RadioConfiguration+27)& (0+255),b
 32554                           
 32555                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 32556  0038C0  6F8B               	movwf	(_RadioConfiguration+33)& (0+255),b
 32557                           
 32558                           ; BSR set to: 1
 32559                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 32560  0038C2  6B8C               	clrf	(_RadioConfiguration+34)& (0+255),b
 32561                           
 32562                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 32563  0038C4  6B77               	clrf	(_RadioConfiguration+13)& (0+255),b
 32564  0038C6  0E08               	movlw	8
 32565  0038C8  6F76               	movwf	(_RadioConfiguration+12)& (0+255),b
 32566                           
 32567                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 32568  0038CA  0E0C               	movlw	12
 32569  0038CC  6F83               	movwf	(_RadioConfiguration+25)& (0+255),b
 32570                           
 32571                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 32572  0038CE  0E01               	movlw	1
 32573  0038D0  6F86               	movwf	(_RadioConfiguration+28)& (0+255),b
 32574                           
 32575                           ; BSR set to: 1
 32576                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 32577  0038D2  6B87               	clrf	(_RadioConfiguration+29)& (0+255),b
 32578                           
 32579                           ; BSR set to: 1
 32580                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 32581  0038D4  6B8A               	clrf	(_RadioConfiguration+32)& (0+255),b
 32582                           
 32583                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 32584  0038D6  0EC1               	movlw	193
 32585  0038D8  6F79               	movwf	(_RadioConfiguration+15)& (0+255),b
 32586                           
 32587                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 32588  0038DA  0E94               	movlw	148
 32589  0038DC  6F7A               	movwf	(_RadioConfiguration+16)& (0+255),b
 32590                           
 32591                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 32592  0038DE  0EC1               	movlw	193
 32593  0038E0  6F7B               	movwf	(_RadioConfiguration+17)& (0+255),b
 32594                           
 32595                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 32596  0038E2  0E03               	movlw	3
 32597  0038E4  6F81               	movwf	(_RadioConfiguration+23)& (0+255),b
 32598                           
 32599                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 32600  0038E6  0E34               	movlw	52
 32601  0038E8  6F78               	movwf	(_RadioConfiguration+14)& (0+255),b
 32602                           
 32603                           ; BSR set to: 1
 32604                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 32605  0038EA  6B8D               	clrf	(_RadioConfiguration+35)& (0+255),b
 32606                           
 32607                           ; BSR set to: 1
 32608                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 32609  0038EC  6B8E               	clrf	(_RadioConfiguration+36)& (0+255),b
 32610                           
 32611                           ; BSR set to: 1
 32612                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 32613  0038EE  C07D  F18F         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 32614  0038F2  C07E  F190         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 32615                           
 32616                           ; BSR set to: 1
 32617                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 32618  0038F6  6B88               	clrf	(_RadioConfiguration+30)& (0+255),b
 32619  0038F8  6B89               	clrf	(_RadioConfiguration+31)& (0+255),b
 32620                           
 32621                           ; BSR set to: 1
 32622                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 32623  0038FA  0E80               	movlw	128
 32624  0038FC  6F9C               	movwf	(_RadioConfiguration+50)& (0+255),b
 32625                           
 32626                           ; BSR set to: 1
 32627                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 32628  0038FE  0E98               	movlw	152
 32629  003900  6F94               	movwf	(_RadioConfiguration+42)& (0+255),b
 32630  003902  0E3A               	movlw	58
 32631  003904  6F95               	movwf	(_RadioConfiguration+43)& (0+255),b
 32632  003906  6B96               	clrf	(_RadioConfiguration+44)& (0+255),b
 32633  003908  6B97               	clrf	(_RadioConfiguration+45)& (0+255),b
 32634                           
 32635                           ; BSR set to: 1
 32636                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 32637  00390A  0E02               	movlw	2
 32638  00390C  6F9D               	movwf	(_RadioConfiguration+51)& (0+255),b
 32639                           
 32640                           ; BSR set to: 1
 32641                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 32642  00390E  0E0B               	movlw	11
 32643  003910  6F9E               	movwf	(_RadioConfiguration+52)& (0+255),b
 32644                           
 32645                           ; BSR set to: 1
 32646                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 32647  003912  0E12               	movlw	18
 32648  003914  6F9F               	movwf	(_RadioConfiguration+53)& (0+255),b
 32649                           
 32650                           ; BSR set to: 1
 32651                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 32652  003916  6B99               	clrf	(_RadioConfiguration+47)& (0+255),b
 32653  003918  6B9A               	clrf	(_RadioConfiguration+48)& (0+255),b
 32654                           
 32655                           ; BSR set to: 1
 32656                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 32657  00391A  5198               	movf	(_RadioConfiguration+46)& (0+255),w,b
 32658  00391C  E123               	bnz	l14790
 32659                           
 32660                           ; BSR set to: 1
 32661                           ;radio_driver_SX1276.c: 457: {
 32662                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 32663  00391E  EC34  F031         	call	_SwTimerCreate	;wreg free
 32664  003922  0101               	movlb	1	; () banked
 32665  003924  6F91               	movwf	(_RadioConfiguration+39)& (0+255),b
 32666                           
 32667                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 32668  003926  EC34  F031         	call	_SwTimerCreate	;wreg free
 32669  00392A  0101               	movlb	1	; () banked
 32670  00392C  6F92               	movwf	(_RadioConfiguration+40)& (0+255),b
 32671                           
 32672                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 32673  00392E  EC34  F031         	call	_SwTimerCreate	;wreg free
 32674  003932  0101               	movlb	1	; () banked
 32675  003934  6F93               	movwf	(_RadioConfiguration+41)& (0+255),b
 32676                           
 32677                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 32678  003936  0ED8               	movlw	low _RADIO_RxFSKTimeout
 32679  003938  0100               	movlb	0	; () banked
 32680  00393A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32681  00393C  0E6F               	movlw	high _RADIO_RxFSKTimeout
 32682  00393E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32683  003940  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32684  003942  0101               	movlb	1	; () banked
 32685  003944  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32686  003946  EC6D  F038         	call	_SwTimerSetCallback
 32687                           
 32688                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 32689  00394A  0EC6               	movlw	low _RADIO_WatchdogTimeout
 32690  00394C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32691  00394E  0E6C               	movlw	high _RADIO_WatchdogTimeout
 32692  003950  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32693  003952  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32694  003954  0101               	movlb	1	; () banked
 32695  003956  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32696  003958  EC6D  F038         	call	_SwTimerSetCallback
 32697                           
 32698                           ; BSR set to: 0
 32699                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 32700  00395C  0E01               	movlw	1
 32701  00395E  0101               	movlb	1	; () banked
 32702  003960  6F98               	movwf	(_RadioConfiguration+46)& (0+255),b
 32703                           
 32704                           ;radio_driver_SX1276.c: 466: }
 32705  003962  D00B               	goto	l14792
 32706  003964                     l14790:
 32707                           
 32708                           ; BSR set to: 1
 32709                           ;radio_driver_SX1276.c: 467: else
 32710                           ;radio_driver_SX1276.c: 468: {
 32711                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 32712  003964  5191               	movf	(_RadioConfiguration+39)& (0+255),w,b
 32713  003966  ECB2  F03A         	call	_SwTimerStop
 32714                           
 32715                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 32716  00396A  0101               	movlb	1	; () banked
 32717  00396C  5192               	movf	(_RadioConfiguration+40)& (0+255),w,b
 32718  00396E  ECB2  F03A         	call	_SwTimerStop
 32719                           
 32720                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 32721  003972  0101               	movlb	1	; () banked
 32722  003974  5193               	movf	(_RadioConfiguration+41)& (0+255),w,b
 32723  003976  ECB2  F03A         	call	_SwTimerStop
 32724  00397A                     l14792:
 32725                           
 32726                           ;radio_driver_SX1276.c: 472: }
 32727                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 32728  00397A  EC21  F038         	call	_RADIO_Reset	;wreg free
 32729                           
 32730                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 32731  00397E  0E00               	movlw	0
 32732  003980  0100               	movlb	0	; () banked
 32733  003982  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32734  003984  0E01               	movlw	1
 32735  003986  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32736  003988  EC6E  F028         	call	_RADIO_WriteMode
 32737                           
 32738                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 32739  00398C  C16A  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 32740  003990  C16B  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 32741  003994  C16C  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 32742  003998  C16D  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 32743  00399C  EC00  F028         	call	_RADIO_WriteFrequency	;wreg free
 32744                           
 32745                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 32746  0039A0  0E42               	movlw	66
 32747  0039A2  0100               	movlb	0	; () banked
 32748  0039A4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32749  0039A6  0E3B               	movlw	59
 32750  0039A8  EC85  F03A         	call	_RADIO_RegisterWrite
 32751  0039AC                     l14800:
 32752  0039AC  0E3B               	movlw	59
 32753  0039AE  ECAE  F039         	call	_RADIO_RegisterRead
 32754  0039B2  6F83               	movwf	??_RADIO_Init& (0+255),b
 32755  0039B4  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 32756  0039B6  D7FA               	goto	l14800
 32757                           
 32758                           ; BSR set to: 0
 32759                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 32760  0039B8  0E23               	movlw	35
 32761  0039BA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32762  0039BC  0E0C               	movlw	12
 32763  0039BE  EC85  F03A         	call	_RADIO_RegisterWrite
 32764                           
 32765                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 32766  0039C2  0E1E               	movlw	30
 32767  0039C4  0100               	movlb	0	; () banked
 32768  0039C6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32769  0039C8  0E0D               	movlw	13
 32770  0039CA  EC85  F03A         	call	_RADIO_RegisterWrite
 32771                           
 32772                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 32773  0039CE  0EAA               	movlw	170
 32774  0039D0  0100               	movlb	0	; () banked
 32775  0039D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32776  0039D4  0E1F               	movlw	31
 32777  0039D6  EC85  F03A         	call	_RADIO_RegisterWrite
 32778                           
 32779                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 32780  0039DA  0E8F               	movlw	143
 32781  0039DC  0100               	movlb	0	; () banked
 32782  0039DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32783  0039E0  0E35               	movlw	53
 32784  0039E2  EC85  F03A         	call	_RADIO_RegisterWrite
 32785                           
 32786                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 32787  0039E6  0100               	movlb	0	; () banked
 32788  0039E8  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32789  0039EA  0E32               	movlw	50
 32790  0039EC  EC85  F03A         	call	_RADIO_RegisterWrite
 32791                           
 32792                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 32793  0039F0  0E40               	movlw	64
 32794  0039F2  0100               	movlb	0	; () banked
 32795  0039F4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32796  0039F6  0E31               	movlw	49
 32797  0039F8  EC85  F03A         	call	_RADIO_RegisterWrite
 32798                           
 32799                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32800  0039FC  0E01               	movlw	1
 32801  0039FE  0100               	movlb	0	; () banked
 32802  003A00  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32803  003A02  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32804  003A04  0E00               	movlw	0
 32805  003A06  EC6E  F028         	call	_RADIO_WriteMode
 32806                           
 32807                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 32808  003A0A  0100               	movlb	0	; () banked
 32809  003A0C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32810  003A0E  0E23               	movlw	35
 32811  003A10  EC85  F03A         	call	_RADIO_RegisterWrite
 32812                           
 32813                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 32814  003A14  0E42               	movlw	66
 32815  003A16  ECAE  F039         	call	_RADIO_RegisterRead
 32816  003A1A  0101               	movlb	1	; () banked
 32817  003A1C  6F9B               	movwf	(_RadioConfiguration+49)& (0+255),b
 32818                           
 32819                           ; BSR set to: 1
 32820  003A1E  0012               	return		;funcret
 32821  003A20                     __end_of_RADIO_Init:
 32822                           	opt stack 0
 32823                           tosu	equ	0xFFF
 32824                           tosh	equ	0xFFE
 32825                           tosl	equ	0xFFD
 32826                           pclath	equ	0xFFA
 32827                           tblptru	equ	0xFF8
 32828                           tblptrh	equ	0xFF7
 32829                           tblptrl	equ	0xFF6
 32830                           tablat	equ	0xFF5
 32831                           prodh	equ	0xFF4
 32832                           prodl	equ	0xFF3
 32833                           intcon	equ	0xFF2
 32834                           intcon2	equ	0xFF1
 32835                           intcon3	equ	0xFF0
 32836                           indf0	equ	0xFEF
 32837                           postinc0	equ	0xFEE
 32838                           plusw0	equ	0xFEB
 32839                           fsr0h	equ	0xFEA
 32840                           fsr0l	equ	0xFE9
 32841                           wreg	equ	0xFE8
 32842                           postinc1	equ	0xFE6
 32843                           postdec1	equ	0xFE5
 32844                           plusw1	equ	0xFE3
 32845                           fsr1h	equ	0xFE2
 32846                           fsr1l	equ	0xFE1
 32847                           indf2	equ	0xFDF
 32848                           postinc2	equ	0xFDE
 32849                           postdec2	equ	0xFDD
 32850                           plusw2	equ	0xFDB
 32851                           fsr2h	equ	0xFDA
 32852                           fsr2l	equ	0xFD9
 32853                           status	equ	0xFD8
 32854                           
 32855 ;; *************** function _SwTimerSetCallback *****************
 32856 ;; Defined at:
 32857 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 32858 ;; Parameters:    Size  Location     Type
 32859 ;;  timerId         1    wreg     unsigned char 
 32860 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 32861 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 32862 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 32863 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 32864 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 32865 ;; Auto vars:     Size  Location     Type
 32866 ;;  timerId         1    7[BANK0 ] unsigned char 
 32867 ;; Return value:  Size  Location     Type
 32868 ;;                  1    wreg      void 
 32869 ;; Registers used:
 32870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32871 ;; Tracked objects:
 32872 ;;		On entry : C/2
 32873 ;;		On exit  : F/0
 32874 ;;		Unchanged: 0/0
 32875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32876 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32879 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32880 ;;Total ram usage:        4 bytes
 32881 ;; Hardware stack levels used:    1
 32882 ;; Hardware stack levels required when called:    7
 32883 ;; This function calls:
 32884 ;;		Nothing
 32885 ;; This function is called by:
 32886 ;;		_RADIO_Init
 32887 ;;		_SetCallbackSoftwareTimers
 32888 ;; This function uses a non-reentrant model
 32889 ;;
 32890                           
 32891                           	psect	text168
 32892  0070DA                     __ptext168:
 32893                           	opt stack 0
 32894  0070DA                     _SwTimerSetCallback:
 32895                           	opt stack 21
 32896                           
 32897                           ; BSR set to: 1
 32898                           ;incstack = 0
 32899                           ;SwTimerSetCallback@timerId stored from wreg
 32900  0070DA  0100               	movlb	0	; () banked
 32901  0070DC  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 32902                           
 32903                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 32904  0070DE  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32905  0070E0  0D08               	mullw	8
 32906  0070E2  0E06               	movlw	low (_swTimers+6)
 32907  0070E4  24F3               	addwf	prodl,w,c
 32908  0070E6  6ED9               	movwf	fsr2l,c
 32909  0070E8  0E03               	movlw	high (_swTimers+6)
 32910  0070EA  20F4               	addwfc	prodh,w,c
 32911  0070EC  6EDA               	movwf	fsr2h,c
 32912  0070EE  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 32913  0070F2  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 32914                           
 32915                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 32916  0070F6  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 32917  0070F8  0D08               	mullw	8
 32918  0070FA  0E05               	movlw	low (_swTimers+5)
 32919  0070FC  24F3               	addwf	prodl,w,c
 32920  0070FE  6ED9               	movwf	fsr2l,c
 32921  007100  0E03               	movlw	high (_swTimers+5)
 32922  007102  20F4               	addwfc	prodh,w,c
 32923  007104  6EDA               	movwf	fsr2h,c
 32924  007106  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 32925                           
 32926                           ; BSR set to: 0
 32927  00710A  0012               	return		;funcret
 32928  00710C                     __end_of_SwTimerSetCallback:
 32929                           	opt stack 0
 32930                           tosu	equ	0xFFF
 32931                           tosh	equ	0xFFE
 32932                           tosl	equ	0xFFD
 32933                           pclath	equ	0xFFA
 32934                           tblptru	equ	0xFF8
 32935                           tblptrh	equ	0xFF7
 32936                           tblptrl	equ	0xFF6
 32937                           tablat	equ	0xFF5
 32938                           prodh	equ	0xFF4
 32939                           prodl	equ	0xFF3
 32940                           intcon	equ	0xFF2
 32941                           intcon2	equ	0xFF1
 32942                           intcon3	equ	0xFF0
 32943                           indf0	equ	0xFEF
 32944                           postinc0	equ	0xFEE
 32945                           plusw0	equ	0xFEB
 32946                           fsr0h	equ	0xFEA
 32947                           fsr0l	equ	0xFE9
 32948                           wreg	equ	0xFE8
 32949                           postinc1	equ	0xFE6
 32950                           postdec1	equ	0xFE5
 32951                           plusw1	equ	0xFE3
 32952                           fsr1h	equ	0xFE2
 32953                           fsr1l	equ	0xFE1
 32954                           indf2	equ	0xFDF
 32955                           postinc2	equ	0xFDE
 32956                           postdec2	equ	0xFDD
 32957                           plusw2	equ	0xFDB
 32958                           fsr2h	equ	0xFDA
 32959                           fsr2l	equ	0xFD9
 32960                           status	equ	0xFD8
 32961                           
 32962 ;; *************** function _RADIO_WriteMode *****************
 32963 ;; Defined at:
 32964 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32965 ;; Parameters:    Size  Location     Type
 32966 ;;  newMode         1    wreg     enum E8483
 32967 ;;  newModulatio    1    9[BANK0 ] enum E7751
 32968 ;;  blocking        1   10[BANK0 ] unsigned char 
 32969 ;; Auto vars:     Size  Location     Type
 32970 ;;  newMode         1   14[BANK0 ] enum E8483
 32971 ;;  opMode          1   15[BANK0 ] unsigned char 
 32972 ;;  currentMode     1   13[BANK0 ] enum E8483
 32973 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 32974 ;;  currentModul    1   11[BANK0 ] enum E7751
 32975 ;; Return value:  Size  Location     Type
 32976 ;;                  1    wreg      void 
 32977 ;; Registers used:
 32978 ;;		wreg, status,2, status,0, cstack
 32979 ;; Tracked objects:
 32980 ;;		On entry : F/0
 32981 ;;		On exit  : 0/0
 32982 ;;		Unchanged: 0/0
 32983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32985 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32987 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32988 ;;Total ram usage:        7 bytes
 32989 ;; Hardware stack levels used:    1
 32990 ;; Hardware stack levels required when called:   10
 32991 ;; This function calls:
 32992 ;;		_HALDIO5PinValue
 32993 ;;		_RADIO_RegisterRead
 32994 ;;		_RADIO_RegisterWrite
 32995 ;;		_SystemBlockingWaitMs
 32996 ;; This function is called by:
 32997 ;;		_RADIO_Init
 32998 ;;		_RADIO_WriteConfiguration
 32999 ;;		_RADIO_Transmit
 33000 ;;		_RADIO_ReceiveStart
 33001 ;;		_RADIO_ReceiveStop
 33002 ;;		_RADIO_RxDone
 33003 ;;		_RADIO_FSKPayloadReady
 33004 ;;		_RADIO_RxTimeout
 33005 ;;		_RADIO_TxDone
 33006 ;;		_RADIO_FSKPacketSent
 33007 ;;		_RADIO_ReadRandom
 33008 ;;		_RADIO_RxFSKTimeout
 33009 ;;		_RADIO_WatchdogTimeout
 33010 ;; This function uses a non-reentrant model
 33011 ;;
 33012                           
 33013                           	psect	text169
 33014  0050DC                     __ptext169:
 33015                           	opt stack 0
 33016  0050DC                     _RADIO_WriteMode:
 33017                           	opt stack 17
 33018                           
 33019                           ; BSR set to: 0
 33020                           ;incstack = 0
 33021                           ;RADIO_WriteMode@newMode stored from wreg
 33022  0050DC  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 33023                           
 33024                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 33025                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 33026                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 33027                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 33028                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 33029                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 33030  0050DE  0100               	movlb	0	; () banked
 33031  0050E0  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33032  0050E2  E108               	bnz	l12198
 33033                           
 33034                           ; BSR set to: 0
 33035  0050E4  0E06               	movlw	6
 33036  0050E6  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33037  0050E8  B4D8               	btfsc	status,2,c
 33038  0050EA  0012               	return	
 33039                           
 33040                           ; BSR set to: 0
 33041  0050EC  0E07               	movlw	7
 33042  0050EE  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33043  0050F0  E101               	bnz	l12198
 33044  0050F2  0012               	return	
 33045  0050F4                     l12198:
 33046                           
 33047                           ; BSR set to: 0
 33048                           ;radio_driver_SX1276.c: 159: }
 33049                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 33050  0050F4  0E07               	movlw	7
 33051  0050F6  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 33052                           
 33053                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 33054  0050F8  0E01               	movlw	1
 33055  0050FA  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 33056                           
 33057                           ; BSR set to: 0
 33058                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 33059  0050FC  ECAE  F039         	call	_RADIO_RegisterRead
 33060  005100  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33061                           
 33062                           ; BSR set to: 0
 33063                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 33064  005102  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 33065  005104  D003               	goto	l382
 33066                           
 33067                           ; BSR set to: 0
 33068                           ;radio_driver_SX1276.c: 168: {
 33069                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 33070  005106  0E01               	movlw	1
 33071  005108  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 33072                           
 33073                           ;radio_driver_SX1276.c: 170: }
 33074  00510A  D001               	goto	l12206
 33075  00510C                     l382:
 33076                           
 33077                           ; BSR set to: 0
 33078                           ;radio_driver_SX1276.c: 171: else
 33079                           ;radio_driver_SX1276.c: 172: {
 33080                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 33081  00510C  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 33082  00510E                     l12206:
 33083                           
 33084                           ; BSR set to: 0
 33085                           ;radio_driver_SX1276.c: 174: }
 33086                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 33087  00510E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33088  005110  0B07               	andlw	7
 33089  005112  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 33090                           
 33091                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 33092  005114  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 33093  005116  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 33094  005118  E018               	bz	l12222
 33095                           
 33096                           ; BSR set to: 0
 33097                           ;radio_driver_SX1276.c: 181: {
 33098                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 33099  00511A  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33100  00511C  E008               	bz	l12214
 33101                           
 33102                           ; BSR set to: 0
 33103                           ;radio_driver_SX1276.c: 184: {
 33104                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 33105  00511E  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33106  005120  0BF8               	andlw	248
 33107  005122  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33108  005124  0E01               	movlw	1
 33109  005126  EC85  F03A         	call	_RADIO_RegisterWrite
 33110                           
 33111                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 33112  00512A  0100               	movlb	0	; () banked
 33113  00512C  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 33114  00512E                     l12214:
 33115                           
 33116                           ; BSR set to: 0
 33117                           ;radio_driver_SX1276.c: 188: }
 33118                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 33119  00512E  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33120  005130  E103               	bnz	l12218
 33121                           
 33122                           ; BSR set to: 0
 33123                           ;radio_driver_SX1276.c: 191: {
 33124                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 33125  005132  0E78               	movlw	120
 33126  005134  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33127                           
 33128                           ;radio_driver_SX1276.c: 194: }
 33129  005136  D004               	goto	l12220
 33130  005138                     l12218:
 33131                           
 33132                           ; BSR set to: 0
 33133                           ;radio_driver_SX1276.c: 195: else
 33134                           ;radio_driver_SX1276.c: 196: {
 33135                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 33136  005138  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33137  00513A  0B78               	andlw	120
 33138  00513C  0980               	iorlw	128
 33139  00513E  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33140  005140                     l12220:
 33141                           
 33142                           ; BSR set to: 0
 33143                           ;radio_driver_SX1276.c: 199: }
 33144                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 33145  005140  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33146  005144  0E01               	movlw	1
 33147  005146  EC85  F03A         	call	_RADIO_RegisterWrite
 33148  00514A                     l12222:
 33149                           
 33150                           ;radio_driver_SX1276.c: 201: }
 33151                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 33152  00514A  0100               	movlb	0	; () banked
 33153  00514C  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33154  00514E  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33155  005150  B4D8               	btfsc	status,2,c
 33156  005152  0012               	return	
 33157                           
 33158                           ; BSR set to: 0
 33159                           ;radio_driver_SX1276.c: 208: {
 33160                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 33161  005154  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33162  005156  E012               	bz	l12238
 33163                           
 33164                           ; BSR set to: 0
 33165  005158  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33166  00515A  E110               	bnz	l12238
 33167                           
 33168                           ; BSR set to: 0
 33169                           ;radio_driver_SX1276.c: 212: {
 33170                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 33171  00515C  0E41               	movlw	65
 33172  00515E  ECAE  F039         	call	_RADIO_RegisterRead
 33173  005162  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 33174                           
 33175                           ; BSR set to: 0
 33176                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 33177  005164  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33178  005166  E103               	bnz	l12234
 33179                           
 33180                           ; BSR set to: 0
 33181                           ;radio_driver_SX1276.c: 215: {
 33182                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 33183  005168  0E30               	movlw	48
 33184  00516A  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33185                           
 33186                           ;radio_driver_SX1276.c: 218: }
 33187  00516C  D002               	goto	l12236
 33188  00516E                     l12234:
 33189                           
 33190                           ; BSR set to: 0
 33191                           ;radio_driver_SX1276.c: 219: else
 33192                           ;radio_driver_SX1276.c: 220: {
 33193                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 33194  00516E  0ECF               	movlw	207
 33195  005170  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 33196  005172                     l12236:
 33197                           
 33198                           ; BSR set to: 0
 33199                           ;radio_driver_SX1276.c: 223: }
 33200                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 33201  005172  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 33202  005176  0E41               	movlw	65
 33203  005178  EC85  F03A         	call	_RADIO_RegisterWrite
 33204  00517C                     l12238:
 33205                           
 33206                           ;radio_driver_SX1276.c: 225: }
 33207                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 33208  00517C  0EF8               	movlw	248
 33209  00517E  0100               	movlb	0	; () banked
 33210  005180  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33211                           
 33212                           ; BSR set to: 0
 33213                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 33214  005182  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33215  005184  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 33216                           
 33217                           ; BSR set to: 0
 33218                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 33219  005186  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 33220  00518A  0E01               	movlw	1
 33221  00518C  EC85  F03A         	call	_RADIO_RegisterWrite
 33222                           
 33223                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 33224  005190  0100               	movlb	0	; () banked
 33225  005192  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 33226  005194  A4D8               	btfss	status,2,c
 33227  005196  0012               	return	
 33228                           
 33229                           ; BSR set to: 0
 33230                           ;radio_driver_SX1276.c: 234: {
 33231                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 33232  005198  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 33233  00519A  E005               	bz	l12250
 33234  00519C                     l12248:
 33235  00519C  EC9E  F03C         	call	_HALDIO5PinValue	;wreg free
 33236  0051A0  0900               	iorlw	0
 33237  0051A2  E0FC               	bz	l12248
 33238  0051A4  0012               	return	
 33239  0051A6                     l12250:
 33240                           
 33241                           ; BSR set to: 0
 33242                           ;radio_driver_SX1276.c: 240: else
 33243                           ;radio_driver_SX1276.c: 241: {
 33244                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 33245  0051A6  0E01               	movlw	1
 33246  0051A8  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 33247  0051AA  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 33248  0051AC  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 33249  0051AE  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 33250  0051B0  EF22  F039         	goto	_SystemBlockingWaitMs	;wreg free
 33251  0051B4                     __end_of_RADIO_WriteMode:
 33252                           	opt stack 0
 33253                           tosu	equ	0xFFF
 33254                           tosh	equ	0xFFE
 33255                           tosl	equ	0xFFD
 33256                           pclath	equ	0xFFA
 33257                           tblptru	equ	0xFF8
 33258                           tblptrh	equ	0xFF7
 33259                           tblptrl	equ	0xFF6
 33260                           tablat	equ	0xFF5
 33261                           prodh	equ	0xFF4
 33262                           prodl	equ	0xFF3
 33263                           intcon	equ	0xFF2
 33264                           intcon2	equ	0xFF1
 33265                           intcon3	equ	0xFF0
 33266                           indf0	equ	0xFEF
 33267                           postinc0	equ	0xFEE
 33268                           plusw0	equ	0xFEB
 33269                           fsr0h	equ	0xFEA
 33270                           fsr0l	equ	0xFE9
 33271                           wreg	equ	0xFE8
 33272                           postinc1	equ	0xFE6
 33273                           postdec1	equ	0xFE5
 33274                           plusw1	equ	0xFE3
 33275                           fsr1h	equ	0xFE2
 33276                           fsr1l	equ	0xFE1
 33277                           indf2	equ	0xFDF
 33278                           postinc2	equ	0xFDE
 33279                           postdec2	equ	0xFDD
 33280                           plusw2	equ	0xFDB
 33281                           fsr2h	equ	0xFDA
 33282                           fsr2l	equ	0xFD9
 33283                           status	equ	0xFD8
 33284                           
 33285 ;; *************** function _RADIO_RegisterRead *****************
 33286 ;; Defined at:
 33287 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33288 ;; Parameters:    Size  Location     Type
 33289 ;;  reg             1    wreg     unsigned char 
 33290 ;; Auto vars:     Size  Location     Type
 33291 ;;  reg             1    6[BANK0 ] unsigned char 
 33292 ;;  readValue       1    7[BANK0 ] unsigned char 
 33293 ;; Return value:  Size  Location     Type
 33294 ;;                  1    wreg      unsigned char 
 33295 ;; Registers used:
 33296 ;;		wreg, status,2, status,0, cstack
 33297 ;; Tracked objects:
 33298 ;;		On entry : 0/0
 33299 ;;		On exit  : F/0
 33300 ;;		Unchanged: 0/0
 33301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33303 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33305 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33306 ;;Total ram usage:        2 bytes
 33307 ;; Hardware stack levels used:    1
 33308 ;; Hardware stack levels required when called:    9
 33309 ;; This function calls:
 33310 ;;		_HALSPICSAssert
 33311 ;;		_HALSPICSDeassert
 33312 ;;		_HALSPISend
 33313 ;; This function is called by:
 33314 ;;		_RADIO_WriteMode
 33315 ;;		_RADIO_WritePower
 33316 ;;		_RADIO_Init
 33317 ;;		_RADIO_WriteConfiguration
 33318 ;;		_RADIO_Transmit
 33319 ;;		_RADIO_RxDone
 33320 ;;		_RADIO_FSKPayloadReady
 33321 ;;		_RADIO_FSKPacketSent
 33322 ;;		_RADIO_FHSSChangeChannel
 33323 ;;		_RADIO_DIO0
 33324 ;;		_RADIO_DIO1
 33325 ;;		_RADIO_DIO2
 33326 ;;		_RADIO_DIO3
 33327 ;;		_RADIO_DIO4
 33328 ;;		_RADIO_DIO5
 33329 ;;		_RADIO_ReadRandom
 33330 ;;		_RADIO_RxFSKTimeout
 33331 ;; This function uses a non-reentrant model
 33332 ;;
 33333                           
 33334                           	psect	text170
 33335  00735C                     __ptext170:
 33336                           	opt stack 0
 33337  00735C                     _RADIO_RegisterRead:
 33338                           	opt stack 17
 33339                           
 33340                           ;incstack = 0
 33341                           ;RADIO_RegisterRead@reg stored from wreg
 33342  00735C  0100               	movlb	0	; () banked
 33343  00735E  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 33344                           
 33345                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 33346                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 33347  007360  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 33348                           
 33349                           ; BSR set to: 0
 33350                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 33351  007362  ECBC  F03C         	call	_HALSPICSAssert	;wreg free
 33352                           
 33353                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 33354  007366  0100               	movlb	0	; () banked
 33355  007368  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 33356  00736A  EC63  F03C         	call	_HALSPISend
 33357                           
 33358                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 33359  00736E  0EFF               	movlw	255
 33360  007370  EC63  F03C         	call	_HALSPISend
 33361  007374  0100               	movlb	0	; () banked
 33362  007376  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 33363                           
 33364                           ; BSR set to: 0
 33365                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 33366  007378  ECBA  F03C         	call	_HALSPICSDeassert	;wreg free
 33367                           
 33368                           ;radio_driver_SX1276.c: 142: return readValue;
 33369  00737C  0100               	movlb	0	; () banked
 33370  00737E  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 33371                           
 33372                           ; BSR set to: 0
 33373  007380  0012               	return		;funcret
 33374  007382                     __end_of_RADIO_RegisterRead:
 33375                           	opt stack 0
 33376                           tosu	equ	0xFFF
 33377                           tosh	equ	0xFFE
 33378                           tosl	equ	0xFFD
 33379                           pclath	equ	0xFFA
 33380                           tblptru	equ	0xFF8
 33381                           tblptrh	equ	0xFF7
 33382                           tblptrl	equ	0xFF6
 33383                           tablat	equ	0xFF5
 33384                           prodh	equ	0xFF4
 33385                           prodl	equ	0xFF3
 33386                           intcon	equ	0xFF2
 33387                           intcon2	equ	0xFF1
 33388                           intcon3	equ	0xFF0
 33389                           indf0	equ	0xFEF
 33390                           postinc0	equ	0xFEE
 33391                           plusw0	equ	0xFEB
 33392                           fsr0h	equ	0xFEA
 33393                           fsr0l	equ	0xFE9
 33394                           wreg	equ	0xFE8
 33395                           postinc1	equ	0xFE6
 33396                           postdec1	equ	0xFE5
 33397                           plusw1	equ	0xFE3
 33398                           fsr1h	equ	0xFE2
 33399                           fsr1l	equ	0xFE1
 33400                           indf2	equ	0xFDF
 33401                           postinc2	equ	0xFDE
 33402                           postdec2	equ	0xFDD
 33403                           plusw2	equ	0xFDB
 33404                           fsr2h	equ	0xFDA
 33405                           fsr2l	equ	0xFD9
 33406                           status	equ	0xFD8
 33407                           
 33408 ;; *************** function _HALDIO5PinValue *****************
 33409 ;; Defined at:
 33410 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33411 ;; Parameters:    Size  Location     Type
 33412 ;;		None
 33413 ;; Auto vars:     Size  Location     Type
 33414 ;;		None
 33415 ;; Return value:  Size  Location     Type
 33416 ;;                  1    wreg      unsigned char 
 33417 ;; Registers used:
 33418 ;;		wreg
 33419 ;; Tracked objects:
 33420 ;;		On entry : 0/0
 33421 ;;		On exit  : 0/0
 33422 ;;		Unchanged: 0/0
 33423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33428 ;;Total ram usage:        0 bytes
 33429 ;; Hardware stack levels used:    1
 33430 ;; Hardware stack levels required when called:    7
 33431 ;; This function calls:
 33432 ;;		Nothing
 33433 ;; This function is called by:
 33434 ;;		_RADIO_WriteMode
 33435 ;; This function uses a non-reentrant model
 33436 ;;
 33437                           
 33438                           	psect	text171
 33439  00793C                     __ptext171:
 33440                           	opt stack 0
 33441  00793C                     _HALDIO5PinValue:
 33442                           	opt stack 19
 33443                           
 33444                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 33445                           
 33446                           ; BSR set to: 0
 33447                           ;incstack = 0
 33448  00793C  B081               	btfsc	3969,0,c	;volatile
 33449  00793E  0C01               	retlw	1
 33450  007940  0C00               	retlw	0	;funcret
 33451  007942                     __end_of_HALDIO5PinValue:
 33452                           	opt stack 0
 33453                           tosu	equ	0xFFF
 33454                           tosh	equ	0xFFE
 33455                           tosl	equ	0xFFD
 33456                           pclath	equ	0xFFA
 33457                           tblptru	equ	0xFF8
 33458                           tblptrh	equ	0xFF7
 33459                           tblptrl	equ	0xFF6
 33460                           tablat	equ	0xFF5
 33461                           prodh	equ	0xFF4
 33462                           prodl	equ	0xFF3
 33463                           intcon	equ	0xFF2
 33464                           intcon2	equ	0xFF1
 33465                           intcon3	equ	0xFF0
 33466                           indf0	equ	0xFEF
 33467                           postinc0	equ	0xFEE
 33468                           plusw0	equ	0xFEB
 33469                           fsr0h	equ	0xFEA
 33470                           fsr0l	equ	0xFE9
 33471                           wreg	equ	0xFE8
 33472                           postinc1	equ	0xFE6
 33473                           postdec1	equ	0xFE5
 33474                           plusw1	equ	0xFE3
 33475                           fsr1h	equ	0xFE2
 33476                           fsr1l	equ	0xFE1
 33477                           indf2	equ	0xFDF
 33478                           postinc2	equ	0xFDE
 33479                           postdec2	equ	0xFDD
 33480                           plusw2	equ	0xFDB
 33481                           fsr2h	equ	0xFDA
 33482                           fsr2l	equ	0xFD9
 33483                           status	equ	0xFD8
 33484                           
 33485 ;; *************** function _RADIO_WriteFrequency *****************
 33486 ;; Defined at:
 33487 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33488 ;; Parameters:    Size  Location     Type
 33489 ;;  frequency       4   17[BANK0 ] unsigned long 
 33490 ;; Auto vars:     Size  Location     Type
 33491 ;;  num             4   25[BANK0 ] unsigned long 
 33492 ;;  num_mod         4   21[BANK0 ] unsigned long 
 33493 ;; Return value:  Size  Location     Type
 33494 ;;                  1    wreg      void 
 33495 ;; Registers used:
 33496 ;;		wreg, status,2, status,0, cstack
 33497 ;; Tracked objects:
 33498 ;;		On entry : 0/0
 33499 ;;		On exit  : 0/0
 33500 ;;		Unchanged: 0/0
 33501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33503 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33505 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33506 ;;Total ram usage:       12 bytes
 33507 ;; Hardware stack levels used:    1
 33508 ;; Hardware stack levels required when called:   10
 33509 ;; This function calls:
 33510 ;;		_RADIO_RegisterWrite
 33511 ;;		___lldiv
 33512 ;;		___llmod
 33513 ;; This function is called by:
 33514 ;;		_RADIO_Init
 33515 ;;		_RADIO_WriteConfiguration
 33516 ;;		_RADIO_FHSSChangeChannel
 33517 ;; This function uses a non-reentrant model
 33518 ;;
 33519                           
 33520                           	psect	text172
 33521  005000                     __ptext172:
 33522                           	opt stack 0
 33523  005000                     _RADIO_WriteFrequency:
 33524                           	opt stack 16
 33525                           
 33526                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 33527                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 33528                           
 33529                           ;incstack = 0
 33530  005000  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 33531  005004  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 33532  005008  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 33533  00500C  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 33534  005010  0E09               	movlw	9
 33535  005012  0100               	movlb	0	; () banked
 33536  005014  6F68               	movwf	___lldiv@divisor& (0+255),b
 33537  005016  0E3D               	movlw	61
 33538  005018  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33539  00501A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33540  00501C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33541  00501E  EC1A  F030         	call	___lldiv	;wreg free
 33542  005022  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 33543  005026  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 33544  00502A  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 33545  00502E  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 33546                           
 33547                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 33548  005032  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 33549  005036  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 33550  00503A  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 33551  00503E  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 33552  005042  0E09               	movlw	9
 33553  005044  6F68               	movwf	___llmod@divisor& (0+255),b
 33554  005046  0E3D               	movlw	61
 33555  005048  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 33556  00504A  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 33557  00504C  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 33558  00504E  ECFB  F032         	call	___llmod	;wreg free
 33559  005052  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 33560  005056  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 33561  00505A  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 33562  00505E  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 33563                           
 33564                           ; BSR set to: 0
 33565                           ;radio_driver_SX1276.c: 277: num <<= (8);
 33566  005062  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 33567  005066  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 33568  00506A  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 33569  00506E  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 33570                           
 33571                           ; BSR set to: 0
 33572                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 33573  005070  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 33574  005074  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 33575  005078  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 33576  00507C  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 33577                           
 33578                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 33579  00507E  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 33580  005082  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 33581  005086  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 33582  00508A  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 33583  00508E  0E09               	movlw	9
 33584  005090  6F68               	movwf	___lldiv@divisor& (0+255),b
 33585  005092  0E3D               	movlw	61
 33586  005094  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 33587  005096  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 33588  005098  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 33589  00509A  EC1A  F030         	call	___lldiv	;wreg free
 33590  00509E  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 33591  0050A2  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 33592  0050A6  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 33593  0050AA  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 33594                           
 33595                           ; BSR set to: 0
 33596                           ;radio_driver_SX1276.c: 283: num += num_mod;
 33597  0050AE  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 33598  0050B0  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 33599  0050B2  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 33600  0050B4  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 33601  0050B6  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 33602  0050B8  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 33603  0050BA  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 33604  0050BC  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 33605                           
 33606                           ; BSR set to: 0
 33607                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 33608  0050BE  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 33609  0050C2  0E06               	movlw	6
 33610  0050C4  EC85  F03A         	call	_RADIO_RegisterWrite
 33611                           
 33612                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 33613  0050C8  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 33614  0050CC  0E07               	movlw	7
 33615  0050CE  EC85  F03A         	call	_RADIO_RegisterWrite
 33616                           
 33617                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 33618  0050D2  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 33619  0050D6  0E08               	movlw	8
 33620  0050D8  EF85  F03A         	goto	_RADIO_RegisterWrite
 33621  0050DC                     __end_of_RADIO_WriteFrequency:
 33622                           	opt stack 0
 33623                           tosu	equ	0xFFF
 33624                           tosh	equ	0xFFE
 33625                           tosl	equ	0xFFD
 33626                           pclath	equ	0xFFA
 33627                           tblptru	equ	0xFF8
 33628                           tblptrh	equ	0xFF7
 33629                           tblptrl	equ	0xFF6
 33630                           tablat	equ	0xFF5
 33631                           prodh	equ	0xFF4
 33632                           prodl	equ	0xFF3
 33633                           intcon	equ	0xFF2
 33634                           intcon2	equ	0xFF1
 33635                           intcon3	equ	0xFF0
 33636                           indf0	equ	0xFEF
 33637                           postinc0	equ	0xFEE
 33638                           plusw0	equ	0xFEB
 33639                           fsr0h	equ	0xFEA
 33640                           fsr0l	equ	0xFE9
 33641                           wreg	equ	0xFE8
 33642                           postinc1	equ	0xFE6
 33643                           postdec1	equ	0xFE5
 33644                           plusw1	equ	0xFE3
 33645                           fsr1h	equ	0xFE2
 33646                           fsr1l	equ	0xFE1
 33647                           indf2	equ	0xFDF
 33648                           postinc2	equ	0xFDE
 33649                           postdec2	equ	0xFDD
 33650                           plusw2	equ	0xFDB
 33651                           fsr2h	equ	0xFDA
 33652                           fsr2l	equ	0xFD9
 33653                           status	equ	0xFD8
 33654                           
 33655 ;; *************** function ___llmod *****************
 33656 ;; Defined at:
 33657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 33658 ;; Parameters:    Size  Location     Type
 33659 ;;  dividend        4    4[BANK0 ] unsigned long 
 33660 ;;  divisor         4    8[BANK0 ] unsigned long 
 33661 ;; Auto vars:     Size  Location     Type
 33662 ;;  counter         1   12[BANK0 ] unsigned char 
 33663 ;; Return value:  Size  Location     Type
 33664 ;;                  4    4[BANK0 ] unsigned long 
 33665 ;; Registers used:
 33666 ;;		wreg, status,2, status,0
 33667 ;; Tracked objects:
 33668 ;;		On entry : F/0
 33669 ;;		On exit  : F/0
 33670 ;;		Unchanged: 0/0
 33671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33672 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33675 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33676 ;;Total ram usage:        9 bytes
 33677 ;; Hardware stack levels used:    1
 33678 ;; Hardware stack levels required when called:    7
 33679 ;; This function calls:
 33680 ;;		Nothing
 33681 ;; This function is called by:
 33682 ;;		_RADIO_WriteFrequency
 33683 ;; This function uses a non-reentrant model
 33684 ;;
 33685                           
 33686                           	psect	text173
 33687  0065F6                     __ptext173:
 33688                           	opt stack 0
 33689  0065F6                     ___llmod:
 33690                           	opt stack 18
 33691                           
 33692                           ; BSR set to: 0
 33693                           
 33694                           ;incstack = 0
 33695  0065F6  5168               	movf	___llmod@divisor& (0+255),w,b
 33696  0065F8  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 33697  0065FA  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 33698  0065FC  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 33699  0065FE  E023               	bz	l3118
 33700                           
 33701                           ; BSR set to: 0
 33702  006600  0E01               	movlw	1
 33703  006602  6F6C               	movwf	___llmod@counter& (0+255),b
 33704  006604  D006               	goto	l12150
 33705  006606                     l12148:
 33706                           
 33707                           ; BSR set to: 0
 33708  006606  90D8               	bcf	status,0,c
 33709  006608  3768               	rlcf	___llmod@divisor& (0+255),f,b
 33710  00660A  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 33711  00660C  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 33712  00660E  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 33713  006610  2B6C               	incf	___llmod@counter& (0+255),f,b
 33714  006612                     l12150:
 33715                           
 33716                           ; BSR set to: 0
 33717  006612  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 33718  006614  D7F8               	goto	l12148
 33719  006616                     l12152:
 33720                           
 33721                           ; BSR set to: 0
 33722  006616  5168               	movf	___llmod@divisor& (0+255),w,b
 33723  006618  5D64               	subwf	___llmod@dividend& (0+255),w,b
 33724  00661A  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33725  00661C  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 33726  00661E  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33727  006620  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 33728  006622  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33729  006624  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 33730  006626  E308               	bnc	l12156
 33731                           
 33732                           ; BSR set to: 0
 33733  006628  5168               	movf	___llmod@divisor& (0+255),w,b
 33734  00662A  5F64               	subwf	___llmod@dividend& (0+255),f,b
 33735  00662C  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 33736  00662E  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 33737  006630  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 33738  006632  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 33739  006634  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 33740  006636  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 33741  006638                     l12156:
 33742                           
 33743                           ; BSR set to: 0
 33744  006638  90D8               	bcf	status,0,c
 33745  00663A  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 33746  00663C  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 33747  00663E  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 33748  006640  3368               	rrcf	___llmod@divisor& (0+255),f,b
 33749                           
 33750                           ; BSR set to: 0
 33751  006642  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 33752  006644  D7E8               	goto	l12152
 33753  006646                     l3118:
 33754                           
 33755                           ; BSR set to: 0
 33756  006646  C064  F064         	movff	___llmod@dividend,?___llmod
 33757  00664A  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 33758  00664E  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 33759  006652  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 33760                           
 33761                           ; BSR set to: 0
 33762  006656  0012               	return		;funcret
 33763  006658                     __end_of___llmod:
 33764                           	opt stack 0
 33765                           tosu	equ	0xFFF
 33766                           tosh	equ	0xFFE
 33767                           tosl	equ	0xFFD
 33768                           pclath	equ	0xFFA
 33769                           tblptru	equ	0xFF8
 33770                           tblptrh	equ	0xFF7
 33771                           tblptrl	equ	0xFF6
 33772                           tablat	equ	0xFF5
 33773                           prodh	equ	0xFF4
 33774                           prodl	equ	0xFF3
 33775                           intcon	equ	0xFF2
 33776                           intcon2	equ	0xFF1
 33777                           intcon3	equ	0xFF0
 33778                           indf0	equ	0xFEF
 33779                           postinc0	equ	0xFEE
 33780                           plusw0	equ	0xFEB
 33781                           fsr0h	equ	0xFEA
 33782                           fsr0l	equ	0xFE9
 33783                           wreg	equ	0xFE8
 33784                           postinc1	equ	0xFE6
 33785                           postdec1	equ	0xFE5
 33786                           plusw1	equ	0xFE3
 33787                           fsr1h	equ	0xFE2
 33788                           fsr1l	equ	0xFE1
 33789                           indf2	equ	0xFDF
 33790                           postinc2	equ	0xFDE
 33791                           postdec2	equ	0xFDD
 33792                           plusw2	equ	0xFDB
 33793                           fsr2h	equ	0xFDA
 33794                           fsr2l	equ	0xFD9
 33795                           status	equ	0xFD8
 33796                           
 33797 ;; *************** function _RADIO_RegisterWrite *****************
 33798 ;; Defined at:
 33799 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33800 ;; Parameters:    Size  Location     Type
 33801 ;;  reg             1    wreg     unsigned char 
 33802 ;;  value           1    6[BANK0 ] unsigned char 
 33803 ;; Auto vars:     Size  Location     Type
 33804 ;;  reg             1    7[BANK0 ] unsigned char 
 33805 ;; Return value:  Size  Location     Type
 33806 ;;                  1    wreg      void 
 33807 ;; Registers used:
 33808 ;;		wreg, status,2, status,0, cstack
 33809 ;; Tracked objects:
 33810 ;;		On entry : 0/0
 33811 ;;		On exit  : 0/0
 33812 ;;		Unchanged: 0/0
 33813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33814 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33817 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33818 ;;Total ram usage:        2 bytes
 33819 ;; Hardware stack levels used:    1
 33820 ;; Hardware stack levels required when called:    9
 33821 ;; This function calls:
 33822 ;;		_HALSPICSAssert
 33823 ;;		_HALSPICSDeassert
 33824 ;;		_HALSPISend
 33825 ;; This function is called by:
 33826 ;;		_RADIO_WriteMode
 33827 ;;		_RADIO_WriteFrequency
 33828 ;;		_RADIO_WriteFSKFrequencyDeviation
 33829 ;;		_RADIO_WriteFSKBitRate
 33830 ;;		_RADIO_WritePower
 33831 ;;		_RADIO_Init
 33832 ;;		_RADIO_WriteConfiguration
 33833 ;;		_RADIO_Transmit
 33834 ;;		_RADIO_ReceiveStart
 33835 ;;		_RADIO_RxDone
 33836 ;;		_RADIO_RxTimeout
 33837 ;;		_RADIO_TxDone
 33838 ;;		_RADIO_UnhandledInterrupt
 33839 ;;		_RADIO_FHSSChangeChannel
 33840 ;;		_RADIO_ReadRandom
 33841 ;; This function uses a non-reentrant model
 33842 ;;
 33843                           
 33844                           	psect	text174
 33845  00750A                     __ptext174:
 33846                           	opt stack 0
 33847  00750A                     _RADIO_RegisterWrite:
 33848                           	opt stack 17
 33849                           
 33850                           ; BSR set to: 0
 33851                           ;incstack = 0
 33852                           ;RADIO_RegisterWrite@reg stored from wreg
 33853  00750A  0100               	movlb	0	; () banked
 33854  00750C  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 33855                           
 33856                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 33857  00750E  ECBC  F03C         	call	_HALSPICSAssert	;wreg free
 33858                           
 33859                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 33860  007512  0100               	movlb	0	; () banked
 33861  007514  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 33862  007516  0980               	iorlw	128
 33863  007518  EC63  F03C         	call	_HALSPISend
 33864                           
 33865                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 33866  00751C  0100               	movlb	0	; () banked
 33867  00751E  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 33868  007520  EC63  F03C         	call	_HALSPISend
 33869                           
 33870                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 33871  007524  EFBA  F03C         	goto	_HALSPICSDeassert	;wreg free
 33872  007528                     __end_of_RADIO_RegisterWrite:
 33873                           	opt stack 0
 33874                           tosu	equ	0xFFF
 33875                           tosh	equ	0xFFE
 33876                           tosl	equ	0xFFD
 33877                           pclath	equ	0xFFA
 33878                           tblptru	equ	0xFF8
 33879                           tblptrh	equ	0xFF7
 33880                           tblptrl	equ	0xFF6
 33881                           tablat	equ	0xFF5
 33882                           prodh	equ	0xFF4
 33883                           prodl	equ	0xFF3
 33884                           intcon	equ	0xFF2
 33885                           intcon2	equ	0xFF1
 33886                           intcon3	equ	0xFF0
 33887                           indf0	equ	0xFEF
 33888                           postinc0	equ	0xFEE
 33889                           plusw0	equ	0xFEB
 33890                           fsr0h	equ	0xFEA
 33891                           fsr0l	equ	0xFE9
 33892                           wreg	equ	0xFE8
 33893                           postinc1	equ	0xFE6
 33894                           postdec1	equ	0xFE5
 33895                           plusw1	equ	0xFE3
 33896                           fsr1h	equ	0xFE2
 33897                           fsr1l	equ	0xFE1
 33898                           indf2	equ	0xFDF
 33899                           postinc2	equ	0xFDE
 33900                           postdec2	equ	0xFDD
 33901                           plusw2	equ	0xFDB
 33902                           fsr2h	equ	0xFDA
 33903                           fsr2l	equ	0xFD9
 33904                           status	equ	0xFD8
 33905                           
 33906 ;; *************** function _HALSPISend *****************
 33907 ;; Defined at:
 33908 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 33909 ;; Parameters:    Size  Location     Type
 33910 ;;  data            1    wreg     unsigned char 
 33911 ;; Auto vars:     Size  Location     Type
 33912 ;;  data            1    5[BANK0 ] unsigned char 
 33913 ;; Return value:  Size  Location     Type
 33914 ;;                  1    wreg      unsigned char 
 33915 ;; Registers used:
 33916 ;;		wreg, status,2, cstack
 33917 ;; Tracked objects:
 33918 ;;		On entry : 0/1
 33919 ;;		On exit  : 0/0
 33920 ;;		Unchanged: 0/0
 33921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33926 ;;Total ram usage:        1 bytes
 33927 ;; Hardware stack levels used:    1
 33928 ;; Hardware stack levels required when called:    8
 33929 ;; This function calls:
 33930 ;;		_SPI2_Exchange8bit
 33931 ;; This function is called by:
 33932 ;;		_RADIO_RegisterWrite
 33933 ;;		_RADIO_RegisterRead
 33934 ;;		_RADIO_Transmit
 33935 ;;		_RADIO_RxDone
 33936 ;;		_RADIO_FSKPayloadReady
 33937 ;; This function uses a non-reentrant model
 33938 ;;
 33939                           
 33940                           	psect	text175
 33941  0078C6                     __ptext175:
 33942                           	opt stack 0
 33943  0078C6                     _HALSPISend:
 33944                           	opt stack 17
 33945                           
 33946                           ;incstack = 0
 33947                           ;HALSPISend@data stored from wreg
 33948  0078C6  0100               	movlb	0	; () banked
 33949  0078C8  6F65               	movwf	HALSPISend@data& (0+255),b
 33950                           
 33951                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 33952  0078CA  5165               	movf	HALSPISend@data& (0+255),w,b
 33953  0078CC  EFD4  F03B         	goto	_SPI2_Exchange8bit
 33954  0078D0                     __end_of_HALSPISend:
 33955                           	opt stack 0
 33956                           tosu	equ	0xFFF
 33957                           tosh	equ	0xFFE
 33958                           tosl	equ	0xFFD
 33959                           pclath	equ	0xFFA
 33960                           tblptru	equ	0xFF8
 33961                           tblptrh	equ	0xFF7
 33962                           tblptrl	equ	0xFF6
 33963                           tablat	equ	0xFF5
 33964                           prodh	equ	0xFF4
 33965                           prodl	equ	0xFF3
 33966                           intcon	equ	0xFF2
 33967                           intcon2	equ	0xFF1
 33968                           intcon3	equ	0xFF0
 33969                           indf0	equ	0xFEF
 33970                           postinc0	equ	0xFEE
 33971                           plusw0	equ	0xFEB
 33972                           fsr0h	equ	0xFEA
 33973                           fsr0l	equ	0xFE9
 33974                           wreg	equ	0xFE8
 33975                           postinc1	equ	0xFE6
 33976                           postdec1	equ	0xFE5
 33977                           plusw1	equ	0xFE3
 33978                           fsr1h	equ	0xFE2
 33979                           fsr1l	equ	0xFE1
 33980                           indf2	equ	0xFDF
 33981                           postinc2	equ	0xFDE
 33982                           postdec2	equ	0xFDD
 33983                           plusw2	equ	0xFDB
 33984                           fsr2h	equ	0xFDA
 33985                           fsr2l	equ	0xFD9
 33986                           status	equ	0xFD8
 33987                           
 33988 ;; *************** function _SPI2_Exchange8bit *****************
 33989 ;; Defined at:
 33990 ;;		line 77 in file "mcc_generated_files/spi2.c"
 33991 ;; Parameters:    Size  Location     Type
 33992 ;;  data            1    wreg     unsigned char 
 33993 ;; Auto vars:     Size  Location     Type
 33994 ;;  data            1    4[BANK0 ] unsigned char 
 33995 ;; Return value:  Size  Location     Type
 33996 ;;                  1    wreg      unsigned char 
 33997 ;; Registers used:
 33998 ;;		wreg, status,2
 33999 ;; Tracked objects:
 34000 ;;		On entry : F/0
 34001 ;;		On exit  : 0/0
 34002 ;;		Unchanged: 0/0
 34003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34007 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34008 ;;Total ram usage:        1 bytes
 34009 ;; Hardware stack levels used:    1
 34010 ;; Hardware stack levels required when called:    7
 34011 ;; This function calls:
 34012 ;;		Nothing
 34013 ;; This function is called by:
 34014 ;;		_HALSPISend
 34015 ;; This function uses a non-reentrant model
 34016 ;;
 34017                           
 34018                           	psect	text176
 34019  0077A8                     __ptext176:
 34020                           	opt stack 0
 34021  0077A8                     _SPI2_Exchange8bit:
 34022                           	opt stack 17
 34023                           
 34024                           ;incstack = 0
 34025                           ;SPI2_Exchange8bit@data stored from wreg
 34026  0077A8  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 34027                           
 34028                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 34029  0077AA  9E6C               	bcf	3948,7,c	;volatile
 34030                           
 34031                           ;spi2.c: 82: SSP2BUF = data;
 34032  0077AC  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 34033  0077B0                     l192:
 34034  0077B0  A06D               	btfss	3949,0,c	;volatile
 34035  0077B2  D7FE               	goto	l192
 34036                           
 34037                           ;spi2.c: 86: }
 34038                           ;spi2.c: 88: return (SSP2BUF);
 34039  0077B4  506F               	movf	3951,w,c	;volatile
 34040  0077B6  0012               	return		;funcret
 34041  0077B8                     __end_of_SPI2_Exchange8bit:
 34042                           	opt stack 0
 34043                           tosu	equ	0xFFF
 34044                           tosh	equ	0xFFE
 34045                           tosl	equ	0xFFD
 34046                           pclath	equ	0xFFA
 34047                           tblptru	equ	0xFF8
 34048                           tblptrh	equ	0xFF7
 34049                           tblptrl	equ	0xFF6
 34050                           tablat	equ	0xFF5
 34051                           prodh	equ	0xFF4
 34052                           prodl	equ	0xFF3
 34053                           intcon	equ	0xFF2
 34054                           intcon2	equ	0xFF1
 34055                           intcon3	equ	0xFF0
 34056                           indf0	equ	0xFEF
 34057                           postinc0	equ	0xFEE
 34058                           plusw0	equ	0xFEB
 34059                           fsr0h	equ	0xFEA
 34060                           fsr0l	equ	0xFE9
 34061                           wreg	equ	0xFE8
 34062                           postinc1	equ	0xFE6
 34063                           postdec1	equ	0xFE5
 34064                           plusw1	equ	0xFE3
 34065                           fsr1h	equ	0xFE2
 34066                           fsr1l	equ	0xFE1
 34067                           indf2	equ	0xFDF
 34068                           postinc2	equ	0xFDE
 34069                           postdec2	equ	0xFDD
 34070                           plusw2	equ	0xFDB
 34071                           fsr2h	equ	0xFDA
 34072                           fsr2l	equ	0xFD9
 34073                           status	equ	0xFD8
 34074                           
 34075 ;; *************** function _HALSPICSDeassert *****************
 34076 ;; Defined at:
 34077 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34078 ;; Parameters:    Size  Location     Type
 34079 ;;		None
 34080 ;; Auto vars:     Size  Location     Type
 34081 ;;		None
 34082 ;; Return value:  Size  Location     Type
 34083 ;;                  1    wreg      void 
 34084 ;; Registers used:
 34085 ;;		None
 34086 ;; Tracked objects:
 34087 ;;		On entry : 0/0
 34088 ;;		On exit  : 0/0
 34089 ;;		Unchanged: 0/0
 34090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34095 ;;Total ram usage:        0 bytes
 34096 ;; Hardware stack levels used:    1
 34097 ;; Hardware stack levels required when called:    7
 34098 ;; This function calls:
 34099 ;;		Nothing
 34100 ;; This function is called by:
 34101 ;;		_RADIO_RegisterWrite
 34102 ;;		_RADIO_RegisterRead
 34103 ;;		_RADIO_Transmit
 34104 ;;		_RADIO_RxDone
 34105 ;;		_RADIO_FSKPayloadReady
 34106 ;; This function uses a non-reentrant model
 34107 ;;
 34108                           
 34109                           	psect	text177
 34110  007974                     __ptext177:
 34111                           	opt stack 0
 34112  007974                     _HALSPICSDeassert:
 34113                           	opt stack 18
 34114                           
 34115                           ;incstack = 0
 34116                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 34117  007974  868C               	bsf	3980,3,c	;volatile
 34118  007976  0012               	return		;funcret
 34119  007978                     __end_of_HALSPICSDeassert:
 34120                           	opt stack 0
 34121                           tosu	equ	0xFFF
 34122                           tosh	equ	0xFFE
 34123                           tosl	equ	0xFFD
 34124                           pclath	equ	0xFFA
 34125                           tblptru	equ	0xFF8
 34126                           tblptrh	equ	0xFF7
 34127                           tblptrl	equ	0xFF6
 34128                           tablat	equ	0xFF5
 34129                           prodh	equ	0xFF4
 34130                           prodl	equ	0xFF3
 34131                           intcon	equ	0xFF2
 34132                           intcon2	equ	0xFF1
 34133                           intcon3	equ	0xFF0
 34134                           indf0	equ	0xFEF
 34135                           postinc0	equ	0xFEE
 34136                           plusw0	equ	0xFEB
 34137                           fsr0h	equ	0xFEA
 34138                           fsr0l	equ	0xFE9
 34139                           wreg	equ	0xFE8
 34140                           postinc1	equ	0xFE6
 34141                           postdec1	equ	0xFE5
 34142                           plusw1	equ	0xFE3
 34143                           fsr1h	equ	0xFE2
 34144                           fsr1l	equ	0xFE1
 34145                           indf2	equ	0xFDF
 34146                           postinc2	equ	0xFDE
 34147                           postdec2	equ	0xFDD
 34148                           plusw2	equ	0xFDB
 34149                           fsr2h	equ	0xFDA
 34150                           fsr2l	equ	0xFD9
 34151                           status	equ	0xFD8
 34152                           
 34153 ;; *************** function _HALSPICSAssert *****************
 34154 ;; Defined at:
 34155 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34156 ;; Parameters:    Size  Location     Type
 34157 ;;		None
 34158 ;; Auto vars:     Size  Location     Type
 34159 ;;		None
 34160 ;; Return value:  Size  Location     Type
 34161 ;;                  1    wreg      void 
 34162 ;; Registers used:
 34163 ;;		None
 34164 ;; Tracked objects:
 34165 ;;		On entry : 0/1
 34166 ;;		On exit  : 0/0
 34167 ;;		Unchanged: 0/0
 34168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34173 ;;Total ram usage:        0 bytes
 34174 ;; Hardware stack levels used:    1
 34175 ;; Hardware stack levels required when called:    7
 34176 ;; This function calls:
 34177 ;;		Nothing
 34178 ;; This function is called by:
 34179 ;;		_RADIO_RegisterWrite
 34180 ;;		_RADIO_RegisterRead
 34181 ;;		_RADIO_Transmit
 34182 ;;		_RADIO_RxDone
 34183 ;;		_RADIO_FSKPayloadReady
 34184 ;; This function uses a non-reentrant model
 34185 ;;
 34186                           
 34187                           	psect	text178
 34188  007978                     __ptext178:
 34189                           	opt stack 0
 34190  007978                     _HALSPICSAssert:
 34191                           	opt stack 18
 34192                           
 34193                           ;incstack = 0
 34194                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 34195  007978  968C               	bcf	3980,3,c	;volatile
 34196  00797A  0012               	return		;funcret
 34197  00797C                     __end_of_HALSPICSAssert:
 34198                           	opt stack 0
 34199                           tosu	equ	0xFFF
 34200                           tosh	equ	0xFFE
 34201                           tosl	equ	0xFFD
 34202                           pclath	equ	0xFFA
 34203                           tblptru	equ	0xFF8
 34204                           tblptrh	equ	0xFF7
 34205                           tblptrl	equ	0xFF6
 34206                           tablat	equ	0xFF5
 34207                           prodh	equ	0xFF4
 34208                           prodl	equ	0xFF3
 34209                           intcon	equ	0xFF2
 34210                           intcon2	equ	0xFF1
 34211                           intcon3	equ	0xFF0
 34212                           indf0	equ	0xFEF
 34213                           postinc0	equ	0xFEE
 34214                           plusw0	equ	0xFEB
 34215                           fsr0h	equ	0xFEA
 34216                           fsr0l	equ	0xFE9
 34217                           wreg	equ	0xFE8
 34218                           postinc1	equ	0xFE6
 34219                           postdec1	equ	0xFE5
 34220                           plusw1	equ	0xFE3
 34221                           fsr1h	equ	0xFE2
 34222                           fsr1l	equ	0xFE1
 34223                           indf2	equ	0xFDF
 34224                           postinc2	equ	0xFDE
 34225                           postdec2	equ	0xFDD
 34226                           plusw2	equ	0xFDB
 34227                           fsr2h	equ	0xFDA
 34228                           fsr2l	equ	0xFD9
 34229                           status	equ	0xFD8
 34230                           
 34231 ;; *************** function _RADIO_Reset *****************
 34232 ;; Defined at:
 34233 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34234 ;; Parameters:    Size  Location     Type
 34235 ;;		None
 34236 ;; Auto vars:     Size  Location     Type
 34237 ;;		None
 34238 ;; Return value:  Size  Location     Type
 34239 ;;                  1    wreg      void 
 34240 ;; Registers used:
 34241 ;;		wreg, status,2, status,0, cstack
 34242 ;; Tracked objects:
 34243 ;;		On entry : E/1
 34244 ;;		On exit  : E/0
 34245 ;;		Unchanged: 0/0
 34246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34251 ;;Total ram usage:        0 bytes
 34252 ;; Hardware stack levels used:    1
 34253 ;; Hardware stack levels required when called:    8
 34254 ;; This function calls:
 34255 ;;		_HALResetPinMakeInput
 34256 ;;		_HALResetPinMakeOutput
 34257 ;;		_HALResetPinOutputValue
 34258 ;;		_SystemBlockingWaitMs
 34259 ;; This function is called by:
 34260 ;;		_RADIO_Init
 34261 ;; This function uses a non-reentrant model
 34262 ;;
 34263                           
 34264                           	psect	text179
 34265  007042                     __ptext179:
 34266                           	opt stack 0
 34267  007042                     _RADIO_Reset:
 34268                           	opt stack 20
 34269                           
 34270                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 34271                           
 34272                           ;incstack = 0
 34273  007042  ECBE  F03C         	call	_HALResetPinMakeOutput	;wreg free
 34274                           
 34275                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 34276  007046  0E00               	movlw	0
 34277  007048  ECAE  F03B         	call	_HALResetPinOutputValue
 34278                           
 34279                           ; BSR set to: 0
 34280                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 34281  00704C  0E01               	movlw	1
 34282  00704E  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34283  007050  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34284  007052  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34285  007054  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34286  007056  EC22  F039         	call	_SystemBlockingWaitMs	;wreg free
 34287                           
 34288                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 34289  00705A  ECC0  F03C         	call	_HALResetPinMakeInput	;wreg free
 34290                           
 34291                           ; BSR set to: 0
 34292                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 34293  00705E  0E0A               	movlw	10
 34294  007060  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34295  007062  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34296  007064  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34297  007066  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34298  007068  EC22  F039         	call	_SystemBlockingWaitMs	;wreg free
 34299                           
 34300                           ; BSR set to: 0
 34301                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 34302  00706C  0E01               	movlw	1
 34303  00706E  ECAE  F03B         	call	_HALResetPinOutputValue
 34304                           
 34305                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 34306  007072  EFBE  F03C         	goto	_HALResetPinMakeOutput	;wreg free
 34307  007076                     __end_of_RADIO_Reset:
 34308                           	opt stack 0
 34309                           tosu	equ	0xFFF
 34310                           tosh	equ	0xFFE
 34311                           tosl	equ	0xFFD
 34312                           pclath	equ	0xFFA
 34313                           tblptru	equ	0xFF8
 34314                           tblptrh	equ	0xFF7
 34315                           tblptrl	equ	0xFF6
 34316                           tablat	equ	0xFF5
 34317                           prodh	equ	0xFF4
 34318                           prodl	equ	0xFF3
 34319                           intcon	equ	0xFF2
 34320                           intcon2	equ	0xFF1
 34321                           intcon3	equ	0xFF0
 34322                           indf0	equ	0xFEF
 34323                           postinc0	equ	0xFEE
 34324                           plusw0	equ	0xFEB
 34325                           fsr0h	equ	0xFEA
 34326                           fsr0l	equ	0xFE9
 34327                           wreg	equ	0xFE8
 34328                           postinc1	equ	0xFE6
 34329                           postdec1	equ	0xFE5
 34330                           plusw1	equ	0xFE3
 34331                           fsr1h	equ	0xFE2
 34332                           fsr1l	equ	0xFE1
 34333                           indf2	equ	0xFDF
 34334                           postinc2	equ	0xFDE
 34335                           postdec2	equ	0xFDD
 34336                           plusw2	equ	0xFDB
 34337                           fsr2h	equ	0xFDA
 34338                           fsr2l	equ	0xFD9
 34339                           status	equ	0xFD8
 34340                           
 34341 ;; *************** function _SystemBlockingWaitMs *****************
 34342 ;; Defined at:
 34343 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 34344 ;; Parameters:    Size  Location     Type
 34345 ;;  ms              4    4[BANK0 ] unsigned long 
 34346 ;; Auto vars:     Size  Location     Type
 34347 ;;		None
 34348 ;; Return value:  Size  Location     Type
 34349 ;;                  1    wreg      void 
 34350 ;; Registers used:
 34351 ;;		wreg, status,2, status,0
 34352 ;; Tracked objects:
 34353 ;;		On entry : F/0
 34354 ;;		On exit  : F/0
 34355 ;;		Unchanged: 0/0
 34356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34360 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34361 ;;Total ram usage:        5 bytes
 34362 ;; Hardware stack levels used:    1
 34363 ;; Hardware stack levels required when called:    7
 34364 ;; This function calls:
 34365 ;;		Nothing
 34366 ;; This function is called by:
 34367 ;;		_RADIO_WriteMode
 34368 ;;		_RADIO_Reset
 34369 ;;		_RADIO_ReadRandom
 34370 ;; This function uses a non-reentrant model
 34371 ;;
 34372                           
 34373                           	psect	text180
 34374  007244                     __ptext180:
 34375                           	opt stack 0
 34376  007244                     _SystemBlockingWaitMs:
 34377                           	opt stack 19
 34378                           
 34379                           ; BSR set to: 0
 34380                           ;sw_timer.c: 147: while (ms > 0)
 34381                           
 34382                           ;incstack = 0
 34383  007244  D00E               	goto	l11994
 34384  007246                     l11990:
 34385                           
 34386                           ; BSR set to: 0
 34387                           ;sw_timer.c: 148: {
 34388                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 34389  007246  0E06               	movlw	6
 34390  007248  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 34391  00724A  0E30               	movlw	48
 34392  00724C                     u19707:
 34393  00724C  2EE8               	decfsz	wreg,f,c
 34394  00724E  D7FE               	goto	u19707
 34395  007250  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 34396  007252  D7FC               	goto	u19707
 34397  007254  D000               	nop2	
 34398                           
 34399                           ;sw_timer.c: 150: ms--;
 34400  007256  0100               	movlb	0	; () banked
 34401  007258  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 34402  00725A  0E00               	movlw	0
 34403  00725C  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 34404  00725E  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 34405  007260  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 34406  007262                     l11994:
 34407                           
 34408                           ; BSR set to: 0
 34409  007262  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 34410  007264  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 34411  007266  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 34412  007268  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 34413  00726A  E1ED               	bnz	l11990
 34414                           
 34415                           ; BSR set to: 0
 34416  00726C  0012               	return		;funcret
 34417  00726E                     __end_of_SystemBlockingWaitMs:
 34418                           	opt stack 0
 34419                           tosu	equ	0xFFF
 34420                           tosh	equ	0xFFE
 34421                           tosl	equ	0xFFD
 34422                           pclath	equ	0xFFA
 34423                           tblptru	equ	0xFF8
 34424                           tblptrh	equ	0xFF7
 34425                           tblptrl	equ	0xFF6
 34426                           tablat	equ	0xFF5
 34427                           prodh	equ	0xFF4
 34428                           prodl	equ	0xFF3
 34429                           intcon	equ	0xFF2
 34430                           intcon2	equ	0xFF1
 34431                           intcon3	equ	0xFF0
 34432                           indf0	equ	0xFEF
 34433                           postinc0	equ	0xFEE
 34434                           plusw0	equ	0xFEB
 34435                           fsr0h	equ	0xFEA
 34436                           fsr0l	equ	0xFE9
 34437                           wreg	equ	0xFE8
 34438                           postinc1	equ	0xFE6
 34439                           postdec1	equ	0xFE5
 34440                           plusw1	equ	0xFE3
 34441                           fsr1h	equ	0xFE2
 34442                           fsr1l	equ	0xFE1
 34443                           indf2	equ	0xFDF
 34444                           postinc2	equ	0xFDE
 34445                           postdec2	equ	0xFDD
 34446                           plusw2	equ	0xFDB
 34447                           fsr2h	equ	0xFDA
 34448                           fsr2l	equ	0xFD9
 34449                           status	equ	0xFD8
 34450                           
 34451 ;; *************** function _HALResetPinOutputValue *****************
 34452 ;; Defined at:
 34453 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34454 ;; Parameters:    Size  Location     Type
 34455 ;;  value           1    wreg     unsigned char 
 34456 ;; Auto vars:     Size  Location     Type
 34457 ;;  value           1    4[BANK0 ] unsigned char 
 34458 ;; Return value:  Size  Location     Type
 34459 ;;                  1    wreg      void 
 34460 ;; Registers used:
 34461 ;;		wreg, status,2, status,0
 34462 ;; Tracked objects:
 34463 ;;		On entry : E/1
 34464 ;;		On exit  : F/0
 34465 ;;		Unchanged: 0/0
 34466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34470 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34471 ;;Total ram usage:        1 bytes
 34472 ;; Hardware stack levels used:    1
 34473 ;; Hardware stack levels required when called:    7
 34474 ;; This function calls:
 34475 ;;		Nothing
 34476 ;; This function is called by:
 34477 ;;		_RADIO_Reset
 34478 ;; This function uses a non-reentrant model
 34479 ;;
 34480                           
 34481                           	psect	text181
 34482  00775C                     __ptext181:
 34483                           	opt stack 0
 34484  00775C                     _HALResetPinOutputValue:
 34485                           	opt stack 20
 34486                           
 34487                           ; BSR set to: 0
 34488                           ;incstack = 0
 34489                           ;HALResetPinOutputValue@value stored from wreg
 34490  00775C  0100               	movlb	0	; () banked
 34491  00775E  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 34492                           
 34493                           ;radio_driver_hal.c: 57: if (value == 0)
 34494  007760  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 34495  007762  E102               	bnz	l9632
 34496                           
 34497                           ; BSR set to: 0
 34498                           
 34499                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 34500  007764  948B               	bcf	3979,2,c	;volatile
 34501  007766  0012               	return	
 34502  007768                     l9632:
 34503                           
 34504                           ; BSR set to: 0
 34505                           ;radio_driver_hal.c: 59: else if (value == 1)
 34506  007768  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 34507  00776A  B4D8               	btfsc	status,2,c
 34508                           
 34509                           ; BSR set to: 0
 34510                           
 34511                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 34512  00776C  848B               	bsf	3979,2,c	;volatile
 34513                           
 34514                           ; BSR set to: 0
 34515  00776E  0012               	return		;funcret
 34516  007770                     __end_of_HALResetPinOutputValue:
 34517                           	opt stack 0
 34518                           tosu	equ	0xFFF
 34519                           tosh	equ	0xFFE
 34520                           tosl	equ	0xFFD
 34521                           pclath	equ	0xFFA
 34522                           tblptru	equ	0xFF8
 34523                           tblptrh	equ	0xFF7
 34524                           tblptrl	equ	0xFF6
 34525                           tablat	equ	0xFF5
 34526                           prodh	equ	0xFF4
 34527                           prodl	equ	0xFF3
 34528                           intcon	equ	0xFF2
 34529                           intcon2	equ	0xFF1
 34530                           intcon3	equ	0xFF0
 34531                           indf0	equ	0xFEF
 34532                           postinc0	equ	0xFEE
 34533                           plusw0	equ	0xFEB
 34534                           fsr0h	equ	0xFEA
 34535                           fsr0l	equ	0xFE9
 34536                           wreg	equ	0xFE8
 34537                           postinc1	equ	0xFE6
 34538                           postdec1	equ	0xFE5
 34539                           plusw1	equ	0xFE3
 34540                           fsr1h	equ	0xFE2
 34541                           fsr1l	equ	0xFE1
 34542                           indf2	equ	0xFDF
 34543                           postinc2	equ	0xFDE
 34544                           postdec2	equ	0xFDD
 34545                           plusw2	equ	0xFDB
 34546                           fsr2h	equ	0xFDA
 34547                           fsr2l	equ	0xFD9
 34548                           status	equ	0xFD8
 34549                           
 34550 ;; *************** function _HALResetPinMakeOutput *****************
 34551 ;; Defined at:
 34552 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34553 ;; Parameters:    Size  Location     Type
 34554 ;;		None
 34555 ;; Auto vars:     Size  Location     Type
 34556 ;;		None
 34557 ;; Return value:  Size  Location     Type
 34558 ;;                  1    wreg      void 
 34559 ;; Registers used:
 34560 ;;		None
 34561 ;; Tracked objects:
 34562 ;;		On entry : E/1
 34563 ;;		On exit  : E/0
 34564 ;;		Unchanged: E/0
 34565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34570 ;;Total ram usage:        0 bytes
 34571 ;; Hardware stack levels used:    1
 34572 ;; Hardware stack levels required when called:    7
 34573 ;; This function calls:
 34574 ;;		Nothing
 34575 ;; This function is called by:
 34576 ;;		_RADIO_Reset
 34577 ;; This function uses a non-reentrant model
 34578 ;;
 34579                           
 34580                           	psect	text182
 34581  00797C                     __ptext182:
 34582                           	opt stack 0
 34583  00797C                     _HALResetPinMakeOutput:
 34584                           	opt stack 20
 34585                           
 34586                           ; BSR set to: 0
 34587                           ;incstack = 0
 34588                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 34589  00797C  9494               	bcf	3988,2,c	;volatile
 34590  00797E  0012               	return		;funcret
 34591  007980                     __end_of_HALResetPinMakeOutput:
 34592                           	opt stack 0
 34593                           tosu	equ	0xFFF
 34594                           tosh	equ	0xFFE
 34595                           tosl	equ	0xFFD
 34596                           pclath	equ	0xFFA
 34597                           tblptru	equ	0xFF8
 34598                           tblptrh	equ	0xFF7
 34599                           tblptrl	equ	0xFF6
 34600                           tablat	equ	0xFF5
 34601                           prodh	equ	0xFF4
 34602                           prodl	equ	0xFF3
 34603                           intcon	equ	0xFF2
 34604                           intcon2	equ	0xFF1
 34605                           intcon3	equ	0xFF0
 34606                           indf0	equ	0xFEF
 34607                           postinc0	equ	0xFEE
 34608                           plusw0	equ	0xFEB
 34609                           fsr0h	equ	0xFEA
 34610                           fsr0l	equ	0xFE9
 34611                           wreg	equ	0xFE8
 34612                           postinc1	equ	0xFE6
 34613                           postdec1	equ	0xFE5
 34614                           plusw1	equ	0xFE3
 34615                           fsr1h	equ	0xFE2
 34616                           fsr1l	equ	0xFE1
 34617                           indf2	equ	0xFDF
 34618                           postinc2	equ	0xFDE
 34619                           postdec2	equ	0xFDD
 34620                           plusw2	equ	0xFDB
 34621                           fsr2h	equ	0xFDA
 34622                           fsr2l	equ	0xFD9
 34623                           status	equ	0xFD8
 34624                           
 34625 ;; *************** function _HALResetPinMakeInput *****************
 34626 ;; Defined at:
 34627 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34628 ;; Parameters:    Size  Location     Type
 34629 ;;		None
 34630 ;; Auto vars:     Size  Location     Type
 34631 ;;		None
 34632 ;; Return value:  Size  Location     Type
 34633 ;;                  1    wreg      void 
 34634 ;; Registers used:
 34635 ;;		None
 34636 ;; Tracked objects:
 34637 ;;		On entry : F/0
 34638 ;;		On exit  : F/0
 34639 ;;		Unchanged: F/0
 34640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34645 ;;Total ram usage:        0 bytes
 34646 ;; Hardware stack levels used:    1
 34647 ;; Hardware stack levels required when called:    7
 34648 ;; This function calls:
 34649 ;;		Nothing
 34650 ;; This function is called by:
 34651 ;;		_RADIO_Reset
 34652 ;; This function uses a non-reentrant model
 34653 ;;
 34654                           
 34655                           	psect	text183
 34656  007980                     __ptext183:
 34657                           	opt stack 0
 34658  007980                     _HALResetPinMakeInput:
 34659                           	opt stack 20
 34660                           
 34661                           ; BSR set to: 0
 34662                           
 34663                           ;incstack = 0
 34664                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 34665  007980  8494               	bsf	3988,2,c	;volatile
 34666                           
 34667                           ; BSR set to: 0
 34668  007982  0012               	return		;funcret
 34669  007984                     __end_of_HALResetPinMakeInput:
 34670                           	opt stack 0
 34671                           tosu	equ	0xFFF
 34672                           tosh	equ	0xFFE
 34673                           tosl	equ	0xFFD
 34674                           pclath	equ	0xFFA
 34675                           tblptru	equ	0xFF8
 34676                           tblptrh	equ	0xFF7
 34677                           tblptrl	equ	0xFF6
 34678                           tablat	equ	0xFF5
 34679                           prodh	equ	0xFF4
 34680                           prodl	equ	0xFF3
 34681                           intcon	equ	0xFF2
 34682                           intcon2	equ	0xFF1
 34683                           intcon3	equ	0xFF0
 34684                           indf0	equ	0xFEF
 34685                           postinc0	equ	0xFEE
 34686                           plusw0	equ	0xFEB
 34687                           fsr0h	equ	0xFEA
 34688                           fsr0l	equ	0xFE9
 34689                           wreg	equ	0xFE8
 34690                           postinc1	equ	0xFE6
 34691                           postdec1	equ	0xFE5
 34692                           plusw1	equ	0xFE3
 34693                           fsr1h	equ	0xFE2
 34694                           fsr1l	equ	0xFE1
 34695                           indf2	equ	0xFDF
 34696                           postinc2	equ	0xFDE
 34697                           postdec2	equ	0xFDD
 34698                           plusw2	equ	0xFDB
 34699                           fsr2h	equ	0xFDA
 34700                           fsr2l	equ	0xFD9
 34701                           status	equ	0xFD8
 34702                           
 34703 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 34704 ;; Defined at:
 34705 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 34706 ;; Parameters:    Size  Location     Type
 34707 ;;  period          2   54[BANK0 ] unsigned int 
 34708 ;; Auto vars:     Size  Location     Type
 34709 ;;  iCtr            1   68[BANK0 ] unsigned char 
 34710 ;; Return value:  Size  Location     Type
 34711 ;;                  1    wreg      void 
 34712 ;; Registers used:
 34713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34714 ;; Tracked objects:
 34715 ;;		On entry : F/0
 34716 ;;		On exit  : D/0
 34717 ;;		Unchanged: 0/0
 34718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34720 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34721 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34722 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34723 ;;Total ram usage:       15 bytes
 34724 ;; Hardware stack levels used:    1
 34725 ;; Hardware stack levels required when called:   11
 34726 ;; This function calls:
 34727 ;;		_SwTimerSetTimeout
 34728 ;;		_SwTimerStart
 34729 ;;		_SwTimerStop
 34730 ;;		___lldiv
 34731 ;; This function is called by:
 34732 ;;		_LORAWAN_Reset
 34733 ;; This function uses a non-reentrant model
 34734 ;;
 34735                           
 34736                           	psect	text184
 34737  0036EE                     __ptext184:
 34738                           	opt stack 0
 34739  0036EE                     _LORAWAN_LinkCheckConfigure:
 34740                           	opt stack 17
 34741                           
 34742                           ; BSR set to: 0
 34743                           ;lorawan.c: 757: uint8_t iCtr;
 34744                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 34745                           
 34746                           ; BSR set to: 0
 34747                           ;incstack = 0
 34748  0036EE  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34749  0036F0  6F98               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34750  0036F2  5197               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34751  0036F4  6F99               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34752  0036F6  6B9A               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34753  0036F8  6B9B               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34754  0036FA  0EE8               	movlw	232
 34755  0036FC  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34756  0036FE  CFF3 F09C          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 34757  003702  CFF4 F09D          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 34758  003706  6B9E               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 34759  003708  6B9F               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 34760  00370A  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34761  00370C  50F3               	movf	prodl,w,c
 34762  00370E  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34763  003710  50F4               	movf	prodh,w,c
 34764  003712  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34765  003714  0E00               	movlw	0
 34766  003716  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34767  003718  0E03               	movlw	3
 34768  00371A  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34769  00371C  50F3               	movf	prodl,w,c
 34770  00371E  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 34771  003720  50F4               	movf	prodh,w,c
 34772  003722  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34773  003724  0E00               	movlw	0
 34774  003726  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34775  003728  0EE8               	movlw	232
 34776  00372A  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34777  00372C  50F3               	movf	prodl,w,c
 34778  00372E  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34779  003730  50F4               	movf	prodh,w,c
 34780  003732  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34781  003734  0E03               	movlw	3
 34782  003736  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34783  003738  50F3               	movf	prodl,w,c
 34784  00373A  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34785  00373C  50F4               	movf	prodh,w,c
 34786  00373E  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34787  003740  0E00               	movlw	0
 34788  003742  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34789  003744  50F3               	movf	prodl,w,c
 34790  003746  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 34791  003748  50F4               	movf	prodh,w,c
 34792  00374A  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34793  00374C  0EE8               	movlw	232
 34794  00374E  039B               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 34795  003750  50F3               	movf	prodl,w,c
 34796  003752  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34797  003754  0E03               	movlw	3
 34798  003756  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 34799  003758  50F3               	movf	prodl,w,c
 34800  00375A  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34801  00375C  0E00               	movlw	0
 34802  00375E  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 34803  003760  50F3               	movf	prodl,w,c
 34804  003762  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34805  003764  0E00               	movlw	0
 34806  003766  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 34807  003768  50F3               	movf	prodl,w,c
 34808  00376A  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 34809  00376C  C09C  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 34810  003770  C09D  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 34811  003774  C09E  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 34812  003778  C09F  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 34813                           
 34814                           ; BSR set to: 0
 34815                           ;lorawan.c: 761: if (period == 0)
 34816  00377C  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 34817  00377E  1197               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 34818  003780  E127               	bnz	l1993
 34819                           
 34820                           ; BSR set to: 0
 34821                           ;lorawan.c: 762: {
 34822                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 34823  003782  0102               	movlb	2	; () banked
 34824  003784  51E7               	movf	(_loRa+231)& (0+255),w,b
 34825  003786  ECB2  F03A         	call	_SwTimerStop
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 34829  00378A  0102               	movlb	2	; () banked
 34830  00378C  9503               	bcf	(_loRa+3)& (0+255),2,b
 34831                           
 34832                           ; BSR set to: 2
 34833                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 34834  00378E  0100               	movlb	0	; () banked
 34835  003790  6BA4               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 34836  003792  D018               	goto	l15038
 34837  003794                     l15030:
 34838                           
 34839                           ; BSR set to: 0
 34840                           ;lorawan.c: 766: {
 34841                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 34842  003794  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34843  003796  0D02               	mullw	2
 34844  003798  0EA8               	movlw	low (_loRa+168)
 34845  00379A  24F3               	addwf	prodl,w,c
 34846  00379C  6ED9               	movwf	fsr2l,c
 34847  00379E  0E02               	movlw	high (_loRa+168)
 34848  0037A0  20F4               	addwfc	prodh,w,c
 34849  0037A2  6EDA               	movwf	fsr2h,c
 34850  0037A4  0E02               	movlw	2
 34851  0037A6  18DE               	xorwf	postinc2,w,c
 34852  0037A8  E10B               	bnz	l15036
 34853                           
 34854                           ; BSR set to: 0
 34855                           ;lorawan.c: 768: {
 34856                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 34857  0037AA  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34858  0037AC  0D02               	mullw	2
 34859  0037AE  0EA8               	movlw	low (_loRa+168)
 34860  0037B0  24F3               	addwf	prodl,w,c
 34861  0037B2  6ED9               	movwf	fsr2l,c
 34862  0037B4  0E02               	movlw	high (_loRa+168)
 34863  0037B6  20F4               	addwfc	prodh,w,c
 34864  0037B8  6EDA               	movwf	fsr2h,c
 34865  0037BA  68DF               	setf	indf2,c
 34866                           
 34867                           ; BSR set to: 0
 34868                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 34869  0037BC  0102               	movlb	2	; () banked
 34870  0037BE  07A7               	decf	(_loRa+167)& (0+255),f,b
 34871  0037C0                     l15036:
 34872  0037C0  0100               	movlb	0	; () banked
 34873  0037C2  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 34874  0037C4                     l15038:
 34875                           
 34876                           ; BSR set to: 0
 34877  0037C4  0102               	movlb	2	; () banked
 34878  0037C6  51A7               	movf	(_loRa+167)& (0+255),w,b
 34879  0037C8  0100               	movlb	0	; () banked
 34880  0037CA  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 34881  0037CC  E3E3               	bnc	l15030
 34882  0037CE  0012               	return	
 34883  0037D0                     l1993:
 34884                           
 34885                           ; BSR set to: 0
 34886                           ;lorawan.c: 776: else
 34887                           ;lorawan.c: 777: {
 34888                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 34889  0037D0  0102               	movlb	2	; () banked
 34890  0037D2  8503               	bsf	(_loRa+3)& (0+255),2,b
 34891                           
 34892                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 34893  0037D4  A902               	btfss	(_loRa+2)& (0+255),4,b
 34894  0037D6  0012               	return	
 34895                           
 34896                           ; BSR set to: 2
 34897                           ;lorawan.c: 782: {
 34898                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 34899  0037D8  51CF               	movf	(_loRa+207)& (0+255),w,b
 34900  0037DA  E106               	bnz	u17510
 34901  0037DC  29CC               	incf	(_loRa+204)& (0+255),w,b
 34902  0037DE  0EFF               	movlw	255
 34903  0037E0  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 34904  0037E2  0E0F               	movlw	15
 34905  0037E4  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 34906  0037E6  E319               	bnc	l15044
 34907  0037E8                     u17510:
 34908                           
 34909                           ; BSR set to: 2
 34910  0037E8  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 34911  0037EC  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 34912  0037F0  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 34913  0037F4  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 34914  0037F8  0E7D               	movlw	125
 34915  0037FA  0100               	movlb	0	; () banked
 34916  0037FC  6F68               	movwf	___lldiv@divisor& (0+255),b
 34917  0037FE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34918  003800  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34919  003802  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34920  003804  EC1A  F030         	call	___lldiv	;wreg free
 34921  003808  0E0C               	movlw	12
 34922  00380A                     u17525:
 34923  00380A  90D8               	bcf	status,0,c
 34924  00380C  3764               	rlcf	?___lldiv& (0+255),f,b
 34925  00380E  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 34926  003810  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 34927  003812  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 34928  003814  2EE8               	decfsz	wreg,f,c
 34929  003816  D7F9               	goto	u17525
 34930  003818  D020               	goto	L21
 34931  00381A                     l15044:
 34932                           
 34933                           ; BSR set to: 2
 34934  00381A  C2CC  F098         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 34935  00381E  C2CD  F099         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 34936  003822  C2CE  F09A         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 34937  003826  C2CF  F09B         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 34938  00382A  0E0C               	movlw	12
 34939  00382C                     u17535:
 34940  00382C  90D8               	bcf	status,0,c
 34941  00382E  0100               	movlb	0	; () banked
 34942  003830  3798               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 34943  003832  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 34944  003834  379A               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 34945  003836  379B               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 34946  003838  2EE8               	decfsz	wreg,f,c
 34947  00383A  D7F8               	goto	u17535
 34948  00383C  C098  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 34949  003840  C099  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 34950  003844  C09A  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 34951  003848  C09B  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 34952  00384C  0E7D               	movlw	125
 34953  00384E  6F68               	movwf	___lldiv@divisor& (0+255),b
 34954  003850  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 34955  003852  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34956  003854  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34957  003856  EC1A  F030         	call	___lldiv	;wreg free
 34958  00385A                     L21:
 34959  00385A  C064  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3502
 34960  00385E  C065  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3502+1
 34961  003862  C066  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3502+2
 34962  003866  C067  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3502+3
 34963                           
 34964                           ; BSR set to: 0
 34965  00386A  C0A0  F071         	movff	_LORAWAN_LinkCheckConfigure$3502,SwTimerSetTimeout@timeout
 34966  00386E  C0A1  F072         	movff	_LORAWAN_LinkCheckConfigure$3502+1,SwTimerSetTimeout@timeout+1
 34967  003872  C0A2  F073         	movff	_LORAWAN_LinkCheckConfigure$3502+2,SwTimerSetTimeout@timeout+2
 34968  003876  C0A3  F074         	movff	_LORAWAN_LinkCheckConfigure$3502+3,SwTimerSetTimeout@timeout+3
 34969  00387A  0102               	movlb	2	; () banked
 34970  00387C  51E7               	movf	(_loRa+231)& (0+255),w,b
 34971  00387E  ECA5  F036         	call	_SwTimerSetTimeout
 34972                           
 34973                           ; BSR set to: 0
 34974                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 34975  003882  0102               	movlb	2	; () banked
 34976  003884  51E7               	movf	(_loRa+231)& (0+255),w,b
 34977  003886  EF58  F02E         	goto	_SwTimerStart
 34978  00388A                     __end_of_LORAWAN_LinkCheckConfigure:
 34979                           	opt stack 0
 34980                           tosu	equ	0xFFF
 34981                           tosh	equ	0xFFE
 34982                           tosl	equ	0xFFD
 34983                           pclath	equ	0xFFA
 34984                           tblptru	equ	0xFF8
 34985                           tblptrh	equ	0xFF7
 34986                           tblptrl	equ	0xFF6
 34987                           tablat	equ	0xFF5
 34988                           prodh	equ	0xFF4
 34989                           prodl	equ	0xFF3
 34990                           intcon	equ	0xFF2
 34991                           intcon2	equ	0xFF1
 34992                           intcon3	equ	0xFF0
 34993                           indf0	equ	0xFEF
 34994                           postinc0	equ	0xFEE
 34995                           plusw0	equ	0xFEB
 34996                           fsr0h	equ	0xFEA
 34997                           fsr0l	equ	0xFE9
 34998                           wreg	equ	0xFE8
 34999                           postinc1	equ	0xFE6
 35000                           postdec1	equ	0xFE5
 35001                           plusw1	equ	0xFE3
 35002                           fsr1h	equ	0xFE2
 35003                           fsr1l	equ	0xFE1
 35004                           indf2	equ	0xFDF
 35005                           postinc2	equ	0xFDE
 35006                           postdec2	equ	0xFDD
 35007                           plusw2	equ	0xFDB
 35008                           fsr2h	equ	0xFDA
 35009                           fsr2l	equ	0xFD9
 35010                           status	equ	0xFD8
 35011                           
 35012 ;; *************** function ___lldiv *****************
 35013 ;; Defined at:
 35014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 35015 ;; Parameters:    Size  Location     Type
 35016 ;;  dividend        4    4[BANK0 ] unsigned long 
 35017 ;;  divisor         4    8[BANK0 ] unsigned long 
 35018 ;; Auto vars:     Size  Location     Type
 35019 ;;  quotient        4   12[BANK0 ] unsigned long 
 35020 ;;  counter         1   16[BANK0 ] unsigned char 
 35021 ;; Return value:  Size  Location     Type
 35022 ;;                  4    4[BANK0 ] unsigned long 
 35023 ;; Registers used:
 35024 ;;		wreg, status,2, status,0
 35025 ;; Tracked objects:
 35026 ;;		On entry : F/0
 35027 ;;		On exit  : F/0
 35028 ;;		Unchanged: 0/0
 35029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35030 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35031 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35033 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35034 ;;Total ram usage:       13 bytes
 35035 ;; Hardware stack levels used:    1
 35036 ;; Hardware stack levels required when called:    7
 35037 ;; This function calls:
 35038 ;;		Nothing
 35039 ;; This function is called by:
 35040 ;;		_RADIO_WriteFrequency
 35041 ;;		_RADIO_WriteFSKFrequencyDeviation
 35042 ;;		_RADIO_WriteFSKBitRate
 35043 ;;		_RADIO_Transmit
 35044 ;;		_RADIO_ReceiveStart
 35045 ;;		_LORAWAN_TxDone
 35046 ;;		_LORAWAN_RxTimeout
 35047 ;;		_StartReTxTimer
 35048 ;;		_DutyCycleCallback
 35049 ;;		_LORAWAN_LinkCheckConfigure
 35050 ;;		_LORAWAN_LinkCheckCallback
 35051 ;;		_UpdateRetransmissionAckTimeoutState
 35052 ;;		_UpdateJoinSuccessState
 35053 ;; This function uses a non-reentrant model
 35054 ;;
 35055                           
 35056                           	psect	text185
 35057  006034                     __ptext185:
 35058                           	opt stack 0
 35059  006034                     ___lldiv:
 35060                           	opt stack 20
 35061                           
 35062                           ; BSR set to: 0
 35063                           
 35064                           ;incstack = 0
 35065  006034  6B6C               	clrf	___lldiv@quotient& (0+255),b
 35066  006036  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 35067  006038  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 35068  00603A  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 35069                           
 35070                           ; BSR set to: 0
 35071  00603C  5168               	movf	___lldiv@divisor& (0+255),w,b
 35072  00603E  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35073  006040  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35074  006042  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35075  006044  E029               	bz	l3108
 35076                           
 35077                           ; BSR set to: 0
 35078  006046  0E01               	movlw	1
 35079  006048  6F70               	movwf	___lldiv@counter& (0+255),b
 35080  00604A  D006               	goto	l12130
 35081  00604C                     l12128:
 35082                           
 35083                           ; BSR set to: 0
 35084  00604C  90D8               	bcf	status,0,c
 35085  00604E  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 35086  006050  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35087  006052  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35088  006054  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35089  006056  2B70               	incf	___lldiv@counter& (0+255),f,b
 35090  006058                     l12130:
 35091                           
 35092                           ; BSR set to: 0
 35093  006058  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35094  00605A  D7F8               	goto	l12128
 35095  00605C                     l12132:
 35096                           
 35097                           ; BSR set to: 0
 35098  00605C  90D8               	bcf	status,0,c
 35099  00605E  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 35100  006060  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35101  006062  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35102  006064  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35103                           
 35104                           ; BSR set to: 0
 35105  006066  5168               	movf	___lldiv@divisor& (0+255),w,b
 35106  006068  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 35107  00606A  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35108  00606C  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35109  00606E  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35110  006070  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35111  006072  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35112  006074  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35113  006076  E309               	bnc	l12140
 35114                           
 35115                           ; BSR set to: 0
 35116  006078  5168               	movf	___lldiv@divisor& (0+255),w,b
 35117  00607A  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 35118  00607C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35119  00607E  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35120  006080  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35121  006082  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35122  006084  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35123  006086  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35124                           
 35125                           ; BSR set to: 0
 35126  006088  816C               	bsf	___lldiv@quotient& (0+255),0,b
 35127  00608A                     l12140:
 35128                           
 35129                           ; BSR set to: 0
 35130  00608A  90D8               	bcf	status,0,c
 35131  00608C  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35132  00608E  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35133  006090  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35134  006092  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 35135                           
 35136                           ; BSR set to: 0
 35137  006094  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 35138  006096  D7E2               	goto	l12132
 35139  006098                     l3108:
 35140                           
 35141                           ; BSR set to: 0
 35142  006098  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 35143  00609C  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 35144  0060A0  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 35145  0060A4  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 35146                           
 35147                           ; BSR set to: 0
 35148  0060A8  0012               	return		;funcret
 35149  0060AA                     __end_of___lldiv:
 35150                           	opt stack 0
 35151                           tosu	equ	0xFFF
 35152                           tosh	equ	0xFFE
 35153                           tosl	equ	0xFFD
 35154                           pclath	equ	0xFFA
 35155                           tblptru	equ	0xFF8
 35156                           tblptrh	equ	0xFF7
 35157                           tblptrl	equ	0xFF6
 35158                           tablat	equ	0xFF5
 35159                           prodh	equ	0xFF4
 35160                           prodl	equ	0xFF3
 35161                           intcon	equ	0xFF2
 35162                           intcon2	equ	0xFF1
 35163                           intcon3	equ	0xFF0
 35164                           indf0	equ	0xFEF
 35165                           postinc0	equ	0xFEE
 35166                           plusw0	equ	0xFEB
 35167                           fsr0h	equ	0xFEA
 35168                           fsr0l	equ	0xFE9
 35169                           wreg	equ	0xFE8
 35170                           postinc1	equ	0xFE6
 35171                           postdec1	equ	0xFE5
 35172                           plusw1	equ	0xFE3
 35173                           fsr1h	equ	0xFE2
 35174                           fsr1l	equ	0xFE1
 35175                           indf2	equ	0xFDF
 35176                           postinc2	equ	0xFDE
 35177                           postdec2	equ	0xFDD
 35178                           plusw2	equ	0xFDB
 35179                           fsr2h	equ	0xFDA
 35180                           fsr2l	equ	0xFD9
 35181                           status	equ	0xFD8
 35182                           
 35183 ;; *************** function _SwTimerStop *****************
 35184 ;; Defined at:
 35185 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35186 ;; Parameters:    Size  Location     Type
 35187 ;;  timerId         1    wreg     unsigned char 
 35188 ;; Auto vars:     Size  Location     Type
 35189 ;;  timerId         1    4[BANK0 ] unsigned char 
 35190 ;; Return value:  Size  Location     Type
 35191 ;;                  1    wreg      void 
 35192 ;; Registers used:
 35193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35194 ;; Tracked objects:
 35195 ;;		On entry : C/1
 35196 ;;		On exit  : F/0
 35197 ;;		Unchanged: 0/0
 35198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35202 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35203 ;;Total ram usage:        1 bytes
 35204 ;; Hardware stack levels used:    1
 35205 ;; Hardware stack levels required when called:    7
 35206 ;; This function calls:
 35207 ;;		Nothing
 35208 ;; This function is called by:
 35209 ;;		_RADIO_Init
 35210 ;;		_RADIO_Transmit
 35211 ;;		_RADIO_RxDone
 35212 ;;		_RADIO_FSKPayloadReady
 35213 ;;		_RADIO_RxTimeout
 35214 ;;		_RADIO_TxDone
 35215 ;;		_RADIO_FSKPacketSent
 35216 ;;		_RADIO_RxFSKTimeout
 35217 ;;		_LORAWAN_TxDone
 35218 ;;		_StopAllSoftwareTimers
 35219 ;;		_LORAWAN_LinkCheckConfigure
 35220 ;;		_LORAWAN_RxDone
 35221 ;; This function uses a non-reentrant model
 35222 ;;
 35223                           
 35224                           	psect	text186
 35225  007564                     __ptext186:
 35226                           	opt stack 0
 35227  007564                     _SwTimerStop:
 35228                           	opt stack 20
 35229                           
 35230                           ; BSR set to: 0
 35231                           ;incstack = 0
 35232                           ;SwTimerStop@timerId stored from wreg
 35233  007564  0100               	movlb	0	; () banked
 35234  007566  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 35235                           
 35236                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 35237  007568  9EF2               	bcf	intcon,7,c	;volatile
 35238                           
 35239                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 35240  00756A  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 35241  00756C  0D08               	mullw	8
 35242  00756E  0E04               	movlw	low (_swTimers+4)
 35243  007570  24F3               	addwf	prodl,w,c
 35244  007572  6ED9               	movwf	fsr2l,c
 35245  007574  0E03               	movlw	high (_swTimers+4)
 35246  007576  20F4               	addwfc	prodh,w,c
 35247  007578  6EDA               	movwf	fsr2h,c
 35248  00757A  6ADF               	clrf	indf2,c
 35249                           
 35250                           ; BSR set to: 0
 35251                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 35252  00757C  8EF2               	bsf	intcon,7,c	;volatile
 35253                           
 35254                           ; BSR set to: 0
 35255  00757E  0C00               	retlw	0	;funcret
 35256  007580                     __end_of_SwTimerStop:
 35257                           	opt stack 0
 35258                           tosu	equ	0xFFF
 35259                           tosh	equ	0xFFE
 35260                           tosl	equ	0xFFD
 35261                           pclath	equ	0xFFA
 35262                           tblptru	equ	0xFF8
 35263                           tblptrh	equ	0xFF7
 35264                           tblptrl	equ	0xFF6
 35265                           tablat	equ	0xFF5
 35266                           prodh	equ	0xFF4
 35267                           prodl	equ	0xFF3
 35268                           intcon	equ	0xFF2
 35269                           intcon2	equ	0xFF1
 35270                           intcon3	equ	0xFF0
 35271                           indf0	equ	0xFEF
 35272                           postinc0	equ	0xFEE
 35273                           plusw0	equ	0xFEB
 35274                           fsr0h	equ	0xFEA
 35275                           fsr0l	equ	0xFE9
 35276                           wreg	equ	0xFE8
 35277                           postinc1	equ	0xFE6
 35278                           postdec1	equ	0xFE5
 35279                           plusw1	equ	0xFE3
 35280                           fsr1h	equ	0xFE2
 35281                           fsr1l	equ	0xFE1
 35282                           indf2	equ	0xFDF
 35283                           postinc2	equ	0xFDE
 35284                           postdec2	equ	0xFDD
 35285                           plusw2	equ	0xFDB
 35286                           fsr2h	equ	0xFDA
 35287                           fsr2l	equ	0xFD9
 35288                           status	equ	0xFD8
 35289                           
 35290 ;; *************** function _SwTimerStart *****************
 35291 ;; Defined at:
 35292 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35293 ;; Parameters:    Size  Location     Type
 35294 ;;  timerId         1    wreg     unsigned char 
 35295 ;; Auto vars:     Size  Location     Type
 35296 ;;  timerId         1   53[BANK0 ] unsigned char 
 35297 ;;  ticksRemaini    4   49[BANK0 ] unsigned long 
 35298 ;; Return value:  Size  Location     Type
 35299 ;;                  1    wreg      void 
 35300 ;; Registers used:
 35301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35302 ;; Tracked objects:
 35303 ;;		On entry : C/2
 35304 ;;		On exit  : F/0
 35305 ;;		Unchanged: 0/0
 35306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35308 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35309 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35310 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35311 ;;Total ram usage:        9 bytes
 35312 ;; Hardware stack levels used:    1
 35313 ;; Hardware stack levels required when called:   10
 35314 ;; This function calls:
 35315 ;;		_SwTimersInterrupt
 35316 ;;		_TMR_OverrideRemaining
 35317 ;; This function is called by:
 35318 ;;		_RADIO_Transmit
 35319 ;;		_RADIO_ReceiveStart
 35320 ;;		_LORAWAN_TxDone
 35321 ;;		_LORAWAN_RxTimeout
 35322 ;;		_StartReTxTimer
 35323 ;;		_DutyCycleCallback
 35324 ;;		_LORAWAN_Join
 35325 ;;		_LORAWAN_LinkCheckConfigure
 35326 ;;		_LORAWAN_LinkCheckCallback
 35327 ;;		_UpdateRetransmissionAckTimeoutState
 35328 ;;		_UpdateJoinSuccessState
 35329 ;; This function uses a non-reentrant model
 35330 ;;
 35331                           
 35332                           	psect	text187
 35333  005CB0                     __ptext187:
 35334                           	opt stack 0
 35335  005CB0                     _SwTimerStart:
 35336                           	opt stack 17
 35337                           
 35338                           ; BSR set to: 0
 35339                           ;incstack = 0
 35340                           ;SwTimerStart@timerId stored from wreg
 35341  005CB0  0100               	movlb	0	; () banked
 35342  005CB2  6F95               	movwf	SwTimerStart@timerId& (0+255),b
 35343                           
 35344                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 35345                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 35346  005CB4  9EF2               	bcf	intcon,7,c	;volatile
 35347                           
 35348                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 35349  005CB6  ECB6  F025         	call	_SwTimersInterrupt	;wreg free
 35350  005CBA  C07C  F091         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 35351  005CBE  C07D  F092         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 35352  005CC2  C07E  F093         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 35353  005CC6  C07F  F094         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 35354                           
 35355                           ; BSR set to: 0
 35356                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 35357  005CCA  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35358  005CCC  0D08               	mullw	8
 35359  005CCE  0E00               	movlw	low _swTimers
 35360  005CD0  24F3               	addwf	prodl,w,c
 35361  005CD2  6ED9               	movwf	fsr2l,c
 35362  005CD4  0E03               	movlw	high _swTimers
 35363  005CD6  20F4               	addwfc	prodh,w,c
 35364  005CD8  6EDA               	movwf	fsr2h,c
 35365  005CDA  5191               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 35366  005CDC  5CDE               	subwf	postinc2,w,c
 35367  005CDE  5192               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 35368  005CE0  58DE               	subwfb	postinc2,w,c
 35369  005CE2  5193               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 35370  005CE4  58DE               	subwfb	postinc2,w,c
 35371  005CE6  5194               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 35372  005CE8  58DE               	subwfb	postinc2,w,c
 35373  005CEA  E210               	bc	l12476
 35374                           
 35375                           ; BSR set to: 0
 35376                           ;sw_timer.c: 225: {
 35377                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 35378  005CEC  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35379  005CEE  0D08               	mullw	8
 35380  005CF0  0E00               	movlw	low _swTimers
 35381  005CF2  24F3               	addwf	prodl,w,c
 35382  005CF4  6ED9               	movwf	fsr2l,c
 35383  005CF6  0E03               	movlw	high _swTimers
 35384  005CF8  20F4               	addwfc	prodh,w,c
 35385  005CFA  6EDA               	movwf	fsr2h,c
 35386  005CFC  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining
 35387  005D00  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+1
 35388  005D04  CFDE F093          	movff	postinc2,SwTimerStart@ticksRemaining+2
 35389  005D08  CFDE F094          	movff	postinc2,SwTimerStart@ticksRemaining+3
 35390  005D0C                     l12476:
 35391                           
 35392                           ; BSR set to: 0
 35393                           ;sw_timer.c: 227: }
 35394                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 35395  005D0C  C091  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 35396  005D10  C092  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 35397  005D14  C093  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 35398  005D18  C094  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 35399  005D1C  ECDC  F02F         	call	_TMR_OverrideRemaining	;wreg free
 35400                           
 35401                           ; BSR set to: 0
 35402                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 35403  005D20  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 35404  005D22  0D08               	mullw	8
 35405  005D24  0E04               	movlw	low (_swTimers+4)
 35406  005D26  24F3               	addwf	prodl,w,c
 35407  005D28  6ED9               	movwf	fsr2l,c
 35408  005D2A  0E03               	movlw	high (_swTimers+4)
 35409  005D2C  20F4               	addwfc	prodh,w,c
 35410  005D2E  6EDA               	movwf	fsr2h,c
 35411  005D30  0E01               	movlw	1
 35412  005D32  6EDF               	movwf	indf2,c
 35413                           
 35414                           ; BSR set to: 0
 35415                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 35416  005D34  8EF2               	bsf	intcon,7,c	;volatile
 35417                           
 35418                           ; BSR set to: 0
 35419  005D36  0C01               	retlw	1	;funcret
 35420  005D38                     __end_of_SwTimerStart:
 35421                           	opt stack 0
 35422                           tosu	equ	0xFFF
 35423                           tosh	equ	0xFFE
 35424                           tosl	equ	0xFFD
 35425                           pclath	equ	0xFFA
 35426                           tblptru	equ	0xFF8
 35427                           tblptrh	equ	0xFF7
 35428                           tblptrl	equ	0xFF6
 35429                           tablat	equ	0xFF5
 35430                           prodh	equ	0xFF4
 35431                           prodl	equ	0xFF3
 35432                           intcon	equ	0xFF2
 35433                           intcon2	equ	0xFF1
 35434                           intcon3	equ	0xFF0
 35435                           indf0	equ	0xFEF
 35436                           postinc0	equ	0xFEE
 35437                           plusw0	equ	0xFEB
 35438                           fsr0h	equ	0xFEA
 35439                           fsr0l	equ	0xFE9
 35440                           wreg	equ	0xFE8
 35441                           postinc1	equ	0xFE6
 35442                           postdec1	equ	0xFE5
 35443                           plusw1	equ	0xFE3
 35444                           fsr1h	equ	0xFE2
 35445                           fsr1l	equ	0xFE1
 35446                           indf2	equ	0xFDF
 35447                           postinc2	equ	0xFDE
 35448                           postdec2	equ	0xFDD
 35449                           plusw2	equ	0xFDB
 35450                           fsr2h	equ	0xFDA
 35451                           fsr2l	equ	0xFD9
 35452                           status	equ	0xFD8
 35453                           
 35454 ;; *************** function _TMR_OverrideRemaining *****************
 35455 ;; Defined at:
 35456 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35457 ;; Parameters:    Size  Location     Type
 35458 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 35459 ;; Auto vars:     Size  Location     Type
 35460 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 35461 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 35462 ;; Return value:  Size  Location     Type
 35463 ;;                  1    wreg      void 
 35464 ;; Registers used:
 35465 ;;		wreg, status,2, status,0, cstack
 35466 ;; Tracked objects:
 35467 ;;		On entry : F/0
 35468 ;;		On exit  : F/0
 35469 ;;		Unchanged: 0/0
 35470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35471 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35472 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35474 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35475 ;;Total ram usage:       10 bytes
 35476 ;; Hardware stack levels used:    1
 35477 ;; Hardware stack levels required when called:    9
 35478 ;; This function calls:
 35479 ;;		_TMR_SwapTimer
 35480 ;; This function is called by:
 35481 ;;		_SwTimerStart
 35482 ;; This function uses a non-reentrant model
 35483 ;;
 35484                           
 35485                           	psect	text188
 35486  005FB8                     __ptext188:
 35487                           	opt stack 0
 35488  005FB8                     _TMR_OverrideRemaining:
 35489                           	opt stack 17
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;sw_timer.c: 67: uint16_t tmrVal;
 35493                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 35494                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 35495                           
 35496                           ; BSR set to: 0
 35497                           ;incstack = 0
 35498  005FB8  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35499  005FBA  1058               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35500  005FBC  1057               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35501  005FBE  E104               	bnz	u12810
 35502  005FC0  0E0B               	movlw	11
 35503  005FC2  5C56               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 35504  005FC4  A0D8               	btfss	status,0,c
 35505  005FC6  0012               	return	
 35506  005FC8                     u12810:
 35507                           
 35508                           ; BSR set to: 0
 35509                           ;sw_timer.c: 72: {
 35510                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 35511  005FC8  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 35512  005FCA  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35513  005FCC  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 35514  005FCE  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35515  005FD0  5058               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 35516  005FD2  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 35517  005FD4  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 35518  005FD6  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 35519  005FD8  B0D8               	btfsc	status,0,c
 35520  005FDA  0012               	return	
 35521                           
 35522                           ; BSR set to: 0
 35523                           ;sw_timer.c: 74: {
 35524                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 35525  005FDC  C06E  F056         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 35526  005FE0  C06F  F057         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 35527  005FE4  C070  F058         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 35528  005FE8  C071  F059         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 35529                           
 35530                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 35531  005FEC  C0EC  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 35532  005FF0  C0ED  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 35533                           
 35534                           ; BSR set to: 0
 35535                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 35536  005FF4  516E               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 35537  005FF6  0800               	sublw	0
 35538  005FF8  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 35539  005FFA  516F               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 35540  005FFC  A0D8               	btfss	status,0,c
 35541  005FFE  2AE8               	incf	wreg,f,c
 35542  006000  0800               	sublw	0
 35543  006002  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 35544                           
 35545                           ; BSR set to: 0
 35546                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 35547  006004  C0EC  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 35548  006008  C0ED  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 35549  00600C  EC04  F037         	call	_TMR_SwapTimer	;wreg free
 35550  006010  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 35551  006014  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 35552                           
 35553                           ; BSR set to: 0
 35554                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 35555  006018  5176               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 35556  00601A  5D74               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 35557  00601C  6F72               	movwf	??_TMR_OverrideRemaining& (0+255),b
 35558  00601E  5177               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 35559  006020  5975               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 35560  006022  6F73               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 35561  006024  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 35562  006026  263A               	addwf	_ticksAdded,f,c	;volatile
 35563  006028  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 35564  00602A  223B               	addwfc	_ticksAdded+1,f,c	;volatile
 35565  00602C  0E00               	movlw	0
 35566  00602E  223C               	addwfc	_ticksAdded+2,f,c	;volatile
 35567  006030  223D               	addwfc	_ticksAdded+3,f,c	;volatile
 35568                           
 35569                           ; BSR set to: 0
 35570  006032  0C00               	retlw	0	;funcret
 35571  006034                     __end_of_TMR_OverrideRemaining:
 35572                           	opt stack 0
 35573                           tosu	equ	0xFFF
 35574                           tosh	equ	0xFFE
 35575                           tosl	equ	0xFFD
 35576                           pclath	equ	0xFFA
 35577                           tblptru	equ	0xFF8
 35578                           tblptrh	equ	0xFF7
 35579                           tblptrl	equ	0xFF6
 35580                           tablat	equ	0xFF5
 35581                           prodh	equ	0xFF4
 35582                           prodl	equ	0xFF3
 35583                           intcon	equ	0xFF2
 35584                           intcon2	equ	0xFF1
 35585                           intcon3	equ	0xFF0
 35586                           indf0	equ	0xFEF
 35587                           postinc0	equ	0xFEE
 35588                           plusw0	equ	0xFEB
 35589                           fsr0h	equ	0xFEA
 35590                           fsr0l	equ	0xFE9
 35591                           wreg	equ	0xFE8
 35592                           postinc1	equ	0xFE6
 35593                           postdec1	equ	0xFE5
 35594                           plusw1	equ	0xFE3
 35595                           fsr1h	equ	0xFE2
 35596                           fsr1l	equ	0xFE1
 35597                           indf2	equ	0xFDF
 35598                           postinc2	equ	0xFDE
 35599                           postdec2	equ	0xFDD
 35600                           plusw2	equ	0xFDB
 35601                           fsr2h	equ	0xFDA
 35602                           fsr2l	equ	0xFD9
 35603                           status	equ	0xFD8
 35604                           
 35605 ;; *************** function _TMR_SwapTimer *****************
 35606 ;; Defined at:
 35607 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35608 ;; Parameters:    Size  Location     Type
 35609 ;;  timerVal        2   12[BANK0 ] unsigned int 
 35610 ;; Auto vars:     Size  Location     Type
 35611 ;;		None
 35612 ;; Return value:  Size  Location     Type
 35613 ;;                  2   12[BANK0 ] unsigned int 
 35614 ;; Registers used:
 35615 ;;		wreg, status,2, status,0, cstack
 35616 ;; Tracked objects:
 35617 ;;		On entry : F/0
 35618 ;;		On exit  : F/0
 35619 ;;		Unchanged: 0/0
 35620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35621 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35624 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35625 ;;Total ram usage:        2 bytes
 35626 ;; Hardware stack levels used:    1
 35627 ;; Hardware stack levels required when called:    8
 35628 ;; This function calls:
 35629 ;;		_TMR1_ReadTimer
 35630 ;;		_TMR1_WriteTimer
 35631 ;; This function is called by:
 35632 ;;		_TMR_OverrideRemaining
 35633 ;; This function uses a non-reentrant model
 35634 ;;
 35635                           
 35636                           	psect	text189
 35637  006E08                     __ptext189:
 35638                           	opt stack 0
 35639  006E08                     _TMR_SwapTimer:
 35640                           	opt stack 17
 35641                           
 35642                           ; BSR set to: 0
 35643                           ;sw_timer.c: 114: static uint16_t oldVal;
 35644                           ;sw_timer.c: 115: static uint16_t retVal;
 35645                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 35646                           
 35647                           ; BSR set to: 0
 35648                           ;incstack = 0
 35649  006E08  EC94  F03A         	call	_TMR1_ReadTimer	;wreg free
 35650  006E0C  C064  F040         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 35651  006E10  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 35652  006E14                     l11956:
 35653                           
 35654                           ; BSR set to: 0
 35655  006E14  EC94  F03A         	call	_TMR1_ReadTimer	;wreg free
 35656  006E18  5040               	movf	TMR_SwapTimer@oldVal,w,c
 35657  006E1A  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 35658  006E1C  E103               	bnz	u12600
 35659  006E1E  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 35660  006E20  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 35661  006E22  E0F8               	bz	l11956
 35662  006E24                     u12600:
 35663                           
 35664                           ; BSR set to: 0
 35665                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 35666  006E24  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 35667  006E28  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 35668  006E2C  ECC0  F03A         	call	_TMR1_WriteTimer	;wreg free
 35669                           
 35670                           ; BSR set to: 0
 35671                           ;sw_timer.c: 128: oldVal++;
 35672  006E30  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 35673  006E32  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 35674                           
 35675                           ; BSR set to: 0
 35676                           ;sw_timer.c: 130: retVal = oldVal;
 35677  006E34  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 35678  006E38  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 35679                           
 35680                           ; BSR set to: 0
 35681                           ;sw_timer.c: 132: return retVal;
 35682  006E3C  C042  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 35683  006E40  C043  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 35684                           
 35685                           ; BSR set to: 0
 35686  006E44  0012               	return		;funcret
 35687  006E46                     __end_of_TMR_SwapTimer:
 35688                           	opt stack 0
 35689                           tosu	equ	0xFFF
 35690                           tosh	equ	0xFFE
 35691                           tosl	equ	0xFFD
 35692                           pclath	equ	0xFFA
 35693                           tblptru	equ	0xFF8
 35694                           tblptrh	equ	0xFF7
 35695                           tblptrl	equ	0xFF6
 35696                           tablat	equ	0xFF5
 35697                           prodh	equ	0xFF4
 35698                           prodl	equ	0xFF3
 35699                           intcon	equ	0xFF2
 35700                           intcon2	equ	0xFF1
 35701                           intcon3	equ	0xFF0
 35702                           indf0	equ	0xFEF
 35703                           postinc0	equ	0xFEE
 35704                           plusw0	equ	0xFEB
 35705                           fsr0h	equ	0xFEA
 35706                           fsr0l	equ	0xFE9
 35707                           wreg	equ	0xFE8
 35708                           postinc1	equ	0xFE6
 35709                           postdec1	equ	0xFE5
 35710                           plusw1	equ	0xFE3
 35711                           fsr1h	equ	0xFE2
 35712                           fsr1l	equ	0xFE1
 35713                           indf2	equ	0xFDF
 35714                           postinc2	equ	0xFDE
 35715                           postdec2	equ	0xFDD
 35716                           plusw2	equ	0xFDB
 35717                           fsr2h	equ	0xFDA
 35718                           fsr2l	equ	0xFD9
 35719                           status	equ	0xFD8
 35720                           
 35721 ;; *************** function _TMR1_WriteTimer *****************
 35722 ;; Defined at:
 35723 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 35724 ;; Parameters:    Size  Location     Type
 35725 ;;  timerVal        2    4[BANK0 ] unsigned int 
 35726 ;; Auto vars:     Size  Location     Type
 35727 ;;		None
 35728 ;; Return value:  Size  Location     Type
 35729 ;;                  1    wreg      void 
 35730 ;; Registers used:
 35731 ;;		None
 35732 ;; Tracked objects:
 35733 ;;		On entry : F/0
 35734 ;;		On exit  : F/0
 35735 ;;		Unchanged: F/0
 35736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35740 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35741 ;;Total ram usage:        2 bytes
 35742 ;; Hardware stack levels used:    1
 35743 ;; Hardware stack levels required when called:    7
 35744 ;; This function calls:
 35745 ;;		Nothing
 35746 ;; This function is called by:
 35747 ;;		_TMR_SwapTimer
 35748 ;; This function uses a non-reentrant model
 35749 ;;
 35750                           
 35751                           	psect	text190
 35752  007580                     __ptext190:
 35753                           	opt stack 0
 35754  007580                     _TMR1_WriteTimer:
 35755                           	opt stack 17
 35756                           
 35757                           ; BSR set to: 0
 35758                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 35759                           
 35760                           ; BSR set to: 0
 35761                           ;incstack = 0
 35762  007580  A4CD               	btfss	4045,2,c	;volatile
 35763  007582  D007               	goto	l1347
 35764                           
 35765                           ; BSR set to: 0
 35766                           ;tmr1.c: 123: {
 35767                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 35768  007584  90CD               	bcf	4045,0,c	;volatile
 35769                           
 35770                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 35771  007586  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35772                           
 35773                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 35774  00758A  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35775                           
 35776                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 35777  00758E  80CD               	bsf	4045,0,c	;volatile
 35778                           
 35779                           ;tmr1.c: 133: }
 35780  007590  0012               	return	
 35781  007592                     l1347:
 35782                           
 35783                           ; BSR set to: 0
 35784                           ;tmr1.c: 134: else
 35785                           ;tmr1.c: 135: {
 35786                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 35787  007592  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 35788                           
 35789                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 35790  007596  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 35791                           
 35792                           ; BSR set to: 0
 35793  00759A  0012               	return		;funcret
 35794  00759C                     __end_of_TMR1_WriteTimer:
 35795                           	opt stack 0
 35796                           tosu	equ	0xFFF
 35797                           tosh	equ	0xFFE
 35798                           tosl	equ	0xFFD
 35799                           pclath	equ	0xFFA
 35800                           tblptru	equ	0xFF8
 35801                           tblptrh	equ	0xFF7
 35802                           tblptrl	equ	0xFF6
 35803                           tablat	equ	0xFF5
 35804                           prodh	equ	0xFF4
 35805                           prodl	equ	0xFF3
 35806                           intcon	equ	0xFF2
 35807                           intcon2	equ	0xFF1
 35808                           intcon3	equ	0xFF0
 35809                           indf0	equ	0xFEF
 35810                           postinc0	equ	0xFEE
 35811                           plusw0	equ	0xFEB
 35812                           fsr0h	equ	0xFEA
 35813                           fsr0l	equ	0xFE9
 35814                           wreg	equ	0xFE8
 35815                           postinc1	equ	0xFE6
 35816                           postdec1	equ	0xFE5
 35817                           plusw1	equ	0xFE3
 35818                           fsr1h	equ	0xFE2
 35819                           fsr1l	equ	0xFE1
 35820                           indf2	equ	0xFDF
 35821                           postinc2	equ	0xFDE
 35822                           postdec2	equ	0xFDD
 35823                           plusw2	equ	0xFDB
 35824                           fsr2h	equ	0xFDA
 35825                           fsr2l	equ	0xFD9
 35826                           status	equ	0xFD8
 35827                           
 35828 ;; *************** function _SwTimersInterrupt *****************
 35829 ;; Defined at:
 35830 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35831 ;; Parameters:    Size  Location     Type
 35832 ;;		None
 35833 ;; Auto vars:     Size  Location     Type
 35834 ;;  ticksToNextT    4   40[BANK0 ] unsigned long 
 35835 ;;  timeElapsed     4   36[BANK0 ] unsigned long 
 35836 ;;  i               1   44[BANK0 ] unsigned char 
 35837 ;; Return value:  Size  Location     Type
 35838 ;;                  4   28[BANK0 ] unsigned long 
 35839 ;; Registers used:
 35840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35841 ;; Tracked objects:
 35842 ;;		On entry : 0/0
 35843 ;;		On exit  : F/0
 35844 ;;		Unchanged: 0/0
 35845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35847 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35848 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35849 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35850 ;;Total ram usage:       17 bytes
 35851 ;; Hardware stack levels used:    1
 35852 ;; Hardware stack levels required when called:    9
 35853 ;; This function calls:
 35854 ;;		_TMR_GetDeltaTime
 35855 ;; This function is called by:
 35856 ;;		_SwTimerReadValue
 35857 ;;		_SwTimerStart
 35858 ;; This function uses a non-reentrant model
 35859 ;;
 35860                           
 35861                           	psect	text191
 35862  004B6C                     __ptext191:
 35863                           	opt stack 0
 35864  004B6C                     _SwTimersInterrupt:
 35865                           	opt stack 17
 35866                           
 35867                           ;sw_timer.c: 289: uint8_t i;
 35868                           ;sw_timer.c: 290: uint32_t timeElapsed;
 35869                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 35870                           
 35871                           ; BSR set to: 0
 35872                           ;incstack = 0
 35873  004B6C  0100               	movlb	0	; () banked
 35874  004B6E  6988               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 35875  004B70  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 35876  004B72  698A               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 35877  004B74  698B               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 35878                           
 35879                           ; BSR set to: 0
 35880                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 35881  004B76  ECA4  F026         	call	_TMR_GetDeltaTime	;wreg free
 35882  004B7A  C06C  F084         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 35883  004B7E  C06D  F085         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 35884  004B82  C06E  F086         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 35885  004B86  C06F  F087         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 35886                           
 35887                           ; BSR set to: 0
 35888                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 35889  004B8A  6B8C               	clrf	SwTimersInterrupt@i& (0+255),b
 35890  004B8C  D05A               	goto	l12190
 35891  004B8E                     l12178:
 35892                           
 35893                           ; BSR set to: 0
 35894                           ;sw_timer.c: 298: {
 35895                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 35896  004B8E  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35897  004B90  0D08               	mullw	8
 35898  004B92  0E04               	movlw	low (_swTimers+4)
 35899  004B94  24F3               	addwf	prodl,w,c
 35900  004B96  6ED9               	movwf	fsr2l,c
 35901  004B98  0E03               	movlw	high (_swTimers+4)
 35902  004B9A  20F4               	addwfc	prodh,w,c
 35903  004B9C  6EDA               	movwf	fsr2h,c
 35904  004B9E  04DE               	decf	postinc2,w,c
 35905  004BA0  E14F               	bnz	l12188
 35906                           
 35907                           ; BSR set to: 0
 35908                           ;sw_timer.c: 302: {
 35909                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 35910  004BA2  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35911  004BA4  0D08               	mullw	8
 35912  004BA6  0E00               	movlw	low _swTimers
 35913  004BA8  24F3               	addwf	prodl,w,c
 35914  004BAA  6ED9               	movwf	fsr2l,c
 35915  004BAC  0E03               	movlw	high _swTimers
 35916  004BAE  20F4               	addwfc	prodh,w,c
 35917  004BB0  6EDA               	movwf	fsr2h,c
 35918  004BB2  50DE               	movf	postinc2,w,c
 35919  004BB4  5D84               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35920  004BB6  50DE               	movf	postinc2,w,c
 35921  004BB8  5985               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35922  004BBA  50DE               	movf	postinc2,w,c
 35923  004BBC  5986               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35924  004BBE  50DE               	movf	postinc2,w,c
 35925  004BC0  5987               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35926  004BC2  E30D               	bnc	l12184
 35927                           
 35928                           ; BSR set to: 0
 35929                           ;sw_timer.c: 304: {
 35930                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 35931  004BC4  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35932  004BC6  0D08               	mullw	8
 35933  004BC8  0E00               	movlw	low _swTimers
 35934  004BCA  24F3               	addwf	prodl,w,c
 35935  004BCC  6ED9               	movwf	fsr2l,c
 35936  004BCE  0E03               	movlw	high _swTimers
 35937  004BD0  20F4               	addwfc	prodh,w,c
 35938  004BD2  6EDA               	movwf	fsr2h,c
 35939  004BD4  6ADE               	clrf	postinc2,c
 35940  004BD6  6ADE               	clrf	postinc2,c
 35941  004BD8  6ADE               	clrf	postinc2,c
 35942  004BDA  6ADD               	clrf	postdec2,c
 35943                           
 35944                           ;sw_timer.c: 306: }
 35945  004BDC  D031               	goto	l12188
 35946  004BDE                     l12184:
 35947                           
 35948                           ; BSR set to: 0
 35949                           ;sw_timer.c: 307: else
 35950                           ;sw_timer.c: 308: {
 35951                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 35952  004BDE  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35953  004BE0  0D08               	mullw	8
 35954  004BE2  0E00               	movlw	low _swTimers
 35955  004BE4  24F3               	addwf	prodl,w,c
 35956  004BE6  6ED9               	movwf	fsr2l,c
 35957  004BE8  0E03               	movlw	high _swTimers
 35958  004BEA  20F4               	addwfc	prodh,w,c
 35959  004BEC  6EDA               	movwf	fsr2h,c
 35960  004BEE  5184               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 35961  004BF0  5EDE               	subwf	postinc2,f,c
 35962  004BF2  5185               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 35963  004BF4  5ADE               	subwfb	postinc2,f,c
 35964  004BF6  5186               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 35965  004BF8  5ADE               	subwfb	postinc2,f,c
 35966  004BFA  5187               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 35967  004BFC  5ADE               	subwfb	postinc2,f,c
 35968                           
 35969                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 35970  004BFE  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35971  004C00  0D08               	mullw	8
 35972  004C02  0E00               	movlw	low _swTimers
 35973  004C04  24F3               	addwf	prodl,w,c
 35974  004C06  6ED9               	movwf	fsr2l,c
 35975  004C08  0E03               	movlw	high _swTimers
 35976  004C0A  20F4               	addwfc	prodh,w,c
 35977  004C0C  6EDA               	movwf	fsr2h,c
 35978  004C0E  5188               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 35979  004C10  5CDE               	subwf	postinc2,w,c
 35980  004C12  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 35981  004C14  58DE               	subwfb	postinc2,w,c
 35982  004C16  518A               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 35983  004C18  58DE               	subwfb	postinc2,w,c
 35984  004C1A  518B               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 35985  004C1C  58DE               	subwfb	postinc2,w,c
 35986  004C1E  E210               	bc	l12188
 35987                           
 35988                           ; BSR set to: 0
 35989                           ;sw_timer.c: 313: {
 35990                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 35991  004C20  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 35992  004C22  0D08               	mullw	8
 35993  004C24  0E00               	movlw	low _swTimers
 35994  004C26  24F3               	addwf	prodl,w,c
 35995  004C28  6ED9               	movwf	fsr2l,c
 35996  004C2A  0E03               	movlw	high _swTimers
 35997  004C2C  20F4               	addwfc	prodh,w,c
 35998  004C2E  6EDA               	movwf	fsr2h,c
 35999  004C30  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 36000  004C34  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 36001  004C38  CFDE F08A          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 36002  004C3C  CFDE F08B          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 36003  004C40                     l12188:
 36004                           
 36005                           ; BSR set to: 0
 36006  004C40  2B8C               	incf	SwTimersInterrupt@i& (0+255),f,b
 36007  004C42                     l12190:
 36008                           
 36009                           ; BSR set to: 0
 36010  004C42  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 36011  004C44  5D8C               	subwf	SwTimersInterrupt@i& (0+255),w,b
 36012  004C46  E3A3               	bnc	l12178
 36013                           
 36014                           ; BSR set to: 0
 36015                           ;sw_timer.c: 315: }
 36016                           ;sw_timer.c: 316: }
 36017                           ;sw_timer.c: 317: }
 36018                           ;sw_timer.c: 318: }
 36019                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 36020  004C48  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 36021  004C4C  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 36022  004C50  C08A  F07E         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 36023  004C54  C08B  F07F         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 36024                           
 36025                           ; BSR set to: 0
 36026  004C58  0012               	return		;funcret
 36027  004C5A                     __end_of_SwTimersInterrupt:
 36028                           	opt stack 0
 36029                           tosu	equ	0xFFF
 36030                           tosh	equ	0xFFE
 36031                           tosl	equ	0xFFD
 36032                           pclath	equ	0xFFA
 36033                           tblptru	equ	0xFF8
 36034                           tblptrh	equ	0xFF7
 36035                           tblptrl	equ	0xFF6
 36036                           tablat	equ	0xFF5
 36037                           prodh	equ	0xFF4
 36038                           prodl	equ	0xFF3
 36039                           intcon	equ	0xFF2
 36040                           intcon2	equ	0xFF1
 36041                           intcon3	equ	0xFF0
 36042                           indf0	equ	0xFEF
 36043                           postinc0	equ	0xFEE
 36044                           plusw0	equ	0xFEB
 36045                           fsr0h	equ	0xFEA
 36046                           fsr0l	equ	0xFE9
 36047                           wreg	equ	0xFE8
 36048                           postinc1	equ	0xFE6
 36049                           postdec1	equ	0xFE5
 36050                           plusw1	equ	0xFE3
 36051                           fsr1h	equ	0xFE2
 36052                           fsr1l	equ	0xFE1
 36053                           indf2	equ	0xFDF
 36054                           postinc2	equ	0xFDE
 36055                           postdec2	equ	0xFDD
 36056                           plusw2	equ	0xFDB
 36057                           fsr2h	equ	0xFDA
 36058                           fsr2l	equ	0xFD9
 36059                           status	equ	0xFD8
 36060                           
 36061 ;; *************** function _TMR_GetDeltaTime *****************
 36062 ;; Defined at:
 36063 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36064 ;; Parameters:    Size  Location     Type
 36065 ;;		None
 36066 ;; Auto vars:     Size  Location     Type
 36067 ;;		None
 36068 ;; Return value:  Size  Location     Type
 36069 ;;                  4   12[BANK0 ] unsigned long 
 36070 ;; Registers used:
 36071 ;;		wreg, status,2, status,0, cstack
 36072 ;; Tracked objects:
 36073 ;;		On entry : F/0
 36074 ;;		On exit  : F/0
 36075 ;;		Unchanged: 0/0
 36076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36077 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36079 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36080 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36081 ;;Total ram usage:       16 bytes
 36082 ;; Hardware stack levels used:    1
 36083 ;; Hardware stack levels required when called:    8
 36084 ;; This function calls:
 36085 ;;		_TMR1_ReadTimer
 36086 ;; This function is called by:
 36087 ;;		_SwTimersInterrupt
 36088 ;; This function uses a non-reentrant model
 36089 ;;
 36090                           
 36091                           	psect	text192
 36092  004D48                     __ptext192:
 36093                           	opt stack 0
 36094  004D48                     _TMR_GetDeltaTime:
 36095                           	opt stack 17
 36096                           
 36097                           ; BSR set to: 0
 36098                           ;sw_timer.c: 90: static uint32_t retVal;
 36099                           ;sw_timer.c: 91: static uint16_t tmrVal;
 36100                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 36101                           
 36102                           ; BSR set to: 0
 36103                           ;incstack = 0
 36104  004D48  EC94  F03A         	call	_TMR1_ReadTimer	;wreg free
 36105  004D4C  C064  F03E         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 36106  004D50  C065  F03F         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 36107                           
 36108                           ; BSR set to: 0
 36109                           ;sw_timer.c: 95: if (timerOverflow == 1)
 36110  004D54  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 36111  004D56  E13D               	bnz	l11982
 36112                           
 36113                           ; BSR set to: 0
 36114                           ;sw_timer.c: 96: {
 36115                           ;sw_timer.c: 97: timerOverflow = 0;
 36116  004D58  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 36117                           
 36118                           ; BSR set to: 0
 36119                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 36120  004D5A  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36121  004D5C  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36122  004D5E  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36123  004D60  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36124  004D62  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36125  004D64  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36126  004D66  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36127  004D68  A0D8               	btfss	status,0,c
 36128  004D6A  0772               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36129  004D6C  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36130  004D6E  6F73               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36131  004D70  5036               	movf	_ticksAccounted,w,c	;volatile
 36132  004D72  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36133  004D74  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36134  004D76  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36135  004D78  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36136  004D7A  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36137  004D7C  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36138  004D7E  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36139  004D80  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36140  004D82  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36141  004D84  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36142  004D86  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36143  004D88  503A               	movf	_ticksAdded,w,c	;volatile
 36144  004D8A  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36145  004D8C  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 36146  004D8E  503B               	movf	_ticksAdded+1,w,c	;volatile
 36147  004D90  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36148  004D92  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 36149  004D94  503C               	movf	_ticksAdded+2,w,c	;volatile
 36150  004D96  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36151  004D98  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 36152  004D9A  503D               	movf	_ticksAdded+3,w,c	;volatile
 36153  004D9C  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36154  004D9E  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 36155  004DA0  0E00               	movlw	0
 36156  004DA2  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 36157  004DA4  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36158  004DA6  0E00               	movlw	0
 36159  004DA8  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 36160  004DAA  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36161  004DAC  0E01               	movlw	1
 36162  004DAE  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 36163  004DB0  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36164  004DB2  0E00               	movlw	0
 36165  004DB4  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 36166  004DB6  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36167                           
 36168                           ; BSR set to: 0
 36169                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 36170  004DB8  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 36171  004DBC  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 36172  004DC0  6A38               	clrf	_ticksAccounted+2,c	;volatile
 36173  004DC2  6A39               	clrf	_ticksAccounted+3,c	;volatile
 36174                           
 36175                           ; BSR set to: 0
 36176                           ;sw_timer.c: 100: ticksAdded = 0;
 36177  004DC4  6A3A               	clrf	_ticksAdded,c	;volatile
 36178  004DC6  6A3B               	clrf	_ticksAdded+1,c	;volatile
 36179  004DC8  6A3C               	clrf	_ticksAdded+2,c	;volatile
 36180  004DCA  6A3D               	clrf	_ticksAdded+3,c	;volatile
 36181                           
 36182                           ; BSR set to: 0
 36183                           ;sw_timer.c: 101: reloadVal = 0;
 36184  004DCC  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 36185  004DCE  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 36186                           
 36187                           ;sw_timer.c: 102: }
 36188  004DD0  D028               	goto	l11984
 36189  004DD2                     l11982:
 36190                           
 36191                           ; BSR set to: 0
 36192                           ;sw_timer.c: 103: else
 36193                           ;sw_timer.c: 104: {
 36194                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 36195  004DD2  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 36196  004DD4  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36197  004DD6  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36198  004DD8  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36199  004DDA  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36200  004DDC  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36201  004DDE  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36202  004DE0  6B73               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36203  004DE2  5036               	movf	_ticksAccounted,w,c	;volatile
 36204  004DE4  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36205  004DE6  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36206  004DE8  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36207  004DEA  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 36208  004DEC  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 36209  004DEE  5038               	movf	_ticksAccounted+2,w,c	;volatile
 36210  004DF0  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36211  004DF2  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 36212  004DF4  5039               	movf	_ticksAccounted+3,w,c	;volatile
 36213  004DF6  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 36214  004DF8  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 36215  004DFA  503A               	movf	_ticksAdded,w,c	;volatile
 36216  004DFC  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 36217  004DFE  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 36218  004E00  503B               	movf	_ticksAdded+1,w,c	;volatile
 36219  004E02  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 36220  004E04  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 36221  004E06  503C               	movf	_ticksAdded+2,w,c	;volatile
 36222  004E08  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 36223  004E0A  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 36224  004E0C  503D               	movf	_ticksAdded+3,w,c	;volatile
 36225  004E0E  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 36226  004E10  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 36227                           
 36228                           ;sw_timer.c: 106: ticksAccounted += retVal;
 36229  004E12  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 36230  004E14  2636               	addwf	_ticksAccounted,f,c	;volatile
 36231  004E16  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 36232  004E18  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 36233  004E1A  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 36234  004E1C  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 36235  004E1E  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 36236  004E20  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 36237  004E22                     l11984:
 36238                           
 36239                           ; BSR set to: 0
 36240                           ;sw_timer.c: 107: }
 36241                           ;sw_timer.c: 109: return retVal;
 36242  004E22  C032  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 36243  004E26  C033  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 36244  004E2A  C034  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 36245  004E2E  C035  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 36246                           
 36247                           ; BSR set to: 0
 36248  004E32  0012               	return		;funcret
 36249  004E34                     __end_of_TMR_GetDeltaTime:
 36250                           	opt stack 0
 36251                           tosu	equ	0xFFF
 36252                           tosh	equ	0xFFE
 36253                           tosl	equ	0xFFD
 36254                           pclath	equ	0xFFA
 36255                           tblptru	equ	0xFF8
 36256                           tblptrh	equ	0xFF7
 36257                           tblptrl	equ	0xFF6
 36258                           tablat	equ	0xFF5
 36259                           prodh	equ	0xFF4
 36260                           prodl	equ	0xFF3
 36261                           intcon	equ	0xFF2
 36262                           intcon2	equ	0xFF1
 36263                           intcon3	equ	0xFF0
 36264                           indf0	equ	0xFEF
 36265                           postinc0	equ	0xFEE
 36266                           plusw0	equ	0xFEB
 36267                           fsr0h	equ	0xFEA
 36268                           fsr0l	equ	0xFE9
 36269                           wreg	equ	0xFE8
 36270                           postinc1	equ	0xFE6
 36271                           postdec1	equ	0xFE5
 36272                           plusw1	equ	0xFE3
 36273                           fsr1h	equ	0xFE2
 36274                           fsr1l	equ	0xFE1
 36275                           indf2	equ	0xFDF
 36276                           postinc2	equ	0xFDE
 36277                           postdec2	equ	0xFDD
 36278                           plusw2	equ	0xFDB
 36279                           fsr2h	equ	0xFDA
 36280                           fsr2l	equ	0xFD9
 36281                           status	equ	0xFD8
 36282                           
 36283 ;; *************** function _TMR1_ReadTimer *****************
 36284 ;; Defined at:
 36285 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 36286 ;; Parameters:    Size  Location     Type
 36287 ;;		None
 36288 ;; Auto vars:     Size  Location     Type
 36289 ;;  readVal         2    8[BANK0 ] unsigned int 
 36290 ;;  readValLow      1   11[BANK0 ] unsigned char 
 36291 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 36292 ;; Return value:  Size  Location     Type
 36293 ;;                  2    4[BANK0 ] unsigned int 
 36294 ;; Registers used:
 36295 ;;		wreg, status,2
 36296 ;; Tracked objects:
 36297 ;;		On entry : F/0
 36298 ;;		On exit  : F/0
 36299 ;;		Unchanged: 0/0
 36300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36302 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36304 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36305 ;;Total ram usage:        8 bytes
 36306 ;; Hardware stack levels used:    1
 36307 ;; Hardware stack levels required when called:    7
 36308 ;; This function calls:
 36309 ;;		Nothing
 36310 ;; This function is called by:
 36311 ;;		_TMR_GetDeltaTime
 36312 ;;		_TMR_SwapTimer
 36313 ;; This function uses a non-reentrant model
 36314 ;;
 36315                           
 36316                           	psect	text193
 36317  007528                     __ptext193:
 36318                           	opt stack 0
 36319  007528                     _TMR1_ReadTimer:
 36320                           	opt stack 17
 36321                           
 36322                           ; BSR set to: 0
 36323                           ;tmr1.c: 108: uint16_t readVal;
 36324                           ;tmr1.c: 109: uint8_t readValHigh;
 36325                           ;tmr1.c: 110: uint8_t readValLow;
 36326                           ;tmr1.c: 112: readValLow = TMR1L;
 36327                           
 36328                           ; BSR set to: 0
 36329                           ;incstack = 0
 36330  007528  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 36331                           
 36332                           ;tmr1.c: 113: readValHigh = TMR1H;
 36333  00752C  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 36334                           
 36335                           ; BSR set to: 0
 36336                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 36337  007530  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 36338  007532  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 36339  007534  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 36340  007536  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 36341  007538  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 36342                           
 36343                           ; BSR set to: 0
 36344                           ;tmr1.c: 117: return readVal;
 36345  00753C  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 36346  007540  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 36347                           
 36348                           ; BSR set to: 0
 36349  007544  0012               	return		;funcret
 36350  007546                     __end_of_TMR1_ReadTimer:
 36351                           	opt stack 0
 36352                           tosu	equ	0xFFF
 36353                           tosh	equ	0xFFE
 36354                           tosl	equ	0xFFD
 36355                           pclath	equ	0xFFA
 36356                           tblptru	equ	0xFF8
 36357                           tblptrh	equ	0xFF7
 36358                           tblptrl	equ	0xFF6
 36359                           tablat	equ	0xFF5
 36360                           prodh	equ	0xFF4
 36361                           prodl	equ	0xFF3
 36362                           intcon	equ	0xFF2
 36363                           intcon2	equ	0xFF1
 36364                           intcon3	equ	0xFF0
 36365                           indf0	equ	0xFEF
 36366                           postinc0	equ	0xFEE
 36367                           plusw0	equ	0xFEB
 36368                           fsr0h	equ	0xFEA
 36369                           fsr0l	equ	0xFE9
 36370                           wreg	equ	0xFE8
 36371                           postinc1	equ	0xFE6
 36372                           postdec1	equ	0xFE5
 36373                           plusw1	equ	0xFE3
 36374                           fsr1h	equ	0xFE2
 36375                           fsr1l	equ	0xFE1
 36376                           indf2	equ	0xFDF
 36377                           postinc2	equ	0xFDE
 36378                           postdec2	equ	0xFDD
 36379                           plusw2	equ	0xFDB
 36380                           fsr2h	equ	0xFDA
 36381                           fsr2l	equ	0xFD9
 36382                           status	equ	0xFD8
 36383                           
 36384 ;; *************** function _SwTimerSetTimeout *****************
 36385 ;; Defined at:
 36386 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36387 ;; Parameters:    Size  Location     Type
 36388 ;;  timerId         1    wreg     unsigned char 
 36389 ;;  timeout         4   17[BANK0 ] unsigned long 
 36390 ;; Auto vars:     Size  Location     Type
 36391 ;;  timerId         1   25[BANK0 ] unsigned char 
 36392 ;; Return value:  Size  Location     Type
 36393 ;;                  1    wreg      void 
 36394 ;; Registers used:
 36395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36396 ;; Tracked objects:
 36397 ;;		On entry : C/2
 36398 ;;		On exit  : F/0
 36399 ;;		Unchanged: 0/0
 36400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36401 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36403 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36404 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36405 ;;Total ram usage:        9 bytes
 36406 ;; Hardware stack levels used:    1
 36407 ;; Hardware stack levels required when called:    7
 36408 ;; This function calls:
 36409 ;;		Nothing
 36410 ;; This function is called by:
 36411 ;;		_RADIO_Transmit
 36412 ;;		_RADIO_ReceiveStart
 36413 ;;		_LORAWAN_TxDone
 36414 ;;		_LORAWAN_RxTimeout
 36415 ;;		_StartReTxTimer
 36416 ;;		_DutyCycleCallback
 36417 ;;		_LORAWAN_Join
 36418 ;;		_LORAWAN_LinkCheckConfigure
 36419 ;;		_LORAWAN_LinkCheckCallback
 36420 ;;		_UpdateRetransmissionAckTimeoutState
 36421 ;;		_UpdateJoinSuccessState
 36422 ;; This function uses a non-reentrant model
 36423 ;;
 36424                           
 36425                           	psect	text194
 36426  006D4A                     __ptext194:
 36427                           	opt stack 0
 36428  006D4A                     _SwTimerSetTimeout:
 36429                           	opt stack 20
 36430                           
 36431                           ; BSR set to: 0
 36432                           ;incstack = 0
 36433                           ;SwTimerSetTimeout@timerId stored from wreg
 36434  006D4A  0100               	movlb	0	; () banked
 36435  006D4C  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 36436                           
 36437                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 36438  006D4E  9EF2               	bcf	intcon,7,c	;volatile
 36439                           
 36440                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 36441  006D50  0EE0               	movlw	224
 36442  006D52  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 36443  006D54  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 36444  006D56  0EFF               	movlw	255
 36445  006D58  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 36446  006D5A  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 36447  006D5C  0EFF               	movlw	255
 36448  006D5E  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 36449  006D60  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 36450  006D62  0EFF               	movlw	255
 36451  006D64  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 36452  006D66  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 36453  006D68  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 36454  006D6A  0D08               	mullw	8
 36455  006D6C  0E00               	movlw	low _swTimers
 36456  006D6E  24F3               	addwf	prodl,w,c
 36457  006D70  6ED9               	movwf	fsr2l,c
 36458  006D72  0E03               	movlw	high _swTimers
 36459  006D74  20F4               	addwfc	prodh,w,c
 36460  006D76  6EDA               	movwf	fsr2h,c
 36461  006D78  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 36462  006D7C  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 36463  006D80  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 36464  006D84  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 36465                           
 36466                           ; BSR set to: 0
 36467                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 36468  006D88  8EF2               	bsf	intcon,7,c	;volatile
 36469                           
 36470                           ; BSR set to: 0
 36471  006D8A  0012               	return		;funcret
 36472  006D8C                     __end_of_SwTimerSetTimeout:
 36473                           	opt stack 0
 36474                           tosu	equ	0xFFF
 36475                           tosh	equ	0xFFE
 36476                           tosl	equ	0xFFD
 36477                           pclath	equ	0xFFA
 36478                           tblptru	equ	0xFF8
 36479                           tblptrh	equ	0xFF7
 36480                           tblptrl	equ	0xFF6
 36481                           tablat	equ	0xFF5
 36482                           prodh	equ	0xFF4
 36483                           prodl	equ	0xFF3
 36484                           intcon	equ	0xFF2
 36485                           intcon2	equ	0xFF1
 36486                           intcon3	equ	0xFF0
 36487                           indf0	equ	0xFEF
 36488                           postinc0	equ	0xFEE
 36489                           plusw0	equ	0xFEB
 36490                           fsr0h	equ	0xFEA
 36491                           fsr0l	equ	0xFE9
 36492                           wreg	equ	0xFE8
 36493                           postinc1	equ	0xFE6
 36494                           postdec1	equ	0xFE5
 36495                           plusw1	equ	0xFE3
 36496                           fsr1h	equ	0xFE2
 36497                           fsr1l	equ	0xFE1
 36498                           indf2	equ	0xFDF
 36499                           postinc2	equ	0xFDE
 36500                           postdec2	equ	0xFDD
 36501                           plusw2	equ	0xFDB
 36502                           fsr2h	equ	0xFDA
 36503                           fsr2l	equ	0xFD9
 36504                           status	equ	0xFD8
 36505                           
 36506 ;; *************** function _InitDefault868Channels *****************
 36507 ;; Defined at:
 36508 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36509 ;; Parameters:    Size  Location     Type
 36510 ;;		None
 36511 ;; Auto vars:     Size  Location     Type
 36512 ;;  i               1   14[BANK0 ] unsigned char 
 36513 ;; Return value:  Size  Location     Type
 36514 ;;                  1    wreg      void 
 36515 ;; Registers used:
 36516 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36517 ;; Tracked objects:
 36518 ;;		On entry : F/1
 36519 ;;		On exit  : F/0
 36520 ;;		Unchanged: 0/0
 36521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36525 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36526 ;;Total ram usage:        1 bytes
 36527 ;; Hardware stack levels used:    1
 36528 ;; Hardware stack levels required when called:    8
 36529 ;; This function calls:
 36530 ;;		_memcpy
 36531 ;;		_memset
 36532 ;; This function is called by:
 36533 ;;		_LORAWAN_Reset
 36534 ;; This function uses a non-reentrant model
 36535 ;;
 36536                           
 36537                           	psect	text195
 36538  00639E                     __ptext195:
 36539                           	opt stack 0
 36540  00639E                     _InitDefault868Channels:
 36541                           	opt stack 20
 36542                           
 36543                           ; BSR set to: 1
 36544                           ;lorawan_eu.c: 981: uint8_t i;
 36545                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 36546                           
 36547                           ; BSR set to: 0
 36548                           ;incstack = 0
 36549  00639E  0E00               	movlw	low _Channels
 36550  0063A0  0100               	movlb	0	; () banked
 36551  0063A2  6F64               	movwf	memset@p1& (0+255),b
 36552  0063A4  0E04               	movlw	high _Channels
 36553  0063A6  6F65               	movwf	(memset@p1+1)& (0+255),b
 36554  0063A8  6B67               	clrf	(memset@c+1)& (0+255),b
 36555  0063AA  6B66               	clrf	memset@c& (0+255),b
 36556  0063AC  6B69               	clrf	(memset@n+1)& (0+255),b
 36557  0063AE  0EE0               	movlw	224
 36558  0063B0  6F68               	movwf	memset@n& (0+255),b
 36559  0063B2  EC37  F039         	call	_memset	;wreg free
 36560                           
 36561                           ; BSR set to: 0
 36562                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 36563  0063B6  0E00               	movlw	low _Channels
 36564  0063B8  6F64               	movwf	memcpy@d1& (0+255),b
 36565  0063BA  0E04               	movlw	high _Channels
 36566  0063BC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36567  0063BE  0ED2               	movlw	low _DefaultChannels868
 36568  0063C0  6F66               	movwf	memcpy@s1& (0+255),b
 36569  0063C2  0EFF               	movlw	high _DefaultChannels868
 36570  0063C4  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36571  0063C6  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36572  0063C8  0E2A               	movlw	42
 36573  0063CA  6F68               	movwf	memcpy@n& (0+255),b
 36574  0063CC  EC44  F034         	call	_memcpy	;wreg free
 36575                           
 36576                           ; BSR set to: 0
 36577                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 36578  0063D0  0E03               	movlw	3
 36579  0063D2  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 36580  0063D4                     l14998:
 36581                           
 36582                           ; BSR set to: 0
 36583                           ;lorawan_eu.c: 986: {
 36584                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 36585  0063D4  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36586  0063D6  0D0E               	mullw	14
 36587  0063D8  0E06               	movlw	low (_Channels+6)
 36588  0063DA  24F3               	addwf	prodl,w,c
 36589  0063DC  6ED9               	movwf	fsr2l,c
 36590  0063DE  0E04               	movlw	high (_Channels+6)
 36591  0063E0  20F4               	addwfc	prodh,w,c
 36592  0063E2  6EDA               	movwf	fsr2h,c
 36593  0063E4  68DE               	setf	postinc2,c
 36594  0063E6  68DD               	setf	postdec2,c
 36595                           
 36596                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 36597  0063E8  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 36598  0063EA  0D0E               	mullw	14
 36599  0063EC  0E05               	movlw	low (_Channels+5)
 36600  0063EE  24F3               	addwf	prodl,w,c
 36601  0063F0  6ED9               	movwf	fsr2l,c
 36602  0063F2  0E04               	movlw	high (_Channels+5)
 36603  0063F4  20F4               	addwfc	prodh,w,c
 36604  0063F6  6EDA               	movwf	fsr2h,c
 36605  0063F8  68DF               	setf	indf2,c
 36606                           
 36607                           ; BSR set to: 0
 36608  0063FA  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 36609                           
 36610                           ; BSR set to: 0
 36611  0063FC  0E0F               	movlw	15
 36612  0063FE  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 36613  006400  D7E9               	goto	l14998
 36614  006402  0C0F               	retlw	15
 36615  006404                     __end_of_InitDefault868Channels:
 36616                           	opt stack 0
 36617                           tosu	equ	0xFFF
 36618                           tosh	equ	0xFFE
 36619                           tosl	equ	0xFFD
 36620                           pclath	equ	0xFFA
 36621                           tblptru	equ	0xFF8
 36622                           tblptrh	equ	0xFF7
 36623                           tblptrl	equ	0xFF6
 36624                           tablat	equ	0xFF5
 36625                           prodh	equ	0xFF4
 36626                           prodl	equ	0xFF3
 36627                           intcon	equ	0xFF2
 36628                           intcon2	equ	0xFF1
 36629                           intcon3	equ	0xFF0
 36630                           indf0	equ	0xFEF
 36631                           postinc0	equ	0xFEE
 36632                           plusw0	equ	0xFEB
 36633                           fsr0h	equ	0xFEA
 36634                           fsr0l	equ	0xFE9
 36635                           wreg	equ	0xFE8
 36636                           postinc1	equ	0xFE6
 36637                           postdec1	equ	0xFE5
 36638                           plusw1	equ	0xFE3
 36639                           fsr1h	equ	0xFE2
 36640                           fsr1l	equ	0xFE1
 36641                           indf2	equ	0xFDF
 36642                           postinc2	equ	0xFDE
 36643                           postdec2	equ	0xFDD
 36644                           plusw2	equ	0xFDB
 36645                           fsr2h	equ	0xFDA
 36646                           fsr2l	equ	0xFD9
 36647                           status	equ	0xFD8
 36648                           
 36649 ;; *************** function _InitDefault433Channels *****************
 36650 ;; Defined at:
 36651 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36652 ;; Parameters:    Size  Location     Type
 36653 ;;		None
 36654 ;; Auto vars:     Size  Location     Type
 36655 ;;  i               1   14[BANK0 ] unsigned char 
 36656 ;; Return value:  Size  Location     Type
 36657 ;;                  1    wreg      void 
 36658 ;; Registers used:
 36659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36660 ;; Tracked objects:
 36661 ;;		On entry : F/1
 36662 ;;		On exit  : F/0
 36663 ;;		Unchanged: 0/0
 36664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36669 ;;Total ram usage:        1 bytes
 36670 ;; Hardware stack levels used:    1
 36671 ;; Hardware stack levels required when called:    8
 36672 ;; This function calls:
 36673 ;;		_memcpy
 36674 ;;		_memset
 36675 ;; This function is called by:
 36676 ;;		_LORAWAN_Reset
 36677 ;; This function uses a non-reentrant model
 36678 ;;
 36679                           
 36680                           	psect	text196
 36681  006404                     __ptext196:
 36682                           	opt stack 0
 36683  006404                     _InitDefault433Channels:
 36684                           	opt stack 20
 36685                           
 36686                           ; BSR set to: 1
 36687                           ;lorawan_eu.c: 996: uint8_t i;
 36688                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 36689                           
 36690                           ; BSR set to: 0
 36691                           ;incstack = 0
 36692  006404  0E00               	movlw	low _Channels
 36693  006406  0100               	movlb	0	; () banked
 36694  006408  6F64               	movwf	memset@p1& (0+255),b
 36695  00640A  0E04               	movlw	high _Channels
 36696  00640C  6F65               	movwf	(memset@p1+1)& (0+255),b
 36697  00640E  6B67               	clrf	(memset@c+1)& (0+255),b
 36698  006410  6B66               	clrf	memset@c& (0+255),b
 36699  006412  6B69               	clrf	(memset@n+1)& (0+255),b
 36700  006414  0EE0               	movlw	224
 36701  006416  6F68               	movwf	memset@n& (0+255),b
 36702  006418  EC37  F039         	call	_memset	;wreg free
 36703                           
 36704                           ; BSR set to: 0
 36705                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 36706  00641C  0E00               	movlw	low _Channels
 36707  00641E  6F64               	movwf	memcpy@d1& (0+255),b
 36708  006420  0E04               	movlw	high _Channels
 36709  006422  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 36710  006424  0EA8               	movlw	low _DefaultChannels433
 36711  006426  6F66               	movwf	memcpy@s1& (0+255),b
 36712  006428  0EFF               	movlw	high _DefaultChannels433
 36713  00642A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 36714  00642C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 36715  00642E  0E2A               	movlw	42
 36716  006430  6F68               	movwf	memcpy@n& (0+255),b
 36717  006432  EC44  F034         	call	_memcpy	;wreg free
 36718                           
 36719                           ; BSR set to: 0
 36720                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 36721  006436  0E03               	movlw	3
 36722  006438  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 36723  00643A                     l15014:
 36724                           
 36725                           ; BSR set to: 0
 36726                           ;lorawan_eu.c: 1001: {
 36727                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 36728  00643A  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36729  00643C  0D0E               	mullw	14
 36730  00643E  0E06               	movlw	low (_Channels+6)
 36731  006440  24F3               	addwf	prodl,w,c
 36732  006442  6ED9               	movwf	fsr2l,c
 36733  006444  0E04               	movlw	high (_Channels+6)
 36734  006446  20F4               	addwfc	prodh,w,c
 36735  006448  6EDA               	movwf	fsr2h,c
 36736  00644A  68DE               	setf	postinc2,c
 36737  00644C  68DD               	setf	postdec2,c
 36738                           
 36739                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 36740  00644E  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 36741  006450  0D0E               	mullw	14
 36742  006452  0E05               	movlw	low (_Channels+5)
 36743  006454  24F3               	addwf	prodl,w,c
 36744  006456  6ED9               	movwf	fsr2l,c
 36745  006458  0E04               	movlw	high (_Channels+5)
 36746  00645A  20F4               	addwfc	prodh,w,c
 36747  00645C  6EDA               	movwf	fsr2h,c
 36748  00645E  68DF               	setf	indf2,c
 36749                           
 36750                           ; BSR set to: 0
 36751  006460  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 36752                           
 36753                           ; BSR set to: 0
 36754  006462  0E0F               	movlw	15
 36755  006464  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 36756  006466  D7E9               	goto	l15014
 36757  006468  0C0F               	retlw	15
 36758  00646A                     __end_of_InitDefault433Channels:
 36759                           	opt stack 0
 36760                           tosu	equ	0xFFF
 36761                           tosh	equ	0xFFE
 36762                           tosl	equ	0xFFD
 36763                           pclath	equ	0xFFA
 36764                           tblptru	equ	0xFF8
 36765                           tblptrh	equ	0xFF7
 36766                           tblptrl	equ	0xFF6
 36767                           tablat	equ	0xFF5
 36768                           prodh	equ	0xFF4
 36769                           prodl	equ	0xFF3
 36770                           intcon	equ	0xFF2
 36771                           intcon2	equ	0xFF1
 36772                           intcon3	equ	0xFF0
 36773                           indf0	equ	0xFEF
 36774                           postinc0	equ	0xFEE
 36775                           plusw0	equ	0xFEB
 36776                           fsr0h	equ	0xFEA
 36777                           fsr0l	equ	0xFE9
 36778                           wreg	equ	0xFE8
 36779                           postinc1	equ	0xFE6
 36780                           postdec1	equ	0xFE5
 36781                           plusw1	equ	0xFE3
 36782                           fsr1h	equ	0xFE2
 36783                           fsr1l	equ	0xFE1
 36784                           indf2	equ	0xFDF
 36785                           postinc2	equ	0xFDE
 36786                           postdec2	equ	0xFDD
 36787                           plusw2	equ	0xFDB
 36788                           fsr2h	equ	0xFDA
 36789                           fsr2l	equ	0xFD9
 36790                           status	equ	0xFD8
 36791                           
 36792 ;; *************** function _memset *****************
 36793 ;; Defined at:
 36794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 36795 ;; Parameters:    Size  Location     Type
 36796 ;;  p1              2    4[BANK0 ] PTR void 
 36797 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36798 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36799 ;;  c               2    6[BANK0 ] int 
 36800 ;;  n               2    8[BANK0 ] unsigned int 
 36801 ;; Auto vars:     Size  Location     Type
 36802 ;;  p               2   10[BANK0 ] PTR unsigned char 
 36803 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 36804 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 36805 ;; Return value:  Size  Location     Type
 36806 ;;                  2    4[BANK0 ] PTR void 
 36807 ;; Registers used:
 36808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36809 ;; Tracked objects:
 36810 ;;		On entry : F/0
 36811 ;;		On exit  : F/0
 36812 ;;		Unchanged: 0/0
 36813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36818 ;;Total ram usage:        8 bytes
 36819 ;; Hardware stack levels used:    1
 36820 ;; Hardware stack levels required when called:    7
 36821 ;; This function calls:
 36822 ;;		Nothing
 36823 ;; This function is called by:
 36824 ;;		_LORAWAN_Reset
 36825 ;;		_InitDefault868Channels
 36826 ;;		_InitDefault433Channels
 36827 ;;		_AESCmac
 36828 ;;		_GenerateSubkey
 36829 ;;		_AssemblePacket
 36830 ;;		_PrepareJoinRequestFrame
 36831 ;;		_PrepareSessionKeys
 36832 ;;		_AssembleEncryptionBlock
 36833 ;; This function uses a non-reentrant model
 36834 ;;
 36835                           
 36836                           	psect	text197
 36837  00726E                     __ptext197:
 36838                           	opt stack 0
 36839  00726E                     _memset:
 36840                           	opt stack 20
 36841                           
 36842                           ; BSR set to: 0
 36843                           
 36844                           ; BSR set to: 0
 36845                           ;incstack = 0
 36846  00726E  C064  F06A         	movff	memset@p1,memset@p
 36847  007272  C065  F06B         	movff	memset@p1+1,memset@p+1
 36848  007276  D008               	goto	l12388
 36849  007278                     l12384:
 36850                           
 36851                           ; BSR set to: 0
 36852  007278  C06A  FFD9         	movff	memset@p,fsr2l
 36853  00727C  C06B  FFDA         	movff	memset@p+1,fsr2h
 36854  007280  C066  FFDF         	movff	memset@c,indf2
 36855                           
 36856                           ; BSR set to: 0
 36857  007284  4B6A               	infsnz	memset@p& (0+255),f,b
 36858  007286  2B6B               	incf	(memset@p+1)& (0+255),f,b
 36859  007288                     l12388:
 36860                           
 36861                           ; BSR set to: 0
 36862  007288  0768               	decf	memset@n& (0+255),f,b
 36863  00728A  A0D8               	btfss	status,0,c
 36864  00728C  0769               	decf	(memset@n+1)& (0+255),f,b
 36865  00728E  2968               	incf	memset@n& (0+255),w,b
 36866  007290  E1F3               	bnz	l12384
 36867  007292  2969               	incf	(memset@n+1)& (0+255),w,b
 36868  007294  E1F1               	bnz	l12384
 36869                           
 36870                           ; BSR set to: 0
 36871  007296  0012               	return		;funcret
 36872  007298                     __end_of_memset:
 36873                           	opt stack 0
 36874                           tosu	equ	0xFFF
 36875                           tosh	equ	0xFFE
 36876                           tosl	equ	0xFFD
 36877                           pclath	equ	0xFFA
 36878                           tblptru	equ	0xFF8
 36879                           tblptrh	equ	0xFF7
 36880                           tblptrl	equ	0xFF6
 36881                           tablat	equ	0xFF5
 36882                           prodh	equ	0xFF4
 36883                           prodl	equ	0xFF3
 36884                           intcon	equ	0xFF2
 36885                           intcon2	equ	0xFF1
 36886                           intcon3	equ	0xFF0
 36887                           indf0	equ	0xFEF
 36888                           postinc0	equ	0xFEE
 36889                           plusw0	equ	0xFEB
 36890                           fsr0h	equ	0xFEA
 36891                           fsr0l	equ	0xFE9
 36892                           wreg	equ	0xFE8
 36893                           postinc1	equ	0xFE6
 36894                           postdec1	equ	0xFE5
 36895                           plusw1	equ	0xFE3
 36896                           fsr1h	equ	0xFE2
 36897                           fsr1l	equ	0xFE1
 36898                           indf2	equ	0xFDF
 36899                           postinc2	equ	0xFDE
 36900                           postdec2	equ	0xFDD
 36901                           plusw2	equ	0xFDB
 36902                           fsr2h	equ	0xFDA
 36903                           fsr2l	equ	0xFD9
 36904                           status	equ	0xFD8
 36905                           
 36906 ;; *************** function _memcpy *****************
 36907 ;; Defined at:
 36908 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 36909 ;; Parameters:    Size  Location     Type
 36910 ;;  d1              2    4[BANK0 ] PTR void 
 36911 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36912 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36913 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36914 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36915 ;;  s1              2    6[BANK0 ] PTR const void 
 36916 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36917 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36918 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36919 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36920 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36921 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36922 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36923 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36924 ;;		 -> NULL(0), 
 36925 ;;  n               2    8[BANK0 ] unsigned int 
 36926 ;; Auto vars:     Size  Location     Type
 36927 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 36928 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(4), appSKey(16), 
 36929 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 36930 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 36931 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 36932 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 36933 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 36934 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 36935 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 36936 ;;		 -> NULL(0), 
 36937 ;;  d               2   10[BANK0 ] PTR unsigned char 
 36938 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 36939 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 36940 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 36941 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 36942 ;; Return value:  Size  Location     Type
 36943 ;;                  2    4[BANK0 ] PTR void 
 36944 ;; Registers used:
 36945 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36946 ;; Tracked objects:
 36947 ;;		On entry : F/0
 36948 ;;		On exit  : F/0
 36949 ;;		Unchanged: 0/0
 36950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36951 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36952 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36954 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36955 ;;Total ram usage:       10 bytes
 36956 ;; Hardware stack levels used:    1
 36957 ;; Hardware stack levels required when called:    7
 36958 ;; This function calls:
 36959 ;;		Nothing
 36960 ;; This function is called by:
 36961 ;;		_RADIO_SetFSKSyncWord
 36962 ;;		_UpdateCfList
 36963 ;;		_InitDefault868Channels
 36964 ;;		_InitDefault433Channels
 36965 ;;		_AESCmac
 36966 ;;		_LORAWAN_SetNetworkSessionKey
 36967 ;;		_LORAWAN_SetApplicationSessionKey
 36968 ;;		_LORAWAN_RxDone
 36969 ;;		_AssemblePacket
 36970 ;;		_PrepareJoinRequestFrame
 36971 ;;		_PrepareSessionKeys
 36972 ;;		_AssembleEncryptionBlock
 36973 ;;		_ExtractMic
 36974 ;;		_ComputeMic
 36975 ;;		_AESEncodeLoRa
 36976 ;; This function uses a non-reentrant model
 36977 ;;
 36978                           
 36979                           	psect	text198
 36980  006888                     __ptext198:
 36981                           	opt stack 0
 36982  006888                     _memcpy:
 36983                           	opt stack 17
 36984                           
 36985                           ; BSR set to: 0
 36986                           
 36987                           ; BSR set to: 0
 36988                           ;incstack = 0
 36989  006888  C066  F06C         	movff	memcpy@s1,memcpy@s
 36990  00688C  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 36991  006890  C064  F06A         	movff	memcpy@d1,memcpy@d
 36992  006894  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 36993  006898  D01B               	goto	l12030
 36994  00689A                     l12024:
 36995                           
 36996                           ; BSR set to: 0
 36997  00689A  C06C  FFF6         	movff	memcpy@s,tblptrl
 36998  00689E  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 36999  0068A2  0E00               	movlw	low (__mediumconst shr (0+16))
 37000  0068A4  6EF8               	movwf	tblptru,c
 37001  0068A6  C06A  FFD9         	movff	memcpy@d,fsr2l
 37002  0068AA  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 37003  0068AE  0E0F               	movlw	(high __ramtop+-1)
 37004  0068B0  64F7               	cpfsgt	tblptrh,c
 37005  0068B2  D003               	bra	u12647
 37006  0068B4  0008               	tblrd		*
 37007  0068B6  50F5               	movf	tablat,w,c
 37008  0068B8  D005               	bra	u12640
 37009  0068BA                     u12647:
 37010  0068BA  CFF6 FFE9          	movff	tblptrl,fsr0l
 37011  0068BE  CFF7 FFEA          	movff	tblptrh,fsr0h
 37012  0068C2  50EF               	movf	indf0,w,c
 37013  0068C4                     u12640:
 37014  0068C4  6EDF               	movwf	indf2,c
 37015  0068C6  0100               	movlb	0	; () banked
 37016  0068C8  4B6C               	infsnz	memcpy@s& (0+255),f,b
 37017  0068CA  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 37018                           
 37019                           ; BSR set to: 0
 37020  0068CC  4B6A               	infsnz	memcpy@d& (0+255),f,b
 37021  0068CE  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 37022  0068D0                     l12030:
 37023                           
 37024                           ; BSR set to: 0
 37025  0068D0  0768               	decf	memcpy@n& (0+255),f,b
 37026  0068D2  A0D8               	btfss	status,0,c
 37027  0068D4  0769               	decf	(memcpy@n+1)& (0+255),f,b
 37028  0068D6  2968               	incf	memcpy@n& (0+255),w,b
 37029  0068D8  E1E0               	bnz	l12024
 37030  0068DA  2969               	incf	(memcpy@n+1)& (0+255),w,b
 37031  0068DC  E1DE               	bnz	l12024
 37032                           
 37033                           ; BSR set to: 0
 37034  0068DE  0012               	return		;funcret
 37035  0068E0                     __end_of_memcpy:
 37036                           	opt stack 0
 37037                           tosu	equ	0xFFF
 37038                           tosh	equ	0xFFE
 37039                           tosl	equ	0xFFD
 37040                           pclath	equ	0xFFA
 37041                           tblptru	equ	0xFF8
 37042                           tblptrh	equ	0xFF7
 37043                           tblptrl	equ	0xFF6
 37044                           tablat	equ	0xFF5
 37045                           prodh	equ	0xFF4
 37046                           prodl	equ	0xFF3
 37047                           intcon	equ	0xFF2
 37048                           intcon2	equ	0xFF1
 37049                           intcon3	equ	0xFF0
 37050                           indf0	equ	0xFEF
 37051                           postinc0	equ	0xFEE
 37052                           plusw0	equ	0xFEB
 37053                           fsr0h	equ	0xFEA
 37054                           fsr0l	equ	0xFE9
 37055                           wreg	equ	0xFE8
 37056                           postinc1	equ	0xFE6
 37057                           postdec1	equ	0xFE5
 37058                           plusw1	equ	0xFE3
 37059                           fsr1h	equ	0xFE2
 37060                           fsr1l	equ	0xFE1
 37061                           indf2	equ	0xFDF
 37062                           postinc2	equ	0xFDE
 37063                           postdec2	equ	0xFDD
 37064                           plusw2	equ	0xFDB
 37065                           fsr2h	equ	0xFDA
 37066                           fsr2l	equ	0xFD9
 37067                           status	equ	0xFD8
 37068                           
 37069 ;; *************** function _CreateAllSoftwareTimers *****************
 37070 ;; Defined at:
 37071 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37072 ;; Parameters:    Size  Location     Type
 37073 ;;		None
 37074 ;; Auto vars:     Size  Location     Type
 37075 ;;		None
 37076 ;; Return value:  Size  Location     Type
 37077 ;;                  1    wreg      void 
 37078 ;; Registers used:
 37079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37080 ;; Tracked objects:
 37081 ;;		On entry : F/2
 37082 ;;		On exit  : F/2
 37083 ;;		Unchanged: 0/0
 37084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37089 ;;Total ram usage:        0 bytes
 37090 ;; Hardware stack levels used:    1
 37091 ;; Hardware stack levels required when called:    8
 37092 ;; This function calls:
 37093 ;;		_SwTimerCreate
 37094 ;; This function is called by:
 37095 ;;		_LORAWAN_Init
 37096 ;; This function uses a non-reentrant model
 37097 ;;
 37098                           
 37099                           	psect	text199
 37100  006984                     __ptext199:
 37101                           	opt stack 0
 37102  006984                     _CreateAllSoftwareTimers:
 37103                           	opt stack 21
 37104                           
 37105                           ; BSR set to: 2
 37106                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 37107                           
 37108                           ; BSR set to: 0
 37109                           ;incstack = 0
 37110  006984  EC34  F031         	call	_SwTimerCreate	;wreg free
 37111  006988  0102               	movlb	2	; () banked
 37112  00698A  6FE2               	movwf	(_loRa+226)& (0+255),b
 37113                           
 37114                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 37115  00698C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37116  006990  0102               	movlb	2	; () banked
 37117  006992  6FE3               	movwf	(_loRa+227)& (0+255),b
 37118                           
 37119                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 37120  006994  EC34  F031         	call	_SwTimerCreate	;wreg free
 37121  006998  0102               	movlb	2	; () banked
 37122  00699A  6FE4               	movwf	(_loRa+228)& (0+255),b
 37123                           
 37124                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 37125  00699C  EC34  F031         	call	_SwTimerCreate	;wreg free
 37126  0069A0  0102               	movlb	2	; () banked
 37127  0069A2  6FE5               	movwf	(_loRa+229)& (0+255),b
 37128                           
 37129                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 37130  0069A4  EC34  F031         	call	_SwTimerCreate	;wreg free
 37131  0069A8  0102               	movlb	2	; () banked
 37132  0069AA  6FE7               	movwf	(_loRa+231)& (0+255),b
 37133                           
 37134                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 37135  0069AC  EC34  F031         	call	_SwTimerCreate	;wreg free
 37136  0069B0  0102               	movlb	2	; () banked
 37137  0069B2  6FE8               	movwf	(_loRa+232)& (0+255),b
 37138                           
 37139                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 37140  0069B4  EC34  F031         	call	_SwTimerCreate	;wreg free
 37141  0069B8  0102               	movlb	2	; () banked
 37142  0069BA  6FE6               	movwf	(_loRa+230)& (0+255),b
 37143                           
 37144                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 37145  0069BC  EC34  F031         	call	_SwTimerCreate	;wreg free
 37146  0069C0  0102               	movlb	2	; () banked
 37147  0069C2  6FEA               	movwf	(_loRa+234)& (0+255),b
 37148                           
 37149                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 37150  0069C4  EC34  F031         	call	_SwTimerCreate	;wreg free
 37151  0069C8  0102               	movlb	2	; () banked
 37152  0069CA  6FF3               	movwf	(_loRa+243)& (0+255),b
 37153                           
 37154                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 37155  0069CC  EC34  F031         	call	_SwTimerCreate	;wreg free
 37156  0069D0  0102               	movlb	2	; () banked
 37157  0069D2  6FE9               	movwf	(_loRa+233)& (0+255),b
 37158                           
 37159                           ; BSR set to: 2
 37160  0069D4  0012               	return		;funcret
 37161  0069D6                     __end_of_CreateAllSoftwareTimers:
 37162                           	opt stack 0
 37163                           tosu	equ	0xFFF
 37164                           tosh	equ	0xFFE
 37165                           tosl	equ	0xFFD
 37166                           pclath	equ	0xFFA
 37167                           tblptru	equ	0xFF8
 37168                           tblptrh	equ	0xFF7
 37169                           tblptrl	equ	0xFF6
 37170                           tablat	equ	0xFF5
 37171                           prodh	equ	0xFF4
 37172                           prodl	equ	0xFF3
 37173                           intcon	equ	0xFF2
 37174                           intcon2	equ	0xFF1
 37175                           intcon3	equ	0xFF0
 37176                           indf0	equ	0xFEF
 37177                           postinc0	equ	0xFEE
 37178                           plusw0	equ	0xFEB
 37179                           fsr0h	equ	0xFEA
 37180                           fsr0l	equ	0xFE9
 37181                           wreg	equ	0xFE8
 37182                           postinc1	equ	0xFE6
 37183                           postdec1	equ	0xFE5
 37184                           plusw1	equ	0xFE3
 37185                           fsr1h	equ	0xFE2
 37186                           fsr1l	equ	0xFE1
 37187                           indf2	equ	0xFDF
 37188                           postinc2	equ	0xFDE
 37189                           postdec2	equ	0xFDD
 37190                           plusw2	equ	0xFDB
 37191                           fsr2h	equ	0xFDA
 37192                           fsr2l	equ	0xFD9
 37193                           status	equ	0xFD8
 37194                           
 37195 ;; *************** function _SwTimerCreate *****************
 37196 ;; Defined at:
 37197 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37198 ;; Parameters:    Size  Location     Type
 37199 ;;		None
 37200 ;; Auto vars:     Size  Location     Type
 37201 ;;  retVal          1    4[BANK0 ] unsigned char 
 37202 ;; Return value:  Size  Location     Type
 37203 ;;                  1    wreg      unsigned char 
 37204 ;; Registers used:
 37205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37206 ;; Tracked objects:
 37207 ;;		On entry : C/1
 37208 ;;		On exit  : F/0
 37209 ;;		Unchanged: 0/0
 37210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37214 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37215 ;;Total ram usage:        1 bytes
 37216 ;; Hardware stack levels used:    1
 37217 ;; Hardware stack levels required when called:    7
 37218 ;; This function calls:
 37219 ;;		Nothing
 37220 ;; This function is called by:
 37221 ;;		_RADIO_Init
 37222 ;;		_CreateAllSoftwareTimers
 37223 ;; This function uses a non-reentrant model
 37224 ;;
 37225                           
 37226                           	psect	text200
 37227  006268                     __ptext200:
 37228                           	opt stack 0
 37229  006268                     _SwTimerCreate:
 37230                           	opt stack 21
 37231                           
 37232                           ;sw_timer.c: 156: uint8_t retVal;
 37233                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 37234                           
 37235                           ; BSR set to: 2
 37236                           ;incstack = 0
 37237  006268  0E14               	movlw	20
 37238  00626A  0100               	movlb	0	; () banked
 37239  00626C  61EF               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 37240  00626E  D02E               	goto	l126
 37241                           
 37242                           ; BSR set to: 0
 37243                           ;sw_timer.c: 158: {
 37244                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 37245  006270  9EF2               	bcf	intcon,7,c	;volatile
 37246                           
 37247                           ;sw_timer.c: 160: retVal = allocatedTimers;
 37248  006272  C0EF  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 37249                           
 37250                           ; BSR set to: 0
 37251                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 37252  006276  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37253  006278  0D08               	mullw	8
 37254  00627A  0E04               	movlw	low (_swTimers+4)
 37255  00627C  24F3               	addwf	prodl,w,c
 37256  00627E  6ED9               	movwf	fsr2l,c
 37257  006280  0E03               	movlw	high (_swTimers+4)
 37258  006282  20F4               	addwfc	prodh,w,c
 37259  006284  6EDA               	movwf	fsr2h,c
 37260  006286  6ADF               	clrf	indf2,c
 37261                           
 37262                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 37263  006288  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37264  00628A  0D08               	mullw	8
 37265  00628C  0E00               	movlw	low _swTimers
 37266  00628E  24F3               	addwf	prodl,w,c
 37267  006290  6ED9               	movwf	fsr2l,c
 37268  006292  0E03               	movlw	high _swTimers
 37269  006294  20F4               	addwfc	prodh,w,c
 37270  006296  6EDA               	movwf	fsr2h,c
 37271  006298  6ADE               	clrf	postinc2,c
 37272  00629A  6ADE               	clrf	postinc2,c
 37273  00629C  6ADE               	clrf	postinc2,c
 37274  00629E  6ADD               	clrf	postdec2,c
 37275                           
 37276                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 37277  0062A0  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37278  0062A2  0D08               	mullw	8
 37279  0062A4  0E05               	movlw	low (_swTimers+5)
 37280  0062A6  24F3               	addwf	prodl,w,c
 37281  0062A8  6ED9               	movwf	fsr2l,c
 37282  0062AA  0E03               	movlw	high (_swTimers+5)
 37283  0062AC  20F4               	addwfc	prodh,w,c
 37284  0062AE  6EDA               	movwf	fsr2h,c
 37285  0062B0  6ADF               	clrf	indf2,c
 37286                           
 37287                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 37288  0062B2  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37289  0062B4  0D08               	mullw	8
 37290  0062B6  0E06               	movlw	low (_swTimers+6)
 37291  0062B8  24F3               	addwf	prodl,w,c
 37292  0062BA  6ED9               	movwf	fsr2l,c
 37293  0062BC  0E03               	movlw	high (_swTimers+6)
 37294  0062BE  20F4               	addwfc	prodh,w,c
 37295  0062C0  6EDA               	movwf	fsr2h,c
 37296  0062C2  6ADE               	clrf	postinc2,c
 37297  0062C4  6ADD               	clrf	postdec2,c
 37298                           
 37299                           ; BSR set to: 0
 37300                           ;sw_timer.c: 165: allocatedTimers++;
 37301  0062C6  2BEF               	incf	_allocatedTimers& (0+255),f,b	;volatile
 37302                           
 37303                           ; BSR set to: 0
 37304                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 37305  0062C8  8EF2               	bsf	intcon,7,c	;volatile
 37306                           
 37307                           ;sw_timer.c: 167: }
 37308  0062CA  D001               	goto	l10000
 37309  0062CC                     l126:
 37310  0062CC  D7FF               	goto	l126
 37311  0062CE                     l10000:
 37312                           
 37313                           ; BSR set to: 0
 37314                           ;sw_timer.c: 175: }
 37315                           ;sw_timer.c: 176: }
 37316                           ;sw_timer.c: 177: return retVal;
 37317  0062CE  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 37318                           
 37319                           ; BSR set to: 0
 37320  0062D0  0012               	return		;funcret
 37321  0062D2                     __end_of_SwTimerCreate:
 37322                           	opt stack 0
 37323                           tosu	equ	0xFFF
 37324                           tosh	equ	0xFFE
 37325                           tosl	equ	0xFFD
 37326                           pclath	equ	0xFFA
 37327                           tblptru	equ	0xFF8
 37328                           tblptrh	equ	0xFF7
 37329                           tblptrl	equ	0xFF6
 37330                           tablat	equ	0xFF5
 37331                           prodh	equ	0xFF4
 37332                           prodl	equ	0xFF3
 37333                           intcon	equ	0xFF2
 37334                           intcon2	equ	0xFF1
 37335                           intcon3	equ	0xFF0
 37336                           indf0	equ	0xFEF
 37337                           postinc0	equ	0xFEE
 37338                           plusw0	equ	0xFEB
 37339                           fsr0h	equ	0xFEA
 37340                           fsr0l	equ	0xFE9
 37341                           wreg	equ	0xFE8
 37342                           postinc1	equ	0xFE6
 37343                           postdec1	equ	0xFE5
 37344                           plusw1	equ	0xFE3
 37345                           fsr1h	equ	0xFE2
 37346                           fsr1l	equ	0xFE1
 37347                           indf2	equ	0xFDF
 37348                           postinc2	equ	0xFDE
 37349                           postdec2	equ	0xFDD
 37350                           plusw2	equ	0xFDB
 37351                           fsr2h	equ	0xFDA
 37352                           fsr2l	equ	0xFD9
 37353                           status	equ	0xFD8
 37354                           
 37355 ;; *************** function _LORAWAN_GetState *****************
 37356 ;; Defined at:
 37357 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37358 ;; Parameters:    Size  Location     Type
 37359 ;;		None
 37360 ;; Auto vars:     Size  Location     Type
 37361 ;;		None
 37362 ;; Return value:  Size  Location     Type
 37363 ;;                  1    wreg      unsigned char 
 37364 ;; Registers used:
 37365 ;;		wreg, status,2, status,0
 37366 ;; Tracked objects:
 37367 ;;		On entry : F/1
 37368 ;;		On exit  : F/2
 37369 ;;		Unchanged: 0/0
 37370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37375 ;;Total ram usage:        0 bytes
 37376 ;; Hardware stack levels used:    1
 37377 ;; Hardware stack levels required when called:    7
 37378 ;; This function calls:
 37379 ;;		Nothing
 37380 ;; This function is called by:
 37381 ;;		_main
 37382 ;; This function uses a non-reentrant model
 37383 ;;
 37384                           
 37385                           	psect	text201
 37386  00791C                     __ptext201:
 37387                           	opt stack 0
 37388  00791C                     _LORAWAN_GetState:
 37389                           	opt stack 23
 37390                           
 37391                           ; BSR set to: 1
 37392                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 37393                           
 37394                           ; BSR set to: 0
 37395                           ;incstack = 0
 37396  00791C  0102               	movlb	2	; () banked
 37397  00791E  5102               	movf	(_loRa+2)& (0+255),w,b
 37398  007920  0B0F               	andlw	15
 37399                           
 37400                           ; BSR set to: 2
 37401  007922  0012               	return		;funcret
 37402  007924                     __end_of_LORAWAN_GetState:
 37403                           	opt stack 0
 37404                           tosu	equ	0xFFF
 37405                           tosh	equ	0xFFE
 37406                           tosl	equ	0xFFD
 37407                           pclath	equ	0xFFA
 37408                           tblptru	equ	0xFF8
 37409                           tblptrh	equ	0xFF7
 37410                           tblptrl	equ	0xFF6
 37411                           tablat	equ	0xFF5
 37412                           prodh	equ	0xFF4
 37413                           prodl	equ	0xFF3
 37414                           intcon	equ	0xFF2
 37415                           intcon2	equ	0xFF1
 37416                           intcon3	equ	0xFF0
 37417                           indf0	equ	0xFEF
 37418                           postinc0	equ	0xFEE
 37419                           plusw0	equ	0xFEB
 37420                           fsr0h	equ	0xFEA
 37421                           fsr0l	equ	0xFE9
 37422                           wreg	equ	0xFE8
 37423                           postinc1	equ	0xFE6
 37424                           postdec1	equ	0xFE5
 37425                           plusw1	equ	0xFE3
 37426                           fsr1h	equ	0xFE2
 37427                           fsr1l	equ	0xFE1
 37428                           indf2	equ	0xFDF
 37429                           postinc2	equ	0xFDE
 37430                           postdec2	equ	0xFDD
 37431                           plusw2	equ	0xFDB
 37432                           fsr2h	equ	0xFDA
 37433                           fsr2l	equ	0xFD9
 37434                           status	equ	0xFD8
 37435                           
 37436 ;; *************** function _IO_pins_init *****************
 37437 ;; Defined at:
 37438 ;;		line 130 in file "main.c"
 37439 ;; Parameters:    Size  Location     Type
 37440 ;;		None
 37441 ;; Auto vars:     Size  Location     Type
 37442 ;;		None
 37443 ;; Return value:  Size  Location     Type
 37444 ;;                  1    wreg      void 
 37445 ;; Registers used:
 37446 ;;		None
 37447 ;; Tracked objects:
 37448 ;;		On entry : F/F
 37449 ;;		On exit  : F/F
 37450 ;;		Unchanged: 0/0
 37451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37456 ;;Total ram usage:        0 bytes
 37457 ;; Hardware stack levels used:    1
 37458 ;; Hardware stack levels required when called:    7
 37459 ;; This function calls:
 37460 ;;		Nothing
 37461 ;; This function is called by:
 37462 ;;		_main
 37463 ;; This function uses a non-reentrant model
 37464 ;;
 37465                           
 37466                           	psect	text202
 37467  007796                     __ptext202:
 37468                           	opt stack 0
 37469  007796                     _IO_pins_init:
 37470                           	opt stack 23
 37471                           
 37472                           ; BSR set to: 15
 37473                           ;main.c: 132: TRISCbits.TRISC5 = 0;
 37474                           
 37475                           ; BSR set to: 2
 37476                           ;incstack = 0
 37477  007796  9A94               	bcf	3988,5,c	;volatile
 37478                           
 37479                           ;main.c: 133: TRISDbits.TRISD5 = 0;
 37480  007798  9A95               	bcf	3989,5,c	;volatile
 37481                           
 37482                           ;main.c: 134: TRISDbits.TRISD6 = 1;
 37483  00779A  8C95               	bsf	3989,6,c	;volatile
 37484                           
 37485                           ;main.c: 135: TRISDbits.TRISD7 = 1;
 37486  00779C  8E95               	bsf	3989,7,c	;volatile
 37487                           
 37488                           ;main.c: 137: ANSELCbits.ANSC5 = 0;
 37489  00779E  9B3A               	bcf	58,5,b	;volatile
 37490                           
 37491                           ;main.c: 138: ANSELDbits.ANSD5 = 0;
 37492  0077A0  9B3B               	bcf	59,5,b	;volatile
 37493                           
 37494                           ;main.c: 139: ANSELDbits.ANSD6 = 1;
 37495  0077A2  8D3B               	bsf	59,6,b	;volatile
 37496                           
 37497                           ;main.c: 140: ANSELDbits.ANSD7 = 1;
 37498  0077A4  8F3B               	bsf	59,7,b	;volatile
 37499                           
 37500                           ; BSR set to: 15
 37501  0077A6  0012               	return		;funcret
 37502  0077A8                     __end_of_IO_pins_init:
 37503                           	opt stack 0
 37504                           tosu	equ	0xFFF
 37505                           tosh	equ	0xFFE
 37506                           tosl	equ	0xFFD
 37507                           pclath	equ	0xFFA
 37508                           tblptru	equ	0xFF8
 37509                           tblptrh	equ	0xFF7
 37510                           tblptrl	equ	0xFF6
 37511                           tablat	equ	0xFF5
 37512                           prodh	equ	0xFF4
 37513                           prodl	equ	0xFF3
 37514                           intcon	equ	0xFF2
 37515                           intcon2	equ	0xFF1
 37516                           intcon3	equ	0xFF0
 37517                           indf0	equ	0xFEF
 37518                           postinc0	equ	0xFEE
 37519                           plusw0	equ	0xFEB
 37520                           fsr0h	equ	0xFEA
 37521                           fsr0l	equ	0xFE9
 37522                           wreg	equ	0xFE8
 37523                           postinc1	equ	0xFE6
 37524                           postdec1	equ	0xFE5
 37525                           plusw1	equ	0xFE3
 37526                           fsr1h	equ	0xFE2
 37527                           fsr1l	equ	0xFE1
 37528                           indf2	equ	0xFDF
 37529                           postinc2	equ	0xFDE
 37530                           postdec2	equ	0xFDD
 37531                           plusw2	equ	0xFDB
 37532                           fsr2h	equ	0xFDA
 37533                           fsr2l	equ	0xFD9
 37534                           status	equ	0xFD8
 37535                           
 37536 ;; *************** function _ADC_Init *****************
 37537 ;; Defined at:
 37538 ;;		line 158 in file "main.c"
 37539 ;; Parameters:    Size  Location     Type
 37540 ;;		None
 37541 ;; Auto vars:     Size  Location     Type
 37542 ;;		None
 37543 ;; Return value:  Size  Location     Type
 37544 ;;                  1    wreg      void 
 37545 ;; Registers used:
 37546 ;;		wreg, status,2
 37547 ;; Tracked objects:
 37548 ;;		On entry : F/F
 37549 ;;		On exit  : F/F
 37550 ;;		Unchanged: E/0
 37551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37556 ;;Total ram usage:        0 bytes
 37557 ;; Hardware stack levels used:    1
 37558 ;; Hardware stack levels required when called:    7
 37559 ;; This function calls:
 37560 ;;		Nothing
 37561 ;; This function is called by:
 37562 ;;		_main
 37563 ;; This function uses a non-reentrant model
 37564 ;;
 37565                           
 37566                           	psect	text203
 37567  0077F0                     __ptext203:
 37568                           	opt stack 0
 37569  0077F0                     _ADC_Init:
 37570                           	opt stack 23
 37571                           
 37572                           ; BSR set to: 15
 37573                           ;main.c: 159: ADCON0bits.GO = 0;
 37574                           
 37575                           ; BSR set to: 15
 37576                           ;incstack = 0
 37577  0077F0  92C2               	bcf	4034,1,c	;volatile
 37578                           
 37579                           ;main.c: 160: ADCON2bits.ADFM = 1;
 37580  0077F2  8EC0               	bsf	4032,7,c	;volatile
 37581                           
 37582                           ; BSR set to: 15
 37583                           ;main.c: 161: ADCON2bits.ADCS = 3;
 37584  0077F4  50C0               	movf	4032,w,c	;volatile
 37585  0077F6  0BF8               	andlw	-8
 37586  0077F8  0903               	iorlw	3
 37587  0077FA  6EC0               	movwf	4032,c	;volatile
 37588                           
 37589                           ; BSR set to: 15
 37590  0077FC  0012               	return		;funcret
 37591  0077FE                     __end_of_ADC_Init:
 37592                           	opt stack 0
 37593                           tosu	equ	0xFFF
 37594                           tosh	equ	0xFFE
 37595                           tosl	equ	0xFFD
 37596                           pclath	equ	0xFFA
 37597                           tblptru	equ	0xFF8
 37598                           tblptrh	equ	0xFF7
 37599                           tblptrl	equ	0xFF6
 37600                           tablat	equ	0xFF5
 37601                           prodh	equ	0xFF4
 37602                           prodl	equ	0xFF3
 37603                           intcon	equ	0xFF2
 37604                           intcon2	equ	0xFF1
 37605                           intcon3	equ	0xFF0
 37606                           indf0	equ	0xFEF
 37607                           postinc0	equ	0xFEE
 37608                           plusw0	equ	0xFEB
 37609                           fsr0h	equ	0xFEA
 37610                           fsr0l	equ	0xFE9
 37611                           wreg	equ	0xFE8
 37612                           postinc1	equ	0xFE6
 37613                           postdec1	equ	0xFE5
 37614                           plusw1	equ	0xFE3
 37615                           fsr1h	equ	0xFE2
 37616                           fsr1l	equ	0xFE1
 37617                           indf2	equ	0xFDF
 37618                           postinc2	equ	0xFDE
 37619                           postdec2	equ	0xFDD
 37620                           plusw2	equ	0xFDB
 37621                           fsr2h	equ	0xFDA
 37622                           fsr2l	equ	0xFD9
 37623                           status	equ	0xFD8
 37624                           
 37625 ;; *************** function _INTERRUPT_InterruptManager *****************
 37626 ;; Defined at:
 37627 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 37628 ;; Parameters:    Size  Location     Type
 37629 ;;		None
 37630 ;; Auto vars:     Size  Location     Type
 37631 ;;		None
 37632 ;; Return value:  Size  Location     Type
 37633 ;;                  1    wreg      void 
 37634 ;; Registers used:
 37635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 37636 ;; Tracked objects:
 37637 ;;		On entry : 0/0
 37638 ;;		On exit  : 0/0
 37639 ;;		Unchanged: 0/0
 37640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37643 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37645 ;;Total ram usage:        8 bytes
 37646 ;; Hardware stack levels used:    1
 37647 ;; Hardware stack levels required when called:    6
 37648 ;; This function calls:
 37649 ;;		_INT1_ISR
 37650 ;;		_INT2_ISR
 37651 ;;		_PIN_MANAGER_IOC
 37652 ;;		_TMR1_ISR
 37653 ;;		_TMR3_ISR
 37654 ;; This function is called by:
 37655 ;;		Interrupt level 2
 37656 ;; This function uses a non-reentrant model
 37657 ;;
 37658                           
 37659                           	psect	intcode
 37660  000008                     __pintcode:
 37661                           	opt stack 0
 37662  000008                     _INTERRUPT_InterruptManager:
 37663                           	opt stack 12
 37664                           
 37665                           ; BSR set to: 15
 37666                           ;incstack = 0
 37667  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 37668  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 37669  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 37670  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 37671  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 37672  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 37673  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 37674  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 37675  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 37676                           
 37677                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 37678  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 37679  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 37680  000030  D003               	goto	i2l2497
 37681                           
 37682                           ;interrupt_manager.c: 61: {
 37683                           ;interrupt_manager.c: 62: INT1_ISR();
 37684  000032  ECAA  F03C         	call	_INT1_ISR	;wreg free
 37685                           
 37686                           ;interrupt_manager.c: 63: }
 37687  000036  D01B               	goto	i2l2507
 37688  000038                     i2l2497:
 37689                           
 37690                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 37691  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 37692  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 37693  00003C  D003               	goto	i2l2499
 37694                           
 37695                           ;interrupt_manager.c: 65: {
 37696                           ;interrupt_manager.c: 66: INT2_ISR();
 37697  00003E  ECA4  F03C         	call	_INT2_ISR	;wreg free
 37698                           
 37699                           ;interrupt_manager.c: 67: }
 37700  000042  D015               	goto	i2l2507
 37701  000044                     i2l2499:
 37702                           
 37703                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE2bits.TMR3IE == 1 && PIR2bi
      +                          ts.TMR3IF == 1)
 37704  000044  BCF2               	btfsc	intcon,6,c	;volatile
 37705  000046  A2A0               	btfss	4000,1,c	;volatile
 37706  000048  D005               	goto	i2l2501
 37707  00004A  A2A1               	btfss	4001,1,c	;volatile
 37708  00004C  D003               	goto	i2l2501
 37709                           
 37710                           ;interrupt_manager.c: 69: {
 37711                           ;interrupt_manager.c: 70: TMR3_ISR();
 37712  00004E  ECFF  F03B         	call	_TMR3_ISR	;wreg free
 37713                           
 37714                           ;interrupt_manager.c: 71: }
 37715  000052  D00D               	goto	i2l2507
 37716  000054                     i2l2501:
 37717                           
 37718                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 37719  000054  BCF2               	btfsc	intcon,6,c	;volatile
 37720  000056  A09D               	btfss	3997,0,c	;volatile
 37721  000058  D005               	goto	i2l2503
 37722  00005A  A09E               	btfss	3998,0,c	;volatile
 37723  00005C  D003               	goto	i2l2503
 37724                           
 37725                           ;interrupt_manager.c: 73: {
 37726                           ;interrupt_manager.c: 74: TMR1_ISR();
 37727  00005E  EC06  F03C         	call	_TMR1_ISR	;wreg free
 37728                           
 37729                           ;interrupt_manager.c: 75: }
 37730  000062  D005               	goto	i2l2507
 37731  000064                     i2l2503:
 37732                           
 37733                           ;interrupt_manager.c: 76: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 37734  000064  B6F2               	btfsc	intcon,3,c	;volatile
 37735  000066  A0F2               	btfss	intcon,0,c	;volatile
 37736  000068  D002               	goto	i2l2507
 37737                           
 37738                           ;interrupt_manager.c: 77: {
 37739                           ;interrupt_manager.c: 78: PIN_MANAGER_IOC();
 37740  00006A  EC68  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 37741  00006E                     i2l2507:
 37742  00006E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 37743  000072  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 37744  000076  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 37745  00007A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 37746  00007E  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 37747  000082  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 37748  000086  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 37749  00008A  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 37750  00008E  0011               	retfie		f
 37751  000090                     __end_of_INTERRUPT_InterruptManager:
 37752                           	opt stack 0
 37753                           tosu	equ	0xFFF
 37754                           tosh	equ	0xFFE
 37755                           tosl	equ	0xFFD
 37756                           pclatu	equ	0xFFB
 37757                           pclath	equ	0xFFA
 37758                           tblptru	equ	0xFF8
 37759                           tblptrh	equ	0xFF7
 37760                           tblptrl	equ	0xFF6
 37761                           tablat	equ	0xFF5
 37762                           prodh	equ	0xFF4
 37763                           prodl	equ	0xFF3
 37764                           intcon	equ	0xFF2
 37765                           intcon2	equ	0xFF1
 37766                           intcon3	equ	0xFF0
 37767                           indf0	equ	0xFEF
 37768                           postinc0	equ	0xFEE
 37769                           plusw0	equ	0xFEB
 37770                           fsr0h	equ	0xFEA
 37771                           fsr0l	equ	0xFE9
 37772                           wreg	equ	0xFE8
 37773                           postinc1	equ	0xFE6
 37774                           postdec1	equ	0xFE5
 37775                           plusw1	equ	0xFE3
 37776                           fsr1h	equ	0xFE2
 37777                           fsr1l	equ	0xFE1
 37778                           indf2	equ	0xFDF
 37779                           postinc2	equ	0xFDE
 37780                           postdec2	equ	0xFDD
 37781                           plusw2	equ	0xFDB
 37782                           fsr2h	equ	0xFDA
 37783                           fsr2l	equ	0xFD9
 37784                           status	equ	0xFD8
 37785                           
 37786 ;; *************** function _TMR3_ISR *****************
 37787 ;; Defined at:
 37788 ;;		line 159 in file "mcc_generated_files/tmr3.c"
 37789 ;; Parameters:    Size  Location     Type
 37790 ;;		None
 37791 ;; Auto vars:     Size  Location     Type
 37792 ;;		None
 37793 ;; Return value:  Size  Location     Type
 37794 ;;                  1    wreg      void 
 37795 ;; Registers used:
 37796 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37797 ;; Tracked objects:
 37798 ;;		On entry : 0/0
 37799 ;;		On exit  : 0/0
 37800 ;;		Unchanged: 0/0
 37801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37806 ;;Total ram usage:        0 bytes
 37807 ;; Hardware stack levels used:    1
 37808 ;; Hardware stack levels required when called:    2
 37809 ;; This function calls:
 37810 ;;		_TMR3_CallBack
 37811 ;; This function is called by:
 37812 ;;		_INTERRUPT_InterruptManager
 37813 ;; This function uses a non-reentrant model
 37814 ;;
 37815                           
 37816                           	psect	text205
 37817  0077FE                     __ptext205:
 37818                           	opt stack 0
 37819  0077FE                     _TMR3_ISR:
 37820                           	opt stack 15
 37821                           
 37822                           ;tmr3.c: 163: PIR2bits.TMR3IF = 0;
 37823                           
 37824                           ;incstack = 0
 37825  0077FE  92A1               	bcf	4001,1,c	;volatile
 37826                           
 37827                           ;tmr3.c: 166: TMR3H = (timer3ReloadVal >> 8);
 37828  007800  C05E  FFB3         	movff	_timer3ReloadVal+1,4019	;volatile
 37829                           
 37830                           ;tmr3.c: 167: TMR3L = (uint8_t) timer3ReloadVal;
 37831  007804  C05D  FFB2         	movff	_timer3ReloadVal,4018	;volatile
 37832                           
 37833                           ;tmr3.c: 171: TMR3_CallBack();
 37834  007808  EFCE  F03A         	goto	_TMR3_CallBack	;wreg free
 37835  00780C                     __end_of_TMR3_ISR:
 37836                           	opt stack 0
 37837                           tosu	equ	0xFFF
 37838                           tosh	equ	0xFFE
 37839                           tosl	equ	0xFFD
 37840                           pclatu	equ	0xFFB
 37841                           pclath	equ	0xFFA
 37842                           tblptru	equ	0xFF8
 37843                           tblptrh	equ	0xFF7
 37844                           tblptrl	equ	0xFF6
 37845                           tablat	equ	0xFF5
 37846                           prodh	equ	0xFF4
 37847                           prodl	equ	0xFF3
 37848                           intcon	equ	0xFF2
 37849                           intcon2	equ	0xFF1
 37850                           intcon3	equ	0xFF0
 37851                           indf0	equ	0xFEF
 37852                           postinc0	equ	0xFEE
 37853                           plusw0	equ	0xFEB
 37854                           fsr0h	equ	0xFEA
 37855                           fsr0l	equ	0xFE9
 37856                           wreg	equ	0xFE8
 37857                           postinc1	equ	0xFE6
 37858                           postdec1	equ	0xFE5
 37859                           plusw1	equ	0xFE3
 37860                           fsr1h	equ	0xFE2
 37861                           fsr1l	equ	0xFE1
 37862                           indf2	equ	0xFDF
 37863                           postinc2	equ	0xFDE
 37864                           postdec2	equ	0xFDD
 37865                           plusw2	equ	0xFDB
 37866                           fsr2h	equ	0xFDA
 37867                           fsr2l	equ	0xFD9
 37868                           status	equ	0xFD8
 37869                           
 37870 ;; *************** function _TMR3_CallBack *****************
 37871 ;; Defined at:
 37872 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 37873 ;; Parameters:    Size  Location     Type
 37874 ;;		None
 37875 ;; Auto vars:     Size  Location     Type
 37876 ;;		None
 37877 ;; Return value:  Size  Location     Type
 37878 ;;                  1    wreg      void 
 37879 ;; Registers used:
 37880 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 37881 ;; Tracked objects:
 37882 ;;		On entry : 0/0
 37883 ;;		On exit  : 0/0
 37884 ;;		Unchanged: 0/0
 37885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37890 ;;Total ram usage:        0 bytes
 37891 ;; Hardware stack levels used:    1
 37892 ;; Hardware stack levels required when called:    1
 37893 ;; This function calls:
 37894 ;;		Absolute function
 37895 ;;		_TMR3_DefaultInterruptHandler
 37896 ;;		_handle16sInterrupt
 37897 ;; This function is called by:
 37898 ;;		_TMR3_ISR
 37899 ;; This function uses a non-reentrant model
 37900 ;;
 37901                           
 37902                           	psect	text206
 37903  00759C                     __ptext206:
 37904                           	opt stack 0
 37905  00759C                     _TMR3_CallBack:
 37906                           	opt stack 15
 37907                           
 37908                           ;tmr3.c: 177: if(TMR3_InterruptHandler)
 37909                           
 37910                           ;incstack = 0
 37911  00759C  0101               	movlb	1	; () banked
 37912  00759E  51EC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37913  0075A0  11ED               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37914  0075A2  B4D8               	btfsc	status,2,c
 37915  0075A4  0012               	return	
 37916                           
 37917                           ; BSR set to: 1
 37918                           ;tmr3.c: 178: {
 37919                           ;tmr3.c: 179: TMR3_InterruptHandler();
 37920  0075A6  0005               	push	
 37921  0075A8  6EFA               	movwf	pclath,c
 37922  0075AA  51EC               	movf	_TMR3_InterruptHandler& (0+255),w,b
 37923  0075AC  6EFD               	movwf	tosl,c
 37924  0075AE  51ED               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 37925  0075B0  6EFE               	movwf	tosh,c
 37926  0075B2  6AFF               	clrf	tosu,c
 37927  0075B4  50FA               	movf	pclath,w,c
 37928  0075B6  0012               	return		;indir
 37929  0075B8                     __end_of_TMR3_CallBack:
 37930                           	opt stack 0
 37931                           tosu	equ	0xFFF
 37932                           tosh	equ	0xFFE
 37933                           tosl	equ	0xFFD
 37934                           pclatu	equ	0xFFB
 37935                           pclath	equ	0xFFA
 37936                           tblptru	equ	0xFF8
 37937                           tblptrh	equ	0xFF7
 37938                           tblptrl	equ	0xFF6
 37939                           tablat	equ	0xFF5
 37940                           prodh	equ	0xFF4
 37941                           prodl	equ	0xFF3
 37942                           intcon	equ	0xFF2
 37943                           intcon2	equ	0xFF1
 37944                           intcon3	equ	0xFF0
 37945                           indf0	equ	0xFEF
 37946                           postinc0	equ	0xFEE
 37947                           plusw0	equ	0xFEB
 37948                           fsr0h	equ	0xFEA
 37949                           fsr0l	equ	0xFE9
 37950                           wreg	equ	0xFE8
 37951                           postinc1	equ	0xFE6
 37952                           postdec1	equ	0xFE5
 37953                           plusw1	equ	0xFE3
 37954                           fsr1h	equ	0xFE2
 37955                           fsr1l	equ	0xFE1
 37956                           indf2	equ	0xFDF
 37957                           postinc2	equ	0xFDE
 37958                           postdec2	equ	0xFDD
 37959                           plusw2	equ	0xFDB
 37960                           fsr2h	equ	0xFDA
 37961                           fsr2l	equ	0xFD9
 37962                           status	equ	0xFD8
 37963                           
 37964 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 37965 ;; Defined at:
 37966 ;;		line 187 in file "mcc_generated_files/tmr3.c"
 37967 ;; Parameters:    Size  Location     Type
 37968 ;;		None
 37969 ;; Auto vars:     Size  Location     Type
 37970 ;;		None
 37971 ;; Return value:  Size  Location     Type
 37972 ;;                  1    wreg      void 
 37973 ;; Registers used:
 37974 ;;		None
 37975 ;; Tracked objects:
 37976 ;;		On entry : F/1
 37977 ;;		On exit  : F/1
 37978 ;;		Unchanged: F/0
 37979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37984 ;;Total ram usage:        0 bytes
 37985 ;; Hardware stack levels used:    1
 37986 ;; This function calls:
 37987 ;;		Nothing
 37988 ;; This function is called by:
 37989 ;;		_TMR3_Initialize
 37990 ;;		_TMR3_CallBack
 37991 ;; This function uses a non-reentrant model
 37992 ;;
 37993                           
 37994                           	psect	text207
 37995  00798A                     __ptext207:
 37996                           	opt stack 0
 37997  00798A                     _TMR3_DefaultInterruptHandler:
 37998                           	opt stack 15
 37999                           
 38000                           ; BSR set to: 1
 38001                           
 38002                           ;incstack = 0
 38003  00798A  0012               	return		;funcret
 38004  00798C                     __end_of_TMR3_DefaultInterruptHandler:
 38005                           	opt stack 0
 38006                           tosu	equ	0xFFF
 38007                           tosh	equ	0xFFE
 38008                           tosl	equ	0xFFD
 38009                           pclatu	equ	0xFFB
 38010                           pclath	equ	0xFFA
 38011                           tblptru	equ	0xFF8
 38012                           tblptrh	equ	0xFF7
 38013                           tblptrl	equ	0xFF6
 38014                           tablat	equ	0xFF5
 38015                           prodh	equ	0xFF4
 38016                           prodl	equ	0xFF3
 38017                           intcon	equ	0xFF2
 38018                           intcon2	equ	0xFF1
 38019                           intcon3	equ	0xFF0
 38020                           indf0	equ	0xFEF
 38021                           postinc0	equ	0xFEE
 38022                           plusw0	equ	0xFEB
 38023                           fsr0h	equ	0xFEA
 38024                           fsr0l	equ	0xFE9
 38025                           wreg	equ	0xFE8
 38026                           postinc1	equ	0xFE6
 38027                           postdec1	equ	0xFE5
 38028                           plusw1	equ	0xFE3
 38029                           fsr1h	equ	0xFE2
 38030                           fsr1l	equ	0xFE1
 38031                           indf2	equ	0xFDF
 38032                           postinc2	equ	0xFDE
 38033                           postdec2	equ	0xFDD
 38034                           plusw2	equ	0xFDB
 38035                           fsr2h	equ	0xFDA
 38036                           fsr2l	equ	0xFD9
 38037                           status	equ	0xFD8
 38038                           
 38039 ;; *************** function _handle16sInterrupt *****************
 38040 ;; Defined at:
 38041 ;;		line 89 in file "main.c"
 38042 ;; Parameters:    Size  Location     Type
 38043 ;;		None
 38044 ;; Auto vars:     Size  Location     Type
 38045 ;;		None
 38046 ;; Return value:  Size  Location     Type
 38047 ;;                  1    wreg      void 
 38048 ;; Registers used:
 38049 ;;		wreg, status,2, status,0
 38050 ;; Tracked objects:
 38051 ;;		On entry : F/1
 38052 ;;		On exit  : 0/0
 38053 ;;		Unchanged: 0/0
 38054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38059 ;;Total ram usage:        0 bytes
 38060 ;; Hardware stack levels used:    1
 38061 ;; This function calls:
 38062 ;;		Nothing
 38063 ;; This function is called by:
 38064 ;;		_main
 38065 ;;		_TMR3_CallBack
 38066 ;; This function uses a non-reentrant model
 38067 ;;
 38068                           
 38069                           	psect	text208
 38070  007770                     __ptext208:
 38071                           	opt stack 0
 38072  007770                     _handle16sInterrupt:
 38073                           	opt stack 15
 38074                           
 38075                           ; BSR set to: 1
 38076                           ;main.c: 91: static volatile uint8_t counterSleepTimeout = 0;
 38077                           ;main.c: 92: if( ++counterSleepTimeout == ONE_HOUR_TIMEOUT_COUNTS )
 38078                           
 38079                           ; BSR set to: 1
 38080                           ;incstack = 0
 38081  007770  2A45               	incf	handle16sInterrupt@counterSleepTimeout,f,c	;volatile
 38082  007772  505A               	movf	_ONE_HOUR_TIMEOUT_COUNTS,w,c
 38083  007774  1845               	xorwf	handle16sInterrupt@counterSleepTimeout,w,c	;volatile
 38084  007776  E104               	bnz	i2l2726
 38085                           
 38086                           ; BSR set to: 1
 38087                           ;main.c: 93: {
 38088                           ;main.c: 95: TimeToSend = 1;
 38089  007778  0E01               	movlw	1
 38090  00777A  6F69               	movwf	_TimeToSend& (0+255),b
 38091                           
 38092                           ; BSR set to: 1
 38093                           ;main.c: 96: counterSleepTimeout = 0;
 38094  00777C  6A45               	clrf	handle16sInterrupt@counterSleepTimeout,c	;volatile
 38095                           
 38096                           ;main.c: 97: }
 38097  00777E  0012               	return	
 38098  007780                     i2l2726:
 38099                           
 38100                           ; BSR set to: 1
 38101  007780  0003               	sleep		;# 
 38102  007782  0012               	return		;funcret
 38103  007784                     __end_of_handle16sInterrupt:
 38104                           	opt stack 0
 38105                           tosu	equ	0xFFF
 38106                           tosh	equ	0xFFE
 38107                           tosl	equ	0xFFD
 38108                           pclatu	equ	0xFFB
 38109                           pclath	equ	0xFFA
 38110                           tblptru	equ	0xFF8
 38111                           tblptrh	equ	0xFF7
 38112                           tblptrl	equ	0xFF6
 38113                           tablat	equ	0xFF5
 38114                           prodh	equ	0xFF4
 38115                           prodl	equ	0xFF3
 38116                           intcon	equ	0xFF2
 38117                           intcon2	equ	0xFF1
 38118                           intcon3	equ	0xFF0
 38119                           indf0	equ	0xFEF
 38120                           postinc0	equ	0xFEE
 38121                           plusw0	equ	0xFEB
 38122                           fsr0h	equ	0xFEA
 38123                           fsr0l	equ	0xFE9
 38124                           wreg	equ	0xFE8
 38125                           postinc1	equ	0xFE6
 38126                           postdec1	equ	0xFE5
 38127                           plusw1	equ	0xFE3
 38128                           fsr1h	equ	0xFE2
 38129                           fsr1l	equ	0xFE1
 38130                           indf2	equ	0xFDF
 38131                           postinc2	equ	0xFDE
 38132                           postdec2	equ	0xFDD
 38133                           plusw2	equ	0xFDB
 38134                           fsr2h	equ	0xFDA
 38135                           fsr2l	equ	0xFD9
 38136                           status	equ	0xFD8
 38137                           
 38138 ;; *************** function _TMR1_ISR *****************
 38139 ;; Defined at:
 38140 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 38141 ;; Parameters:    Size  Location     Type
 38142 ;;		None
 38143 ;; Auto vars:     Size  Location     Type
 38144 ;;		None
 38145 ;; Return value:  Size  Location     Type
 38146 ;;                  1    wreg      void 
 38147 ;; Registers used:
 38148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38149 ;; Tracked objects:
 38150 ;;		On entry : 0/0
 38151 ;;		On exit  : 0/0
 38152 ;;		Unchanged: 0/0
 38153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38158 ;;Total ram usage:        0 bytes
 38159 ;; Hardware stack levels used:    1
 38160 ;; Hardware stack levels required when called:    5
 38161 ;; This function calls:
 38162 ;;		_TMR1_CallBack
 38163 ;; This function is called by:
 38164 ;;		_INTERRUPT_InterruptManager
 38165 ;; This function uses a non-reentrant model
 38166 ;;
 38167                           
 38168                           	psect	text209
 38169  00780C                     __ptext209:
 38170                           	opt stack 0
 38171  00780C                     _TMR1_ISR:
 38172                           	opt stack 12
 38173                           
 38174                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 38175                           
 38176                           ;incstack = 0
 38177  00780C  909E               	bcf	3998,0,c	;volatile
 38178                           
 38179                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 38180  00780E  C05C  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 38181                           
 38182                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 38183  007812  C05B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 38184                           
 38185                           ;tmr1.c: 171: TMR1_CallBack();
 38186  007816  EFDC  F03A         	goto	_TMR1_CallBack	;wreg free
 38187  00781A                     __end_of_TMR1_ISR:
 38188                           	opt stack 0
 38189                           tosu	equ	0xFFF
 38190                           tosh	equ	0xFFE
 38191                           tosl	equ	0xFFD
 38192                           pclatu	equ	0xFFB
 38193                           pclath	equ	0xFFA
 38194                           tblptru	equ	0xFF8
 38195                           tblptrh	equ	0xFF7
 38196                           tblptrl	equ	0xFF6
 38197                           tablat	equ	0xFF5
 38198                           prodh	equ	0xFF4
 38199                           prodl	equ	0xFF3
 38200                           intcon	equ	0xFF2
 38201                           intcon2	equ	0xFF1
 38202                           intcon3	equ	0xFF0
 38203                           indf0	equ	0xFEF
 38204                           postinc0	equ	0xFEE
 38205                           plusw0	equ	0xFEB
 38206                           fsr0h	equ	0xFEA
 38207                           fsr0l	equ	0xFE9
 38208                           wreg	equ	0xFE8
 38209                           postinc1	equ	0xFE6
 38210                           postdec1	equ	0xFE5
 38211                           plusw1	equ	0xFE3
 38212                           fsr1h	equ	0xFE2
 38213                           fsr1l	equ	0xFE1
 38214                           indf2	equ	0xFDF
 38215                           postinc2	equ	0xFDE
 38216                           postdec2	equ	0xFDD
 38217                           plusw2	equ	0xFDB
 38218                           fsr2h	equ	0xFDA
 38219                           fsr2l	equ	0xFD9
 38220                           status	equ	0xFD8
 38221                           
 38222 ;; *************** function _TMR1_CallBack *****************
 38223 ;; Defined at:
 38224 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 38225 ;; Parameters:    Size  Location     Type
 38226 ;;		None
 38227 ;; Auto vars:     Size  Location     Type
 38228 ;;		None
 38229 ;; Return value:  Size  Location     Type
 38230 ;;                  1    wreg      void 
 38231 ;; Registers used:
 38232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38233 ;; Tracked objects:
 38234 ;;		On entry : 0/0
 38235 ;;		On exit  : 0/0
 38236 ;;		Unchanged: 0/0
 38237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38242 ;;Total ram usage:        0 bytes
 38243 ;; Hardware stack levels used:    1
 38244 ;; Hardware stack levels required when called:    4
 38245 ;; This function calls:
 38246 ;;		Absolute function
 38247 ;;		_TMR1_DefaultInterruptHandler
 38248 ;;		_TMR_ISR_lora
 38249 ;; This function is called by:
 38250 ;;		_TMR1_ISR
 38251 ;; This function uses a non-reentrant model
 38252 ;;
 38253                           
 38254                           	psect	text210
 38255  0075B8                     __ptext210:
 38256                           	opt stack 0
 38257  0075B8                     _TMR1_CallBack:
 38258                           	opt stack 12
 38259                           
 38260                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 38261                           
 38262                           ;incstack = 0
 38263  0075B8  0101               	movlb	1	; () banked
 38264  0075BA  51EA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38265  0075BC  11EB               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38266  0075BE  B4D8               	btfsc	status,2,c
 38267  0075C0  0012               	return	
 38268                           
 38269                           ; BSR set to: 1
 38270                           ;tmr1.c: 178: {
 38271                           ;tmr1.c: 179: TMR1_InterruptHandler();
 38272  0075C2  0005               	push	
 38273  0075C4  6EFA               	movwf	pclath,c
 38274  0075C6  51EA               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38275  0075C8  6EFD               	movwf	tosl,c
 38276  0075CA  51EB               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38277  0075CC  6EFE               	movwf	tosh,c
 38278  0075CE  6AFF               	clrf	tosu,c
 38279  0075D0  50FA               	movf	pclath,w,c
 38280  0075D2  0012               	return		;indir
 38281  0075D4                     __end_of_TMR1_CallBack:
 38282                           	opt stack 0
 38283                           tosu	equ	0xFFF
 38284                           tosh	equ	0xFFE
 38285                           tosl	equ	0xFFD
 38286                           pclatu	equ	0xFFB
 38287                           pclath	equ	0xFFA
 38288                           tblptru	equ	0xFF8
 38289                           tblptrh	equ	0xFF7
 38290                           tblptrl	equ	0xFF6
 38291                           tablat	equ	0xFF5
 38292                           prodh	equ	0xFF4
 38293                           prodl	equ	0xFF3
 38294                           intcon	equ	0xFF2
 38295                           intcon2	equ	0xFF1
 38296                           intcon3	equ	0xFF0
 38297                           indf0	equ	0xFEF
 38298                           postinc0	equ	0xFEE
 38299                           plusw0	equ	0xFEB
 38300                           fsr0h	equ	0xFEA
 38301                           fsr0l	equ	0xFE9
 38302                           wreg	equ	0xFE8
 38303                           postinc1	equ	0xFE6
 38304                           postdec1	equ	0xFE5
 38305                           plusw1	equ	0xFE3
 38306                           fsr1h	equ	0xFE2
 38307                           fsr1l	equ	0xFE1
 38308                           indf2	equ	0xFDF
 38309                           postinc2	equ	0xFDE
 38310                           postdec2	equ	0xFDD
 38311                           plusw2	equ	0xFDB
 38312                           fsr2h	equ	0xFDA
 38313                           fsr2l	equ	0xFD9
 38314                           status	equ	0xFD8
 38315                           
 38316 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38317 ;; Defined at:
 38318 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 38319 ;; Parameters:    Size  Location     Type
 38320 ;;		None
 38321 ;; Auto vars:     Size  Location     Type
 38322 ;;		None
 38323 ;; Return value:  Size  Location     Type
 38324 ;;                  1    wreg      void 
 38325 ;; Registers used:
 38326 ;;		None
 38327 ;; Tracked objects:
 38328 ;;		On entry : F/1
 38329 ;;		On exit  : F/1
 38330 ;;		Unchanged: F/0
 38331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38336 ;;Total ram usage:        0 bytes
 38337 ;; Hardware stack levels used:    1
 38338 ;; This function calls:
 38339 ;;		Nothing
 38340 ;; This function is called by:
 38341 ;;		_TMR1_Initialize
 38342 ;;		_TMR1_CallBack
 38343 ;; This function uses a non-reentrant model
 38344 ;;
 38345                           
 38346                           	psect	text211
 38347  00798C                     __ptext211:
 38348                           	opt stack 0
 38349  00798C                     _TMR1_DefaultInterruptHandler:
 38350                           	opt stack 15
 38351                           
 38352                           ; BSR set to: 1
 38353                           
 38354                           ;incstack = 0
 38355  00798C  0012               	return		;funcret
 38356  00798E                     __end_of_TMR1_DefaultInterruptHandler:
 38357                           	opt stack 0
 38358                           tosu	equ	0xFFF
 38359                           tosh	equ	0xFFE
 38360                           tosl	equ	0xFFD
 38361                           pclatu	equ	0xFFB
 38362                           pclath	equ	0xFFA
 38363                           tblptru	equ	0xFF8
 38364                           tblptrh	equ	0xFF7
 38365                           tblptrl	equ	0xFF6
 38366                           tablat	equ	0xFF5
 38367                           prodh	equ	0xFF4
 38368                           prodl	equ	0xFF3
 38369                           intcon	equ	0xFF2
 38370                           intcon2	equ	0xFF1
 38371                           intcon3	equ	0xFF0
 38372                           indf0	equ	0xFEF
 38373                           postinc0	equ	0xFEE
 38374                           plusw0	equ	0xFEB
 38375                           fsr0h	equ	0xFEA
 38376                           fsr0l	equ	0xFE9
 38377                           wreg	equ	0xFE8
 38378                           postinc1	equ	0xFE6
 38379                           postdec1	equ	0xFE5
 38380                           plusw1	equ	0xFE3
 38381                           fsr1h	equ	0xFE2
 38382                           fsr1l	equ	0xFE1
 38383                           indf2	equ	0xFDF
 38384                           postinc2	equ	0xFDE
 38385                           postdec2	equ	0xFDD
 38386                           plusw2	equ	0xFDB
 38387                           fsr2h	equ	0xFDA
 38388                           fsr2l	equ	0xFD9
 38389                           status	equ	0xFD8
 38390                           
 38391 ;; *************** function _TMR_ISR_lora *****************
 38392 ;; Defined at:
 38393 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38394 ;; Parameters:    Size  Location     Type
 38395 ;;		None
 38396 ;; Auto vars:     Size  Location     Type
 38397 ;;		None
 38398 ;; Return value:  Size  Location     Type
 38399 ;;                  1    wreg      void 
 38400 ;; Registers used:
 38401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38402 ;; Tracked objects:
 38403 ;;		On entry : F/1
 38404 ;;		On exit  : 0/0
 38405 ;;		Unchanged: 0/0
 38406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38411 ;;Total ram usage:        0 bytes
 38412 ;; Hardware stack levels used:    1
 38413 ;; Hardware stack levels required when called:    3
 38414 ;; This function calls:
 38415 ;;		i2_SwTimersInterrupt
 38416 ;;		i2_TMR_SwapTimer
 38417 ;; This function is called by:
 38418 ;;		_TMR_ISR_Lora_Init
 38419 ;;		_TMR1_CallBack
 38420 ;; This function uses a non-reentrant model
 38421 ;;
 38422                           
 38423                           	psect	text212
 38424  006AC0                     __ptext212:
 38425                           	opt stack 0
 38426  006AC0                     _TMR_ISR_lora:
 38427                           	opt stack 12
 38428                           
 38429                           ; BSR set to: 1
 38430                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38431                           
 38432                           ; BSR set to: 1
 38433                           ;incstack = 0
 38434  006AC0  0E01               	movlw	1
 38435  006AC2  0100               	movlb	0	; () banked
 38436  006AC4  6FF2               	movwf	_timerOverflow& (0+255),b	;volatile
 38437                           
 38438                           ; BSR set to: 0
 38439                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38440  006AC6  EC1A  F027         	call	i2_SwTimersInterrupt	;wreg free
 38441  006ACA  C019  F056         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38442  006ACE  C01A  F057         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38443  006AD2  C01B  F058         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38444  006AD6  C01C  F059         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38445                           
 38446                           ; BSR set to: 0
 38447                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38448  006ADA  5059               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38449  006ADC  E117               	bnz	i2l242
 38450  006ADE  0458               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38451  006AE0  B0D8               	btfsc	status,0,c
 38452  006AE2  0012               	return	
 38453                           
 38454                           ; BSR set to: 0
 38455                           ;tmr_lora_addons.c: 66: {
 38456                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38457  006AE4  5056               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38458  006AE6  0800               	sublw	0
 38459  006AE8  6FEC               	movwf	_reloadVal& (0+255),b	;volatile
 38460  006AEA  5057               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38461  006AEC  A0D8               	btfss	status,0,c
 38462  006AEE  2AE8               	incf	wreg,f,c
 38463  006AF0  0800               	sublw	0
 38464  006AF2  6FED               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38465                           
 38466                           ; BSR set to: 0
 38467                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38468  006AF4  C0EC  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38469  006AF8  C0ED  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38470  006AFC  EC23  F037         	call	i2_TMR_SwapTimer	;wreg free
 38471  006B00  C009  F03A         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38472  006B04  C00A  F03B         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38473  006B08  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38474  006B0A  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38475  006B0C                     i2l242:
 38476  006B0C  0012               	return		;funcret
 38477  006B0E                     __end_of_TMR_ISR_lora:
 38478                           	opt stack 0
 38479                           tosu	equ	0xFFF
 38480                           tosh	equ	0xFFE
 38481                           tosl	equ	0xFFD
 38482                           pclatu	equ	0xFFB
 38483                           pclath	equ	0xFFA
 38484                           tblptru	equ	0xFF8
 38485                           tblptrh	equ	0xFF7
 38486                           tblptrl	equ	0xFF6
 38487                           tablat	equ	0xFF5
 38488                           prodh	equ	0xFF4
 38489                           prodl	equ	0xFF3
 38490                           intcon	equ	0xFF2
 38491                           intcon2	equ	0xFF1
 38492                           intcon3	equ	0xFF0
 38493                           indf0	equ	0xFEF
 38494                           postinc0	equ	0xFEE
 38495                           plusw0	equ	0xFEB
 38496                           fsr0h	equ	0xFEA
 38497                           fsr0l	equ	0xFE9
 38498                           wreg	equ	0xFE8
 38499                           postinc1	equ	0xFE6
 38500                           postdec1	equ	0xFE5
 38501                           plusw1	equ	0xFE3
 38502                           fsr1h	equ	0xFE2
 38503                           fsr1l	equ	0xFE1
 38504                           indf2	equ	0xFDF
 38505                           postinc2	equ	0xFDE
 38506                           postdec2	equ	0xFDD
 38507                           plusw2	equ	0xFDB
 38508                           fsr2h	equ	0xFDA
 38509                           fsr2l	equ	0xFD9
 38510                           status	equ	0xFD8
 38511                           
 38512 ;; *************** function i2_TMR_SwapTimer *****************
 38513 ;; Defined at:
 38514 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38515 ;; Parameters:    Size  Location     Type
 38516 ;;  timerVal        2    8[COMRAM] unsigned int 
 38517 ;; Auto vars:     Size  Location     Type
 38518 ;;		None
 38519 ;; Return value:  Size  Location     Type
 38520 ;;                  2    8[COMRAM] unsigned int 
 38521 ;; Registers used:
 38522 ;;		wreg, status,2, status,0, cstack
 38523 ;; Tracked objects:
 38524 ;;		On entry : F/0
 38525 ;;		On exit  : 0/0
 38526 ;;		Unchanged: 0/0
 38527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38532 ;;Total ram usage:        2 bytes
 38533 ;; Hardware stack levels used:    1
 38534 ;; Hardware stack levels required when called:    1
 38535 ;; This function calls:
 38536 ;;		i2_TMR1_ReadTimer
 38537 ;;		i2_TMR1_WriteTimer
 38538 ;; This function is called by:
 38539 ;;		_TMR_ISR_lora
 38540 ;; This function uses a non-reentrant model
 38541 ;;
 38542                           
 38543                           	psect	text213
 38544  006E46                     __ptext213:
 38545                           	opt stack 0
 38546  006E46                     i2_TMR_SwapTimer:
 38547                           	opt stack 13
 38548                           
 38549                           ; BSR set to: 0
 38550                           ;sw_timer.c: 114: static uint16_t oldVal;
 38551                           ;sw_timer.c: 115: static uint16_t retVal;
 38552                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38553                           
 38554                           ;incstack = 0
 38555  006E46  ECA3  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38556  006E4A  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38557  006E4E  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38558  006E52                     i2l10640:
 38559  006E52  ECA3  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38560  006E56  5040               	movf	TMR_SwapTimer@oldVal,w,c
 38561  006E58  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38562  006E5A  E103               	bnz	i2u1101_40
 38563  006E5C  5041               	movf	TMR_SwapTimer@oldVal+1,w,c
 38564  006E5E  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38565  006E60  E0F8               	bz	i2l10640
 38566  006E62                     i2u1101_40:
 38567                           
 38568                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38569  006E62  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38570  006E66  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38571  006E6A  ECEA  F03A         	call	i2_TMR1_WriteTimer	;wreg free
 38572                           
 38573                           ;sw_timer.c: 128: oldVal++;
 38574  006E6E  4A40               	infsnz	TMR_SwapTimer@oldVal,f,c
 38575  006E70  2A41               	incf	TMR_SwapTimer@oldVal+1,f,c
 38576                           
 38577                           ;sw_timer.c: 130: retVal = oldVal;
 38578  006E72  C040  F042         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38579  006E76  C041  F043         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38580                           
 38581                           ;sw_timer.c: 132: return retVal;
 38582  006E7A  C042  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38583  006E7E  C043  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38584  006E82  0012               	return		;funcret
 38585  006E84                     __end_ofi2_TMR_SwapTimer:
 38586                           	opt stack 0
 38587                           tosu	equ	0xFFF
 38588                           tosh	equ	0xFFE
 38589                           tosl	equ	0xFFD
 38590                           pclatu	equ	0xFFB
 38591                           pclath	equ	0xFFA
 38592                           tblptru	equ	0xFF8
 38593                           tblptrh	equ	0xFF7
 38594                           tblptrl	equ	0xFF6
 38595                           tablat	equ	0xFF5
 38596                           prodh	equ	0xFF4
 38597                           prodl	equ	0xFF3
 38598                           intcon	equ	0xFF2
 38599                           intcon2	equ	0xFF1
 38600                           intcon3	equ	0xFF0
 38601                           indf0	equ	0xFEF
 38602                           postinc0	equ	0xFEE
 38603                           plusw0	equ	0xFEB
 38604                           fsr0h	equ	0xFEA
 38605                           fsr0l	equ	0xFE9
 38606                           wreg	equ	0xFE8
 38607                           postinc1	equ	0xFE6
 38608                           postdec1	equ	0xFE5
 38609                           plusw1	equ	0xFE3
 38610                           fsr1h	equ	0xFE2
 38611                           fsr1l	equ	0xFE1
 38612                           indf2	equ	0xFDF
 38613                           postinc2	equ	0xFDE
 38614                           postdec2	equ	0xFDD
 38615                           plusw2	equ	0xFDB
 38616                           fsr2h	equ	0xFDA
 38617                           fsr2l	equ	0xFD9
 38618                           status	equ	0xFD8
 38619                           
 38620 ;; *************** function i2_TMR1_WriteTimer *****************
 38621 ;; Defined at:
 38622 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 38623 ;; Parameters:    Size  Location     Type
 38624 ;;  timerVal        2    0[COMRAM] unsigned int 
 38625 ;; Auto vars:     Size  Location     Type
 38626 ;;		None
 38627 ;; Return value:  Size  Location     Type
 38628 ;;                  1    wreg      void 
 38629 ;; Registers used:
 38630 ;;		None
 38631 ;; Tracked objects:
 38632 ;;		On entry : 0/0
 38633 ;;		On exit  : 0/0
 38634 ;;		Unchanged: 0/0
 38635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38640 ;;Total ram usage:        2 bytes
 38641 ;; Hardware stack levels used:    1
 38642 ;; This function calls:
 38643 ;;		Nothing
 38644 ;; This function is called by:
 38645 ;;		i2_TMR_SwapTimer
 38646 ;; This function uses a non-reentrant model
 38647 ;;
 38648                           
 38649                           	psect	text214
 38650  0075D4                     __ptext214:
 38651                           	opt stack 0
 38652  0075D4                     i2_TMR1_WriteTimer:
 38653                           	opt stack 13
 38654                           
 38655                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 38656                           
 38657                           ;incstack = 0
 38658  0075D4  A4CD               	btfss	4045,2,c	;volatile
 38659  0075D6  D007               	goto	i2l1347
 38660                           
 38661                           ;tmr1.c: 123: {
 38662                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 38663  0075D8  90CD               	bcf	4045,0,c	;volatile
 38664                           
 38665                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 38666  0075DA  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38667                           
 38668                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 38669  0075DE  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38670                           
 38671                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 38672  0075E2  80CD               	bsf	4045,0,c	;volatile
 38673                           
 38674                           ;tmr1.c: 133: }
 38675  0075E4  0012               	return	
 38676  0075E6                     i2l1347:
 38677                           
 38678                           ;tmr1.c: 134: else
 38679                           ;tmr1.c: 135: {
 38680                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 38681  0075E6  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38682                           
 38683                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 38684  0075EA  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38685  0075EE  0012               	return		;funcret
 38686  0075F0                     __end_ofi2_TMR1_WriteTimer:
 38687                           	opt stack 0
 38688                           tosu	equ	0xFFF
 38689                           tosh	equ	0xFFE
 38690                           tosl	equ	0xFFD
 38691                           pclatu	equ	0xFFB
 38692                           pclath	equ	0xFFA
 38693                           tblptru	equ	0xFF8
 38694                           tblptrh	equ	0xFF7
 38695                           tblptrl	equ	0xFF6
 38696                           tablat	equ	0xFF5
 38697                           prodh	equ	0xFF4
 38698                           prodl	equ	0xFF3
 38699                           intcon	equ	0xFF2
 38700                           intcon2	equ	0xFF1
 38701                           intcon3	equ	0xFF0
 38702                           indf0	equ	0xFEF
 38703                           postinc0	equ	0xFEE
 38704                           plusw0	equ	0xFEB
 38705                           fsr0h	equ	0xFEA
 38706                           fsr0l	equ	0xFE9
 38707                           wreg	equ	0xFE8
 38708                           postinc1	equ	0xFE6
 38709                           postdec1	equ	0xFE5
 38710                           plusw1	equ	0xFE3
 38711                           fsr1h	equ	0xFE2
 38712                           fsr1l	equ	0xFE1
 38713                           indf2	equ	0xFDF
 38714                           postinc2	equ	0xFDE
 38715                           postdec2	equ	0xFDD
 38716                           plusw2	equ	0xFDB
 38717                           fsr2h	equ	0xFDA
 38718                           fsr2l	equ	0xFD9
 38719                           status	equ	0xFD8
 38720                           
 38721 ;; *************** function i2_SwTimersInterrupt *****************
 38722 ;; Defined at:
 38723 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38724 ;; Parameters:    Size  Location     Type
 38725 ;;		None
 38726 ;; Auto vars:     Size  Location     Type
 38727 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 38728 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 38729 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 38730 ;; Return value:  Size  Location     Type
 38731 ;;                  4   24[COMRAM] unsigned long 
 38732 ;; Registers used:
 38733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38734 ;; Tracked objects:
 38735 ;;		On entry : F/0
 38736 ;;		On exit  : F/0
 38737 ;;		Unchanged: 0/0
 38738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38740 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38742 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38743 ;;Total ram usage:       17 bytes
 38744 ;; Hardware stack levels used:    1
 38745 ;; Hardware stack levels required when called:    2
 38746 ;; This function calls:
 38747 ;;		i2_TMR_GetDeltaTime
 38748 ;; This function is called by:
 38749 ;;		_TMR_ISR_lora
 38750 ;; This function uses a non-reentrant model
 38751 ;;
 38752                           
 38753                           	psect	text215
 38754  004E34                     __ptext215:
 38755                           	opt stack 0
 38756  004E34                     i2_SwTimersInterrupt:
 38757                           	opt stack 12
 38758                           
 38759                           ; BSR set to: 0
 38760                           ;sw_timer.c: 289: uint8_t i;
 38761                           ;sw_timer.c: 290: uint32_t timeElapsed;
 38762                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38763                           
 38764                           ;incstack = 0
 38765  004E34  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 38766  004E36  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 38767  004E38  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 38768  004E3A  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 38769                           
 38770                           ; BSR set to: 0
 38771                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38772  004E3C  EC2D  F026         	call	i2_TMR_GetDeltaTime	;wreg free
 38773  004E40  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 38774  004E44  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 38775  004E48  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 38776  004E4C  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 38777                           
 38778                           ; BSR set to: 0
 38779                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38780  004E50  6A29               	clrf	i2SwTimersInterrupt@i,c
 38781  004E52  D05A               	goto	i2l10670
 38782  004E54                     i2l10658:
 38783                           
 38784                           ; BSR set to: 0
 38785                           ;sw_timer.c: 298: {
 38786                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 38787  004E54  5029               	movf	i2SwTimersInterrupt@i,w,c
 38788  004E56  0D08               	mullw	8
 38789  004E58  0E04               	movlw	low (_swTimers+4)
 38790  004E5A  24F3               	addwf	prodl,w,c
 38791  004E5C  6ED9               	movwf	fsr2l,c
 38792  004E5E  0E03               	movlw	high (_swTimers+4)
 38793  004E60  20F4               	addwfc	prodh,w,c
 38794  004E62  6EDA               	movwf	fsr2h,c
 38795  004E64  04DE               	decf	postinc2,w,c
 38796  004E66  E14F               	bnz	i2l10668
 38797                           
 38798                           ; BSR set to: 0
 38799                           ;sw_timer.c: 302: {
 38800                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38801  004E68  5029               	movf	i2SwTimersInterrupt@i,w,c
 38802  004E6A  0D08               	mullw	8
 38803  004E6C  0E00               	movlw	low _swTimers
 38804  004E6E  24F3               	addwf	prodl,w,c
 38805  004E70  6ED9               	movwf	fsr2l,c
 38806  004E72  0E03               	movlw	high _swTimers
 38807  004E74  20F4               	addwfc	prodh,w,c
 38808  004E76  6EDA               	movwf	fsr2h,c
 38809  004E78  50DE               	movf	postinc2,w,c
 38810  004E7A  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 38811  004E7C  50DE               	movf	postinc2,w,c
 38812  004E7E  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 38813  004E80  50DE               	movf	postinc2,w,c
 38814  004E82  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 38815  004E84  50DE               	movf	postinc2,w,c
 38816  004E86  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 38817  004E88  E30D               	bnc	i2l10664
 38818                           
 38819                           ; BSR set to: 0
 38820                           ;sw_timer.c: 304: {
 38821                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38822  004E8A  5029               	movf	i2SwTimersInterrupt@i,w,c
 38823  004E8C  0D08               	mullw	8
 38824  004E8E  0E00               	movlw	low _swTimers
 38825  004E90  24F3               	addwf	prodl,w,c
 38826  004E92  6ED9               	movwf	fsr2l,c
 38827  004E94  0E03               	movlw	high _swTimers
 38828  004E96  20F4               	addwfc	prodh,w,c
 38829  004E98  6EDA               	movwf	fsr2h,c
 38830  004E9A  6ADE               	clrf	postinc2,c
 38831  004E9C  6ADE               	clrf	postinc2,c
 38832  004E9E  6ADE               	clrf	postinc2,c
 38833  004EA0  6ADD               	clrf	postdec2,c
 38834                           
 38835                           ;sw_timer.c: 306: }
 38836  004EA2  D031               	goto	i2l10668
 38837  004EA4                     i2l10664:
 38838                           
 38839                           ; BSR set to: 0
 38840                           ;sw_timer.c: 307: else
 38841                           ;sw_timer.c: 308: {
 38842                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 38843  004EA4  5029               	movf	i2SwTimersInterrupt@i,w,c
 38844  004EA6  0D08               	mullw	8
 38845  004EA8  0E00               	movlw	low _swTimers
 38846  004EAA  24F3               	addwf	prodl,w,c
 38847  004EAC  6ED9               	movwf	fsr2l,c
 38848  004EAE  0E03               	movlw	high _swTimers
 38849  004EB0  20F4               	addwfc	prodh,w,c
 38850  004EB2  6EDA               	movwf	fsr2h,c
 38851  004EB4  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 38852  004EB6  5EDE               	subwf	postinc2,f,c
 38853  004EB8  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 38854  004EBA  5ADE               	subwfb	postinc2,f,c
 38855  004EBC  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 38856  004EBE  5ADE               	subwfb	postinc2,f,c
 38857  004EC0  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 38858  004EC2  5ADE               	subwfb	postinc2,f,c
 38859                           
 38860                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38861  004EC4  5029               	movf	i2SwTimersInterrupt@i,w,c
 38862  004EC6  0D08               	mullw	8
 38863  004EC8  0E00               	movlw	low _swTimers
 38864  004ECA  24F3               	addwf	prodl,w,c
 38865  004ECC  6ED9               	movwf	fsr2l,c
 38866  004ECE  0E03               	movlw	high _swTimers
 38867  004ED0  20F4               	addwfc	prodh,w,c
 38868  004ED2  6EDA               	movwf	fsr2h,c
 38869  004ED4  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 38870  004ED6  5CDE               	subwf	postinc2,w,c
 38871  004ED8  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 38872  004EDA  58DE               	subwfb	postinc2,w,c
 38873  004EDC  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 38874  004EDE  58DE               	subwfb	postinc2,w,c
 38875  004EE0  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 38876  004EE2  58DE               	subwfb	postinc2,w,c
 38877  004EE4  E210               	bc	i2l10668
 38878                           
 38879                           ; BSR set to: 0
 38880                           ;sw_timer.c: 313: {
 38881                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38882  004EE6  5029               	movf	i2SwTimersInterrupt@i,w,c
 38883  004EE8  0D08               	mullw	8
 38884  004EEA  0E00               	movlw	low _swTimers
 38885  004EEC  24F3               	addwf	prodl,w,c
 38886  004EEE  6ED9               	movwf	fsr2l,c
 38887  004EF0  0E03               	movlw	high _swTimers
 38888  004EF2  20F4               	addwfc	prodh,w,c
 38889  004EF4  6EDA               	movwf	fsr2h,c
 38890  004EF6  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 38891  004EFA  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 38892  004EFE  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 38893  004F02  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 38894  004F06                     i2l10668:
 38895                           
 38896                           ; BSR set to: 0
 38897  004F06  2A29               	incf	i2SwTimersInterrupt@i,f,c
 38898  004F08                     i2l10670:
 38899                           
 38900                           ; BSR set to: 0
 38901  004F08  51EF               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38902  004F0A  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 38903  004F0C  E3A3               	bnc	i2l10658
 38904                           
 38905                           ; BSR set to: 0
 38906                           ;sw_timer.c: 315: }
 38907                           ;sw_timer.c: 316: }
 38908                           ;sw_timer.c: 317: }
 38909                           ;sw_timer.c: 318: }
 38910                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 38911  004F0E  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 38912  004F12  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 38913  004F16  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 38914  004F1A  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 38915                           
 38916                           ; BSR set to: 0
 38917  004F1E  0012               	return		;funcret
 38918  004F20                     __end_ofi2_SwTimersInterrupt:
 38919                           	opt stack 0
 38920                           tosu	equ	0xFFF
 38921                           tosh	equ	0xFFE
 38922                           tosl	equ	0xFFD
 38923                           pclatu	equ	0xFFB
 38924                           pclath	equ	0xFFA
 38925                           tblptru	equ	0xFF8
 38926                           tblptrh	equ	0xFF7
 38927                           tblptrl	equ	0xFF6
 38928                           tablat	equ	0xFF5
 38929                           prodh	equ	0xFF4
 38930                           prodl	equ	0xFF3
 38931                           intcon	equ	0xFF2
 38932                           intcon2	equ	0xFF1
 38933                           intcon3	equ	0xFF0
 38934                           indf0	equ	0xFEF
 38935                           postinc0	equ	0xFEE
 38936                           plusw0	equ	0xFEB
 38937                           fsr0h	equ	0xFEA
 38938                           fsr0l	equ	0xFE9
 38939                           wreg	equ	0xFE8
 38940                           postinc1	equ	0xFE6
 38941                           postdec1	equ	0xFE5
 38942                           plusw1	equ	0xFE3
 38943                           fsr1h	equ	0xFE2
 38944                           fsr1l	equ	0xFE1
 38945                           indf2	equ	0xFDF
 38946                           postinc2	equ	0xFDE
 38947                           postdec2	equ	0xFDD
 38948                           plusw2	equ	0xFDB
 38949                           fsr2h	equ	0xFDA
 38950                           fsr2l	equ	0xFD9
 38951                           status	equ	0xFD8
 38952                           
 38953 ;; *************** function i2_TMR_GetDeltaTime *****************
 38954 ;; Defined at:
 38955 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38956 ;; Parameters:    Size  Location     Type
 38957 ;;		None
 38958 ;; Auto vars:     Size  Location     Type
 38959 ;;		None
 38960 ;; Return value:  Size  Location     Type
 38961 ;;                  4    8[COMRAM] unsigned long 
 38962 ;; Registers used:
 38963 ;;		wreg, status,2, status,0, cstack
 38964 ;; Tracked objects:
 38965 ;;		On entry : F/0
 38966 ;;		On exit  : F/0
 38967 ;;		Unchanged: 0/0
 38968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38971 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38972 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38973 ;;Total ram usage:       16 bytes
 38974 ;; Hardware stack levels used:    1
 38975 ;; Hardware stack levels required when called:    1
 38976 ;; This function calls:
 38977 ;;		i2_TMR1_ReadTimer
 38978 ;; This function is called by:
 38979 ;;		i2_SwTimersInterrupt
 38980 ;; This function uses a non-reentrant model
 38981 ;;
 38982                           
 38983                           	psect	text216
 38984  004C5A                     __ptext216:
 38985                           	opt stack 0
 38986  004C5A                     i2_TMR_GetDeltaTime:
 38987                           	opt stack 12
 38988                           
 38989                           ; BSR set to: 0
 38990                           ;sw_timer.c: 90: static uint32_t retVal;
 38991                           ;sw_timer.c: 91: static uint16_t tmrVal;
 38992                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 38993                           
 38994                           ; BSR set to: 0
 38995                           ;incstack = 0
 38996  004C5A  ECA3  F03A         	call	i2_TMR1_ReadTimer	;wreg free
 38997  004C5E  C001  F03E         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38998  004C62  C002  F03F         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38999                           
 39000                           ;sw_timer.c: 95: if (timerOverflow == 1)
 39001  004C66  0100               	movlb	0	; () banked
 39002  004C68  05F2               	decf	_timerOverflow& (0+255),w,b	;volatile
 39003  004C6A  E13D               	bnz	i2l9976
 39004                           
 39005                           ; BSR set to: 0
 39006                           ;sw_timer.c: 96: {
 39007                           ;sw_timer.c: 97: timerOverflow = 0;
 39008  004C6C  6BF2               	clrf	_timerOverflow& (0+255),b	;volatile
 39009                           
 39010                           ; BSR set to: 0
 39011                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 39012  004C6E  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 39013  004C70  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 39014  004C72  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 39015  004C74  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 39016  004C76  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 39017  004C78  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 39018  004C7A  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 39019  004C7C  A0D8               	btfss	status,0,c
 39020  004C7E  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 39021  004C80  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 39022  004C82  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 39023  004C84  5036               	movf	_ticksAccounted,w,c	;volatile
 39024  004C86  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 39025  004C88  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 39026  004C8A  5037               	movf	_ticksAccounted+1,w,c	;volatile
 39027  004C8C  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 39028  004C8E  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 39029  004C90  5038               	movf	_ticksAccounted+2,w,c	;volatile
 39030  004C92  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 39031  004C94  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 39032  004C96  5039               	movf	_ticksAccounted+3,w,c	;volatile
 39033  004C98  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39034  004C9A  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39035  004C9C  503A               	movf	_ticksAdded,w,c	;volatile
 39036  004C9E  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39037  004CA0  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 39038  004CA2  503B               	movf	_ticksAdded+1,w,c	;volatile
 39039  004CA4  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39040  004CA6  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 39041  004CA8  503C               	movf	_ticksAdded+2,w,c	;volatile
 39042  004CAA  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39043  004CAC  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 39044  004CAE  503D               	movf	_ticksAdded+3,w,c	;volatile
 39045  004CB0  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39046  004CB2  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 39047  004CB4  0E00               	movlw	0
 39048  004CB6  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 39049  004CB8  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39050  004CBA  0E00               	movlw	0
 39051  004CBC  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 39052  004CBE  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39053  004CC0  0E01               	movlw	1
 39054  004CC2  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 39055  004CC4  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39056  004CC6  0E00               	movlw	0
 39057  004CC8  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 39058  004CCA  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39059                           
 39060                           ; BSR set to: 0
 39061                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 39062  004CCC  C03E  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 39063  004CD0  C03F  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 39064  004CD4  6A38               	clrf	_ticksAccounted+2,c	;volatile
 39065  004CD6  6A39               	clrf	_ticksAccounted+3,c	;volatile
 39066                           
 39067                           ; BSR set to: 0
 39068                           ;sw_timer.c: 100: ticksAdded = 0;
 39069  004CD8  6A3A               	clrf	_ticksAdded,c	;volatile
 39070  004CDA  6A3B               	clrf	_ticksAdded+1,c	;volatile
 39071  004CDC  6A3C               	clrf	_ticksAdded+2,c	;volatile
 39072  004CDE  6A3D               	clrf	_ticksAdded+3,c	;volatile
 39073                           
 39074                           ; BSR set to: 0
 39075                           ;sw_timer.c: 101: reloadVal = 0;
 39076  004CE0  6BEC               	clrf	_reloadVal& (0+255),b	;volatile
 39077  004CE2  6BED               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 39078                           
 39079                           ;sw_timer.c: 102: }
 39080  004CE4  D028               	goto	i2l9978
 39081  004CE6                     i2l9976:
 39082                           
 39083                           ; BSR set to: 0
 39084                           ;sw_timer.c: 103: else
 39085                           ;sw_timer.c: 104: {
 39086                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 39087  004CE6  51EC               	movf	_reloadVal& (0+255),w,b	;volatile
 39088  004CE8  5C3E               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 39089  004CEA  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 39090  004CEC  51ED               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 39091  004CEE  583F               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 39092  004CF0  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 39093  004CF2  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 39094  004CF4  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 39095  004CF6  5036               	movf	_ticksAccounted,w,c	;volatile
 39096  004CF8  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 39097  004CFA  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 39098  004CFC  5037               	movf	_ticksAccounted+1,w,c	;volatile
 39099  004CFE  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 39100  004D00  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 39101  004D02  5038               	movf	_ticksAccounted+2,w,c	;volatile
 39102  004D04  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 39103  004D06  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 39104  004D08  5039               	movf	_ticksAccounted+3,w,c	;volatile
 39105  004D0A  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39106  004D0C  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39107  004D0E  503A               	movf	_ticksAdded,w,c	;volatile
 39108  004D10  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39109  004D12  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39110  004D14  503B               	movf	_ticksAdded+1,w,c	;volatile
 39111  004D16  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39112  004D18  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39113  004D1A  503C               	movf	_ticksAdded+2,w,c	;volatile
 39114  004D1C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39115  004D1E  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39116  004D20  503D               	movf	_ticksAdded+3,w,c	;volatile
 39117  004D22  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39118  004D24  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39119                           
 39120                           ;sw_timer.c: 106: ticksAccounted += retVal;
 39121  004D26  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 39122  004D28  2636               	addwf	_ticksAccounted,f,c	;volatile
 39123  004D2A  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 39124  004D2C  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 39125  004D2E  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 39126  004D30  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 39127  004D32  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 39128  004D34  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 39129  004D36                     i2l9978:
 39130                           
 39131                           ; BSR set to: 0
 39132                           ;sw_timer.c: 107: }
 39133                           ;sw_timer.c: 109: return retVal;
 39134  004D36  C032  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 39135  004D3A  C033  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 39136  004D3E  C034  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 39137  004D42  C035  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 39138                           
 39139                           ; BSR set to: 0
 39140  004D46  0012               	return		;funcret
 39141  004D48                     __end_ofi2_TMR_GetDeltaTime:
 39142                           	opt stack 0
 39143                           tosu	equ	0xFFF
 39144                           tosh	equ	0xFFE
 39145                           tosl	equ	0xFFD
 39146                           pclatu	equ	0xFFB
 39147                           pclath	equ	0xFFA
 39148                           tblptru	equ	0xFF8
 39149                           tblptrh	equ	0xFF7
 39150                           tblptrl	equ	0xFF6
 39151                           tablat	equ	0xFF5
 39152                           prodh	equ	0xFF4
 39153                           prodl	equ	0xFF3
 39154                           intcon	equ	0xFF2
 39155                           intcon2	equ	0xFF1
 39156                           intcon3	equ	0xFF0
 39157                           indf0	equ	0xFEF
 39158                           postinc0	equ	0xFEE
 39159                           plusw0	equ	0xFEB
 39160                           fsr0h	equ	0xFEA
 39161                           fsr0l	equ	0xFE9
 39162                           wreg	equ	0xFE8
 39163                           postinc1	equ	0xFE6
 39164                           postdec1	equ	0xFE5
 39165                           plusw1	equ	0xFE3
 39166                           fsr1h	equ	0xFE2
 39167                           fsr1l	equ	0xFE1
 39168                           indf2	equ	0xFDF
 39169                           postinc2	equ	0xFDE
 39170                           postdec2	equ	0xFDD
 39171                           plusw2	equ	0xFDB
 39172                           fsr2h	equ	0xFDA
 39173                           fsr2l	equ	0xFD9
 39174                           status	equ	0xFD8
 39175                           
 39176 ;; *************** function i2_TMR1_ReadTimer *****************
 39177 ;; Defined at:
 39178 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 39179 ;; Parameters:    Size  Location     Type
 39180 ;;		None
 39181 ;; Auto vars:     Size  Location     Type
 39182 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 39183 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 39184 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 39185 ;; Return value:  Size  Location     Type
 39186 ;;                  2    0[COMRAM] unsigned int 
 39187 ;; Registers used:
 39188 ;;		wreg, status,2
 39189 ;; Tracked objects:
 39190 ;;		On entry : 0/0
 39191 ;;		On exit  : 0/0
 39192 ;;		Unchanged: 0/0
 39193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39195 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39198 ;;Total ram usage:        8 bytes
 39199 ;; Hardware stack levels used:    1
 39200 ;; This function calls:
 39201 ;;		Nothing
 39202 ;; This function is called by:
 39203 ;;		i2_TMR_GetDeltaTime
 39204 ;;		i2_TMR_SwapTimer
 39205 ;; This function uses a non-reentrant model
 39206 ;;
 39207                           
 39208                           	psect	text217
 39209  007546                     __ptext217:
 39210                           	opt stack 0
 39211  007546                     i2_TMR1_ReadTimer:
 39212                           	opt stack 13
 39213                           
 39214                           ;tmr1.c: 108: uint16_t readVal;
 39215                           ;tmr1.c: 109: uint8_t readValHigh;
 39216                           ;tmr1.c: 110: uint8_t readValLow;
 39217                           ;tmr1.c: 112: readValLow = TMR1L;
 39218                           
 39219                           ; BSR set to: 0
 39220                           ;incstack = 0
 39221  007546  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39222                           
 39223                           ;tmr1.c: 113: readValHigh = TMR1H;
 39224  00754A  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39225                           
 39226                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39227  00754E  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39228  007550  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39229  007552  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39230  007554  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39231  007556  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39232                           
 39233                           ;tmr1.c: 117: return readVal;
 39234  00755A  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39235  00755E  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39236  007562  0012               	return		;funcret
 39237  007564                     __end_ofi2_TMR1_ReadTimer:
 39238                           	opt stack 0
 39239                           tosu	equ	0xFFF
 39240                           tosh	equ	0xFFE
 39241                           tosl	equ	0xFFD
 39242                           pclatu	equ	0xFFB
 39243                           pclath	equ	0xFFA
 39244                           tblptru	equ	0xFF8
 39245                           tblptrh	equ	0xFF7
 39246                           tblptrl	equ	0xFF6
 39247                           tablat	equ	0xFF5
 39248                           prodh	equ	0xFF4
 39249                           prodl	equ	0xFF3
 39250                           intcon	equ	0xFF2
 39251                           intcon2	equ	0xFF1
 39252                           intcon3	equ	0xFF0
 39253                           indf0	equ	0xFEF
 39254                           postinc0	equ	0xFEE
 39255                           plusw0	equ	0xFEB
 39256                           fsr0h	equ	0xFEA
 39257                           fsr0l	equ	0xFE9
 39258                           wreg	equ	0xFE8
 39259                           postinc1	equ	0xFE6
 39260                           postdec1	equ	0xFE5
 39261                           plusw1	equ	0xFE3
 39262                           fsr1h	equ	0xFE2
 39263                           fsr1l	equ	0xFE1
 39264                           indf2	equ	0xFDF
 39265                           postinc2	equ	0xFDE
 39266                           postdec2	equ	0xFDD
 39267                           plusw2	equ	0xFDB
 39268                           fsr2h	equ	0xFDA
 39269                           fsr2l	equ	0xFD9
 39270                           status	equ	0xFD8
 39271                           
 39272 ;; *************** function _PIN_MANAGER_IOC *****************
 39273 ;; Defined at:
 39274 ;;		line 103 in file "mcc_generated_files/pin_manager.c"
 39275 ;; Parameters:    Size  Location     Type
 39276 ;;		None
 39277 ;; Auto vars:     Size  Location     Type
 39278 ;;		None
 39279 ;; Return value:  Size  Location     Type
 39280 ;;                  1    wreg      void 
 39281 ;; Registers used:
 39282 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39283 ;; Tracked objects:
 39284 ;;		On entry : 0/0
 39285 ;;		On exit  : 0/0
 39286 ;;		Unchanged: 0/0
 39287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39292 ;;Total ram usage:        0 bytes
 39293 ;; Hardware stack levels used:    1
 39294 ;; Hardware stack levels required when called:    2
 39295 ;; This function calls:
 39296 ;;		_IOCB4_ISR
 39297 ;; This function is called by:
 39298 ;;		_INTERRUPT_InterruptManager
 39299 ;; This function uses a non-reentrant model
 39300 ;;
 39301                           
 39302                           	psect	text218
 39303  0078D0                     __ptext218:
 39304                           	opt stack 0
 39305  0078D0                     _PIN_MANAGER_IOC:
 39306                           	opt stack 15
 39307                           
 39308                           ;pin_manager.c: 106: if(IOCBbits.IOCB4 == 1)
 39309                           
 39310                           ;incstack = 0
 39311  0078D0  B862               	btfsc	3938,4,c	;volatile
 39312                           
 39313                           ;pin_manager.c: 107: {
 39314                           ;pin_manager.c: 108: IOCB4_ISR();
 39315  0078D2  ECF8  F03A         	call	_IOCB4_ISR	;wreg free
 39316                           
 39317                           ;pin_manager.c: 109: }
 39318                           ;pin_manager.c: 112: INTCONbits.RBIF = 0;
 39319  0078D6  90F2               	bcf	intcon,0,c	;volatile
 39320  0078D8  0012               	return		;funcret
 39321  0078DA                     __end_of_PIN_MANAGER_IOC:
 39322                           	opt stack 0
 39323                           tosu	equ	0xFFF
 39324                           tosh	equ	0xFFE
 39325                           tosl	equ	0xFFD
 39326                           pclatu	equ	0xFFB
 39327                           pclath	equ	0xFFA
 39328                           tblptru	equ	0xFF8
 39329                           tblptrh	equ	0xFF7
 39330                           tblptrl	equ	0xFF6
 39331                           tablat	equ	0xFF5
 39332                           prodh	equ	0xFF4
 39333                           prodl	equ	0xFF3
 39334                           intcon	equ	0xFF2
 39335                           intcon2	equ	0xFF1
 39336                           intcon3	equ	0xFF0
 39337                           indf0	equ	0xFEF
 39338                           postinc0	equ	0xFEE
 39339                           plusw0	equ	0xFEB
 39340                           fsr0h	equ	0xFEA
 39341                           fsr0l	equ	0xFE9
 39342                           wreg	equ	0xFE8
 39343                           postinc1	equ	0xFE6
 39344                           postdec1	equ	0xFE5
 39345                           plusw1	equ	0xFE3
 39346                           fsr1h	equ	0xFE2
 39347                           fsr1l	equ	0xFE1
 39348                           indf2	equ	0xFDF
 39349                           postinc2	equ	0xFDE
 39350                           postdec2	equ	0xFDD
 39351                           plusw2	equ	0xFDB
 39352                           fsr2h	equ	0xFDA
 39353                           fsr2l	equ	0xFD9
 39354                           status	equ	0xFD8
 39355                           
 39356 ;; *************** function _IOCB4_ISR *****************
 39357 ;; Defined at:
 39358 ;;		line 119 in file "mcc_generated_files/pin_manager.c"
 39359 ;; Parameters:    Size  Location     Type
 39360 ;;		None
 39361 ;; Auto vars:     Size  Location     Type
 39362 ;;		None
 39363 ;; Return value:  Size  Location     Type
 39364 ;;                  1    wreg      void 
 39365 ;; Registers used:
 39366 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39367 ;; Tracked objects:
 39368 ;;		On entry : 0/0
 39369 ;;		On exit  : 0/0
 39370 ;;		Unchanged: 0/0
 39371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39376 ;;Total ram usage:        0 bytes
 39377 ;; Hardware stack levels used:    1
 39378 ;; Hardware stack levels required when called:    1
 39379 ;; This function calls:
 39380 ;;		Absolute function
 39381 ;;		_DIO2_ISR_Lora
 39382 ;;		_IOCB4_DefaultInterruptHandler
 39383 ;; This function is called by:
 39384 ;;		_PIN_MANAGER_IOC
 39385 ;; This function uses a non-reentrant model
 39386 ;;
 39387                           
 39388                           	psect	text219
 39389  0075F0                     __ptext219:
 39390                           	opt stack 0
 39391  0075F0                     _IOCB4_ISR:
 39392                           	opt stack 15
 39393                           
 39394                           ;pin_manager.c: 124: if(IOCB4_InterruptHandler)
 39395                           
 39396                           ;incstack = 0
 39397  0075F0  0101               	movlb	1	; () banked
 39398  0075F2  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39399  0075F4  11E9               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39400  0075F6  B4D8               	btfsc	status,2,c
 39401  0075F8  0012               	return	
 39402                           
 39403                           ; BSR set to: 1
 39404                           ;pin_manager.c: 125: {
 39405                           ;pin_manager.c: 126: IOCB4_InterruptHandler();
 39406  0075FA  0005               	push	
 39407  0075FC  6EFA               	movwf	pclath,c
 39408  0075FE  51E8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39409  007600  6EFD               	movwf	tosl,c
 39410  007602  51E9               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39411  007604  6EFE               	movwf	tosh,c
 39412  007606  6AFF               	clrf	tosu,c
 39413  007608  50FA               	movf	pclath,w,c
 39414  00760A  0012               	return		;indir
 39415  00760C                     __end_of_IOCB4_ISR:
 39416                           	opt stack 0
 39417                           tosu	equ	0xFFF
 39418                           tosh	equ	0xFFE
 39419                           tosl	equ	0xFFD
 39420                           pclatu	equ	0xFFB
 39421                           pclath	equ	0xFFA
 39422                           tblptru	equ	0xFF8
 39423                           tblptrh	equ	0xFF7
 39424                           tblptrl	equ	0xFF6
 39425                           tablat	equ	0xFF5
 39426                           prodh	equ	0xFF4
 39427                           prodl	equ	0xFF3
 39428                           intcon	equ	0xFF2
 39429                           intcon2	equ	0xFF1
 39430                           intcon3	equ	0xFF0
 39431                           indf0	equ	0xFEF
 39432                           postinc0	equ	0xFEE
 39433                           plusw0	equ	0xFEB
 39434                           fsr0h	equ	0xFEA
 39435                           fsr0l	equ	0xFE9
 39436                           wreg	equ	0xFE8
 39437                           postinc1	equ	0xFE6
 39438                           postdec1	equ	0xFE5
 39439                           plusw1	equ	0xFE3
 39440                           fsr1h	equ	0xFE2
 39441                           fsr1l	equ	0xFE1
 39442                           indf2	equ	0xFDF
 39443                           postinc2	equ	0xFDE
 39444                           postdec2	equ	0xFDD
 39445                           plusw2	equ	0xFDB
 39446                           fsr2h	equ	0xFDA
 39447                           fsr2l	equ	0xFD9
 39448                           status	equ	0xFD8
 39449                           
 39450 ;; *************** function _DIO2_ISR_Lora *****************
 39451 ;; Defined at:
 39452 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39453 ;; Parameters:    Size  Location     Type
 39454 ;;		None
 39455 ;; Auto vars:     Size  Location     Type
 39456 ;;		None
 39457 ;; Return value:  Size  Location     Type
 39458 ;;                  1    wreg      void 
 39459 ;; Registers used:
 39460 ;;		status,2, status,0
 39461 ;; Tracked objects:
 39462 ;;		On entry : F/1
 39463 ;;		On exit  : F/0
 39464 ;;		Unchanged: 0/0
 39465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39470 ;;Total ram usage:        0 bytes
 39471 ;; Hardware stack levels used:    1
 39472 ;; This function calls:
 39473 ;;		Nothing
 39474 ;; This function is called by:
 39475 ;;		_DIO2_ISR_Lora_Init
 39476 ;;		_IOCB4_ISR
 39477 ;; This function uses a non-reentrant model
 39478 ;;
 39479                           
 39480                           	psect	text220
 39481  007942                     __ptext220:
 39482                           	opt stack 0
 39483  007942                     _DIO2_ISR_Lora:
 39484                           	opt stack 15
 39485                           
 39486                           ; BSR set to: 1
 39487                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39488                           
 39489                           ;incstack = 0
 39490  007942  0100               	movlb	0	; () banked
 39491  007944  85F0               	bsf	_dioStatus& (0+255),2,b	;volatile
 39492                           
 39493                           ; BSR set to: 0
 39494  007946  0012               	return		;funcret
 39495  007948                     __end_of_DIO2_ISR_Lora:
 39496                           	opt stack 0
 39497                           tosu	equ	0xFFF
 39498                           tosh	equ	0xFFE
 39499                           tosl	equ	0xFFD
 39500                           pclatu	equ	0xFFB
 39501                           pclath	equ	0xFFA
 39502                           tblptru	equ	0xFF8
 39503                           tblptrh	equ	0xFF7
 39504                           tblptrl	equ	0xFF6
 39505                           tablat	equ	0xFF5
 39506                           prodh	equ	0xFF4
 39507                           prodl	equ	0xFF3
 39508                           intcon	equ	0xFF2
 39509                           intcon2	equ	0xFF1
 39510                           intcon3	equ	0xFF0
 39511                           indf0	equ	0xFEF
 39512                           postinc0	equ	0xFEE
 39513                           plusw0	equ	0xFEB
 39514                           fsr0h	equ	0xFEA
 39515                           fsr0l	equ	0xFE9
 39516                           wreg	equ	0xFE8
 39517                           postinc1	equ	0xFE6
 39518                           postdec1	equ	0xFE5
 39519                           plusw1	equ	0xFE3
 39520                           fsr1h	equ	0xFE2
 39521                           fsr1l	equ	0xFE1
 39522                           indf2	equ	0xFDF
 39523                           postinc2	equ	0xFDE
 39524                           postdec2	equ	0xFDD
 39525                           plusw2	equ	0xFDB
 39526                           fsr2h	equ	0xFDA
 39527                           fsr2l	equ	0xFD9
 39528                           status	equ	0xFD8
 39529                           
 39530 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 39531 ;; Defined at:
 39532 ;;		line 140 in file "mcc_generated_files/pin_manager.c"
 39533 ;; Parameters:    Size  Location     Type
 39534 ;;		None
 39535 ;; Auto vars:     Size  Location     Type
 39536 ;;		None
 39537 ;; Return value:  Size  Location     Type
 39538 ;;                  1    wreg      void 
 39539 ;; Registers used:
 39540 ;;		None
 39541 ;; Tracked objects:
 39542 ;;		On entry : F/1
 39543 ;;		On exit  : F/1
 39544 ;;		Unchanged: F/0
 39545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39550 ;;Total ram usage:        0 bytes
 39551 ;; Hardware stack levels used:    1
 39552 ;; This function calls:
 39553 ;;		Nothing
 39554 ;; This function is called by:
 39555 ;;		_PIN_MANAGER_Initialize
 39556 ;;		_IOCB4_ISR
 39557 ;; This function uses a non-reentrant model
 39558 ;;
 39559                           
 39560                           	psect	text221
 39561  00798E                     __ptext221:
 39562                           	opt stack 0
 39563  00798E                     _IOCB4_DefaultInterruptHandler:
 39564                           	opt stack 15
 39565                           
 39566                           ; BSR set to: 1
 39567                           
 39568                           ; BSR set to: 0
 39569                           ;incstack = 0
 39570  00798E  0012               	return		;funcret
 39571  007990                     __end_of_IOCB4_DefaultInterruptHandler:
 39572                           	opt stack 0
 39573                           tosu	equ	0xFFF
 39574                           tosh	equ	0xFFE
 39575                           tosl	equ	0xFFD
 39576                           pclatu	equ	0xFFB
 39577                           pclath	equ	0xFFA
 39578                           tblptru	equ	0xFF8
 39579                           tblptrh	equ	0xFF7
 39580                           tblptrl	equ	0xFF6
 39581                           tablat	equ	0xFF5
 39582                           prodh	equ	0xFF4
 39583                           prodl	equ	0xFF3
 39584                           intcon	equ	0xFF2
 39585                           intcon2	equ	0xFF1
 39586                           intcon3	equ	0xFF0
 39587                           indf0	equ	0xFEF
 39588                           postinc0	equ	0xFEE
 39589                           plusw0	equ	0xFEB
 39590                           fsr0h	equ	0xFEA
 39591                           fsr0l	equ	0xFE9
 39592                           wreg	equ	0xFE8
 39593                           postinc1	equ	0xFE6
 39594                           postdec1	equ	0xFE5
 39595                           plusw1	equ	0xFE3
 39596                           fsr1h	equ	0xFE2
 39597                           fsr1l	equ	0xFE1
 39598                           indf2	equ	0xFDF
 39599                           postinc2	equ	0xFDE
 39600                           postdec2	equ	0xFDD
 39601                           plusw2	equ	0xFDB
 39602                           fsr2h	equ	0xFDA
 39603                           fsr2l	equ	0xFD9
 39604                           status	equ	0xFD8
 39605                           
 39606 ;; *************** function _INT2_ISR *****************
 39607 ;; Defined at:
 39608 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 39609 ;; Parameters:    Size  Location     Type
 39610 ;;		None
 39611 ;; Auto vars:     Size  Location     Type
 39612 ;;		None
 39613 ;; Return value:  Size  Location     Type
 39614 ;;                  1    wreg      void 
 39615 ;; Registers used:
 39616 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39617 ;; Tracked objects:
 39618 ;;		On entry : 0/0
 39619 ;;		On exit  : 0/0
 39620 ;;		Unchanged: 0/0
 39621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39626 ;;Total ram usage:        0 bytes
 39627 ;; Hardware stack levels used:    1
 39628 ;; Hardware stack levels required when called:    2
 39629 ;; This function calls:
 39630 ;;		_INT2_CallBack
 39631 ;; This function is called by:
 39632 ;;		_INTERRUPT_InterruptManager
 39633 ;; This function uses a non-reentrant model
 39634 ;;
 39635                           
 39636                           	psect	text222
 39637  007948                     __ptext222:
 39638                           	opt stack 0
 39639  007948                     _INT2_ISR:
 39640                           	opt stack 15
 39641                           
 39642                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 39643                           
 39644                           ; BSR set to: 1
 39645                           ;incstack = 0
 39646  007948  92F0               	bcf	intcon3,1,c	;volatile
 39647                           
 39648                           ;ext_int.c: 95: INT2_CallBack();
 39649  00794A  EF06  F03B         	goto	_INT2_CallBack	;wreg free
 39650  00794E                     __end_of_INT2_ISR:
 39651                           	opt stack 0
 39652                           tosu	equ	0xFFF
 39653                           tosh	equ	0xFFE
 39654                           tosl	equ	0xFFD
 39655                           pclatu	equ	0xFFB
 39656                           pclath	equ	0xFFA
 39657                           tblptru	equ	0xFF8
 39658                           tblptrh	equ	0xFF7
 39659                           tblptrl	equ	0xFF6
 39660                           tablat	equ	0xFF5
 39661                           prodh	equ	0xFF4
 39662                           prodl	equ	0xFF3
 39663                           intcon	equ	0xFF2
 39664                           intcon2	equ	0xFF1
 39665                           intcon3	equ	0xFF0
 39666                           indf0	equ	0xFEF
 39667                           postinc0	equ	0xFEE
 39668                           plusw0	equ	0xFEB
 39669                           fsr0h	equ	0xFEA
 39670                           fsr0l	equ	0xFE9
 39671                           wreg	equ	0xFE8
 39672                           postinc1	equ	0xFE6
 39673                           postdec1	equ	0xFE5
 39674                           plusw1	equ	0xFE3
 39675                           fsr1h	equ	0xFE2
 39676                           fsr1l	equ	0xFE1
 39677                           indf2	equ	0xFDF
 39678                           postinc2	equ	0xFDE
 39679                           postdec2	equ	0xFDD
 39680                           plusw2	equ	0xFDB
 39681                           fsr2h	equ	0xFDA
 39682                           fsr2l	equ	0xFD9
 39683                           status	equ	0xFD8
 39684                           
 39685 ;; *************** function _INT2_CallBack *****************
 39686 ;; Defined at:
 39687 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 39688 ;; Parameters:    Size  Location     Type
 39689 ;;		None
 39690 ;; Auto vars:     Size  Location     Type
 39691 ;;		None
 39692 ;; Return value:  Size  Location     Type
 39693 ;;                  1    wreg      void 
 39694 ;; Registers used:
 39695 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39696 ;; Tracked objects:
 39697 ;;		On entry : 0/0
 39698 ;;		On exit  : 0/0
 39699 ;;		Unchanged: 0/0
 39700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39705 ;;Total ram usage:        0 bytes
 39706 ;; Hardware stack levels used:    1
 39707 ;; Hardware stack levels required when called:    1
 39708 ;; This function calls:
 39709 ;;		Absolute function
 39710 ;;		_DIO1_ISR_Lora
 39711 ;;		_INT2_DefaultInterruptHandler
 39712 ;; This function is called by:
 39713 ;;		_INT2_ISR
 39714 ;; This function uses a non-reentrant model
 39715 ;;
 39716                           
 39717                           	psect	text223
 39718  00760C                     __ptext223:
 39719                           	opt stack 0
 39720  00760C                     _INT2_CallBack:
 39721                           	opt stack 15
 39722                           
 39723                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 39724                           
 39725                           ;incstack = 0
 39726  00760C  0101               	movlb	1	; () banked
 39727  00760E  51E6               	movf	_INT2_InterruptHandler& (0+255),w,b
 39728  007610  11E7               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39729  007612  B4D8               	btfsc	status,2,c
 39730  007614  0012               	return	
 39731                           
 39732                           ; BSR set to: 1
 39733                           ;ext_int.c: 105: {
 39734                           ;ext_int.c: 106: INT2_InterruptHandler();
 39735  007616  0005               	push	
 39736  007618  6EFA               	movwf	pclath,c
 39737  00761A  51E6               	movf	_INT2_InterruptHandler& (0+255),w,b
 39738  00761C  6EFD               	movwf	tosl,c
 39739  00761E  51E7               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 39740  007620  6EFE               	movwf	tosh,c
 39741  007622  6AFF               	clrf	tosu,c
 39742  007624  50FA               	movf	pclath,w,c
 39743  007626  0012               	return		;indir
 39744  007628                     __end_of_INT2_CallBack:
 39745                           	opt stack 0
 39746                           tosu	equ	0xFFF
 39747                           tosh	equ	0xFFE
 39748                           tosl	equ	0xFFD
 39749                           pclatu	equ	0xFFB
 39750                           pclath	equ	0xFFA
 39751                           tblptru	equ	0xFF8
 39752                           tblptrh	equ	0xFF7
 39753                           tblptrl	equ	0xFF6
 39754                           tablat	equ	0xFF5
 39755                           prodh	equ	0xFF4
 39756                           prodl	equ	0xFF3
 39757                           intcon	equ	0xFF2
 39758                           intcon2	equ	0xFF1
 39759                           intcon3	equ	0xFF0
 39760                           indf0	equ	0xFEF
 39761                           postinc0	equ	0xFEE
 39762                           plusw0	equ	0xFEB
 39763                           fsr0h	equ	0xFEA
 39764                           fsr0l	equ	0xFE9
 39765                           wreg	equ	0xFE8
 39766                           postinc1	equ	0xFE6
 39767                           postdec1	equ	0xFE5
 39768                           plusw1	equ	0xFE3
 39769                           fsr1h	equ	0xFE2
 39770                           fsr1l	equ	0xFE1
 39771                           indf2	equ	0xFDF
 39772                           postinc2	equ	0xFDE
 39773                           postdec2	equ	0xFDD
 39774                           plusw2	equ	0xFDB
 39775                           fsr2h	equ	0xFDA
 39776                           fsr2l	equ	0xFD9
 39777                           status	equ	0xFD8
 39778                           
 39779 ;; *************** function _DIO1_ISR_Lora *****************
 39780 ;; Defined at:
 39781 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39782 ;; Parameters:    Size  Location     Type
 39783 ;;		None
 39784 ;; Auto vars:     Size  Location     Type
 39785 ;;		None
 39786 ;; Return value:  Size  Location     Type
 39787 ;;                  1    wreg      void 
 39788 ;; Registers used:
 39789 ;;		status,2, status,0
 39790 ;; Tracked objects:
 39791 ;;		On entry : F/1
 39792 ;;		On exit  : F/0
 39793 ;;		Unchanged: 0/0
 39794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39799 ;;Total ram usage:        0 bytes
 39800 ;; Hardware stack levels used:    1
 39801 ;; This function calls:
 39802 ;;		Nothing
 39803 ;; This function is called by:
 39804 ;;		_DIO1_ISR_Lora_Init
 39805 ;;		_INT2_CallBack
 39806 ;; This function uses a non-reentrant model
 39807 ;;
 39808                           
 39809                           	psect	text224
 39810  00794E                     __ptext224:
 39811                           	opt stack 0
 39812  00794E                     _DIO1_ISR_Lora:
 39813                           	opt stack 15
 39814                           
 39815                           ; BSR set to: 1
 39816                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 39817                           
 39818                           ;incstack = 0
 39819  00794E  0100               	movlb	0	; () banked
 39820  007950  83F0               	bsf	_dioStatus& (0+255),1,b	;volatile
 39821                           
 39822                           ; BSR set to: 0
 39823  007952  0012               	return		;funcret
 39824  007954                     __end_of_DIO1_ISR_Lora:
 39825                           	opt stack 0
 39826                           tosu	equ	0xFFF
 39827                           tosh	equ	0xFFE
 39828                           tosl	equ	0xFFD
 39829                           pclatu	equ	0xFFB
 39830                           pclath	equ	0xFFA
 39831                           tblptru	equ	0xFF8
 39832                           tblptrh	equ	0xFF7
 39833                           tblptrl	equ	0xFF6
 39834                           tablat	equ	0xFF5
 39835                           prodh	equ	0xFF4
 39836                           prodl	equ	0xFF3
 39837                           intcon	equ	0xFF2
 39838                           intcon2	equ	0xFF1
 39839                           intcon3	equ	0xFF0
 39840                           indf0	equ	0xFEF
 39841                           postinc0	equ	0xFEE
 39842                           plusw0	equ	0xFEB
 39843                           fsr0h	equ	0xFEA
 39844                           fsr0l	equ	0xFE9
 39845                           wreg	equ	0xFE8
 39846                           postinc1	equ	0xFE6
 39847                           postdec1	equ	0xFE5
 39848                           plusw1	equ	0xFE3
 39849                           fsr1h	equ	0xFE2
 39850                           fsr1l	equ	0xFE1
 39851                           indf2	equ	0xFDF
 39852                           postinc2	equ	0xFDE
 39853                           postdec2	equ	0xFDD
 39854                           plusw2	equ	0xFDB
 39855                           fsr2h	equ	0xFDA
 39856                           fsr2l	equ	0xFD9
 39857                           status	equ	0xFD8
 39858                           
 39859 ;; *************** function _INT2_DefaultInterruptHandler *****************
 39860 ;; Defined at:
 39861 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 39862 ;; Parameters:    Size  Location     Type
 39863 ;;		None
 39864 ;; Auto vars:     Size  Location     Type
 39865 ;;		None
 39866 ;; Return value:  Size  Location     Type
 39867 ;;                  1    wreg      void 
 39868 ;; Registers used:
 39869 ;;		None
 39870 ;; Tracked objects:
 39871 ;;		On entry : F/1
 39872 ;;		On exit  : F/1
 39873 ;;		Unchanged: F/0
 39874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39879 ;;Total ram usage:        0 bytes
 39880 ;; Hardware stack levels used:    1
 39881 ;; This function calls:
 39882 ;;		Nothing
 39883 ;; This function is called by:
 39884 ;;		_EXT_INT_Initialize
 39885 ;;		_INT2_CallBack
 39886 ;; This function uses a non-reentrant model
 39887 ;;
 39888                           
 39889                           	psect	text225
 39890  007990                     __ptext225:
 39891                           	opt stack 0
 39892  007990                     _INT2_DefaultInterruptHandler:
 39893                           	opt stack 15
 39894                           
 39895                           ; BSR set to: 1
 39896                           
 39897                           ; BSR set to: 0
 39898                           ;incstack = 0
 39899  007990  0012               	return		;funcret
 39900  007992                     __end_of_INT2_DefaultInterruptHandler:
 39901                           	opt stack 0
 39902                           tosu	equ	0xFFF
 39903                           tosh	equ	0xFFE
 39904                           tosl	equ	0xFFD
 39905                           pclatu	equ	0xFFB
 39906                           pclath	equ	0xFFA
 39907                           tblptru	equ	0xFF8
 39908                           tblptrh	equ	0xFF7
 39909                           tblptrl	equ	0xFF6
 39910                           tablat	equ	0xFF5
 39911                           prodh	equ	0xFF4
 39912                           prodl	equ	0xFF3
 39913                           intcon	equ	0xFF2
 39914                           intcon2	equ	0xFF1
 39915                           intcon3	equ	0xFF0
 39916                           indf0	equ	0xFEF
 39917                           postinc0	equ	0xFEE
 39918                           plusw0	equ	0xFEB
 39919                           fsr0h	equ	0xFEA
 39920                           fsr0l	equ	0xFE9
 39921                           wreg	equ	0xFE8
 39922                           postinc1	equ	0xFE6
 39923                           postdec1	equ	0xFE5
 39924                           plusw1	equ	0xFE3
 39925                           fsr1h	equ	0xFE2
 39926                           fsr1l	equ	0xFE1
 39927                           indf2	equ	0xFDF
 39928                           postinc2	equ	0xFDE
 39929                           postdec2	equ	0xFDD
 39930                           plusw2	equ	0xFDB
 39931                           fsr2h	equ	0xFDA
 39932                           fsr2l	equ	0xFD9
 39933                           status	equ	0xFD8
 39934                           
 39935 ;; *************** function _INT1_ISR *****************
 39936 ;; Defined at:
 39937 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 39938 ;; Parameters:    Size  Location     Type
 39939 ;;		None
 39940 ;; Auto vars:     Size  Location     Type
 39941 ;;		None
 39942 ;; Return value:  Size  Location     Type
 39943 ;;                  1    wreg      void 
 39944 ;; Registers used:
 39945 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39946 ;; Tracked objects:
 39947 ;;		On entry : 0/0
 39948 ;;		On exit  : 0/0
 39949 ;;		Unchanged: 0/0
 39950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39955 ;;Total ram usage:        0 bytes
 39956 ;; Hardware stack levels used:    1
 39957 ;; Hardware stack levels required when called:    2
 39958 ;; This function calls:
 39959 ;;		_INT1_CallBack
 39960 ;; This function is called by:
 39961 ;;		_INTERRUPT_InterruptManager
 39962 ;; This function uses a non-reentrant model
 39963 ;;
 39964                           
 39965                           	psect	text226
 39966  007954                     __ptext226:
 39967                           	opt stack 0
 39968  007954                     _INT1_ISR:
 39969                           	opt stack 15
 39970                           
 39971                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 39972                           
 39973                           ; BSR set to: 1
 39974                           ;incstack = 0
 39975  007954  90F0               	bcf	intcon3,0,c	;volatile
 39976                           
 39977                           ;ext_int.c: 54: INT1_CallBack();
 39978  007956  EF14  F03B         	goto	_INT1_CallBack	;wreg free
 39979  00795A                     __end_of_INT1_ISR:
 39980                           	opt stack 0
 39981                           tosu	equ	0xFFF
 39982                           tosh	equ	0xFFE
 39983                           tosl	equ	0xFFD
 39984                           pclatu	equ	0xFFB
 39985                           pclath	equ	0xFFA
 39986                           tblptru	equ	0xFF8
 39987                           tblptrh	equ	0xFF7
 39988                           tblptrl	equ	0xFF6
 39989                           tablat	equ	0xFF5
 39990                           prodh	equ	0xFF4
 39991                           prodl	equ	0xFF3
 39992                           intcon	equ	0xFF2
 39993                           intcon2	equ	0xFF1
 39994                           intcon3	equ	0xFF0
 39995                           indf0	equ	0xFEF
 39996                           postinc0	equ	0xFEE
 39997                           plusw0	equ	0xFEB
 39998                           fsr0h	equ	0xFEA
 39999                           fsr0l	equ	0xFE9
 40000                           wreg	equ	0xFE8
 40001                           postinc1	equ	0xFE6
 40002                           postdec1	equ	0xFE5
 40003                           plusw1	equ	0xFE3
 40004                           fsr1h	equ	0xFE2
 40005                           fsr1l	equ	0xFE1
 40006                           indf2	equ	0xFDF
 40007                           postinc2	equ	0xFDE
 40008                           postdec2	equ	0xFDD
 40009                           plusw2	equ	0xFDB
 40010                           fsr2h	equ	0xFDA
 40011                           fsr2l	equ	0xFD9
 40012                           status	equ	0xFD8
 40013                           
 40014 ;; *************** function _INT1_CallBack *****************
 40015 ;; Defined at:
 40016 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 40017 ;; Parameters:    Size  Location     Type
 40018 ;;		None
 40019 ;; Auto vars:     Size  Location     Type
 40020 ;;		None
 40021 ;; Return value:  Size  Location     Type
 40022 ;;                  1    wreg      void 
 40023 ;; Registers used:
 40024 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 40025 ;; Tracked objects:
 40026 ;;		On entry : 0/0
 40027 ;;		On exit  : 0/0
 40028 ;;		Unchanged: 0/0
 40029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40034 ;;Total ram usage:        0 bytes
 40035 ;; Hardware stack levels used:    1
 40036 ;; Hardware stack levels required when called:    1
 40037 ;; This function calls:
 40038 ;;		Absolute function
 40039 ;;		_DIO0_ISR_Lora
 40040 ;;		_INT1_DefaultInterruptHandler
 40041 ;; This function is called by:
 40042 ;;		_INT1_ISR
 40043 ;; This function uses a non-reentrant model
 40044 ;;
 40045                           
 40046                           	psect	text227
 40047  007628                     __ptext227:
 40048                           	opt stack 0
 40049  007628                     _INT1_CallBack:
 40050                           	opt stack 15
 40051                           
 40052                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 40053                           
 40054                           ;incstack = 0
 40055  007628  0101               	movlb	1	; () banked
 40056  00762A  51E4               	movf	_INT1_InterruptHandler& (0+255),w,b
 40057  00762C  11E5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40058  00762E  B4D8               	btfsc	status,2,c
 40059  007630  0012               	return	
 40060                           
 40061                           ; BSR set to: 1
 40062                           ;ext_int.c: 64: {
 40063                           ;ext_int.c: 65: INT1_InterruptHandler();
 40064  007632  0005               	push	
 40065  007634  6EFA               	movwf	pclath,c
 40066  007636  51E4               	movf	_INT1_InterruptHandler& (0+255),w,b
 40067  007638  6EFD               	movwf	tosl,c
 40068  00763A  51E5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40069  00763C  6EFE               	movwf	tosh,c
 40070  00763E  6AFF               	clrf	tosu,c
 40071  007640  50FA               	movf	pclath,w,c
 40072  007642  0012               	return		;indir
 40073  007644                     __end_of_INT1_CallBack:
 40074                           	opt stack 0
 40075                           tosu	equ	0xFFF
 40076                           tosh	equ	0xFFE
 40077                           tosl	equ	0xFFD
 40078                           pclatu	equ	0xFFB
 40079                           pclath	equ	0xFFA
 40080                           tblptru	equ	0xFF8
 40081                           tblptrh	equ	0xFF7
 40082                           tblptrl	equ	0xFF6
 40083                           tablat	equ	0xFF5
 40084                           prodh	equ	0xFF4
 40085                           prodl	equ	0xFF3
 40086                           intcon	equ	0xFF2
 40087                           intcon2	equ	0xFF1
 40088                           intcon3	equ	0xFF0
 40089                           indf0	equ	0xFEF
 40090                           postinc0	equ	0xFEE
 40091                           plusw0	equ	0xFEB
 40092                           fsr0h	equ	0xFEA
 40093                           fsr0l	equ	0xFE9
 40094                           wreg	equ	0xFE8
 40095                           postinc1	equ	0xFE6
 40096                           postdec1	equ	0xFE5
 40097                           plusw1	equ	0xFE3
 40098                           fsr1h	equ	0xFE2
 40099                           fsr1l	equ	0xFE1
 40100                           indf2	equ	0xFDF
 40101                           postinc2	equ	0xFDE
 40102                           postdec2	equ	0xFDD
 40103                           plusw2	equ	0xFDB
 40104                           fsr2h	equ	0xFDA
 40105                           fsr2l	equ	0xFD9
 40106                           status	equ	0xFD8
 40107                           
 40108 ;; *************** function _DIO0_ISR_Lora *****************
 40109 ;; Defined at:
 40110 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 40111 ;; Parameters:    Size  Location     Type
 40112 ;;		None
 40113 ;; Auto vars:     Size  Location     Type
 40114 ;;		None
 40115 ;; Return value:  Size  Location     Type
 40116 ;;                  1    wreg      void 
 40117 ;; Registers used:
 40118 ;;		status,2, status,0
 40119 ;; Tracked objects:
 40120 ;;		On entry : F/1
 40121 ;;		On exit  : F/0
 40122 ;;		Unchanged: 0/0
 40123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40128 ;;Total ram usage:        0 bytes
 40129 ;; Hardware stack levels used:    1
 40130 ;; This function calls:
 40131 ;;		Nothing
 40132 ;; This function is called by:
 40133 ;;		_DIO0_ISR_Lora_Init
 40134 ;;		_INT1_CallBack
 40135 ;; This function uses a non-reentrant model
 40136 ;;
 40137                           
 40138                           	psect	text228
 40139  00795A                     __ptext228:
 40140                           	opt stack 0
 40141  00795A                     _DIO0_ISR_Lora:
 40142                           	opt stack 15
 40143                           
 40144                           ; BSR set to: 1
 40145                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 40146                           
 40147                           ;incstack = 0
 40148  00795A  0100               	movlb	0	; () banked
 40149  00795C  81F0               	bsf	_dioStatus& (0+255),0,b	;volatile
 40150                           
 40151                           ; BSR set to: 0
 40152  00795E  0012               	return		;funcret
 40153  007960                     __end_of_DIO0_ISR_Lora:
 40154                           	opt stack 0
 40155                           tosu	equ	0xFFF
 40156                           tosh	equ	0xFFE
 40157                           tosl	equ	0xFFD
 40158                           pclatu	equ	0xFFB
 40159                           pclath	equ	0xFFA
 40160                           tblptru	equ	0xFF8
 40161                           tblptrh	equ	0xFF7
 40162                           tblptrl	equ	0xFF6
 40163                           tablat	equ	0xFF5
 40164                           prodh	equ	0xFF4
 40165                           prodl	equ	0xFF3
 40166                           intcon	equ	0xFF2
 40167                           intcon2	equ	0xFF1
 40168                           intcon3	equ	0xFF0
 40169                           indf0	equ	0xFEF
 40170                           postinc0	equ	0xFEE
 40171                           plusw0	equ	0xFEB
 40172                           fsr0h	equ	0xFEA
 40173                           fsr0l	equ	0xFE9
 40174                           wreg	equ	0xFE8
 40175                           postinc1	equ	0xFE6
 40176                           postdec1	equ	0xFE5
 40177                           plusw1	equ	0xFE3
 40178                           fsr1h	equ	0xFE2
 40179                           fsr1l	equ	0xFE1
 40180                           indf2	equ	0xFDF
 40181                           postinc2	equ	0xFDE
 40182                           postdec2	equ	0xFDD
 40183                           plusw2	equ	0xFDB
 40184                           fsr2h	equ	0xFDA
 40185                           fsr2l	equ	0xFD9
 40186                           status	equ	0xFD8
 40187                           
 40188 ;; *************** function _INT1_DefaultInterruptHandler *****************
 40189 ;; Defined at:
 40190 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 40191 ;; Parameters:    Size  Location     Type
 40192 ;;		None
 40193 ;; Auto vars:     Size  Location     Type
 40194 ;;		None
 40195 ;; Return value:  Size  Location     Type
 40196 ;;                  1    wreg      void 
 40197 ;; Registers used:
 40198 ;;		None
 40199 ;; Tracked objects:
 40200 ;;		On entry : F/1
 40201 ;;		On exit  : F/1
 40202 ;;		Unchanged: F/0
 40203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40208 ;;Total ram usage:        0 bytes
 40209 ;; Hardware stack levels used:    1
 40210 ;; This function calls:
 40211 ;;		Nothing
 40212 ;; This function is called by:
 40213 ;;		_EXT_INT_Initialize
 40214 ;;		_INT1_CallBack
 40215 ;; This function uses a non-reentrant model
 40216 ;;
 40217                           
 40218                           	psect	text229
 40219  007992                     __ptext229:
 40220                           	opt stack 0
 40221  007992                     _INT1_DefaultInterruptHandler:
 40222                           	opt stack 15
 40223                           
 40224                           ; BSR set to: 1
 40225                           
 40226                           ; BSR set to: 0
 40227                           ;incstack = 0
 40228  007992  0012               	return		;funcret
 40229  007994                     __end_of_INT1_DefaultInterruptHandler:
 40230                           	opt stack 0
 40231                           tosu	equ	0xFFF
 40232                           tosh	equ	0xFFE
 40233                           tosl	equ	0xFFD
 40234                           pclatu	equ	0xFFB
 40235                           pclath	equ	0xFFA
 40236                           tblptru	equ	0xFF8
 40237                           tblptrh	equ	0xFF7
 40238                           tblptrl	equ	0xFF6
 40239                           tablat	equ	0xFF5
 40240                           prodh	equ	0xFF4
 40241                           prodl	equ	0xFF3
 40242                           intcon	equ	0xFF2
 40243                           intcon2	equ	0xFF1
 40244                           intcon3	equ	0xFF0
 40245                           indf0	equ	0xFEF
 40246                           postinc0	equ	0xFEE
 40247                           plusw0	equ	0xFEB
 40248                           fsr0h	equ	0xFEA
 40249                           fsr0l	equ	0xFE9
 40250                           wreg	equ	0xFE8
 40251                           postinc1	equ	0xFE6
 40252                           postdec1	equ	0xFE5
 40253                           plusw1	equ	0xFE3
 40254                           fsr1h	equ	0xFE2
 40255                           fsr1l	equ	0xFE1
 40256                           indf2	equ	0xFDF
 40257                           postinc2	equ	0xFDE
 40258                           postdec2	equ	0xFDD
 40259                           plusw2	equ	0xFDB
 40260                           fsr2h	equ	0xFDA
 40261                           fsr2l	equ	0xFD9
 40262                           status	equ	0xFD8
 40263                           tosu	equ	0xFFF
 40264                           tosh	equ	0xFFE
 40265                           tosl	equ	0xFFD
 40266                           pclatu	equ	0xFFB
 40267                           pclath	equ	0xFFA
 40268                           tblptru	equ	0xFF8
 40269                           tblptrh	equ	0xFF7
 40270                           tblptrl	equ	0xFF6
 40271                           tablat	equ	0xFF5
 40272                           prodh	equ	0xFF4
 40273                           prodl	equ	0xFF3
 40274                           intcon	equ	0xFF2
 40275                           intcon2	equ	0xFF1
 40276                           intcon3	equ	0xFF0
 40277                           indf0	equ	0xFEF
 40278                           postinc0	equ	0xFEE
 40279                           plusw0	equ	0xFEB
 40280                           fsr0h	equ	0xFEA
 40281                           fsr0l	equ	0xFE9
 40282                           wreg	equ	0xFE8
 40283                           postinc1	equ	0xFE6
 40284                           postdec1	equ	0xFE5
 40285                           plusw1	equ	0xFE3
 40286                           fsr1h	equ	0xFE2
 40287                           fsr1l	equ	0xFE1
 40288                           indf2	equ	0xFDF
 40289                           postinc2	equ	0xFDE
 40290                           postdec2	equ	0xFDD
 40291                           plusw2	equ	0xFDB
 40292                           fsr2h	equ	0xFDA
 40293                           fsr2l	equ	0xFD9
 40294                           status	equ	0xFD8
 40295                           
 40296                           	psect	text230
 40297  000000                     __ptext230:
 40298                           	opt stack 0
 40299                           tosu	equ	0xFFF
 40300                           tosh	equ	0xFFE
 40301                           tosl	equ	0xFFD
 40302                           pclatu	equ	0xFFB
 40303                           pclath	equ	0xFFA
 40304                           tblptru	equ	0xFF8
 40305                           tblptrh	equ	0xFF7
 40306                           tblptrl	equ	0xFF6
 40307                           tablat	equ	0xFF5
 40308                           prodh	equ	0xFF4
 40309                           prodl	equ	0xFF3
 40310                           intcon	equ	0xFF2
 40311                           intcon2	equ	0xFF1
 40312                           intcon3	equ	0xFF0
 40313                           indf0	equ	0xFEF
 40314                           postinc0	equ	0xFEE
 40315                           plusw0	equ	0xFEB
 40316                           fsr0h	equ	0xFEA
 40317                           fsr0l	equ	0xFE9
 40318                           wreg	equ	0xFE8
 40319                           postinc1	equ	0xFE6
 40320                           postdec1	equ	0xFE5
 40321                           plusw1	equ	0xFE3
 40322                           fsr1h	equ	0xFE2
 40323                           fsr1l	equ	0xFE1
 40324                           indf2	equ	0xFDF
 40325                           postinc2	equ	0xFDE
 40326                           postdec2	equ	0xFDD
 40327                           plusw2	equ	0xFDB
 40328                           fsr2h	equ	0xFDA
 40329                           fsr2l	equ	0xFD9
 40330                           status	equ	0xFD8
 40331                           
 40332                           	psect	rparam
 40333  0000                     tosu	equ	0xFFF
 40334                           tosh	equ	0xFFE
 40335                           tosl	equ	0xFFD
 40336                           pclatu	equ	0xFFB
 40337                           pclath	equ	0xFFA
 40338                           tblptru	equ	0xFF8
 40339                           tblptrh	equ	0xFF7
 40340                           tblptrl	equ	0xFF6
 40341                           tablat	equ	0xFF5
 40342                           prodh	equ	0xFF4
 40343                           prodl	equ	0xFF3
 40344                           intcon	equ	0xFF2
 40345                           intcon2	equ	0xFF1
 40346                           intcon3	equ	0xFF0
 40347                           indf0	equ	0xFEF
 40348                           postinc0	equ	0xFEE
 40349                           plusw0	equ	0xFEB
 40350                           fsr0h	equ	0xFEA
 40351                           fsr0l	equ	0xFE9
 40352                           wreg	equ	0xFE8
 40353                           postinc1	equ	0xFE6
 40354                           postdec1	equ	0xFE5
 40355                           plusw1	equ	0xFE3
 40356                           fsr1h	equ	0xFE2
 40357                           fsr1l	equ	0xFE1
 40358                           indf2	equ	0xFDF
 40359                           postinc2	equ	0xFDE
 40360                           postdec2	equ	0xFDD
 40361                           plusw2	equ	0xFDB
 40362                           fsr2h	equ	0xFDA
 40363                           fsr2l	equ	0xFD9
 40364                           status	equ	0xFD8
 40365                           
 40366                           	psect	temp
 40367  000046                     btemp:
 40368                           	opt stack 0
 40369  000046                     	ds	12
 40370                           tosu	equ	0xFFF
 40371                           tosh	equ	0xFFE
 40372                           tosl	equ	0xFFD
 40373                           pclatu	equ	0xFFB
 40374                           pclath	equ	0xFFA
 40375                           tblptru	equ	0xFF8
 40376                           tblptrh	equ	0xFF7
 40377                           tblptrl	equ	0xFF6
 40378                           tablat	equ	0xFF5
 40379                           prodh	equ	0xFF4
 40380                           prodl	equ	0xFF3
 40381                           intcon	equ	0xFF2
 40382                           intcon2	equ	0xFF1
 40383                           intcon3	equ	0xFF0
 40384                           indf0	equ	0xFEF
 40385                           postinc0	equ	0xFEE
 40386                           plusw0	equ	0xFEB
 40387                           fsr0h	equ	0xFEA
 40388                           fsr0l	equ	0xFE9
 40389                           wreg	equ	0xFE8
 40390                           postinc1	equ	0xFE6
 40391                           postdec1	equ	0xFE5
 40392                           plusw1	equ	0xFE3
 40393                           fsr1h	equ	0xFE2
 40394                           fsr1l	equ	0xFE1
 40395                           indf2	equ	0xFDF
 40396                           postinc2	equ	0xFDE
 40397                           postdec2	equ	0xFDD
 40398                           plusw2	equ	0xFDB
 40399                           fsr2h	equ	0xFDA
 40400                           fsr2l	equ	0xFD9
 40401                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    402
    Data        57
    BSS         1277
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      82
    BANK0           160    136     147
    BANK1           256    105     238
    BANK2           256      0     245
    BANK3           256     20     180
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1658$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[4]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[4]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 4
		 -> payload(BANK1[4]), NULL(NULL[0]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handle16sInterrupt(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK3[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1658$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1658$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S983$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S983$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RxDataDone->_LORAWAN_SetCurrentDataRate
    _LORAWAN_SetCurrentDataRate->_ValidateDataRate
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6571566
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
           _TMR3_SetInterruptHandler
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          3     3      0  311921
                                            125 BANK0      3     3      0
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      68
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2178
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     200
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     989
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     189
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     589
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     189
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5815090
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2272914
                                            125 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  148400
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  665021
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  490519
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153169
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9360
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9803
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  311785
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  158351
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  536425
                                             80 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  500071
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2939774
                                            132 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  200722
                                            114 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1036670
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     389
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1501171
                                            130 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  474640
                                             71 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  316728
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1010491
                                            125 BANK0      5     5      0
                                            102 BANK1      3     0      3
                                              0 BANK3     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9221
                                             54 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9258
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9512
                                             54 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  163593
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  311785
                                            118 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151121
                                            106 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   43958
                                             52 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37564
                                             52 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  191170
                                            114 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  174697
                                             64 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             45 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      45
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  158364
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           5     1      4    5229
                                              7 BANK0      5     1      4
         _LORAWAN_SetCurrentDataRate
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_SetCurrentDataRate                           1     1      0     223
                                              6 BANK0      1     1      0
              _UpdateCurrentDataRate
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (6) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122779
                                             54 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248062
                                            124 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19265
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4535
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123906
                                             54 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101368
                                            115 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3326
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             18 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   80839
                                            106 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   66989
                                             92 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26238
                                             52 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19756
                                             32 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           23    20      3    4744
                                             10 BANK0     22    19      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  167548
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   92735
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   45810
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     662
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9554
                                             54 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1430
                                             45 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     811
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     546
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             28 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                             12 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             41 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                            0     0      0       0
                      _TMR3_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                 _handle16sInterrupt *
 ---------------------------------------------------------------------------------
 (16) _handle16sInterrupt                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     547
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
       _TMR3_StartTimer
   _SysConfigSleep
   _TMR3_SetInterruptHandler
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _handle16sInterrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      B4      11       70.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      93       5       91.9%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      52       1       98.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45C      12        0.0%
DATA                 0      0     67C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Aug 09 15:49:05 2022

                                        ??_LORAWAN_TxDone 00A2  
                              __end_of_DIO3_ISR_Lora_Init 7988  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 7708  
                         __size_of_UpdateJoinSuccessState 012C  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6AC0  
                                   __end_of_AESEncodeLoRa 7310  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A7  
                                                     l126 62CC  
                                                     l192 77B0  
                                                     l460 1548  
                                                     l453 14C0  
                                                     l382 510C  
                                                     l447 14F8  
                                                     l466 1732  
                                             ?_RADIO_Init 007D  
                                                     l670 7008  
                                                     l479 1804  
                                                     l592 718C  
                                                     l673 6CF2  
                                                     l690 5E2E  
                                                     l676 6D04  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 6718  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 66B8  
                                  _ExecuteRxParamSetupReq 42A8  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 7832  
                                      __size_of_AESEncode 02DA  
                                         _timer1ReloadVal 005B  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 618E  
                                   _RADIO_SetLoRaSyncWord 78BC  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B34  
                                 __end_of_SwTimersExecute 5862  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00DC  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 59BA  
                     __end_of_RADIO_SetFrequencyHopPeriod 78BC  
                             _RADIO_SetFrequencyHopPeriod 78B2  
                                              _CheckFlags 6718  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 7628  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 001C  
                                                    l1110 3452  
                                                    l1031 1212  
                                                    l1204 4A0A  
                                                    l2012 5670  
                                                    l1133 4F3A  
                                                    l2014 56F2  
                                                    l1215 4812  
                                                    l1231 682C  
                                                    l1223 7744  
                                                    l1127 437E  
                                                    l1151 31C4  
                                                    l1063 2806  
                                                    l1136 4FC8  
                                                    l2121 010E  
                                                    l1049 2716  
                                                    l2017 5406  
                                                    l2041 414A  
                                                    l1146 4FFC  
                                                    l1250 7704  
                                                    l2026 5416  
                                                    l1091 6A10  
                                                    l1083 740A  
                                                    l1244 74E8  
                                                    l2133 0266  
                                                    l1238 703E  
                                                    l2150 054A  
                                                    l1079 7758  
                                                    l2231 1E92  
                                                    l2151 0552  
                                                    l2063 4B66  
                                                    l2232 1F38  
                                                    l1264 6F74  
                                                    l2241 1F46  
                                                    l2233 1F36  
                                                    l2090 4646  
                                                    l1347 7592  
                                                    l1099 3614  
                                                    l2307 634E  
                                                    l2171 0996  
                                         _timer3ReloadVal 005D  
                                                    l3108 6098  
                                                    l2236 1F32  
                                                    l2069 6334  
                                                    l3118 6646  
                                                    l1454 1884  
                                                    l2095 5756  
                                                    l1279 685E  
                                                    l1297 23FE  
                                                    l2522 2436  
                                                    l3171 6DFE  
                                                    l2283 1DB4  
                                                    l2292 5928  
                                                    l1469 19EC  
                                                    l1717 5C38  
                                                    l1718 5C80  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l1746 54C8  
                                                    l2749 6FB0  
                                                    l1993 37D0  
                                                    l9632 7768  
                                        _RADIO_WritePower 5284  
                            ??_LORAWAN_SetCurrentDataRate 0066  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 4650  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1196 00A1  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    _TMR1 000FCE  
                                                    _TMR3 000FB2  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 760C  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 5F3C  
                                                    _loRa 0200  
                                                    _main 5AFA  
                                                    _rand 6A24  
                          __end_of_UpdateMinMaxChDataRate 57B0  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 0046  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00CF  
                                           ComputeMic@key 00CA  
                               __end_of_LORAWAN_RxTimeout 2980  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0048  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init 77FE  
                                        __end_of_ADC_Read 6FD8  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6AC0  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0090  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5592  
                                         _TMR3_Initialize 7298  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00CF  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 7930  
                                            ___param_bank 000010  
                                              _GetRx1Freq 7784  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 69D6  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 6594  
                                __size_of_SystemTimerInit 0004  
                                        __end_of_INT1_ISR 795A  
                                        __end_of_INT2_ISR 794E  
                          __size_of_OSCILLATOR_Initialize 000C  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 7826  
                                                   l10000 62CE  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l12030 68D0  
                                                   l12024 689A  
                                                   l12040 2412  
                                                   l12130 6058  
                                                   l12106 26B4  
                                                   l12050 2438  
                                                   l10602 68F0  
                                                   l12140 608A  
                                                   l12132 605C  
                                                   l12220 5140  
                                                   l13100 1930  
                                                   l13020 4F3E  
                                                   l10620 6910  
                                                   l12150 6612  
                                                   l12214 512E  
                                                   l12222 514A  
                                                   l12206 510E  
                                                   l13110 1986  
                                                   l12310 52D0  
                                                   l10614 6906  
                                                   l10630 6928  
                                                   l12128 604C  
                                                   l12152 6616  
                                                   l12080 2576  
                                                   l13104 195A  
                                                   l12320 52F6  
                                                   l12312 52DC  
                                                   l13040 4FD6  
                                                   l13032 4FC6  
                                                   l10608 68FA  
                                                   l12250 51A6  
                                                   l12234 516E  
                                                   l12218 5138  
                                                   l12082 2580  
                                                   l12074 254A  
                                                   l12066 248A  
                                                   l13050 4FF8  
                                                   l12402 47C0  
                                                   l10634 692E  
                                                   l10626 6920  
                                                   l10618 690C  
                                         __end_of___abdiv 6932  
                                                   l12156 6638  
                                                   l12148 6606  
                                                   l12236 5172  
                                                   l12076 2554  
                                                   l13132 19F0  
                                                   l13108 1978  
                                                   l13124 19CE  
                                                   l12324 5302  
                                                   l12316 52EA  
                                                   l12500 14CC  
                                                   l13036 4FCC  
                                                   l13044 4FE2  
                                                   l13220 419C  
                                                   l13212 4164  
                                                   l12404 47C4  
                                                   l13204 6B94  
                                                   l14100 6386  
                                                   l12190 4C42  
                                                   l12238 517C  
                                                   l12086 25A2  
                                                   l13142 1A8E  
                                                   l13118 1990  
                                                   l12502 14DE  
                                                   l13046 4FE6  
                                                   l13230 4206  
                                                   l13310 1CCC  
                                                   l12422 4876  
                                                   l12414 485C  
                                                   l14102 638A  
                                                   l14022 4628  
                                                   l12184 4BDE  
                                                   l12248 519C  
                                                   l12088 25AC  
                                                   l12432 6BAE  
                                                   l13080 1870  
                                                   l12344 5330  
                                                   l12600 16F4  
                                                   l12512 1532  
                                                   l12504 1502  
                                                   l14120 675A  
                                                   l14112 672E  
                                                   l12416 4860  
                                                   l14200 0110  
                                                   l14016 4592  
                                                   l12178 4B8E  
                                                   l12098 26AA  
                                                   l12450 6DD6  
                                                   l12338 5328  
                                                   l12362 5E08  
                                                   l13330 1D2E  
                                                   l13306 1CA6  
                                                   l12188 4C40  
                                                   l12436 6BE6  
                                                   l13148 1AC6  
                                                   l13092 18D2  
                                                   l12452 6DDE  
                                                   l12292 529C  
                                                   l12620 17AE  
                                                   l12516 153E  
                                                   l13500 6712  
                                                   l14116 6744  
                                                   l13252 5546  
                                                   l13244 4298  
                                                   l13180 598C  
                                                   l13316 1CE4  
                                                   l14140 2EE6  
                                                   l14132 2E90  
                                                   l15014 643A  
                                                   l15030 3794  
                                                   l12198 50F4  
                                                   l13086 1896  
                                                   l13094 190A  
                                                   l12454 6DE2  
                                                   l12606 171A  
                                                   l12518 1544  
                                                   l13422 3088  
                                                   l12358 5DE4  
                                                   l13254 5582  
                                                   l13238 4252  
                                                   l13190 59AC  
                                                   l13350 1DBA  
                                                   l13334 1D46  
                                                   l13326 1D1C  
                                                   l14142 2EFC  
                                                   l14134 2EA4  
                                                   l14222 01B0  
                                                   l15102 5660  
                                                   l12384 7278  
                                                   l12720 48EE  
                                                   l12712 48D6  
                                                   l12296 52A8  
                                                   l12624 17BE  
                                                   l12608 173C  
                                                   l13432 30AE  
                                                   l13416 3064  
                                                   l14072 60F4  
                                                   l14064 60E0  
                                                   l13248 54DE  
                                                   l13256 5584  
                                                   l13176 5980  
                                                   l13168 592C  
                                                   l13344 1D8C  
                                                   l13360 1DDE  
                                                   l14144 2F12  
                                                   l14136 2EBA  
                                                   l14128 2DE0  
                                                   l10970 57A4  
                                                   l12730 4936  
                                                   l12458 6DF4  
                                                   l12634 17FA  
                                                   l12538 158E  
                                                   l13418 3078  
                                                   l12378 71D0  
                                                   l12802 2BFC  
                                                   l13258 558E  
                                                   l13178 5982  
                                                   l13186 599C  
                                                   l13194 59B4  
                                                   l13362 1E12  
                                                   l13290 1C32  
                                                   l14146 2F28  
                                                   l14138 2ED0  
                                                   l14330 048A  
                                                   l14314 045E  
                                                   l14218 01A0  
                                                   l15106 5672  
                                                   l15130 402E  
                                                   l12388 7288  
                                                   l12476 5D0C  
                                                   l15044 381A  
                                                   l15036 37C0  
                                                   l12628 17DA  
                                                   l12548 15B8  
                                                   l12556 15D4  
                                                   l12492 1448  
                                                   l13428 3098  
                                                   l12812 2C44  
                                                   l13292 1C48  
                                                   l13276 1BC6  
                                                   l13268 1B42  
                                                   l13364 1E14  
                                                   l13700 1E8A  
                                                   l13516 6A1A  
                                                   l13540 35C4  
                                                   l12900 49BC  
                                                   l13620 34D4  
                                                   l13604 341E  
                                                   l14148 2F3E  
                                                   l14156 2F50  
                                                   l14164 2F9C  
                                                   l14244 024C  
                                                   l15300 6C5E  
                                                   l15132 403A  
                                                   l15124 4012  
                                                   l15140 405E  
                                                   l15060 2150  
                                                   l15038 37C4  
                                                   l10958 5708  
                                                   l11926 2A7A  
                                                   l12726 4912  
                                                   l12590 16A4  
                                                   l12494 146A  
                                                   l13462 31AA  
                                                   l13390 2FEC  
                                                   l12822 2C8C  
                                                   l12814 2C6C  
                                                   l12806 2C10  
                                                   l14078 6106  
                                                   l13294 1C5A  
                                                   l13286 1C0C  
                                                   l13366 1E20  
                                                   l12654 74E4  
                                                   l12910 4A54  
                                                   l13606 3432  
                                                   l14158 2F7E  
                                                   l14422 0742  
                                                   l14334 0498  
                                                   l14326 0472  
                                                   l14262 02C6  
                                                   l15206 6308  
                                                   l15070 2224  
                                                   l10968 57A0  
                                                   l11928 2A84  
                                                   l12496 148C  
                                                   l13456 313A  
                                                   l13384 2FD6  
                                                   l12832 2D0E  
                                                   l12808 2C1C  
                                                   l12752 71BE  
                                                   l13296 1C60  
                                                   l12680 683C  
                                                   l12912 4A58  
                                                   l13624 3524  
                                                   l14168 2FBA  
                                                   l14432 0796  
                                                   l14408 073C  
                                                   l14424 075A  
                                                   l14256 02B8  
                                                   l15304 6C64  
                                                   l12738 4950  
                                                   l12674 5C16  
                                                   l12826 2CA4  
                                                   l13570 36AA  
                                                   l13626 352E  
                                                   l13618 34CA  
                                                   l14442 079C  
                                                   l14282 0406  
                                                   l14362 058A  
                                                   l14194 00D0  
                                                   l14610 27A0  
                                                   l15146 40B4  
                                                   l15090 2360  
                                                   l11956 6E14  
                                                   l15340 5EEC  
                                                   l12844 2DCC  
                                                   l12772 58BA  
                                                   l12692 686E  
                                                   l12684 684A  
                                                   l13548 35F4  
                                                   l13572 36AE  
                                                   l13628 3532  
                                                   l13652 435C  
                                                   l14532 0A3A  
                                                   l14444 07AE  
                                                   l14612 27BA  
                                                   l15260 64AA  
                                                   l15180 4B10  
                                                   l15068 220A  
                                                   l11982 4DD2  
                                                   l11990 7246  
                                                   l15422 3F5C  
                                                   l12598 16E8  
                                                   l13398 3004  
                                                   l12838 2D5C  
                                                   l12774 58C0  
                                                   l13726 1EFC  
                                                   l12694 6876  
                                                   l12686 6852  
                                                   l13574 36E4  
                                                   l12918 4A6E  
                                                   l13910 336A  
                                                   l14534 0A40  
                                                   l14518 0A00  
                                                   l14454 07B4  
                                                   l14366 05B6  
                                                   l14374 05C2  
                                                   l14294 0420  
                                                   l14630 280A  
                                                   l14606 2792  
                                                   l15270 64C2  
                                                   l15254 6492  
                                                   l15078 22BC  
                                                   l16054 57B8  
                                                   l11984 4E22  
                                                   l14800 39AC  
                                                   l15360 3EAC  
                                                   l15504 46C2  
                                                   l14704 1142  
                                                   l13744 1F58  
                                                   l13680 6B54  
                                                   l13568 3696  
                                                   l12928 6F46  
                                                   l12864 6802  
                                                   l13648 433A  
                                                   l14528 0A12  
                                                   l14536 0A46  
                                                   l14296 0438  
                                                   l14624 27F8  
                                                   l15264 64B8  
                                                   l15176 4B0A  
                                                   l16064 5852  
                                                   l11994 7262  
                                                   l14714 11FA  
                                                   l14722 1274  
                                                   l12778 58E0  
                                                   l13762 1FC4  
                                                   l13746 1F60  
                                                   l12698 6880  
                                                   l12954 73FE  
                                                   l12866 6808  
                                                   l13666 43E6  
                                                   l14554 0A94  
                                                   l14546 0A84  
                                                   l14538 0A4C  
                                                   l14466 081E  
                                                   l14458 07C2  
                                                   l14394 06BA  
                                                   l14642 28BC  
                                                   l15258 6498  
                                                   l15274 64C8  
                                                   l15186 4B2C  
                                                   l16066 5854  
                                                   l12796 2BE6  
                                                   l14740 133E  
                                                   l13780 2090  
                                                   l13748 1F6E  
                                                   l12956 7406  
                                                   l13924 43FE  
                                                   l13908 3360  
                                                   l14484 0900  
                                                   l14468 0828  
                                                   l14572 0ABE  
                                                   l14644 28C0  
                                                   l15284 6EDC  
                                                   l15292 6EF4  
                                                   l15196 4B62  
                                                   l16068 5858  
                                                   l15542 678C  
                                                   l14750 137C  
                                                   l14734 12D0  
                                                   l13774 203A  
                                                   l13678 6B34  
                                                   l12886 703A  
                                                   l13918 7652  
                                                   l14494 099E  
                                                   l14590 2708  
                                                   l14654 295A  
                                                   l14830 522E  
                                                   l13870 53FE  
                                                   l15544 6790  
                                                   l13960 5434  
                                                   l13936 44B0  
                                                   l14648 2930  
                                                   l14840 525E  
                                                   l15288 6EE2  
                                                   l16184 5B70  
                                                   l14746 1354  
                                                   l13938 44B4  
                                                   l14578 0AF6  
                                                   l14842 5262  
                                                   l14826 5214  
                                                   l14818 51F0  
                                                   l13874 540E  
                                                   l13866 53F0  
                                                   l16194 5B86  
                                                   l15492 4684  
                                                   l14684 0E6E  
                                                   l14676 0D68  
                                                   l13964 5442  
                                                   l12988 6F92  
                                                   l14916 3C7E  
                                                   l14790 3964  
                                                   l14694 1076  
                                                   l14686 0FA2  
                                                   l13982 5472  
                                                   l13974 5464  
                                                   l14862 5A92  
                                                   l14950 73DA  
                                                   l15662 6662  
                                  __end_of_SysConfigSleep 61FE  
                                                   l14792 397A  
                                                   l13968 5458  
                                                   l14880 5ADA  
                                                   l14698 1140  
                                                   l14938 3AEC  
                                                   l13986 547E  
                                                   l14882 5AE0  
                                                   l14866 5AAC  
                                                   l14886 5AE4  
                                                   l14998 63D4  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                              _FillSubKey 6BA4  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer 7964  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler 7880  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 60AA  
                                         RADIO_Transmit@i 00A6  
                                                   _IDLEN 007E9F  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 6658  
                                                   u12600 6E24  
                                       ??_EnableChannels1 006D  
                                                   u13350 14F2  
                                                   u12640 68C4  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _T3CON 000FB1  
                                                   _LATD1 007C61  
                                                   u12810 5FC8  
                                    RxJoinResponse@status 0001  
                                                   u13355 14E8  
                                                   _LATD3 007C63  
                                                   _LATD4 007C64  
                                                   u12647 68BA  
                                                   u13455 15EC  
                                                   u17000 1000  
                       __end_of_AckRetransmissionCallback 4B6C  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u14265 1854  
                                                   u17010 1104  
                                                   u17100 12A0  
                                                   u16220 04D6  
                                                   u17005 0FF6  
                                                   u13671 488C  
                                                   u17015 10FA  
                                                   u16071 02A2  
                                                   u14800 3108  
                                                   u13840 2D2A  
                                                   u13825 2CC2  
                                                   u16410 0860  
                                                   u16250 05B2  
                                                   u17115 12C0  
                                                   u16148 041E  
                                                   u17125 12E2  
                                                   u15525 44D6  
                                                   u14590 1BC4  
                                                   u16270 06B4  
                                                   u17310 3BF2  
                                                   u14815 312A  
                                                   u13855 2D4C  
                                                   u16328 072A  
                                                   u16248 0578  
                                                   u17320 3C08  
                                                   u15368 53DE  
                                                   u14825 314C  
                                                   u13865 2D6E  
                                                   u15705 45A4  
                                                   u17330 3D04  
                                                   u17325 3BFE  
                                                   u18045 6476  
                                                   u17510 37E8  
                                          __CFG_DEBUG$OFF 000000  
                                                   u17335 3CFA  
                                                   u17360 3A60  
                                                   u15728 4634  
                                                   u15680 4550  
                                                   u15665 621C  
                                                   u17370 3A76  
                                                   u17610 2310  
                                                   u17380 3B72  
                                                   u14884 6A00  
                                                   u16548 0A72  
                                                   u17525 380A  
                                                   u14885 69FA  
                                                   u16478 09EE  
                                                   u17535 382C  
                                                   u17375 3A6C  
                                                   u16735 2746  
                                                   u15695 4582  
                                                   u15848 6374  
                                                   u17385 3B68  
                                                   u17625 2350  
                                                   u17635 237A  
                                                   u17740 4072  
                                                   u18460 6686  
                                                   u15990 017E  
                                                   u16935 0B7C  
                                                   u17840 4B04  
                                                   u19408 5840  
                                                   u16945 0BF6  
                                                   u16865 28DA  
                                                   u16955 0D9C  
                                                   u17755 40A4  
                                                   u17908 4B50  
                                                   u16965 0E16  
                                                   u17765 40C6  
                                                   u16990 0FE2  
                                                   u19707 724C  
                                                   u17948 6322  
                                                   u17868 4B2A  
                                         __end_of___lwmod 6E08  
                                                   u19697 6668  
                                                   i2l242 6B0C  
                                           ?_RADIO_RxDone 0001  
                     __size_of_LORAWAN_SetCurrentDataRate 002C  
                             __size_of_RADIO_ReceiveStart 0200  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR3H 000FB3  
                                                   _TMR1L 000FCE  
                                                   _TMR3L 000FB2  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 0028  
                                              _LoRaWakeUp 78E4  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                       __size_of_TMR3_SetInterruptHandler 000A  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 7970  
                                 ?_SetReceptionNotOkState 0001  
                               ?_TMR3_SetInterruptHandler 0064  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 781A  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                        __end_of_TMR3_ISR 780C  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00AB  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 00EE  
                          ??_TMR3_DefaultInterruptHandler 0001  
                                 __end_of_PIN_MANAGER_IOC 78DA  
                            ??_IncludeMacCommandsResponse 0068  
                           __end_of_RADIO_WatchdogTimeout 6D08  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0052  
                          LORAWAN_RxDone@frmPayloadLength 03B1  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 77E2  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 03AF  
                                  _UpdateJoinSuccessState 4524  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 788A  
                                              _ComputeMic 6932  
                                 __end_of_TMR1_Initialize 7336  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 78FC  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 4882  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2DD4  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00DA  
                                         _TMR1_WriteTimer 7580  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 03A0  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 26E2  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 1818  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 59BA  
                            __size_ofi2_SwTimersInterrupt 00EC  
                                        LORAWAN_Send@port 00D6  
                             __size_of_DIO1_ISR_Lora_Init 000C  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 77A8  
                                            __end_of_main 5B96  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 6A72  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 5F3C  
                                        _SetJoinFailState 7382  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 765E  
                                    _ExecuteRxTimingSetup 73A6  
                                       __end_of_IOCB4_ISR 760C  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00BE  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 7904  
                                               ??_AESCmac 00C3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00E8  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00E2  
                                          ??_RADIO_TxDone 00D2  
                                         _TMR3_StartTimer 7960  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 7974  
                                   _TMR3_InterruptHandler 01EC  
                       __end_of_LORAWAN_LinkCheckCallback 4154  
                          __end_of_SetReceptionNotOkState 639E  
                             __end_of_UpdateReceiveDelays 6BA4  
                         __end_of_AssembleEncryptionBlock 5914  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0096  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6E08  
                                              _RxDataDone 611C  
                                          _EnableChannels 771E  
                                      __size_of_LoRaSleep 0020  
                               ??_PrepareJoinRequestFrame 00D3  
                                          _HALSPICSAssert 7978  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00A0  
                                              _ExtractMic 6D08  
                         __size_of_SearchAvailableChannel 00E0  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 775C  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 56FC  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B4  
                          _LORAWAN_ReceiveWindow1Callback 5648  
                                _RADIO_FSKPacketSent$1215 00DA  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 73EC  
                                                  _T1GCON 000FCC  
                                                  _T3GCON 000FB4  
                                 SwTimerReadValue@timerId 0095  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 353C  
                                 __end_of_TMR3_Initialize 72C0  
                  __end_of_LORAWAN_ReceiveWindow2Callback 541A  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback 5352  
                                                  i2l1347 75E6  
                                                  i2l2501 0054  
                                                  i2l2503 0064  
                                                  i2l2507 006E  
                                          __CFG_WDTEN$OFF 000000  
                                                  i2l2726 7780  
                                                  i2l2497 0038  
                                                  i2l2499 0044  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  i2l9976 4CE6  
                                                  i2l9978 4D36  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 0018  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00D6  
                         __size_of_AutomaticReplyCallback 001E  
                              __size_of_LORAWAN_RxTimeout 029E  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 7856  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable FE6D  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C5  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 77B8  
                                     LORAWAN_TxDone@found 00C4  
                                         _CheckMcastFlags 60AA  
                                     LORAWAN_TxDone@minim 00CD  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 740E  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C9  
                                              _TimeToSend 0169  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 798E  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 798C  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 716A  
                                               ??___abdiv 0065  
                                                  ___lmul 5D38  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 7968  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0096  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 5914  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009E  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 6888  
                                                  _memset 726E  
                                                  clear_0 5A02  
                                                  clear_1 5A14  
                                                  clear_2 5A20  
                                                  clear_3 5A2C  
                                                  clear_4 5A38  
                                                  clear_5 5A44  
                                                  clear_6 5A50  
                                 SwTimerIsRunning@timerId 0064  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 7734  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 7992  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 7990  
                                            __pdataCOMRAM 0052  
                                  __end_of_HALSPICSAssert 797C  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 008D  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE6C  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0091  
                                         _UpdateDataRange 4984  
                                  __end_of_ExecuteLinkAdr 36EE  
                                      ??_ExecuteDutyCycle 0066  
                      __end_of_LORAWAN_SetCurrentDataRate 71C4  
                              _LORAWAN_SetCurrentDataRate 7198  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR3_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 6F6A  
                              _LORAWAN_SetChannelIdStatus 6F32  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 007D  
                                           AESEncode@aux2 007C  
                                           AESEncode@aux3 007E  
                                 __end_of_TMR1_WriteTimer 759C  
                                   __end_of_SwTimerCreate 62D2  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 00CA  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 75D4  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00B0  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 7430  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00DC  
                                          ??_LORAWAN_Send 00DA  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 5A56  
                           __end_of_RADIO_FSKPayloadReady 5AFA  
                                          _RADIO_Transmit 2FC4  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 0166  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 7336  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6C7E  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 03A9  
                                          _maxPayloadSize FF6D  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                                   __end_of_TMR3_CallBack 75B8  
                               ExecuteLinkAdr@channelMask 0074  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend 78D0  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 7490  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 4F20  
                              __end_of_handle16sInterrupt 7784  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 710C  
                                     ??_SYSTEM_Initialize 0066  
                                 __end_of_TMR3_StartTimer 7964  
                              __end_of_DIO4_ISR_Lora_Init 7986  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                               ?_TMR3_ISR 0001  
                                _RADIO_WriteConfiguration 13A0  
                                    __size_of_readAndSend 0060  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF9B  
                               __size_of_LORAWAN_Mainloop 003A  
                                        ??_EncKeySchedule 0065  
                   __end_of_IOCB4_DefaultInterruptHandler 7990  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 798E  
                                __end_of_RADIO_WritePower 5352  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 77F0  
                                       LORAWAN_RxDone@hdr 03B2  
                                            ??_RADIO_DIO0 00E4  
                                            ??_RADIO_DIO1 00B0  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 6404  
                                         _UpdateFrequency 6EF8  
                                  _AutomaticReplyCallback 74B0  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 03A1  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 002E  
                                         _UpdateDutyCycle 7076  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 740E  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 7986  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput 7984  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 788A  
                                        RADIO_DIO0@opMode 00E7  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0067  
                      __end_of_IncludeMacCommandsResponse 1E2C  
                              _IncludeMacCommandsResponse 1B34  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                                   LORAWAN_Send@confirmed 00DC  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 7748  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 7450  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                  __end_of_RADIO_Transmit 31B2  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3E9E  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00E8  
                                              __pbssBANK1 0169  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 7580  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 611C  
                                        ?_TMR3_Initialize 0001  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF75  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 008C  
                                    _RADIO_SetOutputPower 78FC  
                                              __pnvCOMRAM 005B  
                                    __end_of_RADIO_SetCRC 78B2  
                                  __size_of_DIO0_ISR_Lora 0006  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 5284  
                              __end_of_RADIO_RxFSKTimeout 700E  
                                    __end_of_RADIO_TxDone 3D3C  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 64CE  
                                      __end_of_RADIO_DIO1 6EF8  
                                      __end_of_RADIO_DIO2 6C7E  
                                      __end_of_RADIO_DIO3 76F0  
                                      __end_of_RADIO_DIO4 76D8  
                                      __end_of_RADIO_DIO5 76C0  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init 3A20  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00A0  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0006  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 7546  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 6830  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                     __size_of_LoRaWakeUp 0008  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                            readAndSend@j 00DE  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 43F0  
                        __end_of_TMR3_SetInterruptHandler 786C  
                                      ??_CountfOptsLength 0064  
                                  __size_of_DIO2_ISR_Lora 0006  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00A8  
                                      EncryptFRMPayload@j 00A9  
                                      EncryptFRMPayload@k 00A7  
                                              ??_TMR1_ISR 002A  
                                              ??_TMR3_ISR 0001  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 7644  
                                        _ValidateRxOffset 7734  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 7826  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0052  
                                  RADIO_Transmit@regValue 00A5  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A20  
                                                 _AESCmac 1818  
                                  ComputeMic@bufferLength 00CE  
                                 __size_of_ADC_SelChannel 0018  
                                 __end_of_UpdateDataRange 4A7A  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10640 6E52  
                                                 i2l10670 4F08  
                                                 i2l10664 4EA4  
                                                 i2l10658 4E54  
                                                 i2l10668 4F06  
                                    EncryptFRMPayload@dir 0097  
                                      _RADIO_GetPacketSnr 792A  
                                    EncryptFRMPayload@key 009C  
                                   __end_of_UpdateTxPower 78F4  
                                     _RADIO_SetIQInverted 789E  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 008E  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 00EE  
                                     i2_SwTimersInterrupt 4E34  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF94  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 73A6  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0096  
                                 _ValidateChannelMaskCntl 76F0  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 009A  
                              AssemblePacket@bufferLength 00CD  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 5E40  
                             PrepareJoinRequestFrame@iCtr 00DB  
                               _IOCB4_SetInterruptHandler 7876  
                       __end_of_SetCallbackSoftwareTimers 5648  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4A7A  
                             PrepareJoinRequestFrame@mhdr 00D9  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 0036  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00BC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FFA2  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00D5  
                                  _InitDefault868Channels 639E  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00D9  
                                   _StopAllSoftwareTimers 6A72  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0019  
                                 __end_of_UpdateFrequency 6F32  
                                     AssemblePacket@fCtrl 00D3  
                                                 ___abdiv 68E0  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 0072  
                                              AESEncode@i 007F  
                                               _AESEncode 2408  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 7832  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 000C  
                                        ?_TMR3_StartTimer 0001  
                                 __end_of_UpdateDutyCycle 70A8  
                                                 ___lldiv 6034  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 65F6  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6DCA  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 59BA  
                      __size_of_LORAWAN_GetMaxPayloadSize 004C  
                                                 _appSKey 01C4  
                                         __size_of_memcpy 0058  
                              __end_of_RADIO_ReceiveStart 2DD4  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00A1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 5AFA  
                                                 __ptext1 6658  
                                                 __ptext2 6FA2  
                                                 __ptext3 7678  
                                                 __ptext4 618E  
                                                 __ptext5 7430  
                                                 __ptext6 7298  
                                                 __ptext7 7960  
                                                 __ptext8 7862  
                                                 __ptext9 7310  
                                    __end_of_LORAWAN_Init 67D4  
                                    __end_of_LORAWAN_Join 5CB0  
                                    __end_of_LORAWAN_Send 54D6  
                                           _DIO0_ISR_Lora 795A  
                          ??_TMR1_DefaultInterruptHandler 0001  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D3C  
                                               _IOCB4_ISR 75F0  
                              ExecuteNewChannel@frequency 0073  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0086  
                                 __size_of_LORAWAN_RxDone 0A80  
                                   _OSCILLATOR_Initialize 781A  
                          __end_of_UpdateJoinSuccessState 4650  
                                 __size_of_LORAWAN_TxDone 0888  
                              __end_of_RADIO_SetBandwidth 791C  
                                         _RADIO_GetStatus 7930  
                                               _T3CONbits 000FB1  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF9B  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 794E  
                                             _SwTimerStop 7564  
                                                 _payload 01B0  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01D4  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 337A  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                           _DIO2_ISR_Lora 7942  
                              __size_of_SYSTEM_Initialize 0020  
                    __end_of_LORAWAN_SetNetworkSessionKey 721A  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 71F0  
                                      ?_ExecuteNewChannel 0070  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00CC  
                                    end_of_initialization 5A56  
                                 _CreateAllSoftwareTimers 6984  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 7880  
                                   ??_RADIO_FSKPacketSent 00D2  
                                          _GenerateSubkey 4882  
                                   _RADIO_WatchdogTimeout 6CC6  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF75  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 6888  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 3FFC  
                                               i2u1101_40 6E62  
                                          ??_SwTimerStart 008D  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 78F4  
                                   _UpdateChannelIdStatus 477C  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 784A  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 6F6A  
                                              _ticksAdded 003A  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 001D  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 0094  
                                        _LORAWAN_GetState 791C  
                                    _HALResetPinMakeInput 7980  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A8  
                              LORAWAN_RxDone@bufferLength 0168  
                        __end_of_RADIO_SetSpreadingFactor 790C  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                                         _SystemTimerInit 7968  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 6E84  
                            __end_of_RADIO_SetFSKSyncWord 71F0  
                                      LORAWAN_Join@result 00DD  
                                      __end_of_CheckFlags 6776  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3E9E  
                                      _DIO0_ISR_Lora_Init 784A  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                   _INT1_InterruptHandler 01E4  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                        RxDataDone@status 006A  
                                            ??_FillSubKey 0069  
                            SwTimersInterrupt@timeElapsed 0084  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 72E8  
                               __size_of_ExecuteDevStatus 000A  
                                _TMR3_SetInterruptHandler 7862  
                            __end_of_RADIO_WriteFrequency 50DC  
                              __end_of_RADIO_RegisterRead 7382  
                       __end_of_LORAWAN_GetMaxPayloadSize 6B5A  
                          __end_of_HALResetPinOutputValue 7770  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 735C  
                                __end_of_ConfigureRadioTx 6CC6  
                                         _RADIO_RxTimeout 72C0  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 353C  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02F4  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 6D4A  
                                          _TMR1_ReadTimer 7528  
                                          ??_UpdateCfList 0072  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 4984  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 0036  
                                           RADIO_RxDone@i 00E3  
                                   __size_of_RADIO_SetCRC 000A  
                             ?_LORAWAN_SetCurrentDataRate 0001  
                                 AssemblePacket@macCmdIdx 00D4  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 00F1  
                                      __end_of_GetRx1Freq 7796  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00CF  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 009E  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A5  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 5EBE  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B2  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 77D4  
                                         _RADIO_WriteMode 50DC  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DE  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00D1  
                                      __end_of_FillSubKey 6BEE  
                                 _AssembleEncryptionBlock 5862  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF6D  
                                     AESEncodeLoRa@useKey 0084  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp 78EC  
                                      LORAWAN_Send@buffer 00D7  
                                          __end_of_Random 7430  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 775C  
                            __end_of_INTERRUPT_Initialize 7970  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 792A  
                                 __end_of_RADIO_GetStatus 7936  
                                          __end_of___lmul 5DBE  
                                      LORAWAN_Send@result 00DB  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 7470  
                                           __pidataCOMRAM 78DA  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0080  
                                       __size_of_TMR1_ISR 000E  
                                       __size_of_TMR3_ISR 000E  
                                          _ADC_SelChannel 7678  
                                      __end_of_ComputeMic 6984  
                                               Random@max 0077  
                                          __end_of_memcpy 68E0  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6D8C  
                                  __end_of_TMR1_ReadTimer 7546  
                                          __end_of_memset 7298  
                                         _SPI2_Initialize 7856  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 78A8  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                            _RADIO_RxDone 51B4  
                                            _RADIO_TxDone 3BB2  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 59BA  
                                      _handle16sInterrupt 7770  
                                          _ConfigureRadio 5B96  
                                      LORAWAN_RxDone@mhdr 03A2  
                                      LORAWAN_RxDone@temp 03A8  
                                            ??_RxDataDone 006B  
                                      _DIO4_ISR_Lora_Init 7984  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer 7564  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 750A  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0069  
                         __size_of_PIN_MANAGER_Initialize 0048  
                           __end_of_TMR_OverrideRemaining 6034  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 7644  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 009F  
                                            AESCmac@input 00C0  
                        __end_of_LORAWAN_SetDeviceAddress 76A8  
                                         ?_GenerateSubkey 0094  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00D1  
                                   LORAWAN_Init@RxPayload 00A6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                 _ONE_HOUR_TIMEOUT_COUNTS 005A  
                                   __end_of_INT2_CallBack 7628  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 765E  
                              SwTimerStart@ticksRemaining 0091  
                                  RADIO_WriteMode@newMode 006E  
                                     ?_handle16sInterrupt 0001  
                                __end_of_ValidateRxOffset 7748  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 790C  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 5000  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 6E46  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 796C  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0040  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 000A  
                                     TMR_SwapTimer@retVal 0042  
                                   _RADIO_FSKPayloadReady 5A5C  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 7980  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00DD  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0091  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 646A  
                          __end_of_AutomaticReplyCallback 74CE  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0026  
                                    _macEndDevCmdReplyLen FF94  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00F2  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00BC  
                                 __end_of_RADIO_RxTimeout 72E8  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 618E  
                                ??_SetReceptionNotOkState 00A0  
                                          ??_TMR_ISR_lora 002A  
                                  __end_of_ADC_SelChannel 7690  
                                         ??_DIO0_ISR_Lora 0001  
                                    ??_handle16sInterrupt 0001  
                                             __pdataBANK1 01B4  
                                       _ValidateDataRange 700E  
                                      __end_of_ExtractMic 6D4A  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
                  SwTimersInterrupt@ticksToNextTimerEvent 0088  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 006A  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 716A  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 74CE  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor 7904  
                                      _RADIO_RxFSKTimeout 6FD8  
                                                ?_AESCmac 00BC  
                                  __size_of_TMR1_CallBack 001C  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 007B  
                                            AESEncode@key 006C  
                                  TMR_GetDeltaTime@retVal 0032  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                  __end_of_ConfigureRadio 5C24  
                                          _LORAWAN_RxDone 0098  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 003E  
                                          _LORAWAN_TxDone 0B18  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5D38  
                  __end_of_LORAWAN_EnterContinuousReceive 6594  
                 __size_of_LORAWAN_EnterContinuousReceive 0062  
                          _LORAWAN_EnterContinuousReceive 6532  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00BC  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0032  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 0099  
                        __end_of_INT0_SetInterruptHandler 798A  
                                      LORAWAN_RxTimeout@i 00AF  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                           __pcstackBANK3 03A0  
                                  __size_of_TMR3_CallBack 001C  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4D48  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 51B4  
                 __end_of_UnconfirmedTransmissionCallback 6338  
                __size_of_UnconfirmedTransmissionCallback 0066  
                         _UnconfirmedTransmissionCallback 62D2  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                                 _RADIO_ReceiveStart$1199 009C  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01A0  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0095  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 71C4  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 710C  
       __end_of_ResetParametersForUnconfirmedTransmission 77C6  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 77B8  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01E6  
                                               _bandwidth FF8D  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 6776  
                                            _LORAWAN_Join 5C24  
                                            _LORAWAN_Send 541A  
                                  RADIO_FSKPayloadReady@i 00E3  
                                       _ValidateFrequency 67D4  
                                               __pnvBANK1 01E4  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 5000  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 7974  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 7076  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 6BEE  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 337A  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                __size_of_TMR3_Initialize 0028  
                                               _macBuffer 04E0  
                                               _dioStatus 00F0  
                               __end_of_ValidateDataRange 7042  
                           RADIO_FSKPayloadReady@irqFlags 00E2  
                                       _SwTimersInterrupt 4B6C  
                                       ??_SwTimersExecute 00DD  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 7876  
                                           __pmediumconst FE6C  
                                 RADIO_Transmit@bufferLen 0098  
                                 __end_of_SPI2_Initialize 7862  
                                               __ptext100 5914  
                                               __ptext101 4154  
                                               __ptext110 0B18  
                                               __ptext102 5862  
                               __end_of_ValidateChannelId 74EC  
                                               __ptext111 6D8C  
                                               __ptext103 54D6  
                                               __ptext200 6268  
                                               __ptext120 77C6  
                                               __ptext112 7490  
                                               __ptext104 6D08  
                                               __ptext201 791C  
                                               __ptext121 7936  
                                               __ptext113 7930  
                                               __ptext105 5E40  
                                               __ptext210 75B8  
                                               __ptext202 7796  
                                               __ptext130 6C7E  
                                               __ptext122 74EC  
                                               __ptext114 6532  
                                               __ptext106 5F3C  
                                               __ptext211 798C  
                                               __ptext203 77F0  
                                               __ptext131 78FC  
                                               __ptext123 2BD4  
                                               __ptext115 611C  
                                               __ptext107 60AA  
                                               __ptext220 7942  
                                               __ptext212 6AC0  
                                               __ptext140 7914  
                                               __ptext132 789E  
                                               __ptext124 7336  
                                               __ptext116 7198  
                                               __ptext108 6718  
                                               __ptext221 798E  
                                               __ptext213 6E46  
                                               __ptext205 77FE  
                                               __ptext141 2FC4  
                                               __ptext133 78A8  
                                               __ptext125 77D4  
                                               __ptext117 7748  
                                               __ptext109 3A20  
                                               __ptext230 0000  
                                               __ptext222 7948  
                                               __ptext214 75D4  
                                               __ptext206 759C  
                                               __ptext150 6DCA  
                                               __ptext142 13A0  
                                               __ptext134 5B96  
                                               __ptext126 5C24  
                                               __ptext118 78F4  
                                               __ptext223 760C  
                                               __ptext215 4E34  
                                               __ptext207 798A  
                                               __ptext151 6932  
                                               __ptext143 5284  
                                               __ptext135 7904  
                                               __ptext127 765E  
                                               __ptext119 77B8  
                                               __ptext224 794E  
                                               __ptext216 4C5A  
                                               __ptext208 7770  
                                               __ptext160 77E2  
                                               __ptext152 1818  
                                               __ptext144 64CE  
                                               __ptext136 790C  
                                               __ptext128 66B8  
                                               __ptext225 7990  
                                               __ptext217 7546  
                                               __ptext209 780C  
                                               __ptext161 5592  
                                               __ptext153 4882  
                                               __ptext145 6594  
                                               __ptext137 78B2  
                                               __ptext129 4F20  
                                               __ptext226 7954  
                                               __ptext218 78D0  
                                               __ptext170 735C  
                                               __ptext162 5EBE  
                                               __ptext154 6BA4  
                                               __ptext146 4650  
                                               __ptext138 71C4  
                                               __ptext227 7628  
                                               __ptext219 75F0  
                                               __ptext171 793C  
                                               __ptext163 3E9E  
                                               __ptext155 72E8  
                                               __ptext147 740E  
                                               __ptext139 5DBE  
                                               __ptext228 795A  
                                               __ptext180 7244  
                                               __ptext172 5000  
                                               __ptext164 56FC  
                                               __ptext156 2408  
                                               __ptext148 6A24  
                                               __ptext229 7992  
                                               __ptext181 775C  
                                               __ptext173 65F6  
                                               __ptext165 6A72  
                                               __ptext157 3D3C  
                                               __ptext149 5D38  
                                               __ptext190 7580  
                                               __ptext182 797C  
                                               __ptext174 750A  
                                               __ptext166 78BC  
                                               __ptext158 2980  
                                               __ptext191 4B6C  
                                               __ptext183 7980  
                                               __ptext175 78C6  
                                               __ptext167 388A  
                                               __ptext159 6776  
                                               __ptext192 4D48  
                                               __ptext184 36EE  
                                               __ptext176 77A8  
                                               __ptext168 70DA  
                                               __ptext193 7528  
                                               __ptext185 6034  
                                               __ptext177 7974  
                                               __ptext169 50DC  
                                               __ptext194 6D4A  
                                               __ptext186 7564  
                                               __ptext178 7978  
                                               __ptext195 639E  
                                               __ptext187 5CB0  
                                               __ptext179 7042  
                                               __ptext196 6404  
                                               __ptext188 5FB8  
                                               __ptext197 726E  
                                               __ptext189 6E08  
                                               __ptext198 6888  
                                               __ptext199 6984  
                                       _EncryptFRMPayload 4154  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D6  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0084  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 477C  
                                                ?___lwmod 0072  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 007C  
                               _RADIO_SetChannelFrequency 5DBE  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 5592  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0B18  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 13A0  
                                      ?_EncryptFRMPayload 0094  
                                     __end_of_readAndSend 66B8  
                            ??_INTERRUPT_InterruptManager 002A  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 7470  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 7894  
                           __end_of_RADIO_SetLoRaSyncWord 78C6  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1E2C  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00D5  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 4D48  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0080  
                                    RADIO_DIO0@dioMapping 00E6  
                                       _DutyCycleCallback 2120  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6E46  
                                                _ADC_Init 77F0  
                                                _ADC_Read 6FA2  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00A2  
                                __end_of_LORAWAN_GetState 7924  
                                 __end_ofi2_TMR_SwapTimer 6E84  
                                 __size_of_EncKeySchedule 0254  
                                      AssemblePacket@mhdr 00D2  
                                      AssemblePacket@port 00CA  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2BD4  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 6EBE  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 796C  
                                           _SwTimerCreate 6268  
                          __end_of_InitDefault868Channels 6404  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 75B8  
                      LORAWAN_SetCurrentDataRate@valueNew 0066  
                               __end_of_ValidateFrequency 6830  
                                        _SwTimerIsRunning 7490  
                                        _ExecuteLinkCheck 70A8  
                                    i2SwTimersInterrupt@i 0029  
                                                _INT1_ISR 7954  
                                _LORAWAN_SetDeviceAddress 7690  
                                                _INT2_ISR 7948  
                                       EncKeySchedule@key 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 7914  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF8D  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00EC  
                                     ?_RADIO_ReceiveStart 0096  
                                        _SwTimerReadValue 6D8C  
                                                _PIE1bits 000F9D  
                                                _PIE2bits 000FA0  
                                        _ExecuteDutyCycle 69D6  
                                         _HALDIO5PinValue 793C  
                                    RADIO_DIO1@dioMapping 00B1  
                               __end_of_SwTimersInterrupt 4C5A  
                                __size_of_TMR1_WriteTimer 001C  
                     __size_of_INTERRUPT_InterruptManager 0088  
                              __end_of_DIO2_ISR_Lora_Init 783E  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0096  
                                        GenerateSubkey@k2 0098  
                                                _PIR2bits 000FA1  
                                    ConfigureRadioRx@freq 0076  
                              ??_TMR3_SetInterruptHandler 0066  
                                           _TMR3_CallBack 759C  
                               __end_of_EncryptFRMPayload 42A8  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 03A7  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 65F6  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0067  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 00E8  
                                    __end_of_IO_pins_init 77A8  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 56FC  
                           EncryptFRMPayload@bufferLength 0096  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 780C  
                                ConfigureRadioTx@dataRate 007A  
                                                _TMR3_ISR 77FE  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F8  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0098  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6B5A  
                         __size_of_SetReceptionNotOkState 0066  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2120  
                                         ?_LORAWAN_RxDone 0166  
                                         ?_LORAWAN_TxDone 00A0  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0068  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init 783E  
                               __end_of_DutyCycleCallback 2408  
                                        __size_of_AESCmac 031C  
                                    ??_RADIO_ReceiveStart 0098  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 5FB8  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                __size_of_TMR3_StartTimer 0004  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0080  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3BB2  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 03AB  
                                       ___lmul@multiplier 0064  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 59CE  
                                               copy_data1 59EE  
                                   ?_INTERRUPT_Initialize 0001  
                                     _EncKeySchedule$4148 0068  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                _INT0_SetInterruptHandler 7988  
                             __end_of_RADIO_SetIQInverted 78A8  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 6B0E  
                                             _RADIO_Reset 7042  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0021  
                                      _RADIO_RegisterRead 735C  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 43F0  
                             __end_ofi2_SwTimersInterrupt 4F20  
                               _LORAWAN_GetMaxPayloadSize 6B0E  
                              LORAWAN_RxDone@extractedMic 03A3  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 0098  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00C2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                   handle16sInterrupt@counterSleepTimeout 0045  
                                          ?_TMR3_CallBack 0001  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 726E  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 75D4  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 6658  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0072  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 0056  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 5E40  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 00CA  
                                    AssemblePacket@buffer 00CB  
                                        SwTimersExecute@i 00E1  
                                      ??_ValidateDataRate 0064  
                                       ??_TMR3_Initialize 0066  
                                _TMR1_SetInterruptHandler 786C  
                                  _IOCB4_InterruptHandler 01E8  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 77D4  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 77C6  
                                   _TMR1_InterruptHandler 01EA  
                                        ??_GenerateSubkey 009A  
                                        _CountfOptsLength 54D6  
                                              _HALSPISend 78C6  
                                     ?_ComputeSessionKeys 0094  
                                          _rxWindowOffset FF7D  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 2FC4  
                                 __size_of_SysConfigSleep 0070  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 73EC  
                                           _UpdateTxPower 78EC  
                                    RADIO_Transmit@buffer 0096  
                         __end_of_RADIO_FHSSChangeChannel 7198  
                                         _allocatedTimers 00EF  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus 77E2  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 7924  
                                                __ptext10 7964  
                                                __ptext11 6BEE  
                                                __ptext20 7832  
                                                __ptext12 781A  
                                                __ptext21 7876  
                                                __ptext13 7450  
                                                __ptext30 7856  
                                                __ptext22 783E  
                                                __ptext14 7826  
                                                __ptext31 7470  
                                                __ptext23 784A  
                                                __ptext15 786C  
                                                __ptext40 4A7A  
                                                __ptext32 71F0  
                                                __ptext24 796C  
                                                __ptext16 7968  
                                                __ptext41 3FFC  
                                                __ptext33 7690  
                                                __ptext25 713C  
                                                __ptext17 7924  
                                                __ptext50 76D8  
                                                __ptext42 5648  
                                                __ptext34 721A  
                                                __ptext26 7880  
                                                __ptext18 7984  
                                                __ptext51 6C36  
                                                __ptext43 5352  
                                                __ptext35 6E84  
                                                __ptext27 788A  
                                                __ptext19 7986  
                                                __ptext60 5A5C  
                                                __ptext52 6EBE  
                                                __ptext44 6CC6  
                                                __ptext36 57B0  
                                                __ptext28 7988  
                                                __ptext61 26E2  
                                                __ptext53 72C0  
                                                __ptext45 6FD8  
                                                __ptext37 2120  
                                                __ptext29 78E4  
                                                __ptext70 2DD4  
                                                __ptext62 0098  
                                                __ptext54 716A  
                                                __ptext46 62D2  
                                                __ptext38 4524  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 73A6  
                                                __ptext63 61FE  
                                                __ptext55 646A  
                                                __ptext47 7784  
                                                __ptext39 74B0  
                                                __ptext80 7076  
                                                __ptext72 6B5A  
                                                __ptext64 7644  
                                                __ptext56 73CA  
                                                __ptext48 76A8  
                                                __ptext81 4984  
                                                __ptext73 42A8  
                                                __ptext65 31B2  
                                                __ptext57 3BB2  
                                                __ptext49 76C0  
                                                __ptext90 771E  
                                                __ptext82 6F32  
                                                __ptext74 7734  
                                                __ptext66 43F0  
                                                __ptext58 51B4  
                                                __ptext91 6830  
                                                __ptext83 74CE  
                                                __ptext75 7708  
                                                __ptext67 6338  
                                                __ptext59 68E0  
                                                __ptext92 477C  
                                                __ptext84 70A8  
                                                __ptext76 337A  
                                                __ptext68 7382  
                                                __ptext93 69D6  
                                                __ptext85 353C  
                                                __ptext77 67D4  
                                                __ptext69 7970  
                                                __ptext94 7894  
                                                __ptext86 73EC  
                                                __ptext78 700E  
                                                __ptext95 541A  
                                                __ptext87 76F0  
                                                __ptext79 6EF8  
                                                __ptext96 6B0E  
                                                __ptext88 6F6A  
                                                __ptext97 1E2C  
                                                __ptext89 78EC  
                                                __ptext98 1B34  
                                                __ptext99 792A  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 3FFC  
                                  __end_of_StartReTxTimer 4524  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 6338  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01B4  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 7942  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012C  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 009C  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 74EC  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 7450  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 75F0  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 0096  
                                           _timerOverflow 00F2  
                                            _SwTimerStart 5CB0  
                              __size_of_SwTimersInterrupt 00EE  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D6  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 000C  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00BB  
                                         GenerateSubkey@l 00AB  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 4E34  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00E2  
                             __end_of_ValidateChannelMask 6FA2  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 0090  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 7936  
                                       ??_TMR1_WriteTimer 0066  
                    __end_of_TMR3_DefaultInterruptHandler 798C  
                   __size_of_TMR3_DefaultInterruptHandler 0002  
                            _TMR3_DefaultInterruptHandler 798A  
                                              _RADIO_DIO0 646A  
                                              _RADIO_DIO1 6EBE  
                                              _RADIO_DIO2 6C36  
                                              _RADIO_DIO3 76D8  
                                              _RADIO_DIO4 76C0  
                                              _RADIO_DIO5 76A8  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 7994  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 7992  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset FF85  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 0094  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation FF7D  
                                              _RADIO_Init 388A  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0044  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 7978  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 2980  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 31B2  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 002A  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 5EBE  
                                       _RADIO_TxDone$1211 00DA  
                                      _EXT_INT_Initialize 713C  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 5FB8  
                                       ??_TMR3_StartTimer 0064  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0096  
                               __end_of_RADIO_ReceiveStop 750A  
                                         _SwTimersExecute 57B0  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 789E  
                                 ?_PIN_MANAGER_Initialize 0001  
                                         ??_TMR3_CallBack 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0012  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 009B  
                         __size_of_ExecuteRxParamSetupReq 0148  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2092 00BC  
                                     _LORAWAN_TxDone$2093 00C0  
                      __end_of_LORAWAN_LinkCheckConfigure 388A  
                               __end_of_RADIO_ReleaseData 793C  
                              _LORAWAN_LinkCheckConfigure 36EE  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 797C  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001C  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0082  
                               __size_of_SetJoinFailState 0024  
                        LORAWAN_LinkCheckConfigure@period 0096  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 70DA  
             __end_of_UpdateRetransmissionAckTimeoutState 6268  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0096  
                     _UpdateRetransmissionAckTimeoutState 61FE  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                             __size_of_handle16sInterrupt 0014  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001C  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$4143 0075  
                                          _AESEncode$4144 0077  
                                          _AESEncode$4145 0079  
                                   __end_of_DIO0_ISR_Lora 7960  
                                __end_of_SwTimerIsRunning 74B0  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 70DA  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                           ?_TMR3_DefaultInterruptHandler 0001  
                                            _rxWindowSize FF85  
                                  __end_of_EncKeySchedule 2BD4  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 7954  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6DCA  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 6A24  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 771E  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 7708  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3502 00A0  
                        __end_of_INT1_SetInterruptHandler 7894  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00DE  
                                   __size_of_TMR_ISR_lora 004E  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 7948  
                                    _SystemBlockingWaitMs 7244  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 0094  
                                 __size_of_EnableChannels 0016  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress 7678  
                            __end_of_ExecuteRxTimingSetup 73CA  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init 7796  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 6532  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 64CE  
                __end_of_LORAWAN_SetApplicationSessionKey 7244  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 721A  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00E2  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 73CA  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6C36  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 7528  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4C5A  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                         _PIN_MANAGER_IOC 78D0  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00E8  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 7310  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 016A  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 26E2  
                             __end_of_RADIO_SetModulation 7914  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00DD  
                                     ?i2_TMR_GetDeltaTime 0009  
